; ModuleID = 'build/adafruit_feather_stm32f405/subsys/console/getchar/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.tty_serial = type { %struct.device*, %struct.k_sem, i8*, i32, i16, i16, i32, %struct.k_sem, i8*, i32, i16, i16, i32 }
%struct.k_sem = type { %union.anon, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.k_spinlock = type {}
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232564 to i8*), void (i8*)* inttoptr (i32 134230139 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232564 to i8*), void (i8*)* inttoptr (i32 134230119 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232564 to i8*), void (i8*)* inttoptr (i32 134230109 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232564 to i8*), void (i8*)* inttoptr (i32 134230209 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232564 to i8*), void (i8*)* inttoptr (i32 134230199 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232564 to i8*), void (i8*)* inttoptr (i32 134230189 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232564 to i8*), void (i8*)* inttoptr (i32 134230179 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232564 to i8*), void (i8*)* inttoptr (i32 134230169 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232564 to i8*), void (i8*)* inttoptr (i32 134230159 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232804 to i8*), void (i8*)* inttoptr (i32 134231489 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232564 to i8*), void (i8*)* inttoptr (i32 134230149 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232564 to i8*), void (i8*)* inttoptr (i32 134230129 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [56 x i8] c"Start typing characters to see their hex codes printed\0A\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"char: [0x%x] %c\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [41 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@console_serial = internal global %struct.tty_serial zeroinitializer, align 4, !dbg !195
@console_txbuf = internal global [16 x i8] zeroinitializer, align 1, !dbg !292
@console_rxbuf = internal global [16 x i8] zeroinitializer, align 1, !dbg !286
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !339
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !347
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !488
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !524
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.33, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !534
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !539
@.str.32 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.33 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !559
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !752
@.str.34 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !714
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !697
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !670
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !686
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !716
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !729
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !731
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !733
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !735
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !737
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !739
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !741
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !743
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !745
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !747
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !757
@.str.36 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !786
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !880
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !869
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@debug_hook_in = internal unnamed_addr global i32 (i8)* null, align 4, !dbg !921
@debug_hook_out = internal unnamed_addr global i32 (i8)* @debug_hook_out_nop, align 4, !dbg !1072
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1022
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1064
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1066
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1015
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1082
@esc_state = internal global i32 0, align 4, !dbg !1107
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1115
@end = internal unnamed_addr global i8 0, align 1, !dbg !1117
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1111
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1113
@.str.59 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.58 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !779
@.str.63 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1123
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1409
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1375
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1361
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1300
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !777
@.str.1.64 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1411
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1379
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1377
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1317
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !775
@.str.2.65 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1424
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1383
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1381
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1323
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !773
@.str.3.66 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1426
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1387
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1385
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1329
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !771
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1428
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1391
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1389
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1335
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !769
@.str.5.67 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1430
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1395
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1393
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1341
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !767
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1432
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1399
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1397
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1347
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !765
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1434
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1403
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1401
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1353
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !763
@.str.8 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1436
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1407
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1405
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1359
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !781
@.str.73 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1438
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1674
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1624
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1676
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1615
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1617
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1626
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1634
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1657
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1660
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 39, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1663
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !853
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1702
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1813
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1815
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1811
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1782
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1817
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1298
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.64, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1315
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.65, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1321
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.66, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1327
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1333
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1339
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1345
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1351
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1357
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1907
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1947
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1950
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1954
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1960
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2169
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2178
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2185
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2190
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.125 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.131, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.132, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.133, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.135, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.129, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.136, i32 0, i32 0)], align 4, !dbg !2216
@.str.130 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.131 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.132 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.133 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.134 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.135 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.129 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.136 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2328
@.str.8.128 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2341
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2364
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2472
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2475
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2477
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2183
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2180
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2479
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2515
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2047
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2513
@.str.206 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2518
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3242 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !3246, !srcloc !3247
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !3248, !srcloc !3249
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !3250, !srcloc !3251
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !3252, !srcloc !3253
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3254, !srcloc !3255
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !3256, !srcloc !3257
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !3258, !srcloc !3259
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !3260, !srcloc !3261
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !3262, !srcloc !3263
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !3264, !srcloc !3265
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !3266, !srcloc !3267
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !3268, !srcloc !3269
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !3270, !srcloc !3271
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !3272, !srcloc !3273
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !3274, !srcloc !3275
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !3276, !srcloc !3277
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !3278, !srcloc !3279
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !3280, !srcloc !3281
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3282, !srcloc !3283
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !3284, !srcloc !3285
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !3286, !srcloc !3287
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3288, !srcloc !3289
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !3290, !srcloc !3291
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3292, !srcloc !3293
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !3294, !srcloc !3295
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !3296, !srcloc !3297
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !3298, !srcloc !3299
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !3300, !srcloc !3303
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !3304, !srcloc !3305
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3306, !srcloc !3307
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3308, !srcloc !3309
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3310, !srcloc !3311
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3312, !srcloc !3313
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !3314, !srcloc !3315
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !3316, !srcloc !3317
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !3318, !srcloc !3319
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !3320, !srcloc !3321
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3322, !srcloc !3323
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3324, !srcloc !3325
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3326, !srcloc !3327
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3350, !srcloc !3351
  ret void, !dbg !3352
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3355 {
  %1 = tail call i32 @console_init() #25, !dbg !3360
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i32 0, i32 0)) #25, !dbg !3361
  br label %2, !dbg !3362

2:                                                ; preds = %0, %2
  %3 = tail call i32 @console_getchar() #25, !dbg !3363
  %4 = and i32 %3, 255, !dbg !3364
  call void @llvm.dbg.value(metadata i32 %3, metadata !3358, metadata !DIExpression()), !dbg !3365
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 noundef %4, i32 noundef %4) #25, !dbg !3366
  br label %2, !dbg !3362, !llvm.loop !3367
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3371, metadata !DIExpression()), !dbg !3372
  ret i32 0, !dbg !3373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3374 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3378, metadata !DIExpression()), !dbg !3379
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3380
  ret void, !dbg !3381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3382 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3385
  ret i8* %1, !dbg !3386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3387 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3399, metadata !DIExpression()), !dbg !3408
  call void @llvm.dbg.value(metadata i8* %0, metadata !3398, metadata !DIExpression()), !dbg !3408
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3409
  ret void, !dbg !3411
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3416, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i8* %1, metadata !3417, metadata !DIExpression()), !dbg !3418
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3419
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3419
  ret i32 %4, !dbg !3420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3421 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3433, metadata !DIExpression()), !dbg !3434
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3430, metadata !DIExpression()), !dbg !3434
  call void @llvm.dbg.value(metadata i8* %1, metadata !3431, metadata !DIExpression()), !dbg !3434
  call void @llvm.dbg.value(metadata i8* %2, metadata !3432, metadata !DIExpression()), !dbg !3434
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3435
  ret void, !dbg !3436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3437 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3441, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.value(metadata i32 %1, metadata !3442, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.value(metadata i32 0, metadata !3443, metadata !DIExpression()), !dbg !3444
  %3 = icmp eq i32 %1, 0, !dbg !3445
  br i1 %3, label %13, label %4, !dbg !3448

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3443, metadata !DIExpression()), !dbg !3444
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3449
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3451
  %8 = load i8, i8* %7, align 1, !dbg !3451
  %9 = zext i8 %8 to i32, !dbg !3451
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3449
  %11 = add nuw i32 %5, 1, !dbg !3452
  call void @llvm.dbg.value(metadata i32 %11, metadata !3443, metadata !DIExpression()), !dbg !3444
  %12 = icmp eq i32 %11, %1, !dbg !3445
  br i1 %12, label %13, label %4, !dbg !3448, !llvm.loop !3453

13:                                               ; preds = %4, %2
  ret void, !dbg !3455
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3456 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3460, metadata !DIExpression()), !dbg !3462
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3463
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3463
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3461, metadata !DIExpression()), !dbg !3464
  call void @llvm.va_start(i8* nonnull %3), !dbg !3465
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3466
  %5 = load i32, i32* %4, align 4, !dbg !3466
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3466
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3466
  call void @llvm.va_end(i8* nonnull %3), !dbg !3467
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3468
  ret void, !dbg !3468
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3469 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3473, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.value(metadata i32 %1, metadata !3474, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.value(metadata i8* %2, metadata !3475, metadata !DIExpression()), !dbg !3478
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3479
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3479
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3476, metadata !DIExpression()), !dbg !3480
  call void @llvm.va_start(i8* nonnull %5), !dbg !3481
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3482
  %7 = load i32, i32* %6, align 4, !dbg !3482
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3482
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3482
  call void @llvm.dbg.value(metadata i32 %9, metadata !3477, metadata !DIExpression()), !dbg !3478
  call void @llvm.va_end(i8* nonnull %5), !dbg !3483
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3484
  ret i32 %9, !dbg !3485
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3486 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3493, metadata !DIExpression()), !dbg !3500
  call void @llvm.dbg.value(metadata i8* %0, metadata !3490, metadata !DIExpression()), !dbg !3500
  call void @llvm.dbg.value(metadata i32 %1, metadata !3491, metadata !DIExpression()), !dbg !3500
  call void @llvm.dbg.value(metadata i8* %2, metadata !3492, metadata !DIExpression()), !dbg !3500
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3501
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3501
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3494, metadata !DIExpression()), !dbg !3502
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3503
  store i8* %0, i8** %7, align 4, !dbg !3503
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3503
  store i32 %1, i32* %8, align 4, !dbg !3503
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3503
  store i32 0, i32* %9, align 4, !dbg !3503
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3504
  %10 = load i32, i32* %9, align 4, !dbg !3505
  %11 = load i32, i32* %8, align 4, !dbg !3507
  %12 = icmp slt i32 %10, %11, !dbg !3508
  br i1 %12, label %13, label %15, !dbg !3509

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3510
  store i8 0, i8* %14, align 1, !dbg !3512
  br label %15, !dbg !3513

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3514
  ret i32 %10, !dbg !3515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3521, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3522, metadata !DIExpression()), !dbg !3523
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3524
  %4 = load i8*, i8** %3, align 4, !dbg !3524
  %5 = icmp eq i8* %4, null, !dbg !3526
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3527
  br i1 %5, label %12, label %8, !dbg !3528

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3529
  %10 = load i32, i32* %9, align 4, !dbg !3529
  %11 = icmp slt i32 %7, %10, !dbg !3530
  br i1 %11, label %15, label %12, !dbg !3531

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3532
  %14 = add nsw i32 %7, 1, !dbg !3534
  store i32 %14, i32* %13, align 4, !dbg !3534
  br label %25, !dbg !3535

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3536
  %17 = icmp eq i32 %7, %16, !dbg !3538
  br i1 %17, label %18, label %21, !dbg !3539

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3540
  store i32 %19, i32* %6, align 4, !dbg !3540
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3542
  store i8 0, i8* %20, align 1, !dbg !3543
  br label %25, !dbg !3544

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3545
  %23 = add nsw i32 %7, 1, !dbg !3547
  store i32 %23, i32* %6, align 4, !dbg !3547
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3548
  store i8 %22, i8* %24, align 1, !dbg !3549
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3550
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3551 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3561, metadata !DIExpression()), !dbg !3565
  call void @llvm.dbg.value(metadata i8* %1, metadata !3562, metadata !DIExpression()), !dbg !3565
  call void @llvm.dbg.value(metadata i8* %2, metadata !3563, metadata !DIExpression()), !dbg !3565
  call void @llvm.dbg.value(metadata i8* %3, metadata !3564, metadata !DIExpression()), !dbg !3565
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3566
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3567
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3568
  unreachable, !dbg !3569
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3570 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3674
  ret %struct.k_thread* %1, !dbg !3675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3676 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3681, metadata !DIExpression()), !dbg !3682
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3683, !srcloc !3685
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3686
  ret void, !dbg !3687
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3688 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3689, !srcloc !3691
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3692
  ret %struct.k_thread* %1, !dbg !3693
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3694 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3705, metadata !DIExpression()), !dbg !3709
  call void @llvm.dbg.value(metadata i8* %1, metadata !3706, metadata !DIExpression()), !dbg !3709
  %3 = icmp eq i8* %1, null, !dbg !3710
  br i1 %3, label %8, label %4, !dbg !3712

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3713
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3713
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3707, metadata !DIExpression()), !dbg !3709
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3714, !range !3715
  call void @llvm.dbg.value(metadata i32 %7, metadata !3708, metadata !DIExpression()), !dbg !3709
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3716
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3717
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3719 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3723, metadata !DIExpression()), !dbg !3727
  call void @llvm.dbg.value(metadata i8* %1, metadata !3724, metadata !DIExpression()), !dbg !3727
  call void @llvm.dbg.value(metadata i8* %1, metadata !3725, metadata !DIExpression()), !dbg !3727
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3728
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3726, metadata !DIExpression()), !dbg !3727
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3729
  %5 = ptrtoint i8* %4 to i32, !dbg !3730
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3730
  %7 = sub i32 %5, %6, !dbg !3730
  %8 = lshr i32 %7, 3, !dbg !3731
  ret i32 %8, !dbg !3732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3733 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3737, metadata !DIExpression()), !dbg !3742
  call void @llvm.dbg.value(metadata i32 %1, metadata !3738, metadata !DIExpression()), !dbg !3742
  call void @llvm.dbg.value(metadata i1 %2, metadata !3739, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3742
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3743
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3740, metadata !DIExpression()), !dbg !3742
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3741, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3742
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3744
  %6 = bitcast i8* %5 to i16*, !dbg !3744
  %7 = load i16, i16* %6, align 2, !dbg !3744
  %8 = and i16 %7, -2, !dbg !3748
  %9 = zext i1 %2 to i16, !dbg !3748
  %10 = or i16 %8, %9, !dbg !3748
  store i16 %10, i16* %6, align 2, !dbg !3744
  ret void, !dbg !3749
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3750 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3754, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.value(metadata i32 %1, metadata !3755, metadata !DIExpression()), !dbg !3756
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3757
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3759
  br i1 %4, label %7, label %5, !dbg !3760

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3761
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3763
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3764
  br label %7, !dbg !3765

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3766, !range !3768
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3769
  br i1 %9, label %13, label %10, !dbg !3770

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3771
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3773, !range !3768
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3774
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3775
  call void @llvm.dbg.value(metadata i32 %12, metadata !3755, metadata !DIExpression()), !dbg !3756
  br label %13, !dbg !3776

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3755, metadata !DIExpression()), !dbg !3756
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3777
  ret void, !dbg !3778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3779 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3783, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.value(metadata i32 %1, metadata !3784, metadata !DIExpression()), !dbg !3785
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3786
  %4 = add i32 %3, %1, !dbg !3787
  ret i32 %4, !dbg !3788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3789 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3793, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %1, metadata !3794, metadata !DIExpression()), !dbg !3795
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3796
  %4 = and i32 %3, 1, !dbg !3797
  %5 = icmp ne i32 %4, 0, !dbg !3796
  ret i1 %5, !dbg !3798
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3799 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3801, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata i32 %1, metadata !3802, metadata !DIExpression()), !dbg !3806
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3807, !range !3808
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3809
  call void @llvm.dbg.value(metadata i32 %4, metadata !3803, metadata !DIExpression()), !dbg !3810
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3811
  ret void, !dbg !3812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3813 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3817, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i32 %1, metadata !3818, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i32 %2, metadata !3819, metadata !DIExpression()), !dbg !3822
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3823
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3824
  %6 = add i32 %5, %4, !dbg !3825
  call void @llvm.dbg.value(metadata i32 %6, metadata !3820, metadata !DIExpression()), !dbg !3822
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3826
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3827
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3828
  ret void, !dbg !3829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3830 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3832, metadata !DIExpression()), !dbg !3834
  call void @llvm.dbg.value(metadata i32 %1, metadata !3833, metadata !DIExpression()), !dbg !3834
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3835
  %4 = sub i32 %1, %3, !dbg !3836
  ret i32 %4, !dbg !3837
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3838 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3840, metadata !DIExpression()), !dbg !3845
  call void @llvm.dbg.value(metadata i32 %1, metadata !3841, metadata !DIExpression()), !dbg !3845
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3846, !range !3808
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3847
  call void @llvm.dbg.value(metadata i32 %4, metadata !3842, metadata !DIExpression()), !dbg !3848
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3849
  ret void, !dbg !3850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3851 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3855, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %1, metadata !3856, metadata !DIExpression()), !dbg !3857
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3858
  %4 = lshr i32 %3, 1, !dbg !3859
  ret i32 %4, !dbg !3860
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3861 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3865, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata i32 %1, metadata !3866, metadata !DIExpression()), !dbg !3868
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3869
  %4 = add i32 %1, 1, !dbg !3870
  %5 = sub i32 %4, %3, !dbg !3871
  call void @llvm.dbg.value(metadata i32 %5, metadata !3867, metadata !DIExpression()), !dbg !3868
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3872, !range !3873
  %7 = sub nsw i32 31, %6, !dbg !3874
  ret i32 %7, !dbg !3875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3876 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3880, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata i32 %1, metadata !3881, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata i32 %2, metadata !3882, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3883, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3889
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3890
  %5 = load i32, i32* %4, align 4, !dbg !3890
  %6 = icmp eq i32 %5, 0, !dbg !3891
  br i1 %6, label %7, label %12, !dbg !3892

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3893
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3895
  %10 = load i32, i32* %9, align 4, !dbg !3896
  %11 = or i32 %10, %8, !dbg !3896
  store i32 %11, i32* %9, align 4, !dbg !3896
  store i32 %1, i32* %4, align 4, !dbg !3897
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3898
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3899
  br label %14, !dbg !3900

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3885, metadata !DIExpression()), !dbg !3901
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3902, !range !3903
  call void @llvm.dbg.value(metadata i32 %13, metadata !3888, metadata !DIExpression()), !dbg !3901
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3904
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3905
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3906
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3907
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3909 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3911, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i32 %1, metadata !3912, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i32 %2, metadata !3913, metadata !DIExpression()), !dbg !3914
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3915
  ret void, !dbg !3916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3917 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3919, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata i32 %1, metadata !3920, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata i32 %2, metadata !3921, metadata !DIExpression()), !dbg !3922
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3923
  ret void, !dbg !3924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3925 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3927, metadata !DIExpression()), !dbg !3929
  call void @llvm.dbg.value(metadata i32 %1, metadata !3928, metadata !DIExpression()), !dbg !3929
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3930
  ret i32 %3, !dbg !3931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3932 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3936, metadata !DIExpression()), !dbg !3941
  call void @llvm.dbg.value(metadata i32 %1, metadata !3937, metadata !DIExpression()), !dbg !3941
  call void @llvm.dbg.value(metadata i32 %2, metadata !3938, metadata !DIExpression()), !dbg !3941
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3942
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3939, metadata !DIExpression()), !dbg !3941
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3940, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3941
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3940, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3941
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3943
  call void @llvm.dbg.value(metadata i8* %5, metadata !3940, metadata !DIExpression()), !dbg !3941
  %6 = bitcast i8* %5 to i16*, !dbg !3944
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3947
  %8 = load i16, i16* %7, align 2, !dbg !3947
  %9 = zext i16 %8 to i32, !dbg !3947
  ret i32 %9, !dbg !3948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3949 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3953, metadata !DIExpression()), !dbg !3954
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3955
  ret %struct.chunk_unit_t* %2, !dbg !3956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3957 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3961, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata i32 %1, metadata !3962, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata i32 %2, metadata !3963, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata i32 %3, metadata !3964, metadata !DIExpression()), !dbg !3967
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3968
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3965, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3966, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3967
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3969
  call void @llvm.dbg.value(metadata i8* %6, metadata !3966, metadata !DIExpression()), !dbg !3967
  %7 = trunc i32 %3 to i16, !dbg !3970
  %8 = bitcast i8* %6 to i16*, !dbg !3973
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3974
  store i16 %7, i16* %9, align 2, !dbg !3975
  ret void, !dbg !3976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3977 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3981, metadata !DIExpression()), !dbg !3982
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3983
  ret i32 %2, !dbg !3984
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3985 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3989, metadata !DIExpression()), !dbg !3991
  call void @llvm.dbg.value(metadata i32 %1, metadata !3990, metadata !DIExpression()), !dbg !3991
  %3 = add i32 %1, 4, !dbg !3992
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3993
  ret i32 %4, !dbg !3994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3999, metadata !DIExpression()), !dbg !4000
  %2 = add i32 %0, 7, !dbg !4001
  %3 = lshr i32 %2, 3, !dbg !4002
  ret i32 %3, !dbg !4003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4004 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4008, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata i32 %1, metadata !4009, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata i32 %2, metadata !4010, metadata !DIExpression()), !dbg !4011
  %4 = shl i32 %2, 1, !dbg !4012
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4013
  ret void, !dbg !4014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4015 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4017, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata i32 %1, metadata !4018, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata i32 %2, metadata !4019, metadata !DIExpression()), !dbg !4020
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4021
  ret void, !dbg !4022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4023 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4025, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.value(metadata i32 %1, metadata !4026, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.value(metadata i32 %2, metadata !4027, metadata !DIExpression()), !dbg !4033
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4034
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4028, metadata !DIExpression()), !dbg !4033
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4035
  %6 = icmp eq i32 %5, %1, !dbg !4036
  br i1 %6, label %7, label %14, !dbg !4037

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4038
  %9 = xor i32 %8, -1, !dbg !4040
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4041
  %11 = load i32, i32* %10, align 4, !dbg !4042
  %12 = and i32 %11, %9, !dbg !4042
  store i32 %12, i32* %10, align 4, !dbg !4042
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4043
  store i32 0, i32* %13, align 4, !dbg !4044
  br label %17, !dbg !4045

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4046
  call void @llvm.dbg.value(metadata i32 %15, metadata !4029, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %5, metadata !4032, metadata !DIExpression()), !dbg !4047
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4048
  store i32 %5, i32* %16, align 4, !dbg !4049
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4050
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4051
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4053 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4055, metadata !DIExpression()), !dbg !4057
  call void @llvm.dbg.value(metadata i32 %1, metadata !4056, metadata !DIExpression()), !dbg !4057
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4058
  ret i32 %3, !dbg !4059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4060 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4064, metadata !DIExpression()), !dbg !4071
  call void @llvm.dbg.value(metadata i8* %1, metadata !4065, metadata !DIExpression()), !dbg !4071
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4072
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4072
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4066, metadata !DIExpression()), !dbg !4071
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4073
  call void @llvm.dbg.value(metadata i32 %5, metadata !4067, metadata !DIExpression()), !dbg !4071
  %6 = ptrtoint i8* %1 to i32, !dbg !4074
  call void @llvm.dbg.value(metadata i32 %6, metadata !4068, metadata !DIExpression()), !dbg !4071
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4075
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4075
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4076
  call void @llvm.dbg.value(metadata i32 %9, metadata !4069, metadata !DIExpression()), !dbg !4071
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4077
  %11 = shl i32 %10, 3, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %11, metadata !4070, metadata !DIExpression()), !dbg !4071
  %12 = sub i32 %9, %6, !dbg !4079
  %13 = add i32 %12, %11, !dbg !4080
  ret i32 %13, !dbg !4081
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4082 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4086, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.value(metadata i32 %1, metadata !4087, metadata !DIExpression()), !dbg !4092
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4093
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4093
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4088, metadata !DIExpression()), !dbg !4092
  %5 = icmp eq i32 %1, 0, !dbg !4094
  br i1 %5, label %19, label %6, !dbg !4096

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4097
  br i1 %7, label %19, label %8, !dbg !4098

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4099, !range !3715
  call void @llvm.dbg.value(metadata i32 %9, metadata !4090, metadata !DIExpression()), !dbg !4092
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4100
  call void @llvm.dbg.value(metadata i32 %10, metadata !4091, metadata !DIExpression()), !dbg !4092
  %11 = icmp eq i32 %10, 0, !dbg !4101
  br i1 %11, label %19, label %12, !dbg !4103

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4104
  %14 = icmp ugt i32 %13, %9, !dbg !4106
  br i1 %14, label %15, label %17, !dbg !4107

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4108
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4110
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4111
  br label %17, !dbg !4112

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4113
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4114
  call void @llvm.dbg.value(metadata i8* %18, metadata !4089, metadata !DIExpression()), !dbg !4092
  br label %19, !dbg !4115

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4092
  ret i8* %20, !dbg !4116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4117 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4121, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.value(metadata i32 %1, metadata !4122, metadata !DIExpression()), !dbg !4123
  %3 = lshr i32 %1, 3, !dbg !4124
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4125
  %5 = load i32, i32* %4, align 4, !dbg !4125
  %6 = icmp uge i32 %3, %5, !dbg !4126
  ret i1 %6, !dbg !4127
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4128 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4132, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.value(metadata i32 %1, metadata !4133, metadata !DIExpression()), !dbg !4147
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4148
  call void @llvm.dbg.value(metadata i32 %3, metadata !4134, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4135, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4147
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4149
  %5 = load i32, i32* %4, align 4, !dbg !4149
  %6 = icmp eq i32 %5, 0, !dbg !4150
  br i1 %6, label %19, label %7, !dbg !4151

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4152
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4153
  call void @llvm.dbg.value(metadata i32 %9, metadata !4139, metadata !DIExpression()), !dbg !4153
  call void @llvm.dbg.value(metadata i32 %8, metadata !4140, metadata !DIExpression()), !dbg !4154
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4155
  %11 = icmp ult i32 %10, %1, !dbg !4157
  br i1 %11, label %13, label %12, !dbg !4158

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4159
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4161
  store i32 %14, i32* %4, align 4, !dbg !4162
  %15 = add nsw i32 %9, -1, !dbg !4163
  call void @llvm.dbg.value(metadata i32 %15, metadata !4139, metadata !DIExpression()), !dbg !4153
  %16 = icmp eq i32 %15, 0, !dbg !4163
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4164
  br i1 %18, label %19, label %7, !dbg !4164, !llvm.loop !4165

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4168
  %21 = load i32, i32* %20, align 4, !dbg !4168
  %22 = add nsw i32 %3, 1, !dbg !4169
  %23 = shl nsw i32 -1, %22, !dbg !4169
  %24 = and i32 %21, %23, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %24, metadata !4142, metadata !DIExpression()), !dbg !4147
  %25 = icmp eq i32 %24, 0, !dbg !4171
  br i1 %25, label %30, label %26, !dbg !4172

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4173, !range !3873
  call void @llvm.dbg.value(metadata i32 %27, metadata !4143, metadata !DIExpression()), !dbg !4174
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4175
  %29 = load i32, i32* %28, align 4, !dbg !4175
  call void @llvm.dbg.value(metadata i32 %29, metadata !4146, metadata !DIExpression()), !dbg !4174
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4176
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4147
  ret i32 %31, !dbg !4177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4178 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4180, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.value(metadata i32 %1, metadata !4181, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.value(metadata i32 %2, metadata !4182, metadata !DIExpression()), !dbg !4186
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4187
  call void @llvm.dbg.value(metadata i32 %4, metadata !4183, metadata !DIExpression()), !dbg !4186
  %5 = sub i32 %2, %1, !dbg !4188
  call void @llvm.dbg.value(metadata i32 %5, metadata !4184, metadata !DIExpression()), !dbg !4186
  %6 = sub i32 %4, %5, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %6, metadata !4185, metadata !DIExpression()), !dbg !4186
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4190
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4191
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4192
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4193
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4194
  ret void, !dbg !4195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4196 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4200, metadata !DIExpression()), !dbg !4204
  call void @llvm.dbg.value(metadata i32 %1, metadata !4201, metadata !DIExpression()), !dbg !4204
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4205
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4202, metadata !DIExpression()), !dbg !4204
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4206
  call void @llvm.dbg.value(metadata i8* %4, metadata !4203, metadata !DIExpression()), !dbg !4204
  ret i8* %4, !dbg !4207
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4208 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4212, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %1, metadata !4213, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %2, metadata !4214, metadata !DIExpression()), !dbg !4224
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4225
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4225
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4215, metadata !DIExpression()), !dbg !4224
  %6 = sub i32 0, %1, !dbg !4226
  %7 = and i32 %6, %1, !dbg !4227
  call void @llvm.dbg.value(metadata i32 %7, metadata !4217, metadata !DIExpression()), !dbg !4224
  %8 = icmp eq i32 %7, %1, !dbg !4228
  br i1 %8, label %13, label %9, !dbg !4230

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %10, metadata !4213, metadata !DIExpression()), !dbg !4224
  %11 = icmp ult i32 %7, 4, !dbg !4233
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4233
  br label %17, !dbg !4233

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4234
  br i1 %14, label %15, label %17, !dbg !4237

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4238
  br label %57, !dbg !4240

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4224
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4241
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4213, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %19, metadata !4216, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %18, metadata !4217, metadata !DIExpression()), !dbg !4224
  %21 = icmp eq i32 %2, 0, !dbg !4242
  br i1 %21, label %57, label %22, !dbg !4244

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4245
  br i1 %23, label %57, label %24, !dbg !4246

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4247
  %26 = add i32 %25, %20, !dbg !4248
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4249, !range !3715
  call void @llvm.dbg.value(metadata i32 %27, metadata !4218, metadata !DIExpression()), !dbg !4224
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4250
  call void @llvm.dbg.value(metadata i32 %28, metadata !4219, metadata !DIExpression()), !dbg !4224
  %29 = icmp eq i32 %28, 0, !dbg !4251
  br i1 %29, label %57, label %30, !dbg !4253

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4254
  call void @llvm.dbg.value(metadata i8* %31, metadata !4220, metadata !DIExpression()), !dbg !4224
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4255
  %33 = ptrtoint i8* %32 to i32, !dbg !4255
  %34 = add i32 %20, -1, !dbg !4255
  %35 = add i32 %34, %33, !dbg !4255
  %36 = sub i32 0, %20, !dbg !4255
  %37 = and i32 %35, %36, !dbg !4255
  %38 = inttoptr i32 %37 to i8*, !dbg !4256
  %39 = sub i32 0, %18, !dbg !4257
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4257
  call void @llvm.dbg.value(metadata i8* %40, metadata !4220, metadata !DIExpression()), !dbg !4224
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4258
  %42 = ptrtoint i8* %41 to i32, !dbg !4258
  %43 = add i32 %42, 7, !dbg !4258
  %44 = and i32 %43, -8, !dbg !4258
  call void @llvm.dbg.value(metadata i32 %44, metadata !4221, metadata !DIExpression()), !dbg !4224
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4259
  call void @llvm.dbg.value(metadata i32 %45, metadata !4222, metadata !DIExpression()), !dbg !4224
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4260
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4261
  %48 = sub i32 %44, %47, !dbg !4261
  %49 = ashr exact i32 %48, 3, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %49, metadata !4223, metadata !DIExpression()), !dbg !4224
  %50 = icmp ugt i32 %45, %28, !dbg !4262
  br i1 %50, label %51, label %52, !dbg !4264

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4265
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4267
  br label %52, !dbg !4268

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4269
  %54 = icmp ugt i32 %53, %49, !dbg !4271
  br i1 %54, label %55, label %56, !dbg !4272

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4273
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4275
  br label %56, !dbg !4276

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4277
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4224
  ret i8* %58, !dbg !4278
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4279 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4283, metadata !DIExpression()), !dbg !4302
  call void @llvm.dbg.value(metadata i8* %1, metadata !4284, metadata !DIExpression()), !dbg !4302
  call void @llvm.dbg.value(metadata i32 %2, metadata !4285, metadata !DIExpression()), !dbg !4302
  call void @llvm.dbg.value(metadata i32 %3, metadata !4286, metadata !DIExpression()), !dbg !4302
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4303
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4303
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4287, metadata !DIExpression()), !dbg !4302
  %7 = icmp eq i8* %1, null, !dbg !4304
  br i1 %7, label %8, label %10, !dbg !4306

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4307
  br label %59, !dbg !4309

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4310
  br i1 %11, label %12, label %13, !dbg !4312

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4313
  br label %59, !dbg !4315

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4316
  br i1 %14, label %59, label %15, !dbg !4318

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4319, !range !3715
  call void @llvm.dbg.value(metadata i32 %16, metadata !4288, metadata !DIExpression()), !dbg !4302
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4320
  call void @llvm.dbg.value(metadata i32 %17, metadata !4289, metadata !DIExpression()), !dbg !4302
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4321
  %19 = ptrtoint i8* %1 to i32, !dbg !4322
  %20 = ptrtoint i8* %18 to i32, !dbg !4322
  %21 = sub i32 %19, %20, !dbg !4322
  call void @llvm.dbg.value(metadata i32 %21, metadata !4290, metadata !DIExpression()), !dbg !4302
  %22 = add i32 %21, %3, !dbg !4323
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %23, metadata !4291, metadata !DIExpression()), !dbg !4302
  %24 = icmp eq i32 %2, 0, !dbg !4325
  br i1 %24, label %29, label %25, !dbg !4326

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4327
  %27 = and i32 %26, %19, !dbg !4328
  %28 = icmp eq i32 %27, 0, !dbg !4328
  br i1 %28, label %29, label %49, !dbg !4329

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4330
  %31 = icmp eq i32 %23, %30, !dbg !4331
  br i1 %31, label %59, label %32, !dbg !4332

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4333
  br i1 %33, label %34, label %36, !dbg !4334

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4335
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4337
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4338
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4339
  br label %59, !dbg !4340

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4341
  br i1 %37, label %49, label %38, !dbg !4342

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4343
  %40 = add i32 %39, %30, !dbg !4344
  %41 = icmp ult i32 %40, %23, !dbg !4345
  br i1 %41, label %49, label %42, !dbg !4346

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4347
  call void @llvm.dbg.value(metadata i32 %43, metadata !4292, metadata !DIExpression()), !dbg !4348
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4349
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4350
  %45 = icmp ult i32 %43, %44, !dbg !4352
  br i1 %45, label %46, label %48, !dbg !4353

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4354
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4356
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4357
  br label %48, !dbg !4358

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4359
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4360
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4361
  call void @llvm.dbg.value(metadata i8* %50, metadata !4298, metadata !DIExpression()), !dbg !4302
  %51 = icmp eq i8* %50, null, !dbg !4362
  br i1 %51, label %59, label %52, !dbg !4363

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4364, !range !3808
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4365
  %55 = sub i32 %54, %21, !dbg !4366
  call void @llvm.dbg.value(metadata i32 %55, metadata !4299, metadata !DIExpression()), !dbg !4367
  %56 = icmp ult i32 %55, %3, !dbg !4368
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4368
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #25, !dbg !4369
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4370
  br label %59, !dbg !4371

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4302
  ret i8* %60, !dbg !4372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4373 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4377, metadata !DIExpression()), !dbg !4379
  call void @llvm.dbg.value(metadata i32 %1, metadata !4378, metadata !DIExpression()), !dbg !4379
  %3 = shl i32 %1, 3, !dbg !4380
  %4 = add i32 %3, -4, !dbg !4381
  ret i32 %4, !dbg !4382
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4383 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4387, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.value(metadata i8* %1, metadata !4388, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.value(metadata i32 %2, metadata !4389, metadata !DIExpression()), !dbg !4398
  %4 = add i32 %2, -4, !dbg !4399
  call void @llvm.dbg.value(metadata i32 %4, metadata !4389, metadata !DIExpression()), !dbg !4398
  %5 = ptrtoint i8* %1 to i32, !dbg !4400
  %6 = add i32 %5, 7, !dbg !4400
  %7 = and i32 %6, -8, !dbg !4400
  call void @llvm.dbg.value(metadata i32 %7, metadata !4390, metadata !DIExpression()), !dbg !4398
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4401
  %9 = ptrtoint i8* %8 to i32, !dbg !4401
  %10 = and i32 %9, -8, !dbg !4401
  call void @llvm.dbg.value(metadata i32 %10, metadata !4391, metadata !DIExpression()), !dbg !4398
  %11 = sub i32 %10, %7, !dbg !4402
  %12 = lshr exact i32 %11, 3, !dbg !4403
  call void @llvm.dbg.value(metadata i32 %12, metadata !4392, metadata !DIExpression()), !dbg !4398
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4404
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4393, metadata !DIExpression()), !dbg !4398
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4405
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4406
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4407
  store i32 %12, i32* %15, align 8, !dbg !4408
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4409
  store i32 0, i32* %16, align 4, !dbg !4410
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4411
  call void @llvm.dbg.value(metadata i32 %17, metadata !4394, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4398
  %18 = shl i32 %17, 2, !dbg !4412
  %19 = add i32 %18, 20, !dbg !4413
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4414
  call void @llvm.dbg.value(metadata i32 %20, metadata !4395, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.value(metadata i32 0, metadata !4396, metadata !DIExpression()), !dbg !4415
  %21 = icmp slt i32 %17, 0, !dbg !4416
  br i1 %21, label %22, label %24, !dbg !4418

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4419
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4420
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4421
  %23 = sub i32 %12, %20, !dbg !4422
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4423
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4424
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4425
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4426
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4427
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4428
  ret void, !dbg !4429

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4396, metadata !DIExpression()), !dbg !4415
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4430
  store i32 0, i32* %26, align 4, !dbg !4432
  %27 = add nuw i32 %25, 1, !dbg !4433
  call void @llvm.dbg.value(metadata i32 %27, metadata !4396, metadata !DIExpression()), !dbg !4415
  %28 = icmp eq i32 %25, %17, !dbg !4416
  br i1 %28, label %22, label %24, !dbg !4418, !llvm.loop !4434
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4436 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4449, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4446, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i8* %1, metadata !4447, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i8* %2, metadata !4448, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i32 %4, metadata !4450, metadata !DIExpression()), !dbg !4577
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4578
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4578
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4451, metadata !DIExpression()), !dbg !4579
  call void @llvm.dbg.value(metadata i32 0, metadata !4455, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i1 undef, metadata !4457, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4577
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4580

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4580

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4581
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4449, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i8* %30, metadata !4448, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i32 %29, metadata !4455, metadata !DIExpression()), !dbg !4577
  %31 = load i8, i8* %30, align 1, !dbg !4582
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4580

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4582
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4583
  call void @llvm.dbg.value(metadata i8* %34, metadata !4448, metadata !DIExpression()), !dbg !4577
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4583
  call void @llvm.dbg.value(metadata i32 %35, metadata !4459, metadata !DIExpression()), !dbg !4584
  %36 = icmp slt i32 %35, 0, !dbg !4585
  %37 = add i32 %29, 1, !dbg !4583
  call void @llvm.dbg.value(metadata i32 undef, metadata !4455, metadata !DIExpression()), !dbg !4577
  br i1 %36, label %365, label %28, !llvm.loop !4587

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4589
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4464, metadata !DIExpression()), !dbg !4590
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4590
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4509, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4512, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8* %30, metadata !4515, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 -1, metadata !4516, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 -1, metadata !4517, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8* null, metadata !4518, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8* %14, metadata !4519, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8 0, metadata !4520, metadata !DIExpression()), !dbg !4591
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4592
  call void @llvm.dbg.value(metadata i8* %39, metadata !4448, metadata !DIExpression()), !dbg !4577
  %40 = load i24, i24* %15, align 8, !dbg !4593
  %41 = and i24 %40, 256, !dbg !4593
  %42 = icmp eq i24 %41, 0, !dbg !4593
  br i1 %42, label %51, label %43, !dbg !4595

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4596
  call void @llvm.dbg.value(metadata i8* %44, metadata !4449, metadata !DIExpression()), !dbg !4577
  %45 = bitcast i8* %27 to i32*, !dbg !4596
  %46 = load i32, i32* %45, align 4, !dbg !4596
  call void @llvm.dbg.value(metadata i32 %46, metadata !4516, metadata !DIExpression()), !dbg !4591
  %47 = icmp slt i32 %46, 0, !dbg !4598
  br i1 %47, label %48, label %56, !dbg !4600

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4601
  store i24 %49, i24* %15, align 8, !dbg !4601
  %50 = sub nsw i32 0, %46, !dbg !4603
  call void @llvm.dbg.value(metadata i32 %50, metadata !4516, metadata !DIExpression()), !dbg !4591
  br label %56, !dbg !4604

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4605
  %53 = icmp eq i24 %52, 0, !dbg !4605
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4607
  br label %56, !dbg !4607

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4608
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4591
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4449, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i32 %58, metadata !4516, metadata !DIExpression()), !dbg !4591
  %60 = and i24 %57, 1024, !dbg !4608
  %61 = icmp eq i24 %60, 0, !dbg !4608
  br i1 %61, label %69, label %62, !dbg !4609

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4610
  call void @llvm.dbg.value(metadata i8* %63, metadata !4449, metadata !DIExpression()), !dbg !4577
  %64 = bitcast i8* %59 to i32*, !dbg !4610
  %65 = load i32, i32* %64, align 4, !dbg !4610
  call void @llvm.dbg.value(metadata i32 %65, metadata !4521, metadata !DIExpression()), !dbg !4611
  %66 = icmp slt i32 %65, 0, !dbg !4612
  br i1 %66, label %67, label %74, !dbg !4614

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4615
  store i24 %68, i24* %15, align 8, !dbg !4615
  br label %74, !dbg !4617

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4618
  %71 = icmp eq i24 %70, 0, !dbg !4618
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4620
  br label %74, !dbg !4620

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4621
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4591
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4591
  call void @llvm.dbg.value(metadata i8* %77, metadata !4449, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i32 %76, metadata !4517, metadata !DIExpression()), !dbg !4591
  store i32 0, i32* %16, align 4, !dbg !4622
  store i32 0, i32* %17, align 8, !dbg !4623
  %78 = lshr i24 %75, 16, !dbg !4621
  call void @llvm.dbg.value(metadata i24 %78, metadata !4524, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4591
  %79 = lshr i24 %75, 11, !dbg !4624
  %80 = and i24 %79, 15, !dbg !4624
  %81 = zext i24 %80 to i32, !dbg !4624
  call void @llvm.dbg.value(metadata i32 %81, metadata !4525, metadata !DIExpression()), !dbg !4591
  %82 = trunc i24 %78 to i3, !dbg !4625
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4625

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4626

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4629
  call void @llvm.dbg.value(metadata i8* %85, metadata !4449, metadata !DIExpression()), !dbg !4577
  %86 = bitcast i8* %77 to i32*, !dbg !4629
  %87 = load i32, i32* %86, align 4, !dbg !4629
  %88 = sext i32 %87 to i64, !dbg !4629
  store i64 %88, i64* %20, align 8, !dbg !4631
  br label %115, !dbg !4632

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4633
  call void @llvm.dbg.value(metadata i8* %90, metadata !4449, metadata !DIExpression()), !dbg !4577
  %91 = bitcast i8* %77 to i32*, !dbg !4633
  %92 = load i32, i32* %91, align 4, !dbg !4633
  %93 = sext i32 %92 to i64, !dbg !4633
  store i64 %93, i64* %20, align 8, !dbg !4636
  br label %115, !dbg !4637

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4638
  %96 = add i32 %95, 7, !dbg !4638
  %97 = and i32 %96, -8, !dbg !4638
  %98 = inttoptr i32 %97 to i8*, !dbg !4638
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4638
  call void @llvm.dbg.value(metadata i8* %99, metadata !4449, metadata !DIExpression()), !dbg !4577
  %100 = inttoptr i32 %97 to i64*, !dbg !4638
  %101 = load i64, i64* %100, align 8, !dbg !4638
  store i64 %101, i64* %20, align 8, !dbg !4639
  br label %115, !dbg !4640

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4641
  %104 = add i32 %103, 7, !dbg !4641
  %105 = and i32 %104, -8, !dbg !4641
  %106 = inttoptr i32 %105 to i8*, !dbg !4641
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4641
  call void @llvm.dbg.value(metadata i8* %107, metadata !4449, metadata !DIExpression()), !dbg !4577
  %108 = inttoptr i32 %105 to i64*, !dbg !4641
  %109 = load i64, i64* %108, align 8, !dbg !4641
  store i64 %109, i64* %20, align 8, !dbg !4642
  br label %115, !dbg !4643

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4644
  call void @llvm.dbg.value(metadata i8* %111, metadata !4449, metadata !DIExpression()), !dbg !4577
  %112 = bitcast i8* %77 to i32*, !dbg !4644
  %113 = load i32, i32* %112, align 4, !dbg !4644
  %114 = sext i32 %113 to i64, !dbg !4645
  store i64 %114, i64* %20, align 8, !dbg !4646
  br label %115, !dbg !4647

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4648
  call void @llvm.dbg.value(metadata i8* %117, metadata !4449, metadata !DIExpression()), !dbg !4577
  %118 = trunc i24 %79 to i4, !dbg !4649
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4649

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4650
  %121 = ashr exact i64 %120, 56, !dbg !4650
  store i64 %121, i64* %20, align 8, !dbg !4653
  br label %177, !dbg !4654

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4655
  %124 = ashr exact i64 %123, 48, !dbg !4655
  store i64 %124, i64* %20, align 8, !dbg !4658
  br label %177, !dbg !4659

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4660

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4663
  call void @llvm.dbg.value(metadata i8* %127, metadata !4449, metadata !DIExpression()), !dbg !4577
  %128 = bitcast i8* %77 to i32*, !dbg !4663
  %129 = load i32, i32* %128, align 4, !dbg !4663
  %130 = zext i32 %129 to i64, !dbg !4663
  store i64 %130, i64* %20, align 8, !dbg !4665
  br label %157, !dbg !4666

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4667
  call void @llvm.dbg.value(metadata i8* %132, metadata !4449, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i8* %132, metadata !4449, metadata !DIExpression()), !dbg !4577
  %133 = bitcast i8* %77 to i32*, !dbg !4667
  %134 = load i32, i32* %133, align 4, !dbg !4667
  %135 = zext i32 %134 to i64, !dbg !4667
  store i64 %135, i64* %20, align 8, !dbg !4667
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4669
  %138 = add i32 %137, 7, !dbg !4669
  %139 = and i32 %138, -8, !dbg !4669
  %140 = inttoptr i32 %139 to i8*, !dbg !4669
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4669
  call void @llvm.dbg.value(metadata i8* %141, metadata !4449, metadata !DIExpression()), !dbg !4577
  %142 = inttoptr i32 %139 to i64*, !dbg !4669
  %143 = load i64, i64* %142, align 8, !dbg !4669
  store i64 %143, i64* %20, align 8, !dbg !4670
  br label %157, !dbg !4671

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4672
  %146 = add i32 %145, 7, !dbg !4672
  %147 = and i32 %146, -8, !dbg !4672
  %148 = inttoptr i32 %147 to i8*, !dbg !4672
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4672
  call void @llvm.dbg.value(metadata i8* %149, metadata !4449, metadata !DIExpression()), !dbg !4577
  %150 = inttoptr i32 %147 to i64*, !dbg !4672
  %151 = load i64, i64* %150, align 8, !dbg !4672
  store i64 %151, i64* %20, align 8, !dbg !4673
  br label %157, !dbg !4674

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4675
  call void @llvm.dbg.value(metadata i8* %153, metadata !4449, metadata !DIExpression()), !dbg !4577
  %154 = bitcast i8* %77 to i32*, !dbg !4675
  %155 = load i32, i32* %154, align 4, !dbg !4675
  %156 = zext i32 %155 to i64, !dbg !4676
  store i64 %156, i64* %20, align 8, !dbg !4677
  br label %157, !dbg !4678

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4679
  call void @llvm.dbg.value(metadata i8* %159, metadata !4449, metadata !DIExpression()), !dbg !4577
  %160 = trunc i24 %79 to i4, !dbg !4680
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4680

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4681
  store i64 %162, i64* %20, align 8, !dbg !4684
  br label %177, !dbg !4685

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4686
  store i64 %164, i64* %20, align 8, !dbg !4689
  br label %177, !dbg !4690

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4691
  %167 = add i32 %166, 7, !dbg !4691
  %168 = and i32 %167, -8, !dbg !4691
  %169 = inttoptr i32 %168 to i8*, !dbg !4691
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4691
  call void @llvm.dbg.value(metadata i8* %170, metadata !4449, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i8* %170, metadata !4449, metadata !DIExpression()), !dbg !4577
  %171 = inttoptr i32 %168 to double*, !dbg !4691
  %172 = load double, double* %171, align 8, !dbg !4691
  store double %172, double* %19, align 8, !dbg !4691
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4695
  call void @llvm.dbg.value(metadata i8* %174, metadata !4449, metadata !DIExpression()), !dbg !4577
  %175 = bitcast i8* %77 to i8**, !dbg !4695
  %176 = load i8*, i8** %175, align 4, !dbg !4695
  store i8* %176, i8** %18, align 8, !dbg !4698
  br label %177, !dbg !4699

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4591
  call void @llvm.dbg.value(metadata i8* %178, metadata !4449, metadata !DIExpression()), !dbg !4577
  %179 = and i24 %75, 3, !dbg !4700
  %180 = icmp eq i24 %179, 0, !dbg !4700
  br i1 %180, label %185, label %181, !dbg !4700

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4701
  call void @llvm.dbg.value(metadata i32 %182, metadata !4526, metadata !DIExpression()), !dbg !4702
  %183 = icmp slt i32 %182, 0, !dbg !4703
  %184 = add i32 %182, %29, !dbg !4701
  call void @llvm.dbg.value(metadata i32 undef, metadata !4455, metadata !DIExpression()), !dbg !4577
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4705
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4706

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4707
  call void @llvm.dbg.value(metadata i32 %188, metadata !4530, metadata !DIExpression()), !dbg !4708
  %189 = icmp slt i32 %188, 0, !dbg !4709
  %190 = add i32 %29, 1, !dbg !4707
  call void @llvm.dbg.value(metadata i32 undef, metadata !4455, metadata !DIExpression()), !dbg !4577
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4711
  call void @llvm.dbg.value(metadata i8* %192, metadata !4518, metadata !DIExpression()), !dbg !4591
  %193 = icmp sgt i32 %76, -1, !dbg !4712
  br i1 %193, label %194, label %196, !dbg !4714

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4715
  call void @llvm.dbg.value(metadata i32 %195, metadata !4533, metadata !DIExpression()), !dbg !4717
  br label %241, !dbg !4718

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4719
  call void @llvm.dbg.value(metadata i32 %197, metadata !4533, metadata !DIExpression()), !dbg !4717
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4518, metadata !DIExpression()), !dbg !4591
  %199 = load i64, i64* %20, align 8, !dbg !4721
  %200 = trunc i64 %199 to i8, !dbg !4722
  store i8 %200, i8* %10, align 1, !dbg !4723
  call void @llvm.dbg.value(metadata i8* %23, metadata !4519, metadata !DIExpression()), !dbg !4591
  br label %245, !dbg !4724

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4725
  %203 = icmp eq i24 %202, 0, !dbg !4725
  %204 = trunc i24 %75 to i8, !dbg !4727
  %205 = shl i8 %204, 1, !dbg !4727
  %206 = and i8 %205, 32, !dbg !4727
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4727
  call void @llvm.dbg.value(metadata i8 %207, metadata !4520, metadata !DIExpression()), !dbg !4591
  %208 = load i64, i64* %20, align 8, !dbg !4728
  call void @llvm.dbg.value(metadata i64 %208, metadata !4456, metadata !DIExpression()), !dbg !4577
  %209 = icmp slt i64 %208, 0, !dbg !4729
  br i1 %209, label %210, label %212, !dbg !4731

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4520, metadata !DIExpression()), !dbg !4591
  %211 = sub nsw i64 0, %208, !dbg !4732
  store i64 %211, i64* %20, align 8, !dbg !4734
  br label %212, !dbg !4735

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4591
  call void @llvm.dbg.value(metadata i8 %213, metadata !4520, metadata !DIExpression()), !dbg !4591
  %214 = load i64, i64* %20, align 8, !dbg !4736
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4737
  call void @llvm.dbg.value(metadata i8* %215, metadata !4518, metadata !DIExpression()), !dbg !4591
  br label %216, !dbg !4738

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4739
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4740
  call void @llvm.dbg.value(metadata i8* %218, metadata !4518, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8 %217, metadata !4520, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.label(metadata !4576), !dbg !4741
  %219 = icmp sgt i32 %76, -1, !dbg !4742
  br i1 %219, label %222, label %220, !dbg !4743

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4744
  br label %245, !dbg !4743

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4746
  %224 = sub i32 %22, %223, !dbg !4746
  call void @llvm.dbg.value(metadata i32 %224, metadata !4535, metadata !DIExpression()), !dbg !4747
  %225 = load i24, i24* %15, align 8, !dbg !4748
  %226 = and i24 %225, -65, !dbg !4748
  store i24 %226, i24* %15, align 8, !dbg !4748
  %227 = icmp ugt i32 %76, %224, !dbg !4749
  br i1 %227, label %228, label %245, !dbg !4751

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4752
  store i32 %229, i32* %16, align 4, !dbg !4754
  br label %245, !dbg !4755

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4756
  %232 = icmp eq i8* %231, null, !dbg !4758
  br i1 %232, label %245, label %233, !dbg !4759

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4760
  %235 = zext i32 %234 to i64, !dbg !4760
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4762
  call void @llvm.dbg.value(metadata i8* %236, metadata !4518, metadata !DIExpression()), !dbg !4591
  %237 = load i24, i24* %15, align 8, !dbg !4763
  %238 = or i24 %237, 1048576, !dbg !4763
  store i24 %238, i24* %15, align 8, !dbg !4763
  store i8 120, i8* %21, align 1, !dbg !4764
  br label %216, !dbg !4765

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4766
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4769
  br label %363, !dbg !4770

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4771
  call void @llvm.dbg.value(metadata i32 %242, metadata !4533, metadata !DIExpression()), !dbg !4717
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4772
  call void @llvm.dbg.value(metadata i32 -1, metadata !4517, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 %29, metadata !4455, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i8* %192, metadata !4518, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8* %243, metadata !4519, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8 0, metadata !4520, metadata !DIExpression()), !dbg !4591
  %244 = icmp eq i8* %192, null, !dbg !4773
  br i1 %244, label %363, label %245, !dbg !4775, !llvm.loop !4587

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4744
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4591
  call void @llvm.dbg.value(metadata i32 0, metadata !4539, metadata !DIExpression()), !dbg !4591
  %250 = zext i8 %249 to i32, !dbg !4776
  %251 = icmp eq i8 %249, 0, !dbg !4778
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4591
  call void @llvm.dbg.value(metadata i32 undef, metadata !4538, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4591
  call void @llvm.dbg.value(metadata i32 undef, metadata !4538, metadata !DIExpression()), !dbg !4591
  %252 = icmp sgt i32 %58, 0, !dbg !4779
  br i1 %252, label %253, label %302, !dbg !4780

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4744
  %255 = icmp eq i24 %254, 0, !dbg !4744
  %256 = ptrtoint i8* %248 to i32, !dbg !4781
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4591
  %257 = ptrtoint i8* %247 to i32, !dbg !4781
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4591
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4591
  %258 = xor i1 %251, true, !dbg !4782
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4591
  %259 = sext i1 %258 to i32, !dbg !4782
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4591
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4591
  %260 = lshr i24 %246, 19, !dbg !4783
  %261 = and i24 %260, 1, !dbg !4783
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4783
  %263 = zext i24 %262 to i32, !dbg !4783
  %264 = add i32 %257, %259, !dbg !4783
  %265 = add i32 %256, %263, !dbg !4783
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4591
  %266 = and i24 %246, 4194304, !dbg !4784
  %267 = icmp eq i24 %266, 0, !dbg !4784
  %268 = load i32, i32* %16, align 4, !dbg !4786
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4591
  call void @llvm.dbg.value(metadata i32 undef, metadata !4538, metadata !DIExpression()), !dbg !4591
  %269 = load i32, i32* %17, align 8, !dbg !4787
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4787
  call void @llvm.dbg.value(metadata i32 undef, metadata !4538, metadata !DIExpression()), !dbg !4591
  %271 = add i32 %264, %58, !dbg !4787
  %272 = add i32 %265, %268, !dbg !4787
  %273 = add i32 %272, %270, !dbg !4788
  %274 = sub i32 %271, %273, !dbg !4788
  call void @llvm.dbg.value(metadata i32 %274, metadata !4516, metadata !DIExpression()), !dbg !4591
  %275 = and i24 %246, 4, !dbg !4789
  %276 = icmp eq i24 %275, 0, !dbg !4789
  br i1 %276, label %277, label %302, !dbg !4790

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4540, metadata !DIExpression()), !dbg !4791
  %278 = and i24 %246, 64, !dbg !4792
  %279 = icmp eq i24 %278, 0, !dbg !4792
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4793
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4793
  %282 = select i1 %279, i32 32, i32 48, !dbg !4793
  br i1 %280, label %287, label %283, !dbg !4793

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4794
  call void @llvm.dbg.value(metadata i32 %284, metadata !4545, metadata !DIExpression()), !dbg !4795
  %285 = icmp slt i32 %284, 0, !dbg !4796
  %286 = add i32 %29, 1, !dbg !4794
  call void @llvm.dbg.value(metadata i32 undef, metadata !4455, metadata !DIExpression()), !dbg !4577
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4591
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4581
  call void @llvm.dbg.value(metadata i32 %290, metadata !4455, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i8 undef, metadata !4540, metadata !DIExpression()), !dbg !4791
  call void @llvm.dbg.value(metadata i8 %288, metadata !4520, metadata !DIExpression()), !dbg !4591
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4798
  %292 = add i32 %291, -1, !dbg !4798
  br label %293, !dbg !4798

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4799
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4581
  call void @llvm.dbg.value(metadata i32 %295, metadata !4455, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i32 %294, metadata !4516, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 %294, metadata !4516, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4591
  %296 = icmp sgt i32 %294, 0, !dbg !4800
  br i1 %296, label %297, label %302, !dbg !4798

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4801
  call void @llvm.dbg.value(metadata i32 %298, metadata !4516, metadata !DIExpression()), !dbg !4591
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %299, metadata !4551, metadata !DIExpression()), !dbg !4803
  %300 = icmp slt i32 %299, 0, !dbg !4804
  %301 = add i32 %295, 1, !dbg !4802
  call void @llvm.dbg.value(metadata i32 undef, metadata !4455, metadata !DIExpression()), !dbg !4577
  br i1 %300, label %361, label %293, !llvm.loop !4806

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4591
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4591
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4581
  call void @llvm.dbg.value(metadata i32 %305, metadata !4455, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i32 %304, metadata !4516, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8 %303, metadata !4520, metadata !DIExpression()), !dbg !4591
  %306 = icmp eq i8 %303, 0, !dbg !4808
  br i1 %306, label %312, label %307, !dbg !4809

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4810
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4811
  call void @llvm.dbg.value(metadata i32 %309, metadata !4554, metadata !DIExpression()), !dbg !4812
  %310 = icmp slt i32 %309, 0, !dbg !4813
  %311 = add i32 %305, 1, !dbg !4811
  call void @llvm.dbg.value(metadata i32 undef, metadata !4455, metadata !DIExpression()), !dbg !4577
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4581
  call void @llvm.dbg.value(metadata i32 %313, metadata !4455, metadata !DIExpression()), !dbg !4577
  %314 = lshr i24 %246, 20, !dbg !4815
  %315 = lshr i24 %246, 19, !dbg !4816
  %316 = or i24 %314, %315, !dbg !4817
  %317 = and i24 %316, 1, !dbg !4817
  %318 = icmp eq i24 %317, 0, !dbg !4817
  br i1 %318, label %323, label %319, !dbg !4818

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4819
  call void @llvm.dbg.value(metadata i32 %320, metadata !4558, metadata !DIExpression()), !dbg !4820
  %321 = icmp slt i32 %320, 0, !dbg !4821
  %322 = add i32 %313, 1, !dbg !4819
  call void @llvm.dbg.value(metadata i32 undef, metadata !4455, metadata !DIExpression()), !dbg !4577
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4581
  call void @llvm.dbg.value(metadata i32 %324, metadata !4455, metadata !DIExpression()), !dbg !4577
  %325 = and i24 %246, 1048576, !dbg !4823
  %326 = icmp eq i24 %325, 0, !dbg !4823
  br i1 %326, label %333, label %327, !dbg !4824

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4825
  %329 = zext i8 %328 to i32, !dbg !4825
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %330, metadata !4564, metadata !DIExpression()), !dbg !4826
  %331 = icmp slt i32 %330, 0, !dbg !4827
  %332 = add i32 %324, 1, !dbg !4825
  call void @llvm.dbg.value(metadata i32 undef, metadata !4455, metadata !DIExpression()), !dbg !4577
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4581
  call void @llvm.dbg.value(metadata i32 %334, metadata !4455, metadata !DIExpression()), !dbg !4577
  %335 = load i32, i32* %16, align 4, !dbg !4829
  call void @llvm.dbg.value(metadata i32 %335, metadata !4539, metadata !DIExpression()), !dbg !4591
  br label %336, !dbg !4830

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4831
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4581
  call void @llvm.dbg.value(metadata i32 %338, metadata !4455, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i32 %337, metadata !4539, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4591
  %339 = icmp sgt i32 %337, 0, !dbg !4832
  br i1 %339, label %340, label %345, !dbg !4830

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4833
  call void @llvm.dbg.value(metadata i32 %341, metadata !4539, metadata !DIExpression()), !dbg !4591
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4834
  call void @llvm.dbg.value(metadata i32 %342, metadata !4568, metadata !DIExpression()), !dbg !4835
  %343 = icmp slt i32 %342, 0, !dbg !4836
  %344 = add i32 %338, 1, !dbg !4834
  call void @llvm.dbg.value(metadata i32 undef, metadata !4455, metadata !DIExpression()), !dbg !4577
  br i1 %343, label %361, label %336, !llvm.loop !4838

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4840
  call void @llvm.dbg.value(metadata i32 %346, metadata !4571, metadata !DIExpression()), !dbg !4841
  %347 = icmp slt i32 %346, 0, !dbg !4842
  call void @llvm.dbg.value(metadata i32 undef, metadata !4455, metadata !DIExpression()), !dbg !4577
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4840
  call void @llvm.dbg.value(metadata i32 %349, metadata !4455, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i32 %304, metadata !4516, metadata !DIExpression()), !dbg !4591
  %350 = icmp sgt i32 %304, 0, !dbg !4844
  br i1 %350, label %351, label %363, !dbg !4845

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4845
  %353 = add i32 %352, %338, !dbg !4845
  br label %354, !dbg !4845

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4455, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.value(metadata i32 %355, metadata !4516, metadata !DIExpression()), !dbg !4591
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4846
  call void @llvm.dbg.value(metadata i32 %356, metadata !4573, metadata !DIExpression()), !dbg !4847
  %357 = icmp slt i32 %356, 0, !dbg !4848
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4850
  call void @llvm.dbg.value(metadata i32 undef, metadata !4455, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4577
  call void @llvm.dbg.value(metadata i32 %359, metadata !4516, metadata !DIExpression()), !dbg !4591
  %360 = icmp sgt i32 %355, 1, !dbg !4844
  br i1 %360, label %354, label %363, !dbg !4845, !llvm.loop !4851

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4455, metadata !DIExpression()), !dbg !4577
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4588
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4581
  call void @llvm.dbg.value(metadata i32 %364, metadata !4455, metadata !DIExpression()), !dbg !4577
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4588
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4577
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4853
  ret i32 %366, !dbg !4853
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4854 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4858, metadata !DIExpression()), !dbg !4860
  call void @llvm.dbg.value(metadata i8* %1, metadata !4859, metadata !DIExpression()), !dbg !4860
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4861
  store i24 0, i24* %3, align 4, !dbg !4861
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4861
  store i8 0, i8* %4, align 1, !dbg !4861
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4861
  store i32 0, i32* %5, align 4, !dbg !4861
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4861
  store i32 0, i32* %6, align 4, !dbg !4861
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4862
  call void @llvm.dbg.value(metadata i8* %7, metadata !4859, metadata !DIExpression()), !dbg !4860
  %8 = load i8, i8* %7, align 1, !dbg !4863
  %9 = icmp eq i8 %8, 37, !dbg !4865
  br i1 %9, label %10, label %12, !dbg !4866

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %11, metadata !4859, metadata !DIExpression()), !dbg !4860
  store i8 37, i8* %4, align 1, !dbg !4869
  br label %18, !dbg !4870

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4871
  call void @llvm.dbg.value(metadata i8* %13, metadata !4859, metadata !DIExpression()), !dbg !4860
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4872
  call void @llvm.dbg.value(metadata i8* %14, metadata !4859, metadata !DIExpression()), !dbg !4860
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4873
  call void @llvm.dbg.value(metadata i8* %15, metadata !4859, metadata !DIExpression()), !dbg !4860
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4874
  call void @llvm.dbg.value(metadata i8* %16, metadata !4859, metadata !DIExpression()), !dbg !4860
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4875
  call void @llvm.dbg.value(metadata i8* %17, metadata !4859, metadata !DIExpression()), !dbg !4860
  br label %18, !dbg !4876

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4860
  ret i8* %19, !dbg !4877
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4878 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4882, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i8* %1, metadata !4883, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i8* %2, metadata !4884, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i8* %3, metadata !4885, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i32 0, metadata !4886, metadata !DIExpression()), !dbg !4889
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4890

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4891
  call void @llvm.dbg.value(metadata i32 %9, metadata !4886, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata i8* %8, metadata !4884, metadata !DIExpression()), !dbg !4889
  %10 = icmp ult i8* %8, %3, !dbg !4892
  br i1 %10, label %11, label %13, !dbg !4893

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4894
  br label %17, !dbg !4893

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4895

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4896
  %16 = icmp eq i8 %15, 0, !dbg !4895
  br i1 %16, label %24, label %17, !dbg !4890

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4894
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4897
  call void @llvm.dbg.value(metadata i8* %19, metadata !4884, metadata !DIExpression()), !dbg !4889
  %20 = zext i8 %18 to i32, !dbg !4898
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %21, metadata !4887, metadata !DIExpression()), !dbg !4900
  %22 = icmp slt i32 %21, 0, !dbg !4901
  %23 = add i32 %9, 1, !dbg !4903
  call void @llvm.dbg.value(metadata i32 undef, metadata !4886, metadata !DIExpression()), !dbg !4889
  br i1 %22, label %24, label %7, !llvm.loop !4904

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4889
  ret i32 %25, !dbg !4906
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4907 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4911, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4912, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata i8* %2, metadata !4913, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata i8* %3, metadata !4914, metadata !DIExpression()), !dbg !4921
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4922
  %6 = load i8, i8* %5, align 1, !dbg !4922
  %7 = zext i8 %6 to i32, !dbg !4923
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !4924
  %9 = icmp eq i32 %8, 0, !dbg !4924
  call void @llvm.dbg.value(metadata i1 %9, metadata !4915, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4921
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %10, metadata !4916, metadata !DIExpression()), !dbg !4921
  %11 = ptrtoint i8* %3 to i32, !dbg !4926
  %12 = ptrtoint i8* %2 to i32, !dbg !4926
  %13 = sub i32 %11, %12, !dbg !4926
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4927
  call void @llvm.dbg.value(metadata i8* %14, metadata !4918, metadata !DIExpression()), !dbg !4921
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4928

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4921
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4911, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata i8* %18, metadata !4918, metadata !DIExpression()), !dbg !4921
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4929
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4930
  call void @llvm.dbg.value(metadata i32 %25, metadata !4919, metadata !DIExpression()), !dbg !4931
  %26 = icmp ult i32 %25, 10, !dbg !4932
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4933
  %28 = add i32 %27, %25, !dbg !4931
  %29 = trunc i32 %28 to i8, !dbg !4933
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4934
  call void @llvm.dbg.value(metadata i8* %30, metadata !4918, metadata !DIExpression()), !dbg !4921
  store i8 %29, i8* %30, align 1, !dbg !4935
  call void @llvm.dbg.value(metadata i64 %22, metadata !4911, metadata !DIExpression()), !dbg !4921
  %31 = icmp uge i64 %19, %15, !dbg !4936
  %32 = icmp ugt i8* %30, %2, !dbg !4937
  %33 = and i1 %31, %32, !dbg !4937
  br i1 %33, label %17, label %34, !dbg !4938, !llvm.loop !4939

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4941
  %36 = load i24, i24* %35, align 4, !dbg !4941
  %37 = and i24 %36, 32, !dbg !4941
  %38 = icmp eq i24 %37, 0, !dbg !4941
  br i1 %38, label %44, label %39, !dbg !4943

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4944

40:                                               ; preds = %39
  br label %41, !dbg !4946

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4950
  store i24 %43, i24* %35, align 4, !dbg !4950
  br label %44, !dbg !4951

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4951
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4952 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4958, metadata !DIExpression()), !dbg !4961
  call void @llvm.dbg.value(metadata i8* %1, metadata !4959, metadata !DIExpression()), !dbg !4961
  call void @llvm.dbg.value(metadata i32 %2, metadata !4960, metadata !DIExpression()), !dbg !4961
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4962
  %5 = load i24, i24* %4, align 4, !dbg !4962
  %6 = lshr i24 %5, 11, !dbg !4962
  %7 = and i24 %6, 15, !dbg !4962
  %8 = zext i24 %7 to i32, !dbg !4962
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4963

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4964
  store i32 %2, i32* %10, align 4, !dbg !4966
  br label %28, !dbg !4967

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4968
  store i8 %12, i8* %1, align 1, !dbg !4969
  br label %28, !dbg !4970

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4971
  %15 = bitcast i8* %1 to i16*, !dbg !4972
  store i16 %14, i16* %15, align 2, !dbg !4973
  br label %28, !dbg !4974

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4975
  store i32 %2, i32* %17, align 4, !dbg !4976
  br label %28, !dbg !4977

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4978
  %20 = bitcast i8* %1 to i64*, !dbg !4979
  store i64 %19, i64* %20, align 8, !dbg !4980
  br label %28, !dbg !4981

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4982
  %23 = bitcast i8* %1 to i64*, !dbg !4983
  store i64 %22, i64* %23, align 8, !dbg !4984
  br label %28, !dbg !4985

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4986
  store i32 %2, i32* %25, align 4, !dbg !4987
  br label %28, !dbg !4988

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4989
  store i32 %2, i32* %27, align 4, !dbg !4990
  br label %28, !dbg !4991

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4992
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4996, metadata !DIExpression()), !dbg !4997
  %2 = add i32 %0, -65, !dbg !4998
  %3 = icmp ult i32 %2, 26, !dbg !4999
  %4 = zext i1 %3 to i32, !dbg !4999
  ret i32 %4, !dbg !5000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5001 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5005, metadata !DIExpression()), !dbg !5006
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5007

2:                                                ; preds = %1
  br label %4, !dbg !5008

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5010

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5011
  ret i32 %5, !dbg !5012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5013 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5015, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.value(metadata i8* %1, metadata !5016, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.value(metadata i8 1, metadata !5017, metadata !DIExpression()), !dbg !5018
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5019

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5017, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.value(metadata i8* %5, metadata !5016, metadata !DIExpression()), !dbg !5018
  %6 = load i8, i8* %5, align 1, !dbg !5020
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5022

7:                                                ; preds = %4
  br label %11, !dbg !5023

8:                                                ; preds = %4
  br label %11, !dbg !5025

9:                                                ; preds = %4
  br label %11, !dbg !5026

10:                                               ; preds = %4
  br label %11, !dbg !5027

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5028
  %14 = or i24 %13, %12, !dbg !5028
  store i24 %14, i24* %3, align 4, !dbg !5028
  call void @llvm.dbg.value(metadata i8 poison, metadata !5017, metadata !DIExpression()), !dbg !5018
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5016, metadata !DIExpression()), !dbg !5018
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5017, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.value(metadata i8* %15, metadata !5016, metadata !DIExpression()), !dbg !5018
  %17 = load i24, i24* %3, align 4, !dbg !5029
  %18 = and i24 %17, 68, !dbg !5031
  %19 = icmp eq i24 %18, 68, !dbg !5031
  br i1 %19, label %20, label %22, !dbg !5031

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5032
  store i24 %21, i24* %3, align 4, !dbg !5032
  br label %22, !dbg !5034

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5035
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5036 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5038, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i8* %1, metadata !5039, metadata !DIExpression()), !dbg !5042
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5043
  %5 = load i24, i24* %4, align 4, !dbg !5044
  %6 = or i24 %5, 128, !dbg !5044
  store i24 %6, i24* %4, align 4, !dbg !5044
  call void @llvm.dbg.value(metadata i8* %1, metadata !5039, metadata !DIExpression()), !dbg !5042
  %7 = load i8, i8* %1, align 1, !dbg !5045
  %8 = icmp eq i8 %7, 42, !dbg !5047
  br i1 %8, label %9, label %12, !dbg !5048

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5049
  store i24 %10, i24* %4, align 4, !dbg !5049
  call void @llvm.dbg.value(metadata i8* %1, metadata !5039, metadata !DIExpression()), !dbg !5042
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5051
  call void @llvm.dbg.value(metadata i8* %11, metadata !5039, metadata !DIExpression()), !dbg !5042
  store i8* %11, i8** %3, align 4, !dbg !5051
  br label %29, !dbg !5052

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5040, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i8** %3, metadata !5039, metadata !DIExpression(DW_OP_deref)), !dbg !5042
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5053
  call void @llvm.dbg.value(metadata i32 %13, metadata !5041, metadata !DIExpression()), !dbg !5042
  %14 = load i8*, i8** %3, align 4, !dbg !5054
  call void @llvm.dbg.value(metadata i8* %14, metadata !5039, metadata !DIExpression()), !dbg !5042
  %15 = icmp eq i8* %14, %1, !dbg !5056
  br i1 %15, label %29, label %16, !dbg !5057

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5058
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5060
  store i32 %13, i32* %18, align 4, !dbg !5061
  %19 = lshr i32 %13, 31, !dbg !5062
  %20 = lshr i24 %17, 1, !dbg !5063
  %21 = and i24 %20, 1, !dbg !5063
  %22 = zext i24 %21 to i32, !dbg !5063
  %23 = or i32 %19, %22, !dbg !5063
  %24 = trunc i32 %23 to i24, !dbg !5063
  %25 = shl nuw nsw i24 %24, 1, !dbg !5063
  %26 = and i24 %17, -131, !dbg !5063
  %27 = or i24 %26, 128, !dbg !5063
  %28 = or i24 %25, %27, !dbg !5063
  store i24 %28, i24* %4, align 4, !dbg !5063
  br label %29, !dbg !5064

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5042
  ret i8* %30, !dbg !5065
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5066 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5068, metadata !DIExpression()), !dbg !5071
  call void @llvm.dbg.value(metadata i8* %1, metadata !5069, metadata !DIExpression()), !dbg !5071
  %4 = load i8, i8* %1, align 1, !dbg !5072
  %5 = icmp eq i8 %4, 46, !dbg !5073
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5074
  %7 = load i24, i24* %6, align 4, !dbg !5075
  %8 = select i1 %5, i24 512, i24 0, !dbg !5075
  %9 = and i24 %7, -513, !dbg !5075
  %10 = or i24 %9, %8, !dbg !5075
  store i24 %10, i24* %6, align 4, !dbg !5075
  br i1 %5, label %11, label %32, !dbg !5076

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5069, metadata !DIExpression()), !dbg !5071
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5077
  call void @llvm.dbg.value(metadata i8* %12, metadata !5069, metadata !DIExpression()), !dbg !5071
  store i8* %12, i8** %3, align 4, !dbg !5077
  %13 = load i8, i8* %12, align 1, !dbg !5078
  %14 = icmp eq i8 %13, 42, !dbg !5080
  br i1 %14, label %15, label %18, !dbg !5081

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5082
  store i24 %16, i24* %6, align 4, !dbg !5082
  call void @llvm.dbg.value(metadata i8* %12, metadata !5069, metadata !DIExpression()), !dbg !5071
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5084
  call void @llvm.dbg.value(metadata i8* %17, metadata !5069, metadata !DIExpression()), !dbg !5071
  store i8* %17, i8** %3, align 4, !dbg !5084
  br label %32, !dbg !5085

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5069, metadata !DIExpression(DW_OP_deref)), !dbg !5071
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5086
  call void @llvm.dbg.value(metadata i32 %19, metadata !5070, metadata !DIExpression()), !dbg !5071
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5087
  store i32 %19, i32* %20, align 4, !dbg !5088
  %21 = lshr i32 %19, 31, !dbg !5089
  %22 = load i24, i24* %6, align 4, !dbg !5090
  %23 = lshr i24 %22, 1, !dbg !5090
  %24 = and i24 %23, 1, !dbg !5090
  %25 = zext i24 %24 to i32, !dbg !5090
  %26 = or i32 %21, %25, !dbg !5090
  %27 = trunc i32 %26 to i24, !dbg !5090
  %28 = shl nuw nsw i24 %27, 1, !dbg !5090
  %29 = and i24 %22, -3, !dbg !5090
  %30 = or i24 %28, %29, !dbg !5090
  store i24 %30, i24* %6, align 4, !dbg !5090
  %31 = load i8*, i8** %3, align 4, !dbg !5091
  call void @llvm.dbg.value(metadata i8* %31, metadata !5069, metadata !DIExpression()), !dbg !5071
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5071
  ret i8* %33, !dbg !5092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5093 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5095, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata i8* %1, metadata !5096, metadata !DIExpression()), !dbg !5097
  %3 = load i8, i8* %1, align 1, !dbg !5098
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5099

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5100
  call void @llvm.dbg.value(metadata i8* %5, metadata !5096, metadata !DIExpression()), !dbg !5097
  %6 = load i8, i8* %5, align 1, !dbg !5103
  %7 = icmp eq i8 %6, 104, !dbg !5104
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5105
  %9 = load i24, i24* %8, align 4, !dbg !5105
  %10 = and i24 %9, -30721, !dbg !5105
  br i1 %7, label %11, label %14, !dbg !5106

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5107
  store i24 %12, i24* %8, align 4, !dbg !5107
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5109
  call void @llvm.dbg.value(metadata i8* %13, metadata !5096, metadata !DIExpression()), !dbg !5097
  br label %56, !dbg !5110

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5111
  store i24 %15, i24* %8, align 4, !dbg !5111
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5113
  call void @llvm.dbg.value(metadata i8* %17, metadata !5096, metadata !DIExpression()), !dbg !5097
  %18 = load i8, i8* %17, align 1, !dbg !5115
  %19 = icmp eq i8 %18, 108, !dbg !5116
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5117
  %21 = load i24, i24* %20, align 4, !dbg !5117
  %22 = and i24 %21, -30721, !dbg !5117
  br i1 %19, label %23, label %26, !dbg !5118

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5119
  store i24 %24, i24* %20, align 4, !dbg !5119
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5121
  call void @llvm.dbg.value(metadata i8* %25, metadata !5096, metadata !DIExpression()), !dbg !5097
  br label %56, !dbg !5122

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5123
  store i24 %27, i24* %20, align 4, !dbg !5123
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5125
  %30 = load i24, i24* %29, align 4, !dbg !5126
  %31 = and i24 %30, -30721, !dbg !5126
  %32 = or i24 %31, 10240, !dbg !5126
  store i24 %32, i24* %29, align 4, !dbg !5126
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5127
  call void @llvm.dbg.value(metadata i8* %33, metadata !5096, metadata !DIExpression()), !dbg !5097
  br label %56, !dbg !5128

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5129
  %36 = load i24, i24* %35, align 4, !dbg !5130
  %37 = and i24 %36, -30721, !dbg !5130
  %38 = or i24 %37, 12288, !dbg !5130
  store i24 %38, i24* %35, align 4, !dbg !5130
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5131
  call void @llvm.dbg.value(metadata i8* %39, metadata !5096, metadata !DIExpression()), !dbg !5097
  br label %56, !dbg !5132

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5133
  %42 = load i24, i24* %41, align 4, !dbg !5134
  %43 = and i24 %42, -30721, !dbg !5134
  %44 = or i24 %43, 14336, !dbg !5134
  store i24 %44, i24* %41, align 4, !dbg !5134
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5135
  call void @llvm.dbg.value(metadata i8* %45, metadata !5096, metadata !DIExpression()), !dbg !5097
  br label %56, !dbg !5136

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5137
  %48 = load i24, i24* %47, align 4, !dbg !5138
  %49 = and i24 %48, -30723, !dbg !5138
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5139
  call void @llvm.dbg.value(metadata i8* %50, metadata !5096, metadata !DIExpression()), !dbg !5097
  %51 = or i24 %49, 16386, !dbg !5140
  store i24 %51, i24* %47, align 4, !dbg !5140
  br label %56, !dbg !5141

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5142
  %54 = load i24, i24* %53, align 4, !dbg !5143
  %55 = and i24 %54, -30721, !dbg !5143
  store i24 %55, i24* %53, align 4, !dbg !5143
  br label %56, !dbg !5144

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5096, metadata !DIExpression()), !dbg !5097
  ret i8* %57, !dbg !5145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5146 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5148, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i8* %1, metadata !5149, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i8 0, metadata !5150, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i8* %1, metadata !5149, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5153
  %3 = load i8, i8* %1, align 1, !dbg !5154
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5155
  store i8 %3, i8* %4, align 1, !dbg !5156
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5157

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5158

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5159
  %9 = load i24, i24* %8, align 4, !dbg !5159
  %10 = and i24 %9, -458753, !dbg !5159
  %11 = or i24 %10, %7, !dbg !5159
  call void @llvm.dbg.label(metadata !5151), !dbg !5160
  %12 = and i24 %9, 30720, !dbg !5161
  %13 = icmp eq i24 %12, 16384, !dbg !5161
  %14 = zext i1 %13 to i24, !dbg !5163
  %15 = or i24 %11, %14, !dbg !5163
  %16 = icmp eq i8 %3, 99, !dbg !5164
  br i1 %16, label %17, label %43, !dbg !5166

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5167
  %19 = icmp ne i24 %18, 0, !dbg !5167
  call void @llvm.dbg.value(metadata i1 %19, metadata !5150, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5153
  br label %43, !dbg !5169

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5170
  %22 = load i24, i24* %21, align 4, !dbg !5171
  %23 = and i24 %22, -458753, !dbg !5171
  %24 = or i24 %23, 262144, !dbg !5171
  call void @llvm.dbg.value(metadata i8 1, metadata !5150, metadata !DIExpression()), !dbg !5153
  br label %43, !dbg !5172

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5175
  %27 = load i24, i24* %26, align 4, !dbg !5176
  %28 = and i24 %27, -458753, !dbg !5176
  %29 = or i24 %28, 196608, !dbg !5176
  %30 = and i24 %27, 30720, !dbg !5177
  %31 = icmp eq i24 %30, 16384, !dbg !5177
  br label %43, !dbg !5179

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5180
  %34 = load i24, i24* %33, align 4, !dbg !5181
  %35 = and i24 %34, -458753, !dbg !5181
  %36 = or i24 %35, 196608, !dbg !5181
  %37 = and i24 %34, 30720, !dbg !5182
  %38 = icmp ne i24 %37, 0, !dbg !5182
  br label %43, !dbg !5184

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5185
  %41 = load i24, i24* %40, align 4, !dbg !5186
  %42 = or i24 %41, 1, !dbg !5186
  br label %43, !dbg !5187

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5188
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5189
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5190
  call void @llvm.dbg.value(metadata i8* %48, metadata !5149, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i8 poison, metadata !5150, metadata !DIExpression()), !dbg !5153
  %49 = lshr i24 %44, 1, !dbg !5188
  %50 = and i24 %49, 1, !dbg !5188
  %51 = zext i24 %50 to i32, !dbg !5188
  %52 = or i32 %51, %47, !dbg !5188
  %53 = trunc i32 %52 to i24, !dbg !5188
  %54 = shl nuw nsw i24 %53, 1, !dbg !5188
  %55 = and i24 %44, -3, !dbg !5188
  %56 = or i24 %54, %55, !dbg !5188
  store i24 %56, i24* %46, align 4, !dbg !5188
  ret i8* %48, !dbg !5191
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5192 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5197, metadata !DIExpression()), !dbg !5200
  %2 = load i8*, i8** %0, align 4, !dbg !5201
  call void @llvm.dbg.value(metadata i8* %2, metadata !5198, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.value(metadata i32 0, metadata !5199, metadata !DIExpression()), !dbg !5200
  %3 = load i8, i8* %2, align 1, !dbg !5202
  %4 = zext i8 %3 to i32, !dbg !5203
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5204
  %6 = icmp eq i32 %5, 0, !dbg !5205
  br i1 %6, label %19, label %7, !dbg !5205

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5199, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.value(metadata i8* %10, metadata !5198, metadata !DIExpression()), !dbg !5200
  %11 = mul i32 %9, 10, !dbg !5206
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5208
  call void @llvm.dbg.value(metadata i8* %12, metadata !5198, metadata !DIExpression()), !dbg !5200
  %13 = add i32 %11, -48, !dbg !5209
  %14 = add i32 %13, %8, !dbg !5210
  call void @llvm.dbg.value(metadata i32 %14, metadata !5199, metadata !DIExpression()), !dbg !5200
  %15 = load i8, i8* %12, align 1, !dbg !5202
  %16 = zext i8 %15 to i32, !dbg !5203
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5204
  %18 = icmp eq i32 %17, 0, !dbg !5205
  br i1 %18, label %19, label %7, !dbg !5205, !llvm.loop !5211

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5200
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5200
  store i8* %20, i8** %0, align 4, !dbg !5213
  ret i32 %21, !dbg !5214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5217, metadata !DIExpression()), !dbg !5218
  %2 = add i32 %0, -48, !dbg !5219
  %3 = icmp ult i32 %2, 10, !dbg !5220
  %4 = zext i1 %3 to i32, !dbg !5220
  ret i32 %4, !dbg !5221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5222 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5224, !srcloc !5225
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5226, !srcloc !5227
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #24, !dbg !5228, !srcloc !5229
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #24, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #24, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #24, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #24, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #24, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #24, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #24, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #24, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #24, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #24, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS\0A\09.equ\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,1\0A\09.type\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,%object", ""() #24, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #24, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR\0A\09.equ\09CONFIG_CONSOLE_GETCHAR,1\0A\09.type\09CONFIG_CONSOLE_GETCHAR,%object", ""() #24, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,16\0A\09.type\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,%object", ""() #24, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,16\0A\09.type\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,%object", ""() #24, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !5792, !srcloc !5793
  ret void, !dbg !5794
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5795 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5797, metadata !DIExpression()), !dbg !5799
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !5800
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !5801
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5802, !srcloc !5811
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5802
  call void @llvm.dbg.value(metadata i32 %3, metadata !5808, metadata !DIExpression()) #24, !dbg !5812
  call void @llvm.dbg.value(metadata i32 undef, metadata !5809, metadata !DIExpression()) #24, !dbg !5812
  call void @llvm.dbg.value(metadata i32 %3, metadata !5798, metadata !DIExpression()), !dbg !5799
  call void @llvm.dbg.value(metadata i32 %3, metadata !5813, metadata !DIExpression()) #24, !dbg !5818
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !5820, !srcloc !5821
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5822
  ret i32 0, !dbg !5823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5824 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5826
  %2 = or i32 %1, 512, !dbg !5826
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5826
  ret void, !dbg !5827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5828 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5829
  %2 = or i32 %1, 1024, !dbg !5829
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5829
  ret void, !dbg !5830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5831 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5833, metadata !DIExpression()), !dbg !5834
  ret i32 0, !dbg !5835
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_write(%struct.tty_serial* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5836 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5882, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i8* %1, metadata !5883, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i32 %2, metadata !5884, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i8* %1, metadata !5885, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i32 0, metadata !5886, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i32 0, metadata !5887, metadata !DIExpression()), !dbg !5888
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5889
  %5 = load i32, i32* %4, align 4, !dbg !5889
  %6 = icmp eq i32 %5, 0, !dbg !5891
  %7 = icmp eq i32 %2, 0, !dbg !5888
  br i1 %6, label %9, label %8, !dbg !5892

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !5886, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i8* %1, metadata !5885, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i32 %2, metadata !5884, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i32 %2, metadata !5884, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5888
  br i1 %7, label %37, label %20, !dbg !5893

9:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !5885, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i32 %2, metadata !5884, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i32 %2, metadata !5884, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5888
  br i1 %7, label %37, label %10, !dbg !5894

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %12, !dbg !5894

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %1, %10 ], [ %17, %12 ]
  %14 = phi i32 [ %2, %10 ], [ %15, %12 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !5885, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i32 %14, metadata !5884, metadata !DIExpression()), !dbg !5888
  %15 = add i32 %14, -1, !dbg !5896
  call void @llvm.dbg.value(metadata i32 %15, metadata !5884, metadata !DIExpression()), !dbg !5888
  %16 = load %struct.device*, %struct.device** %11, align 4, !dbg !5897
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5899
  call void @llvm.dbg.value(metadata i8* %17, metadata !5885, metadata !DIExpression()), !dbg !5888
  %18 = load i8, i8* %13, align 1, !dbg !5900
  tail call fastcc void @uart_poll_out(%struct.device* noundef %16, i8 noundef zeroext %18) #26, !dbg !5901
  call void @llvm.dbg.value(metadata i32 %15, metadata !5884, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5888
  %19 = icmp eq i32 %15, 0, !dbg !5894
  br i1 %19, label %37, label %12, !dbg !5894, !llvm.loop !5902

20:                                               ; preds = %8, %33
  %21 = phi i32 [ %24, %33 ], [ %2, %8 ]
  %22 = phi i32 [ %35, %33 ], [ 0, %8 ]
  %23 = phi i8* [ %34, %33 ], [ %1, %8 ]
  %24 = add i32 %21, -1, !dbg !5904
  call void @llvm.dbg.value(metadata i32 %22, metadata !5886, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i8* %23, metadata !5885, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i8* %23, metadata !5885, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5888
  %25 = load i8, i8* %23, align 1, !dbg !5905
  %26 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %25) #26, !dbg !5907
  call void @llvm.dbg.value(metadata i32 %26, metadata !5887, metadata !DIExpression()), !dbg !5888
  %27 = icmp slt i32 %26, 0, !dbg !5908
  br i1 %27, label %28, label %33, !dbg !5910

28:                                               ; preds = %20
  %29 = icmp eq i32 %22, 0, !dbg !5911
  br i1 %29, label %30, label %37, !dbg !5914

30:                                               ; preds = %28
  %31 = sub nsw i32 0, %26, !dbg !5915
  %32 = tail call fastcc i32* @z_errno() #26, !dbg !5917
  store i32 %31, i32* %32, align 4, !dbg !5918
  br label %37, !dbg !5919

33:                                               ; preds = %20
  %34 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5920
  call void @llvm.dbg.value(metadata i8* %34, metadata !5885, metadata !DIExpression()), !dbg !5888
  %35 = add nuw i32 %22, 1, !dbg !5921
  call void @llvm.dbg.value(metadata i32 %35, metadata !5886, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i32 %24, metadata !5884, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i32 %24, metadata !5884, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5888
  %36 = icmp eq i32 %24, 0, !dbg !5893
  br i1 %36, label %37, label %20, !dbg !5893, !llvm.loop !5922

37:                                               ; preds = %33, %12, %8, %9, %28, %30
  %38 = phi i32 [ %26, %30 ], [ %22, %28 ], [ 0, %9 ], [ 0, %8 ], [ %2, %12 ], [ %2, %33 ], !dbg !5888
  ret i32 %38, !dbg !5924
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5925 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5928, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.value(metadata i8 %1, metadata !5929, metadata !DIExpression()), !dbg !5930
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5931, !srcloc !5933
  tail call fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) #26, !dbg !5934
  ret void, !dbg !5935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5936 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5940, metadata !DIExpression()), !dbg !5945
  call void @llvm.dbg.value(metadata i8 %1, metadata !5941, metadata !DIExpression()), !dbg !5945
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !5946
  %4 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !5947
  br i1 %4, label %14, label %5, !dbg !5947

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !5948
  %7 = load i32, i32* %6, align 4, !dbg !5948
  %8 = icmp eq i32 %7, -1, !dbg !5948
  br i1 %8, label %14, label %9, !dbg !5948

9:                                                ; preds = %5
  %10 = icmp sgt i32 %7, 0, !dbg !5948
  %11 = select i1 %10, i32 %7, i32 0, !dbg !5948
  %12 = zext i32 %11 to i64, !dbg !5948
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %12) #26, !dbg !5948
  br label %14, !dbg !5948

14:                                               ; preds = %5, %2, %9
  %15 = phi i64 [ %13, %9 ], [ 0, %2 ], [ -1, %5 ], !dbg !5945
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !5949
  %17 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %3, [1 x i64] %16) #26, !dbg !5949
  call void @llvm.dbg.value(metadata i32 %17, metadata !5944, metadata !DIExpression()), !dbg !5945
  %18 = icmp slt i32 %17, 0, !dbg !5950
  br i1 %18, label %42, label %19, !dbg !5952

19:                                               ; preds = %14
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5953, !srcloc !5959
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !5953
  call void @llvm.dbg.value(metadata i32 %21, metadata !5956, metadata !DIExpression()) #24, !dbg !5960
  call void @llvm.dbg.value(metadata i32 undef, metadata !5957, metadata !DIExpression()) #24, !dbg !5960
  call void @llvm.dbg.value(metadata i32 %21, metadata !5942, metadata !DIExpression()), !dbg !5945
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !5961
  %23 = load i16, i16* %22, align 2, !dbg !5961
  %24 = zext i16 %23 to i32, !dbg !5962
  %25 = add nuw nsw i32 %24, 1, !dbg !5963
  call void @llvm.dbg.value(metadata i32 %25, metadata !5943, metadata !DIExpression()), !dbg !5945
  %26 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5964
  %27 = load i32, i32* %26, align 4, !dbg !5964
  %28 = icmp ult i32 %25, %27, !dbg !5966
  %29 = select i1 %28, i32 %25, i32 0, !dbg !5967
  call void @llvm.dbg.value(metadata i32 %29, metadata !5943, metadata !DIExpression()), !dbg !5945
  %30 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !5968
  %31 = load i16, i16* %30, align 4, !dbg !5968
  %32 = zext i16 %31 to i32, !dbg !5970
  %33 = icmp eq i32 %29, %32, !dbg !5971
  br i1 %33, label %34, label %35, !dbg !5972

34:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 %21, metadata !5973, metadata !DIExpression()) #24, !dbg !5976
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5979, !srcloc !5980
  br label %42, !dbg !5981

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !5982
  %37 = load i8*, i8** %36, align 4, !dbg !5982
  %38 = getelementptr inbounds i8, i8* %37, i32 %24, !dbg !5983
  store i8 %1, i8* %38, align 1, !dbg !5984
  %39 = trunc i32 %29 to i16, !dbg !5985
  store i16 %39, i16* %22, align 2, !dbg !5986
  call void @llvm.dbg.value(metadata i32 %21, metadata !5973, metadata !DIExpression()) #24, !dbg !5987
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5989, !srcloc !5980
  %40 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !5990
  %41 = load %struct.device*, %struct.device** %40, align 4, !dbg !5990
  tail call fastcc void @uart_irq_tx_enable(%struct.device* noundef %41) #26, !dbg !5991
  br label %42, !dbg !5992

42:                                               ; preds = %14, %35, %34
  %43 = phi i32 [ -28, %34 ], [ 0, %35 ], [ %17, %14 ], !dbg !5945
  ret i32 %43, !dbg !5993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32* @z_errno() unnamed_addr #1 !dbg !5994 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5998, !srcloc !6000
  %1 = tail call i32* @z_impl_z_errno() #25, !dbg !6001
  ret i32* %1, !dbg !6002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !6003 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6008, metadata !DIExpression()), !dbg !6009
  call void @llvm.dbg.value(metadata i64 %0, metadata !6010, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i32 1000, metadata !6015, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i32 10000, metadata !6016, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i8 1, metadata !6017, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i8 0, metadata !6018, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i8 1, metadata !6019, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i8 0, metadata !6020, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i8 1, metadata !6021, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i8 0, metadata !6022, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i64 0, metadata !6023, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i64 0, metadata !6023, metadata !DIExpression()), !dbg !6027
  %2 = mul i64 %0, 10, !dbg !6029
  ret i64 %2, !dbg !6035
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !6036 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6046, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6045, metadata !DIExpression()), !dbg !6047
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6048, !srcloc !6050
  %3 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) #25, !dbg !6051
  ret i32 %3, !dbg !6052
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6053 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6055, metadata !DIExpression()), !dbg !6056
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6057, !srcloc !6059
  tail call fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) #26, !dbg !6060
  ret void, !dbg !6061
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6062 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6064, metadata !DIExpression()), !dbg !6066
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6067
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6067
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6067
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6065, metadata !DIExpression()), !dbg !6066
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 7, !dbg !6068
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6068
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6070
  br i1 %7, label %9, label %8, !dbg !6071

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6072
  br label %9, !dbg !6074

9:                                                ; preds = %8, %1
  ret void, !dbg !6075
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6076 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6078, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i8 %1, metadata !6079, metadata !DIExpression()), !dbg !6081
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6082
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6082
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6082
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6080, metadata !DIExpression()), !dbg !6081
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 1, !dbg !6083
  %7 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %6, align 4, !dbg !6083
  tail call void %7(%struct.device* noundef %0, i8 noundef zeroext %1) #25, !dbg !6084
  ret void, !dbg !6085
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_read(%struct.tty_serial* noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6086 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6090, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i8* %1, metadata !6091, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 %2, metadata !6092, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i8* %1, metadata !6093, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 0, metadata !6094, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 0, metadata !6095, metadata !DIExpression()), !dbg !6096
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6097
  %5 = load i32, i32* %4, align 4, !dbg !6097
  %6 = icmp eq i32 %5, 0, !dbg !6099
  br i1 %6, label %9, label %7, !dbg !6100

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !6094, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i8* %1, metadata !6093, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 %2, metadata !6092, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 %2, metadata !6092, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6096
  %8 = icmp eq i32 %2, 0, !dbg !6101
  br i1 %8, label %28, label %11, !dbg !6101

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @tty_read_unbuf(%struct.tty_serial* noundef nonnull %0, i8* noundef %1, i32 noundef %2) #26, !dbg !6102
  br label %28, !dbg !6104

11:                                               ; preds = %7, %23
  %12 = phi i32 [ %15, %23 ], [ %2, %7 ]
  %13 = phi i32 [ %26, %23 ], [ 0, %7 ]
  %14 = phi i8* [ %25, %23 ], [ %1, %7 ]
  %15 = add i32 %12, -1, !dbg !6105
  call void @llvm.dbg.value(metadata i32 %13, metadata !6094, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i8* %14, metadata !6093, metadata !DIExpression()), !dbg !6096
  %16 = tail call fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) #26, !dbg !6106
  call void @llvm.dbg.value(metadata i32 %16, metadata !6095, metadata !DIExpression()), !dbg !6096
  %17 = icmp slt i32 %16, 0, !dbg !6108
  br i1 %17, label %18, label %23, !dbg !6110

18:                                               ; preds = %11
  %19 = icmp eq i32 %13, 0, !dbg !6111
  br i1 %19, label %20, label %28, !dbg !6114

20:                                               ; preds = %18
  %21 = sub nsw i32 0, %16, !dbg !6115
  %22 = tail call fastcc i32* @z_errno() #26, !dbg !6117
  store i32 %21, i32* %22, align 4, !dbg !6118
  br label %28, !dbg !6119

23:                                               ; preds = %11
  %24 = trunc i32 %16 to i8, !dbg !6120
  %25 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6121
  call void @llvm.dbg.value(metadata i8* %25, metadata !6093, metadata !DIExpression()), !dbg !6096
  store i8 %24, i8* %14, align 1, !dbg !6122
  %26 = add nuw i32 %13, 1, !dbg !6123
  call void @llvm.dbg.value(metadata i32 %26, metadata !6094, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 %15, metadata !6092, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 %15, metadata !6092, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6096
  %27 = icmp eq i32 %15, 0, !dbg !6101
  br i1 %27, label %28, label %11, !dbg !6101, !llvm.loop !6124

28:                                               ; preds = %23, %7, %18, %20, %9
  %29 = phi i32 [ %10, %9 ], [ %16, %20 ], [ %13, %18 ], [ 0, %7 ], [ %2, %23 ], !dbg !6096
  ret i32 %29, !dbg !6126
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_read_unbuf(%struct.tty_serial* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #1 !dbg !6127 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6129, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i8* %1, metadata !6130, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 %2, metadata !6131, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i8* %1, metadata !6132, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 0, metadata !6133, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 0, metadata !6134, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 undef, metadata !6135, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 0, metadata !6133, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i8* %1, metadata !6132, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 %2, metadata !6131, metadata !DIExpression()), !dbg !6138
  %5 = icmp eq i32 %2, 0, !dbg !6139
  br i1 %5, label %48, label %6, !dbg !6139

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6140
  %8 = load i32, i32* %7, align 4, !dbg !6140
  call void @llvm.dbg.value(metadata i32 %8, metadata !6135, metadata !DIExpression()), !dbg !6138
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %10, !dbg !6139

10:                                               ; preds = %6, %46
  %11 = phi i32 [ %8, %6 ], [ %39, %46 ]
  %12 = phi i32 [ 0, %6 ], [ %31, %46 ]
  %13 = phi i8* [ %1, %6 ], [ %32, %46 ]
  %14 = phi i32 [ %2, %6 ], [ %33, %46 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6135, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 %12, metadata !6133, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i8* %13, metadata !6132, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 %14, metadata !6131, metadata !DIExpression()), !dbg !6138
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6141
  %15 = load %struct.device*, %struct.device** %9, align 4, !dbg !6142
  call void @llvm.dbg.value(metadata i8* %4, metadata !6136, metadata !DIExpression(DW_OP_deref)), !dbg !6143
  %16 = call fastcc i32 @uart_poll_in(%struct.device* noundef %15, i8* noundef nonnull %4) #26, !dbg !6144
  call void @llvm.dbg.value(metadata i32 %16, metadata !6134, metadata !DIExpression()), !dbg !6138
  %17 = icmp slt i32 %16, -1, !dbg !6145
  br i1 %17, label %18, label %22, !dbg !6147

18:                                               ; preds = %10
  %19 = icmp eq i32 %12, 0, !dbg !6148
  br i1 %19, label %20, label %44, !dbg !6151

20:                                               ; preds = %18
  %21 = call fastcc i32* @z_errno() #26, !dbg !6152
  store i32 %16, i32* %21, align 4, !dbg !6154
  call void @llvm.dbg.value(metadata i32 %39, metadata !6135, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 undef, metadata !6133, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i8* %32, metadata !6132, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 %33, metadata !6131, metadata !DIExpression()), !dbg !6138
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6155
  br label %48

22:                                               ; preds = %10
  %23 = icmp eq i32 %16, 0, !dbg !6156
  br i1 %23, label %24, label %30, !dbg !6158

24:                                               ; preds = %22
  %25 = load i8, i8* %4, align 1, !dbg !6159
  call void @llvm.dbg.value(metadata i8 %25, metadata !6136, metadata !DIExpression()), !dbg !6143
  %26 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6161
  call void @llvm.dbg.value(metadata i8* %26, metadata !6132, metadata !DIExpression()), !dbg !6138
  store i8 %25, i8* %13, align 1, !dbg !6162
  %27 = add i32 %12, 1, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %27, metadata !6133, metadata !DIExpression()), !dbg !6138
  %28 = add i32 %14, -1, !dbg !6164
  call void @llvm.dbg.value(metadata i32 %28, metadata !6131, metadata !DIExpression()), !dbg !6138
  %29 = icmp eq i32 %28, 0, !dbg !6165
  br i1 %29, label %44, label %30, !dbg !6167

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %27, %24 ], [ %12, %22 ]
  %32 = phi i8* [ %26, %24 ], [ %13, %22 ]
  %33 = phi i32 [ %28, %24 ], [ %14, %22 ]
  %34 = icmp eq i32 %11, -1, !dbg !6168
  br i1 %34, label %38, label %35, !dbg !6169

35:                                               ; preds = %30
  %36 = add i32 %11, -1, !dbg !6170
  call void @llvm.dbg.value(metadata i32 %36, metadata !6135, metadata !DIExpression()), !dbg !6138
  %37 = icmp eq i32 %11, 0, !dbg !6171
  br i1 %37, label %44, label %38, !dbg !6172

38:                                               ; preds = %35, %30
  %39 = phi i32 [ %36, %35 ], [ -1, %30 ], !dbg !6138
  call void @llvm.dbg.value(metadata i32 %39, metadata !6135, metadata !DIExpression()), !dbg !6138
  %40 = icmp eq i32 %16, -1, !dbg !6173
  br i1 %40, label %41, label %46, !dbg !6175

41:                                               ; preds = %38
  %42 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1) #26, !dbg !6176
  %43 = insertvalue [1 x i64] poison, i64 %42, 0, !dbg !6178
  call fastcc void @k_sleep([1 x i64] %43) #26, !dbg !6178
  br label %46, !dbg !6179

44:                                               ; preds = %35, %24, %18
  %45 = phi i32 [ %12, %18 ], [ %31, %35 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !6135, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 undef, metadata !6133, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i8* %32, metadata !6132, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 %33, metadata !6131, metadata !DIExpression()), !dbg !6138
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6155
  br label %48

46:                                               ; preds = %38, %41
  call void @llvm.dbg.value(metadata i32 %39, metadata !6135, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 %31, metadata !6133, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i8* %32, metadata !6132, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 %33, metadata !6131, metadata !DIExpression()), !dbg !6138
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6155
  %47 = icmp eq i32 %33, 0, !dbg !6139
  br i1 %47, label %48, label %10, !dbg !6139

48:                                               ; preds = %46, %3, %44, %20
  %49 = phi i32 [ -1, %20 ], [ %45, %44 ], [ 0, %3 ], [ %31, %46 ], !dbg !6138
  ret i32 %49, !dbg !6180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) unnamed_addr #1 !dbg !6181 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6185, metadata !DIExpression()), !dbg !6189
  %2 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6190
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6191
  %4 = load i32, i32* %3, align 4, !dbg !6191
  %5 = icmp eq i32 %4, -1, !dbg !6191
  br i1 %5, label %11, label %6, !dbg !6191

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0, !dbg !6191
  %8 = select i1 %7, i32 %4, i32 0, !dbg !6191
  %9 = zext i32 %8 to i64, !dbg !6191
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %9) #26, !dbg !6191
  br label %11, !dbg !6191

11:                                               ; preds = %1, %6
  %12 = phi i64 [ %10, %6 ], [ -1, %1 ], !dbg !6191
  %13 = insertvalue [1 x i64] poison, i64 %12, 0, !dbg !6192
  %14 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %2, [1 x i64] %13) #26, !dbg !6192
  call void @llvm.dbg.value(metadata i32 %14, metadata !6188, metadata !DIExpression()), !dbg !6189
  %15 = icmp slt i32 %14, 0, !dbg !6193
  br i1 %15, label %33, label %16, !dbg !6195

16:                                               ; preds = %11
  %17 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6196, !srcloc !5959
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !6196
  call void @llvm.dbg.value(metadata i32 %18, metadata !5956, metadata !DIExpression()) #24, !dbg !6198
  call void @llvm.dbg.value(metadata i32 undef, metadata !5957, metadata !DIExpression()) #24, !dbg !6198
  call void @llvm.dbg.value(metadata i32 %18, metadata !6186, metadata !DIExpression()), !dbg !6189
  %19 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6199
  %20 = load i8*, i8** %19, align 4, !dbg !6199
  %21 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6200
  %22 = load i16, i16* %21, align 4, !dbg !6201
  %23 = add i16 %22, 1, !dbg !6201
  store i16 %23, i16* %21, align 4, !dbg !6201
  %24 = zext i16 %22 to i32, !dbg !6202
  %25 = getelementptr inbounds i8, i8* %20, i32 %24, !dbg !6202
  %26 = load i8, i8* %25, align 1, !dbg !6202
  call void @llvm.dbg.value(metadata i8 %26, metadata !6187, metadata !DIExpression()), !dbg !6189
  %27 = zext i16 %23 to i32, !dbg !6203
  %28 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6205
  %29 = load i32, i32* %28, align 4, !dbg !6205
  %30 = icmp ugt i32 %29, %27, !dbg !6206
  %31 = select i1 %30, i16 %23, i16 0, !dbg !6207
  store i16 %31, i16* %21, align 4, !dbg !6189
  call void @llvm.dbg.value(metadata i32 %18, metadata !5973, metadata !DIExpression()) #24, !dbg !6208
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !6210, !srcloc !5980
  %32 = zext i8 %26 to i32, !dbg !6211
  br label %33, !dbg !6212

33:                                               ; preds = %11, %16
  %34 = phi i32 [ %32, %16 ], [ %14, %11 ], !dbg !6189
  ret i32 %34, !dbg !6213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6214 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6216, metadata !DIExpression()), !dbg !6218
  call void @llvm.dbg.value(metadata i8* %1, metadata !6217, metadata !DIExpression()), !dbg !6218
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6219, !srcloc !6221
  %3 = tail call fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !6222
  ret i32 %3, !dbg !6223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !6224 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6228, metadata !DIExpression()), !dbg !6229
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6230, !srcloc !6232
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !6233
  ret void, !dbg !6234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6235 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6237, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.value(metadata i8* %1, metadata !6238, metadata !DIExpression()), !dbg !6240
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6241
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6241
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6241
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6239, metadata !DIExpression()), !dbg !6240
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 0, !dbg !6242
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !6242
  %8 = icmp eq i32 (%struct.device*, i8*)* %7, null, !dbg !6244
  br i1 %8, label %11, label %9, !dbg !6245

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1) #25, !dbg !6246
  br label %11, !dbg !6247

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6240
  ret i32 %12, !dbg !6248
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_init(%struct.tty_serial* noundef %0, %struct.device* noundef %1) local_unnamed_addr #1 !dbg !6249 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6253, metadata !DIExpression()), !dbg !6255
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !6254, metadata !DIExpression()), !dbg !6255
  %3 = icmp eq %struct.device* %1, null, !dbg !6256
  br i1 %3, label %17, label %4, !dbg !6258

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6259
  store %struct.device* %1, %struct.device** %5, align 4, !dbg !6260
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6261
  store i8* null, i8** %6, align 4, !dbg !6262
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6263
  store i32 0, i32* %7, align 4, !dbg !6264
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6265
  store i8* null, i8** %8, align 4, !dbg !6266
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6267
  store i32 0, i32* %9, align 4, !dbg !6268
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !6269
  store i16 0, i16* %10, align 2, !dbg !6270
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !6271
  store i16 0, i16* %11, align 4, !dbg !6272
  %12 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6273
  store i16 0, i16* %12, align 2, !dbg !6274
  %13 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6275
  store i16 0, i16* %13, align 4, !dbg !6276
  %14 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6277
  store i32 -1, i32* %14, align 4, !dbg !6278
  %15 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !6279
  store i32 -1, i32* %15, align 4, !dbg !6280
  %16 = bitcast %struct.tty_serial* %0 to i8*, !dbg !6281
  tail call fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef nonnull %1, i8* noundef %16) #26, !dbg !6282
  br label %17, !dbg !6283

17:                                               ; preds = %2, %4
  %18 = phi i32 [ 0, %4 ], [ -19, %2 ], !dbg !6255
  ret i32 %18, !dbg !6284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6285 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6287, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @tty_uart_isr, metadata !6288, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.value(metadata i8* %1, metadata !6289, metadata !DIExpression()), !dbg !6291
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6292
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6292
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6292
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6290, metadata !DIExpression()), !dbg !6291
  %6 = icmp eq %struct.uart_driver_api* %5, null, !dbg !6293
  br i1 %6, label %12, label %7, !dbg !6295

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 18, !dbg !6296
  %9 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %8, align 4, !dbg !6296
  %10 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %9, null, !dbg !6297
  br i1 %10, label %12, label %11, !dbg !6298

11:                                               ; preds = %7
  tail call void %9(%struct.device* noundef nonnull %0, void (%struct.device*, i8*)* noundef nonnull @tty_uart_isr, i8* noundef %1) #25, !dbg !6299
  br label %12, !dbg !6301

12:                                               ; preds = %11, %7, %2
  ret void, !dbg !6302
}

; Function Attrs: noinline nounwind optsize
define internal void @tty_uart_isr(%struct.device* noundef %0, i8* noundef %1) #1 !dbg !6303 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6305, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i8* %1, metadata !6306, metadata !DIExpression()), !dbg !6311
  %4 = bitcast i8* %1 to %struct.tty_serial*, !dbg !6312
  call void @llvm.dbg.value(metadata %struct.tty_serial* %4, metadata !6307, metadata !DIExpression()), !dbg !6311
  tail call fastcc void @uart_irq_update(%struct.device* noundef %0) #26, !dbg !6313
  %5 = tail call fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) #26, !dbg !6314
  %6 = icmp eq i32 %5, 0, !dbg !6314
  br i1 %6, label %15, label %7, !dbg !6315

7:                                                ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6316
  call void @llvm.dbg.value(metadata i8* %3, metadata !6308, metadata !DIExpression(DW_OP_deref)), !dbg !6317
  %8 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6318
  %9 = icmp eq i32 %8, 0, !dbg !6321
  br i1 %9, label %14, label %10, !dbg !6322

10:                                               ; preds = %7, %10
  %11 = load i8, i8* %3, align 1, !dbg !6323
  call void @llvm.dbg.value(metadata i8 %11, metadata !6308, metadata !DIExpression()), !dbg !6317
  call fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %4, i8 noundef zeroext %11) #26, !dbg !6324
  call void @llvm.dbg.value(metadata i8* %3, metadata !6308, metadata !DIExpression(DW_OP_deref)), !dbg !6317
  %12 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6318
  %13 = icmp eq i32 %12, 0, !dbg !6321
  br i1 %13, label %14, label %10, !dbg !6322, !llvm.loop !6325

14:                                               ; preds = %10, %7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6328
  br label %15, !dbg !6329

15:                                               ; preds = %14, %2
  %16 = call fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) #26, !dbg !6330
  %17 = icmp eq i32 %16, 0, !dbg !6330
  br i1 %17, label %44, label %18, !dbg !6332

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %1, i32 60, !dbg !6333
  %20 = bitcast i8* %19 to i16*, !dbg !6333
  %21 = load i16, i16* %20, align 4, !dbg !6333
  %22 = getelementptr inbounds i8, i8* %1, i32 62, !dbg !6336
  %23 = bitcast i8* %22 to i16*, !dbg !6336
  %24 = load i16, i16* %23, align 2, !dbg !6336
  %25 = icmp eq i16 %21, %24, !dbg !6337
  br i1 %25, label %26, label %27, !dbg !6338

26:                                               ; preds = %18
  call fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6339
  br label %44, !dbg !6341

27:                                               ; preds = %18
  %28 = zext i16 %21 to i32, !dbg !6342
  %29 = getelementptr inbounds i8, i8* %1, i32 52, !dbg !6343
  %30 = bitcast i8* %29 to i8**, !dbg !6343
  %31 = load i8*, i8** %30, align 4, !dbg !6343
  %32 = add i16 %21, 1, !dbg !6345
  store i16 %32, i16* %20, align 4, !dbg !6345
  %33 = getelementptr inbounds i8, i8* %31, i32 %28, !dbg !6346
  call fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %33) #26, !dbg !6347
  %34 = load i16, i16* %20, align 4, !dbg !6348
  %35 = zext i16 %34 to i32, !dbg !6350
  %36 = getelementptr inbounds i8, i8* %1, i32 56, !dbg !6351
  %37 = bitcast i8* %36 to i32*, !dbg !6351
  %38 = load i32, i32* %37, align 4, !dbg !6351
  %39 = icmp ugt i32 %38, %35, !dbg !6352
  br i1 %39, label %41, label %40, !dbg !6353

40:                                               ; preds = %27
  store i16 0, i16* %20, align 4, !dbg !6354
  br label %41, !dbg !6356

41:                                               ; preds = %40, %27
  %42 = getelementptr inbounds i8, i8* %1, i32 36, !dbg !6357
  %43 = bitcast i8* %42 to %struct.k_sem*, !dbg !6357
  call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %43) #26, !dbg !6358
  br label %44

44:                                               ; preds = %26, %41, %15
  ret void, !dbg !6359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6360 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6362, metadata !DIExpression()), !dbg !6363
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6364, !srcloc !6366
  tail call fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) #26, !dbg !6367
  ret void, !dbg !6368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6369 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6371, metadata !DIExpression()), !dbg !6373
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6374
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6374
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6374
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6372, metadata !DIExpression()), !dbg !6373
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 13, !dbg !6375
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6375
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6377
  br i1 %7, label %10, label %8, !dbg !6378

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6379
  br label %10, !dbg !6380

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6373
  ret i32 %11, !dbg !6381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6382 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6384, metadata !DIExpression()), !dbg !6388
  call void @llvm.dbg.value(metadata i8* %1, metadata !6385, metadata !DIExpression()), !dbg !6388
  call void @llvm.dbg.value(metadata i32 1, metadata !6386, metadata !DIExpression()), !dbg !6388
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6389
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6389
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6389
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6387, metadata !DIExpression()), !dbg !6388
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 6, !dbg !6390
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6390
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6392
  br i1 %8, label %11, label %9, !dbg !6393

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6394
  br label %11, !dbg !6395

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6388
  ret i32 %12, !dbg !6396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6397 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6399, metadata !DIExpression()), !dbg !6402
  call void @llvm.dbg.value(metadata i8 %1, metadata !6400, metadata !DIExpression()), !dbg !6402
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6403
  %4 = load i16, i16* %3, align 2, !dbg !6403
  %5 = zext i16 %4 to i32, !dbg !6404
  %6 = add nuw nsw i32 %5, 1, !dbg !6405
  call void @llvm.dbg.value(metadata i32 %6, metadata !6401, metadata !DIExpression()), !dbg !6402
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6406
  %8 = load i32, i32* %7, align 4, !dbg !6406
  %9 = icmp ult i32 %6, %8, !dbg !6408
  %10 = select i1 %9, i32 %6, i32 0, !dbg !6409
  call void @llvm.dbg.value(metadata i32 %10, metadata !6401, metadata !DIExpression()), !dbg !6402
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6410
  %12 = load i16, i16* %11, align 4, !dbg !6410
  %13 = zext i16 %12 to i32, !dbg !6412
  %14 = icmp eq i32 %10, %13, !dbg !6413
  br i1 %14, label %15, label %17, !dbg !6414

15:                                               ; preds = %2
  %16 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef nonnull %0, i8 noundef zeroext 126) #26, !dbg !6415
  br label %23, !dbg !6417

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6418
  %19 = load i8*, i8** %18, align 4, !dbg !6418
  %20 = getelementptr inbounds i8, i8* %19, i32 %5, !dbg !6419
  store i8 %1, i8* %20, align 1, !dbg !6420
  %21 = trunc i32 %10 to i16, !dbg !6421
  store i16 %21, i16* %3, align 2, !dbg !6422
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6423
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %22) #26, !dbg !6424
  br label %23, !dbg !6425

23:                                               ; preds = %17, %15
  ret void, !dbg !6426
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6427 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6429, metadata !DIExpression()), !dbg !6431
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6432
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6432
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6432
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6430, metadata !DIExpression()), !dbg !6431
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 9, !dbg !6433
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6433
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6435
  br i1 %7, label %10, label %8, !dbg !6436

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6437
  br label %10, !dbg !6438

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6431
  ret i32 %11, !dbg !6439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6440 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6442, metadata !DIExpression()), !dbg !6443
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6444, !srcloc !6446
  tail call fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6447
  ret void, !dbg !6448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6449 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6451, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.value(metadata i8* %1, metadata !6452, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.value(metadata i32 1, metadata !6453, metadata !DIExpression()), !dbg !6455
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6456
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6456
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6456
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6454, metadata !DIExpression()), !dbg !6455
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 5, !dbg !6457
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6457
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6459
  br i1 %8, label %11, label %9, !dbg !6460

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6461
  br label %11, !dbg !6462

11:                                               ; preds = %2, %9
  ret void, !dbg !6463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_give(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !6464 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6468, metadata !DIExpression()), !dbg !6469
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6470, !srcloc !6472
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #25, !dbg !6473
  ret void, !dbg !6474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6475 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6477, metadata !DIExpression()), !dbg !6479
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6480
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6480
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6480
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6478, metadata !DIExpression()), !dbg !6479
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 8, !dbg !6481
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6481
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6483
  br i1 %7, label %9, label %8, !dbg !6484

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6485
  br label %9, !dbg !6487

9:                                                ; preds = %8, %1
  ret void, !dbg !6488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6489 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6491, metadata !DIExpression()), !dbg !6493
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6494
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6494
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6494
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6492, metadata !DIExpression()), !dbg !6493
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 17, !dbg !6495
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6495
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6497
  br i1 %7, label %10, label %8, !dbg !6498

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6499
  br label %10, !dbg !6500

10:                                               ; preds = %1, %8
  ret void, !dbg !6501
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_rx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6502 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6506, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i8* %1, metadata !6507, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 %2, metadata !6508, metadata !DIExpression()), !dbg !6509
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6510
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6510
  tail call fastcc void @uart_irq_rx_disable(%struct.device* noundef %5) #26, !dbg !6511
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6512
  store i8* %1, i8** %6, align 4, !dbg !6513
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6514
  store i32 %2, i32* %7, align 4, !dbg !6515
  %8 = icmp eq i32 %2, 0, !dbg !6516
  br i1 %8, label %12, label %9, !dbg !6518

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6519
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %10, i32 noundef 0) #26, !dbg !6521
  %11 = load %struct.device*, %struct.device** %4, align 4, !dbg !6522
  tail call fastcc void @uart_irq_rx_enable(%struct.device* noundef %11) #26, !dbg !6523
  br label %12, !dbg !6524

12:                                               ; preds = %9, %3
  ret i32 0, !dbg !6525
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6526 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6528, metadata !DIExpression()), !dbg !6529
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6530, !srcloc !6532
  tail call fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) #26, !dbg !6533
  ret void, !dbg !6534
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !6535 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6539, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata i32 %1, metadata !6540, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata i32 -1, metadata !6541, metadata !DIExpression()), !dbg !6542
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6543, !srcloc !6545
  %3 = tail call i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef -1) #25, !dbg !6546
  ret void, !dbg !6547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6548 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6550, metadata !DIExpression()), !dbg !6551
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6552, !srcloc !6554
  tail call fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) #26, !dbg !6555
  ret void, !dbg !6556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6557 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6559, metadata !DIExpression()), !dbg !6561
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6562
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6562
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6562
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6560, metadata !DIExpression()), !dbg !6561
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 10, !dbg !6563
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6563
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6565
  br i1 %7, label %9, label %8, !dbg !6566

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6567
  br label %9, !dbg !6569

9:                                                ; preds = %8, %1
  ret void, !dbg !6570
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6571 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6573, metadata !DIExpression()), !dbg !6575
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6576
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6576
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6576
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6574, metadata !DIExpression()), !dbg !6575
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 11, !dbg !6577
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6577
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6579
  br i1 %7, label %9, label %8, !dbg !6580

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6581
  br label %9, !dbg !6583

9:                                                ; preds = %8, %1
  ret void, !dbg !6584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_tx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6585 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6587, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i8* %1, metadata !6588, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i32 %2, metadata !6589, metadata !DIExpression()), !dbg !6590
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6591
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6591
  tail call fastcc void @uart_irq_tx_disable(%struct.device* noundef %5) #26, !dbg !6592
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6593
  store i8* %1, i8** %6, align 4, !dbg !6594
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6595
  store i32 %2, i32* %7, align 4, !dbg !6596
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !6597
  %9 = add i32 %2, -1, !dbg !6598
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %8, i32 noundef %9) #26, !dbg !6599
  ret i32 0, !dbg !6600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_write(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6601 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6605, metadata !DIExpression()), !dbg !6608
  call void @llvm.dbg.value(metadata i8* %1, metadata !6606, metadata !DIExpression()), !dbg !6608
  call void @llvm.dbg.value(metadata i32 %2, metadata !6607, metadata !DIExpression()), !dbg !6608
  %4 = tail call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6609
  ret i32 %4, !dbg !6610
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_read(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6611 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6615, metadata !DIExpression()), !dbg !6618
  call void @llvm.dbg.value(metadata i8* %1, metadata !6616, metadata !DIExpression()), !dbg !6618
  call void @llvm.dbg.value(metadata i32 %2, metadata !6617, metadata !DIExpression()), !dbg !6618
  %4 = tail call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6619
  ret i32 %4, !dbg !6620
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_putchar(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !6621 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !6623, metadata !DIExpression()), !dbg !6624
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.value(metadata i8* %2, metadata !6623, metadata !DIExpression(DW_OP_deref)), !dbg !6624
  %3 = call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %2, i32 noundef 1) #25, !dbg !6625
  ret i32 %3, !dbg !6626
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_getchar() local_unnamed_addr #1 !dbg !6627 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6633
  call void @llvm.dbg.value(metadata i8* %1, metadata !6631, metadata !DIExpression(DW_OP_deref)), !dbg !6634
  %2 = call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %1, i32 noundef 1) #25, !dbg !6635
  call void @llvm.dbg.value(metadata i32 %2, metadata !6632, metadata !DIExpression()), !dbg !6634
  %3 = icmp slt i32 %2, 0, !dbg !6636
  %4 = load i8, i8* %1, align 1, !dbg !6638
  %5 = zext i8 %4 to i32, !dbg !6638
  %6 = select i1 %3, i32 %2, i32 %5, !dbg !6638
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6639
  ret i32 %6, !dbg !6639
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_init() local_unnamed_addr #1 !dbg !6640 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6642, metadata !DIExpression()), !dbg !6647
  %1 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !6648
  br i1 %1, label %2, label %13, !dbg !6650

2:                                                ; preds = %0
  %3 = tail call i32 @tty_init(%struct.tty_serial* noundef nonnull @console_serial, %struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !6651
  call void @llvm.dbg.value(metadata i32 %3, metadata !6643, metadata !DIExpression()), !dbg !6647
  %4 = icmp eq i32 %3, 0, !dbg !6652
  br i1 %4, label %5, label %13, !dbg !6654

5:                                                ; preds = %2
  %6 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6655
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %6, metadata !6644, metadata !DIExpression()), !dbg !6656
  %7 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %6, i32 0, i32 18, !dbg !6657
  %8 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %7, align 4, !dbg !6657
  %9 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %8, null, !dbg !6659
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @tty_set_tx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @console_txbuf, i32 0, i32 0), i32 noundef 16) #25, !dbg !6660
  %12 = tail call i32 @tty_set_rx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @console_rxbuf, i32 0, i32 0), i32 noundef 16) #25, !dbg !6661
  br label %13, !dbg !6662

13:                                               ; preds = %2, %0, %5, %10
  %14 = phi i32 [ 0, %10 ], [ -134, %5 ], [ -19, %0 ], [ %3, %2 ]
  ret i32 %14, !dbg !6663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !6664 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6669, metadata !DIExpression()), !dbg !6670
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6671, !srcloc !6673
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !6674
  ret i1 %1, !dbg !6675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !6676 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6678, metadata !DIExpression()), !dbg !6679
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !6680
  ret i1 %1, !dbg !6681
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6731, metadata !DIExpression()), !dbg !6733
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6732, metadata !DIExpression()), !dbg !6733
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6734
  ret void, !dbg !6735
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6736 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6753, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6754, metadata !DIExpression()), !dbg !6756
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6757
  %4 = load i32, i32* %3, align 4, !dbg !6757
  call void @llvm.dbg.value(metadata i32 %4, metadata !6755, metadata !DIExpression()), !dbg !6756
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6758
  ret void, !dbg !6759
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6760 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6764, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i8* %0, metadata !6765, metadata !DIExpression()), !dbg !6767
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6768
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6768
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6766, metadata !DIExpression()), !dbg !6769
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6769
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6770
  %5 = bitcast i8* %4 to i32*, !dbg !6770
  %6 = load i32, i32* %5, align 4, !dbg !6770
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6771
  store i32 %6, i32* %7, align 4, !dbg !6772
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6773
  unreachable, !dbg !6774
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6778, metadata !DIExpression()), !dbg !6779
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6780
  ret void, !dbg !6781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6786, metadata !DIExpression()), !dbg !6787
  %2 = icmp sgt i32 %0, -1, !dbg !6788
  br i1 %2, label %3, label %8, !dbg !6790

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6791, !srcloc !6793
  %4 = and i32 %0, 31, !dbg !6794
  %5 = shl nuw i32 1, %4, !dbg !6795
  %6 = lshr i32 %0, 5, !dbg !6796
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6797
  store volatile i32 %5, i32* %7, align 4, !dbg !6798
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6799, !srcloc !6800
  br label %8, !dbg !6801

8:                                                ; preds = %3, %1
  ret void, !dbg !6802
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6805, metadata !DIExpression()), !dbg !6806
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6807
  ret void, !dbg !6808
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6811, metadata !DIExpression()), !dbg !6812
  %2 = icmp sgt i32 %0, -1, !dbg !6813
  br i1 %2, label %3, label %8, !dbg !6815

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6816
  %5 = shl nuw i32 1, %4, !dbg !6818
  %6 = lshr i32 %0, 5, !dbg !6819
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6820
  store volatile i32 %5, i32* %7, align 4, !dbg !6821
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6822, !srcloc !6826
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6827, !srcloc !6830
  br label %8, !dbg !6831

8:                                                ; preds = %3, %1
  ret void, !dbg !6832
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6833 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6837, metadata !DIExpression()), !dbg !6838
  %2 = lshr i32 %0, 5, !dbg !6839
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6840
  %4 = load volatile i32, i32* %3, align 4, !dbg !6840
  %5 = and i32 %0, 31, !dbg !6841
  %6 = shl nuw i32 1, %5, !dbg !6841
  %7 = and i32 %4, %6, !dbg !6842
  ret i32 %7, !dbg !6843
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6844 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6848, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.value(metadata i32 %1, metadata !6849, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.value(metadata i32 %2, metadata !6850, metadata !DIExpression()), !dbg !6851
  %4 = add i32 %1, 1, !dbg !6852
  call void @llvm.dbg.value(metadata i32 %4, metadata !6849, metadata !DIExpression()), !dbg !6851
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6855
  ret void, !dbg !6856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6861, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.value(metadata i32 %1, metadata !6862, metadata !DIExpression()), !dbg !6863
  %3 = trunc i32 %1 to i8, !dbg !6864
  %4 = shl i8 %3, 4, !dbg !6864
  %5 = and i32 %0, 15, !dbg !6866
  %6 = add nsw i32 %5, -4, !dbg !6866
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6866
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6866
  %9 = icmp slt i32 %0, 0, !dbg !6866
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6866
  store volatile i8 %4, i8* %10, align 1, !dbg !6864
  ret void, !dbg !6867
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6868 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6870, metadata !DIExpression()), !dbg !6871
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6872
  ret void, !dbg !6873
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6874 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6876
  tail call void @z_arm_int_exit() #25, !dbg !6877
  ret void, !dbg !6878
}

; Function Attrs: optsize
declare !dbg !6879 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6880 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6882 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6884
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6885
  tail call void @z_bss_zero() #25, !dbg !6886
  tail call void @z_data_copy() #25, !dbg !6887
  tail call void @z_arm_interrupt_init() #25, !dbg !6888
  tail call void @z_cstart() #28, !dbg !6889
  unreachable, !dbg !6889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6890 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6891
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6892, !srcloc !6895
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6896, !srcloc !6899
  ret void, !dbg !6900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6901 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6902
  %2 = and i32 %1, -15728641, !dbg !6902
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6902
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !6903, !srcloc !6910
  call void @llvm.dbg.value(metadata i32 %3, metadata !6908, metadata !DIExpression()) #24, !dbg !6911
  %4 = and i32 %3, -5, !dbg !6912
  call void @llvm.dbg.value(metadata i32 %4, metadata !6913, metadata !DIExpression()) #24, !dbg !6918
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6922, !srcloc !6899
  ret void, !dbg !6924
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6928, metadata !DIExpression()), !dbg !6929
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6930
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6931
  store i32 %0, i32* %3, align 4, !dbg !6932
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6933
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6934
  store i32 %4, i32* %5, align 4, !dbg !6935
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6936
  %7 = or i32 %6, 268435456, !dbg !6936
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6936
  call void @llvm.dbg.value(metadata i32 0, metadata !6937, metadata !DIExpression()) #24, !dbg !6940
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6942, !srcloc !6943
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6944
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6945
  %10 = load i32, i32* %9, align 4, !dbg !6945
  ret i32 %10, !dbg !6946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6947 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7057, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7058, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.value(metadata i8* %2, metadata !7059, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7060, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.value(metadata i8* %4, metadata !7061, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.value(metadata i8* %5, metadata !7062, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.value(metadata i8* %6, metadata !7063, metadata !DIExpression()), !dbg !7065
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7066
  call void @llvm.dbg.value(metadata i8* %8, metadata !7064, metadata !DIExpression()), !dbg !7065
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7067
  %10 = bitcast i8* %9 to i32*, !dbg !7067
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7068
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7069
  %12 = bitcast i8* %8 to i32*, !dbg !7070
  store i32 %11, i32* %12, align 4, !dbg !7071
  %13 = ptrtoint i8* %4 to i32, !dbg !7072
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7073
  %15 = bitcast i8* %14 to i32*, !dbg !7073
  store i32 %13, i32* %15, align 4, !dbg !7074
  %16 = ptrtoint i8* %5 to i32, !dbg !7075
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7076
  %18 = bitcast i8* %17 to i32*, !dbg !7076
  store i32 %16, i32* %18, align 4, !dbg !7077
  %19 = ptrtoint i8* %6 to i32, !dbg !7078
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7079
  %21 = bitcast i8* %20 to i32*, !dbg !7079
  store i32 %19, i32* %21, align 4, !dbg !7080
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7081
  %23 = bitcast i8* %22 to i32*, !dbg !7081
  store i32 16777216, i32* %23, align 4, !dbg !7082
  %24 = ptrtoint i8* %8 to i32, !dbg !7083
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7084
  store i32 %24, i32* %25, align 8, !dbg !7085
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7086
  store i32 0, i32* %26, align 4, !dbg !7087
  ret void, !dbg !7088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !7089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7094, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 %1, metadata !7095, metadata !DIExpression()), !dbg !7100
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7101
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7096, metadata !DIExpression()), !dbg !7100
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7102
  br i1 %4, label %19, label %5, !dbg !7104

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7099, metadata !DIExpression()), !dbg !7100
  %6 = icmp eq i32 %0, -22, !dbg !7105
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7105
  %8 = load i32, i32* %7, align 4, !dbg !7105
  br i1 %6, label %16, label %9, !dbg !7107

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7105
  %11 = icmp ule i32 %10, %0, !dbg !7105
  %12 = icmp ugt i32 %8, %0, !dbg !7105
  %13 = and i1 %12, %11, !dbg !7105
  %14 = icmp ugt i32 %8, %1, !dbg !7105
  %15 = and i1 %14, %13, !dbg !7105
  br i1 %15, label %18, label %19, !dbg !7105

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7105
  br i1 %17, label %18, label %19, !dbg !7107

18:                                               ; preds = %9, %16
  br label %19, !dbg !7108

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7100
  ret i32 %20, !dbg !7110
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7111 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7115, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata i8* %1, metadata !7116, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7117, metadata !DIExpression()), !dbg !7118
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7119
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7120
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !7121, !srcloc !7122
  unreachable, !dbg !7123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7124 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7142, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata i32 %1, metadata !7143, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata i32 %2, metadata !7144, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7145, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata i32 0, metadata !7146, metadata !DIExpression()), !dbg !7152
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7153
  %9 = and i32 %8, 511, !dbg !7154
  call void @llvm.dbg.value(metadata i32 %9, metadata !7147, metadata !DIExpression()), !dbg !7152
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7155
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7155
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7156
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7156
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7151, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i32 0, metadata !7158, metadata !DIExpression()) #24, !dbg !7161
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7163, !srcloc !7164
  call void @llvm.dbg.value(metadata i8* %6, metadata !7149, metadata !DIExpression(DW_OP_deref)), !dbg !7152
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7165
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7150, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata i8* %5, metadata !7148, metadata !DIExpression(DW_OP_deref)), !dbg !7152
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7166
  call void @llvm.dbg.value(metadata i32 %12, metadata !7146, metadata !DIExpression()), !dbg !7152
  %13 = load i8, i8* %5, align 1, !dbg !7167, !range !7169
  call void @llvm.dbg.value(metadata i8 %13, metadata !7148, metadata !DIExpression()), !dbg !7152
  %14 = icmp eq i8 %13, 0, !dbg !7167
  br i1 %14, label %15, label %32, !dbg !7170

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7171
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7172
  %18 = load i8, i8* %6, align 1, !dbg !7173, !range !7169
  call void @llvm.dbg.value(metadata i8 %18, metadata !7149, metadata !DIExpression()), !dbg !7152
  %19 = icmp eq i8 %18, 0, !dbg !7173
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7175
  %21 = load i32, i32* %20, align 4, !dbg !7175
  br i1 %19, label %27, label %22, !dbg !7176

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7177
  %24 = icmp eq i32 %23, 0, !dbg !7180
  br i1 %24, label %25, label %31, !dbg !7181

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7182
  br label %29, !dbg !7184

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7185
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7175
  br label %31, !dbg !7187

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7187
  br label %32, !dbg !7188

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7188
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7188
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7188
  ret void, !dbg !7188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !7189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7194, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata i32 %1, metadata !7195, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata i32 %2, metadata !7196, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata i8* %3, metadata !7197, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata i8 0, metadata !7198, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7199, metadata !DIExpression()), !dbg !7200
  store i8 0, i8* %3, align 1, !dbg !7201
  %5 = icmp ult i32 %2, -16777216, !dbg !7202
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !7204
  br i1 %8, label %16, label %9, !dbg !7204

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !7205
  %11 = icmp eq i32 %10, 0, !dbg !7205
  br i1 %11, label %12, label %13, !dbg !7207

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !7199, metadata !DIExpression()), !dbg !7200
  store i8 1, i8* %3, align 1, !dbg !7210
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !7200
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !7199, metadata !DIExpression()), !dbg !7200
  br label %16, !dbg !7213

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !7200
  ret %struct.__esf* %17, !dbg !7214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7215 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7219, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata i32 %1, metadata !7220, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata i8* %2, metadata !7221, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata i32 0, metadata !7222, metadata !DIExpression()), !dbg !7223
  store i8 0, i8* %2, align 1, !dbg !7224
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7225

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7226
  call void @llvm.dbg.value(metadata i32 %5, metadata !7222, metadata !DIExpression()), !dbg !7223
  br label %11, !dbg !7228

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7229
  call void @llvm.dbg.value(metadata i32 %7, metadata !7222, metadata !DIExpression()), !dbg !7223
  br label %11, !dbg !7230

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7231
  call void @llvm.dbg.value(metadata i32 0, metadata !7222, metadata !DIExpression()), !dbg !7223
  br label %11, !dbg !7232

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7233
  call void @llvm.dbg.value(metadata i32 0, metadata !7222, metadata !DIExpression()), !dbg !7223
  br label %11, !dbg !7234

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7235
  br label %11, !dbg !7236

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !7237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7238 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7242, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.value(metadata i8* %1, metadata !7243, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.value(metadata i32 0, metadata !7244, metadata !DIExpression()), !dbg !7245
  store i8 0, i8* %1, align 1, !dbg !7246
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7247
  %4 = and i32 %3, 2, !dbg !7249
  %5 = icmp eq i32 %4, 0, !dbg !7250
  br i1 %5, label %6, label %33, !dbg !7251

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7252
  %8 = icmp sgt i32 %7, -1, !dbg !7254
  br i1 %8, label %9, label %33, !dbg !7255

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7256
  %11 = and i32 %10, 1073741824, !dbg !7258
  %12 = icmp eq i32 %11, 0, !dbg !7259
  br i1 %12, label %33, label %13, !dbg !7260

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7261
  br i1 %14, label %15, label %18, !dbg !7264

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7265
  %17 = load i32, i32* %16, align 4, !dbg !7265
  call void @llvm.dbg.value(metadata i32 %17, metadata !7244, metadata !DIExpression()), !dbg !7245
  br label %33, !dbg !7267

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7268
  %20 = and i32 %19, 255, !dbg !7270
  %21 = icmp eq i32 %20, 0, !dbg !7271
  br i1 %21, label %24, label %22, !dbg !7272

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7273
  call void @llvm.dbg.value(metadata i32 %23, metadata !7244, metadata !DIExpression()), !dbg !7245
  br label %33, !dbg !7275

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7276
  %26 = and i32 %25, 65280, !dbg !7278
  %27 = icmp eq i32 %26, 0, !dbg !7279
  br i1 %27, label %29, label %28, !dbg !7280

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7281
  call void @llvm.dbg.value(metadata i32 0, metadata !7244, metadata !DIExpression()), !dbg !7245
  br label %33, !dbg !7283

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7284
  %31 = icmp ult i32 %30, 65536, !dbg !7286
  br i1 %31, label %33, label %32, !dbg !7287

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !7288
  call void @llvm.dbg.value(metadata i32 0, metadata !7244, metadata !DIExpression()), !dbg !7245
  br label %33, !dbg !7290

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !7245
  call void @llvm.dbg.value(metadata i32 %34, metadata !7244, metadata !DIExpression()), !dbg !7245
  ret i32 %34, !dbg !7291
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7292 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7294, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.value(metadata i32 %1, metadata !7295, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.value(metadata i8* %2, metadata !7296, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.value(metadata i32 0, metadata !7297, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.value(metadata i32 -22, metadata !7298, metadata !DIExpression()), !dbg !7307
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7308
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7310
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7312
  %7 = and i32 %6, 2, !dbg !7313
  %8 = icmp eq i32 %7, 0, !dbg !7314
  br i1 %8, label %19, label %9, !dbg !7315

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7316
  call void @llvm.dbg.value(metadata i32 %10, metadata !7299, metadata !DIExpression()), !dbg !7317
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7318
  %12 = and i32 %11, 128, !dbg !7320
  %13 = icmp eq i32 %12, 0, !dbg !7321
  br i1 %13, label %19, label %14, !dbg !7322

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !7298, metadata !DIExpression()), !dbg !7307
  %15 = icmp eq i32 %1, 0, !dbg !7323
  br i1 %15, label %19, label %16, !dbg !7326

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7327
  %18 = and i32 %17, -129, !dbg !7327
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7327
  br label %19, !dbg !7329

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !7307
  call void @llvm.dbg.value(metadata i32 %20, metadata !7298, metadata !DIExpression()), !dbg !7307
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7330
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7332
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7334
  %24 = and i32 %23, 16, !dbg !7335
  %25 = icmp eq i32 %24, 0, !dbg !7335
  br i1 %25, label %26, label %30, !dbg !7336

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7337
  %28 = and i32 %27, 2, !dbg !7338
  %29 = icmp eq i32 %28, 0, !dbg !7338
  br i1 %29, label %39, label %30, !dbg !7339

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7340
  %32 = and i32 %31, 2048, !dbg !7341
  %33 = icmp eq i32 %32, 0, !dbg !7341
  br i1 %33, label %39, label %34, !dbg !7342

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !7343
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !7344
  call void @llvm.dbg.value(metadata i32 %36, metadata !7302, metadata !DIExpression()), !dbg !7345
  %37 = icmp eq i32 %36, 0, !dbg !7346
  br i1 %37, label %39, label %38, !dbg !7348

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !7349, metadata !DIExpression()) #24, !dbg !7352
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !7355, !srcloc !7356
  call void @llvm.dbg.value(metadata i32 2, metadata !7297, metadata !DIExpression()), !dbg !7307
  br label %39, !dbg !7357

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !7307
  call void @llvm.dbg.value(metadata i32 %40, metadata !7297, metadata !DIExpression()), !dbg !7307
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7358
  %42 = and i32 %41, 32, !dbg !7360
  %43 = icmp eq i32 %42, 0, !dbg !7361
  br i1 %43, label %47, label %44, !dbg !7362

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7363
  %46 = and i32 %45, -8193, !dbg !7363
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7363
  br label %47, !dbg !7365

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7366
  %49 = or i32 %48, 255, !dbg !7366
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7366
  store i8 0, i8* %2, align 1, !dbg !7367
  ret i32 %40, !dbg !7368
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !7369 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7373, metadata !DIExpression()), !dbg !7380
  call void @llvm.dbg.value(metadata i32 %0, metadata !7374, metadata !DIExpression()), !dbg !7380
  call void @llvm.dbg.value(metadata i8* %1, metadata !7375, metadata !DIExpression()), !dbg !7380
  call void @llvm.dbg.value(metadata i32 0, metadata !7376, metadata !DIExpression()), !dbg !7380
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7381
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7383
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7385
  %6 = and i32 %5, 512, !dbg !7386
  %7 = icmp eq i32 %6, 0, !dbg !7386
  br i1 %7, label %18, label %8, !dbg !7387

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7388
  call void @llvm.dbg.value(metadata i32 %9, metadata !7377, metadata !DIExpression()), !dbg !7389
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7390
  %11 = and i32 %10, 32768, !dbg !7392
  %12 = icmp ne i32 %11, 0, !dbg !7393
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7394
  br i1 %14, label %15, label %18, !dbg !7394

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7395
  %17 = and i32 %16, -32769, !dbg !7395
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7395
  br label %18, !dbg !7399

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7400
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7402
  %21 = and i32 %20, 256, !dbg !7404
  %22 = icmp eq i32 %21, 0, !dbg !7405
  br i1 %22, label %23, label %25, !dbg !7406

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7407
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7409
  %27 = or i32 %26, 65280, !dbg !7409
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7409
  store i8 0, i8* %1, align 1, !dbg !7410
  ret void, !dbg !7411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !7412 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7418, metadata !DIExpression()), !dbg !7420
  call void @llvm.dbg.value(metadata i32 0, metadata !7419, metadata !DIExpression()), !dbg !7420
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7421
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7423
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7425
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7427
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7429
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7431
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7433
  %8 = or i32 %7, -65536, !dbg !7433
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7433
  ret void, !dbg !7434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !7435 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7439, metadata !DIExpression()), !dbg !7441
  call void @llvm.dbg.value(metadata i8* %0, metadata !7440, metadata !DIExpression()), !dbg !7441
  store i8 0, i8* %0, align 1, !dbg !7442
  ret void, !dbg !7443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7444 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7448, metadata !DIExpression()), !dbg !7451
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7452
  %3 = load i32, i32* %2, align 4, !dbg !7452
  %4 = inttoptr i32 %3 to i16*, !dbg !7453
  call void @llvm.dbg.value(metadata i16* %4, metadata !7449, metadata !DIExpression()), !dbg !7451
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7454
  %6 = or i32 %5, 256, !dbg !7454
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7454
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7455, !srcloc !7458
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7459, !srcloc !7462
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7463
  %8 = load i16, i16* %7, align 2, !dbg !7464
  call void @llvm.dbg.value(metadata i16 %8, metadata !7450, metadata !DIExpression()), !dbg !7451
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7465
  %10 = and i32 %9, -257, !dbg !7465
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7465
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7466, !srcloc !7458
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7468, !srcloc !7462
  %11 = icmp eq i16 %8, -8446, !dbg !7470
  ret i1 %11, !dbg !7472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7473 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7474
  %2 = or i32 %1, 16, !dbg !7474
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7474
  ret void, !dbg !7475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7476 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7479, metadata !DIExpression()), !dbg !7480
  br label %1, !dbg !7481

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7479, metadata !DIExpression()), !dbg !7480
  tail call fastcc void @__NVIC_SetPriority.15(i32 noundef %2) #26, !dbg !7483
  %3 = add nuw nsw i32 %2, 1, !dbg !7486
  call void @llvm.dbg.value(metadata i32 %3, metadata !7479, metadata !DIExpression()), !dbg !7480
  %4 = icmp eq i32 %3, 82, !dbg !7487
  br i1 %4, label %5, label %1, !dbg !7481, !llvm.loop !7488

5:                                                ; preds = %1
  ret void, !dbg !7490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.15(i32 noundef %0) unnamed_addr #15 !dbg !7491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7493, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.value(metadata i32 1, metadata !7494, metadata !DIExpression()), !dbg !7495
  %2 = and i32 %0, 15, !dbg !7496
  %3 = add nsw i32 %2, -4, !dbg !7496
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7496
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7496
  %6 = icmp slt i32 %0, 0, !dbg !7496
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7496
  store volatile i8 16, i8* %7, align 1, !dbg !7497
  ret void, !dbg !7499
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7500 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7606, metadata !DIExpression()), !dbg !7607
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7608
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7610
  br i1 %3, label %4, label %12, !dbg !7611

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7612, !srcloc !7624
  call void @llvm.dbg.value(metadata i32 %5, metadata !7615, metadata !DIExpression()) #24, !dbg !7625
  %6 = icmp eq i32 %5, 0, !dbg !7626
  br i1 %6, label %12, label %7, !dbg !7627

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7628
  %9 = or i32 %8, 268435456, !dbg !7628
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7628
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7630
  %11 = and i32 %10, -32769, !dbg !7630
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7630
  br label %12, !dbg !7631

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7632
  ret void, !dbg !7633
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7634 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7635
  ret void, !dbg !7636
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !468, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata i8 0, metadata !469, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata i32 64, metadata !471, metadata !DIExpression()), !dbg !7637
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7638
  %3 = load i32, i32* %2, align 4, !dbg !7638
  %4 = add i32 %3, -64, !dbg !7640
  call void @llvm.dbg.value(metadata i32 %4, metadata !470, metadata !DIExpression()), !dbg !7637
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7641
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7642
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7643
  call void @llvm.dbg.value(metadata i8 1, metadata !469, metadata !DIExpression()), !dbg !7637
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7644
  ret void, !dbg !7645
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7646 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7647
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7648, !srcloc !7651
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7652, !srcloc !7655
  ret void, !dbg !7656
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7657 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7658, !srcloc !7661
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7662
  ret void, !dbg !7663
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7664 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7679, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.value(metadata i8 %1, metadata !7680, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.value(metadata i32 %2, metadata !7681, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.value(metadata i32 %3, metadata !7682, metadata !DIExpression()), !dbg !7683
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7684
  ret void, !dbg !7686
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7687 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7692, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i8 %1, metadata !7693, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i32 undef, metadata !7694, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i32 undef, metadata !7695, metadata !DIExpression()), !dbg !7697
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7698
  call void @llvm.dbg.value(metadata i8 %3, metadata !7696, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7697
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7699
  call void @llvm.dbg.value(metadata i32 %4, metadata !7696, metadata !DIExpression()), !dbg !7697
  %5 = trunc i32 %4 to i8, !dbg !7700
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7701
  ret void, !dbg !7702
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7703 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7707, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i8 %1, metadata !7708, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i8 %2, metadata !7709, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i1 %3, metadata !7710, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7713
  %5 = zext i8 %2 to i32, !dbg !7714
  call void @llvm.dbg.value(metadata i32 %5, metadata !7712, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i32 0, metadata !7711, metadata !DIExpression()), !dbg !7713
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7712, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i32 0, metadata !7711, metadata !DIExpression()), !dbg !7713
  %7 = icmp eq i8 %1, 0, !dbg !7715
  br i1 %7, label %29, label %8, !dbg !7718

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7712, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i32 %10, metadata !7711, metadata !DIExpression()), !dbg !7713
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7719
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7722
  %13 = load i32, i32* %12, align 4, !dbg !7722
  %14 = icmp eq i32 %13, 0, !dbg !7723
  br i1 %14, label %25, label %15, !dbg !7724

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7725

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7727
  %18 = icmp eq i32 %17, 0, !dbg !7727
  br i1 %18, label %29, label %19, !dbg !7728

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7729
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7730
  call void @llvm.dbg.value(metadata i32 %21, metadata !7712, metadata !DIExpression()), !dbg !7713
  %22 = icmp eq i32 %21, -22, !dbg !7731
  br i1 %22, label %29, label %23, !dbg !7733

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7734
  call void @llvm.dbg.value(metadata i32 %24, metadata !7712, metadata !DIExpression()), !dbg !7713
  br label %25, !dbg !7735

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7713
  call void @llvm.dbg.value(metadata i32 %26, metadata !7712, metadata !DIExpression()), !dbg !7713
  %27 = add nuw nsw i32 %10, 1, !dbg !7736
  call void @llvm.dbg.value(metadata i32 %27, metadata !7711, metadata !DIExpression()), !dbg !7713
  %28 = icmp eq i32 %27, %6, !dbg !7715
  br i1 %28, label %29, label %8, !dbg !7718, !llvm.loop !7737

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7713
  ret i32 %30, !dbg !7739
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7740 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7744, metadata !DIExpression()), !dbg !7746
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7747
  %3 = load i32, i32* %2, align 4, !dbg !7747
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7748, !range !3873
  %5 = icmp ult i32 %4, 2, !dbg !7748
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7749
  br i1 %7, label %8, label %15, !dbg !7749

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7750
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7751
  %11 = load i32, i32* %10, align 4, !dbg !7751
  %12 = and i32 %11, %9, !dbg !7752
  %13 = icmp eq i32 %12, 0, !dbg !7753
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7745, metadata !DIExpression()), !dbg !7746
  ret i32 %16, !dbg !7754
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7755 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7759, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7760, metadata !DIExpression()), !dbg !7762
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7763
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7763
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7761, metadata !DIExpression()), !dbg !7764
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7765
  %6 = load i32, i32* %5, align 4, !dbg !7765
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7766
  store i32 %6, i32* %7, align 4, !dbg !7767
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7768
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7769
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7770
  %11 = load i32, i32* %10, align 4, !dbg !7770
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7771
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7772
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7773
  ret i32 %12, !dbg !7774
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7775 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7782, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7783, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata i32 undef, metadata !7784, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata i32 %2, metadata !7785, metadata !DIExpression()), !dbg !7786
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7787
  %5 = load i32, i32* %4, align 4, !dbg !7787
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7788
  %7 = or i32 %6, %5, !dbg !7789
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7790
  store i32 %7, i32* %8, align 4, !dbg !7791
  ret void, !dbg !7792
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7793 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7797, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7798, metadata !DIExpression()), !dbg !7799
  %3 = zext i8 %0 to i32, !dbg !7800
  %4 = icmp ugt i8 %0, 7, !dbg !7802
  br i1 %4, label %6, label %5, !dbg !7803

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7804
  br label %6, !dbg !7805

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7799
  ret i32 %7, !dbg !7806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7811, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7812, metadata !DIExpression()), !dbg !7813
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7814
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7815
  %4 = load i32, i32* %3, align 4, !dbg !7815
  %5 = and i32 %4, -32, !dbg !7816
  %6 = or i32 %5, %0, !dbg !7817
  %7 = or i32 %6, 16, !dbg !7817
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7818
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7819
  %9 = load i32, i32* %8, align 4, !dbg !7819
  %10 = or i32 %9, 1, !dbg !7820
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7821
  ret void, !dbg !7822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7826, metadata !DIExpression()), !dbg !7827
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7828
  ret void, !dbg !7829
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7834, metadata !DIExpression()), !dbg !7835
  %2 = icmp ult i32 %0, 33, !dbg !7836
  br i1 %2, label %11, label %3, !dbg !7838

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7839
  br i1 %4, label %11, label %5, !dbg !7841

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7842
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7843, !range !3873
  %8 = mul nsw i32 %7, -2, !dbg !7844
  %9 = add nsw i32 %8, 62, !dbg !7844
  %10 = and i32 %9, 62, !dbg !7845
  br label %11, !dbg !7846

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7835
  ret i32 %12, !dbg !7847
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7848 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7852, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i8 %1, metadata !7853, metadata !DIExpression()), !dbg !7854
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7855
  ret void, !dbg !7857
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7858 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7862, metadata !DIExpression()), !dbg !7869
  call void @llvm.dbg.value(metadata i8 %1, metadata !7863, metadata !DIExpression()), !dbg !7869
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7870
  call void @llvm.dbg.value(metadata i8 %3, metadata !7864, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7869
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7871
  call void @llvm.dbg.value(metadata i32 %4, metadata !7864, metadata !DIExpression()), !dbg !7869
  %5 = icmp ne i32 %4, -22, !dbg !7872
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7873
  call void @llvm.dbg.value(metadata i32 %4, metadata !7865, metadata !DIExpression()), !dbg !7874
  br i1 %7, label %8, label %12, !dbg !7873

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7865, metadata !DIExpression()), !dbg !7874
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7875
  %10 = add i32 %9, 1, !dbg !7878
  call void @llvm.dbg.value(metadata i32 %10, metadata !7865, metadata !DIExpression()), !dbg !7874
  %11 = icmp eq i32 %10, 8, !dbg !7879
  br i1 %11, label %12, label %8, !dbg !7880, !llvm.loop !7881

12:                                               ; preds = %8, %2
  ret void, !dbg !7883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7887, metadata !DIExpression()), !dbg !7888
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7889
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7890
  ret void, !dbg !7891
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7892 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7895
  %2 = icmp ugt i32 %1, 8, !dbg !7897
  br i1 %2, label %14, label %3, !dbg !7898

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7899
  call void @llvm.dbg.value(metadata i32 0, metadata !7894, metadata !DIExpression()), !dbg !7900
  %4 = icmp eq i32 %1, 0, !dbg !7901
  br i1 %4, label %12, label %5, !dbg !7904

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7904

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7894, metadata !DIExpression()), !dbg !7900
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7905
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7907
  %10 = add nuw i32 %8, 1, !dbg !7908
  call void @llvm.dbg.value(metadata i32 %10, metadata !7894, metadata !DIExpression()), !dbg !7900
  %11 = icmp eq i32 %10, %1, !dbg !7901
  br i1 %11, label %12, label %7, !dbg !7904, !llvm.loop !7909

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7911
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7912
  tail call void @arm_core_mpu_enable() #26, !dbg !7913
  br label %14, !dbg !7914

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7900
  ret i32 %15, !dbg !7915
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7916 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7923, metadata !DIExpression()), !dbg !7926
  call void @llvm.dbg.value(metadata i8* %1, metadata !7924, metadata !DIExpression()), !dbg !7926
  call void @llvm.dbg.value(metadata i8* %0, metadata !7925, metadata !DIExpression()), !dbg !7926
  %3 = load i8, i8* %1, align 1, !dbg !7927
  %4 = icmp eq i8 %3, 0, !dbg !7928
  br i1 %4, label %13, label %5, !dbg !7929

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7923, metadata !DIExpression()), !dbg !7926
  call void @llvm.dbg.value(metadata i8* %8, metadata !7924, metadata !DIExpression()), !dbg !7926
  store i8 %6, i8* %7, align 1, !dbg !7930
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7932
  call void @llvm.dbg.value(metadata i8* %9, metadata !7923, metadata !DIExpression()), !dbg !7926
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7933
  call void @llvm.dbg.value(metadata i8* %10, metadata !7924, metadata !DIExpression()), !dbg !7926
  %11 = load i8, i8* %10, align 1, !dbg !7927
  %12 = icmp eq i8 %11, 0, !dbg !7928
  br i1 %12, label %13, label %5, !dbg !7929, !llvm.loop !7934

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7936
  ret i8* %0, !dbg !7937
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7938 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7942, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8* %1, metadata !7943, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i32 %2, metadata !7944, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8* %0, metadata !7945, metadata !DIExpression()), !dbg !7946
  %4 = icmp eq i32 %2, 0, !dbg !7947
  br i1 %4, label %22, label %5, !dbg !7948

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7942, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i32 %7, metadata !7944, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8* %8, metadata !7943, metadata !DIExpression()), !dbg !7946
  %9 = load i8, i8* %8, align 1, !dbg !7949
  %10 = icmp eq i8 %9, 0, !dbg !7950
  br i1 %10, label %16, label %11, !dbg !7951

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7952
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7954
  call void @llvm.dbg.value(metadata i8* %12, metadata !7943, metadata !DIExpression()), !dbg !7946
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7955
  call void @llvm.dbg.value(metadata i8* %13, metadata !7942, metadata !DIExpression()), !dbg !7946
  %14 = add i32 %7, -1, !dbg !7956
  call void @llvm.dbg.value(metadata i32 %14, metadata !7944, metadata !DIExpression()), !dbg !7946
  %15 = icmp eq i32 %14, 0, !dbg !7947
  br i1 %15, label %22, label %5, !dbg !7948, !llvm.loop !7957

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7942, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i32 %18, metadata !7944, metadata !DIExpression()), !dbg !7946
  store i8 0, i8* %17, align 1, !dbg !7959
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7961
  call void @llvm.dbg.value(metadata i8* %19, metadata !7942, metadata !DIExpression()), !dbg !7946
  %20 = add i32 %18, -1, !dbg !7962
  call void @llvm.dbg.value(metadata i32 %20, metadata !7944, metadata !DIExpression()), !dbg !7946
  %21 = icmp eq i32 %20, 0, !dbg !7963
  br i1 %21, label %22, label %16, !dbg !7964, !llvm.loop !7965

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7967
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7968 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7972, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i32 %1, metadata !7973, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i32 %1, metadata !7974, metadata !DIExpression()), !dbg !7975
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7976

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7972, metadata !DIExpression()), !dbg !7975
  %6 = load i8, i8* %5, align 1, !dbg !7977
  %7 = icmp eq i8 %6, %3, !dbg !7978
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7979
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7980
  call void @llvm.dbg.value(metadata i8* %10, metadata !7972, metadata !DIExpression()), !dbg !7975
  br i1 %9, label %11, label %4, !dbg !7979, !llvm.loop !7982

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7984
  ret i8* %12, !dbg !7985
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7986 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7988, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.value(metadata i32 %1, metadata !7989, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.value(metadata i8* null, metadata !7990, metadata !DIExpression()), !dbg !7991
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7992

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7991
  call void @llvm.dbg.value(metadata i8* %6, metadata !7990, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.value(metadata i8* %5, metadata !7988, metadata !DIExpression()), !dbg !7991
  %7 = load i8, i8* %5, align 1, !dbg !7993
  %8 = icmp eq i8 %7, %3, !dbg !7996
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7997
  call void @llvm.dbg.value(metadata i8* %9, metadata !7990, metadata !DIExpression()), !dbg !7991
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7998
  call void @llvm.dbg.value(metadata i8* %10, metadata !7988, metadata !DIExpression()), !dbg !7991
  %11 = icmp eq i8 %7, 0, !dbg !7999
  br i1 %11, label %12, label %4, !dbg !7999, !llvm.loop !8000

12:                                               ; preds = %4
  ret i8* %9, !dbg !8002
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !8003 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8007, metadata !DIExpression()), !dbg !8009
  call void @llvm.dbg.value(metadata i32 0, metadata !8008, metadata !DIExpression()), !dbg !8009
  %2 = load i8, i8* %0, align 1, !dbg !8010
  %3 = icmp eq i8 %2, 0, !dbg !8011
  br i1 %3, label %11, label %4, !dbg !8012

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8008, metadata !DIExpression()), !dbg !8009
  call void @llvm.dbg.value(metadata i8* %6, metadata !8007, metadata !DIExpression()), !dbg !8009
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8013
  call void @llvm.dbg.value(metadata i8* %7, metadata !8007, metadata !DIExpression()), !dbg !8009
  %8 = add i32 %5, 1, !dbg !8015
  call void @llvm.dbg.value(metadata i32 %8, metadata !8008, metadata !DIExpression()), !dbg !8009
  %9 = load i8, i8* %7, align 1, !dbg !8010
  %10 = icmp eq i8 %9, 0, !dbg !8011
  br i1 %10, label %11, label %4, !dbg !8012, !llvm.loop !8016

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8009
  ret i32 %12, !dbg !8018
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8019 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8023, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %1, metadata !8024, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 0, metadata !8025, metadata !DIExpression()), !dbg !8026
  %3 = load i8, i8* %0, align 1, !dbg !8027
  %4 = icmp ne i8 %3, 0, !dbg !8028
  %5 = icmp ne i32 %1, 0, !dbg !8029
  %6 = and i1 %4, %5, !dbg !8029
  br i1 %6, label %7, label %16, !dbg !8030

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8025, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %9, metadata !8023, metadata !DIExpression()), !dbg !8026
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8031
  call void @llvm.dbg.value(metadata i8* %10, metadata !8023, metadata !DIExpression()), !dbg !8026
  %11 = add nuw i32 %8, 1, !dbg !8033
  call void @llvm.dbg.value(metadata i32 %11, metadata !8025, metadata !DIExpression()), !dbg !8026
  %12 = load i8, i8* %10, align 1, !dbg !8027
  %13 = icmp ne i8 %12, 0, !dbg !8028
  %14 = icmp ult i32 %11, %1, !dbg !8029
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8029
  br i1 %15, label %7, label %16, !dbg !8030, !llvm.loop !8034

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8026
  ret i32 %17, !dbg !8036
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !8037 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8041, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i8* %1, metadata !8042, metadata !DIExpression()), !dbg !8043
  %3 = load i8, i8* %0, align 1, !dbg !8044
  %4 = load i8, i8* %1, align 1, !dbg !8045
  %5 = icmp ne i8 %3, %4, !dbg !8046
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8047
  br i1 %7, label %18, label %8, !dbg !8047

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8042, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i8* %10, metadata !8041, metadata !DIExpression()), !dbg !8043
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8048
  call void @llvm.dbg.value(metadata i8* %11, metadata !8041, metadata !DIExpression()), !dbg !8043
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8050
  call void @llvm.dbg.value(metadata i8* %12, metadata !8042, metadata !DIExpression()), !dbg !8043
  %13 = load i8, i8* %11, align 1, !dbg !8044
  %14 = load i8, i8* %12, align 1, !dbg !8045
  %15 = icmp ne i8 %13, %14, !dbg !8046
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8047
  br i1 %17, label %18, label %8, !dbg !8047, !llvm.loop !8051

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8044
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8045
  %21 = zext i8 %19 to i32, !dbg !8054
  %22 = zext i8 %20 to i32, !dbg !8055
  %23 = sub nsw i32 %21, %22, !dbg !8056
  ret i32 %23, !dbg !8057
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8058 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8062, metadata !DIExpression()), !dbg !8065
  call void @llvm.dbg.value(metadata i8* %1, metadata !8063, metadata !DIExpression()), !dbg !8065
  call void @llvm.dbg.value(metadata i32 %2, metadata !8064, metadata !DIExpression()), !dbg !8065
  %4 = icmp eq i32 %2, 0, !dbg !8066
  br i1 %4, label %23, label %5, !dbg !8066

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8064, metadata !DIExpression()), !dbg !8065
  call void @llvm.dbg.value(metadata i8* %7, metadata !8063, metadata !DIExpression()), !dbg !8065
  call void @llvm.dbg.value(metadata i8* %8, metadata !8062, metadata !DIExpression()), !dbg !8065
  %9 = load i8, i8* %8, align 1, !dbg !8067
  %10 = load i8, i8* %7, align 1, !dbg !8068
  %11 = icmp ne i8 %9, %10, !dbg !8069
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8070
  br i1 %13, label %19, label %14, !dbg !8070

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8071
  call void @llvm.dbg.value(metadata i8* %15, metadata !8062, metadata !DIExpression()), !dbg !8065
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8073
  call void @llvm.dbg.value(metadata i8* %16, metadata !8063, metadata !DIExpression()), !dbg !8065
  %17 = add i32 %6, -1, !dbg !8074
  call void @llvm.dbg.value(metadata i32 %17, metadata !8064, metadata !DIExpression()), !dbg !8065
  %18 = icmp eq i32 %17, 0, !dbg !8066
  br i1 %18, label %23, label %5, !dbg !8066, !llvm.loop !8075

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8078
  %21 = zext i8 %10 to i32, !dbg !8079
  %22 = sub nsw i32 %20, %21, !dbg !8080
  br label %23, !dbg !8081

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8081
  ret i32 %24, !dbg !8082
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8083 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8088, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata i8* %1, metadata !8089, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata i8** %2, metadata !8090, metadata !DIExpression()), !dbg !8093
  %4 = icmp eq i8* %0, null, !dbg !8094
  br i1 %4, label %5, label %7, !dbg !8094

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8095
  br label %7, !dbg !8094

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8094
  call void @llvm.dbg.value(metadata i8* %8, metadata !8091, metadata !DIExpression()), !dbg !8093
  %9 = load i8, i8* %8, align 1, !dbg !8096
  %10 = icmp eq i8 %9, 0, !dbg !8096
  br i1 %10, label %33, label %11, !dbg !8097

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8091, metadata !DIExpression()), !dbg !8093
  %14 = zext i8 %12 to i32, !dbg !8096
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8098
  %16 = icmp eq i8* %15, null, !dbg !8097
  br i1 %16, label %21, label %17, !dbg !8099

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8100
  call void @llvm.dbg.value(metadata i8* %18, metadata !8091, metadata !DIExpression()), !dbg !8093
  %19 = load i8, i8* %18, align 1, !dbg !8096
  %20 = icmp eq i8 %19, 0, !dbg !8096
  br i1 %20, label %33, label %11, !dbg !8097, !llvm.loop !8102

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8092, metadata !DIExpression()), !dbg !8093
  %24 = zext i8 %22 to i32, !dbg !8104
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8105
  %26 = icmp eq i8* %25, null, !dbg !8106
  br i1 %26, label %27, label %31, !dbg !8107

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8108
  call void @llvm.dbg.value(metadata i8* %28, metadata !8092, metadata !DIExpression()), !dbg !8093
  %29 = load i8, i8* %28, align 1, !dbg !8104
  %30 = icmp eq i8 %29, 0, !dbg !8104
  br i1 %30, label %33, label %21, !dbg !8110, !llvm.loop !8111

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8113
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8116
  br label %33, !dbg !8117

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8093
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8093
  store i8* %34, i8** %2, align 4, !dbg !8093
  ret i8* %35, !dbg !8118
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8119 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8121, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i8* %1, metadata !8122, metadata !DIExpression()), !dbg !8123
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8124
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8125
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8126
  ret i8* %0, !dbg !8127
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8128 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8130, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i8* %1, metadata !8131, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i32 %2, metadata !8132, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i8* %0, metadata !8133, metadata !DIExpression()), !dbg !8135
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8136
  call void @llvm.dbg.value(metadata i32 %4, metadata !8134, metadata !DIExpression()), !dbg !8135
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8137
  call void @llvm.dbg.value(metadata i8* %5, metadata !8130, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i8* %1, metadata !8131, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i32 %2, metadata !8132, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i32 %2, metadata !8132, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8135
  %6 = icmp eq i32 %2, 0, !dbg !8138
  br i1 %6, label %18, label %7, !dbg !8139

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8140
  call void @llvm.dbg.value(metadata i8* %9, metadata !8130, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i8* %10, metadata !8131, metadata !DIExpression()), !dbg !8135
  %12 = load i8, i8* %10, align 1, !dbg !8141
  %13 = icmp eq i8 %12, 0, !dbg !8142
  br i1 %13, label %18, label %14, !dbg !8143

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8144
  call void @llvm.dbg.value(metadata i8* %15, metadata !8131, metadata !DIExpression()), !dbg !8135
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8146
  call void @llvm.dbg.value(metadata i8* %16, metadata !8130, metadata !DIExpression()), !dbg !8135
  store i8 %12, i8* %9, align 1, !dbg !8147
  call void @llvm.dbg.value(metadata i32 %11, metadata !8132, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i32 %11, metadata !8132, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8135
  %17 = icmp eq i32 %11, 0, !dbg !8138
  br i1 %17, label %18, label %7, !dbg !8139, !llvm.loop !8148

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8135
  store i8 0, i8* %19, align 1, !dbg !8150
  ret i8* %0, !dbg !8151
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8152 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8156, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i8* %1, metadata !8157, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i32 %2, metadata !8158, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i8* %0, metadata !8159, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i8* %1, metadata !8160, metadata !DIExpression()), !dbg !8161
  %4 = icmp eq i32 %2, 0, !dbg !8162
  br i1 %4, label %31, label %5, !dbg !8164

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8160, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i8* %0, metadata !8159, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i32 %2, metadata !8158, metadata !DIExpression()), !dbg !8161
  %6 = add i32 %2, -1, !dbg !8165
  call void @llvm.dbg.value(metadata i32 %6, metadata !8158, metadata !DIExpression()), !dbg !8161
  %7 = icmp eq i32 %6, 0, !dbg !8166
  br i1 %7, label %23, label %8, !dbg !8167

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8168
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8168
  br label %11, !dbg !8168

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8160, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i8* %14, metadata !8159, metadata !DIExpression()), !dbg !8161
  %15 = load i8, i8* %14, align 1, !dbg !8169
  %16 = load i8, i8* %13, align 1, !dbg !8170
  %17 = icmp eq i8 %15, %16, !dbg !8171
  br i1 %17, label %18, label %23, !dbg !8168

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8172
  call void @llvm.dbg.value(metadata i8* %19, metadata !8159, metadata !DIExpression()), !dbg !8161
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8174
  call void @llvm.dbg.value(metadata i8* %20, metadata !8160, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i32 %12, metadata !8158, metadata !DIExpression()), !dbg !8161
  %21 = add i32 %12, -1, !dbg !8165
  call void @llvm.dbg.value(metadata i32 %21, metadata !8158, metadata !DIExpression()), !dbg !8161
  %22 = icmp eq i32 %21, 0, !dbg !8166
  br i1 %22, label %23, label %11, !dbg !8167, !llvm.loop !8175

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8161
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8161
  %26 = load i8, i8* %24, align 1, !dbg !8177
  %27 = zext i8 %26 to i32, !dbg !8177
  %28 = load i8, i8* %25, align 1, !dbg !8178
  %29 = zext i8 %28 to i32, !dbg !8178
  %30 = sub nsw i32 %27, %29, !dbg !8179
  br label %31, !dbg !8180

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8161
  ret i32 %32, !dbg !8181
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8182 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8186, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata i8* %1, metadata !8187, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata i32 %2, metadata !8188, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata i8* %0, metadata !8189, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata i8* %1, metadata !8190, metadata !DIExpression()), !dbg !8191
  %4 = ptrtoint i8* %0 to i32, !dbg !8192
  %5 = ptrtoint i8* %1 to i32, !dbg !8192
  %6 = sub i32 %4, %5, !dbg !8192
  %7 = icmp ult i32 %6, %2, !dbg !8194
  br i1 %7, label %10, label %8, !dbg !8195

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8190, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata i8* %0, metadata !8189, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata i32 %2, metadata !8188, metadata !DIExpression()), !dbg !8191
  %9 = icmp eq i32 %2, 0, !dbg !8196
  br i1 %9, label %26, label %17, !dbg !8198

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8188, metadata !DIExpression()), !dbg !8191
  %12 = add i32 %11, -1, !dbg !8199
  call void @llvm.dbg.value(metadata i32 %12, metadata !8188, metadata !DIExpression()), !dbg !8191
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8202
  %14 = load i8, i8* %13, align 1, !dbg !8202
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8203
  store i8 %14, i8* %15, align 1, !dbg !8204
  %16 = icmp eq i32 %12, 0, !dbg !8205
  br i1 %16, label %26, label %10, !dbg !8206, !llvm.loop !8207

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8190, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata i8* %19, metadata !8189, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata i32 %20, metadata !8188, metadata !DIExpression()), !dbg !8191
  %21 = load i8, i8* %18, align 1, !dbg !8209
  store i8 %21, i8* %19, align 1, !dbg !8211
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8212
  call void @llvm.dbg.value(metadata i8* %22, metadata !8189, metadata !DIExpression()), !dbg !8191
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8213
  call void @llvm.dbg.value(metadata i8* %23, metadata !8190, metadata !DIExpression()), !dbg !8191
  %24 = add i32 %20, -1, !dbg !8214
  call void @llvm.dbg.value(metadata i32 %24, metadata !8188, metadata !DIExpression()), !dbg !8191
  %25 = icmp eq i32 %24, 0, !dbg !8196
  br i1 %25, label %26, label %17, !dbg !8198, !llvm.loop !8215

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8217
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8218 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8224, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i8* %1, metadata !8225, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i32 %2, metadata !8226, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i8* %0, metadata !8227, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i8* %1, metadata !8228, metadata !DIExpression()), !dbg !8229
  %4 = icmp eq i32 %2, 0, !dbg !8230
  br i1 %4, label %14, label %5, !dbg !8231

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8228, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i8* %7, metadata !8227, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i32 %8, metadata !8226, metadata !DIExpression()), !dbg !8229
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8232
  call void @llvm.dbg.value(metadata i8* %9, metadata !8228, metadata !DIExpression()), !dbg !8229
  %10 = load i8, i8* %6, align 1, !dbg !8234
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8235
  call void @llvm.dbg.value(metadata i8* %11, metadata !8227, metadata !DIExpression()), !dbg !8229
  store i8 %10, i8* %7, align 1, !dbg !8236
  %12 = add i32 %8, -1, !dbg !8237
  call void @llvm.dbg.value(metadata i32 %12, metadata !8226, metadata !DIExpression()), !dbg !8229
  %13 = icmp eq i32 %12, 0, !dbg !8230
  br i1 %13, label %14, label %5, !dbg !8231, !llvm.loop !8238

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8240
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8241 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8245, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.value(metadata i32 %1, metadata !8246, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.value(metadata i32 %2, metadata !8247, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.value(metadata i8* %0, metadata !8248, metadata !DIExpression()), !dbg !8250
  %4 = trunc i32 %1 to i8, !dbg !8251
  call void @llvm.dbg.value(metadata i8 %4, metadata !8249, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.value(metadata i32 %2, metadata !8247, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.value(metadata i8* %0, metadata !8248, metadata !DIExpression()), !dbg !8250
  %5 = icmp eq i32 %2, 0, !dbg !8252
  br i1 %5, label %12, label %6, !dbg !8253

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8247, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.value(metadata i8* %8, metadata !8248, metadata !DIExpression()), !dbg !8250
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8254
  call void @llvm.dbg.value(metadata i8* %9, metadata !8248, metadata !DIExpression()), !dbg !8250
  store i8 %4, i8* %8, align 1, !dbg !8256
  %10 = add i32 %7, -1, !dbg !8257
  call void @llvm.dbg.value(metadata i32 %10, metadata !8247, metadata !DIExpression()), !dbg !8250
  %11 = icmp eq i32 %10, 0, !dbg !8252
  br i1 %11, label %12, label %6, !dbg !8253, !llvm.loop !8258

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8260
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8261 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8265, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i32 %1, metadata !8266, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i32 %2, metadata !8267, metadata !DIExpression()), !dbg !8271
  %4 = icmp eq i32 %2, 0, !dbg !8272
  br i1 %4, label %17, label %5, !dbg !8273

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8274

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8275
  call void @llvm.dbg.value(metadata i8* %9, metadata !8268, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.value(metadata i32 %8, metadata !8267, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i8* %9, metadata !8268, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8275
  %10 = load i8, i8* %9, align 1, !dbg !8276
  %11 = icmp eq i8 %10, %6, !dbg !8279
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8280
  call void @llvm.dbg.value(metadata i8* %12, metadata !8268, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.value(metadata i32 %13, metadata !8267, metadata !DIExpression()), !dbg !8271
  br i1 %15, label %16, label %7, !dbg !8280, !llvm.loop !8281

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8283

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8271
  ret i8* %19, !dbg !8284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !8285 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8287, metadata !DIExpression()), !dbg !8288
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8289
  ret void, !dbg !8290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !8291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8293, metadata !DIExpression()), !dbg !8294
  ret i32 -1, !dbg !8295
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8300, metadata !DIExpression()), !dbg !8302
  call void @llvm.dbg.value(metadata i32* %1, metadata !8301, metadata !DIExpression()), !dbg !8302
  %3 = ptrtoint i32* %1 to i32, !dbg !8303
  %4 = and i32 %3, -2, !dbg !8303
  %5 = icmp eq i32 %4, 2, !dbg !8303
  br i1 %5, label %6, label %9, !dbg !8303

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8304
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8304
  br label %9, !dbg !8305

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8305
  ret i32 %10, !dbg !8306
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8309, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.value(metadata i32* %1, metadata !8310, metadata !DIExpression()), !dbg !8311
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8312
  ret i32 %3, !dbg !8313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8317, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.value(metadata i32* %1, metadata !8318, metadata !DIExpression()), !dbg !8319
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8320, !srcloc !8322
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8323
  ret i32 %3, !dbg !8324
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8325 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8330, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i32* %1, metadata !8331, metadata !DIExpression()), !dbg !8334
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8335
  call void @llvm.dbg.value(metadata i32 %3, metadata !8332, metadata !DIExpression()), !dbg !8334
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !8336
  call void @llvm.dbg.value(metadata i32 %4, metadata !8333, metadata !DIExpression()), !dbg !8334
  %5 = icmp ne i32 %3, %4, !dbg !8337
  %6 = sext i1 %5 to i32, !dbg !8338
  ret i32 %6, !dbg !8339
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8340 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8344, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i32 %1, metadata !8345, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i32 %2, metadata !8346, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i32* %3, metadata !8347, metadata !DIExpression()), !dbg !8348
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8349
  ret i32 %5, !dbg !8350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8351 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8353, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.value(metadata i32 %1, metadata !8354, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.value(metadata i32 %2, metadata !8355, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.value(metadata i32* %3, metadata !8356, metadata !DIExpression()), !dbg !8357
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8358, !srcloc !8360
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8361
  ret i32 %5, !dbg !8362
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8363 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8365, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i32 %1, metadata !8366, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i32 %2, metadata !8367, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i32* %3, metadata !8368, metadata !DIExpression()), !dbg !8373
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8374
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8376
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8376
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8376
  br i1 %11, label %33, label %12, !dbg !8376

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8373
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8373
  call void @llvm.dbg.value(metadata i8* %14, metadata !8371, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i32 %13, metadata !8369, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i32 %1, metadata !8370, metadata !DIExpression()), !dbg !8373
  br label %15, !dbg !8377

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8379
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8373
  call void @llvm.dbg.value(metadata i8* %17, metadata !8371, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i32 %16, metadata !8370, metadata !DIExpression()), !dbg !8373
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8380
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8383
  call void @llvm.dbg.value(metadata i8* %19, metadata !8371, metadata !DIExpression()), !dbg !8373
  %20 = load i8, i8* %17, align 1, !dbg !8384
  %21 = zext i8 %20 to i32, !dbg !8385
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8380
  %23 = icmp eq i32 %22, -1, !dbg !8386
  br i1 %23, label %30, label %24, !dbg !8387

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8388
  call void @llvm.dbg.value(metadata i32 %25, metadata !8370, metadata !DIExpression()), !dbg !8373
  %26 = icmp eq i32 %25, 0, !dbg !8389
  br i1 %26, label %27, label %15, !dbg !8390, !llvm.loop !8391

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8393
  call void @llvm.dbg.value(metadata i32 %28, metadata !8369, metadata !DIExpression()), !dbg !8373
  %29 = icmp eq i32 %28, 0, !dbg !8394
  br i1 %29, label %30, label %12, !dbg !8395, !llvm.loop !8396

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8373
  call void @llvm.dbg.value(metadata i32 %31, metadata !8369, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.label(metadata !8372), !dbg !8399
  %32 = sub i32 %2, %31, !dbg !8400
  br label %33, !dbg !8401

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8373
  ret i32 %34, !dbg !8402
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8403 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8407, metadata !DIExpression()), !dbg !8408
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8409
  %3 = icmp eq i32 %2, -1, !dbg !8411
  br i1 %3, label %8, label %4, !dbg !8412

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8413
  %6 = icmp eq i32 %5, -1, !dbg !8414
  %7 = sext i1 %6 to i32, !dbg !8413
  br label %8, !dbg !8415

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8408
  ret i32 %9, !dbg !8416
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8417 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8419, metadata !DIExpression()), !dbg !8420
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8421
  ret void, !dbg !8422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8427, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 %1, metadata !8428, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8429, metadata !DIExpression()), !dbg !8433
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8434
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8434
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8434
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8430, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 %0, metadata !8432, metadata !DIExpression()), !dbg !8433
  %7 = icmp slt i32 %0, %1, !dbg !8435
  br i1 %7, label %8, label %22, !dbg !8438

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8432, metadata !DIExpression()), !dbg !8433
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8439
  %11 = icmp eq i32 %10, 0, !dbg !8439
  br i1 %11, label %19, label %12, !dbg !8442

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8443
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8445
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8445
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8447
  br i1 %15, label %19, label %16, !dbg !8448

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8449
  %18 = load i8*, i8** %17, align 4, !dbg !8449
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8450
  br label %19, !dbg !8451

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8452
  call void @llvm.dbg.value(metadata i32 %20, metadata !8432, metadata !DIExpression()), !dbg !8433
  %21 = icmp eq i32 %20, %1, !dbg !8435
  br i1 %21, label %22, label %8, !dbg !8438, !llvm.loop !8453

22:                                               ; preds = %19, %3
  ret void, !dbg !8455
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8458, metadata !DIExpression()), !dbg !8459
  %2 = shl nuw i32 1, %0, !dbg !8460
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8463
  ret i32 %3, !dbg !8464
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8469, metadata !DIExpression()), !dbg !8470
  %2 = shl nuw i32 1, %0, !dbg !8471
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8474
  ret void, !dbg !8475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8479, metadata !DIExpression()), !dbg !8480
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8481
  ret void, !dbg !8482
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8483 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8485, metadata !DIExpression()), !dbg !8486
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8487
  %3 = and i32 %2, %0, !dbg !8487
  %4 = icmp eq i32 %3, %0, !dbg !8488
  %5 = zext i1 %4 to i32, !dbg !8488
  ret i32 %5, !dbg !8489
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8490 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8492, metadata !DIExpression()), !dbg !8493
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8494
  ret void, !dbg !8495
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8496 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8498, metadata !DIExpression()), !dbg !8499
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8500
  ret void, !dbg !8501
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8504, metadata !DIExpression()), !dbg !8505
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8506
  ret void, !dbg !8507
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8508 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8510, metadata !DIExpression()), !dbg !8511
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8512
  ret void, !dbg !8513
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8514 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8516, metadata !DIExpression()), !dbg !8517
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8518
  ret void, !dbg !8519
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8520 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8522, metadata !DIExpression()), !dbg !8523
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8524
  ret void, !dbg !8525
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8526 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8528, metadata !DIExpression()), !dbg !8529
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8530
  ret void, !dbg !8531
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8532 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8534, metadata !DIExpression()), !dbg !8535
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8536
  ret void, !dbg !8537
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8538 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8540, metadata !DIExpression()), !dbg !8541
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8542
  ret void, !dbg !8543
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8546, metadata !DIExpression()), !dbg !8547
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8548
  ret void, !dbg !8549
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8552, metadata !DIExpression()), !dbg !8553
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8554
  ret i32 0, !dbg !8555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !718 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !722, metadata !DIExpression()), !dbg !8556
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8557
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8559
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8561
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8563
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8565
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8567
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8569
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8571
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8573
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8575
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8577
  ret void, !dbg !8579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8582, metadata !DIExpression()), !dbg !8584
  call void @llvm.dbg.value(metadata i32 0, metadata !8583, metadata !DIExpression()), !dbg !8584
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8585
  %3 = load i32, i32* %2, align 4, !dbg !8585
  call void @llvm.dbg.value(metadata i32 %3, metadata !8583, metadata !DIExpression()), !dbg !8584
  %4 = shl nuw i32 1, %0, !dbg !8586
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8587
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8588
  ret void, !dbg !8589
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8592, metadata !DIExpression()), !dbg !8593
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8594
  %3 = or i32 %2, %0, !dbg !8594
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8594
  ret void, !dbg !8595
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8598, metadata !DIExpression()), !dbg !8599
  %2 = icmp slt i32 %0, 32, !dbg !8600
  br i1 %2, label %3, label %5, !dbg !8602

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8603
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8605
  br label %5, !dbg !8606

5:                                                ; preds = %1, %3
  ret void, !dbg !8607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8610, metadata !DIExpression()), !dbg !8611
  %2 = xor i32 %0, -1, !dbg !8612
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8612
  %4 = and i32 %3, %2, !dbg !8612
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8612
  ret void, !dbg !8613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8618, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.value(metadata i32 %1, metadata !8619, metadata !DIExpression()), !dbg !8620
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8621

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8622
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8624
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8625
  br label %11, !dbg !8626

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8627
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8628
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8629
  br label %11, !dbg !8630

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8631
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8632
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8633
  br label %11, !dbg !8634

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8635
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8636
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8637
  br label %11, !dbg !8638

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8642, metadata !DIExpression()), !dbg !8643
  %2 = xor i32 %0, -1, !dbg !8644
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8644
  %4 = and i32 %3, %2, !dbg !8644
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8644
  ret void, !dbg !8645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8646 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8648, metadata !DIExpression()), !dbg !8649
  %2 = xor i32 %0, -1, !dbg !8650
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8650
  %4 = and i32 %3, %2, !dbg !8650
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8650
  ret void, !dbg !8651
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8654, metadata !DIExpression()), !dbg !8655
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8656
  %3 = or i32 %2, %0, !dbg !8656
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8656
  ret void, !dbg !8657
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8660, metadata !DIExpression()), !dbg !8661
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8662
  %3 = or i32 %2, %0, !dbg !8662
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8662
  ret void, !dbg !8663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !8664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8668, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8669, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i8* %2, metadata !8670, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !8671, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8673, metadata !DIExpression()), !dbg !8674
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8675
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8675
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8677
  br i1 %6, label %7, label %9, !dbg !8678

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8679
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8680
  store i8* %2, i8** %8, align 4, !dbg !8681
  br label %9, !dbg !8682

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8674
  ret i32 %10, !dbg !8683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8686, metadata !DIExpression()), !dbg !8689
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !8687, metadata !DIExpression()), !dbg !8689
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8688, metadata !DIExpression()), !dbg !8689
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8690
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8691
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8692
  store i8* null, i8** %3, align 4, !dbg !8693
  ret void, !dbg !8694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8695 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8697, metadata !DIExpression()), !dbg !8702
  call void @llvm.dbg.value(metadata i8* %1, metadata !8698, metadata !DIExpression()), !dbg !8702
  call void @llvm.dbg.value(metadata i8* %1, metadata !8699, metadata !DIExpression()), !dbg !8702
  %3 = bitcast i8* %1 to i32*, !dbg !8703
  %4 = load i32, i32* %3, align 4, !dbg !8703
  %5 = add i32 %4, -169, !dbg !8703
  %6 = icmp ult i32 %5, -121, !dbg !8703
  br i1 %6, label %15, label %7, !dbg !8705

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8706
  %9 = inttoptr i32 %8 to i32*, !dbg !8707
  call void @llvm.dbg.value(metadata i32* %9, metadata !8700, metadata !DIExpression()), !dbg !8702
  %10 = load volatile i32, i32* %9, align 4, !dbg !8708
  call void @llvm.dbg.value(metadata i32 %10, metadata !8701, metadata !DIExpression()), !dbg !8702
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8709
  %12 = bitcast i8* %11 to i32*, !dbg !8709
  %13 = load i32, i32* %12, align 4, !dbg !8709
  %14 = or i32 %13, %10, !dbg !8710
  call void @llvm.dbg.value(metadata i32 %14, metadata !8701, metadata !DIExpression()), !dbg !8702
  store volatile i32 %14, i32* %9, align 4, !dbg !8711
  br label %15, !dbg !8712

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8702
  ret i32 %16, !dbg !8713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8714 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8716, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata i8* %1, metadata !8717, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata i8* %1, metadata !8718, metadata !DIExpression()), !dbg !8721
  %3 = bitcast i8* %1 to i32*, !dbg !8722
  %4 = load i32, i32* %3, align 4, !dbg !8722
  %5 = add i32 %4, -169, !dbg !8722
  %6 = icmp ult i32 %5, -121, !dbg !8722
  br i1 %6, label %16, label %7, !dbg !8724

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8725
  %9 = inttoptr i32 %8 to i32*, !dbg !8726
  call void @llvm.dbg.value(metadata i32* %9, metadata !8719, metadata !DIExpression()), !dbg !8721
  %10 = load volatile i32, i32* %9, align 4, !dbg !8727
  call void @llvm.dbg.value(metadata i32 %10, metadata !8720, metadata !DIExpression()), !dbg !8721
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8728
  %12 = bitcast i8* %11 to i32*, !dbg !8728
  %13 = load i32, i32* %12, align 4, !dbg !8728
  %14 = xor i32 %13, -1, !dbg !8729
  %15 = and i32 %10, %14, !dbg !8730
  call void @llvm.dbg.value(metadata i32 %15, metadata !8720, metadata !DIExpression()), !dbg !8721
  store volatile i32 %15, i32* %9, align 4, !dbg !8731
  br label %16, !dbg !8732

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8721
  ret i32 %17, !dbg !8733
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8734 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8736, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i8* %1, metadata !8737, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i32* %2, metadata !8738, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i8* %1, metadata !8739, metadata !DIExpression()), !dbg !8744
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8745
  call void @llvm.dbg.value(metadata i32 %4, metadata !8740, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i32 undef, metadata !8741, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i32 undef, metadata !8742, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.value(metadata i32 %4, metadata !8743, metadata !DIExpression()), !dbg !8744
  %5 = bitcast i8* %1 to i32*, !dbg !8746
  %6 = load i32, i32* %5, align 4, !dbg !8746
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8747

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #26, !dbg !8748
  call void @llvm.dbg.value(metadata i32 %8, metadata !8741, metadata !DIExpression()), !dbg !8744
  br label %19, !dbg !8749

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8751
  call void @llvm.dbg.value(metadata i32 %10, metadata !8742, metadata !DIExpression()), !dbg !8744
  br label %19, !dbg !8752

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8753
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !8754
  br label %19, !dbg !8755

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8756
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #26, !dbg !8757
  br label %19, !dbg !8758

17:                                               ; preds = %3
  br label %19, !dbg !8759

18:                                               ; preds = %3
  br label %19, !dbg !8760

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8761
  br label %21, !dbg !8762

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8744
  ret i32 %22, !dbg !8762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8763 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8765, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i8* %1, metadata !8766, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i8* %2, metadata !8767, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i8* %1, metadata !8768, metadata !DIExpression()), !dbg !8773
  %4 = bitcast i8* %1 to i32*, !dbg !8774
  %5 = load i32, i32* %4, align 4, !dbg !8774
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8775
  call void @llvm.dbg.value(metadata i32 %6, metadata !8772, metadata !DIExpression()), !dbg !8773
  %7 = icmp slt i32 %6, 0, !dbg !8776
  br i1 %7, label %22, label %8, !dbg !8778

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8768, metadata !DIExpression()), !dbg !8773
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8779
  %10 = bitcast i8* %9 to i32*, !dbg !8779
  %11 = load i32, i32* %10, align 4, !dbg !8779
  %12 = lshr i32 %11, 16, !dbg !8779
  %13 = and i32 %12, 7, !dbg !8779
  %14 = lshr i32 %11, 8, !dbg !8780
  %15 = and i32 %14, 31, !dbg !8780
  %16 = shl i32 %13, %15, !dbg !8781
  call void @llvm.dbg.value(metadata i32 %16, metadata !8771, metadata !DIExpression()), !dbg !8773
  %17 = and i32 %11, 255, !dbg !8782
  %18 = or i32 %17, 1073887232, !dbg !8783
  %19 = inttoptr i32 %18 to i32*, !dbg !8784
  call void @llvm.dbg.value(metadata i32* %19, metadata !8769, metadata !DIExpression()), !dbg !8773
  %20 = load volatile i32, i32* %19, align 4, !dbg !8785
  call void @llvm.dbg.value(metadata i32 %20, metadata !8770, metadata !DIExpression()), !dbg !8773
  %21 = or i32 %16, %20, !dbg !8786
  call void @llvm.dbg.value(metadata i32 %21, metadata !8770, metadata !DIExpression()), !dbg !8773
  store volatile i32 %21, i32* %19, align 4, !dbg !8787
  br label %22, !dbg !8788

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8773
  ret i32 %23, !dbg !8789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8794, metadata !DIExpression()), !dbg !8796
  call void @llvm.dbg.value(metadata i32 0, metadata !8795, metadata !DIExpression()), !dbg !8796
  %2 = add i32 %0, -1, !dbg !8797
  %3 = icmp ult i32 %2, 6, !dbg !8797
  br i1 %3, label %4, label %7, !dbg !8797

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8797
  %6 = load i32, i32* %5, align 4, !dbg !8797
  call void @llvm.dbg.value(metadata i32 %6, metadata !8795, metadata !DIExpression()), !dbg !8796
  br label %7, !dbg !8798

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8796
  ret i32 %8, !dbg !8799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8804, metadata !DIExpression()), !dbg !8806
  call void @llvm.dbg.value(metadata i32 %1, metadata !8805, metadata !DIExpression()), !dbg !8806
  %3 = udiv i32 %0, %1, !dbg !8807
  ret i32 %3, !dbg !8808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8813, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 12, metadata !8814, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 336, metadata !8815, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 %1, metadata !8816, metadata !DIExpression()), !dbg !8817
  %3 = mul i32 %0, 336, !dbg !8818
  %4 = mul nsw i32 %1, 12, !dbg !8819
  %5 = udiv i32 %3, %4, !dbg !8820
  ret i32 %5, !dbg !8821
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8822 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8824, metadata !DIExpression()), !dbg !8827
  tail call void @config_enable_default_clocks() #25, !dbg !8828
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8829
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8829
  %4 = lshr i32 %3, 4, !dbg !8829
  %5 = and i32 %4, 15, !dbg !8829
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8829
  %7 = load i8, i8* %6, align 1, !dbg !8829
  %8 = zext i8 %7 to i32, !dbg !8829
  %9 = lshr i32 %2, %8, !dbg !8829
  call void @llvm.dbg.value(metadata i32 %9, metadata !8825, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !8826, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8827
  %10 = icmp ult i32 %9, 168000000, !dbg !8830
  br i1 %10, label %11, label %13, !dbg !8832

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !8833
  br label %13, !dbg !8835

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8836
  tail call fastcc void @set_up_plls() #26, !dbg !8837
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8838
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8841
  br label %14, !dbg !8842

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8843
  %16 = icmp eq i32 %15, 8, !dbg !8844
  br i1 %16, label %17, label %14, !dbg !8842, !llvm.loop !8845

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !8847
  br i1 %18, label %19, label %21, !dbg !8849

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !8850
  br label %21, !dbg !8852

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !8853
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8854
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8855
  ret i32 0, !dbg !8856
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8857 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8859
  %2 = and i32 %1, 240, !dbg !8859
  ret i32 %2, !dbg !8860
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8861 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8862
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8867
  br label %1, !dbg !8868

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8869
  %3 = icmp eq i32 %2, 1, !dbg !8870
  br i1 %3, label %4, label %1, !dbg !8868, !llvm.loop !8871

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8873
  br label %5, !dbg !8876

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8877
  %7 = icmp eq i32 %6, 1, !dbg !8878
  br i1 %7, label %8, label %5, !dbg !8876, !llvm.loop !8879

8:                                                ; preds = %5
  ret void, !dbg !8881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8882 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8883
  %2 = icmp eq i32 %1, 8, !dbg !8885
  br i1 %2, label %3, label %4, !dbg !8886

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8887
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8889
  br label %4, !dbg !8890

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8891
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8892
  %6 = and i32 %5, -196609, !dbg !8892
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8892
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8893
  %8 = and i32 %7, -251658241, !dbg !8893
  %9 = or i32 %8, 117440512, !dbg !8893
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8893
  tail call void @config_pll_sysclock() #25, !dbg !8894
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8895
  br label %10, !dbg !8896

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8897
  %12 = icmp eq i32 %11, 1, !dbg !8898
  br i1 %12, label %13, label %10, !dbg !8896, !llvm.loop !8899

13:                                               ; preds = %10
  ret void, !dbg !8901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8902 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8904, metadata !DIExpression()), !dbg !8905
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8906
  %2 = and i32 %1, -241, !dbg !8906
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8906
  ret void, !dbg !8907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8910, metadata !DIExpression()), !dbg !8911
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8912
  %3 = and i32 %2, -4, !dbg !8912
  %4 = or i32 %3, %0, !dbg !8912
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8912
  ret void, !dbg !8913
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8914 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8915
  %2 = and i32 %1, 12, !dbg !8915
  ret i32 %2, !dbg !8916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8917 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !8919, metadata !DIExpression()), !dbg !8920
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8921
  %2 = and i32 %1, -7169, !dbg !8921
  %3 = or i32 %2, 5120, !dbg !8921
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8921
  ret void, !dbg !8922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8923 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8925, metadata !DIExpression()), !dbg !8926
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8927
  %2 = and i32 %1, -57345, !dbg !8927
  %3 = or i32 %2, 32768, !dbg !8927
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8927
  ret void, !dbg !8928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8929 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8930
  %2 = icmp eq i32 %1, 1, !dbg !8932
  br i1 %2, label %7, label %3, !dbg !8933

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8934
  br label %4, !dbg !8936

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8937
  %6 = icmp eq i32 %5, 1, !dbg !8938
  br i1 %6, label %7, label %4, !dbg !8936, !llvm.loop !8939

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8941
  br label %8, !dbg !8942

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8943
  %10 = icmp eq i32 %9, 0, !dbg !8944
  br i1 %10, label %11, label %8, !dbg !8942, !llvm.loop !8945

11:                                               ; preds = %8
  ret void, !dbg !8947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8948 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8949
  %2 = and i32 %1, -16777217, !dbg !8949
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8949
  ret void, !dbg !8950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8951 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8952
  %2 = or i32 %1, 16777216, !dbg !8952
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8952
  ret void, !dbg !8953
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8954 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8955
  %2 = lshr i32 %1, 25, !dbg !8956
  %3 = and i32 %2, 1, !dbg !8956
  ret i32 %3, !dbg !8957
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8958 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8959
  %2 = lshr i32 %1, 1, !dbg !8960
  %3 = and i32 %2, 1, !dbg !8960
  ret i32 %3, !dbg !8961
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8962 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8963
  %2 = or i32 %1, 1, !dbg !8963
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8963
  ret void, !dbg !8964
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8965 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8966
  %2 = and i32 %1, -262145, !dbg !8966
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8966
  ret void, !dbg !8967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8968 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8969
  %2 = or i32 %1, 65536, !dbg !8969
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8969
  ret void, !dbg !8970
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8971 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8972
  %2 = lshr i32 %1, 17, !dbg !8973
  %3 = and i32 %2, 1, !dbg !8973
  ret i32 %3, !dbg !8974
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8975 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8976
  %2 = or i32 %1, 1, !dbg !8976
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8976
  ret void, !dbg !8977
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8978 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8979
  %2 = lshr i32 %1, 1, !dbg !8980
  %3 = and i32 %2, 1, !dbg !8980
  ret i32 %3, !dbg !8981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8982 {
  ret i32 12000000, !dbg !8984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8988 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8989
  ret void, !dbg !8990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8991 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8995, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 12, metadata !8996, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 336, metadata !8997, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 0, metadata !8998, metadata !DIExpression()), !dbg !8999
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9000
  %2 = and i32 %1, -4227072, !dbg !9000
  %3 = or i32 %2, 4215820, !dbg !9000
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9000
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9001
  %5 = and i32 %4, -196609, !dbg !9001
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9001
  ret void, !dbg !9002
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !9003 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !9004
  ret void, !dbg !9005
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !9006 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9009, metadata !DIExpression()), !dbg !9011
  %2 = bitcast i32* %1 to i8*, !dbg !9012
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9012
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9010, metadata !DIExpression()), !dbg !9013
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9014
  %4 = or i32 %3, 268435456, !dbg !9014
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9014
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9015
  %6 = and i32 %5, 268435456, !dbg !9015
  store volatile i32 %6, i32* %1, align 4, !dbg !9016
  %7 = load volatile i32, i32* %1, align 4, !dbg !9017
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9018
  ret void, !dbg !9018
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9021, metadata !DIExpression()), !dbg !9022
  %2 = tail call fastcc zeroext i1 @device_is_ready.45() #26, !dbg !9023
  br i1 %2, label %3, label %4, !dbg !9025

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !9026
  br label %4, !dbg !9027

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9022
  ret i32 %5, !dbg !9028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.45() unnamed_addr #1 !dbg !9029 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9033, metadata !DIExpression()), !dbg !9034
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9035, !srcloc !9037
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.48() #26, !dbg !9038
  ret i1 %1, !dbg !9039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9040 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9041
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9042
  ret void, !dbg !9043
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9046, metadata !DIExpression()), !dbg !9048
  %2 = load i32 (i8)*, i32 (i8)** @debug_hook_out, align 4, !dbg !9049
  %3 = trunc i32 %0 to i8, !dbg !9049
  %4 = tail call i32 %2(i8 noundef zeroext %3) #25, !dbg !9049
  %5 = icmp eq i32 %4, 1, !dbg !9049
  call void @llvm.dbg.value(metadata i1 %5, metadata !9047, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9048
  br i1 %5, label %10, label %6, !dbg !9050

6:                                                ; preds = %1
  %7 = icmp eq i32 %0, 10, !dbg !9051
  br i1 %7, label %8, label %9, !dbg !9053

8:                                                ; preds = %6
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 13) #26, !dbg !9054
  br label %9, !dbg !9056

9:                                                ; preds = %8, %6
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %3) #26, !dbg !9057
  br label %10, !dbg !9058

10:                                               ; preds = %1, %9
  ret i32 %0, !dbg !9059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.46(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9060 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9062, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata i8 %0, metadata !9063, metadata !DIExpression()), !dbg !9064
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9065, !srcloc !9067
  tail call fastcc void @z_impl_uart_poll_out.47(i8 noundef zeroext %0) #26, !dbg !9068
  ret void, !dbg !9069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.47(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9070 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9072, metadata !DIExpression()), !dbg !9075
  call void @llvm.dbg.value(metadata i8 %0, metadata !9073, metadata !DIExpression()), !dbg !9075
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9076
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9074, metadata !DIExpression()), !dbg !9075
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9077
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9077
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !9078
  ret void, !dbg !9079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @debug_hook_out_nop(i8 noundef zeroext %0) #11 !dbg !9080 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9082, metadata !DIExpression()), !dbg !9083
  ret i32 0, !dbg !9084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.48() unnamed_addr #1 !dbg !9085 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9087, metadata !DIExpression()), !dbg !9088
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9089
  ret i1 %1, !dbg !9090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_in_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9091 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9095, metadata !DIExpression()), !dbg !9096
  store i32 (i8)* %0, i32 (i8)** @debug_hook_in, align 4, !dbg !9097
  ret void, !dbg !9098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_out_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9099 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9103, metadata !DIExpression()), !dbg !9104
  store i32 (i8)* %0, i32 (i8)** @debug_hook_out, align 4, !dbg !9105
  ret void, !dbg !9106
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !9107 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9111, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9112, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9113, metadata !DIExpression()), !dbg !9114
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !9115
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !9116
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9117
  tail call fastcc void @console_input_init() #26, !dbg !9118
  ret void, !dbg !9119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !9120 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9123
  tail call fastcc void @uart_irq_rx_disable.49() #26, !dbg !9124
  tail call fastcc void @uart_irq_tx_disable.50() #26, !dbg !9125
  tail call fastcc void @uart_irq_callback_set() #26, !dbg !9126
  %2 = call fastcc i32 @uart_irq_rx_ready.51() #26, !dbg !9127
  %3 = icmp eq i32 %2, 0, !dbg !9128
  br i1 %3, label %8, label %4, !dbg !9128

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !9122, metadata !DIExpression(DW_OP_deref)), !dbg !9129
  %5 = call fastcc i32 @uart_fifo_read.52(i8* noundef nonnull %1) #26, !dbg !9130
  %6 = call fastcc i32 @uart_irq_rx_ready.51() #26, !dbg !9127
  %7 = icmp eq i32 %6, 0, !dbg !9128
  br i1 %7, label %8, label %4, !dbg !9128, !llvm.loop !9132

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable.53() #26, !dbg !9134
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9135
  ret void, !dbg !9135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable.49() unnamed_addr #1 !dbg !9136 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9138, metadata !DIExpression()), !dbg !9139
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9140, !srcloc !9142
  tail call fastcc void @z_impl_uart_irq_rx_disable.62() #26, !dbg !9143
  ret void, !dbg !9144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable.50() unnamed_addr #1 !dbg !9145 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9147, metadata !DIExpression()), !dbg !9148
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9149, !srcloc !9151
  tail call fastcc void @z_impl_uart_irq_tx_disable.61() #26, !dbg !9152
  ret void, !dbg !9153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !9154 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9158, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9159, metadata !DIExpression()), !dbg !9160
  tail call fastcc void @uart_irq_callback_user_data_set.55() #26, !dbg !9161
  ret void, !dbg !9162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready.51() unnamed_addr #1 !dbg !9163 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9165, metadata !DIExpression()), !dbg !9167
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9168
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9166, metadata !DIExpression()), !dbg !9167
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !9169
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9169
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9171
  br i1 %4, label %7, label %5, !dbg !9172

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9173
  br label %7, !dbg !9174

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9167
  ret i32 %8, !dbg !9175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read.52(i8* noundef %0) unnamed_addr #1 !dbg !9176 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9178, metadata !DIExpression()), !dbg !9182
  call void @llvm.dbg.value(metadata i8* %0, metadata !9179, metadata !DIExpression()), !dbg !9182
  call void @llvm.dbg.value(metadata i32 1, metadata !9180, metadata !DIExpression()), !dbg !9182
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9183
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9181, metadata !DIExpression()), !dbg !9182
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !9184
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !9184
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !9186
  br i1 %5, label %8, label %6, !dbg !9187

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8* noundef %0, i32 noundef 1) #25, !dbg !9188
  br label %8, !dbg !9189

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !9182
  ret i32 %9, !dbg !9190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable.53() unnamed_addr #1 !dbg !9191 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9193, metadata !DIExpression()), !dbg !9194
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9195, !srcloc !9197
  tail call fastcc void @z_impl_uart_irq_rx_enable.54() #26, !dbg !9198
  ret void, !dbg !9199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable.54() unnamed_addr #1 !dbg !9200 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9202, metadata !DIExpression()), !dbg !9204
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9205
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9203, metadata !DIExpression()), !dbg !9204
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !9206
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9206
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9208
  br i1 %4, label %6, label %5, !dbg !9209

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9210
  br label %6, !dbg !9212

6:                                                ; preds = %5, %0
  ret void, !dbg !9213
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1084 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1086, metadata !DIExpression()), !dbg !9214
  call void @llvm.dbg.value(metadata i8* %1, metadata !1087, metadata !DIExpression()), !dbg !9214
  %4 = call fastcc i32 @uart_irq_update.56() #26, !dbg !9215
  %5 = icmp eq i32 %4, 0, !dbg !9215
  br i1 %5, label %96, label %6, !dbg !9216

6:                                                ; preds = %2, %93
  %7 = call fastcc i32 @uart_irq_is_pending() #26, !dbg !9217
  %8 = icmp eq i32 %7, 0, !dbg !9216
  br i1 %8, label %96, label %9, !dbg !9218

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9219
  %10 = call fastcc i32 @uart_irq_rx_ready.51() #26, !dbg !9220
  %11 = icmp eq i32 %10, 0, !dbg !9220
  br i1 %11, label %93, label %12, !dbg !9222, !llvm.loop !9223

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1088, metadata !DIExpression(DW_OP_deref)), !dbg !9225
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #26, !dbg !9226
  call void @llvm.dbg.value(metadata i32 %13, metadata !1090, metadata !DIExpression()), !dbg !9225
  %14 = icmp slt i32 %13, 0, !dbg !9227
  br i1 %14, label %92, label %15, !dbg !9229

15:                                               ; preds = %12
  %16 = load i32 (i8)*, i32 (i8)** @debug_hook_in, align 4, !dbg !9230
  %17 = icmp eq i32 (i8)* %16, null, !dbg !9232
  br i1 %17, label %22, label %18, !dbg !9233

18:                                               ; preds = %15
  %19 = load i8, i8* %3, align 1, !dbg !9234
  call void @llvm.dbg.value(metadata i8 %19, metadata !1088, metadata !DIExpression()), !dbg !9225
  %20 = call i32 %16(i8 noundef zeroext %19) #25, !dbg !9235
  %21 = icmp eq i32 %20, 0, !dbg !9236
  br i1 %21, label %22, label %92, !dbg !9237

22:                                               ; preds = %18, %15
  %23 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9238
  %24 = icmp eq %struct.console_input* %23, null, !dbg !9238
  br i1 %24, label %25, label %30, !dbg !9239

25:                                               ; preds = %22
  %26 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !9240
  %27 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %26, i32 0, i32 0, !dbg !9240
  %28 = call fastcc i8* @k_queue_get(%struct.k_queue* noundef %27) #26, !dbg !9240
  call void @llvm.dbg.value(metadata i8* %28, metadata !1091, metadata !DIExpression()), !dbg !9241
  store i8* %28, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9242
  %29 = icmp eq i8* %28, null, !dbg !9243
  br i1 %29, label %92, label %30, !dbg !9245

30:                                               ; preds = %25, %22
  %31 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #26, !dbg !9246
  br i1 %31, label %32, label %36, !dbg !9248

32:                                               ; preds = %30
  %33 = load i8, i8* %3, align 1, !dbg !9249
  call void @llvm.dbg.value(metadata i8 %33, metadata !1088, metadata !DIExpression()), !dbg !9225
  %34 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9251
  %35 = getelementptr inbounds %struct.console_input, %struct.console_input* %34, i32 0, i32 2, i32 0, !dbg !9251
  call fastcc void @handle_ansi(i8 noundef zeroext %33, i8* noundef nonnull %35) #26, !dbg !9252
  br label %93, !dbg !9253, !llvm.loop !9223

36:                                               ; preds = %30
  %37 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #26, !dbg !9254
  %38 = load i8, i8* %3, align 1, !dbg !9225
  call void @llvm.dbg.value(metadata i8 %38, metadata !1088, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata i8 %38, metadata !1088, metadata !DIExpression()), !dbg !9225
  br i1 %37, label %39, label %42, !dbg !9256

39:                                               ; preds = %36
  %40 = icmp eq i8 %38, 91, !dbg !9257
  br i1 %40, label %41, label %93, !dbg !9260, !llvm.loop !9223

41:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 1) #26, !dbg !9261
  call fastcc void @atomic_set_bit(i32 noundef 2) #26, !dbg !9263
  br label %93, !dbg !9264, !llvm.loop !9223

42:                                               ; preds = %36
  %43 = zext i8 %38 to i32, !dbg !9265
  %44 = call fastcc i32 @isprint(i32 noundef %43) #26, !dbg !9267
  %45 = icmp eq i32 %44, 0, !dbg !9267
  br i1 %45, label %46, label %81, !dbg !9268

46:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i8 undef, metadata !1088, metadata !DIExpression()), !dbg !9225
  switch i8 %38, label %93 [
    i8 8, label %47
    i8 127, label %47
    i8 27, label %56
    i8 13, label %57
    i8 9, label %68
  ], !dbg !9269, !llvm.loop !9223

47:                                               ; preds = %46, %46
  %48 = load i8, i8* @cur, align 1, !dbg !9271
  %49 = icmp eq i8 %48, 0, !dbg !9274
  br i1 %49, label %93, label %50, !dbg !9275, !llvm.loop !9223

50:                                               ; preds = %47
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9276
  %52 = add i8 %48, -1, !dbg !9278
  store i8 %52, i8* @cur, align 1, !dbg !9278
  %53 = zext i8 %52 to i32, !dbg !9276
  %54 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %53, !dbg !9276
  %55 = load i8, i8* @end, align 1, !dbg !9279
  call fastcc void @del_char(i8* noundef nonnull %54, i8 noundef zeroext %55) #26, !dbg !9280
  br label %93, !dbg !9281, !llvm.loop !9223

56:                                               ; preds = %46
  call fastcc void @atomic_set_bit(i32 noundef 0) #26, !dbg !9282
  br label %93, !dbg !9283, !llvm.loop !9223

57:                                               ; preds = %46
  %58 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9284
  %59 = load i8, i8* @cur, align 1, !dbg !9285
  %60 = zext i8 %59 to i32, !dbg !9285
  %61 = load i8, i8* @end, align 1, !dbg !9286
  %62 = zext i8 %61 to i32, !dbg !9286
  %63 = add nuw nsw i32 %62, %60, !dbg !9287
  %64 = getelementptr inbounds %struct.console_input, %struct.console_input* %58, i32 0, i32 2, i32 %63, !dbg !9284
  store i8 0, i8* %64, align 1, !dbg !9288
  call fastcc void @uart_poll_out.46(i8 noundef zeroext 13) #26, !dbg !9289
  call fastcc void @uart_poll_out.46(i8 noundef zeroext 10) #26, !dbg !9290
  store i8 0, i8* @cur, align 1, !dbg !9291
  store i8 0, i8* @end, align 1, !dbg !9292
  %65 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !9293
  %66 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %65, i32 0, i32 0, !dbg !9293
  %67 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9293
  call void @k_queue_append(%struct.k_queue* noundef %66, i8* noundef %67) #25, !dbg !9293
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9295
  br label %93, !dbg !9296, !llvm.loop !9223

68:                                               ; preds = %46
  %69 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9297
  %70 = icmp eq i8 (i8*, i8)* %69, null, !dbg !9297
  %71 = load i8, i8* @end, align 1
  %72 = icmp ne i8 %71, 0
  %73 = select i1 %70, i1 true, i1 %72, !dbg !9299
  br i1 %73, label %93, label %74, !dbg !9299, !llvm.loop !9223

74:                                               ; preds = %68
  %75 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9300
  %76 = getelementptr inbounds %struct.console_input, %struct.console_input* %75, i32 0, i32 2, i32 0, !dbg !9300
  %77 = load i8, i8* @cur, align 1, !dbg !9302
  %78 = call zeroext i8 %69(i8* noundef nonnull %76, i8 noundef zeroext %77) #25, !dbg !9303
  %79 = load i8, i8* @cur, align 1, !dbg !9304
  %80 = add i8 %79, %78, !dbg !9304
  store i8 %80, i8* @cur, align 1, !dbg !9304
  br label %93, !dbg !9305, !llvm.loop !9223

81:                                               ; preds = %42
  %82 = load i8, i8* @cur, align 1, !dbg !9306
  %83 = zext i8 %82 to i32, !dbg !9306
  %84 = load i8, i8* @end, align 1, !dbg !9308
  %85 = zext i8 %84 to i32, !dbg !9308
  %86 = add nuw nsw i32 %85, %83, !dbg !9309
  %87 = icmp ult i32 %86, 127, !dbg !9310
  br i1 %87, label %88, label %93, !dbg !9311

88:                                               ; preds = %81
  %89 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9312
  %90 = add i8 %82, 1, !dbg !9314
  store i8 %90, i8* @cur, align 1, !dbg !9314
  %91 = getelementptr inbounds %struct.console_input, %struct.console_input* %89, i32 0, i32 2, i32 %83, !dbg !9312
  call void @llvm.dbg.value(metadata i8 %38, metadata !1088, metadata !DIExpression()), !dbg !9225
  call fastcc void @insert_char(i8* noundef nonnull %91, i8 noundef zeroext %38, i8 noundef zeroext %84) #26, !dbg !9315
  br label %93, !dbg !9316

92:                                               ; preds = %12, %18, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9224
  br label %96

93:                                               ; preds = %81, %88, %56, %57, %50, %47, %74, %68, %46, %39, %41, %9, %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9224
  %94 = call fastcc i32 @uart_irq_update.56() #26, !dbg !9215
  %95 = icmp eq i32 %94, 0, !dbg !9215
  br i1 %95, label %96, label %6, !dbg !9216

96:                                               ; preds = %6, %93, %2, %92
  ret void, !dbg !9317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set.55() unnamed_addr #1 !dbg !9318 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9320, metadata !DIExpression()), !dbg !9324
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9321, metadata !DIExpression()), !dbg !9324
  call void @llvm.dbg.value(metadata i8* null, metadata !9322, metadata !DIExpression()), !dbg !9324
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9325
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9323, metadata !DIExpression()), !dbg !9324
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !9326
  br i1 %2, label %8, label %3, !dbg !9328

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !9329
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !9329
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !9330
  br i1 %6, label %8, label %7, !dbg !9331

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_45, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #25, !dbg !9332
  br label %8, !dbg !9334

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !9335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update.56() unnamed_addr #1 !dbg !9336 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9338, metadata !DIExpression()), !dbg !9339
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9340, !srcloc !9342
  %1 = tail call fastcc i32 @z_impl_uart_irq_update.60() #26, !dbg !9343
  ret i32 %1, !dbg !9344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !9345 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9347, metadata !DIExpression()), !dbg !9348
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9349, !srcloc !9351
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #26, !dbg !9352
  ret i32 %1, !dbg !9353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !9354 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9358, metadata !DIExpression()), !dbg !9362
  call void @llvm.dbg.value(metadata i8* %0, metadata !9359, metadata !DIExpression()), !dbg !9362
  call void @llvm.dbg.value(metadata i32 1, metadata !9360, metadata !DIExpression()), !dbg !9362
  %2 = tail call fastcc i32 @uart_fifo_read.52(i8* noundef %0) #26, !dbg !9363
  call void @llvm.dbg.value(metadata i32 %2, metadata !9361, metadata !DIExpression()), !dbg !9362
  %3 = icmp slt i32 %2, 0, !dbg !9364
  br i1 %3, label %4, label %5, !dbg !9366

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable.49() #26, !dbg !9367
  br label %5, !dbg !9369

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !9362
  ret i32 %6, !dbg !9370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !9371 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9381, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !9380, metadata !DIExpression()), !dbg !9382
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9383, !srcloc !9385
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #25, !dbg !9386
  ret i8* %2, !dbg !9387
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !9388 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9394, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i32 %0, metadata !9395, metadata !DIExpression()), !dbg !9398
  %2 = tail call fastcc i32 @atomic_get() #26, !dbg !9399
  call void @llvm.dbg.value(metadata i32 %2, metadata !9396, metadata !DIExpression()), !dbg !9398
  %3 = and i32 %0, 31, !dbg !9400
  %4 = shl nuw i32 1, %3, !dbg !9401
  %5 = and i32 %2, %4, !dbg !9401
  %6 = icmp ne i32 %5, 0, !dbg !9401
  ret i1 %6, !dbg !9402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !9403 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9407, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %1, metadata !9408, metadata !DIExpression()), !dbg !9410
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #26, !dbg !9411
  br i1 %3, label %4, label %11, !dbg !9413

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !9414
  %6 = tail call fastcc i32 @isdigit.57(i32 noundef %5) #26, !dbg !9417
  %7 = icmp eq i32 %6, 0, !dbg !9417
  br i1 %7, label %8, label %9, !dbg !9418

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !9419
  br label %34, !dbg !9421

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #26, !dbg !9422
  %10 = add nsw i32 %5, -48, !dbg !9423
  store i32 %10, i32* @ansi_val, align 4, !dbg !9424
  store i32 0, i32* @ansi_val_2, align 4, !dbg !9425
  br label %81, !dbg !9426

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #26, !dbg !9427
  br i1 %12, label %13, label %34, !dbg !9429

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !9430
  %15 = tail call fastcc i32 @isdigit.57(i32 noundef %14) #26, !dbg !9433
  %16 = icmp eq i32 %15, 0, !dbg !9433
  br i1 %16, label %29, label %17, !dbg !9434

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #26, !dbg !9435
  br i1 %18, label %19, label %24, !dbg !9438

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !9439
  %21 = mul i32 %20, 10, !dbg !9439
  %22 = add nsw i32 %14, -48, !dbg !9441
  %23 = add i32 %22, %21, !dbg !9442
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !9442
  br label %81, !dbg !9443

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !9444
  %26 = mul i32 %25, 10, !dbg !9444
  %27 = add nsw i32 %14, -48, !dbg !9446
  %28 = add i32 %27, %26, !dbg !9447
  store i32 %28, i32* @ansi_val, align 4, !dbg !9447
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !9448
  br i1 %30, label %31, label %33, !dbg !9450

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #26, !dbg !9451
  br i1 %32, label %33, label %81, !dbg !9452

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #26, !dbg !9453
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #26, !dbg !9454
  br label %34, !dbg !9455

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !9409), !dbg !9456
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !9457

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !9458
  %37 = load i8, i8* @cur, align 1, !dbg !9461
  %38 = zext i8 %37 to i32, !dbg !9461
  %39 = icmp ugt i32 %36, %38, !dbg !9462
  br i1 %39, label %80, label %40, !dbg !9463

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !9464
  %42 = trunc i32 %36 to i8, !dbg !9464
  %43 = add i8 %41, %42, !dbg !9464
  store i8 %43, i8* @end, align 1, !dbg !9464
  %44 = sub i8 %37, %42, !dbg !9465
  store i8 %44, i8* @cur, align 1, !dbg !9465
  tail call fastcc void @cursor_backward(i32 noundef %36) #26, !dbg !9466
  br label %80, !dbg !9467

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !9468
  %47 = load i8, i8* @end, align 1, !dbg !9470
  %48 = zext i8 %47 to i32, !dbg !9470
  %49 = icmp ugt i32 %46, %48, !dbg !9471
  br i1 %49, label %80, label %50, !dbg !9472

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !9473
  %52 = sub i8 %47, %51, !dbg !9473
  store i8 %52, i8* @end, align 1, !dbg !9473
  %53 = load i8, i8* @cur, align 1, !dbg !9474
  %54 = add i8 %53, %51, !dbg !9474
  store i8 %54, i8* @cur, align 1, !dbg !9474
  tail call fastcc void @cursor_forward(i32 noundef %46) #26, !dbg !9475
  br label %80, !dbg !9476

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !9477
  %57 = icmp eq i8 %56, 0, !dbg !9477
  br i1 %57, label %80, label %58, !dbg !9479

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !9480
  tail call fastcc void @cursor_backward(i32 noundef %59) #26, !dbg !9481
  %60 = load i8, i8* @cur, align 1, !dbg !9482
  %61 = load i8, i8* @end, align 1, !dbg !9483
  %62 = add i8 %61, %60, !dbg !9483
  store i8 %62, i8* @end, align 1, !dbg !9483
  store i8 0, i8* @cur, align 1, !dbg !9484
  br label %80, !dbg !9485

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !9486
  %65 = icmp eq i8 %64, 0, !dbg !9486
  br i1 %65, label %80, label %66, !dbg !9488

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !9489
  tail call fastcc void @cursor_forward(i32 noundef %67) #26, !dbg !9490
  %68 = load i8, i8* @end, align 1, !dbg !9491
  %69 = load i8, i8* @cur, align 1, !dbg !9492
  %70 = add i8 %69, %68, !dbg !9492
  store i8 %70, i8* @cur, align 1, !dbg !9492
  store i8 0, i8* @end, align 1, !dbg !9493
  br label %80, !dbg !9494

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !9495
  %73 = icmp eq i8 %72, 0, !dbg !9495
  br i1 %73, label %80, label %74, !dbg !9497

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #26, !dbg !9498
  %75 = load i8, i8* @cur, align 1, !dbg !9499
  %76 = zext i8 %75 to i32, !dbg !9500
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !9500
  %78 = load i8, i8* @end, align 1, !dbg !9501
  %79 = add i8 %78, -1, !dbg !9501
  store i8 %79, i8* @end, align 1, !dbg !9501
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #26, !dbg !9502
  br label %80, !dbg !9503

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #26, !dbg !9504
  br label %81, !dbg !9505

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !9505
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9506 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9511, metadata !DIExpression()), !dbg !9515
  call void @llvm.dbg.value(metadata i32 %0, metadata !9512, metadata !DIExpression()), !dbg !9515
  %2 = and i32 %0, 31, !dbg !9516
  %3 = shl nuw i32 1, %2, !dbg !9516
  call void @llvm.dbg.value(metadata i32 %3, metadata !9513, metadata !DIExpression()), !dbg !9515
  %4 = xor i32 %3, -1, !dbg !9517
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9518
  call void @llvm.dbg.value(metadata i32 %5, metadata !9514, metadata !DIExpression()), !dbg !9515
  %6 = and i32 %5, %3, !dbg !9519
  %7 = icmp ne i32 %6, 0, !dbg !9520
  ret i1 %7, !dbg !9521
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !9522 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9526, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %0, metadata !9527, metadata !DIExpression()), !dbg !9529
  %2 = and i32 %0, 31, !dbg !9530
  %3 = shl nuw i32 1, %2, !dbg !9530
  call void @llvm.dbg.value(metadata i32 %3, metadata !9528, metadata !DIExpression()), !dbg !9529
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #26, !dbg !9531
  ret void, !dbg !9532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !9533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9535, metadata !DIExpression()), !dbg !9536
  %2 = add i32 %0, -32, !dbg !9537
  %3 = icmp ult i32 %2, 95, !dbg !9537
  %4 = zext i1 %3 to i32, !dbg !9537
  ret i32 %4, !dbg !9538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9539 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9543, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata i8 %1, metadata !9544, metadata !DIExpression()), !dbg !9545
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 8) #26, !dbg !9546
  %3 = icmp eq i8 %1, 0, !dbg !9547
  br i1 %3, label %4, label %5, !dbg !9549

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 32) #26, !dbg !9550
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 8) #26, !dbg !9552
  br label %14, !dbg !9553

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #26, !dbg !9554
  call void @llvm.dbg.value(metadata i8 %1, metadata !9544, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata i8* %0, metadata !9543, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata i8 %1, metadata !9544, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9545
  br label %6, !dbg !9555

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !9544, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata i8* %8, metadata !9543, metadata !DIExpression()), !dbg !9545
  %9 = add i8 %7, -1, !dbg !9556
  call void @llvm.dbg.value(metadata i8 %9, metadata !9544, metadata !DIExpression()), !dbg !9545
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9557
  %11 = load i8, i8* %10, align 1, !dbg !9559
  store i8 %11, i8* %8, align 1, !dbg !9560
  call void @llvm.dbg.value(metadata i8* %10, metadata !9543, metadata !DIExpression()), !dbg !9545
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %11) #26, !dbg !9561
  call void @llvm.dbg.value(metadata i8 %9, metadata !9544, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9545
  %12 = icmp eq i8 %9, 0, !dbg !9562
  br i1 %12, label %13, label %6, !dbg !9555, !llvm.loop !9563

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 32) #26, !dbg !9565
  tail call fastcc void @cursor_restore() #26, !dbg !9566
  br label %14, !dbg !9567

14:                                               ; preds = %13, %4
  ret void, !dbg !9567
}

; Function Attrs: optsize
declare !dbg !9568 dso_local void @k_queue_append(%struct.k_queue* noundef, i8* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !9571 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9575, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8 %1, metadata !9576, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8 %2, metadata !9577, metadata !DIExpression()), !dbg !9579
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %1) #26, !dbg !9580
  %4 = icmp eq i8 %2, 0, !dbg !9581
  br i1 %4, label %5, label %6, !dbg !9583

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !9584
  br label %17, !dbg !9586

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !9587
  call void @llvm.dbg.value(metadata i8 %7, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8* %0, metadata !9575, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9579
  store i8 %1, i8* %0, align 1, !dbg !9588
  tail call fastcc void @cursor_save() #26, !dbg !9589
  call void @llvm.dbg.value(metadata i8 %7, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8 %2, metadata !9577, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8* %0, metadata !9575, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9579
  call void @llvm.dbg.value(metadata i8 %2, metadata !9577, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9579
  br label %8, !dbg !9590

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9579
  call void @llvm.dbg.value(metadata i8 %10, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8 %11, metadata !9577, metadata !DIExpression()), !dbg !9579
  %13 = add i8 %11, -1, !dbg !9591
  call void @llvm.dbg.value(metadata i8 %13, metadata !9577, metadata !DIExpression()), !dbg !9579
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %10) #26, !dbg !9592
  %14 = load i8, i8* %12, align 1, !dbg !9594
  call void @llvm.dbg.value(metadata i8 %14, metadata !9576, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8* %12, metadata !9575, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9579
  store i8 %10, i8* %12, align 1, !dbg !9595
  call void @llvm.dbg.value(metadata i8 %14, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8* %12, metadata !9575, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9579
  call void @llvm.dbg.value(metadata i8 %13, metadata !9577, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9579
  %15 = icmp eq i8 %13, 0, !dbg !9596
  br i1 %15, label %16, label %8, !dbg !9590, !llvm.loop !9597

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #26, !dbg !9599
  br label %17, !dbg !9600

17:                                               ; preds = %16, %5
  ret void, !dbg !9600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !9601 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0)) #25, !dbg !9602
  ret void, !dbg !9603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !9604 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !9605
  ret void, !dbg !9606
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !9607 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9612, metadata !DIExpression()), !dbg !9614
  call void @llvm.dbg.value(metadata i32 %0, metadata !9613, metadata !DIExpression()), !dbg !9614
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9615
  ret i32 %2, !dbg !9616
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !9617 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9619, metadata !DIExpression()), !dbg !9621
  call void @llvm.dbg.value(metadata i32 %0, metadata !9620, metadata !DIExpression()), !dbg !9621
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9622
  ret i32 %2, !dbg !9623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.57(i32 noundef %0) unnamed_addr #11 !dbg !9624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9626, metadata !DIExpression()), !dbg !9627
  %2 = add i32 %0, -48, !dbg !9628
  %3 = icmp ult i32 %2, 10, !dbg !9629
  %4 = zext i1 %3 to i32, !dbg !9629
  ret i32 %4, !dbg !9630
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !9631 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9633, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 4, metadata !9634, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 16, metadata !9635, metadata !DIExpression()), !dbg !9637
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #26, !dbg !9638
  call void @llvm.dbg.value(metadata i32 %1, metadata !9636, metadata !DIExpression()), !dbg !9637
  %2 = and i32 %1, 16, !dbg !9639
  %3 = icmp ne i32 %2, 0, !dbg !9640
  ret i1 %3, !dbg !9641
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9642 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9644, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i32 %0, metadata !9645, metadata !DIExpression()), !dbg !9647
  %2 = and i32 %0, 31, !dbg !9648
  %3 = shl nuw i32 1, %2, !dbg !9648
  call void @llvm.dbg.value(metadata i32 %3, metadata !9646, metadata !DIExpression()), !dbg !9647
  %4 = xor i32 %3, -1, !dbg !9649
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9650
  ret void, !dbg !9651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !9652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9654, metadata !DIExpression()), !dbg !9655
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), i32 noundef %0) #25, !dbg !9656
  ret void, !dbg !9657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !9658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9660, metadata !DIExpression()), !dbg !9661
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.58, i32 0, i32 0), i32 noundef %0) #25, !dbg !9662
  ret void, !dbg !9663
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !9664 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9668, metadata !DIExpression()), !dbg !9669
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !9670
  ret i32 %1, !dbg !9671
}

; Function Attrs: optsize
declare !dbg !9672 dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef, [1 x i64]) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !9673 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9675, metadata !DIExpression()), !dbg !9677
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9678
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9676, metadata !DIExpression()), !dbg !9677
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !9679
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9679
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9681
  br i1 %4, label %7, label %5, !dbg !9682

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9683
  br label %7, !dbg !9684

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9677
  ret i32 %8, !dbg !9685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update.60() unnamed_addr #1 !dbg !9686 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9688, metadata !DIExpression()), !dbg !9690
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9691
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9689, metadata !DIExpression()), !dbg !9690
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !9692
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9692
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9694
  br i1 %4, label %7, label %5, !dbg !9695

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9696
  br label %7, !dbg !9697

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9690
  ret i32 %8, !dbg !9698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable.61() unnamed_addr #1 !dbg !9699 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9701, metadata !DIExpression()), !dbg !9703
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9704
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9702, metadata !DIExpression()), !dbg !9703
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !9705
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9705
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9707
  br i1 %4, label %6, label %5, !dbg !9708

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9709
  br label %6, !dbg !9711

6:                                                ; preds = %5, %0
  ret void, !dbg !9712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable.62() unnamed_addr #1 !dbg !9713 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9715, metadata !DIExpression()), !dbg !9717
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9718
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9716, metadata !DIExpression()), !dbg !9717
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !9719
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9719
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9721
  br i1 %4, label %6, label %5, !dbg !9722

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9723
  br label %6, !dbg !9725

6:                                                ; preds = %5, %0
  ret void, !dbg !9726
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9727 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9729, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.value(metadata i8 %1, metadata !9730, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.value(metadata i32 %2, metadata !9731, metadata !DIExpression()), !dbg !9734
  %5 = bitcast i32* %4 to i8*, !dbg !9735
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9735
  call void @llvm.dbg.value(metadata i32* %4, metadata !9733, metadata !DIExpression(DW_OP_deref)), !dbg !9734
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %6, metadata !9732, metadata !DIExpression()), !dbg !9734
  %7 = icmp eq i32 %6, 0, !dbg !9737
  br i1 %7, label %8, label %31, !dbg !9739

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9732, metadata !DIExpression()), !dbg !9734
  %9 = and i32 %2, 131072, !dbg !9740
  %10 = icmp eq i32 %9, 0, !dbg !9742
  br i1 %10, label %28, label %11, !dbg !9743

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9744
  %13 = icmp eq i32 %12, 0, !dbg !9747
  br i1 %13, label %18, label %14, !dbg !9748

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9749
  %16 = shl nuw i32 1, %15, !dbg !9749
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !9751
  br label %25, !dbg !9752

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9753
  %20 = icmp eq i32 %19, 0, !dbg !9755
  %21 = zext i8 %1 to i32, !dbg !9734
  br i1 %20, label %25, label %22, !dbg !9756

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9757
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !9759
  br label %25, !dbg !9760

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9761
  %27 = load i32, i32* %4, align 4, !dbg !9762
  call void @llvm.dbg.value(metadata i32 %30, metadata !9733, metadata !DIExpression()), !dbg !9734
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !9763
  br label %31, !dbg !9764

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9761
  %30 = load i32, i32* %4, align 4, !dbg !9762
  call void @llvm.dbg.value(metadata i32 %30, metadata !9733, metadata !DIExpression()), !dbg !9734
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !9763
  call void @llvm.dbg.value(metadata i32 0, metadata !9732, metadata !DIExpression()), !dbg !9734
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9765
  ret i32 %6, !dbg !9765
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !9766 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9770, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i32* %1, metadata !9771, metadata !DIExpression()), !dbg !9775
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9776
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9776
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9776
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9772, metadata !DIExpression()), !dbg !9775
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9777
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9777
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9777
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9774, metadata !DIExpression()), !dbg !9775
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !9778
  store i32 %9, i32* %1, align 4, !dbg !9779
  ret i32 0, !dbg !9780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9781 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9783, metadata !DIExpression()), !dbg !9789
  call void @llvm.dbg.value(metadata i32 %1, metadata !9784, metadata !DIExpression()), !dbg !9789
  call void @llvm.dbg.value(metadata i32 %2, metadata !9785, metadata !DIExpression()), !dbg !9789
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9790
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9790
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9790
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9786, metadata !DIExpression()), !dbg !9789
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9791
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9791
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9791
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9787, metadata !DIExpression()), !dbg !9789
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !9792
  call void @llvm.dbg.value(metadata i32 %10, metadata !9788, metadata !DIExpression()), !dbg !9789
  %11 = xor i32 %1, -1, !dbg !9793
  %12 = and i32 %10, %11, !dbg !9794
  %13 = and i32 %2, %1, !dbg !9795
  %14 = or i32 %12, %13, !dbg !9796
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !9797
  ret i32 0, !dbg !9798
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9799 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9801, metadata !DIExpression()), !dbg !9805
  call void @llvm.dbg.value(metadata i32 %1, metadata !9802, metadata !DIExpression()), !dbg !9805
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9806
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9806
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9806
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9803, metadata !DIExpression()), !dbg !9805
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9807
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9807
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9807
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9804, metadata !DIExpression()), !dbg !9805
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9808
  store volatile i32 %1, i32* %9, align 4, !dbg !9808
  ret i32 0, !dbg !9809
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9810 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9812, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i32 %1, metadata !9813, metadata !DIExpression()), !dbg !9816
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9817
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9817
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9817
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9814, metadata !DIExpression()), !dbg !9816
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9818
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9818
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9818
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9815, metadata !DIExpression()), !dbg !9816
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !9819
  ret i32 0, !dbg !9820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9821 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9823, metadata !DIExpression()), !dbg !9827
  call void @llvm.dbg.value(metadata i32 %1, metadata !9824, metadata !DIExpression()), !dbg !9827
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9828
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9828
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9828
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9825, metadata !DIExpression()), !dbg !9827
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9829
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9829
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9829
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9826, metadata !DIExpression()), !dbg !9827
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9830
  %10 = load volatile i32, i32* %9, align 4, !dbg !9830
  %11 = xor i32 %10, %1, !dbg !9830
  store volatile i32 %11, i32* %9, align 4, !dbg !9830
  ret i32 0, !dbg !9831
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9834, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i8 %1, metadata !9835, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i32 %2, metadata !9836, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i32 %3, metadata !9837, metadata !DIExpression()), !dbg !9844
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9845
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9845
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9845
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9838, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i8* undef, metadata !9839, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i32 0, metadata !9841, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i32 0, metadata !9842, metadata !DIExpression()), !dbg !9844
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9846

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9847
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !9851
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9852
  %12 = load i32, i32* %11, align 4, !dbg !9852
  %13 = icmp eq i32 %10, %12, !dbg !9853
  br i1 %13, label %14, label %29, !dbg !9854

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9855
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9857
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9858
  br label %29, !dbg !9859

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9860
  %17 = load i8*, i8** %16, align 4, !dbg !9860
  call void @llvm.dbg.value(metadata i8* %17, metadata !9839, metadata !DIExpression()), !dbg !9844
  %18 = zext i8 %1 to i32, !dbg !9861
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9863
  %20 = icmp eq i32 %19, 0, !dbg !9864
  br i1 %20, label %21, label %29, !dbg !9865

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9866
  %23 = load i32, i32* %22, align 4, !dbg !9866
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !9867
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9868

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9841, metadata !DIExpression()), !dbg !9844
  br label %27, !dbg !9869

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9841, metadata !DIExpression()), !dbg !9844
  br label %27, !dbg !9871

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9841, metadata !DIExpression()), !dbg !9844
  br label %27, !dbg !9872

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9844
  call void @llvm.dbg.value(metadata i32 %28, metadata !9841, metadata !DIExpression()), !dbg !9844
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9873
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9874
  br label %29, !dbg !9874

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9844
  call void @llvm.dbg.value(metadata i32 %30, metadata !9842, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.label(metadata !9843), !dbg !9875
  ret i32 %30, !dbg !9876
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !9877 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9879, metadata !DIExpression()), !dbg !9883
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9880, metadata !DIExpression()), !dbg !9883
  call void @llvm.dbg.value(metadata i1 %2, metadata !9881, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9883
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9884
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9884
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9884
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9882, metadata !DIExpression()), !dbg !9883
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9885
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !9886
  ret i32 %8, !dbg !9887
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !9888 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9894, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9895, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i1 %2, metadata !9896, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9897
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !9898
  br i1 %4, label %10, label %5, !dbg !9900

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9901
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !9904
  %8 = or i1 %7, %2, !dbg !9905
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9905
  br i1 %2, label %11, label %13, !dbg !9905

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9906

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9907
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !9910
  br label %13, !dbg !9911

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9897
  ret i32 %14, !dbg !9912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9913 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9917, metadata !DIExpression()), !dbg !9918
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9919
  %3 = icmp eq %struct._snode* %2, null, !dbg !9919
  ret i1 %3, !dbg !9919
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9920 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9924, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9925, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9926, metadata !DIExpression()), !dbg !9928
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9929
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9927, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9926, metadata !DIExpression()), !dbg !9928
  %4 = icmp eq %struct._snode* %3, null, !dbg !9931
  br i1 %4, label %15, label %5, !dbg !9929

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9927, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9926, metadata !DIExpression()), !dbg !9928
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9933
  br i1 %6, label %9, label %11, !dbg !9936

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9927, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9926, metadata !DIExpression()), !dbg !9928
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9933
  br i1 %8, label %9, label %11, !dbg !9936, !llvm.loop !9937

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !9938
  br label %15, !dbg !9938

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9927, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9926, metadata !DIExpression()), !dbg !9928
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !9931
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9927, metadata !DIExpression()), !dbg !9928
  %14 = icmp eq %struct._snode* %13, null, !dbg !9931
  br i1 %14, label %15, label %7, !dbg !9929, !llvm.loop !9937

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9941 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9945, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9946, metadata !DIExpression()), !dbg !9947
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9948
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !9948
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !9948
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9949
  %5 = icmp eq %struct._snode* %4, null, !dbg !9949
  br i1 %5, label %6, label %8, !dbg !9948

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9951
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !9951
  br label %8, !dbg !9951

8:                                                ; preds = %6, %2
  ret void, !dbg !9948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9953 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9957, metadata !DIExpression()), !dbg !9958
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9959
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9959
  ret %struct._snode* %3, !dbg !9960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9961 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9965, metadata !DIExpression()), !dbg !9967
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9966, metadata !DIExpression()), !dbg !9967
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9968
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9969
  ret void, !dbg !9970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9971 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9973, metadata !DIExpression()), !dbg !9975
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9974, metadata !DIExpression()), !dbg !9975
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9976
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9977
  ret void, !dbg !9978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9979 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9981, metadata !DIExpression()), !dbg !9982
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9983
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9983
  ret %struct._snode* %3, !dbg !9984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9985 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9987, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9988, metadata !DIExpression()), !dbg !9989
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9990
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9991
  ret void, !dbg !9992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !9993 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9997, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9998, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9999, metadata !DIExpression()), !dbg !10000
  %4 = icmp eq %struct._snode* %1, null, !dbg !10001
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !10003
  br i1 %4, label %6, label %11, !dbg !10004

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !10005
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10007
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10007
  br i1 %8, label %9, label %15, !dbg !10005

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10009
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !10009
  br label %15, !dbg !10009

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !10011
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10013
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10013
  br i1 %13, label %14, label %15, !dbg !10011

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !10015
  br label %15, !dbg !10015

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !10004
  ret void, !dbg !10004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !10017 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10021, metadata !DIExpression()), !dbg !10022
  %2 = icmp eq %struct._snode* %0, null, !dbg !10023
  br i1 %2, label %5, label %3, !dbg !10023

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !10023
  br label %5, !dbg !10023

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10023
  ret %struct._snode* %6, !dbg !10023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10024 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10026, metadata !DIExpression()), !dbg !10027
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !10028
  ret %struct._snode* %2, !dbg !10028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10029 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10031, metadata !DIExpression()), !dbg !10032
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10033
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10033
  ret %struct._snode* %3, !dbg !10034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10037, metadata !DIExpression()), !dbg !10040
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10041, !range !10042
  call void @llvm.dbg.value(metadata i32 %2, metadata !10038, metadata !DIExpression()), !dbg !10040
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10043
  call void @llvm.dbg.value(metadata i32 %3, metadata !10039, metadata !DIExpression()), !dbg !10040
  ret i32 %3, !dbg !10044
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10047, metadata !DIExpression()), !dbg !10050
  call void @llvm.dbg.value(metadata i8* %1, metadata !10048, metadata !DIExpression()), !dbg !10050
  call void @llvm.dbg.value(metadata i8* %1, metadata !10049, metadata !DIExpression()), !dbg !10050
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10051
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10051
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10052
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10052
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10052
  %8 = shl nuw i32 1, %0, !dbg !10053
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10054
  ret void, !dbg !10055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10056 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10060, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.value(metadata i32 %1, metadata !10061, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10062, metadata !DIExpression()), !dbg !10066
  %4 = bitcast i64* %3 to i8*, !dbg !10067
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10067
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10064, metadata !DIExpression()), !dbg !10066
  store i64 70368744177732, i64* %3, align 8, !dbg !10068
  call void @llvm.dbg.value(metadata i64* %3, metadata !10064, metadata !DIExpression(DW_OP_deref)), !dbg !10066
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10069
  call void @llvm.dbg.value(metadata i32 %5, metadata !10065, metadata !DIExpression()), !dbg !10066
  %6 = icmp eq i32 %5, 0, !dbg !10070
  br i1 %6, label %7, label %8, !dbg !10072

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10073
  br label %8, !dbg !10074

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10075
  ret void, !dbg !10075
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10076 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10078, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata i8* %0, metadata !10079, metadata !DIExpression()), !dbg !10081
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10082
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10080, metadata !DIExpression()), !dbg !10081
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10083
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10083
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !10084
  ret i32 %5, !dbg !10085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10088, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.value(metadata i32 %1, metadata !10089, metadata !DIExpression()), !dbg !10091
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10092
  call void @llvm.dbg.value(metadata i32 %3, metadata !10090, metadata !DIExpression()), !dbg !10091
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10093
  ret void, !dbg !10094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !10095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10099, metadata !DIExpression()), !dbg !10100
  %2 = sdiv i32 %0, 4, !dbg !10101
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10102
  %6 = add nsw i32 %5, 16, !dbg !10103
  %7 = shl i32 15, %6, !dbg !10104
  %8 = or i32 %7, %2, !dbg !10105
  ret i32 %8, !dbg !10106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10111, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.value(metadata i32 %1, metadata !10112, metadata !DIExpression()), !dbg !10113
  %3 = and i32 %1, 255, !dbg !10114
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10114
  %5 = load volatile i32, i32* %4, align 4, !dbg !10114
  %6 = lshr i32 %1, 16, !dbg !10114
  %7 = xor i32 %6, -1, !dbg !10114
  %8 = and i32 %5, %7, !dbg !10114
  call void @llvm.dbg.value(metadata i32 %6, metadata !10115, metadata !DIExpression()) #24, !dbg !10119
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10121, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %9, metadata !10118, metadata !DIExpression()) #24, !dbg !10119
  call void @llvm.dbg.value(metadata i32 %9, metadata !10123, metadata !DIExpression()) #24, !dbg !10128
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !10130, !range !3873
  %11 = shl i32 %0, %10, !dbg !10114
  %12 = or i32 %11, %8, !dbg !10114
  store volatile i32 %12, i32* %4, align 4, !dbg !10114
  ret void, !dbg !10131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10132 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10136, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10137, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata i32 %2, metadata !10138, metadata !DIExpression()), !dbg !10141
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10142
  %5 = icmp eq %struct._snode* %4, null, !dbg !10142
  br i1 %5, label %21, label %6, !dbg !10142

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10144
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10140, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10139, metadata !DIExpression()), !dbg !10141
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10145
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10145
  %11 = load i32, i32* %10, align 4, !dbg !10145
  %12 = and i32 %11, %2, !dbg !10149
  %13 = icmp eq i32 %12, 0, !dbg !10149
  br i1 %13, label %19, label %14, !dbg !10150

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10139, metadata !DIExpression()), !dbg !10141
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10151
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10151
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10151
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10153
  br label %19, !dbg !10154

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10139, metadata !DIExpression()), !dbg !10141
  %20 = icmp eq %struct._snode* %8, null, !dbg !10155
  br i1 %20, label %21, label %6, !dbg !10155

21:                                               ; preds = %19, %3
  ret void, !dbg !10156
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10159, metadata !DIExpression()), !dbg !10160
  %2 = and i32 %0, 255, !dbg !10161
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10161
  %4 = load volatile i32, i32* %3, align 4, !dbg !10161
  %5 = lshr i32 %0, 16, !dbg !10161
  %6 = and i32 %4, %5, !dbg !10161
  call void @llvm.dbg.value(metadata i32 %5, metadata !10115, metadata !DIExpression()) #24, !dbg !10162
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !10164, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %7, metadata !10118, metadata !DIExpression()) #24, !dbg !10162
  call void @llvm.dbg.value(metadata i32 %7, metadata !10123, metadata !DIExpression()) #24, !dbg !10165
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10167, !range !3873
  %9 = lshr i32 %6, %8, !dbg !10168
  ret i32 %9, !dbg !10169
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10170 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10175, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.value(metadata i32 %1, metadata !10176, metadata !DIExpression()), !dbg !10177
  %3 = shl i32 %1, 16, !dbg !10178
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10178
  store volatile i32 %3, i32* %4, align 4, !dbg !10178
  ret void, !dbg !10179
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10180 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10184, metadata !DIExpression()), !dbg !10185
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10186
  %3 = load volatile i32, i32* %2, align 4, !dbg !10186
  ret i32 %3, !dbg !10187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10188 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10190, metadata !DIExpression()), !dbg !10192
  call void @llvm.dbg.value(metadata i32 %1, metadata !10191, metadata !DIExpression()), !dbg !10192
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10193
  store volatile i32 %1, i32* %3, align 4, !dbg !10193
  ret void, !dbg !10194
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10195 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10197, metadata !DIExpression()), !dbg !10198
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10199
  %3 = load volatile i32, i32* %2, align 4, !dbg !10199
  ret i32 %3, !dbg !10200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !10201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10205, metadata !DIExpression()), !dbg !10207
  call void @llvm.dbg.value(metadata i32* %1, metadata !10206, metadata !DIExpression()), !dbg !10207
  %3 = and i32 %0, 131072, !dbg !10208
  %4 = icmp eq i32 %3, 0, !dbg !10210
  br i1 %4, label %22, label %5, !dbg !10211

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10212
  %6 = and i32 %0, 2, !dbg !10214
  %7 = icmp eq i32 %6, 0, !dbg !10216
  br i1 %7, label %11, label %8, !dbg !10217

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10218
  %10 = icmp eq i32 %9, 0, !dbg !10218
  br i1 %10, label %33, label %11, !dbg !10221

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10222
  store i32 %12, i32* %1, align 4, !dbg !10222
  %13 = and i32 %0, 16, !dbg !10223
  %14 = icmp eq i32 %13, 0, !dbg !10225
  br i1 %14, label %17, label %15, !dbg !10226

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10227
  br label %31, !dbg !10229

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10230
  %19 = icmp eq i32 %18, 0, !dbg !10232
  br i1 %19, label %33, label %20, !dbg !10233

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10234
  br label %31, !dbg !10236

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10237
  %24 = icmp eq i32 %23, 0, !dbg !10239
  br i1 %24, label %31, label %25, !dbg !10240

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10241
  %27 = icmp eq i32 %26, 0, !dbg !10244
  br i1 %27, label %28, label %31, !dbg !10245

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10246
  br label %33, !dbg !10247

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10207
  ret i32 %34, !dbg !10247
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10248 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10252, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %1, metadata !10253, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %2, metadata !10254, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %3, metadata !10255, metadata !DIExpression()), !dbg !10263
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10264
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10264
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10264
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10256, metadata !DIExpression()), !dbg !10263
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10265
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10265
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10265
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10257, metadata !DIExpression()), !dbg !10263
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10266
  call void @llvm.dbg.value(metadata i32 %11, metadata !10258, metadata !DIExpression()), !dbg !10263
  %12 = and i32 %2, 48, !dbg !10267
  call void @llvm.dbg.value(metadata i32 %12, metadata !10259, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %2, metadata !10260, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %2, metadata !10261, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %2, metadata !10262, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10263
  %13 = lshr i32 %2, 6, !dbg !10268
  %14 = and i32 %13, 1, !dbg !10268
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10269
  %15 = lshr i32 %2, 7, !dbg !10270
  %16 = and i32 %15, 3, !dbg !10270
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10271
  %17 = lshr i32 %2, 9, !dbg !10272
  %18 = and i32 %17, 3, !dbg !10272
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10273
  %19 = icmp eq i32 %12, 32, !dbg !10274
  br i1 %19, label %20, label %24, !dbg !10276

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10277
  br i1 %21, label %22, label %23, !dbg !10280

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10281
  br label %24, !dbg !10283

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10284
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10286
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10287
  ret void, !dbg !10288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !10289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10291, metadata !DIExpression()), !dbg !10293
  %2 = shl nuw i32 1, %0, !dbg !10294
  call void @llvm.dbg.value(metadata i32 %2, metadata !10292, metadata !DIExpression()), !dbg !10293
  ret i32 %2, !dbg !10295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10296 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10300, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata i32 %1, metadata !10301, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata i32 %2, metadata !10302, metadata !DIExpression()), !dbg !10303
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10304
  %5 = load volatile i32, i32* %4, align 4, !dbg !10304
  %6 = xor i32 %1, -1, !dbg !10304
  %7 = and i32 %5, %6, !dbg !10304
  %8 = mul i32 %2, %1, !dbg !10304
  %9 = or i32 %7, %8, !dbg !10304
  store volatile i32 %9, i32* %4, align 4, !dbg !10304
  ret void, !dbg !10305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10306 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10308, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 %1, metadata !10309, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 %2, metadata !10310, metadata !DIExpression()), !dbg !10311
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10312
  %5 = load volatile i32, i32* %4, align 4, !dbg !10312
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10313
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10315, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10316
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10318, !range !3873
  %8 = shl nuw nsw i32 %7, 1, !dbg !10312
  %9 = shl i32 3, %8, !dbg !10312
  %10 = xor i32 %9, -1, !dbg !10312
  %11 = and i32 %5, %10, !dbg !10312
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10321
  %12 = shl i32 %2, %8, !dbg !10312
  %13 = or i32 %11, %12, !dbg !10312
  store volatile i32 %13, i32* %4, align 4, !dbg !10312
  ret void, !dbg !10323
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10324 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10326, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.value(metadata i32 %1, metadata !10327, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.value(metadata i32 %2, metadata !10328, metadata !DIExpression()), !dbg !10329
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10330
  %5 = load volatile i32, i32* %4, align 4, !dbg !10330
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10331
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10333, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10334
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10336, !range !3873
  %8 = shl nuw nsw i32 %7, 1, !dbg !10330
  %9 = shl i32 3, %8, !dbg !10330
  %10 = xor i32 %9, -1, !dbg !10330
  %11 = and i32 %5, %10, !dbg !10330
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10339
  %12 = shl i32 %2, %8, !dbg !10330
  %13 = or i32 %11, %12, !dbg !10330
  store volatile i32 %13, i32* %4, align 4, !dbg !10330
  ret void, !dbg !10341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10342 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10344, metadata !DIExpression()), !dbg !10347
  call void @llvm.dbg.value(metadata i32 %1, metadata !10345, metadata !DIExpression()), !dbg !10347
  call void @llvm.dbg.value(metadata i32 %2, metadata !10346, metadata !DIExpression()), !dbg !10347
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10348
  %5 = load volatile i32, i32* %4, align 4, !dbg !10348
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10349
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10351, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10352
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10354, !range !3873
  %8 = shl nuw nsw i32 %7, 2, !dbg !10348
  %9 = shl i32 15, %8, !dbg !10348
  %10 = xor i32 %9, -1, !dbg !10348
  %11 = and i32 %5, %10, !dbg !10348
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10357
  %12 = shl i32 %2, %8, !dbg !10348
  %13 = or i32 %11, %12, !dbg !10348
  store volatile i32 %13, i32* %4, align 4, !dbg !10348
  ret void, !dbg !10359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10360 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10362, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 %1, metadata !10363, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 %2, metadata !10364, metadata !DIExpression()), !dbg !10365
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10366
  %5 = load volatile i32, i32* %4, align 4, !dbg !10366
  %6 = lshr i32 %1, 8, !dbg !10366
  call void @llvm.dbg.value(metadata i32 %6, metadata !10115, metadata !DIExpression()) #24, !dbg !10367
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10369, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %7, metadata !10118, metadata !DIExpression()) #24, !dbg !10367
  call void @llvm.dbg.value(metadata i32 %7, metadata !10123, metadata !DIExpression()) #24, !dbg !10370
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10372, !range !3873
  %9 = shl nuw nsw i32 %8, 2, !dbg !10366
  %10 = shl i32 15, %9, !dbg !10366
  %11 = xor i32 %10, -1, !dbg !10366
  %12 = and i32 %5, %11, !dbg !10366
  call void @llvm.dbg.value(metadata i32 %6, metadata !10115, metadata !DIExpression()) #24, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %7, metadata !10118, metadata !DIExpression()) #24, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %7, metadata !10123, metadata !DIExpression()) #24, !dbg !10375
  %13 = shl i32 %2, %9, !dbg !10366
  %14 = or i32 %12, %13, !dbg !10366
  store volatile i32 %14, i32* %4, align 4, !dbg !10366
  ret void, !dbg !10377
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10378 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10380, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i32 %1, metadata !10381, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i32 %2, metadata !10382, metadata !DIExpression()), !dbg !10383
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10384
  %5 = load volatile i32, i32* %4, align 4, !dbg !10384
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10385
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10387, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10385
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10388
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10390, !range !3873
  %8 = shl nuw nsw i32 %7, 1, !dbg !10384
  %9 = shl i32 3, %8, !dbg !10384
  %10 = xor i32 %9, -1, !dbg !10384
  %11 = and i32 %5, %10, !dbg !10384
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10391
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10391
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10393
  %12 = shl i32 %2, %8, !dbg !10384
  %13 = or i32 %11, %12, !dbg !10384
  store volatile i32 %13, i32* %4, align 4, !dbg !10384
  ret void, !dbg !10395
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10396 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10398, metadata !DIExpression()), !dbg !10401
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10402
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10402
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10402
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10399, metadata !DIExpression()), !dbg !10401
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10403
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10404
  %6 = tail call fastcc zeroext i1 @device_is_ready.69() #26, !dbg !10405
  br i1 %6, label %7, label %11, !dbg !10407

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10408
  call void @llvm.dbg.value(metadata i32 %8, metadata !10400, metadata !DIExpression()), !dbg !10401
  %9 = icmp slt i32 %8, 0, !dbg !10409
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10411
  br label %11, !dbg !10411

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10401
  ret i32 %12, !dbg !10412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.69() unnamed_addr #1 !dbg !10413 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10417, metadata !DIExpression()), !dbg !10418
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10419, !srcloc !10421
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.70() #26, !dbg !10422
  ret i1 %1, !dbg !10423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10428, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i8 1, metadata !10429, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10430, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32 0, metadata !10431, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10432, metadata !DIExpression()), !dbg !10433
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10434
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10434
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10434
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10430, metadata !DIExpression()), !dbg !10433
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10435
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10438
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10439
  call void @llvm.dbg.value(metadata i32 %7, metadata !10431, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32 %7, metadata !10431, metadata !DIExpression()), !dbg !10433
  ret i32 %7, !dbg !10440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.70() unnamed_addr #1 !dbg !10441 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10443, metadata !DIExpression()), !dbg !10444
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !10445
  ret i1 %1, !dbg !10446
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10447 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10451, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 %1, metadata !10452, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 %2, metadata !10453, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 %3, metadata !10454, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 0, metadata !10455, metadata !DIExpression()), !dbg !10459
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10460
  %5 = icmp eq i32 %3, 17, !dbg !10461
  br i1 %5, label %6, label %14, !dbg !10462

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10463
  call void @llvm.dbg.value(metadata i32 %7, metadata !10456, metadata !DIExpression()), !dbg !10464
  %8 = icmp eq i32 %7, 0, !dbg !10465
  %9 = shl nuw i32 1, %1, !dbg !10467
  br i1 %8, label %12, label %10, !dbg !10468

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10469
  br label %14, !dbg !10471

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10472
  br label %14, !dbg !10475

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10476
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !10477 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10479, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.value(metadata i8* %1, metadata !10480, metadata !DIExpression()), !dbg !10483
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10484
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10484
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10484
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10481, metadata !DIExpression()), !dbg !10483
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10485
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10485
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !10487
  %9 = icmp eq i32 %8, 0, !dbg !10487
  br i1 %9, label %12, label %10, !dbg !10488

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10489
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !10491
  br label %12, !dbg !10492

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10493
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10495
  %15 = icmp eq i32 %14, 0, !dbg !10495
  br i1 %15, label %19, label %16, !dbg !10496

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10497
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !10498
  store i8 %18, i8* %1, align 1, !dbg !10499
  br label %19, !dbg !10500

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10483
  ret i32 %20, !dbg !10501
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10504, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i8 %1, metadata !10505, metadata !DIExpression()), !dbg !10508
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10509
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10509
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10509
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10506, metadata !DIExpression()), !dbg !10508
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10510

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10511
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10514
  %10 = icmp eq i32 %9, 0, !dbg !10514
  br i1 %10, label %18, label %11, !dbg !10515

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10516, !srcloc !10523
  call void @llvm.dbg.value(metadata i32 undef, metadata !10519, metadata !DIExpression()) #24, !dbg !10524
  call void @llvm.dbg.value(metadata i32 undef, metadata !10520, metadata !DIExpression()) #24, !dbg !10524
  call void @llvm.dbg.value(metadata i32 undef, metadata !10507, metadata !DIExpression()), !dbg !10508
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10525
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10527
  %15 = icmp eq i32 %14, 0, !dbg !10527
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10516
  br i1 %15, label %17, label %19, !dbg !10528

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10519, metadata !DIExpression()) #24, !dbg !10524
  call void @llvm.dbg.value(metadata i32 %16, metadata !10507, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i32 undef, metadata !10529, metadata !DIExpression()) #24, !dbg !10532
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !10534, !srcloc !10535
  br label %18, !dbg !10536

18:                                               ; preds = %17, %7
  br label %7, !dbg !10511, !llvm.loop !10537

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10516
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10539
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !10540
  call void @llvm.dbg.value(metadata i32 %20, metadata !10529, metadata !DIExpression()) #24, !dbg !10541
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !10543, !srcloc !10535
  ret void, !dbg !10544
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !10545 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10547, metadata !DIExpression()), !dbg !10550
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10551
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10551
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10551
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10548, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.value(metadata i32 0, metadata !10549, metadata !DIExpression()), !dbg !10550
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10552
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10552
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10554
  %8 = icmp ne i32 %7, 0, !dbg !10554
  %9 = zext i1 %8 to i32, !dbg !10555
  call void @llvm.dbg.value(metadata i32 %9, metadata !10549, metadata !DIExpression()), !dbg !10550
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10556
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10558
  %12 = icmp eq i32 %11, 0, !dbg !10558
  %13 = or i32 %9, 2, !dbg !10559
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10559
  call void @llvm.dbg.value(metadata i32 %14, metadata !10549, metadata !DIExpression()), !dbg !10550
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10560
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !10562
  %17 = icmp eq i32 %16, 0, !dbg !10562
  %18 = or i32 %14, 4, !dbg !10563
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10563
  call void @llvm.dbg.value(metadata i32 %19, metadata !10549, metadata !DIExpression()), !dbg !10550
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10564
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !10566
  %22 = icmp eq i32 %21, 0, !dbg !10566
  %23 = or i32 %19, 8, !dbg !10567
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10567
  call void @llvm.dbg.value(metadata i32 %24, metadata !10549, metadata !DIExpression()), !dbg !10550
  %25 = and i32 %24, 8, !dbg !10568
  %26 = icmp eq i32 %25, 0, !dbg !10568
  br i1 %26, label %29, label %27, !dbg !10570

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10571
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !10573
  br label %29, !dbg !10574

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10575
  %31 = icmp eq i32 %30, 0, !dbg !10575
  br i1 %31, label %34, label %32, !dbg !10577

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10578
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !10580
  br label %34, !dbg !10581

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10582
  %36 = icmp eq i32 %35, 0, !dbg !10582
  br i1 %36, label %39, label %37, !dbg !10584

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10585
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !10587
  br label %39, !dbg !10588

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10589
  %41 = icmp eq i32 %40, 0, !dbg !10589
  br i1 %41, label %44, label %42, !dbg !10591

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10592
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !10594
  br label %44, !dbg !10595

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10596
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !10597
  ret i32 %24, !dbg !10598
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10599 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10601, metadata !DIExpression()), !dbg !10610
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10602, metadata !DIExpression()), !dbg !10610
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10611
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10611
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10611
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10603, metadata !DIExpression()), !dbg !10610
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10612
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10612
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10612
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10604, metadata !DIExpression()), !dbg !10610
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10613
  %10 = load i8, i8* %9, align 4, !dbg !10613
  %11 = zext i8 %10 to i32, !dbg !10614
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !10615
  call void @llvm.dbg.value(metadata i32 %12, metadata !10606, metadata !DIExpression()), !dbg !10610
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10616
  %14 = load i8, i8* %13, align 1, !dbg !10616
  %15 = zext i8 %14 to i32, !dbg !10617
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !10618
  call void @llvm.dbg.value(metadata i32 %16, metadata !10607, metadata !DIExpression()), !dbg !10610
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10619
  %18 = load i8, i8* %17, align 2, !dbg !10619
  %19 = zext i8 %18 to i32, !dbg !10620
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !10621
  call void @llvm.dbg.value(metadata i32 %20, metadata !10608, metadata !DIExpression()), !dbg !10610
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10622
  %22 = load i8, i8* %21, align 1, !dbg !10622
  %23 = zext i8 %22 to i32, !dbg !10623
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !10624
  call void @llvm.dbg.value(metadata i32 %24, metadata !10609, metadata !DIExpression()), !dbg !10610
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10625

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10627
  br i1 %26, label %69, label %27, !dbg !10629

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10630

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10631
  br i1 %29, label %65, label %30, !dbg !10631

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10633
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10610
  br i1 %31, label %38, label %34, !dbg !10635

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10636
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !10636

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10639
  br i1 %37, label %38, label %69, !dbg !10640

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10641
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !10642
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !10643
  %41 = icmp eq i32 %12, %40, !dbg !10645
  br i1 %41, label %43, label %42, !dbg !10646

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !10647
  br label %43, !dbg !10649

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !10650
  %45 = icmp eq i32 %16, %44, !dbg !10652
  br i1 %45, label %47, label %46, !dbg !10653

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !10654
  br label %47, !dbg !10656

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !10657
  %49 = icmp eq i32 %20, %48, !dbg !10659
  br i1 %49, label %51, label %50, !dbg !10660

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !10661
  br label %51, !dbg !10663

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !10664
  %53 = icmp eq i32 %24, %52, !dbg !10666
  br i1 %53, label %55, label %54, !dbg !10667

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !10668
  br label %55, !dbg !10670

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10671
  %57 = load i32, i32* %56, align 4, !dbg !10671
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10673
  %59 = load i32, i32* %58, align 4, !dbg !10673
  %60 = icmp eq i32 %57, %59, !dbg !10674
  br i1 %60, label %63, label %61, !dbg !10675

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !10676
  %62 = load i32, i32* %56, align 4, !dbg !10678
  store i32 %62, i32* %58, align 4, !dbg !10679
  br label %63, !dbg !10680

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10681
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !10682
  br label %69, !dbg !10683

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10631
  %67 = and i8 %66, 1, !dbg !10631
  %68 = icmp eq i8 %67, 0, !dbg !10631
  br i1 %68, label %30, label %69, !dbg !10631

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10610
  ret i32 %70, !dbg !10684
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !10685 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10687, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10688, metadata !DIExpression()), !dbg !10690
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10691
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10691
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10691
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10689, metadata !DIExpression()), !dbg !10690
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10692
  %7 = load i32, i32* %6, align 4, !dbg !10692
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10693
  store i32 %7, i32* %8, align 4, !dbg !10694
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10695, !range !10696
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !10697
  %11 = trunc i32 %10 to i8, !dbg !10697
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10698
  store i8 %11, i8* %12, align 4, !dbg !10699
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !10700, !range !10701
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !10702
  %15 = trunc i32 %14 to i8, !dbg !10702
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10703
  store i8 %15, i8* %16, align 1, !dbg !10704
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !10705
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10706, !range !10696
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !10707
  %20 = trunc i32 %19 to i8, !dbg !10707
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10708
  store i8 %20, i8* %21, align 2, !dbg !10709
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !10710, !range !10711
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !10712
  %24 = trunc i32 %23 to i8, !dbg !10712
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10713
  store i8 %24, i8* %25, align 1, !dbg !10714
  ret i32 0, !dbg !10715
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !10716 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10718, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i8* %1, metadata !10719, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i32 %2, metadata !10720, metadata !DIExpression()), !dbg !10724
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10725
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10725
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10725
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10721, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i8 0, metadata !10722, metadata !DIExpression()), !dbg !10724
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10726
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10726
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10728
  %10 = icmp eq i32 %9, 0, !dbg !10728
  br i1 %10, label %30, label %11, !dbg !10729

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10730, !srcloc !10523
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !10730
  call void @llvm.dbg.value(metadata i32 %13, metadata !10519, metadata !DIExpression()) #24, !dbg !10732
  call void @llvm.dbg.value(metadata i32 undef, metadata !10520, metadata !DIExpression()) #24, !dbg !10732
  call void @llvm.dbg.value(metadata i32 %13, metadata !10723, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i8 0, metadata !10722, metadata !DIExpression()), !dbg !10724
  %14 = icmp sgt i32 %2, 0, !dbg !10733
  br i1 %14, label %15, label %28, !dbg !10734

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !10722, metadata !DIExpression()), !dbg !10724
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10735
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !10736
  %20 = icmp eq i32 %19, 0, !dbg !10734
  br i1 %20, label %28, label %21, !dbg !10737

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10738
  %23 = add i8 %17, 1, !dbg !10740
  call void @llvm.dbg.value(metadata i8 %23, metadata !10722, metadata !DIExpression()), !dbg !10724
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !10741
  %25 = load i8, i8* %24, align 1, !dbg !10741
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !10742
  %26 = zext i8 %23 to i32, !dbg !10743
  %27 = icmp slt i32 %26, %2, !dbg !10733
  br i1 %27, label %15, label %28, !dbg !10734, !llvm.loop !10744

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !10743
  call void @llvm.dbg.value(metadata i32 %13, metadata !10529, metadata !DIExpression()) #24, !dbg !10746
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !10748, !srcloc !10535
  br label %30, !dbg !10749

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !10724
  ret i32 %31, !dbg !10750
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !10751 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10753, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i8* %1, metadata !10754, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i32 %2, metadata !10755, metadata !DIExpression()), !dbg !10758
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10759
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10759
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10759
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10756, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i8 0, metadata !10757, metadata !DIExpression()), !dbg !10758
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10760
  call void @llvm.dbg.value(metadata i8 0, metadata !10757, metadata !DIExpression()), !dbg !10758
  %8 = icmp sgt i32 %2, 0, !dbg !10761
  br i1 %8, label %9, label %28, !dbg !10762

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !10757, metadata !DIExpression()), !dbg !10758
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10760
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10763
  %14 = icmp eq i32 %13, 0, !dbg !10762
  br i1 %14, label %28, label %15, !dbg !10764

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10765
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !10767
  %18 = add i8 %11, 1, !dbg !10768
  call void @llvm.dbg.value(metadata i8 %18, metadata !10757, metadata !DIExpression()), !dbg !10758
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !10769
  store i8 %17, i8* %19, align 1, !dbg !10770
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10771
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !10773
  %22 = icmp eq i32 %21, 0, !dbg !10773
  br i1 %22, label %25, label %23, !dbg !10774

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10775
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !10777
  br label %25, !dbg !10778

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !10757, metadata !DIExpression()), !dbg !10758
  %26 = zext i8 %18 to i32, !dbg !10779
  %27 = icmp slt i32 %26, %2, !dbg !10761
  br i1 %27, label %9, label %28, !dbg !10762, !llvm.loop !10780

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !10779
  ret i32 %29, !dbg !10782
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10783 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10785, metadata !DIExpression()), !dbg !10787
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10788
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10788
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10788
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10786, metadata !DIExpression()), !dbg !10787
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10789
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10789
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10790
  ret void, !dbg !10791
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10794, metadata !DIExpression()), !dbg !10796
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10797
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10797
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10797
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10795, metadata !DIExpression()), !dbg !10796
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10798
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10798
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10799
  ret void, !dbg !10800
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10801 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10803, metadata !DIExpression()), !dbg !10805
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10806
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10806
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10806
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10804, metadata !DIExpression()), !dbg !10805
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10807
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10807
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10808
  %8 = icmp eq i32 %7, 0, !dbg !10808
  br i1 %8, label %14, label %9, !dbg !10809

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10810
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !10811
  %12 = icmp ne i32 %11, 0, !dbg !10809
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !10812
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10813 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10815, metadata !DIExpression()), !dbg !10817
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10818
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10818
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10818
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10816, metadata !DIExpression()), !dbg !10817
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10819
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10819
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10820
  ret void, !dbg !10821
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10822 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10824, metadata !DIExpression()), !dbg !10826
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10827
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10827
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10827
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10825, metadata !DIExpression()), !dbg !10826
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10828
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10828
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10829
  ret void, !dbg !10830
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !10831 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10833, metadata !DIExpression()), !dbg !10835
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10836
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10836
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10836
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10834, metadata !DIExpression()), !dbg !10835
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10837
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10837
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10838
  ret i32 %7, !dbg !10839
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10840 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10842, metadata !DIExpression()), !dbg !10844
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10845
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10845
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10845
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10843, metadata !DIExpression()), !dbg !10844
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10846
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10846
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10847
  ret i32 %7, !dbg !10848
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10849 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10851, metadata !DIExpression()), !dbg !10853
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10854
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10854
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10854
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10852, metadata !DIExpression()), !dbg !10853
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10855
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10855
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10856
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10857
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10857
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !10857

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10859
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10861
  br label %11, !dbg !10862

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10861
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10863
  ret void, !dbg !10864
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10867, metadata !DIExpression()), !dbg !10869
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10870
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10870
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10870
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10868, metadata !DIExpression()), !dbg !10869
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10871
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10871
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10872
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10873
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10873
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !10873

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10875
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10877
  br label %11, !dbg !10878

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10877
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10879
  ret void, !dbg !10880
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !10881 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10883, metadata !DIExpression()), !dbg !10885
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10886
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10886
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10886
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10884, metadata !DIExpression()), !dbg !10885
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10887
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10887
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10888
  %8 = icmp eq i32 %7, 0, !dbg !10888
  br i1 %8, label %13, label %9, !dbg !10889

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10890
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10891
  %12 = icmp eq i32 %11, 0, !dbg !10891
  br i1 %12, label %13, label %22, !dbg !10892

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10893
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !10894
  %16 = icmp eq i32 %15, 0, !dbg !10894
  br i1 %16, label %22, label %17, !dbg !10895

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10896
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !10897
  %20 = icmp ne i32 %19, 0, !dbg !10895
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !10898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !10899 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10901, metadata !DIExpression()), !dbg !10902
  ret i32 1, !dbg !10903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10904 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10906, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10907, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata i8* %2, metadata !10908, metadata !DIExpression()), !dbg !10910
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10911
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10911
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10911
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10909, metadata !DIExpression()), !dbg !10910
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10912
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10913
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10914
  store i8* %2, i8** %8, align 4, !dbg !10915
  ret void, !dbg !10916
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10917 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10922, metadata !DIExpression()), !dbg !10923
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10924
  %3 = load volatile i32, i32* %2, align 4, !dbg !10924
  %4 = lshr i32 %3, 5, !dbg !10925
  %5 = and i32 %4, 1, !dbg !10925
  ret i32 %5, !dbg !10926
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10927 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10929, metadata !DIExpression()), !dbg !10930
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10931
  %3 = load volatile i32, i32* %2, align 4, !dbg !10931
  %4 = lshr i32 %3, 5, !dbg !10932
  %5 = and i32 %4, 1, !dbg !10932
  ret i32 %5, !dbg !10933
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10934 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10936, metadata !DIExpression()), !dbg !10937
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10938
  %3 = load volatile i32, i32* %2, align 4, !dbg !10938
  %4 = lshr i32 %3, 6, !dbg !10939
  %5 = and i32 %4, 1, !dbg !10939
  ret i32 %5, !dbg !10940
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10941 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10943, metadata !DIExpression()), !dbg !10944
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10945
  %3 = load volatile i32, i32* %2, align 4, !dbg !10945
  %4 = lshr i32 %3, 6, !dbg !10946
  %5 = and i32 %4, 1, !dbg !10946
  ret i32 %5, !dbg !10947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10948 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10952, metadata !DIExpression()), !dbg !10955
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10956

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !10963
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10966, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !10963
  %5 = and i32 %4, -2, !dbg !10968
  call void @llvm.dbg.value(metadata i32 %5, metadata !10953, metadata !DIExpression()), !dbg !10969
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !10977
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !10977
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10979, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !10977
  %7 = icmp eq i32 %6, 0, !dbg !10956
  br i1 %7, label %8, label %3, !dbg !10968, !llvm.loop !10981

8:                                                ; preds = %3
  ret void, !dbg !10982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10983 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10985, metadata !DIExpression()), !dbg !10986
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10987
  %3 = load volatile i32, i32* %2, align 4, !dbg !10987
  %4 = and i32 %3, -65, !dbg !10987
  store volatile i32 %4, i32* %2, align 4, !dbg !10987
  ret void, !dbg !10988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10989 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10991, metadata !DIExpression()), !dbg !10994
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10995

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !10996
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10999, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !10996
  %5 = and i32 %4, -257, !dbg !11000
  call void @llvm.dbg.value(metadata i32 %5, metadata !10992, metadata !DIExpression()), !dbg !11001
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11002
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11002
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11004, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11002
  %7 = icmp eq i32 %6, 0, !dbg !10995
  br i1 %7, label %8, label %3, !dbg !11000, !llvm.loop !11005

8:                                                ; preds = %3
  ret void, !dbg !11006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11007 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11009, metadata !DIExpression()), !dbg !11012
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !11013

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11014
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11017, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11014
  %5 = or i32 %4, 1, !dbg !11018
  call void @llvm.dbg.value(metadata i32 %5, metadata !11010, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11020
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11020
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11022, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11020
  %7 = icmp eq i32 %6, 0, !dbg !11013
  br i1 %7, label %8, label %3, !dbg !11018, !llvm.loop !11023

8:                                                ; preds = %3
  ret void, !dbg !11024
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11025 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11027, metadata !DIExpression()), !dbg !11028
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11029
  %3 = load volatile i32, i32* %2, align 4, !dbg !11029
  %4 = or i32 %3, 64, !dbg !11029
  store volatile i32 %4, i32* %2, align 4, !dbg !11029
  ret void, !dbg !11030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11031 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11033, metadata !DIExpression()), !dbg !11036
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11037

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11038
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11041, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11038
  %5 = or i32 %4, 256, !dbg !11042
  call void @llvm.dbg.value(metadata i32 %5, metadata !11034, metadata !DIExpression()), !dbg !11043
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11044
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11044
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11046, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11044
  %7 = icmp eq i32 %6, 0, !dbg !11037
  br i1 %7, label %8, label %3, !dbg !11042, !llvm.loop !11047

8:                                                ; preds = %3
  ret void, !dbg !11048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11049 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11051, metadata !DIExpression()), !dbg !11054
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11055

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11056
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11059, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11056
  %5 = and i32 %4, -33, !dbg !11060
  call void @llvm.dbg.value(metadata i32 %5, metadata !11052, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11062
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11062
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11064, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11062
  %7 = icmp eq i32 %6, 0, !dbg !11055
  br i1 %7, label %8, label %3, !dbg !11060, !llvm.loop !11065

8:                                                ; preds = %3
  ret void, !dbg !11066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11067 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11069, metadata !DIExpression()), !dbg !11072
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11073

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11074
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11077, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11074
  %5 = or i32 %4, 32, !dbg !11078
  call void @llvm.dbg.value(metadata i32 %5, metadata !11070, metadata !DIExpression()), !dbg !11079
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11080
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11080
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11082, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11080
  %7 = icmp eq i32 %6, 0, !dbg !11073
  br i1 %7, label %8, label %3, !dbg !11078, !llvm.loop !11083

8:                                                ; preds = %3
  ret void, !dbg !11084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11085 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11087, metadata !DIExpression()), !dbg !11088
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11089
  %3 = load volatile i32, i32* %2, align 4, !dbg !11089
  %4 = lshr i32 %3, 7, !dbg !11090
  %5 = and i32 %4, 1, !dbg !11090
  ret i32 %5, !dbg !11091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11092 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11094, metadata !DIExpression()), !dbg !11097
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11098

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11099
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11102, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11099
  %5 = and i32 %4, -65, !dbg !11103
  call void @llvm.dbg.value(metadata i32 %5, metadata !11095, metadata !DIExpression()), !dbg !11104
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11105
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11105
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11107, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11105
  %7 = icmp eq i32 %6, 0, !dbg !11098
  br i1 %7, label %8, label %3, !dbg !11103, !llvm.loop !11108

8:                                                ; preds = %3
  ret void, !dbg !11109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11110 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11112, metadata !DIExpression()), !dbg !11115
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11116

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11117
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11120, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11117
  %5 = or i32 %4, 64, !dbg !11121
  call void @llvm.dbg.value(metadata i32 %5, metadata !11113, metadata !DIExpression()), !dbg !11122
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11123
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11123
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11125, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11123
  %7 = icmp eq i32 %6, 0, !dbg !11116
  br i1 %7, label %8, label %3, !dbg !11121, !llvm.loop !11126

8:                                                ; preds = %3
  ret void, !dbg !11127
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11128 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11132, metadata !DIExpression()), !dbg !11133
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11134
  %3 = load volatile i32, i32* %2, align 4, !dbg !11134
  %4 = trunc i32 %3 to i8, !dbg !11135
  ret i8 %4, !dbg !11136
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11137 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11139, metadata !DIExpression()), !dbg !11140
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11141
  %3 = load volatile i32, i32* %2, align 4, !dbg !11141
  %4 = lshr i32 %3, 3, !dbg !11142
  %5 = and i32 %4, 1, !dbg !11142
  ret i32 %5, !dbg !11143
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11144 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11146, metadata !DIExpression()), !dbg !11148
  %3 = bitcast i32* %2 to i8*, !dbg !11149
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11149
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11147, metadata !DIExpression()), !dbg !11150
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11151
  %5 = load volatile i32, i32* %4, align 4, !dbg !11151
  store volatile i32 %5, i32* %2, align 4, !dbg !11152
  %6 = load volatile i32, i32* %2, align 4, !dbg !11153
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11154
  %8 = load volatile i32, i32* %7, align 4, !dbg !11154
  store volatile i32 %8, i32* %2, align 4, !dbg !11155
  %9 = load volatile i32, i32* %2, align 4, !dbg !11156
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11157
  ret void, !dbg !11157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11158 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11162, metadata !DIExpression()), !dbg !11164
  call void @llvm.dbg.value(metadata i8 %1, metadata !11163, metadata !DIExpression()), !dbg !11164
  %3 = zext i8 %1 to i32, !dbg !11165
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11166
  store volatile i32 %3, i32* %4, align 4, !dbg !11167
  ret void, !dbg !11168
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11169 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11173, metadata !DIExpression()), !dbg !11175
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11176
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11176
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11176
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11174, metadata !DIExpression()), !dbg !11175
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11177
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11177
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11178
  ret i32 %7, !dbg !11179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !11180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11184, metadata !DIExpression()), !dbg !11185
  %2 = icmp eq i32 %0, 1024, !dbg !11186
  %3 = select i1 %2, i32 2, i32 0, !dbg !11186
  %4 = icmp eq i32 %0, 1536, !dbg !11186
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11186
  ret i32 %5, !dbg !11187
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11188 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11190, metadata !DIExpression()), !dbg !11192
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11193
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11193
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11193
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11191, metadata !DIExpression()), !dbg !11192
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11194
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11194
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11195
  ret i32 %7, !dbg !11196
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !11197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11201, metadata !DIExpression()), !dbg !11202
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11203
  %3 = icmp ult i32 %2, 4, !dbg !11203
  br i1 %3, label %4, label %7, !dbg !11203

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11203
  %6 = load i32, i32* %5, align 4, !dbg !11203
  br label %7, !dbg !11203

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11204
  ret i32 %8, !dbg !11206
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11207 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11209, metadata !DIExpression()), !dbg !11211
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11212
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11212
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11212
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11210, metadata !DIExpression()), !dbg !11211
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11213
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11213
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11214
  ret i32 %7, !dbg !11215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11220, metadata !DIExpression()), !dbg !11222
  call void @llvm.dbg.value(metadata i32 %1, metadata !11221, metadata !DIExpression()), !dbg !11222
  %3 = icmp eq i32 %0, 4096, !dbg !11223
  %4 = icmp eq i32 %1, 0, !dbg !11223
  %5 = select i1 %4, i32 4, i32 3, !dbg !11223
  %6 = select i1 %4, i32 3, i32 2, !dbg !11223
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11223
  ret i32 %7, !dbg !11224
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11225 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11227, metadata !DIExpression()), !dbg !11229
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11230
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11230
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11230
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11228, metadata !DIExpression()), !dbg !11229
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11231
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11231
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11232
  ret i32 %7, !dbg !11233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11238, metadata !DIExpression()), !dbg !11239
  %2 = icmp eq i32 %0, 768, !dbg !11240
  %3 = zext i1 %2 to i32, !dbg !11239
  ret i32 %3, !dbg !11242
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11243 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11245, metadata !DIExpression()), !dbg !11246
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11247
  %3 = load volatile i32, i32* %2, align 4, !dbg !11247
  %4 = and i32 %3, 768, !dbg !11247
  ret i32 %4, !dbg !11248
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11249 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11251, metadata !DIExpression()), !dbg !11252
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11253
  %3 = load volatile i32, i32* %2, align 4, !dbg !11253
  %4 = and i32 %3, 4096, !dbg !11253
  ret i32 %4, !dbg !11254
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11255 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11257, metadata !DIExpression()), !dbg !11258
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11259
  %3 = load volatile i32, i32* %2, align 4, !dbg !11259
  %4 = and i32 %3, 12288, !dbg !11259
  ret i32 %4, !dbg !11260
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11261 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11263, metadata !DIExpression()), !dbg !11264
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11265
  %3 = load volatile i32, i32* %2, align 4, !dbg !11265
  %4 = and i32 %3, 1536, !dbg !11265
  ret i32 %4, !dbg !11266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !11267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11271, metadata !DIExpression()), !dbg !11272
  %2 = icmp eq i32 %0, 2, !dbg !11273
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11273
  %4 = icmp eq i32 %0, 1, !dbg !11273
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11273
  ret i32 %5, !dbg !11274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11279, metadata !DIExpression()), !dbg !11280
  %2 = icmp ult i32 %0, 3, !dbg !11281
  br i1 %2, label %3, label %6, !dbg !11281

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11281
  %5 = load i32, i32* %4, align 4, !dbg !11281
  br label %6, !dbg !11281

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11282
  ret i32 %7, !dbg !11284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11289, metadata !DIExpression()), !dbg !11291
  call void @llvm.dbg.value(metadata i32 %1, metadata !11290, metadata !DIExpression()), !dbg !11291
  %3 = icmp eq i32 %0, 4, !dbg !11292
  %4 = icmp eq i32 %1, 0, !dbg !11292
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11292
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11292
  ret i32 %6, !dbg !11293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11298, metadata !DIExpression()), !dbg !11299
  %2 = icmp eq i32 %0, 1, !dbg !11300
  %3 = select i1 %2, i32 768, i32 0, !dbg !11299
  ret i32 %3, !dbg !11302
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11303 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11305, metadata !DIExpression()), !dbg !11306
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11307
  %3 = load volatile i32, i32* %2, align 4, !dbg !11307
  %4 = and i32 %3, -8193, !dbg !11307
  store volatile i32 %4, i32* %2, align 4, !dbg !11307
  ret void, !dbg !11308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11309 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11313, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata i32 %1, metadata !11314, metadata !DIExpression()), !dbg !11316
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11317
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11317
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11317
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11315, metadata !DIExpression()), !dbg !11316
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11318
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11318
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11319
  ret void, !dbg !11320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11321 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11323, metadata !DIExpression()), !dbg !11326
  call void @llvm.dbg.value(metadata i32 %1, metadata !11324, metadata !DIExpression()), !dbg !11326
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11327
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11327
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11327
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11325, metadata !DIExpression()), !dbg !11326
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11328
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11328
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11329
  ret void, !dbg !11330
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11331 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11333, metadata !DIExpression()), !dbg !11336
  call void @llvm.dbg.value(metadata i32 %1, metadata !11334, metadata !DIExpression()), !dbg !11336
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11337
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11337
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11337
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11335, metadata !DIExpression()), !dbg !11336
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11338
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11338
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11339
  ret void, !dbg !11340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11341 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11343, metadata !DIExpression()), !dbg !11346
  call void @llvm.dbg.value(metadata i32 %1, metadata !11344, metadata !DIExpression()), !dbg !11346
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11347
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11347
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11347
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11345, metadata !DIExpression()), !dbg !11346
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11348
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11348
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11349
  ret void, !dbg !11350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11351 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11353, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.value(metadata i32 %1, metadata !11354, metadata !DIExpression()), !dbg !11358
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11359
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11359
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11359
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11355, metadata !DIExpression()), !dbg !11358
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11360
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11360
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11360
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11356, metadata !DIExpression()), !dbg !11358
  %10 = bitcast i32* %3 to i8*, !dbg !11361
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11361
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11362
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11362
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11366
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11366
  %15 = load i8*, i8** %14, align 4, !dbg !11366
  call void @llvm.dbg.value(metadata i32* %3, metadata !11357, metadata !DIExpression(DW_OP_deref)), !dbg !11358
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11367
  %17 = icmp slt i32 %16, 0, !dbg !11368
  br i1 %17, label %23, label %18, !dbg !11369

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11370
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11370
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !11371
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11372
  %22 = load i32, i32* %3, align 4, !dbg !11373
  call void @llvm.dbg.value(metadata i32 %22, metadata !11357, metadata !DIExpression()), !dbg !11358
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !11374
  br label %23, !dbg !11375

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11375
  ret void, !dbg !11375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11376 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11378, metadata !DIExpression()), !dbg !11379
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11380
  %3 = load volatile i32, i32* %2, align 4, !dbg !11380
  %4 = or i32 %3, 8192, !dbg !11380
  store volatile i32 %4, i32* %2, align 4, !dbg !11380
  ret void, !dbg !11381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11382 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11384, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.value(metadata i8* %1, metadata !11385, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.value(metadata i32* %2, metadata !11386, metadata !DIExpression()), !dbg !11388
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11389
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11389
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11389
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11387, metadata !DIExpression()), !dbg !11388
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11390
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11390
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11392
  br i1 %9, label %12, label %10, !dbg !11393

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11394
  br label %12, !dbg !11395

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11388
  ret i32 %13, !dbg !11396
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11397 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11401, metadata !DIExpression()), !dbg !11403
  call void @llvm.dbg.value(metadata i32 0, metadata !11402, metadata !DIExpression()), !dbg !11403
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11404
  %3 = load volatile i32, i32* %2, align 4, !dbg !11404
  %4 = and i32 %3, -32769, !dbg !11404
  store volatile i32 %4, i32* %2, align 4, !dbg !11404
  ret void, !dbg !11405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11406 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11410, metadata !DIExpression()), !dbg !11414
  call void @llvm.dbg.value(metadata i32 %1, metadata !11411, metadata !DIExpression()), !dbg !11414
  call void @llvm.dbg.value(metadata i32 0, metadata !11412, metadata !DIExpression()), !dbg !11414
  call void @llvm.dbg.value(metadata i32 %2, metadata !11413, metadata !DIExpression()), !dbg !11414
  %4 = zext i32 %1 to i64, !dbg !11415
  %5 = mul nuw nsw i64 %4, 25, !dbg !11415
  %6 = zext i32 %2 to i64, !dbg !11415
  %7 = shl nuw nsw i64 %6, 2, !dbg !11415
  %8 = udiv i64 %5, %7, !dbg !11415
  %9 = trunc i64 %8 to i32, !dbg !11415
  %10 = udiv i32 %9, 100, !dbg !11415
  %11 = shl nuw nsw i32 %10, 4, !dbg !11415
  %12 = mul i32 %10, -100, !dbg !11415
  %13 = add i32 %12, %9, !dbg !11415
  %14 = shl i32 %13, 4, !dbg !11415
  %15 = add i32 %14, 50, !dbg !11415
  %16 = udiv i32 %15, 100, !dbg !11415
  %17 = and i32 %16, 240, !dbg !11415
  %18 = add nuw nsw i32 %17, %11, !dbg !11415
  %19 = and i32 %16, 15, !dbg !11415
  %20 = and i32 %18, 65520, !dbg !11418
  %21 = or i32 %20, %19, !dbg !11418
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11419
  store volatile i32 %21, i32* %22, align 4, !dbg !11420
  ret void, !dbg !11421
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11422 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11424, metadata !DIExpression()), !dbg !11426
  call void @llvm.dbg.value(metadata i32 %1, metadata !11425, metadata !DIExpression()), !dbg !11426
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11427
  %4 = load volatile i32, i32* %3, align 4, !dbg !11427
  %5 = and i32 %4, -769, !dbg !11427
  %6 = or i32 %5, %1, !dbg !11427
  store volatile i32 %6, i32* %3, align 4, !dbg !11427
  ret void, !dbg !11428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11429 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11431, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.value(metadata i32 %1, metadata !11432, metadata !DIExpression()), !dbg !11433
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11434
  %4 = load volatile i32, i32* %3, align 4, !dbg !11434
  %5 = and i32 %4, -4097, !dbg !11434
  %6 = or i32 %5, %1, !dbg !11434
  store volatile i32 %6, i32* %3, align 4, !dbg !11434
  ret void, !dbg !11435
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11436 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11438, metadata !DIExpression()), !dbg !11440
  call void @llvm.dbg.value(metadata i32 %1, metadata !11439, metadata !DIExpression()), !dbg !11440
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11441
  %4 = load volatile i32, i32* %3, align 4, !dbg !11441
  %5 = and i32 %4, -12289, !dbg !11441
  %6 = or i32 %5, %1, !dbg !11441
  store volatile i32 %6, i32* %3, align 4, !dbg !11441
  ret void, !dbg !11442
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11443 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11445, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.value(metadata i32 %1, metadata !11446, metadata !DIExpression()), !dbg !11447
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11448
  %4 = load volatile i32, i32* %3, align 4, !dbg !11448
  %5 = and i32 %4, -1537, !dbg !11448
  %6 = or i32 %5, %1, !dbg !11448
  store volatile i32 %6, i32* %3, align 4, !dbg !11448
  ret void, !dbg !11449
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11450 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11452, metadata !DIExpression()), !dbg !11453
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11454
  %3 = load volatile i32, i32* %2, align 4, !dbg !11454
  %4 = and i32 %3, 1, !dbg !11454
  ret i32 %4, !dbg !11455
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11456 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11458, metadata !DIExpression()), !dbg !11459
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11460
  %3 = load volatile i32, i32* %2, align 4, !dbg !11460
  %4 = lshr i32 %3, 1, !dbg !11461
  %5 = and i32 %4, 1, !dbg !11461
  ret i32 %5, !dbg !11462
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11463 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11465, metadata !DIExpression()), !dbg !11466
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11467
  %3 = load volatile i32, i32* %2, align 4, !dbg !11467
  %4 = lshr i32 %3, 8, !dbg !11468
  %5 = and i32 %4, 1, !dbg !11468
  ret i32 %5, !dbg !11469
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11470 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11472, metadata !DIExpression()), !dbg !11473
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11474
  store volatile i32 -257, i32* %2, align 4, !dbg !11474
  ret void, !dbg !11475
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11476 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11478, metadata !DIExpression()), !dbg !11480
  %3 = bitcast i32* %2 to i8*, !dbg !11481
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11481
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11479, metadata !DIExpression()), !dbg !11482
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11483
  %5 = load volatile i32, i32* %4, align 4, !dbg !11483
  store volatile i32 %5, i32* %2, align 4, !dbg !11484
  %6 = load volatile i32, i32* %2, align 4, !dbg !11485
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11486
  %8 = load volatile i32, i32* %7, align 4, !dbg !11486
  store volatile i32 %8, i32* %2, align 4, !dbg !11487
  %9 = load volatile i32, i32* %2, align 4, !dbg !11488
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11489
  ret void, !dbg !11489
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11490 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11492, metadata !DIExpression()), !dbg !11494
  %3 = bitcast i32* %2 to i8*, !dbg !11495
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11495
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11493, metadata !DIExpression()), !dbg !11496
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11497
  %5 = load volatile i32, i32* %4, align 4, !dbg !11497
  store volatile i32 %5, i32* %2, align 4, !dbg !11498
  %6 = load volatile i32, i32* %2, align 4, !dbg !11499
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11500
  %8 = load volatile i32, i32* %7, align 4, !dbg !11500
  store volatile i32 %8, i32* %2, align 4, !dbg !11501
  %9 = load volatile i32, i32* %2, align 4, !dbg !11502
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11503
  ret void, !dbg !11503
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11504 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11506, metadata !DIExpression()), !dbg !11508
  %3 = bitcast i32* %2 to i8*, !dbg !11509
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11509
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11507, metadata !DIExpression()), !dbg !11510
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11511
  %5 = load volatile i32, i32* %4, align 4, !dbg !11511
  store volatile i32 %5, i32* %2, align 4, !dbg !11512
  %6 = load volatile i32, i32* %2, align 4, !dbg !11513
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11514
  %8 = load volatile i32, i32* %7, align 4, !dbg !11514
  store volatile i32 %8, i32* %2, align 4, !dbg !11515
  %9 = load volatile i32, i32* %2, align 4, !dbg !11516
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11517
  ret void, !dbg !11517
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1665 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1667, metadata !DIExpression()), !dbg !11518
  tail call void @z_arm_irq_priority_set(i32 noundef 39, i32 noundef 0, i32 noundef 0) #25, !dbg !11519
  tail call void @arch_irq_enable(i32 noundef 39) #25, !dbg !11521
  ret void, !dbg !11521
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !11522 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11524, metadata !DIExpression()), !dbg !11526
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11527
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11527
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11527
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11525, metadata !DIExpression()), !dbg !11526
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !11528
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !11528
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !11530
  br i1 %7, label %11, label %8, !dbg !11531

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !11532
  %10 = load i8*, i8** %9, align 4, !dbg !11532
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !11534
  br label %11, !dbg !11535

11:                                               ; preds = %8, %1
  ret void, !dbg !11536
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !11537 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11539, metadata !DIExpression()), !dbg !11545
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11546
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11546
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11546
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11540, metadata !DIExpression()), !dbg !11545
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11547
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11547
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11547
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11541, metadata !DIExpression()), !dbg !11545
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11548
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11549
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11549
  %10 = tail call fastcc zeroext i1 @device_is_ready.75(%struct.device* noundef %9) #26, !dbg !11551
  br i1 %10, label %11, label %51, !dbg !11552

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !11553
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11554
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11554
  %15 = load i8*, i8** %14, align 4, !dbg !11554
  %16 = tail call fastcc i32 @clock_control_on.76(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !11555
  call void @llvm.dbg.value(metadata i32 %16, metadata !11544, metadata !DIExpression()), !dbg !11545
  %17 = icmp eq i32 %16, 0, !dbg !11556
  br i1 %17, label %18, label %51, !dbg !11558

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11559
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !11559
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !11560
  call void @llvm.dbg.value(metadata i32 %21, metadata !11544, metadata !DIExpression()), !dbg !11545
  %22 = icmp slt i32 %21, 0, !dbg !11561
  br i1 %22, label %51, label %23, !dbg !11563

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11564
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11564
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !11565
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11566
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !11567
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11568
  %28 = load i32, i32* %27, align 4, !dbg !11568
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !11570

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !11542, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 4096, metadata !11543, metadata !DIExpression()), !dbg !11545
  br label %31, !dbg !11571

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !11542, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 0, metadata !11543, metadata !DIExpression()), !dbg !11545
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !11574
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !11574
  call void @llvm.dbg.value(metadata i32 %33, metadata !11543, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 %32, metadata !11542, metadata !DIExpression()), !dbg !11545
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11575
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !11576
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11577
  %36 = load i8, i8* %35, align 4, !dbg !11577, !range !7169
  %37 = icmp eq i8 %36, 0, !dbg !11577
  br i1 %37, label %39, label %38, !dbg !11579

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11580
  br label %39, !dbg !11582

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11583
  %41 = load i32, i32* %40, align 4, !dbg !11583
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !11584
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11585
  %43 = load i8, i8* %42, align 4, !dbg !11585, !range !7169
  %44 = icmp eq i8 %43, 0, !dbg !11585
  br i1 %44, label %47, label %45, !dbg !11587

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11588
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !11590
  br label %47, !dbg !11591

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11592
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !11593
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !11594
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !11594
  tail call void %50(%struct.device* noundef nonnull %0) #25, !dbg !11595
  br label %51, !dbg !11596

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !11545
  ret i32 %52, !dbg !11597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11598 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11600, metadata !DIExpression()), !dbg !11604
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11605
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11605
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11605
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11601, metadata !DIExpression()), !dbg !11604
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11602, metadata !DIExpression()), !dbg !11604
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11606
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11607
  ret void, !dbg !11608
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.75(%struct.device* noundef %0) unnamed_addr #1 !dbg !11609 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11613, metadata !DIExpression()), !dbg !11614
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11615, !srcloc !11617
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.77(%struct.device* noundef %0) #26, !dbg !11618
  ret i1 %2, !dbg !11619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.76(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11620 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11622, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i8* %1, metadata !11623, metadata !DIExpression()), !dbg !11625
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11626
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11626
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11626
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11624, metadata !DIExpression()), !dbg !11625
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11627
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11627
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11628
  ret i32 %8, !dbg !11629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11630 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11634, metadata !DIExpression()), !dbg !11638
  call void @llvm.dbg.value(metadata i8 0, metadata !11635, metadata !DIExpression()), !dbg !11638
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11639
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11639
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11637, metadata !DIExpression(DW_OP_deref)), !dbg !11638
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %4, metadata !11636, metadata !DIExpression()), !dbg !11638
  %5 = icmp slt i32 %4, 0, !dbg !11641
  br i1 %5, label %9, label %6, !dbg !11643

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11644
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11637, metadata !DIExpression()), !dbg !11638
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11645
  br label %9, !dbg !11646

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11638
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11647
  ret i32 %10, !dbg !11647
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11648 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11650, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.value(metadata i32 12, metadata !11651, metadata !DIExpression()), !dbg !11654
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11655

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11656
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11659, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11656
  %5 = or i32 %4, 12, !dbg !11660
  call void @llvm.dbg.value(metadata i32 %5, metadata !11652, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11662
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11662
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11664, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11662
  %7 = icmp eq i32 %6, 0, !dbg !11655
  br i1 %7, label %8, label %3, !dbg !11660, !llvm.loop !11665

8:                                                ; preds = %3
  ret void, !dbg !11666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11667 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11669, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 %1, metadata !11670, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 %2, metadata !11671, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 0, metadata !11672, metadata !DIExpression()), !dbg !11673
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11674
  %5 = load volatile i32, i32* %4, align 4, !dbg !11674
  %6 = and i32 %5, -5633, !dbg !11674
  %7 = or i32 %2, %1, !dbg !11674
  %8 = or i32 %7, %6, !dbg !11674
  store volatile i32 %8, i32* %4, align 4, !dbg !11674
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11675
  %10 = load volatile i32, i32* %9, align 4, !dbg !11675
  %11 = and i32 %10, -12289, !dbg !11675
  store volatile i32 %11, i32* %9, align 4, !dbg !11675
  ret void, !dbg !11676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11677 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11679, metadata !DIExpression()), !dbg !11680
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11681
  %3 = load volatile i32, i32* %2, align 4, !dbg !11681
  %4 = or i32 %3, 8, !dbg !11681
  store volatile i32 %4, i32* %2, align 4, !dbg !11681
  ret void, !dbg !11682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11683 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11687, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11688, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata i32 0, metadata !11689, metadata !DIExpression()), !dbg !11690
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11691
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11691
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11692
  %5 = load i8, i8* %4, align 4, !dbg !11692
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11693
  ret i32 %6, !dbg !11694
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.77(%struct.device* noundef %0) unnamed_addr #1 !dbg !11695 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11697, metadata !DIExpression()), !dbg !11698
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11699
  ret i1 %2, !dbg !11700
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11701 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11703, metadata !DIExpression()), !dbg !11704
  tail call fastcc void @__NVIC_SetPriority.79() #26, !dbg !11705
  store i32 16799, i32* @last_load, align 4, !dbg !11706
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11707
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11708
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11709
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11710
  %3 = or i32 %2, 7, !dbg !11710
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11710
  ret i32 0, !dbg !11711
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.79() unnamed_addr #15 !dbg !11712 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11714, metadata !DIExpression()), !dbg !11716
  call void @llvm.dbg.value(metadata i32 1, metadata !11715, metadata !DIExpression()), !dbg !11716
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11717
  ret void, !dbg !11720
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11721 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11723, metadata !DIExpression()), !dbg !11725
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11726
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11727
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11728
  %5 = add i32 %4, %3, !dbg !11728
  store i32 %5, i32* @cycle_count, align 4, !dbg !11728
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11729
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11730
  %7 = sub i32 %5, %6, !dbg !11733
  %8 = udiv i32 %7, 16800, !dbg !11734
  call void @llvm.dbg.value(metadata i32 %8, metadata !11724, metadata !DIExpression()), !dbg !11725
  %9 = mul nuw i32 %8, 16800, !dbg !11735
  %10 = add i32 %9, %6, !dbg !11736
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11736
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11737
  tail call void @z_arm_int_exit() #25, !dbg !11738
  ret void, !dbg !11739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11740 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11745
  call void @llvm.dbg.value(metadata i32 %1, metadata !11742, metadata !DIExpression()), !dbg !11746
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11747
  call void @llvm.dbg.value(metadata i32 %2, metadata !11743, metadata !DIExpression()), !dbg !11746
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11748
  call void @llvm.dbg.value(metadata i32 %3, metadata !11744, metadata !DIExpression()), !dbg !11746
  %4 = and i32 %2, 65536, !dbg !11749
  %5 = icmp ne i32 %4, 0, !dbg !11749
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11751
  %8 = load i32, i32* @last_load, align 4, !dbg !11746
  br i1 %7, label %9, label %13, !dbg !11751

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11752
  %11 = add i32 %10, %8, !dbg !11752
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11752
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11754
  br label %13, !dbg !11755

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11756
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11757
  %16 = add i32 %14, %15, !dbg !11758
  ret i32 %16, !dbg !11759
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11764, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i1 %1, metadata !11765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11777
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11778
  br i1 %4, label %5, label %8, !dbg !11778

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11780
  %7 = and i32 %6, -2, !dbg !11780
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11780
  store i32 -16777216, i32* @last_load, align 4, !dbg !11782
  br label %54, !dbg !11783

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11784
  call void @llvm.dbg.value(metadata i32 %9, metadata !11769, metadata !DIExpression()), !dbg !11777
  br i1 %3, label %18, label %10, !dbg !11785

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11785
  call void @llvm.dbg.value(metadata i32 undef, metadata !11764, metadata !DIExpression()), !dbg !11777
  %12 = icmp slt i32 %11, 1, !dbg !11786
  br i1 %12, label %18, label %13, !dbg !11786

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !11786
  %15 = select i1 %14, i32 %11, i32 997, !dbg !11786
  %16 = mul nuw nsw i32 %15, 16800, !dbg !11786
  %17 = add nuw nsw i32 %16, 16799, !dbg !11786
  br label %18, !dbg !11786

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11764, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11787, metadata !DIExpression()) #24, !dbg !11794
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11796, !srcloc !11802
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11796
  call void @llvm.dbg.value(metadata i32 %21, metadata !11799, metadata !DIExpression()) #24, !dbg !11803
  call void @llvm.dbg.value(metadata i32 undef, metadata !11800, metadata !DIExpression()) #24, !dbg !11803
  call void @llvm.dbg.value(metadata i32 %21, metadata !11793, metadata !DIExpression()) #24, !dbg !11794
  call void @llvm.dbg.value(metadata i32 %21, metadata !11770, metadata !DIExpression()), !dbg !11777
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11804
  call void @llvm.dbg.value(metadata i32 %22, metadata !11775, metadata !DIExpression()), !dbg !11777
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11805
  call void @llvm.dbg.value(metadata i32 %23, metadata !11767, metadata !DIExpression()), !dbg !11777
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11806
  %25 = add i32 %24, %22, !dbg !11806
  store i32 %25, i32* @cycle_count, align 4, !dbg !11806
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11807
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11808
  %27 = sub i32 %25, %26, !dbg !11809
  call void @llvm.dbg.value(metadata i32 %27, metadata !11776, metadata !DIExpression()), !dbg !11777
  %28 = icmp slt i32 %27, 0, !dbg !11810
  br i1 %28, label %38, label %29, !dbg !11812

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11766, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i32 undef, metadata !11766, metadata !DIExpression()), !dbg !11777
  %30 = add nuw i32 %19, %27, !dbg !11813
  %31 = urem i32 %30, 16800, !dbg !11815
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11766, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11777
  %32 = sub nuw nsw i32 %19, %31, !dbg !11816
  call void @llvm.dbg.value(metadata i32 %32, metadata !11766, metadata !DIExpression()), !dbg !11777
  %33 = icmp ugt i32 %32, 1050, !dbg !11817
  br i1 %33, label %34, label %36, !dbg !11817

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11766, metadata !DIExpression()), !dbg !11777
  %35 = icmp ugt i32 %32, 16749600, !dbg !11818
  br i1 %35, label %38, label %36, !dbg !11820

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11821
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11822
  call void @llvm.dbg.value(metadata i32 %40, metadata !11768, metadata !DIExpression()), !dbg !11777
  %41 = add nsw i32 %39, -1, !dbg !11823
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11824
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11825
  %42 = icmp ult i32 %23, %40, !dbg !11826
  br i1 %42, label %43, label %48, !dbg !11828

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11829
  %45 = add i32 %23, %9, !dbg !11831
  %46 = sub i32 %45, %40, !dbg !11832
  %47 = add i32 %46, %44, !dbg !11829
  br label %52, !dbg !11833

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11834
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11836
  %51 = add i32 %49, %50, !dbg !11836
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11837
  store i32 %53, i32* @cycle_count, align 4, !dbg !11837
  call void @llvm.dbg.value(metadata i32 %21, metadata !11838, metadata !DIExpression()) #24, !dbg !11844
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11843, metadata !DIExpression()) #24, !dbg !11844
  call void @llvm.dbg.value(metadata i32 %21, metadata !11846, metadata !DIExpression()) #24, !dbg !11849
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !11851, !srcloc !11852
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11853
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11854 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11787, metadata !DIExpression()) #24, !dbg !11858
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11860, !srcloc !11802
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11860
  call void @llvm.dbg.value(metadata i32 %2, metadata !11799, metadata !DIExpression()) #24, !dbg !11862
  call void @llvm.dbg.value(metadata i32 undef, metadata !11800, metadata !DIExpression()) #24, !dbg !11862
  call void @llvm.dbg.value(metadata i32 %2, metadata !11793, metadata !DIExpression()) #24, !dbg !11858
  call void @llvm.dbg.value(metadata i32 %2, metadata !11856, metadata !DIExpression()), !dbg !11863
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11864
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11865
  %5 = add i32 %4, %3, !dbg !11866
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11867
  %7 = sub i32 %5, %6, !dbg !11868
  call void @llvm.dbg.value(metadata i32 %7, metadata !11857, metadata !DIExpression()), !dbg !11863
  call void @llvm.dbg.value(metadata i32 %2, metadata !11838, metadata !DIExpression()) #24, !dbg !11869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11843, metadata !DIExpression()) #24, !dbg !11869
  call void @llvm.dbg.value(metadata i32 %2, metadata !11846, metadata !DIExpression()) #24, !dbg !11871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11873, !srcloc !11852
  %8 = udiv i32 %7, 16800, !dbg !11874
  ret i32 %8, !dbg !11875
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11876 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11787, metadata !DIExpression()) #24, !dbg !11880
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11882, !srcloc !11802
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11882
  call void @llvm.dbg.value(metadata i32 %2, metadata !11799, metadata !DIExpression()) #24, !dbg !11884
  call void @llvm.dbg.value(metadata i32 undef, metadata !11800, metadata !DIExpression()) #24, !dbg !11884
  call void @llvm.dbg.value(metadata i32 %2, metadata !11793, metadata !DIExpression()) #24, !dbg !11880
  call void @llvm.dbg.value(metadata i32 %2, metadata !11878, metadata !DIExpression()), !dbg !11885
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11886
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11887
  %5 = add i32 %4, %3, !dbg !11888
  call void @llvm.dbg.value(metadata i32 %5, metadata !11879, metadata !DIExpression()), !dbg !11885
  call void @llvm.dbg.value(metadata i32 %2, metadata !11838, metadata !DIExpression()) #24, !dbg !11889
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11843, metadata !DIExpression()) #24, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %2, metadata !11846, metadata !DIExpression()) #24, !dbg !11891
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11893, !srcloc !11852
  ret i32 %5, !dbg !11894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11895 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11896
  %2 = icmp eq i32 %1, -16777216, !dbg !11898
  br i1 %2, label %3, label %6, !dbg !11899

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11900
  %5 = or i32 %4, 1, !dbg !11900
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11900
  br label %6, !dbg !11902

6:                                                ; preds = %3, %0
  ret void, !dbg !11903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11904 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11905
  %2 = and i32 %1, -2, !dbg !11905
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11905
  ret void, !dbg !11906
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11907 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11933, metadata !DIExpression()), !dbg !11936
  call void @llvm.dbg.value(metadata i8 %1, metadata !11934, metadata !DIExpression()), !dbg !11936
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11935, metadata !DIExpression()), !dbg !11936
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11937
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11937
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11936
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11938
  %8 = load i8, i8* %6, align 4, !dbg !11939
  %9 = zext i8 %8 to i32, !dbg !11940
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11940
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11941
  br i1 %11, label %18, label %24, !dbg !11942

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11936
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11938
  %14 = load i8, i8* %6, align 4, !dbg !11939
  %15 = zext i8 %14 to i32, !dbg !11940
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11940
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11941
  br i1 %17, label %18, label %24, !dbg !11942, !llvm.loop !11943

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11945
  %21 = load i8, i8* %20, align 1, !dbg !11945
  %22 = icmp eq i8 %21, %1, !dbg !11948
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11949
  br i1 %22, label %24, label %12, !dbg !11950

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11936
  ret i32 %25, !dbg !11951
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11952 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11963, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i8 %1, metadata !11964, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i32 %2, metadata !11965, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i32 0, metadata !11968, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i32 0, metadata !11969, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i8 0, metadata !11970, metadata !DIExpression()), !dbg !11980
  %4 = icmp eq i8 %1, 0, !dbg !11981
  br i1 %4, label %35, label %5, !dbg !11982

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11981
  br label %9, !dbg !11982

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11970, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.value(metadata i32 %29, metadata !11968, metadata !DIExpression()), !dbg !11979
  %8 = icmp eq i32 %34, %6, !dbg !11981
  br i1 %8, label %35, label %9, !dbg !11982, !llvm.loop !11983

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11970, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.value(metadata i32 %11, metadata !11968, metadata !DIExpression()), !dbg !11979
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11985
  %13 = load i32, i32* %12, align 4, !dbg !11985
  call void @llvm.dbg.value(metadata i32 %13, metadata !11967, metadata !DIExpression()), !dbg !11979
  %14 = and i32 %13, 31, !dbg !11986
  %15 = icmp ult i32 %14, 16, !dbg !11987
  br i1 %15, label %16, label %20, !dbg !11988

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11989
  %18 = load i32, i32* %17, align 4, !dbg !11989
  %19 = or i32 %18, 32, !dbg !11991
  call void @llvm.dbg.value(metadata i32 %19, metadata !11968, metadata !DIExpression()), !dbg !11979
  br label %28, !dbg !11992

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11993

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11994
  %23 = load i32, i32* %22, align 4, !dbg !11994
  call void @llvm.dbg.value(metadata i32 %23, metadata !11972, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11995
  %24 = lshr i32 %23, 7, !dbg !11996
  %25 = and i32 %24, 16, !dbg !11996
  %26 = or i32 %25, %23, !dbg !11996
  call void @llvm.dbg.value(metadata i32 %26, metadata !11968, metadata !DIExpression()), !dbg !11979
  br label %28, !dbg !11997

27:                                               ; preds = %20
  br label %28, !dbg !11998

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11979
  call void @llvm.dbg.value(metadata i32 %29, metadata !11968, metadata !DIExpression()), !dbg !11979
  %30 = lshr i32 %13, 5, !dbg !11998
  %31 = and i32 %30, 255, !dbg !11998
  call void @llvm.dbg.value(metadata i32 %31, metadata !11966, metadata !DIExpression()), !dbg !11979
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !11999
  call void @llvm.dbg.value(metadata i32 %32, metadata !11969, metadata !DIExpression()), !dbg !11979
  %33 = icmp slt i32 %32, 0, !dbg !12000
  %34 = add nuw nsw i32 %10, 1, !dbg !12002
  call void @llvm.dbg.value(metadata i32 %34, metadata !11970, metadata !DIExpression()), !dbg !11980
  br i1 %33, label %35, label %7, !dbg !12003

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12004
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12009, metadata !DIExpression()), !dbg !12013
  call void @llvm.dbg.value(metadata i32 %1, metadata !12010, metadata !DIExpression()), !dbg !12013
  call void @llvm.dbg.value(metadata i32 %2, metadata !12011, metadata !DIExpression()), !dbg !12013
  %4 = icmp ugt i32 %0, 175, !dbg !12014
  br i1 %4, label %16, label %5, !dbg !12016

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12017
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12018
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12018
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12012, metadata !DIExpression()), !dbg !12013
  %9 = add nsw i32 %6, -9, !dbg !12019
  %10 = icmp ult i32 %9, 2, !dbg !12019
  br i1 %10, label %16, label %11, !dbg !12021

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.84(%struct.device* noundef %8) #26, !dbg !12022
  br i1 %12, label %13, label %16, !dbg !12023

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12024
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !12025
  br label %16, !dbg !12026

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12013
  ret i32 %17, !dbg !12027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.84(%struct.device* noundef %0) unnamed_addr #1 !dbg !12028 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12032, metadata !DIExpression()), !dbg !12033
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12034, !srcloc !12036
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.85(%struct.device* noundef %0) #26, !dbg !12037
  ret i1 %2, !dbg !12038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.85(%struct.device* noundef %0) unnamed_addr #1 !dbg !12039 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12041, metadata !DIExpression()), !dbg !12042
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12043
  ret i1 %2, !dbg !12044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !12045 {
  ret void, !dbg !12046
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !12047 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12049, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 0, metadata !12050, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 2, metadata !12051, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 0, metadata !12052, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 2, metadata !12053, metadata !DIExpression()), !dbg !12054
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12055
  %2 = and i32 %1, 12, !dbg !12056
  call void @llvm.dbg.value(metadata i32 %2, metadata !12049, metadata !DIExpression()), !dbg !12054
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12057

3:                                                ; preds = %0
  br label %21, !dbg !12058

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12060
  call void @llvm.dbg.value(metadata i32 %5, metadata !12052, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12054
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12061
  %7 = and i32 %6, 63, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %7, metadata !12053, metadata !DIExpression()), !dbg !12054
  %8 = and i32 %5, 4194304, !dbg !12063
  %9 = icmp eq i32 %8, 0, !dbg !12063
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !12065
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12065
  %13 = lshr i32 %12, 6, !dbg !12065
  %14 = and i32 %13, 511, !dbg !12065
  %15 = mul i32 %14, %11, !dbg !12065
  call void @llvm.dbg.value(metadata i32 %15, metadata !12050, metadata !DIExpression()), !dbg !12054
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12066
  %17 = lshr i32 %16, 15, !dbg !12067
  %18 = and i32 %17, 6, !dbg !12067
  %19 = add nuw nsw i32 %18, 2, !dbg !12067
  call void @llvm.dbg.value(metadata i32 %19, metadata !12051, metadata !DIExpression()), !dbg !12054
  %20 = udiv i32 %15, %19, !dbg !12068
  br label %21, !dbg !12069

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12070
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12071
  %24 = lshr i32 %23, 4, !dbg !12072
  %25 = and i32 %24, 15, !dbg !12072
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12073
  %27 = load i8, i8* %26, align 1, !dbg !12073
  %28 = zext i8 %27 to i32, !dbg !12073
  call void @llvm.dbg.value(metadata i32 %28, metadata !12049, metadata !DIExpression()), !dbg !12054
  %29 = lshr i32 %22, %28, !dbg !12074
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12074
  ret void, !dbg !12075
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12076 {
  ret i32 0, !dbg !12081
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12082 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12108, metadata !DIExpression()), !dbg !12119
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12120
  br i1 %3, label %311, label %4, !dbg !12122

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12123
  %6 = load i32, i32* %5, align 4, !dbg !12123
  %7 = and i32 %6, 1, !dbg !12125
  %8 = icmp eq i32 %7, 0, !dbg !12126
  br i1 %8, label %66, label %9, !dbg !12127

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12128
  %11 = and i32 %10, 12, !dbg !12128
  %12 = icmp eq i32 %11, 4, !dbg !12131
  br i1 %12, label %21, label %13, !dbg !12132

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12133
  %15 = and i32 %14, 12, !dbg !12133
  %16 = icmp eq i32 %15, 8, !dbg !12134
  br i1 %16, label %17, label %29, !dbg !12135

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12136
  %19 = and i32 %18, 4194304, !dbg !12137
  %20 = icmp eq i32 %19, 0, !dbg !12138
  br i1 %20, label %29, label %21, !dbg !12139

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12140
  %23 = and i32 %22, 131072, !dbg !12140
  %24 = icmp eq i32 %23, 0, !dbg !12140
  br i1 %24, label %66, label %25, !dbg !12143

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12144
  %27 = load i32, i32* %26, align 4, !dbg !12144
  %28 = icmp eq i32 %27, 0, !dbg !12145
  br i1 %28, label %311, label %66, !dbg !12146

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12147
  %31 = load i32, i32* %30, align 4, !dbg !12147
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12151

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12152
  %34 = or i32 %33, 65536, !dbg !12152
  br label %45, !dbg !12152

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12154
  %37 = or i32 %36, 262144, !dbg !12154
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12154
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12154
  %39 = or i32 %38, 65536, !dbg !12154
  br label %45, !dbg !12154

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12157
  %42 = and i32 %41, -65537, !dbg !12157
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12157
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12157
  %44 = and i32 %43, -262145, !dbg !12157
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12159
  %47 = load i32, i32* %30, align 4, !dbg !12160
  %48 = icmp eq i32 %47, 0, !dbg !12162
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !12163
  call void @llvm.dbg.value(metadata i32 %49, metadata !12109, metadata !DIExpression()), !dbg !12119
  call void @llvm.dbg.value(metadata i32 %49, metadata !12109, metadata !DIExpression()), !dbg !12119
  br i1 %48, label %58, label %50, !dbg !12164

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12165
  %52 = and i32 %51, 131072, !dbg !12167
  %53 = icmp eq i32 %52, 0, !dbg !12167
  br i1 %53, label %54, label %66, !dbg !12168

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !12169
  %56 = sub i32 %55, %49, !dbg !12172
  %57 = icmp ugt i32 %56, 100, !dbg !12173
  br i1 %57, label %311, label %50, !dbg !12174, !llvm.loop !12175

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12177
  %60 = and i32 %59, 131072, !dbg !12177
  %61 = icmp eq i32 %60, 0, !dbg !12177
  br i1 %61, label %66, label %62, !dbg !12179

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12180
  %64 = sub i32 %63, %49, !dbg !12183
  %65 = icmp ugt i32 %64, 100, !dbg !12184
  br i1 %65, label %311, label %58, !dbg !12185, !llvm.loop !12186

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12188
  %68 = and i32 %67, 2, !dbg !12190
  %69 = icmp eq i32 %68, 0, !dbg !12191
  br i1 %69, label %121, label %70, !dbg !12192

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12193
  %72 = and i32 %71, 12, !dbg !12193
  %73 = icmp eq i32 %72, 0, !dbg !12196
  br i1 %73, label %82, label %74, !dbg !12197

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12198
  %76 = and i32 %75, 12, !dbg !12198
  %77 = icmp eq i32 %76, 8, !dbg !12199
  br i1 %77, label %78, label %90, !dbg !12200

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12201
  %80 = and i32 %79, 4194304, !dbg !12202
  %81 = icmp eq i32 %80, 0, !dbg !12203
  br i1 %81, label %82, label %90, !dbg !12204

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12205
  %84 = and i32 %83, 2, !dbg !12205
  %85 = icmp eq i32 %84, 0, !dbg !12205
  br i1 %85, label %114, label %86, !dbg !12208

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12209
  %88 = load i32, i32* %87, align 4, !dbg !12209
  %89 = icmp eq i32 %88, 1, !dbg !12210
  br i1 %89, label %114, label %311, !dbg !12211

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12212
  %92 = load i32, i32* %91, align 4, !dbg !12212
  %93 = icmp eq i32 %92, 0, !dbg !12215
  br i1 %93, label %104, label %94, !dbg !12216

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12217
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12219
  call void @llvm.dbg.value(metadata i32 %95, metadata !12109, metadata !DIExpression()), !dbg !12119
  br label %96, !dbg !12220

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12221
  %98 = and i32 %97, 2, !dbg !12222
  %99 = icmp eq i32 %98, 0, !dbg !12222
  br i1 %99, label %100, label %114, !dbg !12220

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12223
  %102 = sub i32 %101, %95, !dbg !12226
  %103 = icmp ugt i32 %102, 2, !dbg !12227
  br i1 %103, label %311, label %96, !dbg !12228, !llvm.loop !12229

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12231
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12233
  call void @llvm.dbg.value(metadata i32 %105, metadata !12109, metadata !DIExpression()), !dbg !12119
  br label %106, !dbg !12234

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12235
  %108 = and i32 %107, 2, !dbg !12235
  %109 = icmp eq i32 %108, 0, !dbg !12235
  br i1 %109, label %121, label %110, !dbg !12234

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12236
  %112 = sub i32 %111, %105, !dbg !12239
  %113 = icmp ugt i32 %112, 2, !dbg !12240
  br i1 %113, label %311, label %106, !dbg !12241, !llvm.loop !12242

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12244
  %116 = and i32 %115, -249, !dbg !12244
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12244
  %118 = load i32, i32* %117, align 4, !dbg !12244
  %119 = shl i32 %118, 3, !dbg !12244
  %120 = or i32 %119, %116, !dbg !12244
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12244
  br label %121, !dbg !12245

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12245
  %123 = and i32 %122, 8, !dbg !12247
  %124 = icmp eq i32 %123, 0, !dbg !12248
  br i1 %124, label %149, label %125, !dbg !12249

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12250
  %127 = load i32, i32* %126, align 4, !dbg !12250
  %128 = icmp eq i32 %127, 0, !dbg !12253
  br i1 %128, label %139, label %129, !dbg !12254

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12255
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12257
  call void @llvm.dbg.value(metadata i32 %130, metadata !12109, metadata !DIExpression()), !dbg !12119
  br label %131, !dbg !12258

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12259
  %133 = and i32 %132, 2, !dbg !12260
  %134 = icmp eq i32 %133, 0, !dbg !12260
  br i1 %134, label %135, label %149, !dbg !12258

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12261
  %137 = sub i32 %136, %130, !dbg !12264
  %138 = icmp ugt i32 %137, 2, !dbg !12265
  br i1 %138, label %311, label %131, !dbg !12266, !llvm.loop !12267

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12269
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12271
  call void @llvm.dbg.value(metadata i32 %140, metadata !12109, metadata !DIExpression()), !dbg !12119
  br label %141, !dbg !12272

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12273
  %143 = and i32 %142, 2, !dbg !12273
  %144 = icmp eq i32 %143, 0, !dbg !12273
  br i1 %144, label %149, label %145, !dbg !12272

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12274
  %147 = sub i32 %146, %140, !dbg !12277
  %148 = icmp ugt i32 %147, 2, !dbg !12278
  br i1 %148, label %311, label %141, !dbg !12279, !llvm.loop !12280

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12282
  %151 = and i32 %150, 4, !dbg !12283
  %152 = icmp eq i32 %151, 0, !dbg !12284
  br i1 %152, label %221, label %153, !dbg !12285

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12111, metadata !DIExpression()), !dbg !12286
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12287
  %155 = and i32 %154, 268435456, !dbg !12287
  %156 = icmp eq i32 %155, 0, !dbg !12287
  br i1 %156, label %157, label %164, !dbg !12288

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12289
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12289
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12115, metadata !DIExpression()), !dbg !12289
  store volatile i32 0, i32* %2, align 4, !dbg !12289
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12289
  %160 = or i32 %159, 268435456, !dbg !12289
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12289
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12289
  %162 = and i32 %161, 268435456, !dbg !12289
  store volatile i32 %162, i32* %2, align 4, !dbg !12289
  %163 = load volatile i32, i32* %2, align 4, !dbg !12289
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12290
  call void @llvm.dbg.value(metadata i32 1, metadata !12111, metadata !DIExpression()), !dbg !12286
  br label %164, !dbg !12291

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12111, metadata !DIExpression()), !dbg !12286
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12292
  %166 = and i32 %165, 256, !dbg !12292
  %167 = icmp eq i32 %166, 0, !dbg !12292
  br i1 %167, label %168, label %180, !dbg !12294

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12295
  %170 = or i32 %169, 256, !dbg !12295
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12295
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12297
  call void @llvm.dbg.value(metadata i32 %171, metadata !12109, metadata !DIExpression()), !dbg !12119
  br label %172, !dbg !12298

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12299
  %174 = and i32 %173, 256, !dbg !12299
  %175 = icmp eq i32 %174, 0, !dbg !12299
  br i1 %175, label %176, label %180, !dbg !12298

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12300
  %178 = sub i32 %177, %171, !dbg !12303
  %179 = icmp ugt i32 %178, 2, !dbg !12304
  br i1 %179, label %311, label %172, !dbg !12305, !llvm.loop !12306

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12308
  %182 = load i32, i32* %181, align 4, !dbg !12308
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12311

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12312
  %185 = or i32 %184, 1, !dbg !12312
  br label %196, !dbg !12312

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12314
  %188 = or i32 %187, 4, !dbg !12314
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12314
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12314
  %190 = or i32 %189, 1, !dbg !12314
  br label %196, !dbg !12314

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12317
  %193 = and i32 %192, -2, !dbg !12317
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12317
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12317
  %195 = and i32 %194, -5, !dbg !12317
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12319
  %198 = load i32, i32* %181, align 4, !dbg !12320
  %199 = icmp eq i32 %198, 0, !dbg !12322
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12323
  call void @llvm.dbg.value(metadata i32 %200, metadata !12109, metadata !DIExpression()), !dbg !12119
  call void @llvm.dbg.value(metadata i32 %200, metadata !12109, metadata !DIExpression()), !dbg !12119
  br i1 %199, label %209, label %201, !dbg !12324

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12325
  %203 = and i32 %202, 2, !dbg !12327
  %204 = icmp eq i32 %203, 0, !dbg !12327
  br i1 %204, label %205, label %217, !dbg !12328

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12329
  %207 = sub i32 %206, %200, !dbg !12332
  %208 = icmp ugt i32 %207, 5000, !dbg !12333
  br i1 %208, label %311, label %201, !dbg !12334, !llvm.loop !12335

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12337
  %211 = and i32 %210, 2, !dbg !12337
  %212 = icmp eq i32 %211, 0, !dbg !12337
  br i1 %212, label %217, label %213, !dbg !12339

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12340
  %215 = sub i32 %214, %200, !dbg !12343
  %216 = icmp ugt i32 %215, 5000, !dbg !12344
  br i1 %216, label %311, label %209, !dbg !12345, !llvm.loop !12346

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12348

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12349
  %220 = and i32 %219, -268435457, !dbg !12349
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12349
  br label %221, !dbg !12352

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12353
  %223 = load i32, i32* %222, align 4, !dbg !12353
  %224 = icmp eq i32 %223, 0, !dbg !12355
  br i1 %224, label %310, label %225, !dbg !12356

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12357
  %227 = and i32 %226, 12, !dbg !12357
  %228 = icmp eq i32 %227, 8, !dbg !12360
  br i1 %228, label %277, label %229, !dbg !12361

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12362
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12365
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12365
  call void @llvm.dbg.value(metadata i32 %231, metadata !12109, metadata !DIExpression()), !dbg !12119
  call void @llvm.dbg.value(metadata i32 %231, metadata !12109, metadata !DIExpression()), !dbg !12119
  br i1 %230, label %232, label %269, !dbg !12366

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12367
  %234 = and i32 %233, 33554432, !dbg !12367
  %235 = icmp eq i32 %234, 0, !dbg !12367
  br i1 %235, label %240, label %236, !dbg !12369

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12370
  %238 = sub i32 %237, %231, !dbg !12373
  %239 = icmp ugt i32 %238, 2, !dbg !12374
  br i1 %239, label %311, label %232, !dbg !12375, !llvm.loop !12376

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12378
  %242 = load i32, i32* %241, align 4, !dbg !12378
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12378
  %244 = load i32, i32* %243, align 4, !dbg !12378
  %245 = or i32 %244, %242, !dbg !12378
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12378
  %247 = load i32, i32* %246, align 4, !dbg !12378
  %248 = shl i32 %247, 6, !dbg !12378
  %249 = or i32 %245, %248, !dbg !12378
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12378
  %251 = load i32, i32* %250, align 4, !dbg !12378
  %252 = shl i32 %251, 15, !dbg !12378
  %253 = add i32 %252, -65536, !dbg !12378
  %254 = and i32 %253, -65536, !dbg !12378
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12378
  %256 = load i32, i32* %255, align 4, !dbg !12378
  %257 = shl i32 %256, 24, !dbg !12378
  %258 = or i32 %249, %257, !dbg !12378
  %259 = or i32 %258, %254, !dbg !12378
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12378
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12379
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12380
  call void @llvm.dbg.value(metadata i32 %260, metadata !12109, metadata !DIExpression()), !dbg !12119
  br label %261, !dbg !12381

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12382
  %263 = and i32 %262, 33554432, !dbg !12383
  %264 = icmp eq i32 %263, 0, !dbg !12383
  br i1 %264, label %265, label %310, !dbg !12381

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12384
  %267 = sub i32 %266, %260, !dbg !12387
  %268 = icmp ugt i32 %267, 2, !dbg !12388
  br i1 %268, label %311, label %261, !dbg !12389, !llvm.loop !12390

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12392
  %271 = and i32 %270, 33554432, !dbg !12392
  %272 = icmp eq i32 %271, 0, !dbg !12392
  br i1 %272, label %310, label %273, !dbg !12394

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12395
  %275 = sub i32 %274, %231, !dbg !12398
  %276 = icmp ugt i32 %275, 2, !dbg !12399
  br i1 %276, label %311, label %269, !dbg !12400, !llvm.loop !12401

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12403
  br i1 %278, label %311, label %279, !dbg !12406

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12407
  call void @llvm.dbg.value(metadata i32 %280, metadata !12110, metadata !DIExpression()), !dbg !12119
  %281 = and i32 %280, 4194304, !dbg !12409
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12411
  %283 = load i32, i32* %282, align 4, !dbg !12411
  %284 = icmp eq i32 %281, %283, !dbg !12412
  br i1 %284, label %285, label %311, !dbg !12413

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12414
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12415
  %288 = load i32, i32* %287, align 4, !dbg !12415
  %289 = icmp eq i32 %286, %288, !dbg !12416
  br i1 %289, label %290, label %311, !dbg !12417

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12418
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12419
  %293 = load i32, i32* %292, align 4, !dbg !12419
  %294 = shl i32 %293, 6, !dbg !12420
  %295 = icmp eq i32 %291, %294, !dbg !12421
  br i1 %295, label %296, label %311, !dbg !12422

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12423
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12424
  %299 = load i32, i32* %298, align 4, !dbg !12424
  %300 = shl i32 %299, 15, !dbg !12425
  %301 = add i32 %300, -65536, !dbg !12425
  %302 = and i32 %301, -65536, !dbg !12425
  %303 = icmp eq i32 %297, %302, !dbg !12426
  br i1 %303, label %304, label %311, !dbg !12427

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12428
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12429
  %307 = load i32, i32* %306, align 4, !dbg !12429
  %308 = shl i32 %307, 24, !dbg !12430
  %309 = icmp eq i32 %305, %308, !dbg !12431
  br i1 %309, label %310, label %311, !dbg !12432

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12433

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12119
  ret i32 %312, !dbg !12434
}

; Function Attrs: optsize
declare !dbg !12435 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12437 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12450, metadata !DIExpression()), !dbg !12453
  call void @llvm.dbg.value(metadata i32 %1, metadata !12451, metadata !DIExpression()), !dbg !12453
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12454
  br i1 %3, label %115, label %4, !dbg !12456

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12457
  %6 = and i32 %5, 7, !dbg !12457
  %7 = icmp ult i32 %6, %1, !dbg !12459
  br i1 %7, label %8, label %13, !dbg !12460

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12461
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12461
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12463
  %11 = and i32 %10, 7, !dbg !12463
  %12 = icmp eq i32 %11, %1, !dbg !12465
  br i1 %12, label %13, label %115, !dbg !12466

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12467
  %15 = load i32, i32* %14, align 4, !dbg !12467
  %16 = and i32 %15, 2, !dbg !12469
  %17 = icmp eq i32 %16, 0, !dbg !12470
  br i1 %17, label %39, label %18, !dbg !12471

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12472
  %20 = icmp eq i32 %19, 0, !dbg !12475
  br i1 %20, label %25, label %21, !dbg !12476

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12477
  %23 = or i32 %22, 7168, !dbg !12477
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12477
  %24 = load i32, i32* %14, align 4, !dbg !12479
  br label %25, !dbg !12481

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12479
  %27 = and i32 %26, 8, !dbg !12482
  %28 = icmp eq i32 %27, 0, !dbg !12483
  br i1 %28, label %32, label %29, !dbg !12484

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12485
  %31 = or i32 %30, 57344, !dbg !12485
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12485
  br label %32, !dbg !12487

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12488
  %34 = and i32 %33, -241, !dbg !12488
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12488
  %36 = load i32, i32* %35, align 4, !dbg !12488
  %37 = or i32 %34, %36, !dbg !12488
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12488
  %38 = load i32, i32* %14, align 4, !dbg !12489
  br label %39, !dbg !12491

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12489
  %41 = and i32 %40, 1, !dbg !12492
  %42 = icmp eq i32 %41, 0, !dbg !12493
  br i1 %42, label %73, label %43, !dbg !12494

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12495
  %45 = load i32, i32* %44, align 4, !dbg !12495
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12498

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12499
  %48 = and i32 %47, 131072, !dbg !12502
  %49 = icmp eq i32 %48, 0, !dbg !12502
  br i1 %49, label %115, label %58, !dbg !12503

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12504
  %52 = and i32 %51, 33554432, !dbg !12508
  %53 = icmp eq i32 %52, 0, !dbg !12508
  br i1 %53, label %115, label %58, !dbg !12509

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12510
  %56 = and i32 %55, 2, !dbg !12513
  %57 = icmp eq i32 %56, 0, !dbg !12513
  br i1 %57, label %115, label %58, !dbg !12514

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12515
  %60 = and i32 %59, -4, !dbg !12515
  %61 = or i32 %60, %45, !dbg !12515
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12515
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12516
  call void @llvm.dbg.value(metadata i32 %62, metadata !12452, metadata !DIExpression()), !dbg !12453
  br label %63, !dbg !12517

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12518
  %65 = and i32 %64, 12, !dbg !12518
  %66 = load i32, i32* %44, align 4, !dbg !12519
  %67 = shl i32 %66, 2, !dbg !12520
  %68 = icmp eq i32 %65, %67, !dbg !12521
  br i1 %68, label %73, label %69, !dbg !12517

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12522
  %71 = sub i32 %70, %62, !dbg !12525
  %72 = icmp ugt i32 %71, 5000, !dbg !12526
  br i1 %72, label %115, label %63, !dbg !12527, !llvm.loop !12528

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12530
  %75 = and i32 %74, 7, !dbg !12530
  %76 = icmp ugt i32 %75, %1, !dbg !12532
  br i1 %76, label %77, label %82, !dbg !12533

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12534
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12534
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12536
  %80 = and i32 %79, 7, !dbg !12536
  %81 = icmp eq i32 %80, %1, !dbg !12538
  br i1 %81, label %82, label %115, !dbg !12539

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12540
  %84 = and i32 %83, 4, !dbg !12542
  %85 = icmp eq i32 %84, 0, !dbg !12543
  br i1 %85, label %93, label %86, !dbg !12544

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12545
  %88 = and i32 %87, -7169, !dbg !12545
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12545
  %90 = load i32, i32* %89, align 4, !dbg !12545
  %91 = or i32 %88, %90, !dbg !12545
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12545
  %92 = load i32, i32* %14, align 4, !dbg !12547
  br label %93, !dbg !12549

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12547
  %95 = and i32 %94, 8, !dbg !12550
  %96 = icmp eq i32 %95, 0, !dbg !12551
  br i1 %96, label %104, label %97, !dbg !12552

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12553
  %99 = and i32 %98, -57345, !dbg !12553
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12553
  %101 = load i32, i32* %100, align 4, !dbg !12553
  %102 = shl i32 %101, 3, !dbg !12553
  %103 = or i32 %102, %99, !dbg !12553
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12553
  br label %104, !dbg !12555

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !12556
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12557
  %107 = lshr i32 %106, 4, !dbg !12558
  %108 = and i32 %107, 15, !dbg !12558
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12559
  %110 = load i8, i8* %109, align 1, !dbg !12559
  %111 = zext i8 %110 to i32, !dbg !12559
  %112 = lshr i32 %105, %111, !dbg !12560
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12561
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12562
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12563
  br label %115, !dbg !12564

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12453
  ret i32 %116, !dbg !12565
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12566 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12568, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata i32 0, metadata !12569, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata i32 0, metadata !12570, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata i32 0, metadata !12571, metadata !DIExpression()), !dbg !12572
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12573
  %2 = and i32 %1, 12, !dbg !12574
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12575

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !12571, metadata !DIExpression()), !dbg !12572
  br label %24, !dbg !12576

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12579
  %6 = and i32 %5, 63, !dbg !12581
  call void @llvm.dbg.value(metadata i32 %6, metadata !12568, metadata !DIExpression()), !dbg !12572
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12582
  %8 = and i32 %7, 4194304, !dbg !12582
  %9 = icmp eq i32 %8, 0, !dbg !12584
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12585
  %11 = lshr i32 %10, 6, !dbg !12585
  %12 = and i32 %11, 511, !dbg !12585
  %13 = zext i32 %12 to i64, !dbg !12585
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !12585
  %16 = zext i32 %6 to i64, !dbg !12585
  %17 = udiv i64 %15, %16, !dbg !12585
  %18 = trunc i64 %17 to i32, !dbg !12585
  call void @llvm.dbg.value(metadata i32 %18, metadata !12569, metadata !DIExpression()), !dbg !12572
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12586
  %20 = lshr i32 %19, 15, !dbg !12587
  %21 = and i32 %20, 6, !dbg !12587
  %22 = add nuw nsw i32 %21, 2, !dbg !12587
  call void @llvm.dbg.value(metadata i32 %22, metadata !12570, metadata !DIExpression()), !dbg !12572
  %23 = udiv i32 %18, %22, !dbg !12588
  call void @llvm.dbg.value(metadata i32 %23, metadata !12571, metadata !DIExpression()), !dbg !12572
  br label %24, !dbg !12589

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !12590
  call void @llvm.dbg.value(metadata i32 %25, metadata !12571, metadata !DIExpression()), !dbg !12572
  ret i32 %25, !dbg !12591
}

; Function Attrs: optsize
declare !dbg !12592 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12595 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12599, metadata !DIExpression()), !dbg !12619
  call void @llvm.dbg.value(metadata i32 %1, metadata !12600, metadata !DIExpression()), !dbg !12619
  call void @llvm.dbg.value(metadata i32 %2, metadata !12601, metadata !DIExpression()), !dbg !12619
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !12620
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #24, !dbg !12620
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !12602, metadata !DIExpression()), !dbg !12621
  %8 = icmp eq i32 %0, 0, !dbg !12622
  br i1 %8, label %9, label %23, !dbg !12623

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12624
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12624
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12612, metadata !DIExpression()), !dbg !12624
  store volatile i32 0, i32* %5, align 4, !dbg !12624
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12624
  %12 = or i32 %11, 1, !dbg !12624
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12624
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12624
  %14 = and i32 %13, 1, !dbg !12624
  store volatile i32 %14, i32* %5, align 4, !dbg !12624
  %15 = load volatile i32, i32* %5, align 4, !dbg !12624
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12625
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12626
  store i32 256, i32* %16, align 4, !dbg !12627
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12628
  store i32 2, i32* %17, align 4, !dbg !12629
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12630
  store i32 3, i32* %18, align 4, !dbg !12631
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12632
  store i32 0, i32* %19, align 4, !dbg !12633
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12634
  store i32 0, i32* %20, align 4, !dbg !12635
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !12636
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12637
  %22 = and i32 %21, -123731969, !dbg !12637
  br label %38, !dbg !12638

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12639
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12639
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12616, metadata !DIExpression()), !dbg !12639
  store volatile i32 0, i32* %6, align 4, !dbg !12639
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12639
  %26 = or i32 %25, 4, !dbg !12639
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12639
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12639
  %28 = and i32 %27, 4, !dbg !12639
  store volatile i32 %28, i32* %6, align 4, !dbg !12639
  %29 = load volatile i32, i32* %6, align 4, !dbg !12639
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12640
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12641
  store i32 512, i32* %30, align 4, !dbg !12642
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12643
  store i32 2, i32* %31, align 4, !dbg !12644
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12645
  store i32 3, i32* %32, align 4, !dbg !12646
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12647
  store i32 0, i32* %33, align 4, !dbg !12648
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12649
  store i32 0, i32* %34, align 4, !dbg !12650
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !12651
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12652
  %36 = and i32 %35, 134217727, !dbg !12652
  %37 = shl i32 %2, 3, !dbg !12652
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12653
  %42 = or i32 %41, %40, !dbg !12653
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12653
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #24, !dbg !12654
  ret void, !dbg !12654
}

; Function Attrs: optsize
declare !dbg !12655 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !12659 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12660
  ret void, !dbg !12661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !12662 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12663
  ret void, !dbg !12664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !12665 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12666
  ret i32 %1, !dbg !12667
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !12668 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12669
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12670
  %3 = lshr i32 %2, 10, !dbg !12671
  %4 = and i32 %3, 7, !dbg !12671
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12672
  %6 = load i8, i8* %5, align 1, !dbg !12672
  %7 = zext i8 %6 to i32, !dbg !12672
  %8 = lshr i32 %1, %7, !dbg !12673
  ret i32 %8, !dbg !12674
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !12675 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12676
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12677
  %3 = lshr i32 %2, 13, !dbg !12678
  %4 = and i32 %3, 7, !dbg !12678
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12679
  %6 = load i8, i8* %5, align 1, !dbg !12679
  %7 = zext i8 %6 to i32, !dbg !12679
  %8 = lshr i32 %1, %7, !dbg !12680
  ret i32 %8, !dbg !12681
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12682 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12686, metadata !DIExpression()), !dbg !12687
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12688
  store i32 15, i32* %2, align 4, !dbg !12689
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12690
  %4 = and i32 %3, 262144, !dbg !12692
  %5 = icmp eq i32 %4, 0, !dbg !12693
  br i1 %5, label %8, label %6, !dbg !12694

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12695
  store i32 327680, i32* %7, align 4, !dbg !12697
  br label %15, !dbg !12698

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12699
  %10 = and i32 %9, 65536, !dbg !12701
  %11 = icmp eq i32 %10, 0, !dbg !12702
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12703
  br i1 %11, label %14, label %13, !dbg !12704

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12705
  br label %15, !dbg !12707

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12708
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12710
  %17 = and i32 %16, 1, !dbg !12712
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12713
  store i32 %17, i32* %18, align 4, !dbg !12715
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12716
  %20 = lshr i32 %19, 3, !dbg !12717
  %21 = and i32 %20, 31, !dbg !12717
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12718
  store i32 %21, i32* %22, align 4, !dbg !12719
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12720
  %24 = and i32 %23, 4, !dbg !12722
  %25 = icmp eq i32 %24, 0, !dbg !12723
  br i1 %25, label %28, label %26, !dbg !12724

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12725
  store i32 5, i32* %27, align 4, !dbg !12727
  br label %35, !dbg !12728

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12729
  %30 = and i32 %29, 1, !dbg !12731
  %31 = icmp eq i32 %30, 0, !dbg !12732
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12733
  br i1 %31, label %34, label %33, !dbg !12734

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12735
  br label %35, !dbg !12737

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12738
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12740
  %37 = and i32 %36, 1, !dbg !12742
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12743
  store i32 %37, i32* %38, align 4, !dbg !12745
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12746
  %40 = and i32 %39, 16777216, !dbg !12748
  %41 = icmp eq i32 %40, 0, !dbg !12749
  %42 = select i1 %41, i32 1, i32 2, !dbg !12750
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12751
  store i32 %42, i32* %43, align 4, !dbg !12753
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12754
  %45 = and i32 %44, 4194304, !dbg !12755
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12756
  store i32 %45, i32* %46, align 4, !dbg !12757
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12758
  %48 = and i32 %47, 63, !dbg !12759
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12760
  store i32 %48, i32* %49, align 4, !dbg !12761
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12762
  %51 = lshr i32 %50, 6, !dbg !12763
  %52 = and i32 %51, 511, !dbg !12763
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12764
  store i32 %52, i32* %53, align 4, !dbg !12765
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12766
  %55 = shl i32 %54, 1, !dbg !12767
  %56 = and i32 %55, 393216, !dbg !12767
  %57 = add nuw nsw i32 %56, 131072, !dbg !12767
  %58 = lshr exact i32 %57, 16, !dbg !12768
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12769
  store i32 %58, i32* %59, align 4, !dbg !12770
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12771
  %61 = lshr i32 %60, 24, !dbg !12772
  %62 = and i32 %61, 15, !dbg !12772
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12773
  store i32 %62, i32* %63, align 4, !dbg !12774
  ret void, !dbg !12775
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !12776 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12780, metadata !DIExpression()), !dbg !12782
  call void @llvm.dbg.value(metadata i32* %1, metadata !12781, metadata !DIExpression()), !dbg !12782
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12783
  store i32 15, i32* %3, align 4, !dbg !12784
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12785
  %5 = and i32 %4, 3, !dbg !12786
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12787
  store i32 %5, i32* %6, align 4, !dbg !12788
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12789
  %8 = and i32 %7, 240, !dbg !12790
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12791
  store i32 %8, i32* %9, align 4, !dbg !12792
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12793
  %11 = and i32 %10, 7168, !dbg !12794
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12795
  store i32 %11, i32* %12, align 4, !dbg !12796
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12797
  %14 = lshr i32 %13, 3, !dbg !12798
  %15 = and i32 %14, 7168, !dbg !12798
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12799
  store i32 %15, i32* %16, align 4, !dbg !12800
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12801
  %18 = and i32 %17, 7, !dbg !12802
  store i32 %18, i32* %1, align 4, !dbg !12803
  ret void, !dbg !12804
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12805 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12806
  %2 = and i32 %1, 128, !dbg !12806
  %3 = icmp eq i32 %2, 0, !dbg !12806
  br i1 %3, label %5, label %4, !dbg !12808

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !12809
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12811
  br label %5, !dbg !12812

5:                                                ; preds = %4, %0
  ret void, !dbg !12813
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12814 {
  ret void, !dbg !12815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !12816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12819, metadata !DIExpression()), !dbg !12820
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12821
  ret void, !dbg !12822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !12823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12826, metadata !DIExpression()), !dbg !12828
  call void @llvm.dbg.value(metadata i32 1000, metadata !12827, metadata !DIExpression()), !dbg !12828
  %2 = udiv i32 %0, 1000, !dbg !12829
  %3 = add nsw i32 %2, -1, !dbg !12830
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12831
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12832
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12833
  ret void, !dbg !12834
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !12835 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12837, metadata !DIExpression()), !dbg !12839
  %3 = bitcast i32* %2 to i8*, !dbg !12840
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12840
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12838, metadata !DIExpression()), !dbg !12841
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12842
  store volatile i32 %4, i32* %2, align 4, !dbg !12841
  %5 = load volatile i32, i32* %2, align 4, !dbg !12843
  %6 = icmp eq i32 %0, -1, !dbg !12844
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12837, metadata !DIExpression()), !dbg !12839
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12839
  call void @llvm.dbg.value(metadata i32 %8, metadata !12837, metadata !DIExpression()), !dbg !12839
  br label %9, !dbg !12846

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12837, metadata !DIExpression()), !dbg !12839
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12847
  call void @llvm.dbg.value(metadata i32 undef, metadata !12837, metadata !DIExpression()), !dbg !12839
  %12 = shl i32 %11, 15, !dbg !12839
  %13 = ashr i32 %12, 31, !dbg !12839
  %14 = add i32 %13, %10, !dbg !12839
  call void @llvm.dbg.value(metadata i32 %14, metadata !12837, metadata !DIExpression()), !dbg !12839
  %15 = icmp eq i32 %14, 0, !dbg !12846
  br i1 %15, label %16, label %9, !dbg !12846

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12850
  ret void, !dbg !12850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !12851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12853, metadata !DIExpression()), !dbg !12854
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12855
  ret void, !dbg !12856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12862, metadata !DIExpression()), !dbg !12867
  call void @llvm.dbg.value(metadata i32 0, metadata !12865, metadata !DIExpression()), !dbg !12867
  call void @llvm.dbg.value(metadata i32 0, metadata !12866, metadata !DIExpression()), !dbg !12867
  %2 = icmp eq i32 %0, 0, !dbg !12868
  br i1 %2, label %52, label %3, !dbg !12870

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12871
  %5 = icmp eq i32 %4, 16384, !dbg !12874
  br i1 %5, label %6, label %21, !dbg !12875

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12876
  %8 = select i1 %7, i32 0, i32 5, !dbg !12879
  call void @llvm.dbg.value(metadata i32 %8, metadata !12865, metadata !DIExpression()), !dbg !12867
  %9 = add i32 %0, -120000001, !dbg !12880
  %10 = icmp ult i32 %9, 30000000, !dbg !12880
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12880
  call void @llvm.dbg.value(metadata i32 %11, metadata !12865, metadata !DIExpression()), !dbg !12867
  %12 = icmp ult i32 %9, -30000000, !dbg !12882
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12882
  call void @llvm.dbg.value(metadata i32 %13, metadata !12865, metadata !DIExpression()), !dbg !12867
  %14 = icmp ugt i32 %0, 60000000, !dbg !12884
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12886
  br i1 %16, label %21, label %17, !dbg !12886

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12887
  %19 = and i1 %18, %15, !dbg !12890
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12890
  br label %21, !dbg !12890

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12867
  call void @llvm.dbg.value(metadata i32 %22, metadata !12865, metadata !DIExpression()), !dbg !12867
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12891
  %24 = icmp eq i32 %23, 0, !dbg !12893
  br i1 %24, label %25, label %41, !dbg !12894

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !12895
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12898
  %29 = select i1 %28, i32 4, i32 %22, !dbg !12898
  call void @llvm.dbg.value(metadata i32 %29, metadata !12865, metadata !DIExpression()), !dbg !12867
  %30 = icmp ugt i32 %0, 90000000, !dbg !12899
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12901
  %33 = select i1 %32, i32 3, i32 %29, !dbg !12901
  call void @llvm.dbg.value(metadata i32 %33, metadata !12865, metadata !DIExpression()), !dbg !12867
  %34 = icmp ugt i32 %0, 60000000, !dbg !12902
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12904
  br i1 %36, label %41, label %37, !dbg !12904

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !12905
  %39 = and i1 %38, %35, !dbg !12908
  %40 = select i1 %39, i32 1, i32 %33, !dbg !12908
  br label %41, !dbg !12908

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !12909
  call void @llvm.dbg.value(metadata i32 %42, metadata !12865, metadata !DIExpression()), !dbg !12867
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #26, !dbg !12910
  call void @llvm.dbg.value(metadata i32 2, metadata !12863, metadata !DIExpression()), !dbg !12867
  br label %43, !dbg !12911

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !12909
  call void @llvm.dbg.value(metadata i32 %44, metadata !12863, metadata !DIExpression()), !dbg !12867
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !12912
  call void @llvm.dbg.value(metadata i32 %45, metadata !12864, metadata !DIExpression()), !dbg !12867
  %46 = add nsw i32 %44, -1, !dbg !12914
  call void @llvm.dbg.value(metadata i32 %46, metadata !12863, metadata !DIExpression()), !dbg !12867
  %47 = icmp ne i32 %45, %42, !dbg !12915
  %48 = icmp ne i32 %46, 0, !dbg !12916
  %49 = select i1 %47, i1 %48, i1 false, !dbg !12916
  br i1 %49, label %43, label %50, !dbg !12917, !llvm.loop !12918

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !12920
  call void @llvm.dbg.value(metadata i32 %53, metadata !12866, metadata !DIExpression()), !dbg !12867
  ret i32 %53, !dbg !12921
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12922 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12924
  %2 = and i32 %1, 16384, !dbg !12924
  ret i32 %2, !dbg !12925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12928, metadata !DIExpression()), !dbg !12929
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12930
  %3 = and i32 %2, -8, !dbg !12930
  %4 = or i32 %3, %0, !dbg !12930
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12930
  ret void, !dbg !12931
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12932 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12933
  %2 = and i32 %1, 7, !dbg !12933
  ret i32 %2, !dbg !12934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12935 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12953, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12954, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.value(metadata i32 0, metadata !12955, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.value(metadata i32 0, metadata !12956, metadata !DIExpression()), !dbg !12957
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !12958
  %4 = icmp eq i32 %3, 0, !dbg !12960
  br i1 %4, label %5, label %21, !dbg !12961

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !12962
  call void @llvm.dbg.value(metadata i32 %6, metadata !12956, metadata !DIExpression()), !dbg !12957
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.94() #26, !dbg !12964
  %8 = icmp eq i32 %7, 1, !dbg !12966
  br i1 %8, label %13, label %9, !dbg !12967

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.95() #26, !dbg !12968
  br label %10, !dbg !12970

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.94() #26, !dbg !12971
  %12 = icmp eq i32 %11, 1, !dbg !12972
  br i1 %12, label %13, label %10, !dbg !12970, !llvm.loop !12973

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12975
  %15 = load i32, i32* %14, align 4, !dbg !12975
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12976
  %17 = load i32, i32* %16, align 4, !dbg !12976
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12977
  %19 = load i32, i32* %18, align 4, !dbg !12977
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.96(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !12978
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !12979
  call void @llvm.dbg.value(metadata i32 %20, metadata !12955, metadata !DIExpression()), !dbg !12957
  br label %21, !dbg !12980

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12981
  call void @llvm.dbg.value(metadata i32 %22, metadata !12955, metadata !DIExpression()), !dbg !12957
  ret i32 %22, !dbg !12982
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12983 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12987, metadata !DIExpression()), !dbg !12988
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.98() #26, !dbg !12989
  %2 = icmp ne i32 %1, 0, !dbg !12991
  call void @llvm.dbg.value(metadata i1 %2, metadata !12987, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12988
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !12992
  %4 = icmp ne i32 %3, 0, !dbg !12994
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12995
  %6 = zext i1 %5 to i32, !dbg !12995
  call void @llvm.dbg.value(metadata i32 %6, metadata !12987, metadata !DIExpression()), !dbg !12988
  ret i32 %6, !dbg !12996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13001, metadata !DIExpression()), !dbg !13004
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13002, metadata !DIExpression()), !dbg !13004
  call void @llvm.dbg.value(metadata i32 0, metadata !13003, metadata !DIExpression()), !dbg !13004
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13005
  %4 = load i32, i32* %3, align 4, !dbg !13005
  %5 = and i32 %4, 63, !dbg !13006
  %6 = udiv i32 %0, %5, !dbg !13007
  call void @llvm.dbg.value(metadata i32 %6, metadata !13003, metadata !DIExpression()), !dbg !13004
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13008
  %8 = load i32, i32* %7, align 4, !dbg !13008
  %9 = and i32 %8, 511, !dbg !13009
  %10 = mul i32 %9, %6, !dbg !13010
  call void @llvm.dbg.value(metadata i32 %10, metadata !13003, metadata !DIExpression()), !dbg !13004
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13011
  %12 = load i32, i32* %11, align 4, !dbg !13011
  %13 = lshr i32 %12, 15, !dbg !13012
  %14 = and i32 %13, 131070, !dbg !13012
  %15 = add nuw nsw i32 %14, 2, !dbg !13012
  %16 = udiv i32 %10, %15, !dbg !13013
  call void @llvm.dbg.value(metadata i32 %16, metadata !13003, metadata !DIExpression()), !dbg !13004
  ret i32 %16, !dbg !13014
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.94() unnamed_addr #16 !dbg !13015 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13016
  %2 = lshr i32 %1, 1, !dbg !13017
  %3 = and i32 %2, 1, !dbg !13017
  ret i32 %3, !dbg !13018
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.95() unnamed_addr #15 !dbg !13019 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13020
  %2 = or i32 %1, 1, !dbg !13020
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13020
  ret void, !dbg !13021
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.96(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !13022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13024, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i32 %1, metadata !13025, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i32 %2, metadata !13026, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i32 %3, metadata !13027, metadata !DIExpression()), !dbg !13028
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13029
  %6 = and i32 %5, -4227072, !dbg !13029
  %7 = or i32 %1, %0, !dbg !13029
  %8 = shl i32 %2, 6, !dbg !13029
  %9 = or i32 %7, %8, !dbg !13029
  %10 = or i32 %9, %6, !dbg !13029
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13029
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13030
  %12 = and i32 %11, -196609, !dbg !13030
  %13 = or i32 %12, %3, !dbg !13030
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13030
  ret void, !dbg !13031
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !13032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13036, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13037, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.value(metadata i32 0, metadata !13038, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.value(metadata i32 0, metadata !13039, metadata !DIExpression()), !dbg !13040
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13041
  %4 = load i32, i32* %3, align 4, !dbg !13041
  %5 = lshr i32 %4, 4, !dbg !13041
  %6 = and i32 %5, 15, !dbg !13041
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13041
  %8 = load i8, i8* %7, align 1, !dbg !13041
  %9 = zext i8 %8 to i32, !dbg !13041
  %10 = lshr i32 %0, %9, !dbg !13041
  call void @llvm.dbg.value(metadata i32 %10, metadata !13039, metadata !DIExpression()), !dbg !13040
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13042
  %12 = icmp ult i32 %11, %10, !dbg !13044
  br i1 %12, label %13, label %16, !dbg !13045

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13046
  call void @llvm.dbg.value(metadata i32 %14, metadata !13038, metadata !DIExpression()), !dbg !13040
  %15 = icmp eq i32 %14, 0, !dbg !13048
  br i1 %15, label %16, label %30, !dbg !13050

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.97() #26, !dbg !13051
  br label %17, !dbg !13053

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.98() #26, !dbg !13054
  %19 = icmp eq i32 %18, 1, !dbg !13055
  br i1 %19, label %20, label %17, !dbg !13053, !llvm.loop !13056

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13058
  tail call fastcc void @LL_RCC_SetAHBPrescaler.99(i32 noundef %21) #26, !dbg !13059
  tail call fastcc void @LL_RCC_SetSysClkSource.100() #26, !dbg !13060
  br label %22, !dbg !13061

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.101() #26, !dbg !13062
  %24 = icmp eq i32 %23, 8, !dbg !13063
  br i1 %24, label %25, label %22, !dbg !13061, !llvm.loop !13064

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13066
  %27 = load i32, i32* %26, align 4, !dbg !13066
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.102(i32 noundef %27) #26, !dbg !13067
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13068
  %29 = load i32, i32* %28, align 4, !dbg !13068
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.103(i32 noundef %29) #26, !dbg !13069
  br label %30, !dbg !13070

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13071
  %33 = icmp ugt i32 %32, %10, !dbg !13073
  br i1 %33, label %34, label %36, !dbg !13074

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13075
  call void @llvm.dbg.value(metadata i32 %35, metadata !13038, metadata !DIExpression()), !dbg !13040
  br label %36, !dbg !13077

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13040
  call void @llvm.dbg.value(metadata i32 %37, metadata !13038, metadata !DIExpression()), !dbg !13040
  %38 = icmp eq i32 %37, 0, !dbg !13078
  br i1 %38, label %39, label %40, !dbg !13080

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13081
  br label %40, !dbg !13083

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13084
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.97() unnamed_addr #15 !dbg !13085 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13086
  %2 = or i32 %1, 16777216, !dbg !13086
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13086
  ret void, !dbg !13087
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.98() unnamed_addr #16 !dbg !13088 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13089
  %2 = lshr i32 %1, 25, !dbg !13090
  %3 = and i32 %2, 1, !dbg !13090
  ret i32 %3, !dbg !13091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.99(i32 noundef %0) unnamed_addr #15 !dbg !13092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13094, metadata !DIExpression()), !dbg !13095
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13096
  %3 = and i32 %2, -241, !dbg !13096
  %4 = or i32 %3, %0, !dbg !13096
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13096
  ret void, !dbg !13097
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.100() unnamed_addr #15 !dbg !13098 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13100, metadata !DIExpression()), !dbg !13101
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13102
  %2 = and i32 %1, -4, !dbg !13102
  %3 = or i32 %2, 2, !dbg !13102
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13102
  ret void, !dbg !13103
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.101() unnamed_addr #16 !dbg !13104 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13105
  %2 = and i32 %1, 12, !dbg !13105
  ret i32 %2, !dbg !13106
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.102(i32 noundef %0) unnamed_addr #15 !dbg !13107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13109, metadata !DIExpression()), !dbg !13110
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13111
  %3 = and i32 %2, -7169, !dbg !13111
  %4 = or i32 %3, %0, !dbg !13111
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13111
  ret void, !dbg !13112
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.103(i32 noundef %0) unnamed_addr #15 !dbg !13113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13115, metadata !DIExpression()), !dbg !13116
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13117
  %3 = and i32 %2, -57345, !dbg !13117
  %4 = or i32 %3, %0, !dbg !13117
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13117
  ret void, !dbg !13118
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !13119 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13120
  %2 = lshr i32 %1, 27, !dbg !13121
  %3 = and i32 %2, 1, !dbg !13121
  ret i32 %3, !dbg !13122
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13127, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i32 %1, metadata !13128, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13129, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13130, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i32 0, metadata !13131, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i32 0, metadata !13132, metadata !DIExpression()), !dbg !13133
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13134
  %6 = icmp eq i32 %5, 0, !dbg !13136
  br i1 %6, label %7, label %27, !dbg !13137

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !13138
  call void @llvm.dbg.value(metadata i32 %8, metadata !13132, metadata !DIExpression()), !dbg !13133
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.104() #26, !dbg !13140
  %10 = icmp eq i32 %9, 1, !dbg !13142
  br i1 %10, label %19, label %11, !dbg !13143

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13144
  br i1 %12, label %13, label %14, !dbg !13147

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13148
  br label %15, !dbg !13150

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.105() #26, !dbg !13151
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.106() #26, !dbg !13153
  br label %16, !dbg !13154

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.104() #26, !dbg !13155
  %18 = icmp eq i32 %17, 1, !dbg !13156
  br i1 %18, label %19, label %16, !dbg !13154, !llvm.loop !13157

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13159
  %21 = load i32, i32* %20, align 4, !dbg !13159
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13160
  %23 = load i32, i32* %22, align 4, !dbg !13160
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13161
  %25 = load i32, i32* %24, align 4, !dbg !13161
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.96(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !13162
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13163
  call void @llvm.dbg.value(metadata i32 %26, metadata !13131, metadata !DIExpression()), !dbg !13133
  br label %27, !dbg !13164

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13165
  call void @llvm.dbg.value(metadata i32 %28, metadata !13131, metadata !DIExpression()), !dbg !13133
  ret i32 %28, !dbg !13166
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.104() unnamed_addr #16 !dbg !13167 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13168
  %2 = lshr i32 %1, 17, !dbg !13169
  %3 = and i32 %2, 1, !dbg !13169
  ret i32 %3, !dbg !13170
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13171 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13172
  %2 = or i32 %1, 262144, !dbg !13172
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13172
  ret void, !dbg !13173
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.105() unnamed_addr #15 !dbg !13174 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13175
  %2 = and i32 %1, -262145, !dbg !13175
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13175
  ret void, !dbg !13176
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.106() unnamed_addr #15 !dbg !13177 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13178
  %2 = or i32 %1, 65536, !dbg !13178
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13178
  ret void, !dbg !13179
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13180 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13183, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.value(metadata i32 undef, metadata !13183, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.value(metadata i32 undef, metadata !13183, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13199
  ret void, !dbg !13200
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13201 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13205, metadata !DIExpression()), !dbg !13207
  %2 = icmp eq i8* %0, null, !dbg !13208
  br i1 %2, label %29, label %3, !dbg !13210

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13211
  %5 = icmp eq i8 %4, 0, !dbg !13212
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13213
  br i1 %6, label %29, label %8, !dbg !13213

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13206, metadata !DIExpression()), !dbg !13207
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13214

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13206, metadata !DIExpression()), !dbg !13207
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13216
  br i1 %10, label %11, label %15, !dbg !13221

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13222
  %13 = load i8*, i8** %12, align 4, !dbg !13222
  %14 = icmp eq i8* %13, %0, !dbg !13223
  br i1 %14, label %29, label %15, !dbg !13224

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13225
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13206, metadata !DIExpression()), !dbg !13207
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13226
  br i1 %17, label %7, label %8, !dbg !13227, !llvm.loop !13228

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13206, metadata !DIExpression()), !dbg !13207
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13230
  br i1 %20, label %21, label %26, !dbg !13234

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13235
  %23 = load i8*, i8** %22, align 4, !dbg !13235
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13236
  %25 = icmp eq i32 %24, 0, !dbg !13237
  br i1 %25, label %29, label %26, !dbg !13238

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13239
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13206, metadata !DIExpression()), !dbg !13207
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13240
  br i1 %28, label %29, label %18, !dbg !13214, !llvm.loop !13241

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13207
  ret %struct.device* %30, !dbg !13243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !13244 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13248, metadata !DIExpression()), !dbg !13249
  %2 = icmp eq %struct.device* %0, null, !dbg !13250
  br i1 %2, label %14, label %3, !dbg !13252

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13253
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13253
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13254
  %7 = load i8, i8* %6, align 1, !dbg !13254
  %8 = and i8 %7, 1, !dbg !13254
  %9 = icmp eq i8 %8, 0, !dbg !13254
  br i1 %9, label %14, label %10, !dbg !13255

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13256
  %12 = load i8, i8* %11, align 1, !dbg !13256
  %13 = icmp eq i8 %12, 0, !dbg !13257
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13249
  ret i1 %15, !dbg !13258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !13259 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13264, metadata !DIExpression()), !dbg !13265
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13266
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13267
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13268 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13276, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13277, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata i8* %2, metadata !13278, metadata !DIExpression()), !dbg !13281
  %5 = bitcast i32* %4 to i8*, !dbg !13282
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13282
  call void @llvm.dbg.value(metadata i32 0, metadata !13279, metadata !DIExpression()), !dbg !13281
  store i32 0, i32* %4, align 4, !dbg !13283
  call void @llvm.dbg.value(metadata i32* %4, metadata !13279, metadata !DIExpression(DW_OP_deref)), !dbg !13281
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13284
  call void @llvm.dbg.value(metadata i16* %6, metadata !13280, metadata !DIExpression()), !dbg !13281
  %7 = load i32, i32* %4, align 4, !dbg !13285
  call void @llvm.dbg.value(metadata i32 %7, metadata !13279, metadata !DIExpression()), !dbg !13281
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13286
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13287
  ret i32 %8, !dbg !13288
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13289 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13293, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata i32* %1, metadata !13294, metadata !DIExpression()), !dbg !13299
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13300
  %4 = load i16*, i16** %3, align 4, !dbg !13300
  call void @llvm.dbg.value(metadata i16* %4, metadata !13295, metadata !DIExpression()), !dbg !13299
  %5 = icmp eq i16* %4, null, !dbg !13301
  br i1 %5, label %14, label %6, !dbg !13302

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13303
  call void @llvm.dbg.value(metadata i32 %7, metadata !13296, metadata !DIExpression()), !dbg !13303
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13304
  %9 = load i16, i16* %8, align 2, !dbg !13304
  %10 = add i16 %9, -32767, !dbg !13305
  %11 = icmp ult i16 %10, 2, !dbg !13305
  %12 = add i32 %7, 1, !dbg !13306
  call void @llvm.dbg.value(metadata i32 %12, metadata !13296, metadata !DIExpression()), !dbg !13303
  br i1 %11, label %13, label %6, !dbg !13305, !llvm.loop !13308

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13311
  br label %14, !dbg !13312

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13314 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13318, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i32 %1, metadata !13319, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13320, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i8* %3, metadata !13321, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i32 0, metadata !13322, metadata !DIExpression()), !dbg !13330
  %5 = icmp eq i32 %1, 0, !dbg !13331
  br i1 %5, label %16, label %8, !dbg !13332

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13322, metadata !DIExpression()), !dbg !13330
  %7 = icmp eq i32 %15, %1, !dbg !13331
  br i1 %7, label %16, label %8, !dbg !13332, !llvm.loop !13333

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13322, metadata !DIExpression()), !dbg !13330
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13335
  %11 = load i16, i16* %10, align 2, !dbg !13335
  call void @llvm.dbg.value(metadata i16 %11, metadata !13324, metadata !DIExpression()), !dbg !13336
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !13337
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13327, metadata !DIExpression()), !dbg !13336
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13338
  call void @llvm.dbg.value(metadata i32 %13, metadata !13328, metadata !DIExpression()), !dbg !13336
  %14 = icmp slt i32 %13, 0, !dbg !13339
  %15 = add nuw i32 %9, 1, !dbg !13341
  call void @llvm.dbg.value(metadata i32 %15, metadata !13322, metadata !DIExpression()), !dbg !13330
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !13343 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13347, metadata !DIExpression()), !dbg !13350
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13348, metadata !DIExpression()), !dbg !13350
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13349, metadata !DIExpression()), !dbg !13350
  %2 = sext i16 %0 to i32, !dbg !13351
  %3 = icmp slt i16 %0, 1, !dbg !13353
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13354
  %6 = add nsw i32 %2, -1, !dbg !13354
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13354
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13354
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13348, metadata !DIExpression()), !dbg !13350
  ret %struct.device* %8, !dbg !13355
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13356 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13358, metadata !DIExpression()), !dbg !13363
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13359, metadata !DIExpression()), !dbg !13363
  call void @llvm.dbg.value(metadata i8* %2, metadata !13360, metadata !DIExpression()), !dbg !13363
  %5 = bitcast i32* %4 to i8*, !dbg !13364
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13364
  call void @llvm.dbg.value(metadata i32 0, metadata !13361, metadata !DIExpression()), !dbg !13363
  store i32 0, i32* %4, align 4, !dbg !13365
  call void @llvm.dbg.value(metadata i32* %4, metadata !13361, metadata !DIExpression(DW_OP_deref)), !dbg !13363
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13366
  call void @llvm.dbg.value(metadata i16* %6, metadata !13362, metadata !DIExpression()), !dbg !13363
  %7 = load i32, i32* %4, align 4, !dbg !13367
  call void @llvm.dbg.value(metadata i32 %7, metadata !13361, metadata !DIExpression()), !dbg !13363
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13368
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13369
  ret i32 %8, !dbg !13370
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13371 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13373, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.value(metadata i32* %1, metadata !13374, metadata !DIExpression()), !dbg !13378
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13379
  %4 = load i16*, i16** %3, align 4, !dbg !13379
  call void @llvm.dbg.value(metadata i16* %4, metadata !13375, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.value(metadata i32 0, metadata !13376, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.value(metadata i32 0, metadata !13377, metadata !DIExpression()), !dbg !13378
  %5 = icmp eq i16* %4, null, !dbg !13380
  br i1 %5, label %22, label %6, !dbg !13382

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13376, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.value(metadata i16* %8, metadata !13375, metadata !DIExpression()), !dbg !13378
  %9 = load i16, i16* %8, align 2, !dbg !13383
  %10 = icmp eq i16 %9, -32768, !dbg !13387
  call void @llvm.dbg.value(metadata i32 undef, metadata !13376, metadata !DIExpression()), !dbg !13378
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13388
  call void @llvm.dbg.value(metadata i16* %11, metadata !13375, metadata !DIExpression()), !dbg !13378
  %12 = zext i1 %10 to i32, !dbg !13389
  %13 = add i32 %7, %12, !dbg !13389
  call void @llvm.dbg.value(metadata i32 %13, metadata !13376, metadata !DIExpression()), !dbg !13378
  %14 = icmp eq i32 %13, 2, !dbg !13390
  br i1 %14, label %15, label %6, !dbg !13391

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13378
  call void @llvm.dbg.value(metadata i32 %16, metadata !13377, metadata !DIExpression()), !dbg !13378
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13392
  %18 = load i16, i16* %17, align 2, !dbg !13392
  %19 = icmp eq i16 %18, 32767, !dbg !13393
  %20 = add i32 %16, 1, !dbg !13394
  call void @llvm.dbg.value(metadata i32 %20, metadata !13377, metadata !DIExpression()), !dbg !13378
  br i1 %19, label %21, label %15, !dbg !13396, !llvm.loop !13397

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13399
  br label %22, !dbg !13400

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13401
  call void @llvm.dbg.value(metadata i16* %23, metadata !13375, metadata !DIExpression()), !dbg !13378
  ret i16* %23, !dbg !13402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !13403 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13404
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13405
  ret i32* %2, !dbg !13406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !13407 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13555, metadata !DIExpression()), !dbg !13558
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13556, metadata !DIExpression()), !dbg !13558
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13557, metadata !DIExpression()), !dbg !13558
  ret void, !dbg !13559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13564, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata i32 %1, metadata !13565, metadata !DIExpression()), !dbg !13566
  ret void, !dbg !13567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13568 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13572, metadata !DIExpression()), !dbg !13574
  call void @llvm.dbg.value(metadata i32 %1, metadata !13573, metadata !DIExpression()), !dbg !13574
  ret void, !dbg !13575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13580, metadata !DIExpression()), !dbg !13582
  call void @llvm.dbg.value(metadata i8* %1, metadata !13581, metadata !DIExpression()), !dbg !13582
  ret i32 -134, !dbg !13583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13588, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.value(metadata i8* %1, metadata !13589, metadata !DIExpression()), !dbg !13590
  ret i32 -134, !dbg !13591
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13595, metadata !DIExpression()), !dbg !13596
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13597, !srcloc !13603
  call void @llvm.dbg.value(metadata i32 undef, metadata !13600, metadata !DIExpression()) #24, !dbg !13604
  call void @llvm.dbg.value(metadata i32 undef, metadata !13601, metadata !DIExpression()) #24, !dbg !13604
  br label %3, !dbg !13605

3:                                                ; preds = %3, %1
  br label %3, !dbg !13606, !llvm.loop !13609
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13616, metadata !DIExpression()), !dbg !13618
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13617, metadata !DIExpression()), !dbg !13618
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13619
  unreachable, !dbg !13619
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13622, metadata !DIExpression()), !dbg !13623
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13624
  unreachable, !dbg !13624
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13625 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13627, metadata !DIExpression()), !dbg !13631
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13628, metadata !DIExpression()), !dbg !13631
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13632, !srcloc !13603
  call void @llvm.dbg.value(metadata i32 undef, metadata !13600, metadata !DIExpression()) #24, !dbg !13634
  call void @llvm.dbg.value(metadata i32 undef, metadata !13601, metadata !DIExpression()) #24, !dbg !13634
  call void @llvm.dbg.value(metadata i32 undef, metadata !13629, metadata !DIExpression()), !dbg !13631
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13630, metadata !DIExpression()), !dbg !13631
  %4 = icmp eq %struct.__esf* %1, null, !dbg !13635
  br i1 %4, label %6, label %5, !dbg !13637

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !13638
  br label %7, !dbg !13639

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !13638
  br label %7, !dbg !13642

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !13632
  call void @llvm.dbg.value(metadata i32 %8, metadata !13600, metadata !DIExpression()) #24, !dbg !13634
  call void @llvm.dbg.value(metadata i32 %8, metadata !13629, metadata !DIExpression()), !dbg !13631
  %9 = tail call fastcc %struct.k_thread* @k_current_get.115() #27, !dbg !13644
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13630, metadata !DIExpression()), !dbg !13631
  call void @llvm.dbg.value(metadata i32 undef, metadata !13645, metadata !DIExpression()) #24, !dbg !13648
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !13650, !srcloc !13651
  tail call fastcc void @k_thread_abort.116(%struct.k_thread* noundef %9) #26, !dbg !13652
  ret void, !dbg !13655
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.115() unnamed_addr #9 !dbg !13656 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.117() #27, !dbg !13660
  ret %struct.k_thread* %1, !dbg !13661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.116(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13666, metadata !DIExpression()), !dbg !13667
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13668, !srcloc !13670
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13671
  ret void, !dbg !13672
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.117() unnamed_addr #9 !dbg !13673 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13674, !srcloc !13676
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13677
  ret %struct.k_thread* %1, !dbg !13678
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13679 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13683, metadata !DIExpression()), !dbg !13686
  call void @llvm.dbg.value(metadata i32 %1, metadata !13684, metadata !DIExpression()), !dbg !13686
  call void @llvm.dbg.value(metadata i32 %2, metadata !13685, metadata !DIExpression()), !dbg !13686
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13687
  ret void, !dbg !13688
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13689 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13693, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i8* %1, metadata !13694, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i32 %2, metadata !13695, metadata !DIExpression()), !dbg !13696
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13697
  ret void, !dbg !13698
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13699 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13700
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #26, !dbg !13701
  ret void, !dbg !13702
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13705, metadata !DIExpression()), !dbg !13706
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13707
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13708
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13709
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13710
  %4 = trunc i32 %0 to i8, !dbg !13711
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13712
  store i8 %4, i8* %5, align 4, !dbg !13713
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13714
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13715
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13716
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13717
  store i8* %8, i8** %9, align 4, !dbg !13718
  ret void, !dbg !13719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13722, metadata !DIExpression()), !dbg !13728
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13729
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13723, metadata !DIExpression()), !dbg !13728
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13730
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13724, metadata !DIExpression()), !dbg !13728
  call void @llvm.dbg.value(metadata i8* null, metadata !13727, metadata !DIExpression()), !dbg !13728
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13731
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13732
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !13733
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13734
  ret void, !dbg !13735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13736 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13740, metadata !DIExpression()), !dbg !13741
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13742
  ret i8* %2, !dbg !13743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13744 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13749, metadata !DIExpression()), !dbg !13750
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13751
  %3 = load i8, i8* %2, align 1, !dbg !13752
  %4 = and i8 %3, -5, !dbg !13752
  store i8 %4, i8* %2, align 1, !dbg !13752
  ret void, !dbg !13753
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !13754 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13757
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13758
  %3 = ptrtoint i8* %2 to i32, !dbg !13767
  %4 = add i32 %3, 2048, !dbg !13768
  call void @llvm.dbg.value(metadata i32 %4, metadata !13762, metadata !DIExpression()) #24, !dbg !13769
  call void @llvm.dbg.value(metadata i32 %4, metadata !13770, metadata !DIExpression()) #24, !dbg !13773
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !13775, !srcloc !13776
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13777
  %6 = or i32 %5, 512, !dbg !13777
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13777
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -2, i32 noundef 255) #25, !dbg !13778
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -5, i32 noundef 0) #25, !dbg !13781
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -12, i32 noundef 0) #25, !dbg !13782
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -11, i32 noundef 0) #25, !dbg !13783
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -10, i32 noundef 0) #25, !dbg !13784
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -4, i32 noundef 0) #25, !dbg !13785
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13786
  %8 = or i32 %7, 458752, !dbg !13786
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13786
  tail call void @z_arm_fault_init() #25, !dbg !13787
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13788
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13789
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13792
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13793
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13794
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13795
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !13795
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13756, metadata !DIExpression()), !dbg !13796
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !13797
  call void @z_device_state_init() #25, !dbg !13798
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !13799
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !13800
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !13801
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !13802
  unreachable, !dbg !13802
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2196, metadata !DIExpression()), !dbg !13803
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13804
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13804
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2197, metadata !DIExpression()), !dbg !13803
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2197, metadata !DIExpression()), !dbg !13803
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13805
  br i1 %7, label %8, label %35, !dbg !13806

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2197, metadata !DIExpression()), !dbg !13803
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13807
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13807
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2207, metadata !DIExpression()), !dbg !13808
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13809
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13809
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13810
  call void @llvm.dbg.value(metadata i32 %14, metadata !2211, metadata !DIExpression()), !dbg !13808
  %15 = icmp eq %struct.device* %11, null, !dbg !13811
  br i1 %15, label %32, label %16, !dbg !13813

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13814
  br i1 %17, label %26, label %18, !dbg !13817

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13818
  call void @llvm.dbg.value(metadata i32 %19, metadata !2211, metadata !DIExpression()), !dbg !13808
  %20 = icmp ult i32 %19, 255, !dbg !13820
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13820
  call void @llvm.dbg.value(metadata i32 %21, metadata !2211, metadata !DIExpression()), !dbg !13808
  %22 = trunc i32 %21 to i8, !dbg !13821
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13822
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13822
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13823
  store i8 %22, i8* %25, align 1, !dbg !13824
  br label %26, !dbg !13825

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13826
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13826
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13827
  %30 = load i8, i8* %29, align 1, !dbg !13828
  %31 = or i8 %30, 1, !dbg !13828
  store i8 %31, i8* %29, align 1, !dbg !13828
  br label %32, !dbg !13829

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13830
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2197, metadata !DIExpression()), !dbg !13803
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13805
  br i1 %34, label %8, label %35, !dbg !13806, !llvm.loop !13831

35:                                               ; preds = %32, %1
  ret void, !dbg !13833
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.124(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13836, metadata !DIExpression()), !dbg !13838
  call void @llvm.dbg.value(metadata i32 %1, metadata !13837, metadata !DIExpression()), !dbg !13838
  %3 = trunc i32 %1 to i8, !dbg !13839
  %4 = shl i8 %3, 4, !dbg !13839
  %5 = and i32 %0, 15, !dbg !13842
  %6 = add nsw i32 %5, -4, !dbg !13843
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13844
  store volatile i8 %4, i8* %7, align 1, !dbg !13845
  ret void, !dbg !13846
}

; Function Attrs: optsize
declare !dbg !13847 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !13848 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13851, metadata !DIExpression()), !dbg !13852
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13853
  store i8 1, i8* %2, align 1, !dbg !13854
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13855
  store i8 1, i8* %3, align 4, !dbg !13856
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13857
  store i32 0, i32* %4, align 4, !dbg !13858
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13859
  store i32 0, i32* %5, align 4, !dbg !13860
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13861
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13862
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13863
  ret void, !dbg !13864
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13865 {
  tail call void @z_sched_init() #25, !dbg !13870
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13871
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0)) #25, !dbg !13872
  call void @llvm.dbg.value(metadata i8* %1, metadata !13869, metadata !DIExpression()), !dbg !13873
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13874
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13875
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !13876
  ret i8* %1, !dbg !13877
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !13878 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13882, metadata !DIExpression()), !dbg !13883
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13884
  unreachable, !dbg !13885
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13886 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13888, metadata !DIExpression()), !dbg !13891
  call void @llvm.dbg.value(metadata i8* %1, metadata !13889, metadata !DIExpression()), !dbg !13891
  call void @llvm.dbg.value(metadata i8* %2, metadata !13890, metadata !DIExpression()), !dbg !13891
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13892
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !13893
  tail call void @boot_banner() #25, !dbg !13894
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !13895
  tail call void @z_init_static_threads() #25, !dbg !13896
  tail call void @main() #25, !dbg !13897
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13898
  %5 = and i8 %4, -2, !dbg !13898
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13898
  ret void, !dbg !13899
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13900 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13910, metadata !DIExpression()), !dbg !13912
  call void @llvm.dbg.value(metadata i8* %1, metadata !13911, metadata !DIExpression()), !dbg !13912
  ret void, !dbg !13913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13914 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13916, metadata !DIExpression()), !dbg !13918
  call void @llvm.dbg.value(metadata i8* %1, metadata !13917, metadata !DIExpression()), !dbg !13918
  ret void, !dbg !13919
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13920 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13921, !srcloc !13928
  call void @llvm.dbg.value(metadata i32 %1, metadata !13924, metadata !DIExpression()) #24, !dbg !13929
  %2 = icmp ne i32 %1, 0, !dbg !13930
  ret i1 %2, !dbg !13931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13932 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13933
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13934
  %3 = load i8, i8* %2, align 4, !dbg !13935
  %4 = or i8 %3, 1, !dbg !13935
  store i8 %4, i8* %2, align 4, !dbg !13935
  ret void, !dbg !13936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13937 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13938
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13939
  %3 = load i8, i8* %2, align 4, !dbg !13940
  %4 = and i8 %3, -2, !dbg !13940
  store i8 %4, i8* %2, align 4, !dbg !13940
  ret void, !dbg !13941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13942 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13943
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13944
  %3 = load i8, i8* %2, align 4, !dbg !13944
  %4 = and i8 %3, 1, !dbg !13945
  %5 = icmp ne i8 %4, 0, !dbg !13946
  ret i1 %5, !dbg !13947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13948 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13952, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i8* %1, metadata !13953, metadata !DIExpression()), !dbg !13954
  ret i32 -88, !dbg !13955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13956 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13960, metadata !DIExpression()), !dbg !13961
  ret i8* null, !dbg !13962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13963 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13967, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.value(metadata i8* %1, metadata !13968, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.value(metadata i32 %2, metadata !13969, metadata !DIExpression()), !dbg !13970
  ret i32 -88, !dbg !13971
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2332, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata i8* %1, metadata !2333, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata i32 %2, metadata !2334, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata i32 0, metadata !2335, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata i8 undef, metadata !2337, metadata !DIExpression()), !dbg !13972
  %4 = icmp eq i8* %1, null, !dbg !13973
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13975
  br i1 %6, label %46, label %7, !dbg !13975

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13976
  %9 = load i8, i8* %8, align 1, !dbg !13976
  call void @llvm.dbg.value(metadata i8 %9, metadata !2337, metadata !DIExpression()), !dbg !13972
  %10 = add i32 %2, -1, !dbg !13977
  call void @llvm.dbg.value(metadata i32 %10, metadata !2334, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata i8 0, metadata !2338, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata i8 %9, metadata !2337, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata i32 0, metadata !2335, metadata !DIExpression()), !dbg !13972
  %11 = icmp eq i8 %9, 0, !dbg !13979
  br i1 %11, label %12, label %15, !dbg !13981

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13982
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13983
  store i8 0, i8* %14, align 1, !dbg !13984
  br label %46, !dbg !13985

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2338, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata i8 %17, metadata !2337, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata i32 %18, metadata !2335, metadata !DIExpression()), !dbg !13972
  %19 = zext i8 %17 to i32, !dbg !13986
  %20 = zext i8 %16 to i32, !dbg !13987
  %21 = shl nuw i32 1, %20, !dbg !13987
  call void @llvm.dbg.value(metadata i32 %21, metadata !2336, metadata !DIExpression()), !dbg !13972
  %22 = and i32 %21, %19, !dbg !13989
  %23 = icmp eq i32 %22, 0, !dbg !13991
  br i1 %23, label %42, label %24, !dbg !13992

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13993
  %26 = sub i32 %10, %18, !dbg !13994
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13995
  %28 = load i8*, i8** %27, align 4, !dbg !13995
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13996
  %30 = load i32, i32* %29, align 4, !dbg !13996
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !13997
  %32 = add i32 %31, %18, !dbg !13998
  call void @llvm.dbg.value(metadata i32 %32, metadata !2335, metadata !DIExpression()), !dbg !13972
  %33 = trunc i32 %21 to i8, !dbg !13999
  %34 = xor i8 %33, -1, !dbg !13999
  %35 = and i8 %17, %34, !dbg !13999
  call void @llvm.dbg.value(metadata i8 %35, metadata !2337, metadata !DIExpression()), !dbg !13972
  %36 = icmp eq i8 %35, 0, !dbg !14000
  br i1 %36, label %12, label %37, !dbg !14002

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14003
  %39 = sub i32 %10, %32, !dbg !14005
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.128, i32 0, i32 0), i32 noundef 1) #26, !dbg !14006
  %41 = add i32 %40, %32, !dbg !14007
  call void @llvm.dbg.value(metadata i32 %41, metadata !2335, metadata !DIExpression()), !dbg !13972
  br label %42, !dbg !14008

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13972
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13972
  call void @llvm.dbg.value(metadata i8 %44, metadata !2337, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata i32 %43, metadata !2335, metadata !DIExpression()), !dbg !13972
  %45 = add i8 %16, 1, !dbg !14009
  call void @llvm.dbg.value(metadata i8 %45, metadata !2338, metadata !DIExpression()), !dbg !13978
  br label %15, !dbg !13981

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.129, i32 0, i32 0), %3 ], !dbg !13972
  ret i8* %47, !dbg !14010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14011 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14015, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.value(metadata i32 %1, metadata !14016, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.value(metadata i8* %2, metadata !14017, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.value(metadata i32 %3, metadata !14018, metadata !DIExpression()), !dbg !14020
  %5 = icmp ult i32 %1, %3, !dbg !14021
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14021
  call void @llvm.dbg.value(metadata i32 %6, metadata !14019, metadata !DIExpression()), !dbg !14020
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14022
  ret i32 %6, !dbg !14023
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14024 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14028, metadata !DIExpression()), !dbg !14029
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14030
  ret void, !dbg !14031
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14032 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14041, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14042, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.value(metadata i32 %2, metadata !14043, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14044, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.value(metadata i8* %4, metadata !14045, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.value(metadata i8* %5, metadata !14046, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.value(metadata i8* %6, metadata !14047, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.value(metadata i32 %7, metadata !14048, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.value(metadata i32 %8, metadata !14049, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.value(metadata i8* undef, metadata !14050, metadata !DIExpression()), !dbg !14052
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14053
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !14054
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14055
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14056
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14057
  call void @llvm.dbg.value(metadata i8* %13, metadata !14051, metadata !DIExpression()), !dbg !14052
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14058
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14059
  store i8* null, i8** %14, align 4, !dbg !14060
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14061
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14061
  br i1 %16, label %20, label %17, !dbg !14063

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14064
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14064
  br label %20, !dbg !14065

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14052
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14066
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14068
  ret i8* %13, !dbg !14069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !14070 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14075, metadata !DIExpression()), !dbg !14076
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14077
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14078
  ret void, !dbg !14079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !14080 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14085, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i32 %1, metadata !14086, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i32 %2, metadata !14087, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i32 %3, metadata !14088, metadata !DIExpression()), !dbg !14089
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14090
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14091
  %6 = trunc i32 %3 to i8, !dbg !14092
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14093
  store i8 %6, i8* %7, align 4, !dbg !14094
  %8 = trunc i32 %2 to i8, !dbg !14095
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14096
  store i8 %8, i8* %9, align 1, !dbg !14097
  %10 = trunc i32 %1 to i8, !dbg !14098
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14099
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14099
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14099
  store i8 %10, i8* %13, align 2, !dbg !14100
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14101
  store i8 0, i8* %14, align 1, !dbg !14102
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14103
  ret void, !dbg !14104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !14105 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14109, metadata !DIExpression()), !dbg !14117
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14110, metadata !DIExpression()), !dbg !14117
  call void @llvm.dbg.value(metadata i32 %2, metadata !14111, metadata !DIExpression()), !dbg !14117
  call void @llvm.dbg.value(metadata i32 0, metadata !14116, metadata !DIExpression()), !dbg !14117
  %4 = add i32 %2, 7, !dbg !14118
  %5 = and i32 %4, -8, !dbg !14118
  %6 = add i32 %5, 64, !dbg !14118
  call void @llvm.dbg.value(metadata i32 %6, metadata !14112, metadata !DIExpression()), !dbg !14117
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.139(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14120
  call void @llvm.dbg.value(metadata i8* %7, metadata !14115, metadata !DIExpression()), !dbg !14117
  call void @llvm.dbg.value(metadata i32 %5, metadata !14113, metadata !DIExpression()), !dbg !14117
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14121
  call void @llvm.dbg.value(metadata i8* %8, metadata !14114, metadata !DIExpression()), !dbg !14117
  call void @llvm.dbg.value(metadata i32 0, metadata !14116, metadata !DIExpression()), !dbg !14117
  %9 = ptrtoint i8* %7 to i32, !dbg !14122
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14123
  store i32 %9, i32* %10, align 4, !dbg !14124
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14125
  store i32 %5, i32* %11, align 4, !dbg !14126
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14127
  store i32 0, i32* %12, align 4, !dbg !14128
  call void @llvm.dbg.value(metadata i8* %8, metadata !14114, metadata !DIExpression()), !dbg !14117
  ret i8* %8, !dbg !14129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.139(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !14130 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14134, metadata !DIExpression()), !dbg !14135
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14136
  ret i8* %2, !dbg !14137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14138 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14143, metadata !DIExpression()), !dbg !14144
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14145
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14146
  ret void, !dbg !14147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14148 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14150, metadata !DIExpression()), !dbg !14151
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14152
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14153
  ret void, !dbg !14154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14155 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14159, metadata !DIExpression()), !dbg !14160
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14161
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14162
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14163
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14164
  ret void, !dbg !14165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14166 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14171, metadata !DIExpression()), !dbg !14172
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14173
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14174
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14175
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14176
  ret void, !dbg !14177
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14178 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14195, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14186, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14187, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata i32 %2, metadata !14188, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14189, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata i8* %4, metadata !14190, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata i8* %5, metadata !14191, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata i8* %6, metadata !14192, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata i32 %7, metadata !14193, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata i32 %8, metadata !14194, metadata !DIExpression()), !dbg !14196
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14197
  %13 = icmp eq i64 %11, -1, !dbg !14198
  br i1 %13, label %15, label %14, !dbg !14200

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14201
  br label %15, !dbg !14203

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14204
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14205 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14210, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14209, metadata !DIExpression()), !dbg !14211
  %4 = icmp eq i64 %3, 0, !dbg !14212
  br i1 %4, label %5, label %6, !dbg !14214

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14215
  br label %7, !dbg !14217

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14218
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14220
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14221 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14225, metadata !DIExpression()), !dbg !14226
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14227, !srcloc !14229
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14230
  ret void, !dbg !14231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14232 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14235, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14234, metadata !DIExpression()), !dbg !14236
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14237
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14238
  ret void, !dbg !14239
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14240 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14242, metadata !DIExpression()), !dbg !14262
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14263

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14264
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14260, metadata !DIExpression()), !dbg !14265
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14266

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14242, metadata !DIExpression()), !dbg !14262
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14267
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14267
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14270
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14270
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14271
  %9 = load i32, i32* %8, align 4, !dbg !14271
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14272
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14272
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14273
  %13 = load i8*, i8** %12, align 4, !dbg !14273
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14274
  %15 = load i8*, i8** %14, align 4, !dbg !14274
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14275
  %17 = load i8*, i8** %16, align 4, !dbg !14275
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14276
  %19 = load i32, i32* %18, align 4, !dbg !14276
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14277
  %21 = load i32, i32* %20, align 4, !dbg !14277
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14278
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14279
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14280
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14281
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14281
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14282
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14242, metadata !DIExpression()), !dbg !14262
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14283
  br i1 %27, label %2, label %1, !dbg !14263, !llvm.loop !14285

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14264
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14260, metadata !DIExpression()), !dbg !14265
  br label %29, !dbg !14266

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14287
  ret void, !dbg !14288

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14260, metadata !DIExpression()), !dbg !14265
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14289
  %33 = load i32, i32* %32, align 4, !dbg !14289
  %34 = icmp eq i32 %33, -1, !dbg !14293
  br i1 %34, label %43, label %35, !dbg !14294

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14295
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14295
  %38 = icmp sgt i32 %33, 0, !dbg !14297
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14297
  %40 = zext i32 %39 to i64, !dbg !14297
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.142(i64 noundef %40) #26, !dbg !14297
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14298
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14298
  br label %43, !dbg !14299

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14300
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14260, metadata !DIExpression()), !dbg !14265
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14301
  br i1 %45, label %30, label %29, !dbg !14266, !llvm.loop !14303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.142(i64 noundef %0) unnamed_addr #11 !dbg !14305 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14307, metadata !DIExpression()), !dbg !14308
  call void @llvm.dbg.value(metadata i64 %0, metadata !14309, metadata !DIExpression()), !dbg !14324
  call void @llvm.dbg.value(metadata i32 1000, metadata !14312, metadata !DIExpression()), !dbg !14324
  call void @llvm.dbg.value(metadata i32 10000, metadata !14313, metadata !DIExpression()), !dbg !14324
  call void @llvm.dbg.value(metadata i8 1, metadata !14314, metadata !DIExpression()), !dbg !14324
  call void @llvm.dbg.value(metadata i8 0, metadata !14315, metadata !DIExpression()), !dbg !14324
  call void @llvm.dbg.value(metadata i8 1, metadata !14316, metadata !DIExpression()), !dbg !14324
  call void @llvm.dbg.value(metadata i8 0, metadata !14317, metadata !DIExpression()), !dbg !14324
  call void @llvm.dbg.value(metadata i8 1, metadata !14318, metadata !DIExpression()), !dbg !14324
  call void @llvm.dbg.value(metadata i8 0, metadata !14319, metadata !DIExpression()), !dbg !14324
  call void @llvm.dbg.value(metadata i64 0, metadata !14320, metadata !DIExpression()), !dbg !14324
  call void @llvm.dbg.value(metadata i64 0, metadata !14320, metadata !DIExpression()), !dbg !14324
  %2 = mul i64 %0, 10, !dbg !14326
  ret i64 %2, !dbg !14332
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14333 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14335, metadata !DIExpression()), !dbg !14339
  call void @llvm.dbg.value(metadata i8* %1, metadata !14336, metadata !DIExpression()), !dbg !14339
  call void @llvm.dbg.value(metadata i8* %2, metadata !14337, metadata !DIExpression()), !dbg !14339
  call void @llvm.dbg.value(metadata i8* %3, metadata !14338, metadata !DIExpression()), !dbg !14339
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14340
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14341
  %7 = load i8, i8* %6, align 4, !dbg !14342
  %8 = or i8 %7, 4, !dbg !14342
  store i8 %8, i8* %6, align 4, !dbg !14342
  tail call void @z_thread_essential_clear() #26, !dbg !14343
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !14344
  unreachable, !dbg !14344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !14345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14349, metadata !DIExpression()), !dbg !14350
  ret i32 -134, !dbg !14351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !14352 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14356, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata i32 %1, metadata !14357, metadata !DIExpression()), !dbg !14358
  ret i32 -134, !dbg !14359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !14360 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14367, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14368, metadata !DIExpression()), !dbg !14369
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14370
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14372
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14369
  ret i32 %6, !dbg !14373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !14374 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14378, metadata !DIExpression()), !dbg !14379
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14380
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14379
  ret i32 %3, !dbg !14382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14383 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14385
  ret void, !dbg !14386
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14387 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14389, metadata !DIExpression()), !dbg !14392
  call void @llvm.dbg.value(metadata i8* %1, metadata !14390, metadata !DIExpression()), !dbg !14392
  call void @llvm.dbg.value(metadata i8* %2, metadata !14391, metadata !DIExpression()), !dbg !14392
  br label %4, !dbg !14393

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14394, !srcloc !14401
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #24, !dbg !14402
  call void @llvm.dbg.value(metadata i32 undef, metadata !14398, metadata !DIExpression()) #24, !dbg !14402
  tail call fastcc void @k_cpu_idle() #26, !dbg !14403
  br label %4, !dbg !14393, !llvm.loop !14404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14406 {
  tail call void @arch_cpu_idle() #25, !dbg !14407
  ret void, !dbg !14408
}

; Function Attrs: optsize
declare !dbg !14409 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14410 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14425, metadata !DIExpression()), !dbg !14428
  call void @llvm.dbg.value(metadata i32 %1, metadata !14426, metadata !DIExpression()), !dbg !14428
  call void @llvm.dbg.value(metadata i32 %2, metadata !14427, metadata !DIExpression()), !dbg !14428
  %4 = icmp eq i32 %2, 0, !dbg !14429
  %5 = icmp ugt i32 %1, %2, !dbg !14429
  %6 = or i1 %4, %5, !dbg !14429
  br i1 %6, label %11, label %7, !dbg !14429

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14431
  store i32 %1, i32* %8, align 4, !dbg !14432
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14433
  store i32 %2, i32* %9, align 4, !dbg !14434
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14435
  tail call fastcc void @z_waitq_init.147(%union.anon* noundef %10) #26, !dbg !14436
  br label %11, !dbg !14437

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !14428
  ret i32 %12, !dbg !14438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.147(%union.anon* noundef %0) unnamed_addr #4 !dbg !14439 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14444, metadata !DIExpression()), !dbg !14445
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14446
  tail call fastcc void @sys_dlist_init.148(%struct._dnode* noundef %2) #26, !dbg !14447
  ret void, !dbg !14448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.148(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14449 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14454, metadata !DIExpression()), !dbg !14455
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14456
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14457
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14458
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14459
  ret void, !dbg !14460
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14461 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14465, metadata !DIExpression()), !dbg !14551
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #24, !dbg !14559
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14561, !srcloc !14567
  call void @llvm.dbg.value(metadata i32 undef, metadata !14564, metadata !DIExpression()) #24, !dbg !14568
  call void @llvm.dbg.value(metadata i32 undef, metadata !14565, metadata !DIExpression()) #24, !dbg !14568
  call void @llvm.dbg.value(metadata i32 undef, metadata !14558, metadata !DIExpression()) #24, !dbg !14559
  call void @llvm.dbg.value(metadata i32 undef, metadata !14466, metadata !DIExpression()), !dbg !14551
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14569
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14570
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14471, metadata !DIExpression()), !dbg !14551
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14571
  br i1 %5, label %8, label %6, !dbg !14573

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14574, metadata !DIExpression()), !dbg !14580
  call void @llvm.dbg.value(metadata i32 0, metadata !14579, metadata !DIExpression()), !dbg !14580
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 7, i32 1, !dbg !14583
  store i32 0, i32* %7, align 4, !dbg !14584
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %4) #25, !dbg !14585
  br label %16, !dbg !14586

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14587
  %10 = load i32, i32* %9, align 4, !dbg !14587
  %11 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14589
  %12 = load i32, i32* %11, align 4, !dbg !14589
  %13 = icmp ne i32 %10, %12, !dbg !14590
  %14 = zext i1 %13 to i32, !dbg !14591
  %15 = add i32 %10, %14, !dbg !14592
  store i32 %15, i32* %9, align 4, !dbg !14592
  br label %16

16:                                               ; preds = %8, %6
  %17 = extractvalue { i32, i32 } %2, 0, !dbg !14561
  call void @llvm.dbg.value(metadata i32 %17, metadata !14564, metadata !DIExpression()) #24, !dbg !14568
  call void @llvm.dbg.value(metadata i32 %17, metadata !14558, metadata !DIExpression()) #24, !dbg !14559
  call void @llvm.dbg.value(metadata i32 %17, metadata !14466, metadata !DIExpression()), !dbg !14551
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !14593
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %18) #25, !dbg !14593
  ret void, !dbg !14594
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14595 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14604, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14603, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata i32 0, metadata !14605, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #24, !dbg !14609
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14611, !srcloc !14567
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14611
  call void @llvm.dbg.value(metadata i32 %4, metadata !14564, metadata !DIExpression()) #24, !dbg !14613
  call void @llvm.dbg.value(metadata i32 undef, metadata !14565, metadata !DIExpression()) #24, !dbg !14613
  call void @llvm.dbg.value(metadata i32 %4, metadata !14558, metadata !DIExpression()) #24, !dbg !14609
  call void @llvm.dbg.value(metadata i32 %4, metadata !14606, metadata !DIExpression()), !dbg !14608
  %5 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14614
  %6 = load i32, i32* %5, align 4, !dbg !14614
  %7 = icmp eq i32 %6, 0, !dbg !14614
  br i1 %7, label %10, label %8, !dbg !14616, !prof !14617

8:                                                ; preds = %2
  %9 = add i32 %6, -1, !dbg !14618
  store i32 %9, i32* %5, align 4, !dbg !14618
  call void @llvm.dbg.value(metadata i32 %4, metadata !14620, metadata !DIExpression()) #24, !dbg !14626
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14625, metadata !DIExpression()) #24, !dbg !14626
  call void @llvm.dbg.value(metadata i32 %4, metadata !14628, metadata !DIExpression()) #24, !dbg !14631
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14633, !srcloc !14634
  call void @llvm.dbg.value(metadata i32 0, metadata !14605, metadata !DIExpression()), !dbg !14608
  br label %18, !dbg !14635

10:                                               ; preds = %2
  %11 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14604, metadata !DIExpression()), !dbg !14608
  %12 = icmp eq i64 %11, 0, !dbg !14636
  br i1 %12, label %13, label %14, !dbg !14638

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %4, metadata !14620, metadata !DIExpression()) #24, !dbg !14639
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14625, metadata !DIExpression()) #24, !dbg !14639
  call void @llvm.dbg.value(metadata i32 %4, metadata !14628, metadata !DIExpression()) #24, !dbg !14642
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14644, !srcloc !14634
  call void @llvm.dbg.value(metadata i32 -16, metadata !14605, metadata !DIExpression()), !dbg !14608
  br label %18, !dbg !14645

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14646
  %16 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !14647
  %17 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %16, %union.anon* noundef %15, [1 x i64] %1) #25, !dbg !14647
  call void @llvm.dbg.value(metadata i32 %17, metadata !14605, metadata !DIExpression()), !dbg !14608
  br label %18, !dbg !14648

18:                                               ; preds = %8, %13, %14
  %19 = phi i32 [ 0, %8 ], [ -16, %13 ], [ %17, %14 ], !dbg !14608
  call void @llvm.dbg.value(metadata i32 %19, metadata !14605, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.label(metadata !14607), !dbg !14649
  ret i32 %19, !dbg !14650
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14651 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14653, metadata !DIExpression()), !dbg !14656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14552, metadata !DIExpression()) #24, !dbg !14657
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14659, !srcloc !14567
  call void @llvm.dbg.value(metadata i32 undef, metadata !14564, metadata !DIExpression()) #24, !dbg !14661
  call void @llvm.dbg.value(metadata i32 undef, metadata !14565, metadata !DIExpression()) #24, !dbg !14661
  call void @llvm.dbg.value(metadata i32 undef, metadata !14558, metadata !DIExpression()) #24, !dbg !14657
  call void @llvm.dbg.value(metadata i32 undef, metadata !14655, metadata !DIExpression()), !dbg !14656
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14662
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14654, metadata !DIExpression()), !dbg !14656
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14664
  br i1 %5, label %11, label %6, !dbg !14666

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14574, metadata !DIExpression()), !dbg !14667
  call void @llvm.dbg.value(metadata i32 -11, metadata !14579, metadata !DIExpression()), !dbg !14667
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !14669
  store i32 -11, i32* %8, align 4, !dbg !14670
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #25, !dbg !14671
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14662
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14654, metadata !DIExpression()), !dbg !14656
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14664
  br i1 %10, label %11, label %6, !dbg !14666, !llvm.loop !14672

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !14659
  call void @llvm.dbg.value(metadata i32 %12, metadata !14564, metadata !DIExpression()) #24, !dbg !14661
  call void @llvm.dbg.value(metadata i32 %12, metadata !14558, metadata !DIExpression()) #24, !dbg !14657
  call void @llvm.dbg.value(metadata i32 %12, metadata !14655, metadata !DIExpression()), !dbg !14656
  %13 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14675
  store i32 0, i32* %13, align 4, !dbg !14676
  %14 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14677
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %14) #25, !dbg !14677
  ret void, !dbg !14678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14683, metadata !DIExpression()), !dbg !14687
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14684, metadata !DIExpression()), !dbg !14687
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14688
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14688
  %5 = load i8, i8* %4, align 2, !dbg !14688
  call void @llvm.dbg.value(metadata i8 %5, metadata !14685, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14687
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14689
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14689
  %8 = load i8, i8* %7, align 2, !dbg !14689
  call void @llvm.dbg.value(metadata i8 %8, metadata !14686, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14687
  %9 = icmp eq i8 %8, %5, !dbg !14690
  %10 = sext i8 %5 to i32, !dbg !14692
  %11 = sext i8 %8 to i32, !dbg !14692
  %12 = sub nsw i32 %11, %10, !dbg !14692
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14692
  ret i32 %13, !dbg !14693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14694 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14698, metadata !DIExpression()), !dbg !14699
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !14700
  %3 = icmp eq i32 %2, 0, !dbg !14702
  br i1 %3, label %8, label %4, !dbg !14703

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14704
  %6 = add i32 %5, %2, !dbg !14706
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14707
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !14708
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14709
  br label %8, !dbg !14710

8:                                                ; preds = %4, %1
  ret void, !dbg !14711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14712 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14716, metadata !DIExpression()), !dbg !14718
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14719
  call void @llvm.dbg.value(metadata i32 %1, metadata !14717, metadata !DIExpression()), !dbg !14718
  ret i32 %1, !dbg !14720
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14725, metadata !DIExpression()), !dbg !14734
  call void @llvm.dbg.value(metadata i32 %1, metadata !14726, metadata !DIExpression()), !dbg !14734
  call void @llvm.dbg.value(metadata i32 0, metadata !14727, metadata !DIExpression()), !dbg !14735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !14743
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14745, !srcloc !14751
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14745
  call void @llvm.dbg.value(metadata i32 %4, metadata !14748, metadata !DIExpression()) #24, !dbg !14752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !14752
  call void @llvm.dbg.value(metadata i32 %4, metadata !14742, metadata !DIExpression()) #24, !dbg !14743
  call void @llvm.dbg.value(metadata i32 %4, metadata !14733, metadata !DIExpression()), !dbg !14735
  call void @llvm.dbg.value(metadata i32 undef, metadata !14727, metadata !DIExpression()), !dbg !14735
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14753
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !14756
  %6 = icmp sgt i32 %0, 0, !dbg !14757
  %7 = icmp sgt i32 %5, 2, !dbg !14759
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14759
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14759
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14760
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14761
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14762
  call void @llvm.dbg.value(metadata i32 %4, metadata !14763, metadata !DIExpression()) #24, !dbg !14769
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !14769
  call void @llvm.dbg.value(metadata i32 %4, metadata !14771, metadata !DIExpression()) #24, !dbg !14774
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14776, !srcloc !14777
  call void @llvm.dbg.value(metadata i32 1, metadata !14727, metadata !DIExpression()), !dbg !14735
  call void @llvm.dbg.value(metadata i32 undef, metadata !14727, metadata !DIExpression()), !dbg !14735
  ret void, !dbg !14778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14781, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata i32 %0, metadata !14783, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14798
  call void @llvm.dbg.value(metadata i32 1000, metadata !14786, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata i32 10000, metadata !14787, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata i8 1, metadata !14788, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata i1 true, metadata !14789, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14798
  call void @llvm.dbg.value(metadata i1 true, metadata !14790, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14798
  call void @llvm.dbg.value(metadata i8 0, metadata !14791, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata i1 true, metadata !14792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14798
  call void @llvm.dbg.value(metadata i1 false, metadata !14793, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14798
  call void @llvm.dbg.value(metadata i64 0, metadata !14794, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata i64 0, metadata !14794, metadata !DIExpression()), !dbg !14798
  %2 = mul i32 %0, 10, !dbg !14800
  ret i32 %2, !dbg !14806
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14809, metadata !DIExpression()), !dbg !14811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !14812
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14814, !srcloc !14751
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14814
  call void @llvm.dbg.value(metadata i32 %3, metadata !14748, metadata !DIExpression()) #24, !dbg !14816
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !14816
  call void @llvm.dbg.value(metadata i32 %3, metadata !14742, metadata !DIExpression()) #24, !dbg !14812
  call void @llvm.dbg.value(metadata i32 %3, metadata !14810, metadata !DIExpression()), !dbg !14811
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14817
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14819
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14820
  br i1 %6, label %7, label %8, !dbg !14821

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14822
  call void @llvm.dbg.value(metadata i32 %3, metadata !14763, metadata !DIExpression()) #24, !dbg !14824
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !14824
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #24, !dbg !14826
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14828, !srcloc !14777
  br label %24, !dbg !14829

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14830
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !14831
  %10 = icmp eq i32 %9, 0, !dbg !14831
  br i1 %10, label %21, label %11, !dbg !14833

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !14834
  br i1 %12, label %13, label %21, !dbg !14835

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14836
  %15 = icmp sgt i32 %14, %0, !dbg !14839
  br i1 %15, label %19, label %16, !dbg !14840

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14841
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !14841
  call void @llvm.dbg.value(metadata i32 %18, metadata !14810, metadata !DIExpression()), !dbg !14811
  br label %22, !dbg !14843

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14844
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14844
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14846
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14811
  call void @llvm.dbg.value(metadata i32 %23, metadata !14810, metadata !DIExpression()), !dbg !14811
  call void @llvm.dbg.value(metadata i32 %23, metadata !14763, metadata !DIExpression()) #24, !dbg !14848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !14848
  call void @llvm.dbg.value(metadata i32 %23, metadata !14771, metadata !DIExpression()) #24, !dbg !14850
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !14852, !srcloc !14777
  br label %24, !dbg !14853

24:                                               ; preds = %22, %7
  ret void, !dbg !14853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14854 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14858, metadata !DIExpression()), !dbg !14860
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !14861
  %3 = icmp eq i32 %2, 0, !dbg !14861
  br i1 %3, label %16, label %4, !dbg !14862

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14863
  br i1 %5, label %16, label %6, !dbg !14864

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14865
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14865
  %9 = load i8, i8* %8, align 2, !dbg !14865
  %10 = sext i8 %9 to i32, !dbg !14866
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14867
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !14868
  br i1 %12, label %16, label %13, !dbg !14869

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !14870
  %15 = xor i1 %14, true, !dbg !14871
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14860
  call void @llvm.dbg.value(metadata i1 %17, metadata !14859, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14860
  ret i1 %17, !dbg !14872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14873 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()), !dbg !14879
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14880
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14878, metadata !DIExpression()), !dbg !14879
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !14881
  br i1 %3, label %5, label %4, !dbg !14883

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !14884
  br label %5, !dbg !14886

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14877, metadata !DIExpression()), !dbg !14879
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14887
  ret i32 %6, !dbg !14888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14889 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14891, metadata !DIExpression()), !dbg !14893
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14894
  %3 = load i8, i8* %2, align 1, !dbg !14894
  call void @llvm.dbg.value(metadata i8 %3, metadata !14892, metadata !DIExpression()), !dbg !14893
  %4 = and i8 %3, 31, !dbg !14895
  %5 = icmp ne i8 %4, 0, !dbg !14896
  ret i1 %5, !dbg !14897
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14898 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14900, metadata !DIExpression()), !dbg !14901
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14902
  br i1 %2, label %3, label %7, !dbg !14904

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14905, metadata !DIExpression()) #24, !dbg !14908
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14911
  %5 = load i8, i8* %4, align 1, !dbg !14912
  %6 = and i8 %5, 127, !dbg !14912
  store i8 %6, i8* %4, align 1, !dbg !14912
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14913, metadata !DIExpression()) #24, !dbg !14916
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14920
  br label %7, !dbg !14921

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14922, metadata !DIExpression()) #24, !dbg !14925
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14927
  %9 = load i8, i8* %8, align 1, !dbg !14928
  %10 = or i8 %9, -128, !dbg !14928
  store i8 %10, i8* %8, align 1, !dbg !14928
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14929, metadata !DIExpression()) #24, !dbg !14932
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14936, metadata !DIExpression()) #24, !dbg !14944
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14942, metadata !DIExpression()) #24, !dbg !14944
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14946
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14943, metadata !DIExpression()) #24, !dbg !14944
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14948
  br i1 %12, label %23, label %13, !dbg !14946

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14943, metadata !DIExpression()) #24, !dbg !14944
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14950
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14943, metadata !DIExpression()) #24, !dbg !14944
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !14951
  %17 = icmp sgt i32 %16, 0, !dbg !14954
  br i1 %17, label %18, label %20, !dbg !14955

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14956
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !14958
  br label %25, !dbg !14959

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !14948
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14943, metadata !DIExpression()) #24, !dbg !14944
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14948
  br i1 %22, label %23, label %13, !dbg !14946, !llvm.loop !14960

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14962
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !14963
  br label %25, !dbg !14964

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14965
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14966
  %28 = zext i1 %27 to i32, !dbg !14966
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !14967
  ret void, !dbg !14968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14969 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14971, metadata !DIExpression()), !dbg !14972
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !14973
  ret i1 %2, !dbg !14974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !14975 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14977, metadata !DIExpression()), !dbg !14979
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14978, metadata !DIExpression()), !dbg !14979
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14980
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !14981
  ret void, !dbg !14982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14983 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14987, metadata !DIExpression()), !dbg !14988
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14989
  br i1 %2, label %6, label %3, !dbg !14989

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14990
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14990
  br label %6, !dbg !14989

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14989
  ret %struct._dnode* %7, !dbg !14991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14992 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14996, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14997, metadata !DIExpression()), !dbg !15000
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15001
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15001
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14998, metadata !DIExpression()), !dbg !15000
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15002
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15003
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15004
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15005
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15006
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15007
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15008
  ret void, !dbg !15009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15010 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15014, metadata !DIExpression()), !dbg !15016
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15015, metadata !DIExpression()), !dbg !15016
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15017
  br i1 %3, label %6, label %4, !dbg !15018

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15019
  br label %6, !dbg !15018

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15018
  ret %struct._dnode* %7, !dbg !15020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15021 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15025, metadata !DIExpression()), !dbg !15028
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15026, metadata !DIExpression()), !dbg !15028
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15029
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15029
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15027, metadata !DIExpression()), !dbg !15028
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15030
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15031
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15032
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15033
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15034
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15035
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15036
  ret void, !dbg !15037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15040, metadata !DIExpression()), !dbg !15042
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15043
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15050, metadata !DIExpression()) #24, !dbg !15052
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15053
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15054
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15054
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15041, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15055, metadata !DIExpression()) #24, !dbg !15061
  call void @llvm.dbg.value(metadata i32 %0, metadata !15060, metadata !DIExpression()) #24, !dbg !15061
  %6 = icmp eq i32 %0, 0, !dbg !15064
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15066
  br i1 %6, label %8, label %15, !dbg !15067

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15068
  br i1 %9, label %15, label %10, !dbg !15070

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15071
  br i1 %11, label %15, label %12, !dbg !15073

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15074
  %14 = icmp eq i32 %13, 0, !dbg !15074
  br i1 %14, label %18, label %15, !dbg !15076

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15077
  br i1 %16, label %18, label %17, !dbg !15080

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15081
  br label %18, !dbg !15083

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15066
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15066
  ret void, !dbg !15084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !15085 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15089, metadata !DIExpression()), !dbg !15092
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15090, metadata !DIExpression()), !dbg !15092
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !15093
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15091, metadata !DIExpression()), !dbg !15092
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15090, metadata !DIExpression()), !dbg !15092
  ret %struct.k_thread* %3, !dbg !15094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15095 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15097, metadata !DIExpression()), !dbg !15098
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15099
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15100
  %4 = xor i1 %3, true, !dbg !15101
  ret i1 %4, !dbg !15102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15103 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15105, metadata !DIExpression()), !dbg !15106
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15107
  %3 = load i16, i16* %2, align 2, !dbg !15107
  %4 = icmp ult i16 %3, 128, !dbg !15108
  %5 = zext i1 %4 to i32, !dbg !15108
  ret i32 %5, !dbg !15109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15110 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15116, metadata !DIExpression()), !dbg !15117
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15118
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15119
  %4 = xor i1 %3, true, !dbg !15120
  ret i1 %4, !dbg !15121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15122 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15128, metadata !DIExpression()), !dbg !15129
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15130
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15130
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15131
  ret i1 %4, !dbg !15132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15133 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15135, metadata !DIExpression()), !dbg !15137
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15136, metadata !DIExpression()), !dbg !15137
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15138
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15138
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15139
  br i1 %5, label %9, label %6, !dbg !15140

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15141
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15141
  br label %9, !dbg !15140

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15140
  ret %struct._dnode* %10, !dbg !15142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15143 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15147, metadata !DIExpression()), !dbg !15148
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15149
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15149
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15150
  ret i1 %4, !dbg !15151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !15152 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15156, metadata !DIExpression()), !dbg !15159
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15160
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15160
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15157, metadata !DIExpression()), !dbg !15159
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15161
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15161
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15158, metadata !DIExpression()), !dbg !15159
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15162
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15163
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15164
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15165
  tail call fastcc void @sys_dnode_init.153(%struct._dnode* noundef %0) #26, !dbg !15166
  ret void, !dbg !15167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.153(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15168 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15170, metadata !DIExpression()), !dbg !15171
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15172
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15173
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15174
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15175
  ret void, !dbg !15176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15177 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15181, metadata !DIExpression()), !dbg !15183
  call void @llvm.dbg.value(metadata i32 128, metadata !15182, metadata !DIExpression()), !dbg !15183
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15184
  %3 = load i8, i8* %2, align 1, !dbg !15184
  %4 = icmp slt i8 %3, 0, !dbg !15185
  ret i1 %4, !dbg !15186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15191, metadata !DIExpression()), !dbg !15193
  call void @llvm.dbg.value(metadata i32 %1, metadata !15192, metadata !DIExpression()), !dbg !15193
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15194
  ret i1 %3, !dbg !15195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !15196 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15198, metadata !DIExpression()), !dbg !15199
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15200
  ret i1 %2, !dbg !15201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15204, metadata !DIExpression()), !dbg !15206
  call void @llvm.dbg.value(metadata i32 %1, metadata !15205, metadata !DIExpression()), !dbg !15206
  %3 = icmp slt i32 %0, %1, !dbg !15207
  ret i1 %3, !dbg !15208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15211, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i32 0, metadata !15212, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15217
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15219, !srcloc !14751
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15219
  call void @llvm.dbg.value(metadata i32 %3, metadata !14748, metadata !DIExpression()) #24, !dbg !15221
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15221
  call void @llvm.dbg.value(metadata i32 %3, metadata !14742, metadata !DIExpression()) #24, !dbg !15217
  call void @llvm.dbg.value(metadata i32 %3, metadata !15214, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata i32 undef, metadata !15212, metadata !DIExpression()), !dbg !15216
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15222
  call void @llvm.dbg.value(metadata i32 %3, metadata !14763, metadata !DIExpression()) #24, !dbg !15227
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15227
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #24, !dbg !15229
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15231, !srcloc !14777
  call void @llvm.dbg.value(metadata i32 1, metadata !15212, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata i32 undef, metadata !15212, metadata !DIExpression()), !dbg !15216
  ret void, !dbg !15232
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15233 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15235, metadata !DIExpression()), !dbg !15236
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15237
  br i1 %2, label %24, label %3, !dbg !15239

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15240
  br i1 %4, label %5, label %24, !dbg !15241

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14922, metadata !DIExpression()) #24, !dbg !15242
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15245
  %7 = load i8, i8* %6, align 1, !dbg !15246
  %8 = or i8 %7, -128, !dbg !15246
  store i8 %8, i8* %6, align 1, !dbg !15246
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14929, metadata !DIExpression()) #24, !dbg !15247
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14936, metadata !DIExpression()) #24, !dbg !15249
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14942, metadata !DIExpression()) #24, !dbg !15249
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15251
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14943, metadata !DIExpression()) #24, !dbg !15249
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15252
  br i1 %10, label %21, label %11, !dbg !15251

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14943, metadata !DIExpression()) #24, !dbg !15249
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15253
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14943, metadata !DIExpression()) #24, !dbg !15249
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15254
  %15 = icmp sgt i32 %14, 0, !dbg !15255
  br i1 %15, label %16, label %18, !dbg !15256

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15257
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15258
  br label %23, !dbg !15259

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15252
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14943, metadata !DIExpression()) #24, !dbg !15249
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15252
  br i1 %20, label %21, label %11, !dbg !15251, !llvm.loop !15260

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15262
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15263
  br label %23, !dbg !15264

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15265
  br label %24, !dbg !15266

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15268 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15270, metadata !DIExpression()), !dbg !15271
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15272
  br i1 %2, label %6, label %3, !dbg !15273

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15274
  %5 = xor i1 %4, true, !dbg !15273
  br label %6, !dbg !15273

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15276 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15278, metadata !DIExpression()), !dbg !15282
  call void @llvm.dbg.value(metadata i32 0, metadata !15279, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15284
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15286, !srcloc !14751
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15286
  call void @llvm.dbg.value(metadata i32 %3, metadata !14748, metadata !DIExpression()) #24, !dbg !15288
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15288
  call void @llvm.dbg.value(metadata i32 %3, metadata !14742, metadata !DIExpression()) #24, !dbg !15284
  call void @llvm.dbg.value(metadata i32 %3, metadata !15281, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata i32 undef, metadata !15279, metadata !DIExpression()), !dbg !15283
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15289
  call void @llvm.dbg.value(metadata i32 %3, metadata !14763, metadata !DIExpression()) #24, !dbg !15292
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15292
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #24, !dbg !15294
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15296, !srcloc !14777
  call void @llvm.dbg.value(metadata i32 1, metadata !15279, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata i32 undef, metadata !15279, metadata !DIExpression()), !dbg !15283
  ret void, !dbg !15297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15298 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15300, metadata !DIExpression()), !dbg !15302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15303
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15305, !srcloc !14751
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15305
  call void @llvm.dbg.value(metadata i32 %3, metadata !14748, metadata !DIExpression()) #24, !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15307
  call void @llvm.dbg.value(metadata i32 %3, metadata !14742, metadata !DIExpression()) #24, !dbg !15303
  call void @llvm.dbg.value(metadata i32 %3, metadata !15301, metadata !DIExpression()), !dbg !15302
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !15308
  br i1 %4, label %5, label %6, !dbg !15310

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14763, metadata !DIExpression()) #24, !dbg !15311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15311
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #24, !dbg !15314
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15316, !srcloc !14777
  br label %8, !dbg !15317

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.158(%struct.k_thread* noundef %0) #26, !dbg !15318
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15319
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15320
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15320
  br label %8, !dbg !15321

8:                                                ; preds = %6, %5
  ret void, !dbg !15321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15322 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15324, metadata !DIExpression()), !dbg !15325
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15326
  %3 = load i8, i8* %2, align 1, !dbg !15326
  %4 = and i8 %3, 4, !dbg !15327
  %5 = icmp eq i8 %4, 0, !dbg !15328
  ret i1 %5, !dbg !15329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.158(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15330 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15332, metadata !DIExpression()), !dbg !15333
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15334
  %3 = load i8, i8* %2, align 1, !dbg !15335
  %4 = and i8 %3, -5, !dbg !15335
  store i8 %4, i8* %2, align 1, !dbg !15335
  ret void, !dbg !15336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15337 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15340, metadata !DIExpression()), !dbg !15341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15339, metadata !DIExpression()), !dbg !15341
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !15342
  br i1 %4, label %5, label %9, !dbg !15344

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !15345
  br i1 %6, label %7, label %9, !dbg !15346

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15347, metadata !DIExpression()) #24, !dbg !15353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15352, metadata !DIExpression()) #24, !dbg !15353
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15356
  br label %10, !dbg !15357

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14763, metadata !DIExpression()) #24, !dbg !15358
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15358
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #24, !dbg !15361
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15363, !srcloc !14777
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15369, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata i32 %0, metadata !15371, metadata !DIExpression()), !dbg !15376
  %2 = icmp eq i32 %0, 0, !dbg !15378
  br i1 %2, label %3, label %6, !dbg !15379

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15380, !srcloc !15387
  call void @llvm.dbg.value(metadata i32 %4, metadata !15383, metadata !DIExpression()) #24, !dbg !15388
  %5 = icmp eq i32 %4, 0, !dbg !15389
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15370
  ret i1 %7, !dbg !15390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !15391 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15394
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15393, metadata !DIExpression()), !dbg !15395
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15396
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15397
  ret i1 %3, !dbg !15398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15401, metadata !DIExpression()), !dbg !15403
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15404
  call void @llvm.dbg.value(metadata i32 %2, metadata !15402, metadata !DIExpression()), !dbg !15403
  ret i32 %2, !dbg !15405
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15406 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15408, metadata !DIExpression()), !dbg !15412
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15413
  call void @llvm.dbg.value(metadata i32 0, metadata !15409, metadata !DIExpression()), !dbg !15414
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15415
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15417, !srcloc !14751
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15417
  call void @llvm.dbg.value(metadata i32 %4, metadata !14748, metadata !DIExpression()) #24, !dbg !15419
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15419
  call void @llvm.dbg.value(metadata i32 %4, metadata !14742, metadata !DIExpression()) #24, !dbg !15415
  call void @llvm.dbg.value(metadata i32 %4, metadata !15411, metadata !DIExpression()), !dbg !15414
  call void @llvm.dbg.value(metadata i32 undef, metadata !15409, metadata !DIExpression()), !dbg !15414
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15420
  br i1 %5, label %6, label %10, !dbg !15424

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14905, metadata !DIExpression()) #24, !dbg !15425
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15428
  %8 = load i8, i8* %7, align 1, !dbg !15429
  %9 = and i8 %8, 127, !dbg !15429
  store i8 %9, i8* %7, align 1, !dbg !15429
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14913, metadata !DIExpression()) #24, !dbg !15430
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15432
  br label %10, !dbg !15433

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !15434
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15435
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15436
  %13 = zext i1 %12 to i32, !dbg !15436
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !15437
  call void @llvm.dbg.value(metadata i32 %4, metadata !14763, metadata !DIExpression()) #24, !dbg !15438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15438
  call void @llvm.dbg.value(metadata i32 %4, metadata !14771, metadata !DIExpression()) #24, !dbg !15440
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15442, !srcloc !14777
  call void @llvm.dbg.value(metadata i32 1, metadata !15409, metadata !DIExpression()), !dbg !15414
  call void @llvm.dbg.value(metadata i32 undef, metadata !15409, metadata !DIExpression()), !dbg !15414
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15443
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15445
  br i1 %15, label %16, label %17, !dbg !15446

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15447
  br label %17, !dbg !15449

17:                                               ; preds = %16, %10
  ret void, !dbg !15450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15451 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15453, metadata !DIExpression()), !dbg !15454
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15455
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15456
  ret i32 %3, !dbg !15457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15458 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15460, metadata !DIExpression()), !dbg !15461
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15462
  %3 = load i8, i8* %2, align 1, !dbg !15463
  %4 = or i8 %3, 16, !dbg !15463
  store i8 %4, i8* %2, align 1, !dbg !15463
  ret void, !dbg !15464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15465 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15466, !srcloc !14751
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15466
  call void @llvm.dbg.value(metadata i32 %2, metadata !14748, metadata !DIExpression()) #24, !dbg !15468
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15468
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !15469
  ret void, !dbg !15470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15473, metadata !DIExpression()), !dbg !15474
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !15475
  br i1 %2, label %3, label %5, !dbg !15477

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15478
  br label %6, !dbg !15480

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14771, metadata !DIExpression()) #24, !dbg !15481
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !15484, !srcloc !14777
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15485
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15486 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15488, metadata !DIExpression()), !dbg !15490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15491
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15493, !srcloc !14751
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15493
  call void @llvm.dbg.value(metadata i32 %3, metadata !14748, metadata !DIExpression()) #24, !dbg !15495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15495
  call void @llvm.dbg.value(metadata i32 %3, metadata !14742, metadata !DIExpression()) #24, !dbg !15491
  call void @llvm.dbg.value(metadata i32 %3, metadata !15489, metadata !DIExpression()), !dbg !15490
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !15496
  br i1 %4, label %6, label %5, !dbg !15498

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14763, metadata !DIExpression()) #24, !dbg !15499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15499
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #24, !dbg !15502
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15504, !srcloc !14777
  br label %8, !dbg !15505

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15506
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15507
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15508
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15508
  br label %8, !dbg !15509

8:                                                ; preds = %6, %5
  ret void, !dbg !15509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15510 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15512, metadata !DIExpression()), !dbg !15513
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15514
  %3 = load i8, i8* %2, align 1, !dbg !15514
  %4 = and i8 %3, 16, !dbg !15515
  %5 = icmp ne i8 %4, 0, !dbg !15516
  ret i1 %5, !dbg !15517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15518 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15520, metadata !DIExpression()), !dbg !15521
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15522
  %3 = load i8, i8* %2, align 1, !dbg !15523
  %4 = and i8 %3, -17, !dbg !15523
  store i8 %4, i8* %2, align 1, !dbg !15523
  ret void, !dbg !15524
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15525 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15535, metadata !DIExpression()), !dbg !15539
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15533, metadata !DIExpression()), !dbg !15539
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15534, metadata !DIExpression()), !dbg !15539
  call void @llvm.dbg.value(metadata i32 0, metadata !15536, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15541
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15543, !srcloc !14751
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15543
  call void @llvm.dbg.value(metadata i32 %5, metadata !14748, metadata !DIExpression()) #24, !dbg !15545
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15545
  call void @llvm.dbg.value(metadata i32 %5, metadata !14742, metadata !DIExpression()) #24, !dbg !15541
  call void @llvm.dbg.value(metadata i32 %5, metadata !15538, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.value(metadata i32 undef, metadata !15536, metadata !DIExpression()), !dbg !15540
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15546
  call void @llvm.dbg.value(metadata i32 %5, metadata !14763, metadata !DIExpression()) #24, !dbg !15549
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15549
  call void @llvm.dbg.value(metadata i32 %5, metadata !14771, metadata !DIExpression()) #24, !dbg !15551
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !15553, !srcloc !14777
  call void @llvm.dbg.value(metadata i32 1, metadata !15536, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.value(metadata i32 undef, metadata !15536, metadata !DIExpression()), !dbg !15540
  ret void, !dbg !15554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15555 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15559, metadata !DIExpression()), !dbg !15560
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15557, metadata !DIExpression()), !dbg !15560
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15558, metadata !DIExpression()), !dbg !15560
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !15561
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !15562
  ret void, !dbg !15563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15568, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15569, metadata !DIExpression()), !dbg !15570
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !15571
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !15572
  %3 = icmp eq %union.anon* %1, null, !dbg !15573
  br i1 %3, label %21, label %4, !dbg !15575

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15576
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15578
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15579
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14936, metadata !DIExpression()) #24, !dbg !15580
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14942, metadata !DIExpression()) #24, !dbg !15580
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15582
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14943, metadata !DIExpression()) #24, !dbg !15580
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15583
  br i1 %8, label %19, label %9, !dbg !15582

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14943, metadata !DIExpression()) #24, !dbg !15580
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15584
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14943, metadata !DIExpression()) #24, !dbg !15580
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15585
  %13 = icmp sgt i32 %12, 0, !dbg !15586
  br i1 %13, label %14, label %16, !dbg !15587

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15588
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15589
  br label %21, !dbg !15590

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15583
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14943, metadata !DIExpression()) #24, !dbg !15580
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15583
  br i1 %18, label %19, label %9, !dbg !15582, !llvm.loop !15591

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15593
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15594
  br label %21, !dbg !15595

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15597 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15602, metadata !DIExpression()), !dbg !15603
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15601, metadata !DIExpression()), !dbg !15603
  %4 = icmp eq i64 %3, -1, !dbg !15604
  br i1 %4, label %6, label %5, !dbg !15606

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.161(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15607
  br label %6, !dbg !15609

6:                                                ; preds = %5, %2
  ret void, !dbg !15610
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.161(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15611 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15614, metadata !DIExpression()), !dbg !15615
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15613, metadata !DIExpression()), !dbg !15615
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15616
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15617
  ret void, !dbg !15618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15619 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15621, metadata !DIExpression()), !dbg !15629
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15630
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15630
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15622, metadata !DIExpression()), !dbg !15629
  call void @llvm.dbg.value(metadata i32 0, metadata !15623, metadata !DIExpression()), !dbg !15631
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15632
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15634, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 undef, metadata !14748, metadata !DIExpression()) #24, !dbg !15636
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15636
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #24, !dbg !15632
  call void @llvm.dbg.value(metadata i32 undef, metadata !15625, metadata !DIExpression()), !dbg !15631
  call void @llvm.dbg.value(metadata i32 undef, metadata !15623, metadata !DIExpression()), !dbg !15631
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15637
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15638
  %7 = load i8, i8* %6, align 1, !dbg !15638
  %8 = and i8 %7, 40, !dbg !15639
  %9 = icmp eq i8 %8, 0, !dbg !15639
  call void @llvm.dbg.value(metadata i1 %9, metadata !15626, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15640
  br i1 %9, label %10, label %17, !dbg !15641

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15642
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15642
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15642
  %14 = icmp eq %union.anon* %13, null, !dbg !15646
  br i1 %14, label %16, label %15, !dbg !15647

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !15648
  br label %16, !dbg !15650

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.158(%struct.k_thread* noundef nonnull %3) #26, !dbg !15651
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !15652
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !15653
  br label %17, !dbg !15654

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15634
  call void @llvm.dbg.value(metadata i32 %18, metadata !14748, metadata !DIExpression()) #24, !dbg !15636
  call void @llvm.dbg.value(metadata i32 %18, metadata !14742, metadata !DIExpression()) #24, !dbg !15632
  call void @llvm.dbg.value(metadata i32 %18, metadata !15625, metadata !DIExpression()), !dbg !15631
  call void @llvm.dbg.value(metadata i32 undef, metadata !14763, metadata !DIExpression()) #24, !dbg !15655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15655
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #24, !dbg !15657
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !15659, !srcloc !14777
  call void @llvm.dbg.value(metadata i32 1, metadata !15623, metadata !DIExpression()), !dbg !15631
  call void @llvm.dbg.value(metadata i32 undef, metadata !15623, metadata !DIExpression()), !dbg !15631
  ret void, !dbg !15660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15661 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15663, metadata !DIExpression()), !dbg !15664
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15665
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !15666
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15667
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15668
  ret void, !dbg !15669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15670 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15672, metadata !DIExpression()), !dbg !15673
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15674
  %3 = load i8, i8* %2, align 1, !dbg !15675
  %4 = and i8 %3, -3, !dbg !15675
  store i8 %4, i8* %2, align 1, !dbg !15675
  ret void, !dbg !15676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15677 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15679, metadata !DIExpression()), !dbg !15680
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15681
  br i1 %2, label %3, label %7, !dbg !15683

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14905, metadata !DIExpression()) #24, !dbg !15684
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15687
  %5 = load i8, i8* %4, align 1, !dbg !15688
  %6 = and i8 %5, 127, !dbg !15688
  store i8 %6, i8* %4, align 1, !dbg !15688
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14913, metadata !DIExpression()) #24, !dbg !15689
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15691
  br label %7, !dbg !15692

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15693
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15694
  %10 = zext i1 %9 to i32, !dbg !15694
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !15695
  ret void, !dbg !15696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15697 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15699, metadata !DIExpression()), !dbg !15700
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15701
  %3 = load i8, i8* %2, align 1, !dbg !15702
  %4 = or i8 %3, 2, !dbg !15702
  store i8 %4, i8* %2, align 1, !dbg !15702
  ret void, !dbg !15703
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15704 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15706, metadata !DIExpression()), !dbg !15710
  call void @llvm.dbg.value(metadata i32 0, metadata !15707, metadata !DIExpression()), !dbg !15711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15712
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15714, !srcloc !14751
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15714
  call void @llvm.dbg.value(metadata i32 %3, metadata !14748, metadata !DIExpression()) #24, !dbg !15716
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15716
  call void @llvm.dbg.value(metadata i32 %3, metadata !14742, metadata !DIExpression()) #24, !dbg !15712
  call void @llvm.dbg.value(metadata i32 %3, metadata !15709, metadata !DIExpression()), !dbg !15711
  call void @llvm.dbg.value(metadata i32 undef, metadata !15707, metadata !DIExpression()), !dbg !15711
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15717
  call void @llvm.dbg.value(metadata i32 %3, metadata !14763, metadata !DIExpression()) #24, !dbg !15720
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15720
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #24, !dbg !15722
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15724, !srcloc !14777
  call void @llvm.dbg.value(metadata i32 1, metadata !15707, metadata !DIExpression()), !dbg !15711
  call void @llvm.dbg.value(metadata i32 undef, metadata !15707, metadata !DIExpression()), !dbg !15711
  ret void, !dbg !15725
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15726 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15732, metadata !DIExpression()), !dbg !15737
  call void @llvm.dbg.value(metadata i32 %0, metadata !15730, metadata !DIExpression()), !dbg !15737
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15731, metadata !DIExpression()), !dbg !15737
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15738
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15739
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15740
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15741
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15742
  call void @llvm.dbg.value(metadata i32 %6, metadata !15733, metadata !DIExpression()), !dbg !15737
  call void @llvm.dbg.value(metadata i32 0, metadata !15734, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15744
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15746, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 undef, metadata !14748, metadata !DIExpression()) #24, !dbg !15748
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15748
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #24, !dbg !15744
  call void @llvm.dbg.value(metadata i32 undef, metadata !15736, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.value(metadata i32 undef, metadata !15734, metadata !DIExpression()), !dbg !15743
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15749
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15753
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15754
  br i1 %10, label %11, label %12, !dbg !15755

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15756
  br label %12, !dbg !15758

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15746
  call void @llvm.dbg.value(metadata i32 %13, metadata !14748, metadata !DIExpression()) #24, !dbg !15748
  call void @llvm.dbg.value(metadata i32 %13, metadata !14742, metadata !DIExpression()) #24, !dbg !15744
  call void @llvm.dbg.value(metadata i32 %13, metadata !15736, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.value(metadata i32 undef, metadata !14763, metadata !DIExpression()) #24, !dbg !15759
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15759
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #24, !dbg !15761
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !15763, !srcloc !14777
  call void @llvm.dbg.value(metadata i32 1, metadata !15734, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.value(metadata i32 undef, metadata !15734, metadata !DIExpression()), !dbg !15743
  ret i32 %6, !dbg !15764
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15765 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15770, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.value(metadata i64 undef, metadata !15772, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15769, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15771, metadata !DIExpression()), !dbg !15773
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15774
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15776
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15778, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 undef, metadata !14748, metadata !DIExpression()) #24, !dbg !15780
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15780
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #24, !dbg !15776
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15781
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !15782
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15347, metadata !DIExpression()) #24, !dbg !15783
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15352, metadata !DIExpression()) #24, !dbg !15783
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15785
  ret i32 %9, !dbg !15786
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15787 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15791, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15792, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.value(metadata i32 0, metadata !15793, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15798
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15800, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 undef, metadata !14748, metadata !DIExpression()) #24, !dbg !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #24, !dbg !15798
  call void @llvm.dbg.value(metadata i32 undef, metadata !15795, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15792, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.value(metadata i32 undef, metadata !15793, metadata !DIExpression()), !dbg !15797
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15803
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15792, metadata !DIExpression()), !dbg !15796
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15806
  br i1 %5, label %7, label %6, !dbg !15808

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15809
  br label %7, !dbg !15811

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15800
  call void @llvm.dbg.value(metadata i32 %8, metadata !14748, metadata !DIExpression()) #24, !dbg !15802
  call void @llvm.dbg.value(metadata i32 %8, metadata !14742, metadata !DIExpression()) #24, !dbg !15798
  call void @llvm.dbg.value(metadata i32 %8, metadata !15795, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata i32 undef, metadata !14763, metadata !DIExpression()) #24, !dbg !15812
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15812
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #24, !dbg !15814
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15816, !srcloc !14777
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15792, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.value(metadata i32 undef, metadata !15793, metadata !DIExpression()), !dbg !15797
  ret %struct.k_thread* %4, !dbg !15817
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15818 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15820, metadata !DIExpression()), !dbg !15825
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15821, metadata !DIExpression()), !dbg !15825
  call void @llvm.dbg.value(metadata i32 0, metadata !15822, metadata !DIExpression()), !dbg !15826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15827
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15829, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 undef, metadata !14748, metadata !DIExpression()) #24, !dbg !15831
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15831
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #24, !dbg !15827
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()), !dbg !15826
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15821, metadata !DIExpression()), !dbg !15825
  call void @llvm.dbg.value(metadata i32 undef, metadata !15822, metadata !DIExpression()), !dbg !15826
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15832
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15821, metadata !DIExpression()), !dbg !15825
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15835
  br i1 %5, label %8, label %6, !dbg !15837

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15838
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15840
  br label %8, !dbg !15841

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15829
  call void @llvm.dbg.value(metadata i32 %9, metadata !14748, metadata !DIExpression()) #24, !dbg !15831
  call void @llvm.dbg.value(metadata i32 %9, metadata !14742, metadata !DIExpression()) #24, !dbg !15827
  call void @llvm.dbg.value(metadata i32 %9, metadata !15824, metadata !DIExpression()), !dbg !15826
  call void @llvm.dbg.value(metadata i32 undef, metadata !14763, metadata !DIExpression()) #24, !dbg !15842
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15842
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #24, !dbg !15844
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15846, !srcloc !14777
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15821, metadata !DIExpression()), !dbg !15825
  call void @llvm.dbg.value(metadata i32 undef, metadata !15822, metadata !DIExpression()), !dbg !15826
  ret %struct.k_thread* %4, !dbg !15847
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15848 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15850, metadata !DIExpression()), !dbg !15851
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15706, metadata !DIExpression()) #24, !dbg !15852
  call void @llvm.dbg.value(metadata i32 0, metadata !15707, metadata !DIExpression()) #24, !dbg !15854
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15855
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15857, !srcloc !14751
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15857
  call void @llvm.dbg.value(metadata i32 %3, metadata !14748, metadata !DIExpression()) #24, !dbg !15859
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15859
  call void @llvm.dbg.value(metadata i32 %3, metadata !14742, metadata !DIExpression()) #24, !dbg !15855
  call void @llvm.dbg.value(metadata i32 %3, metadata !15709, metadata !DIExpression()) #24, !dbg !15854
  call void @llvm.dbg.value(metadata i32 undef, metadata !15707, metadata !DIExpression()) #24, !dbg !15854
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15860
  call void @llvm.dbg.value(metadata i32 %3, metadata !14763, metadata !DIExpression()) #24, !dbg !15861
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15861
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #24, !dbg !15863
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15865, !srcloc !14777
  call void @llvm.dbg.value(metadata i32 1, metadata !15707, metadata !DIExpression()) #24, !dbg !15854
  call void @llvm.dbg.value(metadata i32 undef, metadata !15707, metadata !DIExpression()) #24, !dbg !15854
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15866
  ret void, !dbg !15867
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15868 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15870, metadata !DIExpression()), !dbg !15876
  call void @llvm.dbg.value(metadata i32 %1, metadata !15871, metadata !DIExpression()), !dbg !15876
  call void @llvm.dbg.value(metadata i8 0, metadata !15872, metadata !DIExpression()), !dbg !15876
  call void @llvm.dbg.value(metadata i32 0, metadata !15873, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15878
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15880, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 undef, metadata !14748, metadata !DIExpression()) #24, !dbg !15882
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15882
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #24, !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !15875, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.value(metadata i8 poison, metadata !15872, metadata !DIExpression()), !dbg !15876
  call void @llvm.dbg.value(metadata i32 undef, metadata !15873, metadata !DIExpression()), !dbg !15877
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15883
  call void @llvm.dbg.value(metadata i1 %6, metadata !15872, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15876
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15886

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14905, metadata !DIExpression()) #24, !dbg !15887
  %11 = load i8, i8* %4, align 1, !dbg !15893
  %12 = and i8 %11, 127, !dbg !15893
  store i8 %12, i8* %4, align 1, !dbg !15893
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14913, metadata !DIExpression()) #24, !dbg !15894
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15896
  store i8 %9, i8* %8, align 2, !dbg !15897
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14922, metadata !DIExpression()) #24, !dbg !15898
  %13 = load i8, i8* %4, align 1, !dbg !15900
  %14 = or i8 %13, -128, !dbg !15900
  store i8 %14, i8* %4, align 1, !dbg !15900
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14929, metadata !DIExpression()) #24, !dbg !15901
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14936, metadata !DIExpression()) #24, !dbg !15903
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14942, metadata !DIExpression()) #24, !dbg !15903
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15905
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14943, metadata !DIExpression()) #24, !dbg !15903
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15906
  br i1 %16, label %26, label %17, !dbg !15905

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14943, metadata !DIExpression()) #24, !dbg !15903
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15907
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14943, metadata !DIExpression()) #24, !dbg !15903
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !15908
  %21 = icmp sgt i32 %20, 0, !dbg !15909
  br i1 %21, label %22, label %23, !dbg !15910

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !15911
  br label %27, !dbg !15912

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !15906
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14943, metadata !DIExpression()) #24, !dbg !15903
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15906
  br i1 %25, label %26, label %17, !dbg !15905, !llvm.loop !15913

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !15915
  br label %27, !dbg !15916

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15917
  br label %29, !dbg !15918

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15919
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15880
  call void @llvm.dbg.value(metadata i32 %30, metadata !14748, metadata !DIExpression()) #24, !dbg !15882
  call void @llvm.dbg.value(metadata i32 %30, metadata !14742, metadata !DIExpression()) #24, !dbg !15878
  call void @llvm.dbg.value(metadata i32 %30, metadata !15875, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.value(metadata i32 undef, metadata !14763, metadata !DIExpression()) #24, !dbg !15921
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15921
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #24, !dbg !15923
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !15925, !srcloc !14777
  call void @llvm.dbg.value(metadata i8 poison, metadata !15872, metadata !DIExpression()), !dbg !15876
  call void @llvm.dbg.value(metadata i32 undef, metadata !15873, metadata !DIExpression()), !dbg !15877
  ret i1 %6, !dbg !15926
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15927 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15931, metadata !DIExpression()), !dbg !15934
  call void @llvm.dbg.value(metadata i32 %1, metadata !15932, metadata !DIExpression()), !dbg !15934
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15935
  call void @llvm.dbg.value(metadata i1 %3, metadata !15933, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15934
  br i1 %3, label %4, label %12, !dbg !15936

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15938
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15939
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15939
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15939
  %9 = load i8, i8* %8, align 1, !dbg !15939
  %10 = icmp eq i8 %9, 0, !dbg !15940
  br i1 %10, label %11, label %12, !dbg !15941

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15942
  br label %12, !dbg !15944

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15945
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15946 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15948, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15952
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15954, !srcloc !14751
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15954
  call void @llvm.dbg.value(metadata i32 %2, metadata !14748, metadata !DIExpression()) #24, !dbg !15956
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15956
  call void @llvm.dbg.value(metadata i32 %2, metadata !14742, metadata !DIExpression()) #24, !dbg !15952
  call void @llvm.dbg.value(metadata i32 %2, metadata !15950, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i32 undef, metadata !15948, metadata !DIExpression()), !dbg !15951
  tail call fastcc void @z_sched_lock() #26, !dbg !15957
  call void @llvm.dbg.value(metadata i32 %2, metadata !14763, metadata !DIExpression()) #24, !dbg !15960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15960
  call void @llvm.dbg.value(metadata i32 %2, metadata !14771, metadata !DIExpression()) #24, !dbg !15962
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15964, !srcloc !14777
  call void @llvm.dbg.value(metadata i32 1, metadata !15948, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i32 undef, metadata !15948, metadata !DIExpression()), !dbg !15951
  ret void, !dbg !15965
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15966 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15967
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15968
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15968
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15968
  %5 = load i8, i8* %4, align 1, !dbg !15969
  %6 = add i8 %5, -1, !dbg !15969
  store i8 %6, i8* %4, align 1, !dbg !15969
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15970, !srcloc !15972
  ret void, !dbg !15973
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15974 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15976, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !15980
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15982, !srcloc !14751
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15982
  call void @llvm.dbg.value(metadata i32 %2, metadata !14748, metadata !DIExpression()) #24, !dbg !15984
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15984
  call void @llvm.dbg.value(metadata i32 %2, metadata !14742, metadata !DIExpression()) #24, !dbg !15980
  call void @llvm.dbg.value(metadata i32 %2, metadata !15978, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i32 undef, metadata !15976, metadata !DIExpression()), !dbg !15979
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15985
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15988
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15988
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15988
  %7 = load i8, i8* %6, align 1, !dbg !15989
  %8 = add i8 %7, 1, !dbg !15989
  store i8 %8, i8* %6, align 1, !dbg !15989
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15990
  call void @llvm.dbg.value(metadata i32 %2, metadata !14763, metadata !DIExpression()) #24, !dbg !15991
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15991
  call void @llvm.dbg.value(metadata i32 %2, metadata !14771, metadata !DIExpression()) #24, !dbg !15993
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15995, !srcloc !14777
  call void @llvm.dbg.value(metadata i32 1, metadata !15976, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i32 undef, metadata !15976, metadata !DIExpression()), !dbg !15979
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15996
  ret void, !dbg !15997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !15998 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15999
  ret %struct.k_thread* %1, !dbg !16000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !16001 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16005, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16006, metadata !DIExpression()), !dbg !16010
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16011
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16007, metadata !DIExpression()), !dbg !16010
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16012
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16008, metadata !DIExpression()), !dbg !16010
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16013
  call void @llvm.dbg.value(metadata i32 %5, metadata !16009, metadata !DIExpression()), !dbg !16010
  %6 = icmp sgt i32 %5, 0, !dbg !16014
  br i1 %6, label %17, label %7, !dbg !16016

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16017
  br i1 %8, label %17, label %9, !dbg !16019

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16020
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16020
  %12 = load i32, i32* %11, align 8, !dbg !16020
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16022
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16022
  %15 = load i32, i32* %14, align 8, !dbg !16022
  %16 = icmp ult i32 %12, %15, !dbg !16023
  br label %17, !dbg !16024

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16025
  ret i1 %18, !dbg !16026
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16027 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16044, metadata !DIExpression()), !dbg !16059
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16045, metadata !DIExpression()), !dbg !16059
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16060
  %5 = load i32, i32* %4, align 4, !dbg !16061
  %6 = add nsw i32 %5, 1, !dbg !16061
  store i32 %6, i32* %4, align 4, !dbg !16061
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16062
  store i32 %5, i32* %7, align 8, !dbg !16063
  %8 = load i32, i32* %4, align 4, !dbg !16064
  %9 = icmp eq i32 %8, 0, !dbg !16065
  br i1 %9, label %10, label %32, !dbg !16066

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16067
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16067
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16047, metadata !DIExpression()), !dbg !16067
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16067
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16067
  %14 = load i32, i32* %13, align 4, !dbg !16067
  %15 = shl i32 %14, 2, !dbg !16067
  %16 = alloca i8, i32 %15, align 8, !dbg !16067
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16067
  store i8* %16, i8** %17, align 4, !dbg !16067
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16067
  %19 = alloca i8, i32 %14, align 8, !dbg !16067
  store i8* %19, i8** %18, align 4, !dbg !16067
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16067
  store i32 -1, i32* %20, align 4, !dbg !16067
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16068
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16056, metadata !DIExpression()), !dbg !16069
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16046, metadata !DIExpression()), !dbg !16059
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16070
  br i1 %22, label %23, label %24, !dbg !16067

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16070
  br label %32, !dbg !16071

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16046, metadata !DIExpression()), !dbg !16059
  %26 = load i32, i32* %4, align 4, !dbg !16072
  %27 = add nsw i32 %26, 1, !dbg !16072
  store i32 %27, i32* %4, align 4, !dbg !16072
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16074
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16074
  store i32 %26, i32* %29, align 8, !dbg !16075
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16068
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16056, metadata !DIExpression()), !dbg !16069
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16046, metadata !DIExpression()), !dbg !16059
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16070
  br i1 %31, label %23, label %24, !dbg !16067, !llvm.loop !16076

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16078
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16079
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16080
  ret void, !dbg !16081
}

; Function Attrs: optsize
declare !dbg !16082 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16087 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16090 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16092, metadata !DIExpression()), !dbg !16094
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16093, metadata !DIExpression()), !dbg !16094
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16095
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16096
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16097
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16098
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16098
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16100
  br i1 %7, label %8, label %10, !dbg !16101

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16102
  store i32 0, i32* %9, align 4, !dbg !16104
  br label %10, !dbg !16105

10:                                               ; preds = %8, %2
  ret void, !dbg !16106
}

; Function Attrs: optsize
declare !dbg !16107 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16108 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16112, metadata !DIExpression()), !dbg !16115
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16113, metadata !DIExpression()), !dbg !16115
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16116
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16117
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16114, metadata !DIExpression()), !dbg !16115
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16113, metadata !DIExpression()), !dbg !16115
  ret %struct.k_thread* %4, !dbg !16118
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16119 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16123, metadata !DIExpression()), !dbg !16124
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16125
  ret %struct.rbnode* %2, !dbg !16126
}

; Function Attrs: optsize
declare !dbg !16127 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16130 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16142, metadata !DIExpression()), !dbg !16146
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16147
  %3 = load i32, i32* %2, align 4, !dbg !16147
  %4 = icmp eq i32 %3, 0, !dbg !16149
  br i1 %4, label %10, label %5, !dbg !16150

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16143, metadata !DIExpression()), !dbg !16146
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16151, !range !3873
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16152
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16144, metadata !DIExpression()), !dbg !16146
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !16153
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16145, metadata !DIExpression()), !dbg !16146
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16143, metadata !DIExpression()), !dbg !16146
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16146
  ret %struct.k_thread* %11, !dbg !16154
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16155 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16159, metadata !DIExpression()), !dbg !16162
  call void @llvm.dbg.value(metadata i32 0, metadata !16160, metadata !DIExpression()), !dbg !16162
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16163
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16161, metadata !DIExpression()), !dbg !16162
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16164
  br i1 %3, label %8, label %4, !dbg !16165

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16166
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16168
  call void @llvm.dbg.value(metadata i32 1, metadata !16160, metadata !DIExpression()), !dbg !16162
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16163
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16161, metadata !DIExpression()), !dbg !16162
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16164
  br i1 %7, label %8, label %4, !dbg !16165, !llvm.loop !16169

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16162
  ret i32 %9, !dbg !16171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !16172 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16174, metadata !DIExpression()), !dbg !16175
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16176
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !16177
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16178
  ret %struct.k_thread* %4, !dbg !16179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !16180 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16189, metadata !DIExpression()), !dbg !16190
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16191
  tail call fastcc void @sys_dlist_init.172(%struct._dnode* noundef nonnull %2) #26, !dbg !16192
  ret void, !dbg !16193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.172(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16194 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16198, metadata !DIExpression()), !dbg !16199
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16200
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16201
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16202
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16203
  ret void, !dbg !16204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16205 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16206
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16207
  ret void, !dbg !16208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !16209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16214, metadata !DIExpression()), !dbg !16215
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16216
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16216
  %4 = load i8, i8* %3, align 2, !dbg !16216
  %5 = sext i8 %4 to i32, !dbg !16217
  ret i32 %5, !dbg !16218
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16219 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16223, metadata !DIExpression()), !dbg !16226
  call void @llvm.dbg.value(metadata i32 %1, metadata !16224, metadata !DIExpression()), !dbg !16226
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16225, metadata !DIExpression()), !dbg !16226
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16227
  ret void, !dbg !16228
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16229 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16230
  br i1 %1, label %8, label %2, !dbg !16231

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16232
  br i1 %3, label %8, label %4, !dbg !16233

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16234
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16235
  %7 = xor i1 %6, true, !dbg !16233
  br label %8, !dbg !16233

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !16237 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16238, !range !7169
  %2 = icmp eq i8 %1, 0, !dbg !16238
  ret i1 %2, !dbg !16239
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16240 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !16243
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16245, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 undef, metadata !14748, metadata !DIExpression()) #24, !dbg !16247
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !16247
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #24, !dbg !16243
  call void @llvm.dbg.value(metadata i32 undef, metadata !16242, metadata !DIExpression()), !dbg !16248
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16249
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14905, metadata !DIExpression()) #24, !dbg !16252
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16254
  %4 = load i8, i8* %3, align 1, !dbg !16255
  %5 = and i8 %4, 127, !dbg !16255
  store i8 %5, i8* %3, align 1, !dbg !16255
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14913, metadata !DIExpression()) #24, !dbg !16256
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16258
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16259
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14922, metadata !DIExpression()) #24, !dbg !16260
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16262
  %8 = load i8, i8* %7, align 1, !dbg !16263
  %9 = or i8 %8, -128, !dbg !16263
  store i8 %9, i8* %7, align 1, !dbg !16263
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14929, metadata !DIExpression()) #24, !dbg !16264
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14936, metadata !DIExpression()) #24, !dbg !16266
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14942, metadata !DIExpression()) #24, !dbg !16266
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16268
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14943, metadata !DIExpression()) #24, !dbg !16266
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16269
  br i1 %11, label %22, label %12, !dbg !16268

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14943, metadata !DIExpression()) #24, !dbg !16266
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16270
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14943, metadata !DIExpression()) #24, !dbg !16266
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16271
  %16 = icmp sgt i32 %15, 0, !dbg !16272
  br i1 %16, label %17, label %19, !dbg !16273

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16274
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16275
  br label %24, !dbg !16276

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16269
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14943, metadata !DIExpression()) #24, !dbg !16266
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16269
  br i1 %21, label %22, label %12, !dbg !16268, !llvm.loop !16277

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16279
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16280
  br label %24, !dbg !16281

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16245
  call void @llvm.dbg.value(metadata i32 %25, metadata !14748, metadata !DIExpression()) #24, !dbg !16247
  call void @llvm.dbg.value(metadata i32 %25, metadata !14742, metadata !DIExpression()) #24, !dbg !16243
  call void @llvm.dbg.value(metadata i32 %25, metadata !16242, metadata !DIExpression()), !dbg !16248
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16282
  call void @llvm.dbg.value(metadata i32 undef, metadata !15347, metadata !DIExpression()) #24, !dbg !16283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15352, metadata !DIExpression()) #24, !dbg !16283
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16285
  ret void, !dbg !16286
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16287 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16291, metadata !DIExpression()), !dbg !16294
  %3 = icmp eq i64 %2, -1, !dbg !16295
  br i1 %3, label %4, label %6, !dbg !16297

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16298
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !16300
  br label %11, !dbg !16301

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16292, metadata !DIExpression()), !dbg !16294
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !16302
  %8 = sext i32 %7 to i64, !dbg !16302
  call void @llvm.dbg.value(metadata i64 %8, metadata !16292, metadata !DIExpression()), !dbg !16294
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !16303
  %10 = trunc i64 %9 to i32, !dbg !16303
  call void @llvm.dbg.value(metadata i32 %10, metadata !16293, metadata !DIExpression()), !dbg !16294
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16294
  ret i32 %12, !dbg !16304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16305 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16309, metadata !DIExpression()), !dbg !16310
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16311, !srcloc !16313
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !16314
  ret void, !dbg !16315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16316 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16320, metadata !DIExpression()), !dbg !16324
  %2 = icmp eq i64 %0, 0, !dbg !16325
  br i1 %2, label %3, label %4, !dbg !16327

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !16328
  br label %29, !dbg !16330

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16322, metadata !DIExpression()), !dbg !16324
  %5 = icmp sgt i64 %0, -3, !dbg !16331
  br i1 %5, label %6, label %10, !dbg !16333

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16334
  %8 = trunc i64 %0 to i32, !dbg !16336
  %9 = add i32 %7, %8, !dbg !16336
  call void @llvm.dbg.value(metadata i32 %9, metadata !16321, metadata !DIExpression()), !dbg !16324
  br label %13, !dbg !16337

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16338
  %12 = sub i32 -2, %11, !dbg !16338
  call void @llvm.dbg.value(metadata i32 %12, metadata !16321, metadata !DIExpression()), !dbg !16324
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16340
  call void @llvm.dbg.value(metadata i32 %14, metadata !16321, metadata !DIExpression()), !dbg !16324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !16341
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16343, !srcloc !14751
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16343
  call void @llvm.dbg.value(metadata i32 %16, metadata !14748, metadata !DIExpression()) #24, !dbg !16345
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !16345
  call void @llvm.dbg.value(metadata i32 %16, metadata !14742, metadata !DIExpression()) #24, !dbg !16341
  call void @llvm.dbg.value(metadata i32 %16, metadata !16323, metadata !DIExpression()), !dbg !16324
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16346
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16347
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !16348
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16349
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16350
  tail call fastcc void @z_add_thread_timeout.161(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !16350
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16351
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !16352
  call void @llvm.dbg.value(metadata i32 %16, metadata !15347, metadata !DIExpression()) #24, !dbg !16353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15352, metadata !DIExpression()) #24, !dbg !16353
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16355
  %22 = zext i32 %14 to i64, !dbg !16356
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16357
  %24 = zext i32 %23 to i64, !dbg !16357
  %25 = sub nsw i64 %22, %24, !dbg !16358
  call void @llvm.dbg.value(metadata i64 %25, metadata !16320, metadata !DIExpression()), !dbg !16324
  %26 = icmp sgt i64 %25, 0, !dbg !16359
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16359
  %28 = trunc i64 %27 to i32, !dbg !16359
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16324
  ret i32 %30, !dbg !16360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16361 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16363, metadata !DIExpression()), !dbg !16364
  call void @llvm.dbg.value(metadata i64 %0, metadata !14783, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i32 10000, metadata !14786, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i32 1000, metadata !14787, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i8 1, metadata !14788, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i1 false, metadata !14789, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16365
  call void @llvm.dbg.value(metadata i1 false, metadata !14790, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16365
  call void @llvm.dbg.value(metadata i8 0, metadata !14791, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i1 false, metadata !14792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16365
  call void @llvm.dbg.value(metadata i1 true, metadata !14793, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16365
  call void @llvm.dbg.value(metadata i64 0, metadata !14794, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i64 0, metadata !14794, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i64 %0, metadata !14783, metadata !DIExpression()), !dbg !16365
  %2 = udiv i64 %0, 10, !dbg !16367
  ret i64 %2, !dbg !16371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16372 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16373, !srcloc !16375
  tail call void @z_impl_k_yield() #26, !dbg !16376
  ret void, !dbg !16377
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16382, metadata !DIExpression()), !dbg !16384
  %2 = sext i32 %0 to i64, !dbg !16385
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !16386
  call void @llvm.dbg.value(metadata i64 %3, metadata !16383, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16384
  %4 = shl i64 %3, 32, !dbg !16387
  %5 = ashr exact i64 %4, 32, !dbg !16387
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !16388
  call void @llvm.dbg.value(metadata i32 %6, metadata !16383, metadata !DIExpression()), !dbg !16384
  %7 = sext i32 %6 to i64, !dbg !16389
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !16390
  %9 = trunc i64 %8 to i32, !dbg !16390
  ret i32 %9, !dbg !16391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !16392 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16394, metadata !DIExpression()), !dbg !16395
  call void @llvm.dbg.value(metadata i64 %0, metadata !14783, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14786, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata i32 10000, metadata !14787, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata i8 1, metadata !14788, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata i1 false, metadata !14789, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16396
  call void @llvm.dbg.value(metadata i1 true, metadata !14790, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16396
  call void @llvm.dbg.value(metadata i8 0, metadata !14791, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata i1 false, metadata !14792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16396
  call void @llvm.dbg.value(metadata i1 true, metadata !14793, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16396
  call void @llvm.dbg.value(metadata i64 0, metadata !14794, metadata !DIExpression()), !dbg !16396
  call void @llvm.dbg.value(metadata i64 0, metadata !14794, metadata !DIExpression()), !dbg !16396
  %2 = add i64 %0, 99, !dbg !16398
  call void @llvm.dbg.value(metadata i64 %2, metadata !14783, metadata !DIExpression()), !dbg !16396
  %3 = udiv i64 %2, 100, !dbg !16399
  ret i64 %3, !dbg !16400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16401 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16403, metadata !DIExpression()), !dbg !16404
  call void @llvm.dbg.value(metadata i64 %0, metadata !14783, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata i32 10000, metadata !14786, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14787, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata i8 1, metadata !14788, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata i1 false, metadata !14789, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16405
  call void @llvm.dbg.value(metadata i1 false, metadata !14790, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16405
  call void @llvm.dbg.value(metadata i8 0, metadata !14791, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata i1 true, metadata !14792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16405
  call void @llvm.dbg.value(metadata i1 false, metadata !14793, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16405
  call void @llvm.dbg.value(metadata i64 0, metadata !14794, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata i64 0, metadata !14794, metadata !DIExpression()), !dbg !16405
  %2 = mul i64 %0, 100, !dbg !16407
  ret i64 %2, !dbg !16409
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16410 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16412, metadata !DIExpression()), !dbg !16413
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !16414
  br i1 %2, label %14, label %3, !dbg !16416

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16417
  %5 = icmp slt i32 %4, 0, !dbg !16419
  br i1 %5, label %6, label %10, !dbg !16420

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16421
  %8 = load i8, i8* %7, align 1, !dbg !16421
  %9 = icmp eq i8 %8, 16, !dbg !16424
  br i1 %9, label %10, label %14, !dbg !16425

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16426
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16427
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16428, !srcloc !15387
  call void @llvm.dbg.value(metadata i32 %11, metadata !15383, metadata !DIExpression()) #24, !dbg !16432
  %12 = icmp eq i32 %11, 0, !dbg !16433
  br i1 %12, label %13, label %14, !dbg !16434

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16435
  br label %14, !dbg !16437

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16439 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16441, metadata !DIExpression()), !dbg !16442
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16443
  %3 = load i8, i8* %2, align 1, !dbg !16443
  %4 = and i8 %3, 2, !dbg !16444
  %5 = icmp ne i8 %4, 0, !dbg !16445
  ret i1 %5, !dbg !16446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16447 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16452
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16451, metadata !DIExpression()), !dbg !16453
  ret %struct.k_thread* %1, !dbg !16454
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16455 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16456, !srcloc !15387
  call void @llvm.dbg.value(metadata i32 %1, metadata !15383, metadata !DIExpression()) #24, !dbg !16459
  %2 = icmp eq i32 %1, 0, !dbg !16460
  br i1 %2, label %3, label %8, !dbg !16461

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16462
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !16463
  %6 = icmp ne i32 %5, 0, !dbg !16461
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16464
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16465 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16467, metadata !DIExpression()), !dbg !16469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !16470
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16472, !srcloc !14751
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16472
  call void @llvm.dbg.value(metadata i32 %3, metadata !14748, metadata !DIExpression()) #24, !dbg !16474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !16474
  call void @llvm.dbg.value(metadata i32 %3, metadata !14742, metadata !DIExpression()) #24, !dbg !16470
  call void @llvm.dbg.value(metadata i32 %3, metadata !16468, metadata !DIExpression()), !dbg !16469
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16475
  %5 = load i8, i8* %4, align 4, !dbg !16475
  %6 = and i8 %5, 1, !dbg !16477
  %7 = icmp eq i8 %6, 0, !dbg !16478
  br i1 %7, label %9, label %8, !dbg !16479

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14763, metadata !DIExpression()) #24, !dbg !16480
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !16480
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #24, !dbg !16483
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16485, !srcloc !14777
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !16486, !srcloc !16488
  br label %24, !dbg !16489

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16490
  %11 = load i8, i8* %10, align 1, !dbg !16490
  %12 = and i8 %11, 8, !dbg !16492
  %13 = icmp eq i8 %12, 0, !dbg !16493
  br i1 %13, label %15, label %14, !dbg !16494

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14763, metadata !DIExpression()) #24, !dbg !16495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !16495
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #24, !dbg !16498
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16500, !srcloc !14777
  br label %24, !dbg !16501

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !16502
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16503
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16505
  br i1 %17, label %18, label %23, !dbg !16506

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16507, !srcloc !15387
  call void @llvm.dbg.value(metadata i32 %19, metadata !15383, metadata !DIExpression()) #24, !dbg !16510
  %20 = icmp eq i32 %19, 0, !dbg !16511
  br i1 %20, label %21, label %23, !dbg !16512

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15347, metadata !DIExpression()) #24, !dbg !16513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15352, metadata !DIExpression()) #24, !dbg !16513
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16516
  br label %23, !dbg !16517

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14763, metadata !DIExpression()) #24, !dbg !16518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !16518
  call void @llvm.dbg.value(metadata i32 %3, metadata !14771, metadata !DIExpression()) #24, !dbg !16520
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16522, !srcloc !14777
  br label %24, !dbg !16523

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16523
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16524 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16526, metadata !DIExpression()), !dbg !16527
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16528
  %3 = load i8, i8* %2, align 1, !dbg !16528
  %4 = and i8 %3, 8, !dbg !16530
  %5 = icmp eq i8 %4, 0, !dbg !16531
  br i1 %5, label %6, label %20, !dbg !16532

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16533
  %8 = or i8 %7, 8, !dbg !16533
  store i8 %8, i8* %2, align 1, !dbg !16533
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16535
  br i1 %9, label %10, label %12, !dbg !16537

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14905, metadata !DIExpression()) #24, !dbg !16538
  %11 = and i8 %8, 95, !dbg !16541
  store i8 %11, i8* %2, align 1, !dbg !16541
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14913, metadata !DIExpression()) #24, !dbg !16542
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16544
  br label %12, !dbg !16545

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16546
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16546
  %15 = icmp eq %union.anon* %14, null, !dbg !16548
  br i1 %15, label %17, label %16, !dbg !16549

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16550
  br label %17, !dbg !16552

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16553
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16554
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !16555
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16556
  br label %20, !dbg !16557

20:                                               ; preds = %17, %1
  ret void, !dbg !16558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16559 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16563, metadata !DIExpression()), !dbg !16565
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16566
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16564, metadata !DIExpression()), !dbg !16565
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16567
  br i1 %3, label %10, label %4, !dbg !16568

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16569
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16571
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16572, metadata !DIExpression()), !dbg !16578
  call void @llvm.dbg.value(metadata i32 0, metadata !16577, metadata !DIExpression()), !dbg !16578
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16580
  store i32 0, i32* %7, align 4, !dbg !16581
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16582
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16566
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16564, metadata !DIExpression()), !dbg !16565
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16567
  br i1 %9, label %10, label %4, !dbg !16568, !llvm.loop !16583

10:                                               ; preds = %4, %1
  ret void, !dbg !16585
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16586 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16591, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16590, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !16595
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16597, !srcloc !14751
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16597
  call void @llvm.dbg.value(metadata i32 %4, metadata !14748, metadata !DIExpression()) #24, !dbg !16599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !16599
  call void @llvm.dbg.value(metadata i32 %4, metadata !14742, metadata !DIExpression()) #24, !dbg !16595
  call void @llvm.dbg.value(metadata i32 %4, metadata !16592, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata i32 0, metadata !16593, metadata !DIExpression()), !dbg !16594
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16600
  %6 = load i8, i8* %5, align 1, !dbg !16600
  %7 = and i8 %6, 8, !dbg !16602
  %8 = icmp eq i8 %7, 0, !dbg !16603
  br i1 %8, label %9, label %24, !dbg !16604

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16591, metadata !DIExpression()), !dbg !16594
  %11 = icmp eq i64 %10, 0, !dbg !16605
  br i1 %11, label %24, label %12, !dbg !16607

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16608
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16610
  br i1 %14, label %24, label %15, !dbg !16611

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16612
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16612
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16613
  %19 = icmp eq %union.anon* %17, %18, !dbg !16614
  br i1 %19, label %24, label %20, !dbg !16615

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16616
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !16618
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16619
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !16620
  call void @llvm.dbg.value(metadata i32 %4, metadata !15347, metadata !DIExpression()) #24, !dbg !16621
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15352, metadata !DIExpression()) #24, !dbg !16621
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16623
  call void @llvm.dbg.value(metadata i32 %23, metadata !16593, metadata !DIExpression()), !dbg !16594
  br label %26, !dbg !16624

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16625
  call void @llvm.dbg.value(metadata i32 %25, metadata !16593, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata i32 %4, metadata !14763, metadata !DIExpression()) #24, !dbg !16626
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !16626
  call void @llvm.dbg.value(metadata i32 %4, metadata !14771, metadata !DIExpression()) #24, !dbg !16628
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !16630, !srcloc !14777
  br label %26, !dbg !16631

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16594
  ret i32 %27, !dbg !16632
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16633 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16637, metadata !DIExpression()), !dbg !16645
  call void @llvm.dbg.value(metadata i32 %1, metadata !16638, metadata !DIExpression()), !dbg !16645
  call void @llvm.dbg.value(metadata i8* %2, metadata !16639, metadata !DIExpression()), !dbg !16645
  call void @llvm.dbg.value(metadata i8 0, metadata !16641, metadata !DIExpression()), !dbg !16645
  call void @llvm.dbg.value(metadata i32 0, metadata !16642, metadata !DIExpression()), !dbg !16646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14736, metadata !DIExpression()) #24, !dbg !16647
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16649, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 undef, metadata !14748, metadata !DIExpression()) #24, !dbg !16651
  call void @llvm.dbg.value(metadata i32 undef, metadata !14749, metadata !DIExpression()) #24, !dbg !16651
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #24, !dbg !16647
  call void @llvm.dbg.value(metadata i32 undef, metadata !16644, metadata !DIExpression()), !dbg !16646
  call void @llvm.dbg.value(metadata i8 poison, metadata !16641, metadata !DIExpression()), !dbg !16645
  call void @llvm.dbg.value(metadata i32 undef, metadata !16642, metadata !DIExpression()), !dbg !16646
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !16652
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16640, metadata !DIExpression()), !dbg !16645
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16655
  br i1 %7, label %12, label %8, !dbg !16657

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16658, metadata !DIExpression()), !dbg !16666
  call void @llvm.dbg.value(metadata i32 %1, metadata !16664, metadata !DIExpression()), !dbg !16666
  call void @llvm.dbg.value(metadata i8* %2, metadata !16665, metadata !DIExpression()), !dbg !16666
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16572, metadata !DIExpression()), !dbg !16669
  call void @llvm.dbg.value(metadata i32 %1, metadata !16577, metadata !DIExpression()), !dbg !16669
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16671
  store i32 %1, i32* %9, align 4, !dbg !16672
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16673
  store i8* %2, i8** %10, align 4, !dbg !16674
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16675
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16676
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !16677
  call void @llvm.dbg.value(metadata i8 1, metadata !16641, metadata !DIExpression()), !dbg !16645
  br label %12, !dbg !16678

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16649
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16649
  call void @llvm.dbg.value(metadata i32 %14, metadata !14748, metadata !DIExpression()) #24, !dbg !16651
  call void @llvm.dbg.value(metadata i32 %14, metadata !14742, metadata !DIExpression()) #24, !dbg !16647
  call void @llvm.dbg.value(metadata i32 %14, metadata !16644, metadata !DIExpression()), !dbg !16646
  call void @llvm.dbg.value(metadata i8 poison, metadata !16641, metadata !DIExpression()), !dbg !16645
  call void @llvm.dbg.value(metadata i32 undef, metadata !14763, metadata !DIExpression()) #24, !dbg !16679
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14768, metadata !DIExpression()) #24, !dbg !16679
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #24, !dbg !16681
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !16683, !srcloc !14777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16642, metadata !DIExpression()), !dbg !16646
  ret i1 %13, !dbg !16684
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16685 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16691, metadata !DIExpression()), !dbg !16696
  call void @llvm.dbg.value(metadata i64 undef, metadata !16693, metadata !DIExpression()), !dbg !16696
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16690, metadata !DIExpression()), !dbg !16696
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16692, metadata !DIExpression()), !dbg !16696
  call void @llvm.dbg.value(metadata i8** %4, metadata !16694, metadata !DIExpression()), !dbg !16696
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16697
  call void @llvm.dbg.value(metadata i32 %6, metadata !16695, metadata !DIExpression()), !dbg !16696
  %7 = icmp eq i8** %4, null, !dbg !16698
  br i1 %7, label %12, label %8, !dbg !16700

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16701
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16703
  %11 = load i8*, i8** %10, align 4, !dbg !16703
  store i8* %11, i8** %4, align 4, !dbg !16704
  br label %12, !dbg !16705

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16706
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16707 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16709
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16710
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #25, !dbg !16711
  ret void, !dbg !16712
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16713 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16723, metadata !DIExpression()), !dbg !16740
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16721, metadata !DIExpression()), !dbg !16740
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16722, metadata !DIExpression()), !dbg !16740
  %5 = icmp eq i64 %4, -1, !dbg !16741
  br i1 %5, label %55, label %6, !dbg !16743

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16744
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16745
  call void @llvm.dbg.value(metadata i32 0, metadata !16724, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !16754
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16756, !srcloc !16762
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16756
  call void @llvm.dbg.value(metadata i32 %9, metadata !16759, metadata !DIExpression()) #24, !dbg !16763
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !16763
  call void @llvm.dbg.value(metadata i32 %9, metadata !16753, metadata !DIExpression()) #24, !dbg !16754
  call void @llvm.dbg.value(metadata i32 %9, metadata !16730, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata i32 undef, metadata !16724, metadata !DIExpression()), !dbg !16746
  %10 = icmp slt i64 %4, -1, !dbg !16764
  br i1 %10, label %11, label %17, !dbg !16765

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16766
  %13 = add i64 %4, %12, !dbg !16767
  %14 = sub i64 -2, %13, !dbg !16767
  call void @llvm.dbg.value(metadata i64 %14, metadata !16734, metadata !DIExpression()), !dbg !16768
  %15 = icmp sgt i64 %14, 1, !dbg !16769
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16769
  br label %22, !dbg !16770

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16771
  %19 = tail call fastcc i32 @elapsed.185() #26, !dbg !16773
  %20 = sext i32 %19 to i64, !dbg !16773
  %21 = add nsw i64 %18, %20, !dbg !16774
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16775
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16776
  store i64 %23, i64* %24, align 8, !dbg !16777
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !16778
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16731, metadata !DIExpression()), !dbg !16780
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16781
  br i1 %26, label %42, label %27, !dbg !16781

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16782
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16731, metadata !DIExpression()), !dbg !16780
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16786
  %31 = load i64, i64* %30, align 8, !dbg !16786
  %32 = icmp slt i64 %28, %31, !dbg !16787
  br i1 %32, label %33, label %38, !dbg !16788

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16786
  %35 = sub nsw i64 %31, %28, !dbg !16789
  store i64 %35, i64* %34, align 8, !dbg !16789
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16791
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16792
  tail call fastcc void @sys_dlist_insert.186(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !16793
  br label %44, !dbg !16794

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16795
  store i64 %39, i64* %24, align 8, !dbg !16795
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !16796
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16731, metadata !DIExpression()), !dbg !16780
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16781
  br i1 %41, label %42, label %27, !dbg !16781, !llvm.loop !16797

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16799
  tail call fastcc void @sys_dlist_append.187(%struct._dnode* noundef %43) #26, !dbg !16802
  br label %44, !dbg !16803

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !16804
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16805
  br i1 %46, label %47, label %54, !dbg !16806

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !16807
  call void @llvm.dbg.value(metadata i32 %48, metadata !16737, metadata !DIExpression()), !dbg !16808
  %49 = icmp ne i32 %48, 0, !dbg !16809
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16811
  br i1 %52, label %54, label %53, !dbg !16811

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16812
  br label %54, !dbg !16814

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16815, metadata !DIExpression()) #24, !dbg !16821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !16821
  call void @llvm.dbg.value(metadata i32 %9, metadata !16823, metadata !DIExpression()) #24, !dbg !16826
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !16828, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !16724, metadata !DIExpression()), !dbg !16746
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16830
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.185() unnamed_addr #1 !dbg !16831 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16834
  %2 = icmp eq i32 %1, 0, !dbg !16835
  br i1 %2, label %3, label %5, !dbg !16834

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16836
  br label %5, !dbg !16834

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16834
  ret i32 %6, !dbg !16837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16838 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.190() #26, !dbg !16844
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16842, metadata !DIExpression()), !dbg !16845
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16846
  ret %struct._timeout* %2, !dbg !16847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.186(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16848 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16852, metadata !DIExpression()), !dbg !16856
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16853, metadata !DIExpression()), !dbg !16856
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16857
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16857
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16854, metadata !DIExpression()), !dbg !16856
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16858
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16859
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16860
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16861
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16862
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16863
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16864
  ret void, !dbg !16865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16866 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16870, metadata !DIExpression()), !dbg !16872
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16873
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.188(%struct._dnode* noundef %2) #26, !dbg !16874
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16871, metadata !DIExpression()), !dbg !16872
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16875
  ret %struct._timeout* %4, !dbg !16876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.187(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16877 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16882, metadata !DIExpression()), !dbg !16885
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16883, metadata !DIExpression()), !dbg !16885
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16886
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16884, metadata !DIExpression()), !dbg !16885
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16887
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16888
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16889
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16890
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16891
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16892
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16893
  ret void, !dbg !16894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16895 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !16900
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16897, metadata !DIExpression()), !dbg !16901
  %2 = tail call fastcc i32 @elapsed.185() #26, !dbg !16902
  call void @llvm.dbg.value(metadata i32 %2, metadata !16898, metadata !DIExpression()), !dbg !16901
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16903
  br i1 %3, label %14, label %4, !dbg !16905

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16906
  %6 = load i64, i64* %5, align 8, !dbg !16906
  %7 = sext i32 %2 to i64, !dbg !16907
  %8 = sub nsw i64 %6, %7, !dbg !16908
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16909
  br i1 %9, label %14, label %10, !dbg !16910

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16911
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16911
  %13 = trunc i64 %12 to i32, !dbg !16911
  call void @llvm.dbg.value(metadata i32 %13, metadata !16899, metadata !DIExpression()), !dbg !16901
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16913
  call void @llvm.dbg.value(metadata i32 %15, metadata !16899, metadata !DIExpression()), !dbg !16901
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16914
  %17 = icmp ne i32 %16, 0, !dbg !16916
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16917
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16917
  call void @llvm.dbg.value(metadata i32 %20, metadata !16899, metadata !DIExpression()), !dbg !16901
  ret i32 %20, !dbg !16918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.188(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16919 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16923, metadata !DIExpression()), !dbg !16925
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16924, metadata !DIExpression()), !dbg !16925
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16926
  br i1 %2, label %5, label %3, !dbg !16927

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.189(%struct._dnode* noundef nonnull %0) #26, !dbg !16928
  br label %5, !dbg !16927

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16927
  ret %struct._dnode* %6, !dbg !16929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.189(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16930 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16932, metadata !DIExpression()), !dbg !16934
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16933, metadata !DIExpression()), !dbg !16934
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16935
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16936
  br i1 %3, label %7, label %4, !dbg !16937

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16938
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16938
  br label %7, !dbg !16937

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16937
  ret %struct._dnode* %8, !dbg !16939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.190() unnamed_addr #5 !dbg !16940 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16944, metadata !DIExpression()), !dbg !16945
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.191() #26, !dbg !16946
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16946
  ret %struct._dnode* %3, !dbg !16947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.191() unnamed_addr #5 !dbg !16948 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16952, metadata !DIExpression()), !dbg !16953
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16954
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16955
  ret i1 %2, !dbg !16956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16957 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16961, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i32 -22, metadata !16962, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i32 0, metadata !16963, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !16968
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16970, !srcloc !16762
  call void @llvm.dbg.value(metadata i32 undef, metadata !16759, metadata !DIExpression()) #24, !dbg !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !16753, metadata !DIExpression()) #24, !dbg !16968
  call void @llvm.dbg.value(metadata i32 undef, metadata !16965, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32 -22, metadata !16962, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()), !dbg !16967
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16962, metadata !DIExpression()), !dbg !16966
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.194(%struct._dnode* noundef %3) #26, !dbg !16973
  br i1 %4, label %5, label %6, !dbg !16977

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !16978
  call void @llvm.dbg.value(metadata i32 0, metadata !16962, metadata !DIExpression()), !dbg !16966
  br label %6, !dbg !16980

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16966
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16970
  call void @llvm.dbg.value(metadata i32 %8, metadata !16759, metadata !DIExpression()) #24, !dbg !16972
  call void @llvm.dbg.value(metadata i32 %8, metadata !16753, metadata !DIExpression()) #24, !dbg !16968
  call void @llvm.dbg.value(metadata i32 %8, metadata !16965, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32 %7, metadata !16962, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i32 undef, metadata !16815, metadata !DIExpression()) #24, !dbg !16981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !16981
  call void @llvm.dbg.value(metadata i32 undef, metadata !16823, metadata !DIExpression()) #24, !dbg !16983
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !16985, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()), !dbg !16967
  ret i32 %7, !dbg !16986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.194(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16987 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16993, metadata !DIExpression()), !dbg !16994
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16995
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16995
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16996
  ret i1 %4, !dbg !16997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !16998 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17000, metadata !DIExpression()), !dbg !17001
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17002
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17004
  br i1 %3, label %10, label %4, !dbg !17005

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17006
  %6 = load i64, i64* %5, align 8, !dbg !17006
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17008
  %8 = load i64, i64* %7, align 8, !dbg !17009
  %9 = add nsw i64 %8, %6, !dbg !17009
  store i64 %9, i64* %7, align 8, !dbg !17009
  br label %10, !dbg !17010

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17011
  tail call fastcc void @sys_dlist_remove.195(%struct._dnode* noundef %11) #26, !dbg !17012
  ret void, !dbg !17013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.195(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !17014 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17018, metadata !DIExpression()), !dbg !17021
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17022
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17022
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17019, metadata !DIExpression()), !dbg !17021
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17023
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17023
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17020, metadata !DIExpression()), !dbg !17021
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17024
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17025
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17026
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17027
  tail call fastcc void @sys_dnode_init.196(%struct._dnode* noundef %0) #26, !dbg !17028
  ret void, !dbg !17029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.196(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !17030 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17032, metadata !DIExpression()), !dbg !17033
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17034
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17035
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17036
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17037
  ret void, !dbg !17038
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17039 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17045, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i64 0, metadata !17046, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i32 0, metadata !17047, metadata !DIExpression()), !dbg !17051
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17052
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17054, !srcloc !16762
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17054
  call void @llvm.dbg.value(metadata i32 %3, metadata !16759, metadata !DIExpression()) #24, !dbg !17056
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17056
  call void @llvm.dbg.value(metadata i32 %3, metadata !16753, metadata !DIExpression()) #24, !dbg !17052
  call void @llvm.dbg.value(metadata i32 %3, metadata !17049, metadata !DIExpression()), !dbg !17051
  call void @llvm.dbg.value(metadata i64 0, metadata !17046, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i32 undef, metadata !17047, metadata !DIExpression()), !dbg !17051
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17057
  call void @llvm.dbg.value(metadata i64 %4, metadata !17046, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata i32 %3, metadata !16815, metadata !DIExpression()) #24, !dbg !17060
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17060
  call void @llvm.dbg.value(metadata i32 %3, metadata !16823, metadata !DIExpression()) #24, !dbg !17062
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17064, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17047, metadata !DIExpression()), !dbg !17051
  ret i64 %4, !dbg !17065
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17066 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17068, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata i64 0, metadata !17069, metadata !DIExpression()), !dbg !17072
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.197(%struct._timeout* noundef %0) #26, !dbg !17073
  br i1 %2, label %21, label %3, !dbg !17075

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17076
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17070, metadata !DIExpression()), !dbg !17077
  call void @llvm.dbg.value(metadata i64 0, metadata !17069, metadata !DIExpression()), !dbg !17072
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17078
  br i1 %5, label %16, label %6, !dbg !17080

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17070, metadata !DIExpression()), !dbg !17077
  call void @llvm.dbg.value(metadata i64 %8, metadata !17069, metadata !DIExpression()), !dbg !17072
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17081
  %10 = load i64, i64* %9, align 8, !dbg !17081
  %11 = add nsw i64 %10, %8, !dbg !17083
  call void @llvm.dbg.value(metadata i64 %11, metadata !17069, metadata !DIExpression()), !dbg !17072
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17084
  br i1 %12, label %16, label %13, !dbg !17086

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17087
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17070, metadata !DIExpression()), !dbg !17077
  call void @llvm.dbg.value(metadata i64 %11, metadata !17069, metadata !DIExpression()), !dbg !17072
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17078
  br i1 %15, label %16, label %6, !dbg !17080, !llvm.loop !17088

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17072
  call void @llvm.dbg.value(metadata i64 %17, metadata !17069, metadata !DIExpression()), !dbg !17072
  %18 = tail call fastcc i32 @elapsed.185() #26, !dbg !17090
  %19 = sext i32 %18 to i64, !dbg !17090
  %20 = sub nsw i64 %17, %19, !dbg !17091
  br label %21, !dbg !17092

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17072
  ret i64 %22, !dbg !17093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.197(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17094 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17098, metadata !DIExpression()), !dbg !17099
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17100
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.194(%struct._dnode* noundef %2) #26, !dbg !17101
  %4 = xor i1 %3, true, !dbg !17102
  ret i1 %4, !dbg !17103
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17104 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17106, metadata !DIExpression()), !dbg !17111
  call void @llvm.dbg.value(metadata i64 0, metadata !17107, metadata !DIExpression()), !dbg !17111
  call void @llvm.dbg.value(metadata i32 0, metadata !17108, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17113
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17115, !srcloc !16762
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17115
  call void @llvm.dbg.value(metadata i32 %3, metadata !16759, metadata !DIExpression()) #24, !dbg !17117
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17117
  call void @llvm.dbg.value(metadata i32 %3, metadata !16753, metadata !DIExpression()) #24, !dbg !17113
  call void @llvm.dbg.value(metadata i32 %3, metadata !17110, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata i64 0, metadata !17107, metadata !DIExpression()), !dbg !17111
  call void @llvm.dbg.value(metadata i32 undef, metadata !17108, metadata !DIExpression()), !dbg !17112
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17118
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17121
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17107, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17111
  call void @llvm.dbg.value(metadata i32 %3, metadata !16815, metadata !DIExpression()) #24, !dbg !17122
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17122
  call void @llvm.dbg.value(metadata i32 %3, metadata !16823, metadata !DIExpression()) #24, !dbg !17124
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17126, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17108, metadata !DIExpression()), !dbg !17112
  %6 = add i64 %5, %4, !dbg !17127
  ret i64 %6, !dbg !17128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17129 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17131, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.value(metadata i32 0, metadata !17132, metadata !DIExpression()), !dbg !17136
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17137
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17139, !srcloc !16762
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17139
  call void @llvm.dbg.value(metadata i32 %2, metadata !16759, metadata !DIExpression()) #24, !dbg !17141
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17141
  call void @llvm.dbg.value(metadata i32 %2, metadata !16753, metadata !DIExpression()) #24, !dbg !17137
  call void @llvm.dbg.value(metadata i32 %2, metadata !17134, metadata !DIExpression()), !dbg !17136
  call void @llvm.dbg.value(metadata i32 -1, metadata !17131, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.value(metadata i32 undef, metadata !17132, metadata !DIExpression()), !dbg !17136
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17142
  call void @llvm.dbg.value(metadata i32 %3, metadata !17131, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.value(metadata i32 %2, metadata !16815, metadata !DIExpression()) #24, !dbg !17145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17145
  call void @llvm.dbg.value(metadata i32 %2, metadata !16823, metadata !DIExpression()) #24, !dbg !17147
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17149, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17132, metadata !DIExpression()), !dbg !17136
  ret i32 %3, !dbg !17150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17153, metadata !DIExpression()), !dbg !17163
  call void @llvm.dbg.value(metadata i1 %1, metadata !17154, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17163
  call void @llvm.dbg.value(metadata i32 0, metadata !17155, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17165
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17167, !srcloc !16762
  call void @llvm.dbg.value(metadata i32 undef, metadata !16759, metadata !DIExpression()) #24, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !16753, metadata !DIExpression()) #24, !dbg !17165
  call void @llvm.dbg.value(metadata i32 undef, metadata !17157, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i32 undef, metadata !17155, metadata !DIExpression()), !dbg !17164
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17170
  call void @llvm.dbg.value(metadata i32 %4, metadata !17158, metadata !DIExpression()), !dbg !17171
  call void @llvm.dbg.value(metadata i1 undef, metadata !17161, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17171
  %5 = icmp slt i32 %4, 2, !dbg !17172
  call void @llvm.dbg.value(metadata i1 %5, metadata !17162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17171
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17173
  call void @llvm.dbg.value(metadata i1 %6, metadata !17161, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17171
  br i1 %7, label %11, label %8, !dbg !17173

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17175
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17175
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17177
  br label %11, !dbg !17178

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17167
  call void @llvm.dbg.value(metadata i32 %12, metadata !16759, metadata !DIExpression()) #24, !dbg !17169
  call void @llvm.dbg.value(metadata i32 %12, metadata !16753, metadata !DIExpression()) #24, !dbg !17165
  call void @llvm.dbg.value(metadata i32 %12, metadata !17157, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i32 undef, metadata !16815, metadata !DIExpression()) #24, !dbg !17179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17179
  call void @llvm.dbg.value(metadata i32 undef, metadata !16823, metadata !DIExpression()) #24, !dbg !17181
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !17183, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 1, metadata !17155, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i32 undef, metadata !17155, metadata !DIExpression()), !dbg !17164
  ret void, !dbg !17184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17185 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17189, metadata !DIExpression()), !dbg !17194
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17196
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17198, !srcloc !16762
  call void @llvm.dbg.value(metadata i32 undef, metadata !16759, metadata !DIExpression()) #24, !dbg !17200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16753, metadata !DIExpression()) #24, !dbg !17196
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()), !dbg !17194
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17194
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()), !dbg !17194
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17201
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17202
  br i1 %4, label %28, label %5, !dbg !17203

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17204
  %10 = load i64, i64* %9, align 8, !dbg !17204
  %11 = sext i32 %8 to i64, !dbg !17205
  %12 = icmp sgt i64 %10, %11, !dbg !17206
  br i1 %12, label %26, label %13, !dbg !17207

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17194
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17191, metadata !DIExpression()), !dbg !17208
  %15 = trunc i64 %10 to i32, !dbg !17209
  call void @llvm.dbg.value(metadata i32 %15, metadata !17193, metadata !DIExpression()), !dbg !17208
  %16 = sext i32 %15 to i64, !dbg !17210
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17211
  %18 = add i64 %17, %16, !dbg !17211
  store i64 %18, i64* @curr_tick, align 8, !dbg !17211
  store i64 0, i64* %9, align 8, !dbg !17212
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17213
  call void @llvm.dbg.value(metadata i32 %14, metadata !16815, metadata !DIExpression()) #24, !dbg !17214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17214
  call void @llvm.dbg.value(metadata i32 %14, metadata !16823, metadata !DIExpression()) #24, !dbg !17216
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !17218, !srcloc !16829
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17219
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17219
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17221
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17223, !srcloc !16762
  call void @llvm.dbg.value(metadata i32 undef, metadata !16759, metadata !DIExpression()) #24, !dbg !17225
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17225
  call void @llvm.dbg.value(metadata i32 undef, metadata !16753, metadata !DIExpression()) #24, !dbg !17221
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()), !dbg !17194
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17226
  %23 = sub nsw i32 %22, %15, !dbg !17226
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17194
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()), !dbg !17194
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17201
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17202
  br i1 %25, label %28, label %5, !dbg !17203, !llvm.loop !17227

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17229
  store i64 %27, i64* %9, align 8, !dbg !17229
  br label %32, !dbg !17232

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17194
  %31 = sext i32 %30 to i64, !dbg !17233
  br label %32, !dbg !17233

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17233
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17194
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17234
  %37 = add i64 %36, %33, !dbg !17234
  store i64 %37, i64* @curr_tick, align 8, !dbg !17234
  store i32 0, i32* @announce_remaining, align 4, !dbg !17235
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17236
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17237
  call void @llvm.dbg.value(metadata i32 %35, metadata !16815, metadata !DIExpression()) #24, !dbg !17238
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17238
  call void @llvm.dbg.value(metadata i32 %35, metadata !16823, metadata !DIExpression()) #24, !dbg !17240
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !17242, !srcloc !16829
  ret void, !dbg !17243
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17244 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17248, metadata !DIExpression()), !dbg !17252
  call void @llvm.dbg.value(metadata i32 0, metadata !17249, metadata !DIExpression()), !dbg !17253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16747, metadata !DIExpression()) #24, !dbg !17254
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17256, !srcloc !16762
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17256
  call void @llvm.dbg.value(metadata i32 %2, metadata !16759, metadata !DIExpression()) #24, !dbg !17258
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()) #24, !dbg !17258
  call void @llvm.dbg.value(metadata i32 %2, metadata !16753, metadata !DIExpression()) #24, !dbg !17254
  call void @llvm.dbg.value(metadata i32 %2, metadata !17251, metadata !DIExpression()), !dbg !17253
  call void @llvm.dbg.value(metadata i64 0, metadata !17248, metadata !DIExpression()), !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !17249, metadata !DIExpression()), !dbg !17253
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17259
  %4 = tail call fastcc i32 @elapsed.185() #26, !dbg !17262
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17248, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17252
  call void @llvm.dbg.value(metadata i32 %2, metadata !16815, metadata !DIExpression()) #24, !dbg !17263
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16820, metadata !DIExpression()) #24, !dbg !17263
  call void @llvm.dbg.value(metadata i32 %2, metadata !16823, metadata !DIExpression()) #24, !dbg !17265
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17267, !srcloc !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17249, metadata !DIExpression()), !dbg !17253
  %5 = sext i32 %4 to i64, !dbg !17262
  %6 = add i64 %3, %5, !dbg !17268
  ret i64 %6, !dbg !17269
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17270 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17271
  %2 = trunc i64 %1 to i32, !dbg !17272
  ret i32 %2, !dbg !17273
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17274 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17275
  ret i64 %1, !dbg !17276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17279, metadata !DIExpression()), !dbg !17286
  %2 = icmp eq i32 %0, 0, !dbg !17287
  br i1 %2, label %10, label %3, !dbg !17289

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17290
  call void @llvm.dbg.value(metadata i32 %4, metadata !17280, metadata !DIExpression()), !dbg !17286
  %5 = mul i32 %0, 168, !dbg !17291
  call void @llvm.dbg.value(metadata i32 %5, metadata !17281, metadata !DIExpression()), !dbg !17286
  br label %6, !dbg !17292

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17293
  call void @llvm.dbg.value(metadata i32 %7, metadata !17282, metadata !DIExpression()), !dbg !17294
  %8 = sub i32 %7, %4, !dbg !17295
  %9 = icmp ult i32 %8, %5, !dbg !17297
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17299 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17300
  ret i32 %1, !dbg !17301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17302 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17304
  ret i32 %1, !dbg !17305
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17306 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17310, metadata !DIExpression()), !dbg !17312
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17313

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17314
  br label %14, !dbg !17318

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17311, metadata !DIExpression()), !dbg !17312
  %6 = icmp slt i64 %2, -1, !dbg !17319
  br i1 %6, label %7, label %9, !dbg !17322

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17323
  br label %14, !dbg !17324

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17326
  %11 = icmp ugt i64 %2, 1, !dbg !17327
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17327
  %13 = add nsw i64 %10, %12, !dbg !17328
  br label %14, !dbg !17329

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17330
  ret i64 %15, !dbg !17331
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17332 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.206, i32 0, i32 0)) #25, !dbg !17334
  ret void, !dbg !17335
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17336 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17338, metadata !DIExpression()), !dbg !17358
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17339, metadata !DIExpression()), !dbg !17359
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17360

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17361

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17339, metadata !DIExpression()), !dbg !17359
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17362
  %6 = load i8*, i8** %5, align 4, !dbg !17362
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17366
  %8 = load i32, i32* %7, align 4, !dbg !17366
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !17367
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17368
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17339, metadata !DIExpression()), !dbg !17359
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17369
  br i1 %10, label %3, label %2, !dbg !17360, !llvm.loop !17371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17373 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17377, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata i8* %1, metadata !17378, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata i32 %2, metadata !17379, metadata !DIExpression()), !dbg !17380
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17381
  tail call fastcc void @z_waitq_init.208(%union.anon* noundef nonnull %4) #26, !dbg !17382
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17383
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !17384
  ret void, !dbg !17385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.208(%union.anon* noundef %0) unnamed_addr #4 !dbg !17386 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17391, metadata !DIExpression()), !dbg !17392
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17393
  tail call fastcc void @sys_dlist_init.209(%struct._dnode* noundef %2) #26, !dbg !17394
  ret void, !dbg !17395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.209(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17396 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17401, metadata !DIExpression()), !dbg !17402
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17403
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17404
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17405
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17406
  ret void, !dbg !17407
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17408 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17419, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17416, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i32 %1, metadata !17417, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i32 %2, metadata !17418, metadata !DIExpression()), !dbg !17429
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !17430
  call void @llvm.dbg.value(metadata i64 %6, metadata !17421, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i8* null, metadata !17422, metadata !DIExpression()), !dbg !17429
  %7 = icmp eq i64 %5, -1, !dbg !17431
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17431
  call void @llvm.dbg.value(metadata i64 %8, metadata !17421, metadata !DIExpression()), !dbg !17429
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17432
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17433, metadata !DIExpression()) #24, !dbg !17440
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17442, !srcloc !17448
  call void @llvm.dbg.value(metadata i32 undef, metadata !17445, metadata !DIExpression()) #24, !dbg !17449
  call void @llvm.dbg.value(metadata i32 undef, metadata !17446, metadata !DIExpression()) #24, !dbg !17449
  call void @llvm.dbg.value(metadata i32 undef, metadata !17439, metadata !DIExpression()) #24, !dbg !17440
  call void @llvm.dbg.value(metadata i32 undef, metadata !17423, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i8 0, metadata !17428, metadata !DIExpression()), !dbg !17429
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17422, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i8 0, metadata !17428, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i32 undef, metadata !17423, metadata !DIExpression()), !dbg !17429
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17450
  call void @llvm.dbg.value(metadata i8* %12, metadata !17422, metadata !DIExpression()), !dbg !17429
  %13 = tail call i64 @sys_clock_tick_get() #25, !dbg !17452
  call void @llvm.dbg.value(metadata i64 %13, metadata !17420, metadata !DIExpression()), !dbg !17429
  %14 = icmp eq i8* %12, null, !dbg !17453
  br i1 %14, label %15, label %31, !dbg !17455

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17423, metadata !DIExpression()), !dbg !17429
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17455

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17428, metadata !DIExpression()), !dbg !17429
  %20 = sub nsw i64 %8, %18, !dbg !17456
  %21 = icmp slt i64 %20, 1, !dbg !17457
  br i1 %21, label %31, label %22, !dbg !17458

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17429
  call void @llvm.dbg.value(metadata i8 undef, metadata !17428, metadata !DIExpression()), !dbg !17429
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17459
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17459
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #25, !dbg !17459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17433, metadata !DIExpression()) #24, !dbg !17460
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17462, !srcloc !17448
  call void @llvm.dbg.value(metadata i32 undef, metadata !17445, metadata !DIExpression()) #24, !dbg !17464
  call void @llvm.dbg.value(metadata i32 undef, metadata !17446, metadata !DIExpression()) #24, !dbg !17464
  call void @llvm.dbg.value(metadata i32 undef, metadata !17439, metadata !DIExpression()) #24, !dbg !17460
  call void @llvm.dbg.value(metadata i32 undef, metadata !17423, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i8* null, metadata !17422, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i32 undef, metadata !17423, metadata !DIExpression()), !dbg !17429
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17450
  call void @llvm.dbg.value(metadata i8* %28, metadata !17422, metadata !DIExpression()), !dbg !17429
  %29 = tail call i64 @sys_clock_tick_get() #25, !dbg !17452
  call void @llvm.dbg.value(metadata i64 %29, metadata !17420, metadata !DIExpression()), !dbg !17429
  %30 = icmp eq i8* %28, null, !dbg !17453
  br i1 %30, label %17, label %31, !dbg !17455, !llvm.loop !17465

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17450
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17429
  call void @llvm.dbg.value(metadata i8* %33, metadata !17422, metadata !DIExpression()), !dbg !17429
  call void @llvm.dbg.value(metadata i32 %34, metadata !17468, metadata !DIExpression()) #24, !dbg !17474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17473, metadata !DIExpression()) #24, !dbg !17474
  call void @llvm.dbg.value(metadata i32 %34, metadata !17476, metadata !DIExpression()) #24, !dbg !17479
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #24, !dbg !17481, !srcloc !17482
  ret i8* %33, !dbg !17483
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17484 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17490, metadata !DIExpression()), !dbg !17492
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17488, metadata !DIExpression()), !dbg !17492
  call void @llvm.dbg.value(metadata i32 %1, metadata !17489, metadata !DIExpression()), !dbg !17492
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !17493
  call void @llvm.dbg.value(metadata i8* %4, metadata !17491, metadata !DIExpression()), !dbg !17492
  ret i8* %4, !dbg !17494
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17495 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17499, metadata !DIExpression()), !dbg !17502
  call void @llvm.dbg.value(metadata i8* %1, metadata !17500, metadata !DIExpression()), !dbg !17502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17433, metadata !DIExpression()) #24, !dbg !17503
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17505, !srcloc !17448
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17505
  call void @llvm.dbg.value(metadata i32 %4, metadata !17445, metadata !DIExpression()) #24, !dbg !17507
  call void @llvm.dbg.value(metadata i32 undef, metadata !17446, metadata !DIExpression()) #24, !dbg !17507
  call void @llvm.dbg.value(metadata i32 %4, metadata !17439, metadata !DIExpression()) #24, !dbg !17503
  call void @llvm.dbg.value(metadata i32 %4, metadata !17501, metadata !DIExpression()), !dbg !17502
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17508
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #25, !dbg !17509
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17510
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #25, !dbg !17512
  %8 = icmp eq i32 %7, 0, !dbg !17513
  br i1 %8, label %12, label %9, !dbg !17514

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17515
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17516
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #25, !dbg !17516
  br label %13, !dbg !17518

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17468, metadata !DIExpression()) #24, !dbg !17519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17473, metadata !DIExpression()) #24, !dbg !17519
  call void @llvm.dbg.value(metadata i32 %4, metadata !17476, metadata !DIExpression()) #24, !dbg !17522
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !17524, !srcloc !17482
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17525
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!754, !2, !2551, !2553, !27, !2555, !2557, !2590, !2627, !111, !168, !2629, !197, !2711, !2722, !2768, !2770, !2798, !2826, !2869, !2940, !2985, !341, !490, !3013, !526, !536, !561, !788, !3018, !923, !1125, !1440, !1704, !3055, !1819, !1909, !3057, !3141, !3204, !1956, !3207, !1962, !2323, !3225, !2343, !2366, !3227, !2481, !3230, !2520}
!llvm.ident = !{!3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232, !3232}
!llvm.module.flags = !{!3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 369, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 362, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 364, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 365, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 366, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 367, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 368, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "console_serial", scope: !197, file: !288, line: 13, type: !294, isLocal: true, isDefinition: true)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !285, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!199 = !{!200, !102, !103}
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !225, !229, !233, !246, !251, !257, !263, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !202, file: !203, line: 365, baseType: !206, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!207 = !DISubroutineType(types: !208)
!208 = !{!103, !209, !224}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !212)
!212 = !{!213, !214, !215, !216, !222, !223}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !211, file: !141, line: 380, baseType: !144, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !211, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !211, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !211, file: !141, line: 386, baseType: !217, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !219)
!219 = !{!220, !221}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !218, file: !141, line: 359, baseType: !154, size: 8)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !218, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !211, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !211, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !202, file: !203, line: 366, baseType: !226, size: 32, offset: 32)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!227 = !DISubroutineType(types: !228)
!228 = !{null, !209, !155}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !202, file: !203, line: 374, baseType: !230, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DISubroutineType(types: !232)
!232 = !{!103, !209}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !202, file: !203, line: 377, baseType: !234, size: 32, offset: 96)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 32)
!235 = !DISubroutineType(types: !236)
!236 = !{!103, !209, !237}
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !240)
!240 = !{!241, !242, !243, !244, !245}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !239, file: !203, line: 123, baseType: !121, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !239, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !239, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !239, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !239, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !202, file: !203, line: 379, baseType: !247, size: 32, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!248 = !DISubroutineType(types: !249)
!249 = !{!103, !209, !250}
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !202, file: !203, line: 384, baseType: !252, size: 32, offset: 160)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DISubroutineType(types: !254)
!254 = !{!103, !209, !255, !103}
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !202, file: !203, line: 393, baseType: !258, size: 32, offset: 192)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DISubroutineType(types: !260)
!260 = !{!103, !209, !261, !262}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !202, file: !203, line: 402, baseType: !264, size: 32, offset: 224)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{null, !209}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !202, file: !203, line: 405, baseType: !264, size: 32, offset: 256)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !202, file: !203, line: 408, baseType: !230, size: 32, offset: 288)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !202, file: !203, line: 411, baseType: !264, size: 32, offset: 320)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !202, file: !203, line: 414, baseType: !264, size: 32, offset: 352)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !202, file: !203, line: 417, baseType: !230, size: 32, offset: 384)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !202, file: !203, line: 420, baseType: !230, size: 32, offset: 416)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !202, file: !203, line: 423, baseType: !264, size: 32, offset: 448)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !202, file: !203, line: 426, baseType: !264, size: 32, offset: 480)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !202, file: !203, line: 429, baseType: !230, size: 32, offset: 512)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !202, file: !203, line: 432, baseType: !230, size: 32, offset: 544)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !202, file: !203, line: 435, baseType: !278, size: 32, offset: 576)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DISubroutineType(types: !280)
!280 = !{null, !209, !281, !102}
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !282)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!283 = !DISubroutineType(types: !284)
!284 = !{null, !209, !102}
!285 = !{!195, !286, !292}
!286 = !DIGlobalVariableExpression(var: !287, expr: !DIExpression())
!287 = distinct !DIGlobalVariable(name: "console_rxbuf", scope: !197, file: !288, line: 15, type: !289, isLocal: true, isDefinition: true)
!288 = !DIFile(filename: "zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 128, elements: !290)
!290 = !{!291}
!291 = !DISubrange(count: 16)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "console_txbuf", scope: !197, file: !288, line: 16, type: !289, isLocal: true, isDefinition: true)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !295, line: 18, size: 544, elements: !296)
!295 = !DIFile(filename: "zephyr/include/zephyr/console/tty.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!296 = !{!297, !298, !325, !326, !327, !330, !331, !333, !334, !335, !336, !337, !338}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !294, file: !295, line: 19, baseType: !209, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !294, file: !295, line: 21, baseType: !299, size: 128, offset: 32)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !300, line: 2909, size: 128, elements: !301)
!300 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!301 = !{!302, !323, !324}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !299, file: !300, line: 2910, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !305)
!304 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !306)
!306 = !{!307}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !305, file: !304, line: 232, baseType: !308, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !311)
!311 = !{!312, !318}
!312 = !DIDerivedType(tag: DW_TAG_member, scope: !310, file: !309, line: 38, baseType: !313, size: 32)
!313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !310, file: !309, line: 38, size: 32, elements: !314)
!314 = !{!315, !317}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !313, file: !309, line: 39, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !313, file: !309, line: 40, baseType: !316, size: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, scope: !310, file: !309, line: 42, baseType: !319, size: 32, offset: 32)
!319 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !310, file: !309, line: 42, size: 32, elements: !320)
!320 = !{!321, !322}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !319, file: !309, line: 43, baseType: !316, size: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !319, file: !309, line: 44, baseType: !316, size: 32)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !299, file: !300, line: 2911, baseType: !32, size: 32, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !299, file: !300, line: 2912, baseType: !32, size: 32, offset: 96)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !294, file: !295, line: 22, baseType: !261, size: 32, offset: 160)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !294, file: !295, line: 23, baseType: !121, size: 32, offset: 192)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !294, file: !295, line: 24, baseType: !328, size: 16, offset: 224)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !329)
!329 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !294, file: !295, line: 24, baseType: !328, size: 16, offset: 240)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !294, file: !295, line: 25, baseType: !332, size: 32, offset: 256)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !294, file: !295, line: 27, baseType: !299, size: 128, offset: 288)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !294, file: !295, line: 28, baseType: !261, size: 32, offset: 416)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !294, file: !295, line: 29, baseType: !121, size: 32, offset: 448)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !294, file: !295, line: 30, baseType: !328, size: 16, offset: 480)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !294, file: !295, line: 30, baseType: !328, size: 16, offset: 496)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !294, file: !295, line: 31, baseType: !332, size: 32, offset: 512)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "static_regions", scope: !341, file: !350, line: 62, type: !486, isLocal: true, isDefinition: true)
!341 = distinct !DICompileUnit(language: DW_LANG_C99, file: !342, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !343, globals: !346, splitDebugInlining: false, nameTableKind: None)
!342 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!343 = !{!344, !103, !121, !102}
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !345, line: 214, baseType: !32)
!345 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = !{!347, !339}
!347 = !DIGlobalVariableExpression(var: !348, expr: !DIExpression())
!348 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !349, file: !350, line: 198, type: !472, isLocal: true, isDefinition: true)
!349 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !350, file: !350, line: 175, type: !351, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !341, retainedNodes: !467)
!350 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!351 = !DISubroutineType(types: !352)
!352 = !{null, !353}
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !356)
!355 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!356 = !{!357, !422, !435, !436, !437, !438, !444, !462}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !354, file: !355, line: 247, baseType: !358, size: 384)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !359)
!359 = !{!360, !387, !394, !395, !396, !407, !408, !409}
!360 = !DIDerivedType(tag: DW_TAG_member, scope: !358, file: !355, line: 60, baseType: !361, size: 64)
!361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !355, line: 60, size: 64, elements: !362)
!362 = !{!363, !378}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !361, file: !355, line: 61, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !366)
!366 = !{!367, !373}
!367 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !309, line: 38, baseType: !368, size: 32)
!368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !309, line: 38, size: 32, elements: !369)
!369 = !{!370, !372}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !368, file: !309, line: 39, baseType: !371, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !368, file: !309, line: 40, baseType: !371, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !309, line: 42, baseType: !374, size: 32, offset: 32)
!374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !309, line: 42, size: 32, elements: !375)
!375 = !{!376, !377}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !374, file: !309, line: 43, baseType: !371, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !374, file: !309, line: 44, baseType: !371, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !361, file: !355, line: 62, baseType: !379, size: 64)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !381)
!380 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !379, file: !380, line: 50, baseType: !383, size: 64)
!383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !384, size: 64, elements: !385)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!385 = !{!386}
!386 = !DISubrange(count: 2)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !358, file: !355, line: 68, baseType: !388, size: 32, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !391)
!391 = !{!392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !390, file: !304, line: 232, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !365)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !358, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !358, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!396 = !DIDerivedType(tag: DW_TAG_member, scope: !358, file: !355, line: 90, baseType: !397, size: 16, offset: 112)
!397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !355, line: 90, size: 16, elements: !398)
!398 = !{!399, !406}
!399 = !DIDerivedType(tag: DW_TAG_member, scope: !397, file: !355, line: 91, baseType: !400, size: 16)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !397, file: !355, line: 91, size: 16, elements: !401)
!401 = !{!402, !405}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !400, file: !355, line: 96, baseType: !403, size: 8)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !404)
!404 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !400, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !397, file: !355, line: 100, baseType: !328, size: 16)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !358, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !358, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !358, file: !355, line: 131, baseType: !410, size: 192, offset: 192)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !411)
!411 = !{!412, !413, !419}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !410, file: !304, line: 245, baseType: !364, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !410, file: !304, line: 246, baseType: !414, size: 32, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !415)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!416 = !DISubroutineType(types: !417)
!417 = !{null, !418}
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !410, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !421)
!421 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !354, file: !355, line: 250, baseType: !423, size: 288, offset: 384)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !425)
!424 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!425 = !{!426, !427, !428, !429, !430, !431, !432, !433, !434}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !423, file: !424, line: 26, baseType: !121, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !423, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !423, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !423, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !423, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !423, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !423, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !423, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !423, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !354, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !354, file: !355, line: 256, baseType: !389, size: 64, offset: 704)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !354, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !354, file: !355, line: 300, baseType: !439, size: 96, offset: 800)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !440)
!440 = !{!441, !442, !443}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !439, file: !355, line: 153, baseType: !22, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !439, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !439, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !354, file: !355, line: 325, baseType: !445, size: 32, offset: 896)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !447)
!447 = !{!448, !457, !458}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !446, file: !300, line: 5074, baseType: !449, size: 96)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !451)
!450 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!451 = !{!452, !455, !456}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !449, file: !450, line: 57, baseType: !453, size: 32)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !450, line: 57, flags: DIFlagFwdDecl)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !449, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !449, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !446, file: !300, line: 5075, baseType: !389, size: 64, offset: 96)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !446, file: !300, line: 5076, baseType: !459, offset: 160)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!460 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!461 = !{}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !354, file: !355, line: 343, baseType: !463, size: 64, offset: 928)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !464)
!464 = !{!465, !466}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !463, file: !424, line: 63, baseType: !121, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !463, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!467 = !{!468, !469, !470, !471}
!468 = !DILocalVariable(name: "thread", arg: 1, scope: !349, file: !350, line: 175, type: !353)
!469 = !DILocalVariable(name: "region_num", scope: !349, file: !350, line: 200, type: !154)
!470 = !DILocalVariable(name: "guard_start", scope: !349, file: !350, line: 265, type: !22)
!471 = !DILocalVariable(name: "guard_size", scope: !349, file: !350, line: 266, type: !344)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 96, elements: !484)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !474, line: 52, size: 96, elements: !475)
!474 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!475 = !{!476, !477, !478}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !473, file: !474, line: 53, baseType: !22, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !473, file: !474, line: 54, baseType: !344, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !473, file: !474, line: 55, baseType: !479, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !480, line: 151, baseType: !481)
!480 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !480, line: 149, size: 32, elements: !482)
!482 = !{!483}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !481, file: !480, line: 150, baseType: !121, size: 32)
!484 = !{!485}
!485 = !DISubrange(count: 1)
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, size: 96, elements: !484)
!487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!488 = !DIGlobalVariableExpression(var: !489, expr: !DIExpression())
!489 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !490, file: !523, line: 39, type: !154, isLocal: true, isDefinition: true)
!490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !492, globals: !522, splitDebugInlining: false, nameTableKind: None)
!491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!492 = !{!493, !102, !103, !510, !154}
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !495, line: 1226, baseType: !496)
!495 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 1213, size: 352, elements: !497)
!497 = !{!498, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !496, file: !495, line: 1215, baseType: !499, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !496, file: !495, line: 1216, baseType: !120, size: 32, offset: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !496, file: !495, line: 1217, baseType: !120, size: 32, offset: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !496, file: !495, line: 1218, baseType: !120, size: 32, offset: 96)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !496, file: !495, line: 1219, baseType: !120, size: 32, offset: 128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !496, file: !495, line: 1220, baseType: !120, size: 32, offset: 160)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !496, file: !495, line: 1221, baseType: !120, size: 32, offset: 192)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !496, file: !495, line: 1222, baseType: !120, size: 32, offset: 224)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !496, file: !495, line: 1223, baseType: !120, size: 32, offset: 256)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !496, file: !495, line: 1224, baseType: !120, size: 32, offset: 288)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !496, file: !495, line: 1225, baseType: !120, size: 32, offset: 320)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !512)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !513, line: 27, size: 96, elements: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = !{!515, !516, !517}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !512, file: !513, line: 29, baseType: !121, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !512, file: !513, line: 31, baseType: !144, size: 32, offset: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !512, file: !513, line: 37, baseType: !518, size: 32, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !480, line: 146, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !480, line: 141, size: 32, elements: !520)
!520 = !{!521}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !519, file: !480, line: 143, baseType: !121, size: 32)
!522 = !{!488}
!523 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !526, file: !533, line: 21, type: !106, isLocal: true, isDefinition: true)
!526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !527, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !528, globals: !532, splitDebugInlining: false, nameTableKind: None)
!527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!528 = !{!529, !103, !102}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !531, line: 22, baseType: !103)
!531 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!532 = !{!524}
!533 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !536, file: !541, line: 13, type: !558, isLocal: true, isDefinition: true)
!536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !538, splitDebugInlining: false, nameTableKind: None)
!537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!538 = !{!539, !534}
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "mpu_config", scope: !536, file: !541, line: 37, type: !542, isLocal: false, isDefinition: true)
!541 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !513, line: 41, size: 64, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !543, file: !513, line: 43, baseType: !121, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !543, file: !513, line: 45, baseType: !547, size: 32, offset: 32)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !549)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !513, line: 27, size: 96, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !549, file: !513, line: 29, baseType: !121, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !549, file: !513, line: 31, baseType: !144, size: 32, offset: 32)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !549, file: !513, line: 37, baseType: !554, size: 32, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !480, line: 146, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !480, line: 141, size: 32, elements: !556)
!556 = !{!557}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !555, file: !480, line: 143, baseType: !121, size: 32)
!558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 192, elements: !385)
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !561, file: !666, line: 72, type: !749, isLocal: true, isDefinition: true)
!561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !562, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !563, retainedTypes: !652, globals: !663, splitDebugInlining: false, nameTableKind: None)
!562 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!563 = !{!30, !564}
!564 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !565)
!565 = !{!566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651}
!566 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!567 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!568 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!569 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!570 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!571 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!572 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!573 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!574 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!575 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!576 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!577 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!578 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!579 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!580 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!581 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!582 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!583 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!584 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!585 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!586 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!587 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!588 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!589 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!590 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!591 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!592 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!593 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!594 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!595 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!596 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!597 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!598 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!599 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!600 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!601 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!602 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!603 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!604 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!605 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!606 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!607 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!608 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!609 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!610 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!611 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!612 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!613 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!614 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!615 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!616 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!617 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!618 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!619 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!620 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!621 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!622 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!623 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!624 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!625 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!626 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!627 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!628 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!629 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!630 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!631 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!632 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!633 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!634 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!635 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!636 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!637 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!638 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!639 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!640 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!641 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!642 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!643 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!644 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!645 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!646 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!647 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!648 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!649 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!650 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!651 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!652 = !{!344, !103, !102, !653}
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 32)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 354, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 346, size: 192, elements: !656)
!656 = !{!657, !658, !659, !660, !661, !662}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !655, file: !116, line: 348, baseType: !120, size: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !655, file: !116, line: 349, baseType: !120, size: 32, offset: 32)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !655, file: !116, line: 350, baseType: !120, size: 32, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !655, file: !116, line: 351, baseType: !120, size: 32, offset: 96)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !655, file: !116, line: 352, baseType: !120, size: 32, offset: 128)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !655, file: !116, line: 353, baseType: !120, size: 32, offset: 160)
!663 = !{!664, !670, !686, !697, !714, !559, !716, !729, !731, !733, !735, !737, !739, !741, !743, !745, !747}
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !561, file: !666, line: 424, type: !667, isLocal: false, isDefinition: true, align: 16)
!666 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !668)
!668 = !{!669}
!669 = !DISubrange(count: 4)
!670 = !DIGlobalVariableExpression(var: !671, expr: !DIExpression())
!671 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !561, file: !666, line: 424, type: !672, isLocal: false, isDefinition: true, align: 32)
!672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !674)
!674 = !{!675, !676, !677, !678, !684, !685}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !673, file: !141, line: 380, baseType: !144, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !673, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !673, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !673, file: !141, line: 386, baseType: !679, size: 32, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !681)
!681 = !{!682, !683}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !680, file: !141, line: 359, baseType: !154, size: 8)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !680, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !673, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !673, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!686 = !DIGlobalVariableExpression(var: !687, expr: !DIExpression())
!687 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !561, file: !666, line: 424, type: !688, isLocal: true, isDefinition: true, align: 32)
!688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !689)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !690)
!690 = !{!691, !696}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !689, file: !132, line: 60, baseType: !692, size: 32)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 32)
!693 = !DISubroutineType(types: !694)
!694 = !{!103, !695}
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !689, file: !132, line: 65, baseType: !695, size: 32, offset: 32)
!697 = !DIGlobalVariableExpression(var: !698, expr: !DIExpression())
!698 = distinct !DIGlobalVariable(name: "exti_data", scope: !561, file: !666, line: 423, type: !699, isLocal: true, isDefinition: true)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !666, line: 107, size: 1472, elements: !700)
!700 = !{!701}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !699, file: !666, line: 109, baseType: !702, size: 1472)
!702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !703, size: 1472, elements: !712)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !666, line: 101, size: 64, elements: !704)
!704 = !{!705, !711}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !703, file: !666, line: 102, baseType: !706, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !707, line: 63, baseType: !708)
!707 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = !DISubroutineType(types: !710)
!710 = !{null, !103, !102}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !703, file: !666, line: 103, baseType: !102, size: 32, offset: 32)
!712 = !{!713}
!713 = !DISubrange(count: 23)
!714 = !DIGlobalVariableExpression(var: !715, expr: !DIExpression())
!715 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !561, file: !666, line: 424, type: !680, isLocal: true, isDefinition: true, align: 8)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !718, file: !666, line: 493, type: !723, isLocal: true, isDefinition: true, align: 32)
!718 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !666, file: !666, line: 460, type: !719, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !721)
!719 = !DISubroutineType(types: !720)
!720 = !{null, !695}
!721 = !{!722}
!722 = !DILocalVariable(name: "dev", arg: 1, scope: !718, file: !666, line: 460, type: !695)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !724)
!724 = !{!725, !726, !727, !728}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !723, file: !10, line: 55, baseType: !332, size: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !723, file: !10, line: 57, baseType: !332, size: 32, offset: 32)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !723, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !723, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !718, file: !666, line: 497, type: !723, isLocal: true, isDefinition: true, align: 32)
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !718, file: !666, line: 507, type: !723, isLocal: true, isDefinition: true, align: 32)
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !718, file: !666, line: 512, type: !723, isLocal: true, isDefinition: true, align: 32)
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !718, file: !666, line: 516, type: !723, isLocal: true, isDefinition: true, align: 32)
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !718, file: !666, line: 523, type: !723, isLocal: true, isDefinition: true, align: 32)
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !718, file: !666, line: 527, type: !723, isLocal: true, isDefinition: true, align: 32)
!741 = !DIGlobalVariableExpression(var: !742, expr: !DIExpression())
!742 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !718, file: !666, line: 581, type: !723, isLocal: true, isDefinition: true, align: 32)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !718, file: !666, line: 586, type: !723, isLocal: true, isDefinition: true, align: 32)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !718, file: !666, line: 591, type: !723, isLocal: true, isDefinition: true, align: 32)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !718, file: !666, line: 595, type: !723, isLocal: true, isDefinition: true, align: 32)
!749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 736, elements: !712)
!750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !751)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 155, baseType: !564)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !754, file: !759, line: 23, type: !783, isLocal: false, isDefinition: true, align: 16)
!754 = distinct !DICompileUnit(language: DW_LANG_C99, file: !755, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !756, splitDebugInlining: false, nameTableKind: None)
!755 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!756 = !{!757, !752, !763, !765, !767, !769, !771, !773, !775, !777, !779, !781}
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !754, file: !759, line: 18, type: !760, isLocal: false, isDefinition: true, align: 16)
!759 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 208, elements: !761)
!761 = !{!762}
!762 = !DISubrange(count: 13)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !754, file: !759, line: 30, type: !667, isLocal: false, isDefinition: true, align: 16)
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !754, file: !759, line: 37, type: !667, isLocal: false, isDefinition: true, align: 16)
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !754, file: !759, line: 44, type: !667, isLocal: false, isDefinition: true, align: 16)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !754, file: !759, line: 51, type: !667, isLocal: false, isDefinition: true, align: 16)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !754, file: !759, line: 58, type: !667, isLocal: false, isDefinition: true, align: 16)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !754, file: !759, line: 65, type: !667, isLocal: false, isDefinition: true, align: 16)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !754, file: !759, line: 72, type: !667, isLocal: false, isDefinition: true, align: 16)
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !754, file: !759, line: 79, type: !667, isLocal: false, isDefinition: true, align: 16)
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !754, file: !759, line: 86, type: !667, isLocal: false, isDefinition: true, align: 16)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !754, file: !759, line: 93, type: !667, isLocal: false, isDefinition: true, align: 16)
!783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !784)
!784 = !{!785}
!785 = !DISubrange(count: 3)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !788, file: !849, line: 398, type: !882, isLocal: true, isDefinition: true)
!788 = distinct !DICompileUnit(language: DW_LANG_C99, file: !789, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !790, retainedTypes: !803, globals: !846, splitDebugInlining: false, nameTableKind: None)
!789 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!790 = !{!791, !30, !796}
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !792, line: 197, baseType: !32, size: 32, elements: !793)
!792 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!793 = !{!794, !795}
!794 = !DIEnumerator(name: "SUCCESS", value: 0)
!795 = !DIEnumerator(name: "ERROR", value: 1)
!796 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !797, line: 44, baseType: !32, size: 32, elements: !798)
!797 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!798 = !{!799, !800, !801, !802}
!799 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!800 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!801 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!802 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!803 = !{!102, !103, !121, !804, !839, !845}
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !806)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !807)
!807 = !{!808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !806, file: !116, line: 502, baseType: !120, size: 32)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !806, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !806, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !806, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !806, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !806, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !806, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !806, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !806, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !806, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !806, file: !116, line: 512, baseType: !819, size: 64, offset: 320)
!819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !385)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !806, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !806, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !806, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !806, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !806, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !806, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !806, file: !116, line: 519, baseType: !819, size: 64, offset: 576)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !806, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !806, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !806, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !806, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !806, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !806, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !806, file: !116, line: 526, baseType: !819, size: 64, offset: 832)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !806, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !806, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !806, file: !116, line: 529, baseType: !819, size: 64, offset: 960)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !806, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !806, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !841, line: 343, size: 64, elements: !842)
!841 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!842 = !{!843, !844}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !840, file: !841, line: 344, baseType: !121, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !840, file: !841, line: 345, baseType: !121, size: 32, offset: 32)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!846 = !{!847, !853, !869, !880, !786}
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !788, file: !849, line: 752, type: !850, isLocal: false, isDefinition: true, align: 16)
!849 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 928, elements: !851)
!851 = !{!852}
!852 = !DISubrange(count: 58)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !788, file: !849, line: 752, type: !855, isLocal: false, isDefinition: true, align: 32)
!855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !856)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !857)
!857 = !{!858, !859, !860, !861, !867, !868}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !856, file: !141, line: 380, baseType: !144, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !856, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !856, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !856, file: !141, line: 386, baseType: !862, size: 32, offset: 96)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 32)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !864)
!864 = !{!865, !866}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !863, file: !141, line: 359, baseType: !154, size: 8)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !863, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !856, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !856, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !788, file: !849, line: 752, type: !871, isLocal: true, isDefinition: true, align: 32)
!871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !872)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !873)
!873 = !{!874, !879}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !872, file: !132, line: 60, baseType: !875, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 32)
!876 = !DISubroutineType(types: !877)
!877 = !{!103, !878}
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 32)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !872, file: !132, line: 65, baseType: !878, size: 32, offset: 32)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !788, file: !849, line: 752, type: !863, isLocal: true, isDefinition: true, align: 8)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !797, line: 100, size: 224, elements: !883)
!883 = !{!884, !890, !891, !900, !905, !910, !916}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !882, file: !797, line: 101, baseType: !885, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !797, line: 76, baseType: !886)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 32)
!887 = !DISubroutineType(types: !888)
!888 = !{!103, !878, !889}
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !797, line: 56, baseType: !102)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !882, file: !797, line: 102, baseType: !885, size: 32, offset: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !882, file: !797, line: 103, baseType: !892, size: 32, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !797, line: 83, baseType: !893)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!894 = !DISubroutineType(types: !895)
!895 = !{!103, !878, !889, !896, !102}
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !797, line: 72, baseType: !897)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32)
!898 = !DISubroutineType(types: !899)
!899 = !{null, !878, !889, !102}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !882, file: !797, line: 104, baseType: !901, size: 32, offset: 96)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !797, line: 79, baseType: !902)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 32)
!903 = !DISubroutineType(types: !904)
!904 = !{!103, !878, !889, !845}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !882, file: !797, line: 105, baseType: !906, size: 32, offset: 128)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !797, line: 88, baseType: !907)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!908 = !DISubroutineType(types: !909)
!909 = !{!796, !878, !889}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !882, file: !797, line: 106, baseType: !911, size: 32, offset: 160)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !797, line: 92, baseType: !912)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!103, !878, !889, !915}
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !797, line: 64, baseType: !102)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !882, file: !797, line: 107, baseType: !917, size: 32, offset: 192)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !797, line: 96, baseType: !918)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 32)
!919 = !DISubroutineType(types: !920)
!920 = !{!103, !878, !889, !102}
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "debug_hook_in", scope: !923, file: !927, line: 43, type: !1119, isLocal: true, isDefinition: true)
!923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !925, retainedTypes: !934, globals: !1014, splitDebugInlining: false, nameTableKind: None)
!924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!925 = !{!30, !926}
!926 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !927, line: 214, baseType: !32, size: 32, elements: !928)
!927 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!928 = !{!929, !930, !931, !932, !933}
!929 = !DIEnumerator(name: "ESC_ESC", value: 0)
!930 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!931 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!932 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!933 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!934 = !{!102, !103, !935, !32, !24}
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !937)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !938)
!938 = !{!939, !958, !962, !966, !979, !984, !988, !992, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !937, file: !203, line: 365, baseType: !940, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 32)
!941 = !DISubroutineType(types: !942)
!942 = !{!103, !943, !224}
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !946)
!946 = !{!947, !948, !949, !950, !956, !957}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !945, file: !141, line: 380, baseType: !144, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !945, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !945, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !945, file: !141, line: 386, baseType: !951, size: 32, offset: 96)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !953)
!953 = !{!954, !955}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !952, file: !141, line: 359, baseType: !154, size: 8)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !952, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !945, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !945, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !937, file: !203, line: 366, baseType: !959, size: 32, offset: 32)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DISubroutineType(types: !961)
!961 = !{null, !943, !155}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !937, file: !203, line: 374, baseType: !963, size: 32, offset: 64)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DISubroutineType(types: !965)
!965 = !{!103, !943}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !937, file: !203, line: 377, baseType: !967, size: 32, offset: 96)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DISubroutineType(types: !969)
!969 = !{!103, !943, !970}
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !973)
!973 = !{!974, !975, !976, !977, !978}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !972, file: !203, line: 123, baseType: !121, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !972, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !972, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !972, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !972, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !937, file: !203, line: 379, baseType: !980, size: 32, offset: 128)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DISubroutineType(types: !982)
!982 = !{!103, !943, !983}
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !937, file: !203, line: 384, baseType: !985, size: 32, offset: 160)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DISubroutineType(types: !987)
!987 = !{!103, !943, !255, !103}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !937, file: !203, line: 393, baseType: !989, size: 32, offset: 192)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = !DISubroutineType(types: !991)
!991 = !{!103, !943, !261, !262}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !937, file: !203, line: 402, baseType: !993, size: 32, offset: 224)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = !DISubroutineType(types: !995)
!995 = !{null, !943}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !937, file: !203, line: 405, baseType: !993, size: 32, offset: 256)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !937, file: !203, line: 408, baseType: !963, size: 32, offset: 288)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !937, file: !203, line: 411, baseType: !993, size: 32, offset: 320)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !937, file: !203, line: 414, baseType: !993, size: 32, offset: 352)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !937, file: !203, line: 417, baseType: !963, size: 32, offset: 384)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !937, file: !203, line: 420, baseType: !963, size: 32, offset: 416)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !937, file: !203, line: 423, baseType: !993, size: 32, offset: 448)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !937, file: !203, line: 426, baseType: !993, size: 32, offset: 480)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !937, file: !203, line: 429, baseType: !963, size: 32, offset: 512)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !937, file: !203, line: 432, baseType: !963, size: 32, offset: 544)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !937, file: !203, line: 435, baseType: !1007, size: 32, offset: 576)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 32)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{null, !943, !1010, !102}
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !1011)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{null, !943, !102}
!1014 = !{!1015, !921, !1022, !1064, !1066, !1072, !1079, !1082, !1107, !1111, !1113, !1115, !1117}
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !923, file: !927, line: 603, type: !1017, isLocal: true, isDefinition: true, align: 32)
!1017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1018)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1019)
!1019 = !{!1020, !1021}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1018, file: !132, line: 60, baseType: !963, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1018, file: !132, line: 65, baseType: !943, size: 32, offset: 32)
!1022 = !DIGlobalVariableExpression(var: !1023, expr: !DIExpression())
!1023 = distinct !DIGlobalVariable(name: "avail_queue", scope: !923, file: !927, line: 108, type: !1024, isLocal: true, isDefinition: true)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 32)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !300, line: 2208, size: 128, elements: !1026)
!1026 = !{!1027}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1025, file: !300, line: 2209, baseType: !1028, size: 128)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !300, line: 1709, size: 128, elements: !1029)
!1029 = !{!1030, !1043, !1045}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1028, file: !300, line: 1710, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !1032, line: 46, baseType: !1033)
!1032 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !1032, line: 41, size: 64, elements: !1034)
!1034 = !{!1035, !1042}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1033, file: !1032, line: 42, baseType: !1036, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !1032, line: 39, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !1032, line: 35, size: 32, elements: !1039)
!1039 = !{!1040}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1038, file: !1032, line: 36, baseType: !1041, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !1032, line: 32, baseType: !121)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1033, file: !1032, line: 43, baseType: !1036, size: 32, offset: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1028, file: !300, line: 1711, baseType: !1044, offset: 64)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1028, file: !300, line: 1712, baseType: !1046, size: 64, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !1047)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !1048)
!1048 = !{!1049}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1047, file: !304, line: 232, baseType: !1050, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !1052)
!1052 = !{!1053, !1059}
!1053 = !DIDerivedType(tag: DW_TAG_member, scope: !1051, file: !309, line: 38, baseType: !1054, size: 32)
!1054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1051, file: !309, line: 38, size: 32, elements: !1055)
!1055 = !{!1056, !1058}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1054, file: !309, line: 39, baseType: !1057, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1054, file: !309, line: 40, baseType: !1057, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, scope: !1051, file: !309, line: 42, baseType: !1060, size: 32, offset: 32)
!1060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1051, file: !309, line: 42, size: 32, elements: !1061)
!1061 = !{!1062, !1063}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1060, file: !309, line: 43, baseType: !1057, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1060, file: !309, line: 44, baseType: !1057, size: 32)
!1064 = !DIGlobalVariableExpression(var: !1065, expr: !DIExpression())
!1065 = distinct !DIGlobalVariable(name: "lines_queue", scope: !923, file: !927, line: 109, type: !1024, isLocal: true, isDefinition: true)
!1066 = !DIGlobalVariableExpression(var: !1067, expr: !DIExpression())
!1067 = distinct !DIGlobalVariable(name: "completion_cb", scope: !923, file: !927, line: 110, type: !1068, isLocal: true, isDefinition: true)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!154, !1071, !154}
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "debug_hook_out", scope: !923, file: !927, line: 54, type: !1074, isLocal: true, isDefinition: true)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_out_debug_hook_t", file: !1076, line: 40, baseType: !1077)
!1076 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/uart_console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!103, !146}
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !923, file: !927, line: 38, type: !1081, isLocal: true, isDefinition: true)
!1081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !943)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "cmd", scope: !1084, file: !927, line: 435, type: !1095, isLocal: true, isDefinition: true)
!1084 = distinct !DISubprogram(name: "uart_console_isr", scope: !927, file: !927, line: 428, type: !1012, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !1085)
!1085 = !{!1086, !1087, !1088, !1090, !1091}
!1086 = !DILocalVariable(name: "unused", arg: 1, scope: !1084, file: !927, line: 428, type: !943)
!1087 = !DILocalVariable(name: "user_data", arg: 2, scope: !1084, file: !927, line: 428, type: !102)
!1088 = !DILocalVariable(name: "byte", scope: !1089, file: !927, line: 436, type: !154)
!1089 = distinct !DILexicalBlock(scope: !1084, file: !927, line: 434, column: 48)
!1090 = !DILocalVariable(name: "rx", scope: !1089, file: !927, line: 437, type: !103)
!1091 = !DILocalVariable(name: "ret", scope: !1092, file: !927, line: 461, type: !102)
!1092 = distinct !DILexicalBlock(scope: !1093, file: !927, line: 461, column: 10)
!1093 = distinct !DILexicalBlock(scope: !1094, file: !927, line: 460, column: 13)
!1094 = distinct !DILexicalBlock(scope: !1089, file: !927, line: 460, column: 7)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !1097, line: 21, size: 1088, elements: !1098)
!1097 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1098 = !{!1099, !1102, !1103}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1096, file: !1097, line: 23, baseType: !1100, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !1101)
!1101 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1096, file: !1097, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1096, file: !1097, line: 27, baseType: !1104, size: 1024, offset: 40)
!1104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 1024, elements: !1105)
!1105 = !{!1106}
!1106 = !DISubrange(count: 128)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "esc_state", scope: !923, file: !927, line: 228, type: !1109, isLocal: true, isDefinition: true)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1110, line: 22, baseType: !1101)
!1110 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "ansi_val", scope: !923, file: !927, line: 229, type: !32, isLocal: true, isDefinition: true)
!1113 = !DIGlobalVariableExpression(var: !1114, expr: !DIExpression())
!1114 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !923, file: !927, line: 229, type: !32, isLocal: true, isDefinition: true)
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(name: "cur", scope: !923, file: !927, line: 230, type: !154, isLocal: true, isDefinition: true)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "end", scope: !923, file: !927, line: 230, type: !154, isLocal: true, isDefinition: true)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_in_debug_hook_t", file: !1076, line: 45, baseType: !1120)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!103, !154}
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1125, file: !1294, line: 762, type: !1413, isLocal: true, isDefinition: true)
!1125 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1126, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1127, retainedTypes: !1145, globals: !1291, splitDebugInlining: false, nameTableKind: None)
!1126 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!1127 = !{!30, !1128, !1134, !1139, !796}
!1128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1129, line: 506, baseType: !32, size: 32, elements: !1130)
!1129 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1130 = !{!1131, !1132, !1133}
!1131 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1132 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1133 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1129, line: 512, baseType: !32, size: 32, elements: !1135)
!1135 = !{!1136, !1137, !1138}
!1136 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1137 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1138 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !707, line: 43, baseType: !32, size: 32, elements: !1140)
!1140 = !{!1141, !1142, !1143, !1144}
!1141 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1142 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1143 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1144 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1145 = !{!102, !103, !1146, !1216, !1221, !1181, !1134, !1128, !1226, !1227, !121, !1241, !1196, !1071, !1251, !1252}
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1129, line: 523, size: 288, elements: !1149)
!1149 = !{!1150, !1171, !1177, !1182, !1186, !1187, !1188, !1192, !1212}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1148, file: !1129, line: 524, baseType: !1151, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!103, !1154, !1169, !1170}
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1157)
!1157 = !{!1158, !1159, !1160, !1161, !1167, !1168}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1156, file: !141, line: 380, baseType: !144, size: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1156, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1156, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1156, file: !141, line: 386, baseType: !1162, size: 32, offset: 96)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 32)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1164)
!1164 = !{!1165, !1166}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1163, file: !141, line: 359, baseType: !154, size: 8)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1163, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1156, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1156, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1129, line: 237, baseType: !154)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1129, line: 257, baseType: !121)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1148, file: !1129, line: 530, baseType: !1172, size: 32, offset: 32)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!103, !1154, !1175}
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1129, line: 229, baseType: !121)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1148, file: !1129, line: 532, baseType: !1178, size: 32, offset: 64)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!103, !1154, !1181, !1176}
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1129, line: 216, baseType: !121)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1148, file: !1129, line: 535, baseType: !1183, size: 32, offset: 96)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!103, !1154, !1181}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1148, file: !1129, line: 537, baseType: !1183, size: 32, offset: 128)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1148, file: !1129, line: 539, baseType: !1183, size: 32, offset: 160)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1148, file: !1129, line: 541, baseType: !1189, size: 32, offset: 192)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 32)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{!103, !1154, !1169, !1128, !1134}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1148, file: !1129, line: 544, baseType: !1193, size: 32, offset: 224)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!103, !1154, !1196, !157}
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1129, line: 478, size: 96, elements: !1198)
!1198 = !{!1199, !1206, !1211}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1197, file: !1129, line: 482, baseType: !1200, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1201, line: 33, baseType: !1202)
!1201 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1201, line: 29, size: 32, elements: !1203)
!1203 = !{!1204}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1202, file: !1201, line: 30, baseType: !1205, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1197, file: !1129, line: 485, baseType: !1207, size: 32, offset: 32)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1129, line: 464, baseType: !1208)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{null, !1154, !1196, !1181}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1197, file: !1129, line: 493, baseType: !1181, size: 32, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1148, file: !1129, line: 547, baseType: !1213, size: 32, offset: 256)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!121, !1154}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1129, line: 428, size: 32, elements: !1219)
!1219 = !{!1220}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1218, file: !1129, line: 434, baseType: !1181, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1223)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1129, line: 441, size: 32, elements: !1224)
!1224 = !{!1225}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1223, file: !1129, line: 447, baseType: !1181, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 441, baseType: !1229)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 430, size: 320, elements: !1230)
!1230 = !{!1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1229, file: !116, line: 432, baseType: !120, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1229, file: !116, line: 433, baseType: !120, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1229, file: !116, line: 434, baseType: !120, size: 32, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1229, file: !116, line: 435, baseType: !120, size: 32, offset: 96)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1229, file: !116, line: 436, baseType: !120, size: 32, offset: 128)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1229, file: !116, line: 437, baseType: !120, size: 32, offset: 160)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1229, file: !116, line: 438, baseType: !120, size: 32, offset: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1229, file: !116, line: 439, baseType: !120, size: 32, offset: 224)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1229, file: !116, line: 440, baseType: !1240, size: 64, offset: 256)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !385)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 454, baseType: !1243)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 447, size: 288, elements: !1244)
!1244 = !{!1245, !1246, !1247, !1249, !1250}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1243, file: !116, line: 449, baseType: !120, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1243, file: !116, line: 450, baseType: !120, size: 32, offset: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1243, file: !116, line: 451, baseType: !1248, size: 128, offset: 64)
!1248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !668)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1243, file: !116, line: 452, baseType: !819, size: 64, offset: 192)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1243, file: !116, line: 453, baseType: !120, size: 32, offset: 256)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1254)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !797, line: 100, size: 224, elements: !1255)
!1255 = !{!1256, !1261, !1262, !1271, !1276, !1281, !1286}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1254, file: !797, line: 101, baseType: !1257, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !797, line: 76, baseType: !1258)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!103, !1154, !889}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1254, file: !797, line: 102, baseType: !1257, size: 32, offset: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1254, file: !797, line: 103, baseType: !1263, size: 32, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !797, line: 83, baseType: !1264)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!103, !1154, !889, !1267, !102}
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !797, line: 72, baseType: !1268)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{null, !1154, !889, !102}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1254, file: !797, line: 104, baseType: !1272, size: 32, offset: 96)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !797, line: 79, baseType: !1273)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!103, !1154, !889, !845}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1254, file: !797, line: 105, baseType: !1277, size: 32, offset: 128)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !797, line: 88, baseType: !1278)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 32)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!796, !1154, !889}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1254, file: !797, line: 106, baseType: !1282, size: 32, offset: 160)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !797, line: 92, baseType: !1283)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!103, !1154, !889, !915}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1254, file: !797, line: 107, baseType: !1287, size: 32, offset: 192)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !797, line: 96, baseType: !1288)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!103, !1154, !889, !102}
!1291 = !{!1292, !1298, !1300, !1310, !1315, !1317, !1319, !1321, !1323, !1325, !1327, !1329, !1331, !1333, !1335, !1337, !1339, !1341, !1343, !1345, !1347, !1349, !1351, !1353, !1355, !1357, !1359, !1361, !1375, !1377, !1379, !1381, !1383, !1385, !1387, !1389, !1391, !1393, !1395, !1397, !1399, !1401, !1403, !1405, !1407, !1123, !1409, !1411, !1424, !1426, !1428, !1430, !1432, !1434, !1436}
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1125, file: !1294, line: 762, type: !1295, isLocal: false, isDefinition: true, align: 16)
!1294 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 96, elements: !1296)
!1296 = !{!1297}
!1297 = !DISubrange(count: 6)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1125, file: !1294, line: 762, type: !1155, isLocal: false, isDefinition: true, align: 32)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1125, file: !1294, line: 762, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1303)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1304)
!1304 = !{!1305, !1309}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1303, file: !132, line: 60, baseType: !1306, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!103, !1154}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1303, file: !132, line: 65, baseType: !1154, size: 32, offset: 32)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1125, file: !1294, line: 766, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1313)
!1313 = !{!1314}
!1314 = !DISubrange(count: 5)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1125, file: !1294, line: 766, type: !1155, isLocal: false, isDefinition: true, align: 32)
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1125, file: !1294, line: 766, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1125, file: !1294, line: 770, type: !1295, isLocal: false, isDefinition: true, align: 16)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1125, file: !1294, line: 770, type: !1155, isLocal: false, isDefinition: true, align: 32)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1125, file: !1294, line: 770, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1125, file: !1294, line: 774, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1125, file: !1294, line: 774, type: !1155, isLocal: false, isDefinition: true, align: 32)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1125, file: !1294, line: 774, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1125, file: !1294, line: 778, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1125, file: !1294, line: 778, type: !1155, isLocal: false, isDefinition: true, align: 32)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1125, file: !1294, line: 778, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1125, file: !1294, line: 782, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1125, file: !1294, line: 782, type: !1155, isLocal: false, isDefinition: true, align: 32)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1125, file: !1294, line: 782, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1125, file: !1294, line: 786, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1125, file: !1294, line: 786, type: !1155, isLocal: false, isDefinition: true, align: 32)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1125, file: !1294, line: 786, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1125, file: !1294, line: 790, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1125, file: !1294, line: 790, type: !1155, isLocal: false, isDefinition: true, align: 32)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1125, file: !1294, line: 790, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1125, file: !1294, line: 794, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1125, file: !1294, line: 794, type: !1155, isLocal: false, isDefinition: true, align: 32)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1125, file: !1294, line: 794, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1125, file: !1294, line: 762, type: !1363, isLocal: true, isDefinition: true)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1364, line: 237, size: 128, elements: !1365)
!1364 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1365 = !{!1366, !1367, !1368}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1363, file: !1364, line: 239, baseType: !1223, size: 32)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1363, file: !1364, line: 241, baseType: !1154, size: 32, offset: 32)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1363, file: !1364, line: 243, baseType: !1369, size: 64, offset: 64)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1201, line: 40, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1201, line: 35, size: 64, elements: !1371)
!1371 = !{!1372, !1374}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1370, file: !1201, line: 36, baseType: !1373, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1370, file: !1201, line: 37, baseType: !1373, size: 32, offset: 32)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1125, file: !1294, line: 762, type: !1163, isLocal: true, isDefinition: true, align: 8)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1125, file: !1294, line: 766, type: !1363, isLocal: true, isDefinition: true)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1125, file: !1294, line: 766, type: !1163, isLocal: true, isDefinition: true, align: 8)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1125, file: !1294, line: 770, type: !1363, isLocal: true, isDefinition: true)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1125, file: !1294, line: 770, type: !1163, isLocal: true, isDefinition: true, align: 8)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1125, file: !1294, line: 774, type: !1363, isLocal: true, isDefinition: true)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1125, file: !1294, line: 774, type: !1163, isLocal: true, isDefinition: true, align: 8)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1125, file: !1294, line: 778, type: !1363, isLocal: true, isDefinition: true)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1125, file: !1294, line: 778, type: !1163, isLocal: true, isDefinition: true, align: 8)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1125, file: !1294, line: 782, type: !1363, isLocal: true, isDefinition: true)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1125, file: !1294, line: 782, type: !1163, isLocal: true, isDefinition: true, align: 8)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1125, file: !1294, line: 786, type: !1363, isLocal: true, isDefinition: true)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1125, file: !1294, line: 786, type: !1163, isLocal: true, isDefinition: true, align: 8)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1125, file: !1294, line: 790, type: !1363, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1125, file: !1294, line: 790, type: !1163, isLocal: true, isDefinition: true, align: 8)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1125, file: !1294, line: 794, type: !1363, isLocal: true, isDefinition: true)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1125, file: !1294, line: 794, type: !1163, isLocal: true, isDefinition: true, align: 8)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1125, file: !1294, line: 656, type: !1147, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1125, file: !1294, line: 766, type: !1413, isLocal: true, isDefinition: true)
!1413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1414)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1364, line: 224, size: 160, elements: !1415)
!1415 = !{!1416, !1417, !1418, !1419}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1414, file: !1364, line: 226, baseType: !1218, size: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1414, file: !1364, line: 228, baseType: !845, size: 32, offset: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1414, file: !1364, line: 230, baseType: !103, size: 32, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1414, file: !1364, line: 231, baseType: !1420, size: 64, offset: 96)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !841, line: 343, size: 64, elements: !1421)
!1421 = !{!1422, !1423}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1420, file: !841, line: 344, baseType: !121, size: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1420, file: !841, line: 345, baseType: !121, size: 32, offset: 32)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1125, file: !1294, line: 770, type: !1413, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1125, file: !1294, line: 774, type: !1413, isLocal: true, isDefinition: true)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1125, file: !1294, line: 778, type: !1413, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1125, file: !1294, line: 782, type: !1413, isLocal: true, isDefinition: true)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1125, file: !1294, line: 786, type: !1413, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1125, file: !1294, line: 790, type: !1413, isLocal: true, isDefinition: true)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1125, file: !1294, line: 794, type: !1413, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1440, file: !1611, line: 1914, type: !1685, isLocal: true, isDefinition: true)
!1440 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1441, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1442, retainedTypes: !1475, globals: !1608, splitDebugInlining: false, nameTableKind: None)
!1441 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!1442 = !{!30, !1443, !1450, !1457, !1464, !1470, !796}
!1443 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !203, line: 47, baseType: !32, size: 32, elements: !1444)
!1444 = !{!1445, !1446, !1447, !1448, !1449}
!1445 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1446 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1447 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1448 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1449 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1450 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !203, line: 75, baseType: !32, size: 32, elements: !1451)
!1451 = !{!1452, !1453, !1454, !1455, !1456}
!1452 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1453 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1454 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1455 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1456 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1457 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !203, line: 92, baseType: !32, size: 32, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462, !1463}
!1459 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1460 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1461 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1462 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1463 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1464 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !203, line: 84, baseType: !32, size: 32, elements: !1465)
!1465 = !{!1466, !1467, !1468, !1469}
!1466 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1467 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1468 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1469 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1470 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !203, line: 107, baseType: !32, size: 32, elements: !1471)
!1471 = !{!1472, !1473, !1474}
!1472 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1473 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1474 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1475 = !{!102, !103, !1476, !155, !154, !1555, !121, !889, !1566, !328, !1605, !1607}
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1478)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !1479)
!1479 = !{!1480, !1499, !1503, !1507, !1520, !1525, !1529, !1533, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1478, file: !203, line: 365, baseType: !1481, size: 32)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!103, !1484, !224}
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 32)
!1485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1486)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1487)
!1487 = !{!1488, !1489, !1490, !1491, !1497, !1498}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1486, file: !141, line: 380, baseType: !144, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1486, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1486, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1486, file: !141, line: 386, baseType: !1492, size: 32, offset: 96)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1494)
!1494 = !{!1495, !1496}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1493, file: !141, line: 359, baseType: !154, size: 8)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1493, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1486, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1486, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1478, file: !203, line: 366, baseType: !1500, size: 32, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{null, !1484, !155}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1478, file: !203, line: 374, baseType: !1504, size: 32, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 32)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!103, !1484}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1478, file: !203, line: 377, baseType: !1508, size: 32, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!103, !1484, !1511}
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !1514)
!1514 = !{!1515, !1516, !1517, !1518, !1519}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1513, file: !203, line: 123, baseType: !121, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1513, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1513, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1513, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1513, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1478, file: !203, line: 379, baseType: !1521, size: 32, offset: 128)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!103, !1484, !1524}
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1478, file: !203, line: 384, baseType: !1526, size: 32, offset: 160)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!103, !1484, !255, !103}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1478, file: !203, line: 393, baseType: !1530, size: 32, offset: 192)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!103, !1484, !261, !262}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1478, file: !203, line: 402, baseType: !1534, size: 32, offset: 224)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{null, !1484}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1478, file: !203, line: 405, baseType: !1534, size: 32, offset: 256)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1478, file: !203, line: 408, baseType: !1504, size: 32, offset: 288)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1478, file: !203, line: 411, baseType: !1534, size: 32, offset: 320)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1478, file: !203, line: 414, baseType: !1534, size: 32, offset: 352)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1478, file: !203, line: 417, baseType: !1504, size: 32, offset: 384)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1478, file: !203, line: 420, baseType: !1504, size: 32, offset: 416)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1478, file: !203, line: 423, baseType: !1534, size: 32, offset: 448)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1478, file: !203, line: 426, baseType: !1534, size: 32, offset: 480)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1478, file: !203, line: 429, baseType: !1504, size: 32, offset: 512)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1478, file: !203, line: 432, baseType: !1504, size: 32, offset: 544)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1478, file: !203, line: 435, baseType: !1548, size: 32, offset: 576)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{null, !1484, !1551, !102}
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !1552)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 32)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{null, !1484, !102}
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 670, baseType: !1557)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 661, size: 224, elements: !1558)
!1558 = !{!1559, !1560, !1561, !1562, !1563, !1564, !1565}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1557, file: !116, line: 663, baseType: !120, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1557, file: !116, line: 664, baseType: !120, size: 32, offset: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1557, file: !116, line: 665, baseType: !120, size: 32, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1557, file: !116, line: 666, baseType: !120, size: 32, offset: 96)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1557, file: !116, line: 667, baseType: !120, size: 32, offset: 128)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1557, file: !116, line: 668, baseType: !120, size: 32, offset: 160)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1557, file: !116, line: 669, baseType: !120, size: 32, offset: 192)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !797, line: 100, size: 224, elements: !1569)
!1569 = !{!1570, !1575, !1576, !1585, !1590, !1595, !1600}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1568, file: !797, line: 101, baseType: !1571, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !797, line: 76, baseType: !1572)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!103, !1484, !889}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1568, file: !797, line: 102, baseType: !1571, size: 32, offset: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1568, file: !797, line: 103, baseType: !1577, size: 32, offset: 64)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !797, line: 83, baseType: !1578)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!103, !1484, !889, !1581, !102}
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !797, line: 72, baseType: !1582)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{null, !1484, !889, !102}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1568, file: !797, line: 104, baseType: !1586, size: 32, offset: 96)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !797, line: 79, baseType: !1587)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!103, !1484, !889, !845}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1568, file: !797, line: 105, baseType: !1591, size: 32, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !797, line: 88, baseType: !1592)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!796, !1484, !889}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1568, file: !797, line: 106, baseType: !1596, size: 32, offset: 160)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !797, line: 92, baseType: !1597)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 32)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!103, !1484, !889, !915}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1568, file: !797, line: 107, baseType: !1601, size: 32, offset: 192)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !797, line: 96, baseType: !1602)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!103, !1484, !889, !102}
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1606)
!1606 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1608 = !{!1609, !1615, !1617, !1624, !1438, !1626, !1634, !1657, !1660, !1663, !1674, !1676}
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1440, file: !1611, line: 1914, type: !1612, isLocal: false, isDefinition: true, align: 16)
!1611 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1613)
!1613 = !{!1614}
!1614 = !DISubrange(count: 8)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1440, file: !1611, line: 1914, type: !1485, isLocal: false, isDefinition: true, align: 32)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1440, file: !1611, line: 1914, type: !1619, isLocal: true, isDefinition: true, align: 32)
!1619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1621)
!1621 = !{!1622, !1623}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1620, file: !132, line: 60, baseType: !1504, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1620, file: !132, line: 65, baseType: !1484, size: 32, offset: 32)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1440, file: !1611, line: 1914, type: !1493, isLocal: true, isDefinition: true, align: 8)
!1626 = !DIGlobalVariableExpression(var: !1627, expr: !DIExpression())
!1627 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1440, file: !1611, line: 1914, type: !1628, isLocal: true, isDefinition: true)
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1629, size: 64, elements: !484)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !841, line: 343, size: 64, elements: !1631)
!1631 = !{!1632, !1633}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1630, file: !841, line: 344, baseType: !121, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1630, file: !841, line: 345, baseType: !121, size: 32, offset: 32)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1440, file: !1611, line: 1914, type: !1636, isLocal: true, isDefinition: true)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1638, line: 60, size: 64, elements: !1639)
!1638 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1639 = !{!1640, !1656}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1637, file: !1638, line: 69, baseType: !1641, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1638, line: 50, size: 64, elements: !1644)
!1644 = !{!1645, !1654, !1655}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1643, file: !1638, line: 52, baseType: !1646, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1648)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1649, line: 37, baseType: !1650)
!1649 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1649, line: 32, size: 64, elements: !1651)
!1651 = !{!1652, !1653}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1650, file: !1649, line: 34, baseType: !121, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1650, file: !1649, line: 36, baseType: !121, size: 32, offset: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1643, file: !1638, line: 54, baseType: !154, size: 8, offset: 32)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1643, file: !1638, line: 56, baseType: !154, size: 8, offset: 40)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1637, file: !1638, line: 71, baseType: !154, size: 8, offset: 32)
!1657 = !DIGlobalVariableExpression(var: !1658, expr: !DIExpression())
!1658 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1440, file: !1611, line: 1914, type: !1659, isLocal: true, isDefinition: true)
!1659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1642, size: 64, elements: !484)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1440, file: !1611, line: 1914, type: !1662, isLocal: true, isDefinition: true)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 128, elements: !385)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1665, file: !1611, line: 1914, type: !1668, isLocal: true, isDefinition: true, align: 32)
!1665 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1611, file: !1611, line: 1914, type: !1535, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !1666)
!1666 = !{!1667}
!1667 = !DILocalVariable(name: "dev", arg: 1, scope: !1665, file: !1611, line: 1914, type: !1484)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1668, file: !10, line: 55, baseType: !332, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1668, file: !10, line: 57, baseType: !332, size: 32, offset: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1668, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1668, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1440, file: !1611, line: 1539, type: !1477, isLocal: true, isDefinition: true)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1440, file: !1611, line: 1914, type: !1678, isLocal: true, isDefinition: true)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1679, line: 74, size: 128, elements: !1680)
!1679 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1680 = !{!1681, !1682, !1683, !1684}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1678, file: !1679, line: 76, baseType: !121, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1678, file: !1679, line: 78, baseType: !1484, size: 32, offset: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1678, file: !1679, line: 80, baseType: !1551, size: 32, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1678, file: !1679, line: 81, baseType: !102, size: 32, offset: 96)
!1685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1686)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1679, line: 22, size: 256, elements: !1687)
!1687 = !{!1688, !1689, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1700}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1686, file: !1679, line: 24, baseType: !1555, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1686, file: !1679, line: 26, baseType: !1690, size: 32, offset: 32)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1686, file: !1679, line: 28, baseType: !344, size: 32, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1686, file: !1679, line: 30, baseType: !157, size: 8, offset: 96)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1686, file: !1679, line: 32, baseType: !103, size: 32, offset: 128)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1686, file: !1679, line: 34, baseType: !157, size: 8, offset: 160)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1686, file: !1679, line: 36, baseType: !157, size: 8, offset: 168)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1686, file: !1679, line: 38, baseType: !157, size: 8, offset: 176)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1686, file: !1679, line: 40, baseType: !157, size: 8, offset: 184)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1686, file: !1679, line: 41, baseType: !1699, size: 32, offset: 192)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1686, file: !1679, line: 44, baseType: !1701, size: 32, offset: 224)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !203, line: 150, baseType: !1534)
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1704, file: !1784, line: 65, type: !120, isLocal: true, isDefinition: true)
!1704 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1705, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1706, retainedTypes: !1707, globals: !1781, splitDebugInlining: false, nameTableKind: None)
!1705 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!1706 = !{!564}
!1707 = !{!1708, !1710, !332, !154, !121, !1718, !1749}
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1709, line: 46, baseType: !420)
!1709 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !495, line: 770, baseType: !1712)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 764, size: 128, elements: !1713)
!1713 = !{!1714, !1715, !1716, !1717}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1712, file: !495, line: 766, baseType: !120, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1712, file: !495, line: 767, baseType: !120, size: 32, offset: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1712, file: !495, line: 768, baseType: !120, size: 32, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1712, file: !495, line: 769, baseType: !499, size: 32, offset: 96)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !1720)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !1721)
!1721 = !{!1722, !1724, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1739, !1744, !1748}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1720, file: !495, line: 413, baseType: !1723, size: 256)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1613)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1720, file: !495, line: 414, baseType: !1725, size: 768, offset: 256)
!1725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1726)
!1726 = !{!1727}
!1727 = !DISubrange(count: 24)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1720, file: !495, line: 415, baseType: !1723, size: 256, offset: 1024)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1720, file: !495, line: 416, baseType: !1725, size: 768, offset: 1280)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1720, file: !495, line: 417, baseType: !1723, size: 256, offset: 2048)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1720, file: !495, line: 418, baseType: !1725, size: 768, offset: 2304)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1720, file: !495, line: 419, baseType: !1723, size: 256, offset: 3072)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1720, file: !495, line: 420, baseType: !1725, size: 768, offset: 3328)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1720, file: !495, line: 421, baseType: !1723, size: 256, offset: 4096)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1720, file: !495, line: 422, baseType: !1736, size: 1792, offset: 4352)
!1736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1737)
!1737 = !{!1738}
!1738 = !DISubrange(count: 56)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1720, file: !495, line: 423, baseType: !1740, size: 1920, offset: 6144)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1741, size: 1920, elements: !1742)
!1741 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1742 = !{!1743}
!1743 = !DISubrange(count: 240)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1720, file: !495, line: 424, baseType: !1745, size: 20608, offset: 8064)
!1745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1746)
!1746 = !{!1747}
!1747 = !DISubrange(count: 644)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1720, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !1752)
!1752 = !{!1753, !1754, !1755, !1756, !1757, !1758, !1759, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1772, !1773, !1774, !1776, !1778, !1780}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1751, file: !495, line: 447, baseType: !499, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1751, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1751, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1751, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1751, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1751, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1751, file: !495, line: 453, baseType: !1760, size: 96, offset: 192)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1741, size: 96, elements: !1761)
!1761 = !{!1762}
!1762 = !DISubrange(count: 12)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1751, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1751, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1751, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1751, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1751, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1751, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1751, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1751, file: !495, line: 461, baseType: !1771, size: 64, offset: 512)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 64, elements: !385)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1751, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1751, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1751, file: !495, line: 464, baseType: !1775, size: 128, offset: 640)
!1775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 128, elements: !668)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1751, file: !495, line: 465, baseType: !1777, size: 160, offset: 768)
!1777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 160, elements: !1313)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1751, file: !495, line: 466, baseType: !1779, size: 160, offset: 928)
!1779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1313)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1751, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!1781 = !{!1782, !1808, !1811, !1813, !1815, !1702}
!1782 = !DIGlobalVariableExpression(var: !1783, expr: !DIExpression())
!1783 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1704, file: !1784, line: 285, type: !1785, isLocal: true, isDefinition: true, align: 32)
!1784 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1786)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1787)
!1787 = !{!1788, !1807}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1786, file: !132, line: 60, baseType: !1789, size: 32)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!103, !1792}
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1794)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1795)
!1795 = !{!1796, !1797, !1798, !1799, !1805, !1806}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1794, file: !141, line: 380, baseType: !144, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1794, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1794, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1794, file: !141, line: 386, baseType: !1800, size: 32, offset: 96)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1802)
!1802 = !{!1803, !1804}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1801, file: !141, line: 359, baseType: !154, size: 8)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1801, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1794, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1794, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1786, file: !132, line: 65, baseType: !1792, size: 32, offset: 32)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "lock", scope: !1704, file: !1784, line: 34, type: !1810, isLocal: true, isDefinition: true)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!1811 = !DIGlobalVariableExpression(var: !1812, expr: !DIExpression())
!1812 = distinct !DIGlobalVariable(name: "last_load", scope: !1704, file: !1784, line: 36, type: !121, isLocal: true, isDefinition: true)
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1704, file: !1784, line: 48, type: !121, isLocal: true, isDefinition: true)
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1704, file: !1784, line: 54, type: !121, isLocal: true, isDefinition: true)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1819, file: !1901, line: 22, type: !1903, isLocal: true, isDefinition: true)
!1819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1820, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1821, retainedTypes: !1822, globals: !1898, splitDebugInlining: false, nameTableKind: None)
!1820 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!1821 = !{!1128, !1134}
!1822 = !{!1823, !1887, !1892, !1181, !1134, !1128, !1897, !102}
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1129, line: 523, size: 288, elements: !1826)
!1826 = !{!1827, !1846, !1850, !1854, !1858, !1859, !1860, !1864, !1883}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1825, file: !1129, line: 524, baseType: !1828, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!103, !1831, !1169, !1170}
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1833)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1834)
!1834 = !{!1835, !1836, !1837, !1838, !1844, !1845}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1833, file: !141, line: 380, baseType: !144, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1833, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1833, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1833, file: !141, line: 386, baseType: !1839, size: 32, offset: 96)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1841)
!1841 = !{!1842, !1843}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1840, file: !141, line: 359, baseType: !154, size: 8)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1840, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1833, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1833, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1825, file: !1129, line: 530, baseType: !1847, size: 32, offset: 32)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 32)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{!103, !1831, !1175}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1825, file: !1129, line: 532, baseType: !1851, size: 32, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 32)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!103, !1831, !1181, !1176}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1825, file: !1129, line: 535, baseType: !1855, size: 32, offset: 96)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{!103, !1831, !1181}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1825, file: !1129, line: 537, baseType: !1855, size: 32, offset: 128)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1825, file: !1129, line: 539, baseType: !1855, size: 32, offset: 160)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1825, file: !1129, line: 541, baseType: !1861, size: 32, offset: 192)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{!103, !1831, !1169, !1128, !1134}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1825, file: !1129, line: 544, baseType: !1865, size: 32, offset: 224)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{!103, !1831, !1868, !157}
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1129, line: 478, size: 96, elements: !1870)
!1870 = !{!1871, !1877, !1882}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1869, file: !1129, line: 482, baseType: !1872, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1201, line: 33, baseType: !1873)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1201, line: 29, size: 32, elements: !1874)
!1874 = !{!1875}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1873, file: !1201, line: 30, baseType: !1876, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1869, file: !1129, line: 485, baseType: !1878, size: 32, offset: 32)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1129, line: 464, baseType: !1879)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{null, !1831, !1868, !1181}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1869, file: !1129, line: 493, baseType: !1181, size: 32, offset: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1825, file: !1129, line: 547, baseType: !1884, size: 32, offset: 256)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DISubroutineType(types: !1886)
!1886 = !{!121, !1831}
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1889)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1129, line: 428, size: 32, elements: !1890)
!1890 = !{!1891}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1889, file: !1129, line: 434, baseType: !1181, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1894)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1129, line: 441, size: 32, elements: !1895)
!1895 = !{!1896}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1894, file: !1129, line: 447, baseType: !1181, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1898 = !{!1899, !1817}
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1900 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1819, file: !1901, line: 37, type: !1902, isLocal: true, isDefinition: true)
!1901 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !344)
!1903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1904, size: 352, elements: !1905)
!1904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1831)
!1905 = !{!1906}
!1906 = !DISubrange(count: 11)
!1907 = !DIGlobalVariableExpression(var: !1908, expr: !DIExpression())
!1908 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1909, file: !1949, line: 139, type: !1953, isLocal: false, isDefinition: true)
!1909 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1910, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1911, globals: !1946, splitDebugInlining: false, nameTableKind: None)
!1910 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!1911 = !{!1912}
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !1914)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !1915)
!1915 = !{!1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1914, file: !116, line: 502, baseType: !120, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1914, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1914, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1914, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1914, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1914, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1914, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1914, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1914, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1914, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1914, file: !116, line: 512, baseType: !819, size: 64, offset: 320)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1914, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1914, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1914, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1914, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1914, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1914, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1914, file: !116, line: 519, baseType: !819, size: 64, offset: 576)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1914, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1914, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1914, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1914, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1914, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1914, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1914, file: !116, line: 526, baseType: !819, size: 64, offset: 832)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1914, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1914, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1914, file: !116, line: 529, baseType: !819, size: 64, offset: 960)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1914, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1914, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!1946 = !{!1947, !1950, !1907}
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression())
!1948 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1909, file: !1949, line: 137, type: !121, isLocal: false, isDefinition: true)
!1949 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1950 = !DIGlobalVariableExpression(var: !1951, expr: !DIExpression())
!1951 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1909, file: !1949, line: 138, type: !1952, isLocal: false, isDefinition: true)
!1952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 128, elements: !290)
!1953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 64, elements: !1613)
!1954 = !DIGlobalVariableExpression(var: !1955, expr: !DIExpression())
!1955 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1956, file: !1959, line: 23, type: !262, isLocal: false, isDefinition: true)
!1956 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1957, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1958, splitDebugInlining: false, nameTableKind: None)
!1957 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!1958 = !{!1954}
!1959 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression())
!1961 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1962, file: !1966, line: 86, type: !2213, isLocal: false, isDefinition: true, align: 512)
!1962 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1963, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1964, retainedTypes: !1973, globals: !2046, splitDebugInlining: false, nameTableKind: None)
!1963 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!1964 = !{!1965, !30, !564}
!1965 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1966, line: 63, baseType: !32, size: 32, elements: !1967)
!1966 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1967 = !{!1968, !1969, !1970, !1971, !1972}
!1968 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1969 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1970 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1971 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1972 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1973 = !{!22, !344, !102, !103, !1974, !1071, !121, !2004, !332, !154, !2029}
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1976)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1977, line: 51, size: 64, elements: !1978)
!1977 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1978 = !{!1979, !1999}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1976, file: !1977, line: 52, baseType: !1980, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1977, line: 38, baseType: !1981)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 32)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{!103, !1984, !261, !328}
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1986)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1987)
!1987 = !{!1988, !1989, !1990, !1991, !1997, !1998}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1986, file: !141, line: 380, baseType: !144, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1986, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1986, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1986, file: !141, line: 386, baseType: !1992, size: 32, offset: 96)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 32)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1994)
!1994 = !{!1995, !1996}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1993, file: !141, line: 359, baseType: !154, size: 8)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1993, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1986, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1986, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1976, file: !1977, line: 53, baseType: !2000, size: 32, offset: 32)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1977, line: 47, baseType: !2001)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 32)
!2002 = !DISubroutineType(types: !2003)
!2003 = !{!103, !1984, !261, !328, !121}
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2006)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2007)
!2007 = !{!2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2006, file: !495, line: 447, baseType: !499, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2006, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2006, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2006, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2006, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2006, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2006, file: !495, line: 453, baseType: !1760, size: 96, offset: 192)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2006, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2006, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2006, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2006, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2006, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2006, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2006, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2006, file: !495, line: 461, baseType: !1771, size: 64, offset: 512)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2006, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2006, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2006, file: !495, line: 464, baseType: !1775, size: 128, offset: 640)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2006, file: !495, line: 465, baseType: !1777, size: 160, offset: 768)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2006, file: !495, line: 466, baseType: !1779, size: 160, offset: 928)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2006, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !2031)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !2032)
!2032 = !{!2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2031, file: !495, line: 413, baseType: !1723, size: 256)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2031, file: !495, line: 414, baseType: !1725, size: 768, offset: 256)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2031, file: !495, line: 415, baseType: !1723, size: 256, offset: 1024)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2031, file: !495, line: 416, baseType: !1725, size: 768, offset: 1280)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2031, file: !495, line: 417, baseType: !1723, size: 256, offset: 2048)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2031, file: !495, line: 418, baseType: !1725, size: 768, offset: 2304)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2031, file: !495, line: 419, baseType: !1723, size: 256, offset: 3072)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2031, file: !495, line: 420, baseType: !1725, size: 768, offset: 3328)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2031, file: !495, line: 421, baseType: !1723, size: 256, offset: 4096)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2031, file: !495, line: 422, baseType: !1736, size: 1792, offset: 4352)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2031, file: !495, line: 423, baseType: !1740, size: 1920, offset: 6144)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2031, file: !495, line: 424, baseType: !1745, size: 20608, offset: 8064)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2031, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!2046 = !{!2047, !2169, !2178, !2180, !1960, !2183, !2185, !2190}
!2047 = !DIGlobalVariableExpression(var: !2048, expr: !DIExpression())
!2048 = distinct !DIGlobalVariable(name: "_kernel", scope: !1962, file: !1966, line: 40, type: !2049, isLocal: false, isDefinition: true)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !304, line: 158, size: 288, elements: !2050)
!2050 = !{!2051, !2164}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2049, file: !304, line: 159, baseType: !2052, size: 192)
!2052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2053, size: 192, elements: !484)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !304, line: 100, size: 192, elements: !2054)
!2054 = !{!2055, !2056, !2057, !2158, !2159, !2160, !2161}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2053, file: !304, line: 102, baseType: !121, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2053, file: !304, line: 105, baseType: !1071, size: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2053, file: !304, line: 108, baseType: !2058, size: 32, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 32)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !2060)
!2060 = !{!2061, !2119, !2131, !2132, !2133, !2134, !2140, !2153}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2059, file: !355, line: 247, baseType: !2062, size: 384)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !2063)
!2063 = !{!2064, !2088, !2095, !2096, !2097, !2106, !2107, !2108}
!2064 = !DIDerivedType(tag: DW_TAG_member, scope: !2062, file: !355, line: 60, baseType: !2065, size: 64)
!2065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2062, file: !355, line: 60, size: 64, elements: !2066)
!2066 = !{!2067, !2082}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2065, file: !355, line: 61, baseType: !2068, size: 64)
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2069)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2070)
!2070 = !{!2071, !2077}
!2071 = !DIDerivedType(tag: DW_TAG_member, scope: !2069, file: !309, line: 38, baseType: !2072, size: 32)
!2072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2069, file: !309, line: 38, size: 32, elements: !2073)
!2073 = !{!2074, !2076}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2072, file: !309, line: 39, baseType: !2075, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2072, file: !309, line: 40, baseType: !2075, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, scope: !2069, file: !309, line: 42, baseType: !2078, size: 32, offset: 32)
!2078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2069, file: !309, line: 42, size: 32, elements: !2079)
!2079 = !{!2080, !2081}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2078, file: !309, line: 43, baseType: !2075, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2078, file: !309, line: 44, baseType: !2075, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2065, file: !355, line: 62, baseType: !2083, size: 64)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !2084)
!2084 = !{!2085}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2083, file: !380, line: 50, baseType: !2086, size: 64)
!2086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2087, size: 64, elements: !385)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2062, file: !355, line: 68, baseType: !2089, size: 32, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !2091)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !2092)
!2092 = !{!2093}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2091, file: !304, line: 232, baseType: !2094, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2069)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2062, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2062, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!2097 = !DIDerivedType(tag: DW_TAG_member, scope: !2062, file: !355, line: 90, baseType: !2098, size: 16, offset: 112)
!2098 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2062, file: !355, line: 90, size: 16, elements: !2099)
!2099 = !{!2100, !2105}
!2100 = !DIDerivedType(tag: DW_TAG_member, scope: !2098, file: !355, line: 91, baseType: !2101, size: 16)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2098, file: !355, line: 91, size: 16, elements: !2102)
!2102 = !{!2103, !2104}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2101, file: !355, line: 96, baseType: !403, size: 8)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2101, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2098, file: !355, line: 100, baseType: !328, size: 16)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2062, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2062, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2062, file: !355, line: 131, baseType: !2109, size: 192, offset: 192)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2110)
!2110 = !{!2111, !2112, !2118}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2109, file: !304, line: 245, baseType: !2068, size: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2109, file: !304, line: 246, baseType: !2113, size: 32, offset: 64)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2114)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 32)
!2115 = !DISubroutineType(types: !2116)
!2116 = !{null, !2117}
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2109, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2059, file: !355, line: 250, baseType: !2120, size: 288, offset: 384)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !2121)
!2121 = !{!2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2120, file: !424, line: 26, baseType: !121, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2120, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2120, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2120, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2120, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2120, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2120, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2120, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2120, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2059, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2059, file: !355, line: 256, baseType: !2090, size: 64, offset: 704)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2059, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2059, file: !355, line: 300, baseType: !2135, size: 96, offset: 800)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !2136)
!2136 = !{!2137, !2138, !2139}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2135, file: !355, line: 153, baseType: !22, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2135, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2135, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2059, file: !355, line: 325, baseType: !2141, size: 32, offset: 896)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !2143)
!2143 = !{!2144, !2150, !2151}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2142, file: !300, line: 5074, baseType: !2145, size: 96)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !2146)
!2146 = !{!2147, !2148, !2149}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2145, file: !450, line: 57, baseType: !453, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2145, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2145, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2142, file: !300, line: 5075, baseType: !2090, size: 64, offset: 96)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2142, file: !300, line: 5076, baseType: !2152, offset: 160)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2059, file: !355, line: 343, baseType: !2154, size: 64, offset: 928)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !2155)
!2155 = !{!2156, !2157}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2154, file: !424, line: 63, baseType: !121, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2154, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2053, file: !304, line: 111, baseType: !2058, size: 32, offset: 96)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2053, file: !304, line: 124, baseType: !103, size: 32, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2053, file: !304, line: 127, baseType: !154, size: 8, offset: 160)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2053, file: !304, line: 153, baseType: !2162, offset: 168)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2163, line: 33, elements: !461)
!2163 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2049, file: !304, line: 170, baseType: !2165, size: 96, offset: 192)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !304, line: 83, size: 96, elements: !2166)
!2166 = !{!2167, !2168}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2165, file: !304, line: 86, baseType: !2058, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2165, file: !304, line: 90, baseType: !2094, size: 64, offset: 32)
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1962, file: !1966, line: 43, type: !2171, isLocal: false, isDefinition: true, align: 512)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2172, size: 8704, elements: !2176)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2173, line: 47, size: 8, elements: !2174)
!2173 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2174 = !{!2175}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2172, file: !2173, line: 48, baseType: !146, size: 8)
!2176 = !{!2177}
!2177 = !DISubrange(count: 1088)
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1962, file: !1966, line: 44, type: !2059, isLocal: false, isDefinition: true)
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1962, file: !1966, line: 48, type: !2182, isLocal: false, isDefinition: true)
!2182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2059, size: 1024, elements: !484)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1962, file: !1966, line: 217, type: !157, isLocal: false, isDefinition: true)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1962, file: !1966, line: 50, type: !2187, isLocal: true, isDefinition: true, align: 512)
!2187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2172, size: 3072, elements: !2188)
!2188 = !{!485, !2189}
!2189 = !DISubrange(count: 384)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(name: "levels", scope: !2192, file: !1966, line: 232, type: !2212, isLocal: true, isDefinition: true)
!2192 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1966, file: !1966, line: 230, type: !2193, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !2195)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{null, !1965}
!2195 = !{!2196, !2197, !2207, !2211}
!2196 = !DILocalVariable(name: "level", arg: 1, scope: !2192, file: !1966, line: 230, type: !1965)
!2197 = !DILocalVariable(name: "entry", scope: !2192, file: !1966, line: 244, type: !2198)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!2199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2200)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2201)
!2201 = !{!2202, !2206}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2200, file: !132, line: 60, baseType: !2203, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{!103, !1984}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2200, file: !132, line: 65, baseType: !1984, size: 32, offset: 32)
!2207 = !DILocalVariable(name: "dev", scope: !2208, file: !1966, line: 247, type: !1984)
!2208 = distinct !DILexicalBlock(scope: !2209, file: !1966, line: 246, column: 64)
!2209 = distinct !DILexicalBlock(scope: !2210, file: !1966, line: 246, column: 2)
!2210 = distinct !DILexicalBlock(scope: !2192, file: !1966, line: 246, column: 2)
!2211 = !DILocalVariable(name: "rc", scope: !2208, file: !1966, line: 248, type: !103)
!2212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2198, size: 192, elements: !1296)
!2213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2172, size: 16896, elements: !2214)
!2214 = !{!485, !2215}
!2215 = !DISubrange(count: 2112)
!2216 = !DIGlobalVariableExpression(var: !2217, expr: !DIExpression())
!2217 = distinct !DIGlobalVariable(name: "states_str", scope: !2218, file: !2219, line: 276, type: !2340, isLocal: true, isDefinition: true)
!2218 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2219, file: !2219, line: 271, type: !2220, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2331)
!2219 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2220 = !DISubroutineType(types: !2221)
!2221 = !{!144, !2222, !1071, !344}
!2222 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !2223)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !2225)
!2225 = !{!2226, !2284, !2296, !2297, !2298, !2299, !2305, !2318}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2224, file: !355, line: 247, baseType: !2227, size: 384)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !2228)
!2228 = !{!2229, !2253, !2260, !2261, !2262, !2271, !2272, !2273}
!2229 = !DIDerivedType(tag: DW_TAG_member, scope: !2227, file: !355, line: 60, baseType: !2230, size: 64)
!2230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2227, file: !355, line: 60, size: 64, elements: !2231)
!2231 = !{!2232, !2247}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2230, file: !355, line: 61, baseType: !2233, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2234)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2235)
!2235 = !{!2236, !2242}
!2236 = !DIDerivedType(tag: DW_TAG_member, scope: !2234, file: !309, line: 38, baseType: !2237, size: 32)
!2237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2234, file: !309, line: 38, size: 32, elements: !2238)
!2238 = !{!2239, !2241}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2237, file: !309, line: 39, baseType: !2240, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2237, file: !309, line: 40, baseType: !2240, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, scope: !2234, file: !309, line: 42, baseType: !2243, size: 32, offset: 32)
!2243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2234, file: !309, line: 42, size: 32, elements: !2244)
!2244 = !{!2245, !2246}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2243, file: !309, line: 43, baseType: !2240, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2243, file: !309, line: 44, baseType: !2240, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2230, file: !355, line: 62, baseType: !2248, size: 64)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !2249)
!2249 = !{!2250}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2248, file: !380, line: 50, baseType: !2251, size: 64)
!2251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2252, size: 64, elements: !385)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2227, file: !355, line: 68, baseType: !2254, size: 32, offset: 64)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !2256)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !2257)
!2257 = !{!2258}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2256, file: !304, line: 232, baseType: !2259, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2234)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2227, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2227, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!2262 = !DIDerivedType(tag: DW_TAG_member, scope: !2227, file: !355, line: 90, baseType: !2263, size: 16, offset: 112)
!2263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2227, file: !355, line: 90, size: 16, elements: !2264)
!2264 = !{!2265, !2270}
!2265 = !DIDerivedType(tag: DW_TAG_member, scope: !2263, file: !355, line: 91, baseType: !2266, size: 16)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2263, file: !355, line: 91, size: 16, elements: !2267)
!2267 = !{!2268, !2269}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2266, file: !355, line: 96, baseType: !403, size: 8)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2266, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2263, file: !355, line: 100, baseType: !328, size: 16)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2227, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2227, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2227, file: !355, line: 131, baseType: !2274, size: 192, offset: 192)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2275)
!2275 = !{!2276, !2277, !2283}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2274, file: !304, line: 245, baseType: !2233, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2274, file: !304, line: 246, baseType: !2278, size: 32, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2279)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 32)
!2280 = !DISubroutineType(types: !2281)
!2281 = !{null, !2282}
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2274, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2224, file: !355, line: 250, baseType: !2285, size: 288, offset: 384)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !2286)
!2286 = !{!2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2285, file: !424, line: 26, baseType: !121, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2285, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2285, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2285, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2285, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2285, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2285, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2285, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2285, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2224, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2224, file: !355, line: 256, baseType: !2255, size: 64, offset: 704)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2224, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2224, file: !355, line: 300, baseType: !2300, size: 96, offset: 800)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !2301)
!2301 = !{!2302, !2303, !2304}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2300, file: !355, line: 153, baseType: !22, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2300, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2300, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2224, file: !355, line: 325, baseType: !2306, size: 32, offset: 896)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 32)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !2308)
!2308 = !{!2309, !2315, !2316}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2307, file: !300, line: 5074, baseType: !2310, size: 96)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !2311)
!2311 = !{!2312, !2313, !2314}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2310, file: !450, line: 57, baseType: !453, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2310, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2310, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2307, file: !300, line: 5075, baseType: !2255, size: 64, offset: 96)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2307, file: !300, line: 5076, baseType: !2317, offset: 160)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2224, file: !355, line: 343, baseType: !2319, size: 64, offset: 928)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !2320)
!2320 = !{!2321, !2322}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2319, file: !424, line: 63, baseType: !121, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2319, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!2323 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2324, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2325, globals: !2327, splitDebugInlining: false, nameTableKind: None)
!2324 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2325 = !{!102, !144, !1708, !154, !103, !2326, !24, !344, !1071, !22, !121, !1605}
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 32)
!2327 = !{!2216, !2328}
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(name: "states_sz", scope: !2218, file: !2219, line: 279, type: !2330, isLocal: true, isDefinition: true)
!2330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1902, size: 256, elements: !1613)
!2331 = !{!2332, !2333, !2334, !2335, !2336, !2337, !2338}
!2332 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2218, file: !2219, line: 271, type: !2222)
!2333 = !DILocalVariable(name: "buf", arg: 2, scope: !2218, file: !2219, line: 271, type: !1071)
!2334 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2218, file: !2219, line: 271, type: !344)
!2335 = !DILocalVariable(name: "off", scope: !2218, file: !2219, line: 273, type: !344)
!2336 = !DILocalVariable(name: "bit", scope: !2218, file: !2219, line: 274, type: !154)
!2337 = !DILocalVariable(name: "thread_state", scope: !2218, file: !2219, line: 275, type: !154)
!2338 = !DILocalVariable(name: "index", scope: !2339, file: !2219, line: 293, type: !154)
!2339 = distinct !DILexicalBlock(scope: !2218, file: !2219, line: 293, column: 2)
!2340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1613)
!2341 = !DIGlobalVariableExpression(var: !2342, expr: !DIExpression())
!2342 = distinct !DIGlobalVariable(name: "lock", scope: !2343, file: !2362, line: 39, type: !2363, isLocal: true, isDefinition: true)
!2343 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2344, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2345, globals: !2361, splitDebugInlining: false, nameTableKind: None)
!2344 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2345 = !{!102, !157, !103, !2346}
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2348)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2349)
!2349 = !{!2350, !2356}
!2350 = !DIDerivedType(tag: DW_TAG_member, scope: !2348, file: !309, line: 38, baseType: !2351, size: 32)
!2351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2348, file: !309, line: 38, size: 32, elements: !2352)
!2352 = !{!2353, !2355}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2351, file: !309, line: 39, baseType: !2354, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2351, file: !309, line: 40, baseType: !2354, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, scope: !2348, file: !309, line: 42, baseType: !2357, size: 32, offset: 32)
!2357 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2348, file: !309, line: 42, size: 32, elements: !2358)
!2358 = !{!2359, !2360}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2357, file: !309, line: 43, baseType: !2354, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2357, file: !309, line: 44, baseType: !2354, size: 32)
!2361 = !{!2341}
!2362 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2364 = !DIGlobalVariableExpression(var: !2365, expr: !DIExpression())
!2365 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2366, file: !2474, line: 56, type: !2463, isLocal: false, isDefinition: true)
!2366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2367, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2368, globals: !2471, splitDebugInlining: false, nameTableKind: None)
!2367 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2368 = !{!2369, !1071, !102, !2469, !261, !1708, !332, !103, !121, !1605, !2470}
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !2371)
!2371 = !{!2372, !2430, !2442, !2443, !2444, !2445, !2451, !2464}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2370, file: !355, line: 247, baseType: !2373, size: 384)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !2374)
!2374 = !{!2375, !2399, !2406, !2407, !2408, !2417, !2418, !2419}
!2375 = !DIDerivedType(tag: DW_TAG_member, scope: !2373, file: !355, line: 60, baseType: !2376, size: 64)
!2376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2373, file: !355, line: 60, size: 64, elements: !2377)
!2377 = !{!2378, !2393}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2376, file: !355, line: 61, baseType: !2379, size: 64)
!2379 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2380)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2381)
!2381 = !{!2382, !2388}
!2382 = !DIDerivedType(tag: DW_TAG_member, scope: !2380, file: !309, line: 38, baseType: !2383, size: 32)
!2383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2380, file: !309, line: 38, size: 32, elements: !2384)
!2384 = !{!2385, !2387}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2383, file: !309, line: 39, baseType: !2386, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2383, file: !309, line: 40, baseType: !2386, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, scope: !2380, file: !309, line: 42, baseType: !2389, size: 32, offset: 32)
!2389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2380, file: !309, line: 42, size: 32, elements: !2390)
!2390 = !{!2391, !2392}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2389, file: !309, line: 43, baseType: !2386, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2389, file: !309, line: 44, baseType: !2386, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2376, file: !355, line: 62, baseType: !2394, size: 64)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !2395)
!2395 = !{!2396}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2394, file: !380, line: 50, baseType: !2397, size: 64)
!2397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2398, size: 64, elements: !385)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2373, file: !355, line: 68, baseType: !2400, size: 32, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !2402)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !2403)
!2403 = !{!2404}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2402, file: !304, line: 232, baseType: !2405, size: 64)
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2380)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2373, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2373, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!2408 = !DIDerivedType(tag: DW_TAG_member, scope: !2373, file: !355, line: 90, baseType: !2409, size: 16, offset: 112)
!2409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2373, file: !355, line: 90, size: 16, elements: !2410)
!2410 = !{!2411, !2416}
!2411 = !DIDerivedType(tag: DW_TAG_member, scope: !2409, file: !355, line: 91, baseType: !2412, size: 16)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2409, file: !355, line: 91, size: 16, elements: !2413)
!2413 = !{!2414, !2415}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2412, file: !355, line: 96, baseType: !403, size: 8)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2412, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2409, file: !355, line: 100, baseType: !328, size: 16)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2373, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2373, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2373, file: !355, line: 131, baseType: !2420, size: 192, offset: 192)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2421)
!2421 = !{!2422, !2423, !2429}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2420, file: !304, line: 245, baseType: !2379, size: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2420, file: !304, line: 246, baseType: !2424, size: 32, offset: 64)
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2425)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 32)
!2426 = !DISubroutineType(types: !2427)
!2427 = !{null, !2428}
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2420, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2370, file: !355, line: 250, baseType: !2431, size: 288, offset: 384)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !2432)
!2432 = !{!2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2431, file: !424, line: 26, baseType: !121, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2431, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2431, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2431, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2431, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2431, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2431, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2431, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2431, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2370, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2370, file: !355, line: 256, baseType: !2401, size: 64, offset: 704)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2370, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2370, file: !355, line: 300, baseType: !2446, size: 96, offset: 800)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !2447)
!2447 = !{!2448, !2449, !2450}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2446, file: !355, line: 153, baseType: !22, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2446, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2446, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2370, file: !355, line: 325, baseType: !2452, size: 32, offset: 896)
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 32)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !2454)
!2454 = !{!2455, !2461, !2462}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2453, file: !300, line: 5074, baseType: !2456, size: 96)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !2457)
!2457 = !{!2458, !2459, !2460}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2456, file: !450, line: 57, baseType: !453, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2456, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2456, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2453, file: !300, line: 5075, baseType: !2401, size: 64, offset: 96)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2453, file: !300, line: 5076, baseType: !2463, offset: 160)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2370, file: !355, line: 343, baseType: !2465, size: 64, offset: 928)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !2466)
!2466 = !{!2467, !2468}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2465, file: !424, line: 63, baseType: !121, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2465, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!2471 = !{!2364, !2472, !2475, !2477}
!2472 = !DIGlobalVariableExpression(var: !2473, expr: !DIExpression())
!2473 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2366, file: !2474, line: 404, type: !103, isLocal: true, isDefinition: true)
!2474 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2475 = !DIGlobalVariableExpression(var: !2476, expr: !DIExpression())
!2476 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2366, file: !2474, line: 405, type: !103, isLocal: true, isDefinition: true)
!2477 = !DIGlobalVariableExpression(var: !2478, expr: !DIExpression())
!2478 = distinct !DIGlobalVariable(name: "pending_current", scope: !2366, file: !2474, line: 425, type: !2369, isLocal: true, isDefinition: true)
!2479 = !DIGlobalVariableExpression(var: !2480, expr: !DIExpression())
!2480 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2481, file: !2511, line: 15, type: !1605, isLocal: true, isDefinition: true)
!2481 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2482, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2483, globals: !2508, splitDebugInlining: false, nameTableKind: None)
!2482 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2483 = !{!1708, !102, !332, !121, !1605, !103, !2484, !1071, !420}
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2486)
!2486 = !{!2487, !2502, !2507}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2485, file: !304, line: 245, baseType: !2488, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2489)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2490)
!2490 = !{!2491, !2497}
!2491 = !DIDerivedType(tag: DW_TAG_member, scope: !2489, file: !309, line: 38, baseType: !2492, size: 32)
!2492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2489, file: !309, line: 38, size: 32, elements: !2493)
!2493 = !{!2494, !2496}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2492, file: !309, line: 39, baseType: !2495, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2492, file: !309, line: 40, baseType: !2495, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, scope: !2489, file: !309, line: 42, baseType: !2498, size: 32, offset: 32)
!2498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2489, file: !309, line: 42, size: 32, elements: !2499)
!2499 = !{!2500, !2501}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2498, file: !309, line: 43, baseType: !2495, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2498, file: !309, line: 44, baseType: !2495, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2485, file: !304, line: 246, baseType: !2503, size: 32, offset: 64)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2504)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 32)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{null, !2484}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2485, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2508 = !{!2479, !2509, !2513, !2515}
!2509 = !DIGlobalVariableExpression(var: !2510, expr: !DIExpression())
!2510 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2481, file: !2511, line: 19, type: !2512, isLocal: true, isDefinition: true)
!2511 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2513 = !DIGlobalVariableExpression(var: !2514, expr: !DIExpression())
!2514 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2481, file: !2511, line: 25, type: !103, isLocal: true, isDefinition: true)
!2515 = !DIGlobalVariableExpression(var: !2516, expr: !DIExpression())
!2516 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2481, file: !2511, line: 17, type: !2517, isLocal: true, isDefinition: true)
!2517 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2489)
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2520, file: !2539, line: 55, type: !2540, isLocal: true, isDefinition: true, align: 32)
!2520 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2521, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2522, globals: !2538, splitDebugInlining: false, nameTableKind: None)
!2521 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2522 = !{!102, !1708, !103, !2523}
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2525)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2526)
!2526 = !{!2527, !2533}
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2525, file: !309, line: 38, baseType: !2528, size: 32)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2525, file: !309, line: 38, size: 32, elements: !2529)
!2529 = !{!2530, !2532}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2528, file: !309, line: 39, baseType: !2531, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2528, file: !309, line: 40, baseType: !2531, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, scope: !2525, file: !309, line: 42, baseType: !2534, size: 32, offset: 32)
!2534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2525, file: !309, line: 42, size: 32, elements: !2535)
!2535 = !{!2536, !2537}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2534, file: !309, line: 43, baseType: !2531, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2534, file: !309, line: 44, baseType: !2531, size: 32)
!2538 = !{!2518}
!2539 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2541)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2542)
!2542 = !{!2543, !2550}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2541, file: !132, line: 60, baseType: !2544, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 32)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{!103, !2547}
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2549)
!2549 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !132, line: 48, flags: DIFlagFwdDecl)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2541, file: !132, line: 65, baseType: !2547, size: 32, offset: 32)
!2551 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2552, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2552 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2553 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2554, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2554 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getchar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2559, retainedTypes: !2567, splitDebugInlining: false, nameTableKind: None)
!2558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2559 = !{!30, !2560}
!2560 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2561, line: 54, baseType: !32, size: 32, elements: !2562)
!2561 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2562 = !{!2563, !2564, !2565, !2566}
!2563 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2564 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2565 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2566 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2567 = !{!102, !344, !261, !24, !2568, !22, !2574, !103, !845, !2589}
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2561, line: 58, baseType: !2570)
!2570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2561, line: 58, size: 64, elements: !2571)
!2571 = !{!2572}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2570, file: !2561, line: 58, baseType: !2573, size: 64)
!2573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 64, elements: !1613)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 32)
!2575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2561, line: 68, size: 128, elements: !2576)
!2576 = !{!2577, !2580, !2581, !2582}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2575, file: !2561, line: 69, baseType: !2578, size: 64)
!2578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2579, size: 64, elements: !385)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2561, line: 61, baseType: !121)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2575, file: !2561, line: 70, baseType: !2579, size: 32, offset: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2575, file: !2561, line: 71, baseType: !121, size: 32, offset: 96)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2575, file: !2561, line: 77, baseType: !2583, offset: 128)
!2583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2584, elements: !2587)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2561, line: 64, size: 32, elements: !2585)
!2585 = !{!2586}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2584, file: !2561, line: 65, baseType: !2579, size: 32)
!2587 = !{!2588}
!2588 = !DISubrange(count: 0)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 32)
!2590 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2591, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2592, retainedTypes: !2612, splitDebugInlining: false, nameTableKind: None)
!2591 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2592 = !{!2593, !2601}
!2593 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2594, line: 69, baseType: !32, size: 32, elements: !2595)
!2594 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2595 = !{!2596, !2597, !2598, !2599, !2600}
!2596 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2597 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2598 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2599 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2600 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2601 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2594, line: 56, baseType: !32, size: 32, elements: !2602)
!2602 = !{!2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611}
!2603 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2604 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2605 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2606 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2607 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2608 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2609 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2610 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2611 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2612 = !{!103, !2593, !2601, !2613, !404, !164, !2615, !2616, !155, !329, !144, !344, !102, !22, !32, !2618, !2619, !2620, !1101, !2621, !421, !2622, !2614, !2623, !2624, !2625, !2626}
!2613 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2594, line: 31, baseType: !2614)
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !421)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !345, line: 329, baseType: !32)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2594, line: 32, baseType: !2617)
!2617 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1606)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !345, line: 145, baseType: !103)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 32)
!2627 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2628, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2628 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2629 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2630, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2631, splitDebugInlining: false, nameTableKind: None)
!2630 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2631 = !{!154, !102, !103, !2632, !1708, !121, !1605}
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2634)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !2635)
!2635 = !{!2636, !2655, !2659, !2663, !2676, !2681, !2685, !2689, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2634, file: !203, line: 365, baseType: !2637, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 32)
!2638 = !DISubroutineType(types: !2639)
!2639 = !{!103, !2640, !224}
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2642)
!2642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !2643)
!2643 = !{!2644, !2645, !2646, !2647, !2653, !2654}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2642, file: !141, line: 380, baseType: !144, size: 32)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2642, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2642, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2642, file: !141, line: 386, baseType: !2648, size: 32, offset: 96)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 32)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !2650)
!2650 = !{!2651, !2652}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2649, file: !141, line: 359, baseType: !154, size: 8)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2649, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2642, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2642, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2634, file: !203, line: 366, baseType: !2656, size: 32, offset: 32)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 32)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{null, !2640, !155}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2634, file: !203, line: 374, baseType: !2660, size: 32, offset: 64)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 32)
!2661 = !DISubroutineType(types: !2662)
!2662 = !{!103, !2640}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2634, file: !203, line: 377, baseType: !2664, size: 32, offset: 96)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 32)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{!103, !2640, !2667}
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2669)
!2669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !2670)
!2670 = !{!2671, !2672, !2673, !2674, !2675}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2669, file: !203, line: 123, baseType: !121, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2669, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2669, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2669, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2669, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2634, file: !203, line: 379, baseType: !2677, size: 32, offset: 128)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 32)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{!103, !2640, !2680}
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !2634, file: !203, line: 384, baseType: !2682, size: 32, offset: 160)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 32)
!2683 = !DISubroutineType(types: !2684)
!2684 = !{!103, !2640, !255, !103}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !2634, file: !203, line: 393, baseType: !2686, size: 32, offset: 192)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 32)
!2687 = !DISubroutineType(types: !2688)
!2688 = !{!103, !2640, !261, !262}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !2634, file: !203, line: 402, baseType: !2690, size: 32, offset: 224)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 32)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{null, !2640}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !2634, file: !203, line: 405, baseType: !2690, size: 32, offset: 256)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !2634, file: !203, line: 408, baseType: !2660, size: 32, offset: 288)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !2634, file: !203, line: 411, baseType: !2690, size: 32, offset: 320)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !2634, file: !203, line: 414, baseType: !2690, size: 32, offset: 352)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !2634, file: !203, line: 417, baseType: !2660, size: 32, offset: 384)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !2634, file: !203, line: 420, baseType: !2660, size: 32, offset: 416)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !2634, file: !203, line: 423, baseType: !2690, size: 32, offset: 448)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !2634, file: !203, line: 426, baseType: !2690, size: 32, offset: 480)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !2634, file: !203, line: 429, baseType: !2660, size: 32, offset: 512)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !2634, file: !203, line: 432, baseType: !2660, size: 32, offset: 544)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !2634, file: !203, line: 435, baseType: !2704, size: 32, offset: 576)
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 32)
!2705 = !DISubroutineType(types: !2706)
!2706 = !{null, !2640, !2707, !102}
!2707 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !2708)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 32)
!2709 = !DISubroutineType(types: !2710)
!2710 = !{null, !2640, !102}
!2711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2713, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2713 = !{!2714, !30}
!2714 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2715, line: 27, baseType: !32, size: 32, elements: !2716)
!2715 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2716 = !{!2717, !2718, !2719, !2720, !2721}
!2717 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2718 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2719 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2720 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2721 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2724, retainedTypes: !2725, splitDebugInlining: false, nameTableKind: None)
!2723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2724 = !{!564, !2714, !30}
!2725 = !{!751, !2726, !102, !103, !332, !121, !154, !2743}
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !2728)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2728, file: !495, line: 413, baseType: !1723, size: 256)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2728, file: !495, line: 414, baseType: !1725, size: 768, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2728, file: !495, line: 415, baseType: !1723, size: 256, offset: 1024)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2728, file: !495, line: 416, baseType: !1725, size: 768, offset: 1280)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2728, file: !495, line: 417, baseType: !1723, size: 256, offset: 2048)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2728, file: !495, line: 418, baseType: !1725, size: 768, offset: 2304)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2728, file: !495, line: 419, baseType: !1723, size: 256, offset: 3072)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2728, file: !495, line: 420, baseType: !1725, size: 768, offset: 3328)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2728, file: !495, line: 421, baseType: !1723, size: 256, offset: 4096)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2728, file: !495, line: 422, baseType: !1736, size: 1792, offset: 4352)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2728, file: !495, line: 423, baseType: !1740, size: 1920, offset: 6144)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2728, file: !495, line: 424, baseType: !1745, size: 20608, offset: 8064)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2728, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2745)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2746)
!2746 = !{!2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2745, file: !495, line: 447, baseType: !499, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2745, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2745, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2745, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2745, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2745, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2745, file: !495, line: 453, baseType: !1760, size: 96, offset: 192)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2745, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2745, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2745, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2745, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2745, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2745, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2745, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2745, file: !495, line: 461, baseType: !1771, size: 64, offset: 512)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2745, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2745, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2745, file: !495, line: 464, baseType: !1775, size: 128, offset: 640)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2745, file: !495, line: 465, baseType: !1777, size: 160, offset: 768)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2745, file: !495, line: 466, baseType: !1779, size: 160, offset: 928)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2745, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2769, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2769 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2770 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2771, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2772, splitDebugInlining: false, nameTableKind: None)
!2771 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2772 = !{!102, !103, !22, !2773}
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2775)
!2775 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2776)
!2776 = !{!2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2775, file: !495, line: 447, baseType: !499, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2775, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2775, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2775, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2775, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2775, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2775, file: !495, line: 453, baseType: !1760, size: 96, offset: 192)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2775, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2775, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2775, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2775, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2775, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2775, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2775, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2775, file: !495, line: 461, baseType: !1771, size: 64, offset: 512)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2775, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2775, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2775, file: !495, line: 464, baseType: !1775, size: 128, offset: 640)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2775, file: !495, line: 465, baseType: !1777, size: 160, offset: 768)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2775, file: !495, line: 466, baseType: !1779, size: 160, offset: 928)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2775, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2798 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2799, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2800, splitDebugInlining: false, nameTableKind: None)
!2799 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2800 = !{!2801, !102, !103}
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2803)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2804)
!2804 = !{!2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2803, file: !495, line: 447, baseType: !499, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2803, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2803, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2803, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2803, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2803, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2803, file: !495, line: 453, baseType: !1760, size: 96, offset: 192)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2803, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2803, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2803, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2803, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2803, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2803, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2803, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2803, file: !495, line: 461, baseType: !1771, size: 64, offset: 512)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2803, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2803, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2803, file: !495, line: 464, baseType: !1775, size: 128, offset: 640)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2803, file: !495, line: 465, baseType: !1777, size: 160, offset: 768)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2803, file: !495, line: 466, baseType: !1779, size: 160, offset: 928)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2803, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2826 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2827, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2828, splitDebugInlining: false, nameTableKind: None)
!2827 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2828 = !{!2829, !121, !102, !103}
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 32)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2831, line: 98, size: 256, elements: !2832)
!2831 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2832 = !{!2833, !2838, !2843, !2848, !2853, !2858, !2863, !2868}
!2833 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2831, line: 99, baseType: !2834, size: 32)
!2834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2831, line: 99, size: 32, elements: !2835)
!2835 = !{!2836, !2837}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2834, file: !2831, line: 99, baseType: !121, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2834, file: !2831, line: 99, baseType: !121, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2831, line: 100, baseType: !2839, size: 32, offset: 32)
!2839 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2831, line: 100, size: 32, elements: !2840)
!2840 = !{!2841, !2842}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2839, file: !2831, line: 100, baseType: !121, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2839, file: !2831, line: 100, baseType: !121, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2831, line: 101, baseType: !2844, size: 32, offset: 64)
!2844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2831, line: 101, size: 32, elements: !2845)
!2845 = !{!2846, !2847}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2844, file: !2831, line: 101, baseType: !121, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2844, file: !2831, line: 101, baseType: !121, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2831, line: 102, baseType: !2849, size: 32, offset: 96)
!2849 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2831, line: 102, size: 32, elements: !2850)
!2850 = !{!2851, !2852}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2849, file: !2831, line: 102, baseType: !121, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2849, file: !2831, line: 102, baseType: !121, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2831, line: 103, baseType: !2854, size: 32, offset: 128)
!2854 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2831, line: 103, size: 32, elements: !2855)
!2855 = !{!2856, !2857}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2854, file: !2831, line: 103, baseType: !121, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2854, file: !2831, line: 103, baseType: !121, size: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2831, line: 104, baseType: !2859, size: 32, offset: 160)
!2859 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2831, line: 104, size: 32, elements: !2860)
!2860 = !{!2861, !2862}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2859, file: !2831, line: 104, baseType: !121, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2859, file: !2831, line: 104, baseType: !121, size: 32)
!2863 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2831, line: 105, baseType: !2864, size: 32, offset: 192)
!2864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2831, line: 105, size: 32, elements: !2865)
!2865 = !{!2866, !2867}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2864, file: !2831, line: 105, baseType: !121, size: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2864, file: !2831, line: 105, baseType: !121, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2830, file: !2831, line: 106, baseType: !121, size: 32, offset: 224)
!2869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2870, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2713, retainedTypes: !2871, splitDebugInlining: false, nameTableKind: None)
!2870 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2871 = !{!2872, !102, !103, !2897, !2589, !121}
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2874)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2875)
!2875 = !{!2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2874, file: !495, line: 447, baseType: !499, size: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2874, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2874, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2874, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2874, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2874, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2874, file: !495, line: 453, baseType: !1760, size: 96, offset: 192)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2874, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2874, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2874, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2874, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2874, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2874, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2874, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2874, file: !495, line: 461, baseType: !1771, size: 64, offset: 512)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2874, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2874, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2874, file: !495, line: 464, baseType: !1775, size: 128, offset: 640)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2874, file: !495, line: 465, baseType: !1777, size: 160, offset: 768)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2874, file: !495, line: 466, baseType: !1779, size: 160, offset: 928)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2874, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2831, line: 141, baseType: !2899)
!2899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2831, line: 97, size: 256, elements: !2900)
!2900 = !{!2901}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2899, file: !2831, line: 107, baseType: !2902, size: 256)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2831, line: 98, size: 256, elements: !2903)
!2903 = !{!2904, !2909, !2914, !2919, !2924, !2929, !2934, !2939}
!2904 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2831, line: 99, baseType: !2905, size: 32)
!2905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2831, line: 99, size: 32, elements: !2906)
!2906 = !{!2907, !2908}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2905, file: !2831, line: 99, baseType: !121, size: 32)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2905, file: !2831, line: 99, baseType: !121, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2831, line: 100, baseType: !2910, size: 32, offset: 32)
!2910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2831, line: 100, size: 32, elements: !2911)
!2911 = !{!2912, !2913}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2910, file: !2831, line: 100, baseType: !121, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2910, file: !2831, line: 100, baseType: !121, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2831, line: 101, baseType: !2915, size: 32, offset: 64)
!2915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2831, line: 101, size: 32, elements: !2916)
!2916 = !{!2917, !2918}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2915, file: !2831, line: 101, baseType: !121, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2915, file: !2831, line: 101, baseType: !121, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2831, line: 102, baseType: !2920, size: 32, offset: 96)
!2920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2831, line: 102, size: 32, elements: !2921)
!2921 = !{!2922, !2923}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2920, file: !2831, line: 102, baseType: !121, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2920, file: !2831, line: 102, baseType: !121, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2831, line: 103, baseType: !2925, size: 32, offset: 128)
!2925 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2831, line: 103, size: 32, elements: !2926)
!2926 = !{!2927, !2928}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2925, file: !2831, line: 103, baseType: !121, size: 32)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2925, file: !2831, line: 103, baseType: !121, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2831, line: 104, baseType: !2930, size: 32, offset: 160)
!2930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2831, line: 104, size: 32, elements: !2931)
!2931 = !{!2932, !2933}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2930, file: !2831, line: 104, baseType: !121, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2930, file: !2831, line: 104, baseType: !121, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2831, line: 105, baseType: !2935, size: 32, offset: 192)
!2935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2831, line: 105, size: 32, elements: !2936)
!2936 = !{!2937, !2938}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2935, file: !2831, line: 105, baseType: !121, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2935, file: !2831, line: 105, baseType: !121, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2902, file: !2831, line: 106, baseType: !121, size: 32, offset: 224)
!2940 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2941, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1706, retainedTypes: !2942, splitDebugInlining: false, nameTableKind: None)
!2941 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2942 = !{!751, !332, !154, !121, !2943, !2960}
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !2945)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !2946)
!2946 = !{!2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2945, file: !495, line: 413, baseType: !1723, size: 256)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2945, file: !495, line: 414, baseType: !1725, size: 768, offset: 256)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2945, file: !495, line: 415, baseType: !1723, size: 256, offset: 1024)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2945, file: !495, line: 416, baseType: !1725, size: 768, offset: 1280)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2945, file: !495, line: 417, baseType: !1723, size: 256, offset: 2048)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2945, file: !495, line: 418, baseType: !1725, size: 768, offset: 2304)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2945, file: !495, line: 419, baseType: !1723, size: 256, offset: 3072)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2945, file: !495, line: 420, baseType: !1725, size: 768, offset: 3328)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2945, file: !495, line: 421, baseType: !1723, size: 256, offset: 4096)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2945, file: !495, line: 422, baseType: !1736, size: 1792, offset: 4352)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2945, file: !495, line: 423, baseType: !1740, size: 1920, offset: 6144)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2945, file: !495, line: 424, baseType: !1745, size: 20608, offset: 8064)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2945, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 32)
!2961 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2962)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2963)
!2963 = !{!2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2962, file: !495, line: 447, baseType: !499, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2962, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2962, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2962, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2962, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2962, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2962, file: !495, line: 453, baseType: !1760, size: 96, offset: 192)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2962, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2962, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2962, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2962, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2962, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2962, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2962, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2962, file: !495, line: 461, baseType: !1771, size: 64, offset: 512)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2962, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2962, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2962, file: !495, line: 464, baseType: !1775, size: 128, offset: 640)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2962, file: !495, line: 465, baseType: !1777, size: 160, offset: 768)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2962, file: !495, line: 466, baseType: !1779, size: 160, offset: 928)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2962, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2985 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2986, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2987, splitDebugInlining: false, nameTableKind: None)
!2986 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!2987 = !{!2988, !102, !103}
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2990)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2991)
!2991 = !{!2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2990, file: !495, line: 447, baseType: !499, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2990, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2990, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2990, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2990, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2990, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2990, file: !495, line: 453, baseType: !1760, size: 96, offset: 192)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2990, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2990, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2990, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2990, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2990, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2990, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2990, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2990, file: !495, line: 461, baseType: !1771, size: 64, offset: 512)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2990, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2990, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2990, file: !495, line: 464, baseType: !1775, size: 128, offset: 640)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2990, file: !495, line: 465, baseType: !1777, size: 160, offset: 768)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2990, file: !495, line: 466, baseType: !1779, size: 160, offset: 928)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2990, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!3013 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3014, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3015, splitDebugInlining: false, nameTableKind: None)
!3014 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!3015 = !{!146, !1071, !344, !224, !3016, !155, !102}
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!3018 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3019, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3020, splitDebugInlining: false, nameTableKind: None)
!3019 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!3020 = !{!3021}
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 32)
!3022 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !3023)
!3023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !3024)
!3024 = !{!3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3023, file: !116, line: 502, baseType: !120, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3023, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3023, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3023, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3023, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3023, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3023, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3023, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3023, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3023, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3023, file: !116, line: 512, baseType: !819, size: 64, offset: 320)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3023, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3023, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3023, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3023, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3023, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3023, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3023, file: !116, line: 519, baseType: !819, size: 64, offset: 576)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3023, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3023, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3023, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3023, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3023, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3023, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3023, file: !116, line: 526, baseType: !819, size: 64, offset: 832)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3023, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3023, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3023, file: !116, line: 529, baseType: !819, size: 64, offset: 960)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3023, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3023, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!3055 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3056, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3056 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!3057 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3058, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3059, retainedTypes: !3075, splitDebugInlining: false, nameTableKind: None)
!3058 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!3059 = !{!3060, !3067, !3071}
!3060 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3061, line: 38, baseType: !32, size: 32, elements: !3062)
!3061 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3062 = !{!3063, !3064, !3065, !3066}
!3063 = !DIEnumerator(name: "HAL_OK", value: 0)
!3064 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3065 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3066 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3067 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !792, line: 184, baseType: !32, size: 32, elements: !3068)
!3068 = !{!3069, !3070}
!3069 = !DIEnumerator(name: "RESET", value: 0)
!3070 = !DIEnumerator(name: "SET", value: 1)
!3071 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !792, line: 190, baseType: !32, size: 32, elements: !3072)
!3072 = !{!3073, !3074}
!3073 = !DIEnumerator(name: "DISABLE", value: 0)
!3074 = !DIEnumerator(name: "ENABLE", value: 1)
!3075 = !{!102, !3076, !154, !121, !1607, !3110, !3116, !3127, !328, !3128, !1605}
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 32)
!3077 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !3078)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !3079)
!3079 = !{!3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3078, file: !116, line: 502, baseType: !120, size: 32)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3078, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3078, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3078, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3078, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3078, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3078, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3078, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3078, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3078, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3078, file: !116, line: 512, baseType: !819, size: 64, offset: 320)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3078, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3078, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3078, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3078, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3078, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3078, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3078, file: !116, line: 519, baseType: !819, size: 64, offset: 576)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3078, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3078, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3078, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3078, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3078, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3078, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3078, file: !116, line: 526, baseType: !819, size: 64, offset: 832)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3078, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3078, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3078, file: !116, line: 529, baseType: !819, size: 64, offset: 960)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3078, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3078, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 32)
!3111 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 494, baseType: !3112)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 490, size: 64, elements: !3113)
!3113 = !{!3114, !3115}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3112, file: !116, line: 492, baseType: !120, size: 32)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3112, file: !116, line: 493, baseType: !120, size: 32, offset: 32)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 369, baseType: !3118)
!3118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 224, elements: !3119)
!3119 = !{!3120, !3121, !3122, !3123, !3124, !3125, !3126}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3118, file: !116, line: 362, baseType: !120, size: 32)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3118, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3118, file: !116, line: 364, baseType: !120, size: 32, offset: 64)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3118, file: !116, line: 365, baseType: !120, size: 32, offset: 96)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3118, file: !116, line: 366, baseType: !120, size: 32, offset: 128)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3118, file: !116, line: 367, baseType: !120, size: 32, offset: 160)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3118, file: !116, line: 368, baseType: !120, size: 32, offset: 192)
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 32)
!3129 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 441, baseType: !3130)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 430, size: 320, elements: !3131)
!3131 = !{!3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3130, file: !116, line: 432, baseType: !120, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3130, file: !116, line: 433, baseType: !120, size: 32, offset: 32)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3130, file: !116, line: 434, baseType: !120, size: 32, offset: 64)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3130, file: !116, line: 435, baseType: !120, size: 32, offset: 96)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3130, file: !116, line: 436, baseType: !120, size: 32, offset: 128)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3130, file: !116, line: 437, baseType: !120, size: 32, offset: 160)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3130, file: !116, line: 438, baseType: !120, size: 32, offset: 192)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3130, file: !116, line: 439, baseType: !120, size: 32, offset: 224)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3130, file: !116, line: 440, baseType: !1240, size: 64, offset: 256)
!3141 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3142, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3143, retainedTypes: !3144, splitDebugInlining: false, nameTableKind: None)
!3142 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!3143 = !{!791}
!3144 = !{!3145, !121, !3153, !3159, !3170}
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 32)
!3146 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !495, line: 770, baseType: !3147)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 764, size: 128, elements: !3148)
!3148 = !{!3149, !3150, !3151, !3152}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3147, file: !495, line: 766, baseType: !120, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3147, file: !495, line: 767, baseType: !120, size: 32, offset: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3147, file: !495, line: 768, baseType: !120, size: 32, offset: 64)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3147, file: !495, line: 769, baseType: !499, size: 32, offset: 96)
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 32)
!3154 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 494, baseType: !3155)
!3155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 490, size: 64, elements: !3156)
!3156 = !{!3157, !3158}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3155, file: !116, line: 492, baseType: !120, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3155, file: !116, line: 493, baseType: !120, size: 32, offset: 32)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 32)
!3160 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 369, baseType: !3161)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 224, elements: !3162)
!3162 = !{!3163, !3164, !3165, !3166, !3167, !3168, !3169}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3161, file: !116, line: 362, baseType: !120, size: 32)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3161, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3161, file: !116, line: 364, baseType: !120, size: 32, offset: 64)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3161, file: !116, line: 365, baseType: !120, size: 32, offset: 96)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3161, file: !116, line: 366, baseType: !120, size: 32, offset: 128)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3161, file: !116, line: 367, baseType: !120, size: 32, offset: 160)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3161, file: !116, line: 368, baseType: !120, size: 32, offset: 192)
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 32)
!3171 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !3172)
!3172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !3173)
!3173 = !{!3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3172, file: !116, line: 502, baseType: !120, size: 32)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3172, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3172, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3172, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3172, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3172, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3172, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3172, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3172, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3172, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3172, file: !116, line: 512, baseType: !819, size: 64, offset: 320)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3172, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3172, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3172, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3172, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3172, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3172, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3172, file: !116, line: 519, baseType: !819, size: 64, offset: 576)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3172, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3172, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3172, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3172, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3172, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3172, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3172, file: !116, line: 526, baseType: !819, size: 64, offset: 832)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3172, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3172, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3172, file: !116, line: 529, baseType: !819, size: 64, offset: 960)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3172, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3172, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!3204 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3205, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3206, splitDebugInlining: false, nameTableKind: None)
!3205 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!3206 = !{!102, !344}
!3207 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3208, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3209, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3208 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!3209 = !{!3210, !3217, !30}
!3210 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3211, line: 14, baseType: !32, size: 32, elements: !3212)
!3211 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3212 = !{!3213, !3214, !3215, !3216}
!3213 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3214 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3215 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3216 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3217 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3211, line: 42, baseType: !32, size: 32, elements: !3218)
!3218 = !{!3219, !3220, !3221, !3222, !3223, !3224}
!3219 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3220 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3221 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3222 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3223 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3224 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3225 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3226, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3226 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!3227 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3228, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3229, splitDebugInlining: false, nameTableKind: None)
!3228 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!3229 = !{!22, !102, !103}
!3230 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3231, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3231 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!3232 = !{!"Ubuntu clang version 14.0.6"}
!3233 = !{i32 7, !"Dwarf Version", i32 4}
!3234 = !{i32 2, !"Debug Info Version", i32 3}
!3235 = !{i32 1, !"wchar_size", i32 4}
!3236 = !{i32 1, !"min_enum_size", i32 4}
!3237 = !{i32 1, !"branch-target-enforcement", i32 0}
!3238 = !{i32 1, !"sign-return-address", i32 0}
!3239 = !{i32 1, !"sign-return-address-all", i32 0}
!3240 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3241 = !{i32 7, !"frame-pointer", i32 2}
!3242 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3243, file: !3243, line: 26, type: !3244, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !461)
!3243 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3244 = !DISubroutineType(types: !3245)
!3245 = !{null}
!3246 = !DILocation(line: 28, column: 1, scope: !3242)
!3247 = !{i64 2155117751, i64 2155117771, i64 2155117834}
!3248 = !DILocation(line: 29, column: 1, scope: !3242)
!3249 = !{i64 2155118166, i64 2155118186, i64 2155118249}
!3250 = !DILocation(line: 30, column: 1, scope: !3242)
!3251 = !{i64 2155118585, i64 2155118605, i64 2155118668}
!3252 = !DILocation(line: 31, column: 1, scope: !3242)
!3253 = !{i64 2155119004, i64 2155119024, i64 2155119087}
!3254 = !DILocation(line: 33, column: 1, scope: !3242)
!3255 = !{i64 2155119296, i64 2155119316, i64 2155119379}
!3256 = !DILocation(line: 35, column: 1, scope: !3242)
!3257 = !{i64 2155119621, i64 2155119641, i64 2155119704}
!3258 = !DILocation(line: 50, column: 1, scope: !3242)
!3259 = !{i64 2155120048, i64 2155120068, i64 2155120131}
!3260 = !DILocation(line: 54, column: 1, scope: !3242)
!3261 = !{i64 2155120487, i64 2155120507, i64 2155120570}
!3262 = !DILocation(line: 61, column: 1, scope: !3242)
!3263 = !{i64 2155120804, i64 2155120824, i64 2155120887}
!3264 = !DILocation(line: 63, column: 1, scope: !3242)
!3265 = !{i64 2155121184, i64 2155121204, i64 2155121267}
!3266 = !DILocation(line: 64, column: 1, scope: !3242)
!3267 = !{i64 2155121706, i64 2155121726, i64 2155121789}
!3268 = !DILocation(line: 65, column: 1, scope: !3242)
!3269 = !{i64 2155122204, i64 2155122224, i64 2155122287}
!3270 = !DILocation(line: 66, column: 1, scope: !3242)
!3271 = !{i64 2155122686, i64 2155122706, i64 2155122769}
!3272 = !DILocation(line: 67, column: 1, scope: !3242)
!3273 = !{i64 2155123193, i64 2155123213, i64 2155123276}
!3274 = !DILocation(line: 68, column: 1, scope: !3242)
!3275 = !{i64 2155123681, i64 2155123701, i64 2155123764}
!3276 = !DILocation(line: 70, column: 1, scope: !3242)
!3277 = !{i64 2155124149, i64 2155124169, i64 2155124232}
!3278 = !DILocation(line: 71, column: 1, scope: !3242)
!3279 = !{i64 2155124591, i64 2155124611, i64 2155124674}
!3280 = !DILocation(line: 72, column: 1, scope: !3242)
!3281 = !{i64 2155125049, i64 2155125069, i64 2155125132}
!3282 = !DILocation(line: 79, column: 1, scope: !3242)
!3283 = !{i64 2155125503, i64 2155125523, i64 2155125586}
!3284 = !DILocation(line: 80, column: 1, scope: !3242)
!3285 = !{i64 2155126014, i64 2155126034, i64 2155126097}
!3286 = !DILocation(line: 82, column: 1, scope: !3242)
!3287 = !{i64 2155130566, i64 2155130586, i64 2155130649}
!3288 = !DILocation(line: 97, column: 1, scope: !3242)
!3289 = !{i64 2155130903, i64 2155130923, i64 2155130986}
!3290 = !DILocation(line: 99, column: 1, scope: !3242)
!3291 = !{i64 2155131121, i64 2155131141, i64 2155131204}
!3292 = !DILocation(line: 102, column: 1, scope: !3242)
!3293 = !{i64 2155131378, i64 2155131398, i64 2155131461}
!3294 = !DILocation(line: 105, column: 1, scope: !3242)
!3295 = !{i64 2155131618, i64 2155131638, i64 2155131701}
!3296 = !DILocation(line: 115, column: 1, scope: !3242)
!3297 = !{i64 2155131957, i64 2155131977, i64 2155132040}
!3298 = !DILocation(line: 118, column: 1, scope: !3242)
!3299 = !{i64 2155132301, i64 2155132321, i64 2155132384}
!3300 = !DILocation(line: 32, column: 1, scope: !3301)
!3301 = !DILexicalBlockFile(scope: !3242, file: !3302, discriminator: 0)
!3302 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3303 = !{i64 2155132657, i64 2155132677, i64 2155132740}
!3304 = !DILocation(line: 33, column: 1, scope: !3301)
!3305 = !{i64 2155133169, i64 2155133189, i64 2155133252}
!3306 = !DILocation(line: 53, column: 1, scope: !3301)
!3307 = !{i64 2155133677, i64 2155133697, i64 2155133760}
!3308 = !DILocation(line: 54, column: 1, scope: !3301)
!3309 = !{i64 2155134095, i64 2155134115, i64 2155134178}
!3310 = !DILocation(line: 55, column: 1, scope: !3301)
!3311 = !{i64 2155134513, i64 2155134533, i64 2155134596}
!3312 = !DILocation(line: 56, column: 1, scope: !3301)
!3313 = !{i64 2155134931, i64 2155134951, i64 2155135014}
!3314 = !DILocation(line: 57, column: 1, scope: !3301)
!3315 = !{i64 2155135349, i64 2155135369, i64 2155135432}
!3316 = !DILocation(line: 58, column: 1, scope: !3301)
!3317 = !{i64 2155135767, i64 2155135787, i64 2155135850}
!3318 = !DILocation(line: 59, column: 1, scope: !3301)
!3319 = !{i64 2155136185, i64 2155136205, i64 2155136268}
!3320 = !DILocation(line: 60, column: 1, scope: !3301)
!3321 = !{i64 2155136609, i64 2155136629, i64 2155136692}
!3322 = !DILocation(line: 61, column: 1, scope: !3301)
!3323 = !{i64 2155136926, i64 2155136946, i64 2155137009}
!3324 = !DILocation(line: 70, column: 1, scope: !3301)
!3325 = !{i64 2155137155, i64 2155137175, i64 2155137238}
!3326 = !DILocation(line: 72, column: 1, scope: !3301)
!3327 = !{i64 2155137487, i64 2155137507, i64 2155137570}
!3328 = !DILocation(line: 73, column: 1, scope: !3301)
!3329 = !{i64 2155137937, i64 2155137957, i64 2155138020}
!3330 = !DILocation(line: 74, column: 1, scope: !3301)
!3331 = !{i64 2155138387, i64 2155138407, i64 2155138470}
!3332 = !DILocation(line: 75, column: 1, scope: !3301)
!3333 = !{i64 2155138837, i64 2155138857, i64 2155138920}
!3334 = !DILocation(line: 76, column: 1, scope: !3301)
!3335 = !{i64 2155139287, i64 2155139307, i64 2155139370}
!3336 = !DILocation(line: 77, column: 1, scope: !3301)
!3337 = !{i64 2155139737, i64 2155139757, i64 2155139820}
!3338 = !DILocation(line: 78, column: 1, scope: !3301)
!3339 = !{i64 2155144248, i64 2155144268, i64 2155144331}
!3340 = !DILocation(line: 79, column: 1, scope: !3301)
!3341 = !{i64 2155144698, i64 2155144718, i64 2155144781}
!3342 = !DILocation(line: 80, column: 1, scope: !3301)
!3343 = !{i64 2155145151, i64 2155145171, i64 2155145234}
!3344 = !DILocation(line: 84, column: 1, scope: !3301)
!3345 = !{i64 2155145483, i64 2155145503, i64 2155145566}
!3346 = !DILocation(line: 91, column: 1, scope: !3301)
!3347 = !{i64 2155145880, i64 2155145900, i64 2155145963}
!3348 = !DILocation(line: 93, column: 1, scope: !3301)
!3349 = !{i64 2155146247, i64 2155146267, i64 2155146330}
!3350 = !DILocation(line: 106, column: 1, scope: !3301)
!3351 = !{i64 2155146517, i64 2155146537, i64 2155146600}
!3352 = !DILocation(line: 11, column: 1, scope: !3353)
!3353 = !DILexicalBlockFile(scope: !3242, file: !3354, discriminator: 0)
!3354 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3355 = distinct !DISubprogram(name: "main", scope: !3356, file: !3356, line: 11, type: !3244, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !3357)
!3356 = !DIFile(filename: "zephyr/samples/subsys/console/getchar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3357 = !{!3358}
!3358 = !DILocalVariable(name: "c", scope: !3359, file: !3356, line: 18, type: !154)
!3359 = distinct !DILexicalBlock(scope: !3355, file: !3356, line: 17, column: 12)
!3360 = !DILocation(line: 13, column: 2, scope: !3355)
!3361 = !DILocation(line: 15, column: 2, scope: !3355)
!3362 = !DILocation(line: 17, column: 2, scope: !3355)
!3363 = !DILocation(line: 18, column: 15, scope: !3359)
!3364 = !DILocation(line: 20, column: 31, scope: !3359)
!3365 = !DILocation(line: 0, scope: !3359)
!3366 = !DILocation(line: 20, column: 3, scope: !3359)
!3367 = distinct !{!3367, !3362, !3368}
!3368 = !DILocation(line: 21, column: 2, scope: !3355)
!3369 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3370)
!3370 = !{!3371}
!3371 = !DILocalVariable(name: "c", arg: 1, scope: !3369, file: !105, line: 45, type: !103)
!3372 = !DILocation(line: 0, scope: !3369)
!3373 = !DILocation(line: 50, column: 2, scope: !3369)
!3374 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3375, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3377)
!3375 = !DISubroutineType(types: !3376)
!3376 = !{null, !106}
!3377 = !{!3378}
!3378 = !DILocalVariable(name: "fn", arg: 1, scope: !3374, file: !105, line: 63, type: !106)
!3379 = !DILocation(line: 0, scope: !3374)
!3380 = !DILocation(line: 65, column: 12, scope: !3374)
!3381 = !DILocation(line: 66, column: 1, scope: !3374)
!3382 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3383, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !461)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{!102}
!3385 = !DILocation(line: 78, column: 9, scope: !3382)
!3386 = !DILocation(line: 78, column: 2, scope: !3382)
!3387 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3388, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3397)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{null, !144, !3390}
!3390 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3391, line: 99, baseType: !3392)
!3391 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3392 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3391, line: 40, baseType: !3393)
!3393 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3394)
!3394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3395)
!3395 = !{!3396}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3394, file: !105, line: 79, baseType: !102, size: 32)
!3397 = !{!3398, !3399, !3400}
!3398 = !DILocalVariable(name: "fmt", arg: 1, scope: !3387, file: !105, line: 113, type: !144)
!3399 = !DILocalVariable(name: "ap", arg: 2, scope: !3387, file: !105, line: 113, type: !3390)
!3400 = !DILocalVariable(name: "ctx", scope: !3401, file: !105, line: 121, type: !3403)
!3401 = distinct !DILexicalBlock(scope: !3402, file: !105, line: 120, column: 27)
!3402 = distinct !DILexicalBlock(scope: !3387, file: !105, line: 120, column: 6)
!3403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3404)
!3404 = !{!3405, !3406}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3403, file: !105, line: 85, baseType: !32, size: 32)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3403, file: !105, line: 86, baseType: !3407, offset: 32)
!3407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2587)
!3408 = !DILocation(line: 0, scope: !3387)
!3409 = !DILocation(line: 148, column: 3, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3402, file: !105, line: 138, column: 9)
!3411 = !DILocation(line: 155, column: 1, scope: !3387)
!3412 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3413, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3415)
!3413 = !DISubroutineType(types: !3414)
!3414 = !{!103, !103, !102}
!3415 = !{!3416, !3417}
!3416 = !DILocalVariable(name: "c", arg: 1, scope: !3412, file: !105, line: 107, type: !103)
!3417 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3412, file: !105, line: 107, type: !102)
!3418 = !DILocation(line: 0, scope: !3412)
!3419 = !DILocation(line: 110, column: 9, scope: !3412)
!3420 = !DILocation(line: 110, column: 2, scope: !3412)
!3421 = distinct !DISubprogram(name: "cbvprintf", scope: !3422, file: !3422, line: 739, type: !3423, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3429)
!3422 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3423 = !DISubroutineType(types: !3424)
!3424 = !{!103, !3425, !102, !144, !3390}
!3425 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3422, line: 297, baseType: !3426)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 32)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!103, null}
!3429 = !{!3430, !3431, !3432, !3433}
!3430 = !DILocalVariable(name: "out", arg: 1, scope: !3421, file: !3422, line: 739, type: !3425)
!3431 = !DILocalVariable(name: "ctx", arg: 2, scope: !3421, file: !3422, line: 739, type: !102)
!3432 = !DILocalVariable(name: "format", arg: 3, scope: !3421, file: !3422, line: 739, type: !144)
!3433 = !DILocalVariable(name: "ap", arg: 4, scope: !3421, file: !3422, line: 739, type: !3390)
!3434 = !DILocation(line: 0, scope: !3421)
!3435 = !DILocation(line: 741, column: 9, scope: !3421)
!3436 = !DILocation(line: 741, column: 2, scope: !3421)
!3437 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3438, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3440)
!3438 = !DISubroutineType(types: !3439)
!3439 = !{null, !1071, !344}
!3440 = !{!3441, !3442, !3443}
!3441 = !DILocalVariable(name: "c", arg: 1, scope: !3437, file: !105, line: 157, type: !1071)
!3442 = !DILocalVariable(name: "n", arg: 2, scope: !3437, file: !105, line: 157, type: !344)
!3443 = !DILocalVariable(name: "i", scope: !3437, file: !105, line: 159, type: !344)
!3444 = !DILocation(line: 0, scope: !3437)
!3445 = !DILocation(line: 164, column: 16, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !105, line: 164, column: 2)
!3447 = distinct !DILexicalBlock(scope: !3437, file: !105, line: 164, column: 2)
!3448 = !DILocation(line: 164, column: 2, scope: !3447)
!3449 = !DILocation(line: 165, column: 3, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3446, file: !105, line: 164, column: 26)
!3451 = !DILocation(line: 165, column: 13, scope: !3450)
!3452 = !DILocation(line: 164, column: 22, scope: !3446)
!3453 = distinct !{!3453, !3448, !3454}
!3454 = !DILocation(line: 166, column: 2, scope: !3447)
!3455 = !DILocation(line: 171, column: 1, scope: !3437)
!3456 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3457, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3459)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{null, !144, null}
!3459 = !{!3460, !3461}
!3460 = !DILocalVariable(name: "fmt", arg: 1, scope: !3456, file: !105, line: 203, type: !144)
!3461 = !DILocalVariable(name: "ap", scope: !3456, file: !105, line: 205, type: !3390)
!3462 = !DILocation(line: 0, scope: !3456)
!3463 = !DILocation(line: 205, column: 2, scope: !3456)
!3464 = !DILocation(line: 205, column: 10, scope: !3456)
!3465 = !DILocation(line: 207, column: 2, scope: !3456)
!3466 = !DILocation(line: 209, column: 2, scope: !3456)
!3467 = !DILocation(line: 211, column: 2, scope: !3456)
!3468 = !DILocation(line: 212, column: 1, scope: !3456)
!3469 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3470, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3472)
!3470 = !DISubroutineType(types: !3471)
!3471 = !{!103, !1071, !344, !144, null}
!3472 = !{!3473, !3474, !3475, !3476, !3477}
!3473 = !DILocalVariable(name: "str", arg: 1, scope: !3469, file: !105, line: 239, type: !1071)
!3474 = !DILocalVariable(name: "size", arg: 2, scope: !3469, file: !105, line: 239, type: !344)
!3475 = !DILocalVariable(name: "fmt", arg: 3, scope: !3469, file: !105, line: 239, type: !144)
!3476 = !DILocalVariable(name: "ap", scope: !3469, file: !105, line: 241, type: !3390)
!3477 = !DILocalVariable(name: "ret", scope: !3469, file: !105, line: 242, type: !103)
!3478 = !DILocation(line: 0, scope: !3469)
!3479 = !DILocation(line: 241, column: 2, scope: !3469)
!3480 = !DILocation(line: 241, column: 10, scope: !3469)
!3481 = !DILocation(line: 244, column: 2, scope: !3469)
!3482 = !DILocation(line: 245, column: 8, scope: !3469)
!3483 = !DILocation(line: 246, column: 2, scope: !3469)
!3484 = !DILocation(line: 249, column: 1, scope: !3469)
!3485 = !DILocation(line: 248, column: 2, scope: !3469)
!3486 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3487, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3489)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{!103, !1071, !344, !144, !3390}
!3489 = !{!3490, !3491, !3492, !3493, !3494}
!3490 = !DILocalVariable(name: "str", arg: 1, scope: !3486, file: !105, line: 251, type: !1071)
!3491 = !DILocalVariable(name: "size", arg: 2, scope: !3486, file: !105, line: 251, type: !344)
!3492 = !DILocalVariable(name: "fmt", arg: 3, scope: !3486, file: !105, line: 251, type: !144)
!3493 = !DILocalVariable(name: "ap", arg: 4, scope: !3486, file: !105, line: 251, type: !3390)
!3494 = !DILocalVariable(name: "ctx", scope: !3486, file: !105, line: 253, type: !3495)
!3495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3496)
!3496 = !{!3497, !3498, !3499}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3495, file: !105, line: 218, baseType: !1071, size: 32)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3495, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3495, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3500 = !DILocation(line: 0, scope: !3486)
!3501 = !DILocation(line: 253, column: 2, scope: !3486)
!3502 = !DILocation(line: 253, column: 21, scope: !3486)
!3503 = !DILocation(line: 253, column: 27, scope: !3486)
!3504 = !DILocation(line: 255, column: 2, scope: !3486)
!3505 = !DILocation(line: 257, column: 10, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3486, file: !105, line: 257, column: 6)
!3507 = !DILocation(line: 257, column: 22, scope: !3506)
!3508 = !DILocation(line: 257, column: 16, scope: !3506)
!3509 = !DILocation(line: 257, column: 6, scope: !3486)
!3510 = !DILocation(line: 258, column: 3, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3506, file: !105, line: 257, column: 27)
!3512 = !DILocation(line: 258, column: 18, scope: !3511)
!3513 = !DILocation(line: 259, column: 2, scope: !3511)
!3514 = !DILocation(line: 262, column: 1, scope: !3486)
!3515 = !DILocation(line: 261, column: 2, scope: !3486)
!3516 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3517, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3520)
!3517 = !DISubroutineType(types: !3518)
!3518 = !{!103, !103, !3519}
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 32)
!3520 = !{!3521, !3522}
!3521 = !DILocalVariable(name: "c", arg: 1, scope: !3516, file: !105, line: 223, type: !103)
!3522 = !DILocalVariable(name: "ctx", arg: 2, scope: !3516, file: !105, line: 223, type: !3519)
!3523 = !DILocation(line: 0, scope: !3516)
!3524 = !DILocation(line: 225, column: 11, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3516, file: !105, line: 225, column: 6)
!3526 = !DILocation(line: 225, column: 15, scope: !3525)
!3527 = !DILocation(line: 0, scope: !3525)
!3528 = !DILocation(line: 225, column: 23, scope: !3525)
!3529 = !DILocation(line: 225, column: 45, scope: !3525)
!3530 = !DILocation(line: 225, column: 37, scope: !3525)
!3531 = !DILocation(line: 225, column: 6, scope: !3516)
!3532 = !DILocation(line: 226, column: 8, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3525, file: !105, line: 225, column: 50)
!3534 = !DILocation(line: 226, column: 13, scope: !3533)
!3535 = !DILocation(line: 227, column: 3, scope: !3533)
!3536 = !DILocation(line: 230, column: 29, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3516, file: !105, line: 230, column: 6)
!3538 = !DILocation(line: 230, column: 17, scope: !3537)
!3539 = !DILocation(line: 230, column: 6, scope: !3516)
!3540 = !DILocation(line: 231, column: 22, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3537, file: !105, line: 230, column: 34)
!3542 = !DILocation(line: 231, column: 3, scope: !3541)
!3543 = !DILocation(line: 231, column: 26, scope: !3541)
!3544 = !DILocation(line: 232, column: 2, scope: !3541)
!3545 = !DILocation(line: 233, column: 28, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3537, file: !105, line: 232, column: 9)
!3547 = !DILocation(line: 233, column: 22, scope: !3546)
!3548 = !DILocation(line: 233, column: 3, scope: !3546)
!3549 = !DILocation(line: 233, column: 26, scope: !3546)
!3550 = !DILocation(line: 237, column: 1, scope: !3516)
!3551 = distinct !DISubprogram(name: "z_thread_entry", scope: !3552, file: !3552, line: 30, type: !3553, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !3560)
!3552 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3553 = !DISubroutineType(types: !3554)
!3554 = !{null, !3555, !102, !102, !102}
!3555 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3556, line: 46, baseType: !3557)
!3556 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 32)
!3558 = !DISubroutineType(types: !3559)
!3559 = !{null, !102, !102, !102}
!3560 = !{!3561, !3562, !3563, !3564}
!3561 = !DILocalVariable(name: "entry", arg: 1, scope: !3551, file: !3552, line: 30, type: !3555)
!3562 = !DILocalVariable(name: "p1", arg: 2, scope: !3551, file: !3552, line: 31, type: !102)
!3563 = !DILocalVariable(name: "p2", arg: 3, scope: !3551, file: !3552, line: 31, type: !102)
!3564 = !DILocalVariable(name: "p3", arg: 4, scope: !3551, file: !3552, line: 31, type: !102)
!3565 = !DILocation(line: 0, scope: !3551)
!3566 = !DILocation(line: 36, column: 2, scope: !3551)
!3567 = !DILocation(line: 38, column: 17, scope: !3551)
!3568 = !DILocation(line: 38, column: 2, scope: !3551)
!3569 = !DILocation(line: 45, column: 2, scope: !3551)
!3570 = distinct !DISubprogram(name: "k_current_get", scope: !300, file: !300, line: 530, type: !3571, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !461)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{!3573}
!3573 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !3574)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 32)
!3575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !3576)
!3576 = !{!3577, !3635, !3647, !3648, !3649, !3650, !3656, !3669}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3575, file: !355, line: 247, baseType: !3578, size: 384)
!3578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !3579)
!3579 = !{!3580, !3604, !3611, !3612, !3613, !3622, !3623, !3624}
!3580 = !DIDerivedType(tag: DW_TAG_member, scope: !3578, file: !355, line: 60, baseType: !3581, size: 64)
!3581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3578, file: !355, line: 60, size: 64, elements: !3582)
!3582 = !{!3583, !3598}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3581, file: !355, line: 61, baseType: !3584, size: 64)
!3584 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !3585)
!3585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !3586)
!3586 = !{!3587, !3593}
!3587 = !DIDerivedType(tag: DW_TAG_member, scope: !3585, file: !309, line: 38, baseType: !3588, size: 32)
!3588 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3585, file: !309, line: 38, size: 32, elements: !3589)
!3589 = !{!3590, !3592}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3588, file: !309, line: 39, baseType: !3591, size: 32)
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 32)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3588, file: !309, line: 40, baseType: !3591, size: 32)
!3593 = !DIDerivedType(tag: DW_TAG_member, scope: !3585, file: !309, line: 42, baseType: !3594, size: 32, offset: 32)
!3594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3585, file: !309, line: 42, size: 32, elements: !3595)
!3595 = !{!3596, !3597}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3594, file: !309, line: 43, baseType: !3591, size: 32)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3594, file: !309, line: 44, baseType: !3591, size: 32)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3581, file: !355, line: 62, baseType: !3599, size: 64)
!3599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !3600)
!3600 = !{!3601}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3599, file: !380, line: 50, baseType: !3602, size: 64)
!3602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3603, size: 64, elements: !385)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 32)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3578, file: !355, line: 68, baseType: !3605, size: 32, offset: 64)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 32)
!3606 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !3607)
!3607 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !3608)
!3608 = !{!3609}
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3607, file: !304, line: 232, baseType: !3610, size: 64)
!3610 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !3585)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3578, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3578, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!3613 = !DIDerivedType(tag: DW_TAG_member, scope: !3578, file: !355, line: 90, baseType: !3614, size: 16, offset: 112)
!3614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3578, file: !355, line: 90, size: 16, elements: !3615)
!3615 = !{!3616, !3621}
!3616 = !DIDerivedType(tag: DW_TAG_member, scope: !3614, file: !355, line: 91, baseType: !3617, size: 16)
!3617 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3614, file: !355, line: 91, size: 16, elements: !3618)
!3618 = !{!3619, !3620}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3617, file: !355, line: 96, baseType: !403, size: 8)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3617, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3614, file: !355, line: 100, baseType: !328, size: 16)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3578, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3578, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3578, file: !355, line: 131, baseType: !3625, size: 192, offset: 192)
!3625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !3626)
!3626 = !{!3627, !3628, !3634}
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3625, file: !304, line: 245, baseType: !3584, size: 64)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3625, file: !304, line: 246, baseType: !3629, size: 32, offset: 64)
!3629 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !3630)
!3630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3631, size: 32)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{null, !3633}
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 32)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3625, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3575, file: !355, line: 250, baseType: !3636, size: 288, offset: 384)
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !3637)
!3637 = !{!3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3636, file: !424, line: 26, baseType: !121, size: 32)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3636, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3636, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3636, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3636, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3636, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3636, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3636, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3636, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3575, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3575, file: !355, line: 256, baseType: !3606, size: 64, offset: 704)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3575, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3575, file: !355, line: 300, baseType: !3651, size: 96, offset: 800)
!3651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !3652)
!3652 = !{!3653, !3654, !3655}
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3651, file: !355, line: 153, baseType: !22, size: 32)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3651, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3651, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3575, file: !355, line: 325, baseType: !3657, size: 32, offset: 896)
!3657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3658, size: 32)
!3658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !3659)
!3659 = !{!3660, !3666, !3667}
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3658, file: !300, line: 5074, baseType: !3661, size: 96)
!3661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !3662)
!3662 = !{!3663, !3664, !3665}
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3661, file: !450, line: 57, baseType: !453, size: 32)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3661, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3661, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3658, file: !300, line: 5075, baseType: !3606, size: 64, offset: 96)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3658, file: !300, line: 5076, baseType: !3668, offset: 160)
!3668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3575, file: !355, line: 343, baseType: !3670, size: 64, offset: 928)
!3670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !3671)
!3671 = !{!3672, !3673}
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3670, file: !424, line: 63, baseType: !121, size: 32)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3670, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!3674 = !DILocation(line: 535, column: 9, scope: !3570)
!3675 = !DILocation(line: 535, column: 2, scope: !3570)
!3676 = distinct !DISubprogram(name: "k_thread_abort", scope: !3677, file: !3677, line: 188, type: !3678, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !3680)
!3677 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!3678 = !DISubroutineType(types: !3679)
!3679 = !{null, !3573}
!3680 = !{!3681}
!3681 = !DILocalVariable(name: "thread", arg: 1, scope: !3676, file: !3677, line: 188, type: !3573)
!3682 = !DILocation(line: 0, scope: !3676)
!3683 = !DILocation(line: 197, column: 2, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3676, file: !3677, line: 197, column: 2)
!3685 = !{i64 2154838179}
!3686 = !DILocation(line: 198, column: 2, scope: !3676)
!3687 = !DILocation(line: 199, column: 1, scope: !3676)
!3688 = distinct !DISubprogram(name: "z_current_get", scope: !3677, file: !3677, line: 173, type: !3571, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !461)
!3689 = !DILocation(line: 180, column: 2, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3688, file: !3677, line: 180, column: 2)
!3691 = !{i64 2154838111}
!3692 = !DILocation(line: 181, column: 9, scope: !3688)
!3693 = !DILocation(line: 181, column: 2, scope: !3688)
!3694 = distinct !DISubprogram(name: "sys_heap_free", scope: !3695, file: !3695, line: 163, type: !3696, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3704)
!3695 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3696 = !DISubroutineType(types: !3697)
!3697 = !{null, !3698, !102}
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 32)
!3699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !3700)
!3700 = !{!3701, !3702, !3703}
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3699, file: !450, line: 57, baseType: !2574, size: 32)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3699, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3699, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!3704 = !{!3705, !3706, !3707, !3708}
!3705 = !DILocalVariable(name: "heap", arg: 1, scope: !3694, file: !3695, line: 163, type: !3698)
!3706 = !DILocalVariable(name: "mem", arg: 2, scope: !3694, file: !3695, line: 163, type: !102)
!3707 = !DILocalVariable(name: "h", scope: !3694, file: !3695, line: 168, type: !2574)
!3708 = !DILocalVariable(name: "c", scope: !3694, file: !3695, line: 169, type: !2579)
!3709 = !DILocation(line: 0, scope: !3694)
!3710 = !DILocation(line: 165, column: 10, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3694, file: !3695, line: 165, column: 6)
!3712 = !DILocation(line: 165, column: 6, scope: !3694)
!3713 = !DILocation(line: 168, column: 27, scope: !3694)
!3714 = !DILocation(line: 169, column: 16, scope: !3694)
!3715 = !{i32 0, i32 536870912}
!3716 = !DILocation(line: 187, column: 2, scope: !3694)
!3717 = !DILocation(line: 197, column: 2, scope: !3694)
!3718 = !DILocation(line: 198, column: 1, scope: !3694)
!3719 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3695, file: !3695, line: 157, type: !3720, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3722)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{!2579, !2574, !102}
!3722 = !{!3723, !3724, !3725, !3726}
!3723 = !DILocalVariable(name: "h", arg: 1, scope: !3719, file: !3695, line: 157, type: !2574)
!3724 = !DILocalVariable(name: "p", arg: 2, scope: !3719, file: !3695, line: 157, type: !102)
!3725 = !DILocalVariable(name: "mem", scope: !3719, file: !3695, line: 159, type: !261)
!3726 = !DILocalVariable(name: "base", scope: !3719, file: !3695, line: 159, type: !261)
!3727 = !DILocation(line: 0, scope: !3719)
!3728 = !DILocation(line: 159, column: 39, scope: !3719)
!3729 = !DILocation(line: 160, column: 14, scope: !3719)
!3730 = !DILocation(line: 160, column: 38, scope: !3719)
!3731 = !DILocation(line: 160, column: 46, scope: !3719)
!3732 = !DILocation(line: 160, column: 2, scope: !3719)
!3733 = distinct !DISubprogram(name: "set_chunk_used", scope: !2561, file: !2561, line: 147, type: !3734, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3736)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{null, !2574, !2579, !157}
!3736 = !{!3737, !3738, !3739, !3740, !3741}
!3737 = !DILocalVariable(name: "h", arg: 1, scope: !3733, file: !2561, line: 147, type: !2574)
!3738 = !DILocalVariable(name: "c", arg: 2, scope: !3733, file: !2561, line: 147, type: !2579)
!3739 = !DILocalVariable(name: "used", arg: 3, scope: !3733, file: !2561, line: 147, type: !157)
!3740 = !DILocalVariable(name: "buf", scope: !3733, file: !2561, line: 149, type: !2568)
!3741 = !DILocalVariable(name: "cmem", scope: !3733, file: !2561, line: 150, type: !102)
!3742 = !DILocation(line: 0, scope: !3733)
!3743 = !DILocation(line: 149, column: 22, scope: !3733)
!3744 = !DILocation(line: 0, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !2561, line: 159, column: 7)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !2561, line: 158, column: 9)
!3747 = distinct !DILexicalBlock(scope: !3733, file: !2561, line: 152, column: 6)
!3748 = !DILocation(line: 159, column: 7, scope: !3746)
!3749 = !DILocation(line: 165, column: 1, scope: !3733)
!3750 = distinct !DISubprogram(name: "free_chunk", scope: !3695, file: !3695, line: 133, type: !3751, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3753)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{null, !2574, !2579}
!3753 = !{!3754, !3755}
!3754 = !DILocalVariable(name: "h", arg: 1, scope: !3750, file: !3695, line: 133, type: !2574)
!3755 = !DILocalVariable(name: "c", arg: 2, scope: !3750, file: !3695, line: 133, type: !2579)
!3756 = !DILocation(line: 0, scope: !3750)
!3757 = !DILocation(line: 136, column: 21, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3750, file: !3695, line: 136, column: 6)
!3759 = !DILocation(line: 136, column: 7, scope: !3758)
!3760 = !DILocation(line: 136, column: 6, scope: !3750)
!3761 = !DILocation(line: 137, column: 3, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3758, file: !3695, line: 136, column: 41)
!3763 = !DILocation(line: 138, column: 22, scope: !3762)
!3764 = !DILocation(line: 138, column: 3, scope: !3762)
!3765 = !DILocation(line: 139, column: 2, scope: !3762)
!3766 = !DILocation(line: 142, column: 21, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3750, file: !3695, line: 142, column: 6)
!3768 = !{i32 -65535, i32 536903678}
!3769 = !DILocation(line: 142, column: 7, scope: !3767)
!3770 = !DILocation(line: 142, column: 6, scope: !3750)
!3771 = !DILocation(line: 143, column: 3, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3767, file: !3695, line: 142, column: 40)
!3773 = !DILocation(line: 144, column: 19, scope: !3772)
!3774 = !DILocation(line: 144, column: 3, scope: !3772)
!3775 = !DILocation(line: 145, column: 7, scope: !3772)
!3776 = !DILocation(line: 146, column: 2, scope: !3772)
!3777 = !DILocation(line: 148, column: 2, scope: !3750)
!3778 = !DILocation(line: 149, column: 1, scope: !3750)
!3779 = distinct !DISubprogram(name: "right_chunk", scope: !2561, file: !2561, line: 204, type: !3780, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3782)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!2579, !2574, !2579}
!3782 = !{!3783, !3784}
!3783 = !DILocalVariable(name: "h", arg: 1, scope: !3779, file: !2561, line: 204, type: !2574)
!3784 = !DILocalVariable(name: "c", arg: 2, scope: !3779, file: !2561, line: 204, type: !2579)
!3785 = !DILocation(line: 0, scope: !3779)
!3786 = !DILocation(line: 206, column: 13, scope: !3779)
!3787 = !DILocation(line: 206, column: 11, scope: !3779)
!3788 = !DILocation(line: 206, column: 2, scope: !3779)
!3789 = distinct !DISubprogram(name: "chunk_used", scope: !2561, file: !2561, line: 137, type: !3790, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3792)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!157, !2574, !2579}
!3792 = !{!3793, !3794}
!3793 = !DILocalVariable(name: "h", arg: 1, scope: !3789, file: !2561, line: 137, type: !2574)
!3794 = !DILocalVariable(name: "c", arg: 2, scope: !3789, file: !2561, line: 137, type: !2579)
!3795 = !DILocation(line: 0, scope: !3789)
!3796 = !DILocation(line: 139, column: 9, scope: !3789)
!3797 = !DILocation(line: 139, column: 42, scope: !3789)
!3798 = !DILocation(line: 139, column: 2, scope: !3789)
!3799 = distinct !DISubprogram(name: "free_list_remove", scope: !3695, file: !3695, line: 60, type: !3751, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3800)
!3800 = !{!3801, !3802, !3803}
!3801 = !DILocalVariable(name: "h", arg: 1, scope: !3799, file: !3695, line: 60, type: !2574)
!3802 = !DILocalVariable(name: "c", arg: 2, scope: !3799, file: !3695, line: 60, type: !2579)
!3803 = !DILocalVariable(name: "bidx", scope: !3804, file: !3695, line: 63, type: !103)
!3804 = distinct !DILexicalBlock(scope: !3805, file: !3695, line: 62, column: 31)
!3805 = distinct !DILexicalBlock(scope: !3799, file: !3695, line: 62, column: 6)
!3806 = !DILocation(line: 0, scope: !3799)
!3807 = !DILocation(line: 63, column: 28, scope: !3804)
!3808 = !{i32 0, i32 32768}
!3809 = !DILocation(line: 63, column: 14, scope: !3804)
!3810 = !DILocation(line: 0, scope: !3804)
!3811 = !DILocation(line: 64, column: 3, scope: !3804)
!3812 = !DILocation(line: 66, column: 1, scope: !3799)
!3813 = distinct !DISubprogram(name: "merge_chunks", scope: !3695, file: !3695, line: 125, type: !3814, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3816)
!3814 = !DISubroutineType(types: !3815)
!3815 = !{null, !2574, !2579, !2579}
!3816 = !{!3817, !3818, !3819, !3820}
!3817 = !DILocalVariable(name: "h", arg: 1, scope: !3813, file: !3695, line: 125, type: !2574)
!3818 = !DILocalVariable(name: "lc", arg: 2, scope: !3813, file: !3695, line: 125, type: !2579)
!3819 = !DILocalVariable(name: "rc", arg: 3, scope: !3813, file: !3695, line: 125, type: !2579)
!3820 = !DILocalVariable(name: "newsz", scope: !3813, file: !3695, line: 127, type: !3821)
!3821 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2561, line: 62, baseType: !121)
!3822 = !DILocation(line: 0, scope: !3813)
!3823 = !DILocation(line: 127, column: 20, scope: !3813)
!3824 = !DILocation(line: 127, column: 40, scope: !3813)
!3825 = !DILocation(line: 127, column: 38, scope: !3813)
!3826 = !DILocation(line: 129, column: 2, scope: !3813)
!3827 = !DILocation(line: 130, column: 25, scope: !3813)
!3828 = !DILocation(line: 130, column: 2, scope: !3813)
!3829 = !DILocation(line: 131, column: 1, scope: !3813)
!3830 = distinct !DISubprogram(name: "left_chunk", scope: !2561, file: !2561, line: 199, type: !3780, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3831)
!3831 = !{!3832, !3833}
!3832 = !DILocalVariable(name: "h", arg: 1, scope: !3830, file: !2561, line: 199, type: !2574)
!3833 = !DILocalVariable(name: "c", arg: 2, scope: !3830, file: !2561, line: 199, type: !2579)
!3834 = !DILocation(line: 0, scope: !3830)
!3835 = !DILocation(line: 201, column: 13, scope: !3830)
!3836 = !DILocation(line: 201, column: 11, scope: !3830)
!3837 = !DILocation(line: 201, column: 2, scope: !3830)
!3838 = distinct !DISubprogram(name: "free_list_add", scope: !3695, file: !3695, line: 98, type: !3751, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3839)
!3839 = !{!3840, !3841, !3842}
!3840 = !DILocalVariable(name: "h", arg: 1, scope: !3838, file: !3695, line: 98, type: !2574)
!3841 = !DILocalVariable(name: "c", arg: 2, scope: !3838, file: !3695, line: 98, type: !2579)
!3842 = !DILocalVariable(name: "bidx", scope: !3843, file: !3695, line: 101, type: !103)
!3843 = distinct !DILexicalBlock(scope: !3844, file: !3695, line: 100, column: 31)
!3844 = distinct !DILexicalBlock(scope: !3838, file: !3695, line: 100, column: 6)
!3845 = !DILocation(line: 0, scope: !3838)
!3846 = !DILocation(line: 101, column: 28, scope: !3843)
!3847 = !DILocation(line: 101, column: 14, scope: !3843)
!3848 = !DILocation(line: 0, scope: !3843)
!3849 = !DILocation(line: 102, column: 3, scope: !3843)
!3850 = !DILocation(line: 104, column: 1, scope: !3838)
!3851 = distinct !DISubprogram(name: "chunk_size", scope: !2561, file: !2561, line: 142, type: !3852, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3854)
!3852 = !DISubroutineType(types: !3853)
!3853 = !{!3821, !2574, !2579}
!3854 = !{!3855, !3856}
!3855 = !DILocalVariable(name: "h", arg: 1, scope: !3851, file: !2561, line: 142, type: !2574)
!3856 = !DILocalVariable(name: "c", arg: 2, scope: !3851, file: !2561, line: 142, type: !2579)
!3857 = !DILocation(line: 0, scope: !3851)
!3858 = !DILocation(line: 144, column: 9, scope: !3851)
!3859 = !DILocation(line: 144, column: 42, scope: !3851)
!3860 = !DILocation(line: 144, column: 2, scope: !3851)
!3861 = distinct !DISubprogram(name: "bucket_idx", scope: !2561, file: !2561, line: 250, type: !3862, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3864)
!3862 = !DISubroutineType(types: !3863)
!3863 = !{!103, !2574, !3821}
!3864 = !{!3865, !3866, !3867}
!3865 = !DILocalVariable(name: "h", arg: 1, scope: !3861, file: !2561, line: 250, type: !2574)
!3866 = !DILocalVariable(name: "sz", arg: 2, scope: !3861, file: !2561, line: 250, type: !3821)
!3867 = !DILocalVariable(name: "usable_sz", scope: !3861, file: !2561, line: 252, type: !32)
!3868 = !DILocation(line: 0, scope: !3861)
!3869 = !DILocation(line: 252, column: 32, scope: !3861)
!3870 = !DILocation(line: 252, column: 30, scope: !3861)
!3871 = !DILocation(line: 252, column: 50, scope: !3861)
!3872 = !DILocation(line: 253, column: 14, scope: !3861)
!3873 = !{i32 0, i32 33}
!3874 = !DILocation(line: 253, column: 12, scope: !3861)
!3875 = !DILocation(line: 253, column: 2, scope: !3861)
!3876 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3695, file: !3695, line: 68, type: !3877, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3879)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{null, !2574, !2579, !103}
!3879 = !{!3880, !3881, !3882, !3883, !3885, !3888}
!3880 = !DILocalVariable(name: "h", arg: 1, scope: !3876, file: !3695, line: 68, type: !2574)
!3881 = !DILocalVariable(name: "c", arg: 2, scope: !3876, file: !3695, line: 68, type: !2579)
!3882 = !DILocalVariable(name: "bidx", arg: 3, scope: !3876, file: !3695, line: 68, type: !103)
!3883 = !DILocalVariable(name: "b", scope: !3876, file: !3695, line: 70, type: !3884)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 32)
!3885 = !DILocalVariable(name: "second", scope: !3886, file: !3695, line: 84, type: !2579)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !3695, line: 80, column: 9)
!3887 = distinct !DILexicalBlock(scope: !3876, file: !3695, line: 72, column: 6)
!3888 = !DILocalVariable(name: "first", scope: !3886, file: !3695, line: 85, type: !2579)
!3889 = !DILocation(line: 0, scope: !3876)
!3890 = !DILocation(line: 72, column: 9, scope: !3887)
!3891 = !DILocation(line: 72, column: 14, scope: !3887)
!3892 = !DILocation(line: 72, column: 6, scope: !3876)
!3893 = !DILocation(line: 76, column: 23, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3887, file: !3695, line: 72, column: 21)
!3895 = !DILocation(line: 76, column: 6, scope: !3894)
!3896 = !DILocation(line: 76, column: 20, scope: !3894)
!3897 = !DILocation(line: 77, column: 11, scope: !3894)
!3898 = !DILocation(line: 78, column: 3, scope: !3894)
!3899 = !DILocation(line: 79, column: 3, scope: !3894)
!3900 = !DILocation(line: 80, column: 2, scope: !3894)
!3901 = !DILocation(line: 0, scope: !3886)
!3902 = !DILocation(line: 85, column: 21, scope: !3886)
!3903 = !{i32 0, i32 65536}
!3904 = !DILocation(line: 87, column: 3, scope: !3886)
!3905 = !DILocation(line: 88, column: 3, scope: !3886)
!3906 = !DILocation(line: 89, column: 3, scope: !3886)
!3907 = !DILocation(line: 90, column: 3, scope: !3886)
!3908 = !DILocation(line: 96, column: 1, scope: !3876)
!3909 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2561, file: !2561, line: 187, type: !3814, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3910)
!3910 = !{!3911, !3912, !3913}
!3911 = !DILocalVariable(name: "h", arg: 1, scope: !3909, file: !2561, line: 187, type: !2574)
!3912 = !DILocalVariable(name: "c", arg: 2, scope: !3909, file: !2561, line: 187, type: !2579)
!3913 = !DILocalVariable(name: "prev", arg: 3, scope: !3909, file: !2561, line: 188, type: !2579)
!3914 = !DILocation(line: 0, scope: !3909)
!3915 = !DILocation(line: 190, column: 2, scope: !3909)
!3916 = !DILocation(line: 191, column: 1, scope: !3909)
!3917 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2561, file: !2561, line: 193, type: !3814, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3918)
!3918 = !{!3919, !3920, !3921}
!3919 = !DILocalVariable(name: "h", arg: 1, scope: !3917, file: !2561, line: 193, type: !2574)
!3920 = !DILocalVariable(name: "c", arg: 2, scope: !3917, file: !2561, line: 193, type: !2579)
!3921 = !DILocalVariable(name: "next", arg: 3, scope: !3917, file: !2561, line: 194, type: !2579)
!3922 = !DILocation(line: 0, scope: !3917)
!3923 = !DILocation(line: 196, column: 2, scope: !3917)
!3924 = !DILocation(line: 197, column: 1, scope: !3917)
!3925 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2561, file: !2561, line: 177, type: !3780, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3926)
!3926 = !{!3927, !3928}
!3927 = !DILocalVariable(name: "h", arg: 1, scope: !3925, file: !2561, line: 177, type: !2574)
!3928 = !DILocalVariable(name: "c", arg: 2, scope: !3925, file: !2561, line: 177, type: !2579)
!3929 = !DILocation(line: 0, scope: !3925)
!3930 = !DILocation(line: 179, column: 9, scope: !3925)
!3931 = !DILocation(line: 179, column: 2, scope: !3925)
!3932 = distinct !DISubprogram(name: "chunk_field", scope: !2561, file: !2561, line: 107, type: !3933, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3935)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{!2579, !2574, !2579, !2560}
!3935 = !{!3936, !3937, !3938, !3939, !3940}
!3936 = !DILocalVariable(name: "h", arg: 1, scope: !3932, file: !2561, line: 107, type: !2574)
!3937 = !DILocalVariable(name: "c", arg: 2, scope: !3932, file: !2561, line: 107, type: !2579)
!3938 = !DILocalVariable(name: "f", arg: 3, scope: !3932, file: !2561, line: 108, type: !2560)
!3939 = !DILocalVariable(name: "buf", scope: !3932, file: !2561, line: 110, type: !2568)
!3940 = !DILocalVariable(name: "cmem", scope: !3932, file: !2561, line: 111, type: !102)
!3941 = !DILocation(line: 0, scope: !3932)
!3942 = !DILocation(line: 110, column: 22, scope: !3932)
!3943 = !DILocation(line: 111, column: 15, scope: !3932)
!3944 = !DILocation(line: 116, column: 11, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3946, file: !2561, line: 115, column: 9)
!3946 = distinct !DILexicalBlock(scope: !3932, file: !2561, line: 113, column: 6)
!3947 = !DILocation(line: 116, column: 10, scope: !3945)
!3948 = !DILocation(line: 118, column: 1, scope: !3932)
!3949 = distinct !DISubprogram(name: "chunk_buf", scope: !2561, file: !2561, line: 101, type: !3950, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3952)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{!2568, !2574}
!3952 = !{!3953}
!3953 = !DILocalVariable(name: "h", arg: 1, scope: !3949, file: !2561, line: 101, type: !2574)
!3954 = !DILocation(line: 0, scope: !3949)
!3955 = !DILocation(line: 104, column: 9, scope: !3949)
!3956 = !DILocation(line: 104, column: 2, scope: !3949)
!3957 = distinct !DISubprogram(name: "chunk_set", scope: !2561, file: !2561, line: 120, type: !3958, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3960)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{null, !2574, !2579, !2560, !2579}
!3960 = !{!3961, !3962, !3963, !3964, !3965, !3966}
!3961 = !DILocalVariable(name: "h", arg: 1, scope: !3957, file: !2561, line: 120, type: !2574)
!3962 = !DILocalVariable(name: "c", arg: 2, scope: !3957, file: !2561, line: 120, type: !2579)
!3963 = !DILocalVariable(name: "f", arg: 3, scope: !3957, file: !2561, line: 121, type: !2560)
!3964 = !DILocalVariable(name: "val", arg: 4, scope: !3957, file: !2561, line: 121, type: !2579)
!3965 = !DILocalVariable(name: "buf", scope: !3957, file: !2561, line: 125, type: !2568)
!3966 = !DILocalVariable(name: "cmem", scope: !3957, file: !2561, line: 126, type: !102)
!3967 = !DILocation(line: 0, scope: !3957)
!3968 = !DILocation(line: 125, column: 22, scope: !3957)
!3969 = !DILocation(line: 126, column: 15, scope: !3957)
!3970 = !DILocation(line: 133, column: 27, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !2561, line: 131, column: 9)
!3972 = distinct !DILexicalBlock(scope: !3957, file: !2561, line: 128, column: 6)
!3973 = !DILocation(line: 133, column: 4, scope: !3971)
!3974 = !DILocation(line: 133, column: 3, scope: !3971)
!3975 = !DILocation(line: 133, column: 25, scope: !3971)
!3976 = !DILocation(line: 135, column: 1, scope: !3957)
!3977 = distinct !DISubprogram(name: "min_chunk_size", scope: !2561, file: !2561, line: 240, type: !3978, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3980)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{!3821, !2574}
!3980 = !{!3981}
!3981 = !DILocalVariable(name: "h", arg: 1, scope: !3977, file: !2561, line: 240, type: !2574)
!3982 = !DILocation(line: 0, scope: !3977)
!3983 = !DILocation(line: 242, column: 9, scope: !3977)
!3984 = !DILocation(line: 242, column: 2, scope: !3977)
!3985 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2561, file: !2561, line: 235, type: !3986, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3988)
!3986 = !DISubroutineType(types: !3987)
!3987 = !{!3821, !2574, !344}
!3988 = !{!3989, !3990}
!3989 = !DILocalVariable(name: "h", arg: 1, scope: !3985, file: !2561, line: 235, type: !2574)
!3990 = !DILocalVariable(name: "bytes", arg: 2, scope: !3985, file: !2561, line: 235, type: !344)
!3991 = !DILocation(line: 0, scope: !3985)
!3992 = !DILocation(line: 237, column: 39, scope: !3985)
!3993 = !DILocation(line: 237, column: 9, scope: !3985)
!3994 = !DILocation(line: 237, column: 2, scope: !3985)
!3995 = distinct !DISubprogram(name: "chunksz", scope: !2561, file: !2561, line: 230, type: !3996, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3998)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{!3821, !344}
!3998 = !{!3999}
!3999 = !DILocalVariable(name: "bytes", arg: 1, scope: !3995, file: !2561, line: 230, type: !344)
!4000 = !DILocation(line: 0, scope: !3995)
!4001 = !DILocation(line: 232, column: 29, scope: !3995)
!4002 = !DILocation(line: 232, column: 35, scope: !3995)
!4003 = !DILocation(line: 232, column: 2, scope: !3995)
!4004 = distinct !DISubprogram(name: "set_chunk_size", scope: !2561, file: !2561, line: 172, type: !4005, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4007)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{null, !2574, !2579, !3821}
!4007 = !{!4008, !4009, !4010}
!4008 = !DILocalVariable(name: "h", arg: 1, scope: !4004, file: !2561, line: 172, type: !2574)
!4009 = !DILocalVariable(name: "c", arg: 2, scope: !4004, file: !2561, line: 172, type: !2579)
!4010 = !DILocalVariable(name: "size", arg: 3, scope: !4004, file: !2561, line: 172, type: !3821)
!4011 = !DILocation(line: 0, scope: !4004)
!4012 = !DILocation(line: 174, column: 38, scope: !4004)
!4013 = !DILocation(line: 174, column: 2, scope: !4004)
!4014 = !DILocation(line: 175, column: 1, scope: !4004)
!4015 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2561, file: !2561, line: 209, type: !4005, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4016)
!4016 = !{!4017, !4018, !4019}
!4017 = !DILocalVariable(name: "h", arg: 1, scope: !4015, file: !2561, line: 209, type: !2574)
!4018 = !DILocalVariable(name: "c", arg: 2, scope: !4015, file: !2561, line: 209, type: !2579)
!4019 = !DILocalVariable(name: "size", arg: 3, scope: !4015, file: !2561, line: 210, type: !3821)
!4020 = !DILocation(line: 0, scope: !4015)
!4021 = !DILocation(line: 212, column: 2, scope: !4015)
!4022 = !DILocation(line: 213, column: 1, scope: !4015)
!4023 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3695, file: !3695, line: 34, type: !3877, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4024)
!4024 = !{!4025, !4026, !4027, !4028, !4029, !4032}
!4025 = !DILocalVariable(name: "h", arg: 1, scope: !4023, file: !3695, line: 34, type: !2574)
!4026 = !DILocalVariable(name: "c", arg: 2, scope: !4023, file: !3695, line: 34, type: !2579)
!4027 = !DILocalVariable(name: "bidx", arg: 3, scope: !4023, file: !3695, line: 34, type: !103)
!4028 = !DILocalVariable(name: "b", scope: !4023, file: !3695, line: 36, type: !3884)
!4029 = !DILocalVariable(name: "first", scope: !4030, file: !3695, line: 47, type: !2579)
!4030 = distinct !DILexicalBlock(scope: !4031, file: !3695, line: 46, column: 9)
!4031 = distinct !DILexicalBlock(scope: !4023, file: !3695, line: 42, column: 6)
!4032 = !DILocalVariable(name: "second", scope: !4030, file: !3695, line: 48, type: !2579)
!4033 = !DILocation(line: 0, scope: !4023)
!4034 = !DILocation(line: 36, column: 29, scope: !4023)
!4035 = !DILocation(line: 42, column: 6, scope: !4031)
!4036 = !DILocation(line: 42, column: 28, scope: !4031)
!4037 = !DILocation(line: 42, column: 6, scope: !4023)
!4038 = !DILocation(line: 44, column: 24, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4031, file: !3695, line: 42, column: 34)
!4040 = !DILocation(line: 44, column: 23, scope: !4039)
!4041 = !DILocation(line: 44, column: 6, scope: !4039)
!4042 = !DILocation(line: 44, column: 20, scope: !4039)
!4043 = !DILocation(line: 45, column: 6, scope: !4039)
!4044 = !DILocation(line: 45, column: 11, scope: !4039)
!4045 = !DILocation(line: 46, column: 2, scope: !4039)
!4046 = !DILocation(line: 47, column: 21, scope: !4030)
!4047 = !DILocation(line: 0, scope: !4030)
!4048 = !DILocation(line: 50, column: 6, scope: !4030)
!4049 = !DILocation(line: 50, column: 11, scope: !4030)
!4050 = !DILocation(line: 51, column: 3, scope: !4030)
!4051 = !DILocation(line: 52, column: 3, scope: !4030)
!4052 = !DILocation(line: 58, column: 1, scope: !4023)
!4053 = distinct !DISubprogram(name: "next_free_chunk", scope: !2561, file: !2561, line: 182, type: !3780, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4054)
!4054 = !{!4055, !4056}
!4055 = !DILocalVariable(name: "h", arg: 1, scope: !4053, file: !2561, line: 182, type: !2574)
!4056 = !DILocalVariable(name: "c", arg: 2, scope: !4053, file: !2561, line: 182, type: !2579)
!4057 = !DILocation(line: 0, scope: !4053)
!4058 = !DILocation(line: 184, column: 9, scope: !4053)
!4059 = !DILocation(line: 184, column: 2, scope: !4053)
!4060 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3695, file: !3695, line: 200, type: !4061, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4063)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!344, !3698, !102}
!4063 = !{!4064, !4065, !4066, !4067, !4068, !4069, !4070}
!4064 = !DILocalVariable(name: "heap", arg: 1, scope: !4060, file: !3695, line: 200, type: !3698)
!4065 = !DILocalVariable(name: "mem", arg: 2, scope: !4060, file: !3695, line: 200, type: !102)
!4066 = !DILocalVariable(name: "h", scope: !4060, file: !3695, line: 202, type: !2574)
!4067 = !DILocalVariable(name: "c", scope: !4060, file: !3695, line: 203, type: !2579)
!4068 = !DILocalVariable(name: "addr", scope: !4060, file: !3695, line: 204, type: !344)
!4069 = !DILocalVariable(name: "chunk_base", scope: !4060, file: !3695, line: 205, type: !344)
!4070 = !DILocalVariable(name: "chunk_sz", scope: !4060, file: !3695, line: 206, type: !344)
!4071 = !DILocation(line: 0, scope: !4060)
!4072 = !DILocation(line: 202, column: 27, scope: !4060)
!4073 = !DILocation(line: 203, column: 16, scope: !4060)
!4074 = !DILocation(line: 204, column: 16, scope: !4060)
!4075 = !DILocation(line: 205, column: 31, scope: !4060)
!4076 = !DILocation(line: 205, column: 22, scope: !4060)
!4077 = !DILocation(line: 206, column: 20, scope: !4060)
!4078 = !DILocation(line: 206, column: 37, scope: !4060)
!4079 = !DILocation(line: 208, column: 26, scope: !4060)
!4080 = !DILocation(line: 208, column: 18, scope: !4060)
!4081 = !DILocation(line: 208, column: 2, scope: !4060)
!4082 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3695, file: !3695, line: 263, type: !4083, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4085)
!4083 = !DISubroutineType(types: !4084)
!4084 = !{!102, !3698, !344}
!4085 = !{!4086, !4087, !4088, !4089, !4090, !4091}
!4086 = !DILocalVariable(name: "heap", arg: 1, scope: !4082, file: !3695, line: 263, type: !3698)
!4087 = !DILocalVariable(name: "bytes", arg: 2, scope: !4082, file: !3695, line: 263, type: !344)
!4088 = !DILocalVariable(name: "h", scope: !4082, file: !3695, line: 265, type: !2574)
!4089 = !DILocalVariable(name: "mem", scope: !4082, file: !3695, line: 266, type: !102)
!4090 = !DILocalVariable(name: "chunk_sz", scope: !4082, file: !3695, line: 272, type: !3821)
!4091 = !DILocalVariable(name: "c", scope: !4082, file: !3695, line: 273, type: !2579)
!4092 = !DILocation(line: 0, scope: !4082)
!4093 = !DILocation(line: 265, column: 27, scope: !4082)
!4094 = !DILocation(line: 268, column: 12, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4082, file: !3695, line: 268, column: 6)
!4096 = !DILocation(line: 268, column: 18, scope: !4095)
!4097 = !DILocation(line: 268, column: 21, scope: !4095)
!4098 = !DILocation(line: 268, column: 6, scope: !4082)
!4099 = !DILocation(line: 272, column: 23, scope: !4082)
!4100 = !DILocation(line: 273, column: 16, scope: !4082)
!4101 = !DILocation(line: 274, column: 8, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4082, file: !3695, line: 274, column: 6)
!4103 = !DILocation(line: 274, column: 6, scope: !4082)
!4104 = !DILocation(line: 279, column: 6, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4082, file: !3695, line: 279, column: 6)
!4106 = !DILocation(line: 279, column: 23, scope: !4105)
!4107 = !DILocation(line: 279, column: 6, scope: !4082)
!4108 = !DILocation(line: 280, column: 24, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4105, file: !3695, line: 279, column: 35)
!4110 = !DILocation(line: 280, column: 3, scope: !4109)
!4111 = !DILocation(line: 281, column: 3, scope: !4109)
!4112 = !DILocation(line: 282, column: 2, scope: !4109)
!4113 = !DILocation(line: 284, column: 2, scope: !4082)
!4114 = !DILocation(line: 286, column: 8, scope: !4082)
!4115 = !DILocation(line: 298, column: 2, scope: !4082)
!4116 = !DILocation(line: 299, column: 1, scope: !4082)
!4117 = distinct !DISubprogram(name: "size_too_big", scope: !2561, file: !2561, line: 256, type: !4118, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4120)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{!157, !2574, !344}
!4120 = !{!4121, !4122}
!4121 = !DILocalVariable(name: "h", arg: 1, scope: !4117, file: !2561, line: 256, type: !2574)
!4122 = !DILocalVariable(name: "bytes", arg: 2, scope: !4117, file: !2561, line: 256, type: !344)
!4123 = !DILocation(line: 0, scope: !4117)
!4124 = !DILocation(line: 262, column: 16, scope: !4117)
!4125 = !DILocation(line: 262, column: 36, scope: !4117)
!4126 = !DILocation(line: 262, column: 30, scope: !4117)
!4127 = !DILocation(line: 262, column: 2, scope: !4117)
!4128 = distinct !DISubprogram(name: "alloc_chunk", scope: !3695, file: !3695, line: 211, type: !4129, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4131)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{!2579, !2574, !3821}
!4131 = !{!4132, !4133, !4134, !4135, !4136, !4139, !4140, !4142, !4143, !4146}
!4132 = !DILocalVariable(name: "h", arg: 1, scope: !4128, file: !3695, line: 211, type: !2574)
!4133 = !DILocalVariable(name: "sz", arg: 2, scope: !4128, file: !3695, line: 211, type: !3821)
!4134 = !DILocalVariable(name: "bi", scope: !4128, file: !3695, line: 213, type: !103)
!4135 = !DILocalVariable(name: "b", scope: !4128, file: !3695, line: 214, type: !3884)
!4136 = !DILocalVariable(name: "first", scope: !4137, file: !3695, line: 233, type: !2579)
!4137 = distinct !DILexicalBlock(scope: !4138, file: !3695, line: 232, column: 15)
!4138 = distinct !DILexicalBlock(scope: !4128, file: !3695, line: 232, column: 6)
!4139 = !DILocalVariable(name: "i", scope: !4137, file: !3695, line: 234, type: !103)
!4140 = !DILocalVariable(name: "c", scope: !4141, file: !3695, line: 236, type: !2579)
!4141 = distinct !DILexicalBlock(scope: !4137, file: !3695, line: 235, column: 6)
!4142 = !DILocalVariable(name: "bmask", scope: !4128, file: !3695, line: 249, type: !121)
!4143 = !DILocalVariable(name: "minbucket", scope: !4144, file: !3695, line: 252, type: !103)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !3695, line: 251, column: 19)
!4145 = distinct !DILexicalBlock(scope: !4128, file: !3695, line: 251, column: 6)
!4146 = !DILocalVariable(name: "c", scope: !4144, file: !3695, line: 253, type: !2579)
!4147 = !DILocation(line: 0, scope: !4128)
!4148 = !DILocation(line: 213, column: 11, scope: !4128)
!4149 = !DILocation(line: 232, column: 9, scope: !4138)
!4150 = !DILocation(line: 232, column: 6, scope: !4138)
!4151 = !DILocation(line: 232, column: 6, scope: !4128)
!4152 = !DILocation(line: 236, column: 21, scope: !4141)
!4153 = !DILocation(line: 0, scope: !4137)
!4154 = !DILocation(line: 0, scope: !4141)
!4155 = !DILocation(line: 237, column: 8, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4141, file: !3695, line: 237, column: 8)
!4157 = !DILocation(line: 237, column: 25, scope: !4156)
!4158 = !DILocation(line: 237, column: 8, scope: !4141)
!4159 = !DILocation(line: 238, column: 5, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4156, file: !3695, line: 237, column: 32)
!4161 = !DILocation(line: 241, column: 14, scope: !4141)
!4162 = !DILocation(line: 241, column: 12, scope: !4141)
!4163 = !DILocation(line: 243, column: 12, scope: !4137)
!4164 = !DILocation(line: 243, column: 16, scope: !4137)
!4165 = distinct !{!4165, !4166, !4167}
!4166 = !DILocation(line: 235, column: 3, scope: !4137)
!4167 = !DILocation(line: 243, column: 35, scope: !4137)
!4168 = !DILocation(line: 249, column: 22, scope: !4128)
!4169 = !DILocation(line: 249, column: 39, scope: !4128)
!4170 = !DILocation(line: 249, column: 36, scope: !4128)
!4171 = !DILocation(line: 251, column: 12, scope: !4145)
!4172 = !DILocation(line: 251, column: 6, scope: !4128)
!4173 = !DILocation(line: 252, column: 19, scope: !4144)
!4174 = !DILocation(line: 0, scope: !4144)
!4175 = !DILocation(line: 253, column: 39, scope: !4144)
!4176 = !DILocation(line: 255, column: 3, scope: !4144)
!4177 = !DILocation(line: 261, column: 1, scope: !4128)
!4178 = distinct !DISubprogram(name: "split_chunks", scope: !3695, file: !3695, line: 109, type: !3814, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4179)
!4179 = !{!4180, !4181, !4182, !4183, !4184, !4185}
!4180 = !DILocalVariable(name: "h", arg: 1, scope: !4178, file: !3695, line: 109, type: !2574)
!4181 = !DILocalVariable(name: "lc", arg: 2, scope: !4178, file: !3695, line: 109, type: !2579)
!4182 = !DILocalVariable(name: "rc", arg: 3, scope: !4178, file: !3695, line: 109, type: !2579)
!4183 = !DILocalVariable(name: "sz0", scope: !4178, file: !3695, line: 114, type: !3821)
!4184 = !DILocalVariable(name: "lsz", scope: !4178, file: !3695, line: 115, type: !3821)
!4185 = !DILocalVariable(name: "rsz", scope: !4178, file: !3695, line: 116, type: !3821)
!4186 = !DILocation(line: 0, scope: !4178)
!4187 = !DILocation(line: 114, column: 18, scope: !4178)
!4188 = !DILocation(line: 115, column: 21, scope: !4178)
!4189 = !DILocation(line: 116, column: 22, scope: !4178)
!4190 = !DILocation(line: 118, column: 2, scope: !4178)
!4191 = !DILocation(line: 119, column: 2, scope: !4178)
!4192 = !DILocation(line: 120, column: 2, scope: !4178)
!4193 = !DILocation(line: 121, column: 25, scope: !4178)
!4194 = !DILocation(line: 121, column: 2, scope: !4178)
!4195 = !DILocation(line: 122, column: 1, scope: !4178)
!4196 = distinct !DISubprogram(name: "chunk_mem", scope: !3695, file: !3695, line: 24, type: !4197, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4199)
!4197 = !DISubroutineType(types: !4198)
!4198 = !{!102, !2574, !2579}
!4199 = !{!4200, !4201, !4202, !4203}
!4200 = !DILocalVariable(name: "h", arg: 1, scope: !4196, file: !3695, line: 24, type: !2574)
!4201 = !DILocalVariable(name: "c", arg: 2, scope: !4196, file: !3695, line: 24, type: !2579)
!4202 = !DILocalVariable(name: "buf", scope: !4196, file: !3695, line: 26, type: !2568)
!4203 = !DILocalVariable(name: "ret", scope: !4196, file: !3695, line: 27, type: !261)
!4204 = !DILocation(line: 0, scope: !4196)
!4205 = !DILocation(line: 26, column: 22, scope: !4196)
!4206 = !DILocation(line: 27, column: 38, scope: !4196)
!4207 = !DILocation(line: 31, column: 2, scope: !4196)
!4208 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3695, file: !3695, line: 301, type: !4209, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4211)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!102, !3698, !344, !344}
!4211 = !{!4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223}
!4212 = !DILocalVariable(name: "heap", arg: 1, scope: !4208, file: !3695, line: 301, type: !3698)
!4213 = !DILocalVariable(name: "align", arg: 2, scope: !4208, file: !3695, line: 301, type: !344)
!4214 = !DILocalVariable(name: "bytes", arg: 3, scope: !4208, file: !3695, line: 301, type: !344)
!4215 = !DILocalVariable(name: "h", scope: !4208, file: !3695, line: 303, type: !2574)
!4216 = !DILocalVariable(name: "gap", scope: !4208, file: !3695, line: 304, type: !344)
!4217 = !DILocalVariable(name: "rew", scope: !4208, file: !3695, line: 304, type: !344)
!4218 = !DILocalVariable(name: "padded_sz", scope: !4208, file: !3695, line: 335, type: !3821)
!4219 = !DILocalVariable(name: "c0", scope: !4208, file: !3695, line: 336, type: !2579)
!4220 = !DILocalVariable(name: "mem", scope: !4208, file: !3695, line: 341, type: !261)
!4221 = !DILocalVariable(name: "end", scope: !4208, file: !3695, line: 345, type: !2568)
!4222 = !DILocalVariable(name: "c", scope: !4208, file: !3695, line: 348, type: !2579)
!4223 = !DILocalVariable(name: "c_end", scope: !4208, file: !3695, line: 349, type: !2579)
!4224 = !DILocation(line: 0, scope: !4208)
!4225 = !DILocation(line: 303, column: 27, scope: !4208)
!4226 = !DILocation(line: 313, column: 16, scope: !4208)
!4227 = !DILocation(line: 313, column: 14, scope: !4208)
!4228 = !DILocation(line: 314, column: 12, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4208, file: !3695, line: 314, column: 6)
!4230 = !DILocation(line: 314, column: 6, scope: !4208)
!4231 = !DILocation(line: 315, column: 9, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4229, file: !3695, line: 314, column: 20)
!4233 = !DILocation(line: 316, column: 9, scope: !4232)
!4234 = !DILocation(line: 318, column: 13, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !3695, line: 318, column: 7)
!4236 = distinct !DILexicalBlock(scope: !4229, file: !3695, line: 317, column: 9)
!4237 = !DILocation(line: 318, column: 7, scope: !4236)
!4238 = !DILocation(line: 319, column: 11, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4235, file: !3695, line: 318, column: 39)
!4240 = !DILocation(line: 319, column: 4, scope: !4239)
!4241 = !DILocation(line: 0, scope: !4229)
!4242 = !DILocation(line: 326, column: 12, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4208, file: !3695, line: 326, column: 6)
!4244 = !DILocation(line: 326, column: 17, scope: !4243)
!4245 = !DILocation(line: 326, column: 20, scope: !4243)
!4246 = !DILocation(line: 326, column: 6, scope: !4208)
!4247 = !DILocation(line: 335, column: 50, scope: !4208)
!4248 = !DILocation(line: 335, column: 58, scope: !4208)
!4249 = !DILocation(line: 335, column: 24, scope: !4208)
!4250 = !DILocation(line: 336, column: 17, scope: !4208)
!4251 = !DILocation(line: 338, column: 9, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4208, file: !3695, line: 338, column: 6)
!4253 = !DILocation(line: 338, column: 6, scope: !4208)
!4254 = !DILocation(line: 341, column: 17, scope: !4208)
!4255 = !DILocation(line: 344, column: 20, scope: !4208)
!4256 = !DILocation(line: 344, column: 8, scope: !4208)
!4257 = !DILocation(line: 344, column: 47, scope: !4208)
!4258 = !DILocation(line: 345, column: 39, scope: !4208)
!4259 = !DILocation(line: 348, column: 16, scope: !4208)
!4260 = !DILocation(line: 349, column: 26, scope: !4208)
!4261 = !DILocation(line: 349, column: 24, scope: !4208)
!4262 = !DILocation(line: 353, column: 8, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4208, file: !3695, line: 353, column: 6)
!4264 = !DILocation(line: 353, column: 6, scope: !4208)
!4265 = !DILocation(line: 354, column: 3, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4263, file: !3695, line: 353, column: 14)
!4267 = !DILocation(line: 355, column: 3, scope: !4266)
!4268 = !DILocation(line: 356, column: 2, scope: !4266)
!4269 = !DILocation(line: 359, column: 6, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4208, file: !3695, line: 359, column: 6)
!4271 = !DILocation(line: 359, column: 24, scope: !4270)
!4272 = !DILocation(line: 359, column: 6, scope: !4208)
!4273 = !DILocation(line: 360, column: 3, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4270, file: !3695, line: 359, column: 33)
!4275 = !DILocation(line: 361, column: 3, scope: !4274)
!4276 = !DILocation(line: 362, column: 2, scope: !4274)
!4277 = !DILocation(line: 364, column: 2, scope: !4208)
!4278 = !DILocation(line: 377, column: 1, scope: !4208)
!4279 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3695, file: !3695, line: 379, type: !4280, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4282)
!4280 = !DISubroutineType(types: !4281)
!4281 = !{!102, !3698, !102, !344, !344}
!4282 = !{!4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4291, !4292, !4298, !4299}
!4283 = !DILocalVariable(name: "heap", arg: 1, scope: !4279, file: !3695, line: 379, type: !3698)
!4284 = !DILocalVariable(name: "ptr", arg: 2, scope: !4279, file: !3695, line: 379, type: !102)
!4285 = !DILocalVariable(name: "align", arg: 3, scope: !4279, file: !3695, line: 380, type: !344)
!4286 = !DILocalVariable(name: "bytes", arg: 4, scope: !4279, file: !3695, line: 380, type: !344)
!4287 = !DILocalVariable(name: "h", scope: !4279, file: !3695, line: 382, type: !2574)
!4288 = !DILocalVariable(name: "c", scope: !4279, file: !3695, line: 399, type: !2579)
!4289 = !DILocalVariable(name: "rc", scope: !4279, file: !3695, line: 400, type: !2579)
!4290 = !DILocalVariable(name: "align_gap", scope: !4279, file: !3695, line: 401, type: !344)
!4291 = !DILocalVariable(name: "chunks_need", scope: !4279, file: !3695, line: 402, type: !3821)
!4292 = !DILocalVariable(name: "split_size", scope: !4293, file: !3695, line: 435, type: !3821)
!4293 = distinct !DILexicalBlock(scope: !4294, file: !3695, line: 433, column: 61)
!4294 = distinct !DILexicalBlock(scope: !4295, file: !3695, line: 432, column: 13)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !3695, line: 409, column: 13)
!4296 = distinct !DILexicalBlock(scope: !4297, file: !3695, line: 406, column: 13)
!4297 = distinct !DILexicalBlock(scope: !4279, file: !3695, line: 404, column: 6)
!4298 = !DILocalVariable(name: "ptr2", scope: !4279, file: !3695, line: 474, type: !102)
!4299 = !DILocalVariable(name: "prev_size", scope: !4300, file: !3695, line: 477, type: !344)
!4300 = distinct !DILexicalBlock(scope: !4301, file: !3695, line: 476, column: 20)
!4301 = distinct !DILexicalBlock(scope: !4279, file: !3695, line: 476, column: 6)
!4302 = !DILocation(line: 0, scope: !4279)
!4303 = !DILocation(line: 382, column: 27, scope: !4279)
!4304 = !DILocation(line: 385, column: 10, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4279, file: !3695, line: 385, column: 6)
!4306 = !DILocation(line: 385, column: 6, scope: !4279)
!4307 = !DILocation(line: 386, column: 10, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4305, file: !3695, line: 385, column: 19)
!4309 = !DILocation(line: 386, column: 3, scope: !4308)
!4310 = !DILocation(line: 388, column: 12, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4279, file: !3695, line: 388, column: 6)
!4312 = !DILocation(line: 388, column: 6, scope: !4279)
!4313 = !DILocation(line: 389, column: 3, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4311, file: !3695, line: 388, column: 18)
!4315 = !DILocation(line: 390, column: 3, scope: !4314)
!4316 = !DILocation(line: 395, column: 6, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4279, file: !3695, line: 395, column: 6)
!4318 = !DILocation(line: 395, column: 6, scope: !4279)
!4319 = !DILocation(line: 399, column: 16, scope: !4279)
!4320 = !DILocation(line: 400, column: 17, scope: !4279)
!4321 = !DILocation(line: 401, column: 49, scope: !4279)
!4322 = !DILocation(line: 401, column: 36, scope: !4279)
!4323 = !DILocation(line: 402, column: 52, scope: !4279)
!4324 = !DILocation(line: 402, column: 26, scope: !4279)
!4325 = !DILocation(line: 404, column: 6, scope: !4297)
!4326 = !DILocation(line: 404, column: 12, scope: !4297)
!4327 = !DILocation(line: 404, column: 40, scope: !4297)
!4328 = !DILocation(line: 404, column: 31, scope: !4297)
!4329 = !DILocation(line: 404, column: 6, scope: !4279)
!4330 = !DILocation(line: 406, column: 13, scope: !4296)
!4331 = !DILocation(line: 406, column: 30, scope: !4296)
!4332 = !DILocation(line: 406, column: 13, scope: !4297)
!4333 = !DILocation(line: 409, column: 30, scope: !4295)
!4334 = !DILocation(line: 409, column: 13, scope: !4296)
!4335 = !DILocation(line: 420, column: 24, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4295, file: !3695, line: 409, column: 45)
!4337 = !DILocation(line: 420, column: 3, scope: !4336)
!4338 = !DILocation(line: 421, column: 3, scope: !4336)
!4339 = !DILocation(line: 422, column: 3, scope: !4336)
!4340 = !DILocation(line: 431, column: 3, scope: !4336)
!4341 = !DILocation(line: 432, column: 14, scope: !4294)
!4342 = !DILocation(line: 432, column: 32, scope: !4294)
!4343 = !DILocation(line: 433, column: 26, scope: !4294)
!4344 = !DILocation(line: 433, column: 24, scope: !4294)
!4345 = !DILocation(line: 433, column: 44, scope: !4294)
!4346 = !DILocation(line: 432, column: 13, scope: !4295)
!4347 = !DILocation(line: 435, column: 38, scope: !4293)
!4348 = !DILocation(line: 0, scope: !4293)
!4349 = !DILocation(line: 445, column: 3, scope: !4293)
!4350 = !DILocation(line: 447, column: 20, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4293, file: !3695, line: 447, column: 7)
!4352 = !DILocation(line: 447, column: 18, scope: !4351)
!4353 = !DILocation(line: 447, column: 7, scope: !4293)
!4354 = !DILocation(line: 448, column: 27, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4351, file: !3695, line: 447, column: 39)
!4356 = !DILocation(line: 448, column: 4, scope: !4355)
!4357 = !DILocation(line: 449, column: 4, scope: !4355)
!4358 = !DILocation(line: 450, column: 3, scope: !4355)
!4359 = !DILocation(line: 452, column: 3, scope: !4293)
!4360 = !DILocation(line: 453, column: 3, scope: !4293)
!4361 = !DILocation(line: 474, column: 15, scope: !4279)
!4362 = !DILocation(line: 476, column: 11, scope: !4301)
!4363 = !DILocation(line: 476, column: 6, scope: !4279)
!4364 = !DILocation(line: 477, column: 42, scope: !4300)
!4365 = !DILocation(line: 477, column: 22, scope: !4300)
!4366 = !DILocation(line: 477, column: 60, scope: !4300)
!4367 = !DILocation(line: 0, scope: !4300)
!4368 = !DILocation(line: 479, column: 21, scope: !4300)
!4369 = !DILocation(line: 479, column: 3, scope: !4300)
!4370 = !DILocation(line: 480, column: 3, scope: !4300)
!4371 = !DILocation(line: 481, column: 2, scope: !4300)
!4372 = !DILocation(line: 483, column: 1, scope: !4279)
!4373 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2561, file: !2561, line: 245, type: !4374, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4376)
!4374 = !DISubroutineType(types: !4375)
!4375 = !{!344, !2574, !3821}
!4376 = !{!4377, !4378}
!4377 = !DILocalVariable(name: "h", arg: 1, scope: !4373, file: !2561, line: 245, type: !2574)
!4378 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4373, file: !2561, line: 245, type: !3821)
!4379 = !DILocation(line: 0, scope: !4373)
!4380 = !DILocation(line: 247, column: 20, scope: !4373)
!4381 = !DILocation(line: 247, column: 33, scope: !4373)
!4382 = !DILocation(line: 247, column: 2, scope: !4373)
!4383 = distinct !DISubprogram(name: "sys_heap_init", scope: !3695, file: !3695, line: 485, type: !4384, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !4386)
!4384 = !DISubroutineType(types: !4385)
!4385 = !{null, !3698, !102, !344}
!4386 = !{!4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4396}
!4387 = !DILocalVariable(name: "heap", arg: 1, scope: !4383, file: !3695, line: 485, type: !3698)
!4388 = !DILocalVariable(name: "mem", arg: 2, scope: !4383, file: !3695, line: 485, type: !102)
!4389 = !DILocalVariable(name: "bytes", arg: 3, scope: !4383, file: !3695, line: 485, type: !344)
!4390 = !DILocalVariable(name: "addr", scope: !4383, file: !3695, line: 502, type: !22)
!4391 = !DILocalVariable(name: "end", scope: !4383, file: !3695, line: 503, type: !22)
!4392 = !DILocalVariable(name: "heap_sz", scope: !4383, file: !3695, line: 504, type: !3821)
!4393 = !DILocalVariable(name: "h", scope: !4383, file: !3695, line: 509, type: !2574)
!4394 = !DILocalVariable(name: "nb_buckets", scope: !4383, file: !3695, line: 520, type: !103)
!4395 = !DILocalVariable(name: "chunk0_size", scope: !4383, file: !3695, line: 521, type: !3821)
!4396 = !DILocalVariable(name: "i", scope: !4397, file: !3695, line: 526, type: !103)
!4397 = distinct !DILexicalBlock(scope: !4383, file: !3695, line: 526, column: 2)
!4398 = !DILocation(line: 0, scope: !4383)
!4399 = !DILocation(line: 499, column: 8, scope: !4383)
!4400 = !DILocation(line: 502, column: 19, scope: !4383)
!4401 = !DILocation(line: 503, column: 18, scope: !4383)
!4402 = !DILocation(line: 504, column: 27, scope: !4383)
!4403 = !DILocation(line: 504, column: 35, scope: !4383)
!4404 = !DILocation(line: 509, column: 21, scope: !4383)
!4405 = !DILocation(line: 510, column: 8, scope: !4383)
!4406 = !DILocation(line: 510, column: 13, scope: !4383)
!4407 = !DILocation(line: 511, column: 5, scope: !4383)
!4408 = !DILocation(line: 511, column: 15, scope: !4383)
!4409 = !DILocation(line: 512, column: 5, scope: !4383)
!4410 = !DILocation(line: 512, column: 19, scope: !4383)
!4411 = !DILocation(line: 520, column: 19, scope: !4383)
!4412 = !DILocation(line: 522, column: 21, scope: !4383)
!4413 = !DILocation(line: 521, column: 56, scope: !4383)
!4414 = !DILocation(line: 521, column: 26, scope: !4383)
!4415 = !DILocation(line: 0, scope: !4397)
!4416 = !DILocation(line: 526, column: 20, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4397, file: !3695, line: 526, column: 2)
!4418 = !DILocation(line: 526, column: 2, scope: !4397)
!4419 = !DILocation(line: 531, column: 2, scope: !4383)
!4420 = !DILocation(line: 532, column: 2, scope: !4383)
!4421 = !DILocation(line: 533, column: 2, scope: !4383)
!4422 = !DILocation(line: 536, column: 41, scope: !4383)
!4423 = !DILocation(line: 536, column: 2, scope: !4383)
!4424 = !DILocation(line: 537, column: 2, scope: !4383)
!4425 = !DILocation(line: 540, column: 2, scope: !4383)
!4426 = !DILocation(line: 541, column: 2, scope: !4383)
!4427 = !DILocation(line: 542, column: 2, scope: !4383)
!4428 = !DILocation(line: 544, column: 2, scope: !4383)
!4429 = !DILocation(line: 545, column: 1, scope: !4383)
!4430 = !DILocation(line: 527, column: 17, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4417, file: !3695, line: 526, column: 39)
!4432 = !DILocation(line: 527, column: 22, scope: !4431)
!4433 = !DILocation(line: 526, column: 35, scope: !4417)
!4434 = distinct !{!4434, !4418, !4435}
!4435 = !DILocation(line: 528, column: 2, scope: !4397)
!4436 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2594, file: !2594, line: 1338, type: !4437, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !4445)
!4437 = !DISubroutineType(types: !4438)
!4438 = !{!103, !3425, !102, !144, !4439, !121}
!4439 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3391, line: 99, baseType: !4440)
!4440 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3391, line: 40, baseType: !4441)
!4441 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2594, baseType: !4442)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4443)
!4443 = !{!4444}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4442, file: !2594, baseType: !102, size: 32)
!4445 = !{!4446, !4447, !4448, !4449, !4450, !4451, !4455, !4456, !4457, !4459, !4464, !4509, !4512, !4515, !4516, !4517, !4518, !4519, !4520, !4521, !4524, !4525, !4526, !4530, !4533, !4535, !4538, !4539, !4540, !4545, !4551, !4554, !4558, !4564, !4568, !4571, !4573, !4576}
!4446 = !DILocalVariable(name: "out", arg: 1, scope: !4436, file: !2594, line: 1338, type: !3425)
!4447 = !DILocalVariable(name: "ctx", arg: 2, scope: !4436, file: !2594, line: 1338, type: !102)
!4448 = !DILocalVariable(name: "fp", arg: 3, scope: !4436, file: !2594, line: 1338, type: !144)
!4449 = !DILocalVariable(name: "ap", arg: 4, scope: !4436, file: !2594, line: 1339, type: !4439)
!4450 = !DILocalVariable(name: "flags", arg: 5, scope: !4436, file: !2594, line: 1339, type: !121)
!4451 = !DILocalVariable(name: "buf", scope: !4436, file: !2594, line: 1341, type: !4452)
!4452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !4453)
!4453 = !{!4454}
!4454 = !DISubrange(count: 22)
!4455 = !DILocalVariable(name: "count", scope: !4436, file: !2594, line: 1342, type: !344)
!4456 = !DILocalVariable(name: "sint", scope: !4436, file: !2594, line: 1343, type: !2613)
!4457 = !DILocalVariable(name: "tagged_ap", scope: !4436, file: !2594, line: 1345, type: !4458)
!4458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!4459 = !DILocalVariable(name: "rc", scope: !4460, file: !2594, line: 1377, type: !103)
!4460 = distinct !DILexicalBlock(scope: !4461, file: !2594, line: 1377, column: 4)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !2594, line: 1376, column: 19)
!4462 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1376, column: 7)
!4463 = distinct !DILexicalBlock(scope: !4436, file: !2594, line: 1375, column: 19)
!4464 = !DILocalVariable(name: "state", scope: !4463, file: !2594, line: 1395, type: !4465)
!4465 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4436, file: !2594, line: 1392, size: 192, elements: !4466)
!4466 = !{!4467, !4477}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4465, file: !2594, line: 1393, baseType: !4468, size: 64)
!4468 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2594, line: 166, size: 64, elements: !4469)
!4469 = !{!4470, !4471, !4472, !4474, !4476}
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4468, file: !2594, line: 168, baseType: !2613, size: 64)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4468, file: !2594, line: 171, baseType: !2616, size: 64)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4468, file: !2594, line: 174, baseType: !4473, size: 64)
!4473 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4468, file: !2594, line: 177, baseType: !4475, size: 64)
!4475 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4468, file: !2594, line: 180, baseType: !102, size: 32)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4465, file: !2594, line: 1394, baseType: !4478, size: 96, offset: 64)
!4478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2594, line: 189, size: 96, elements: !4479)
!4479 = !{!4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4504}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4478, file: !2594, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4478, file: !2594, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4478, file: !2594, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4478, file: !2594, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4478, file: !2594, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4478, file: !2594, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4478, file: !2594, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4478, file: !2594, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4478, file: !2594, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4478, file: !2594, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4478, file: !2594, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4478, file: !2594, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4478, file: !2594, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4478, file: !2594, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4478, file: !2594, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4478, file: !2594, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4478, file: !2594, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4478, file: !2594, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4478, file: !2594, line: 260, baseType: !155, size: 8, offset: 24)
!4499 = !DIDerivedType(tag: DW_TAG_member, scope: !4478, file: !2594, line: 262, baseType: !4500, size: 32, offset: 32)
!4500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4478, file: !2594, line: 262, size: 32, elements: !4501)
!4501 = !{!4502, !4503}
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4500, file: !2594, line: 267, baseType: !103, size: 32)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4500, file: !2594, line: 289, baseType: !103, size: 32)
!4504 = !DIDerivedType(tag: DW_TAG_member, scope: !4478, file: !2594, line: 292, baseType: !4505, size: 32, offset: 64)
!4505 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4478, file: !2594, line: 292, size: 32, elements: !4506)
!4506 = !{!4507, !4508}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4505, file: !2594, line: 297, baseType: !103, size: 32)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4505, file: !2594, line: 306, baseType: !103, size: 32)
!4509 = !DILocalVariable(name: "conv", scope: !4463, file: !2594, line: 1400, type: !4510)
!4510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4511)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4478, size: 32)
!4512 = !DILocalVariable(name: "value", scope: !4463, file: !2594, line: 1401, type: !4513)
!4513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4514)
!4514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 32)
!4515 = !DILocalVariable(name: "sp", scope: !4463, file: !2594, line: 1402, type: !144)
!4516 = !DILocalVariable(name: "width", scope: !4463, file: !2594, line: 1403, type: !103)
!4517 = !DILocalVariable(name: "precision", scope: !4463, file: !2594, line: 1404, type: !103)
!4518 = !DILocalVariable(name: "bps", scope: !4463, file: !2594, line: 1405, type: !144)
!4519 = !DILocalVariable(name: "bpe", scope: !4463, file: !2594, line: 1406, type: !144)
!4520 = !DILocalVariable(name: "sign", scope: !4463, file: !2594, line: 1407, type: !146)
!4521 = !DILocalVariable(name: "arg", scope: !4522, file: !2594, line: 1432, type: !103)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !2594, line: 1431, column: 24)
!4523 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1431, column: 7)
!4524 = !DILocalVariable(name: "specifier_cat", scope: !4463, file: !2594, line: 1468, type: !2593)
!4525 = !DILocalVariable(name: "length_mod", scope: !4463, file: !2594, line: 1470, type: !2601)
!4526 = !DILocalVariable(name: "rc", scope: !4527, file: !2594, line: 1575, type: !103)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !2594, line: 1575, column: 4)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !2594, line: 1574, column: 43)
!4529 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1574, column: 7)
!4530 = !DILocalVariable(name: "rc", scope: !4531, file: !2594, line: 1584, type: !103)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !2594, line: 1584, column: 4)
!4532 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1582, column: 28)
!4533 = !DILocalVariable(name: "len", scope: !4534, file: !2594, line: 1589, type: !344)
!4534 = distinct !DILexicalBlock(scope: !4532, file: !2594, line: 1586, column: 13)
!4535 = !DILocalVariable(name: "len", scope: !4536, file: !2594, line: 1641, type: !344)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !2594, line: 1640, column: 24)
!4537 = distinct !DILexicalBlock(scope: !4532, file: !2594, line: 1640, column: 8)
!4538 = !DILocalVariable(name: "nj_len", scope: !4463, file: !2594, line: 1722, type: !344)
!4539 = !DILocalVariable(name: "pad_len", scope: !4463, file: !2594, line: 1723, type: !103)
!4540 = !DILocalVariable(name: "pad", scope: !4541, file: !2594, line: 1751, type: !146)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !2594, line: 1750, column: 26)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !2594, line: 1750, column: 8)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !2594, line: 1747, column: 18)
!4544 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1747, column: 7)
!4545 = !DILocalVariable(name: "rc", scope: !4546, file: !2594, line: 1758, type: !103)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !2594, line: 1758, column: 7)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !2594, line: 1757, column: 21)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !2594, line: 1757, column: 10)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !2594, line: 1756, column: 26)
!4550 = distinct !DILexicalBlock(scope: !4541, file: !2594, line: 1756, column: 9)
!4551 = !DILocalVariable(name: "rc", scope: !4552, file: !2594, line: 1765, type: !103)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !2594, line: 1765, column: 6)
!4553 = distinct !DILexicalBlock(scope: !4541, file: !2594, line: 1764, column: 25)
!4554 = !DILocalVariable(name: "rc", scope: !4555, file: !2594, line: 1774, type: !103)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !2594, line: 1774, column: 4)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !2594, line: 1773, column: 18)
!4557 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1773, column: 7)
!4558 = !DILocalVariable(name: "rc", scope: !4559, file: !2594, line: 1819, type: !103)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !2594, line: 1819, column: 5)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !2594, line: 1818, column: 44)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !2594, line: 1818, column: 8)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !2594, line: 1817, column: 10)
!4563 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1777, column: 7)
!4564 = !DILocalVariable(name: "rc", scope: !4565, file: !2594, line: 1823, type: !103)
!4565 = distinct !DILexicalBlock(scope: !4566, file: !2594, line: 1823, column: 5)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !2594, line: 1822, column: 26)
!4567 = distinct !DILexicalBlock(scope: !4562, file: !2594, line: 1822, column: 8)
!4568 = !DILocalVariable(name: "rc", scope: !4569, file: !2594, line: 1828, type: !103)
!4569 = distinct !DILexicalBlock(scope: !4570, file: !2594, line: 1828, column: 5)
!4570 = distinct !DILexicalBlock(scope: !4562, file: !2594, line: 1827, column: 26)
!4571 = !DILocalVariable(name: "rc", scope: !4572, file: !2594, line: 1831, type: !103)
!4572 = distinct !DILexicalBlock(scope: !4562, file: !2594, line: 1831, column: 4)
!4573 = !DILocalVariable(name: "rc", scope: !4574, file: !2594, line: 1836, type: !103)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !2594, line: 1836, column: 4)
!4575 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1835, column: 21)
!4576 = !DILabel(scope: !4532, name: "prec_int_pad0", file: !2594, line: 1634)
!4577 = !DILocation(line: 0, scope: !4436)
!4578 = !DILocation(line: 1341, column: 2, scope: !4436)
!4579 = !DILocation(line: 1341, column: 7, scope: !4436)
!4580 = !DILocation(line: 1375, column: 2, scope: !4436)
!4581 = !DILocation(line: 1342, column: 9, scope: !4436)
!4582 = !DILocation(line: 1375, column: 9, scope: !4436)
!4583 = !DILocation(line: 1377, column: 4, scope: !4460)
!4584 = !DILocation(line: 0, scope: !4460)
!4585 = !DILocation(line: 1377, column: 4, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4460, file: !2594, line: 1377, column: 4)
!4587 = distinct !{!4587, !4580, !4588}
!4588 = !DILocation(line: 1839, column: 2, scope: !4436)
!4589 = !DILocation(line: 1392, column: 3, scope: !4463)
!4590 = !DILocation(line: 1395, column: 5, scope: !4463)
!4591 = !DILocation(line: 0, scope: !4463)
!4592 = !DILocation(line: 1409, column: 8, scope: !4463)
!4593 = !DILocation(line: 1414, column: 13, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1414, column: 7)
!4595 = !DILocation(line: 1414, column: 7, scope: !4463)
!4596 = !DILocation(line: 1415, column: 12, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4594, file: !2594, line: 1414, column: 25)
!4598 = !DILocation(line: 1417, column: 14, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4597, file: !2594, line: 1417, column: 8)
!4600 = !DILocation(line: 1417, column: 8, scope: !4597)
!4601 = !DILocation(line: 1418, column: 21, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4599, file: !2594, line: 1417, column: 19)
!4603 = !DILocation(line: 1419, column: 13, scope: !4602)
!4604 = !DILocation(line: 1420, column: 4, scope: !4602)
!4605 = !DILocation(line: 1421, column: 20, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4594, file: !2594, line: 1421, column: 14)
!4607 = !DILocation(line: 1421, column: 14, scope: !4594)
!4608 = !DILocation(line: 1431, column: 13, scope: !4523)
!4609 = !DILocation(line: 1431, column: 7, scope: !4463)
!4610 = !DILocation(line: 1432, column: 14, scope: !4522)
!4611 = !DILocation(line: 0, scope: !4522)
!4612 = !DILocation(line: 1434, column: 12, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4522, file: !2594, line: 1434, column: 8)
!4614 = !DILocation(line: 1434, column: 8, scope: !4522)
!4615 = !DILocation(line: 1435, column: 24, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4613, file: !2594, line: 1434, column: 17)
!4617 = !DILocation(line: 1436, column: 4, scope: !4616)
!4618 = !DILocation(line: 1439, column: 20, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4523, file: !2594, line: 1439, column: 14)
!4620 = !DILocation(line: 1439, column: 14, scope: !4523)
!4621 = !DILocation(line: 1469, column: 37, scope: !4463)
!4622 = !DILocation(line: 1448, column: 20, scope: !4463)
!4623 = !DILocation(line: 1449, column: 22, scope: !4463)
!4624 = !DILocation(line: 1471, column: 34, scope: !4463)
!4625 = !DILocation(line: 1478, column: 7, scope: !4463)
!4626 = !DILocation(line: 1479, column: 4, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !2594, line: 1478, column: 40)
!4628 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1478, column: 7)
!4629 = !DILocation(line: 1484, column: 19, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4627, file: !2594, line: 1479, column: 24)
!4631 = !DILocation(line: 1484, column: 17, scope: !4630)
!4632 = !DILocation(line: 1485, column: 5, scope: !4630)
!4633 = !DILocation(line: 1492, column: 20, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !2594, line: 1491, column: 12)
!4635 = distinct !DILexicalBlock(scope: !4630, file: !2594, line: 1487, column: 9)
!4636 = !DILocation(line: 1492, column: 18, scope: !4634)
!4637 = !DILocation(line: 1494, column: 5, scope: !4630)
!4638 = !DILocation(line: 1497, column: 23, scope: !4630)
!4639 = !DILocation(line: 1496, column: 17, scope: !4630)
!4640 = !DILocation(line: 1498, column: 5, scope: !4630)
!4641 = !DILocation(line: 1501, column: 23, scope: !4630)
!4642 = !DILocation(line: 1500, column: 17, scope: !4630)
!4643 = !DILocation(line: 1502, column: 5, scope: !4630)
!4644 = !DILocation(line: 1513, column: 23, scope: !4630)
!4645 = !DILocation(line: 1513, column: 6, scope: !4630)
!4646 = !DILocation(line: 1512, column: 17, scope: !4630)
!4647 = !DILocation(line: 1514, column: 5, scope: !4630)
!4648 = !DILocation(line: 0, scope: !4630)
!4649 = !DILocation(line: 1516, column: 8, scope: !4627)
!4650 = !DILocation(line: 1517, column: 19, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !2594, line: 1516, column: 33)
!4652 = distinct !DILexicalBlock(scope: !4627, file: !2594, line: 1516, column: 8)
!4653 = !DILocation(line: 1517, column: 17, scope: !4651)
!4654 = !DILocation(line: 1518, column: 4, scope: !4651)
!4655 = !DILocation(line: 1519, column: 19, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !2594, line: 1518, column: 39)
!4657 = distinct !DILexicalBlock(scope: !4652, file: !2594, line: 1518, column: 15)
!4658 = !DILocation(line: 1519, column: 17, scope: !4656)
!4659 = !DILocation(line: 1520, column: 4, scope: !4656)
!4660 = !DILocation(line: 1522, column: 4, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4662, file: !2594, line: 1521, column: 47)
!4662 = distinct !DILexicalBlock(scope: !4628, file: !2594, line: 1521, column: 14)
!4663 = !DILocation(line: 1527, column: 19, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4661, file: !2594, line: 1522, column: 24)
!4665 = !DILocation(line: 1527, column: 17, scope: !4664)
!4666 = !DILocation(line: 1528, column: 5, scope: !4664)
!4667 = !DILocation(line: 0, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4664, file: !2594, line: 1530, column: 9)
!4669 = !DILocation(line: 1540, column: 23, scope: !4664)
!4670 = !DILocation(line: 1539, column: 17, scope: !4664)
!4671 = !DILocation(line: 1542, column: 5, scope: !4664)
!4672 = !DILocation(line: 1545, column: 23, scope: !4664)
!4673 = !DILocation(line: 1544, column: 17, scope: !4664)
!4674 = !DILocation(line: 1547, column: 5, scope: !4664)
!4675 = !DILocation(line: 1551, column: 23, scope: !4664)
!4676 = !DILocation(line: 1551, column: 6, scope: !4664)
!4677 = !DILocation(line: 1550, column: 17, scope: !4664)
!4678 = !DILocation(line: 1552, column: 5, scope: !4664)
!4679 = !DILocation(line: 0, scope: !4664)
!4680 = !DILocation(line: 1554, column: 8, scope: !4661)
!4681 = !DILocation(line: 1555, column: 19, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4683, file: !2594, line: 1554, column: 33)
!4683 = distinct !DILexicalBlock(scope: !4661, file: !2594, line: 1554, column: 8)
!4684 = !DILocation(line: 1555, column: 17, scope: !4682)
!4685 = !DILocation(line: 1556, column: 4, scope: !4682)
!4686 = !DILocation(line: 1557, column: 19, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4688, file: !2594, line: 1556, column: 39)
!4688 = distinct !DILexicalBlock(scope: !4683, file: !2594, line: 1556, column: 15)
!4689 = !DILocation(line: 1557, column: 17, scope: !4687)
!4690 = !DILocation(line: 1558, column: 4, scope: !4687)
!4691 = !DILocation(line: 0, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !2594, line: 1560, column: 8)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !2594, line: 1559, column: 45)
!4694 = distinct !DILexicalBlock(scope: !4662, file: !2594, line: 1559, column: 14)
!4695 = !DILocation(line: 1566, column: 17, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !2594, line: 1565, column: 46)
!4697 = distinct !DILexicalBlock(scope: !4694, file: !2594, line: 1565, column: 14)
!4698 = !DILocation(line: 1566, column: 15, scope: !4696)
!4699 = !DILocation(line: 1567, column: 3, scope: !4696)
!4700 = !DILocation(line: 1574, column: 21, scope: !4529)
!4701 = !DILocation(line: 1575, column: 4, scope: !4527)
!4702 = !DILocation(line: 0, scope: !4527)
!4703 = !DILocation(line: 1575, column: 4, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4527, file: !2594, line: 1575, column: 4)
!4705 = !DILocation(line: 1582, column: 17, scope: !4463)
!4706 = !DILocation(line: 1582, column: 3, scope: !4463)
!4707 = !DILocation(line: 1584, column: 4, scope: !4531)
!4708 = !DILocation(line: 0, scope: !4531)
!4709 = !DILocation(line: 1584, column: 4, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4531, file: !2594, line: 1584, column: 4)
!4711 = !DILocation(line: 1587, column: 31, scope: !4534)
!4712 = !DILocation(line: 1591, column: 18, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4534, file: !2594, line: 1591, column: 8)
!4714 = !DILocation(line: 1591, column: 8, scope: !4534)
!4715 = !DILocation(line: 1592, column: 11, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4713, file: !2594, line: 1591, column: 24)
!4717 = !DILocation(line: 0, scope: !4534)
!4718 = !DILocation(line: 1593, column: 4, scope: !4716)
!4719 = !DILocation(line: 1594, column: 11, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4713, file: !2594, line: 1593, column: 11)
!4721 = !DILocation(line: 1604, column: 51, scope: !4532)
!4722 = !DILocation(line: 1604, column: 13, scope: !4532)
!4723 = !DILocation(line: 1604, column: 11, scope: !4532)
!4724 = !DILocation(line: 1606, column: 4, scope: !4532)
!4725 = !DILocation(line: 1609, column: 14, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4532, file: !2594, line: 1609, column: 8)
!4727 = !DILocation(line: 1609, column: 8, scope: !4532)
!4728 = !DILocation(line: 1619, column: 18, scope: !4532)
!4729 = !DILocation(line: 1620, column: 13, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4532, file: !2594, line: 1620, column: 8)
!4731 = !DILocation(line: 1620, column: 8, scope: !4532)
!4732 = !DILocation(line: 1622, column: 36, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4730, file: !2594, line: 1620, column: 18)
!4734 = !DILocation(line: 1622, column: 17, scope: !4733)
!4735 = !DILocation(line: 1623, column: 4, scope: !4733)
!4736 = !DILocation(line: 1632, column: 29, scope: !4532)
!4737 = !DILocation(line: 1632, column: 10, scope: !4532)
!4738 = !DILocation(line: 1632, column: 4, scope: !4532)
!4739 = !DILocation(line: 1407, column: 8, scope: !4463)
!4740 = !DILocation(line: 0, scope: !4532)
!4741 = !DILocation(line: 1634, column: 3, scope: !4532)
!4742 = !DILocation(line: 1640, column: 18, scope: !4537)
!4743 = !DILocation(line: 1640, column: 8, scope: !4532)
!4744 = !DILocation(line: 1729, column: 13, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1729, column: 7)
!4746 = !DILocation(line: 1641, column: 22, scope: !4536)
!4747 = !DILocation(line: 0, scope: !4536)
!4748 = !DILocation(line: 1646, column: 21, scope: !4536)
!4749 = !DILocation(line: 1649, column: 13, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4536, file: !2594, line: 1649, column: 9)
!4751 = !DILocation(line: 1649, column: 9, scope: !4536)
!4752 = !DILocation(line: 1650, column: 35, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4750, file: !2594, line: 1649, column: 34)
!4754 = !DILocation(line: 1650, column: 23, scope: !4753)
!4755 = !DILocation(line: 1651, column: 5, scope: !4753)
!4756 = !DILocation(line: 1660, column: 15, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4532, file: !2594, line: 1660, column: 8)
!4758 = !DILocation(line: 1660, column: 19, scope: !4757)
!4759 = !DILocation(line: 1660, column: 8, scope: !4532)
!4760 = !DILocation(line: 1661, column: 23, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4757, file: !2594, line: 1660, column: 28)
!4762 = !DILocation(line: 1661, column: 11, scope: !4761)
!4763 = !DILocation(line: 1665, column: 22, scope: !4761)
!4764 = !DILocation(line: 1666, column: 21, scope: !4761)
!4765 = !DILocation(line: 1668, column: 5, scope: !4761)
!4766 = !DILocation(line: 1677, column: 30, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !2594, line: 1676, column: 49)
!4768 = distinct !DILexicalBlock(scope: !4532, file: !2594, line: 1676, column: 8)
!4769 = !DILocation(line: 1677, column: 5, scope: !4767)
!4770 = !DILocation(line: 1680, column: 4, scope: !4532)
!4771 = !DILocation(line: 0, scope: !4713)
!4772 = !DILocation(line: 1597, column: 14, scope: !4534)
!4773 = !DILocation(line: 1699, column: 11, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1699, column: 7)
!4775 = !DILocation(line: 1699, column: 7, scope: !4463)
!4776 = !DILocation(line: 1725, column: 7, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1725, column: 7)
!4778 = !DILocation(line: 1725, column: 12, scope: !4777)
!4779 = !DILocation(line: 1747, column: 13, scope: !4544)
!4780 = !DILocation(line: 1747, column: 7, scope: !4463)
!4781 = !DILocation(line: 1722, column: 24, scope: !4463)
!4782 = !DILocation(line: 1725, column: 7, scope: !4463)
!4783 = !DILocation(line: 1729, column: 7, scope: !4463)
!4784 = !DILocation(line: 1736, column: 13, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4463, file: !2594, line: 1736, column: 7)
!4786 = !DILocation(line: 1735, column: 19, scope: !4463)
!4787 = !DILocation(line: 1736, column: 7, scope: !4463)
!4788 = !DILocation(line: 1748, column: 10, scope: !4543)
!4789 = !DILocation(line: 1750, column: 15, scope: !4542)
!4790 = !DILocation(line: 1750, column: 8, scope: !4543)
!4791 = !DILocation(line: 0, scope: !4541)
!4792 = !DILocation(line: 1756, column: 15, scope: !4550)
!4793 = !DILocation(line: 1756, column: 9, scope: !4541)
!4794 = !DILocation(line: 1758, column: 7, scope: !4546)
!4795 = !DILocation(line: 0, scope: !4546)
!4796 = !DILocation(line: 1758, column: 7, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4546, file: !2594, line: 1758, column: 7)
!4798 = !DILocation(line: 1764, column: 5, scope: !4541)
!4799 = !DILocation(line: 0, scope: !4543)
!4800 = !DILocation(line: 1764, column: 20, scope: !4541)
!4801 = !DILocation(line: 1764, column: 17, scope: !4541)
!4802 = !DILocation(line: 1765, column: 6, scope: !4552)
!4803 = !DILocation(line: 0, scope: !4552)
!4804 = !DILocation(line: 1765, column: 6, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4552, file: !2594, line: 1765, column: 6)
!4806 = distinct !{!4806, !4798, !4807}
!4807 = !DILocation(line: 1766, column: 5, scope: !4541)
!4808 = !DILocation(line: 1773, column: 12, scope: !4557)
!4809 = !DILocation(line: 1773, column: 7, scope: !4463)
!4810 = !DILocation(line: 1773, column: 7, scope: !4557)
!4811 = !DILocation(line: 1774, column: 4, scope: !4555)
!4812 = !DILocation(line: 0, scope: !4555)
!4813 = !DILocation(line: 1774, column: 4, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4555, file: !2594, line: 1774, column: 4)
!4815 = !DILocation(line: 1818, column: 8, scope: !4561)
!4816 = !DILocation(line: 1818, column: 27, scope: !4561)
!4817 = !DILocation(line: 1818, column: 25, scope: !4561)
!4818 = !DILocation(line: 1818, column: 8, scope: !4562)
!4819 = !DILocation(line: 1819, column: 5, scope: !4559)
!4820 = !DILocation(line: 0, scope: !4559)
!4821 = !DILocation(line: 1819, column: 5, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4559, file: !2594, line: 1819, column: 5)
!4823 = !DILocation(line: 1822, column: 14, scope: !4567)
!4824 = !DILocation(line: 1822, column: 8, scope: !4562)
!4825 = !DILocation(line: 1823, column: 5, scope: !4565)
!4826 = !DILocation(line: 0, scope: !4565)
!4827 = !DILocation(line: 1823, column: 5, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4565, file: !2594, line: 1823, column: 5)
!4829 = !DILocation(line: 1826, column: 20, scope: !4562)
!4830 = !DILocation(line: 1827, column: 4, scope: !4562)
!4831 = !DILocation(line: 0, scope: !4562)
!4832 = !DILocation(line: 1827, column: 21, scope: !4562)
!4833 = !DILocation(line: 1827, column: 18, scope: !4562)
!4834 = !DILocation(line: 1828, column: 5, scope: !4569)
!4835 = !DILocation(line: 0, scope: !4569)
!4836 = !DILocation(line: 1828, column: 5, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4569, file: !2594, line: 1828, column: 5)
!4838 = distinct !{!4838, !4830, !4839}
!4839 = !DILocation(line: 1829, column: 4, scope: !4562)
!4840 = !DILocation(line: 1831, column: 4, scope: !4572)
!4841 = !DILocation(line: 0, scope: !4572)
!4842 = !DILocation(line: 1831, column: 4, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4572, file: !2594, line: 1831, column: 4)
!4844 = !DILocation(line: 1835, column: 16, scope: !4463)
!4845 = !DILocation(line: 1835, column: 3, scope: !4463)
!4846 = !DILocation(line: 1836, column: 4, scope: !4574)
!4847 = !DILocation(line: 0, scope: !4574)
!4848 = !DILocation(line: 1836, column: 4, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4574, file: !2594, line: 1836, column: 4)
!4850 = !DILocation(line: 1837, column: 4, scope: !4575)
!4851 = distinct !{!4851, !4845, !4852}
!4852 = !DILocation(line: 1838, column: 3, scope: !4463)
!4853 = !DILocation(line: 1844, column: 1, scope: !4436)
!4854 = distinct !DISubprogram(name: "extract_conversion", scope: !2594, file: !2594, line: 642, type: !4855, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !4857)
!4855 = !DISubroutineType(types: !4856)
!4856 = !{!144, !4511, !144}
!4857 = !{!4858, !4859}
!4858 = !DILocalVariable(name: "conv", arg: 1, scope: !4854, file: !2594, line: 642, type: !4511)
!4859 = !DILocalVariable(name: "sp", arg: 2, scope: !4854, file: !2594, line: 643, type: !144)
!4860 = !DILocation(line: 0, scope: !4854)
!4861 = !DILocation(line: 645, column: 10, scope: !4854)
!4862 = !DILocation(line: 653, column: 2, scope: !4854)
!4863 = !DILocation(line: 654, column: 6, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4854, file: !2594, line: 654, column: 6)
!4865 = !DILocation(line: 654, column: 10, scope: !4864)
!4866 = !DILocation(line: 654, column: 6, scope: !4854)
!4867 = !DILocation(line: 655, column: 24, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4864, file: !2594, line: 654, column: 18)
!4869 = !DILocation(line: 655, column: 19, scope: !4868)
!4870 = !DILocation(line: 656, column: 3, scope: !4868)
!4871 = !DILocation(line: 659, column: 7, scope: !4854)
!4872 = !DILocation(line: 660, column: 7, scope: !4854)
!4873 = !DILocation(line: 661, column: 7, scope: !4854)
!4874 = !DILocation(line: 662, column: 7, scope: !4854)
!4875 = !DILocation(line: 663, column: 7, scope: !4854)
!4876 = !DILocation(line: 665, column: 2, scope: !4854)
!4877 = !DILocation(line: 666, column: 1, scope: !4854)
!4878 = distinct !DISubprogram(name: "outs", scope: !2594, file: !2594, line: 1319, type: !4879, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !4881)
!4879 = !DISubroutineType(types: !4880)
!4880 = !{!103, !3425, !102, !144, !144}
!4881 = !{!4882, !4883, !4884, !4885, !4886, !4887}
!4882 = !DILocalVariable(name: "out", arg: 1, scope: !4878, file: !2594, line: 1319, type: !3425)
!4883 = !DILocalVariable(name: "ctx", arg: 2, scope: !4878, file: !2594, line: 1320, type: !102)
!4884 = !DILocalVariable(name: "sp", arg: 3, scope: !4878, file: !2594, line: 1321, type: !144)
!4885 = !DILocalVariable(name: "ep", arg: 4, scope: !4878, file: !2594, line: 1322, type: !144)
!4886 = !DILocalVariable(name: "count", scope: !4878, file: !2594, line: 1324, type: !344)
!4887 = !DILocalVariable(name: "rc", scope: !4888, file: !2594, line: 1327, type: !103)
!4888 = distinct !DILexicalBlock(scope: !4878, file: !2594, line: 1326, column: 45)
!4889 = !DILocation(line: 0, scope: !4878)
!4890 = !DILocation(line: 1326, column: 2, scope: !4878)
!4891 = !DILocation(line: 1324, column: 9, scope: !4878)
!4892 = !DILocation(line: 1326, column: 13, scope: !4878)
!4893 = !DILocation(line: 1326, column: 19, scope: !4878)
!4894 = !DILocation(line: 1327, column: 21, scope: !4888)
!4895 = !DILocation(line: 1326, column: 36, scope: !4878)
!4896 = !DILocation(line: 1326, column: 39, scope: !4878)
!4897 = !DILocation(line: 1327, column: 24, scope: !4888)
!4898 = !DILocation(line: 1327, column: 16, scope: !4888)
!4899 = !DILocation(line: 1327, column: 12, scope: !4888)
!4900 = !DILocation(line: 0, scope: !4888)
!4901 = !DILocation(line: 1329, column: 10, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4888, file: !2594, line: 1329, column: 7)
!4903 = !DILocation(line: 1329, column: 7, scope: !4888)
!4904 = distinct !{!4904, !4890, !4905}
!4905 = !DILocation(line: 1333, column: 2, scope: !4878)
!4906 = !DILocation(line: 1336, column: 1, scope: !4878)
!4907 = distinct !DISubprogram(name: "encode_uint", scope: !2594, file: !2594, line: 788, type: !4908, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !4910)
!4908 = !DISubroutineType(types: !4909)
!4909 = !{!1071, !2616, !4511, !1071, !144}
!4910 = !{!4911, !4912, !4913, !4914, !4915, !4916, !4918, !4919}
!4911 = !DILocalVariable(name: "value", arg: 1, scope: !4907, file: !2594, line: 788, type: !2616)
!4912 = !DILocalVariable(name: "conv", arg: 2, scope: !4907, file: !2594, line: 789, type: !4511)
!4913 = !DILocalVariable(name: "bps", arg: 3, scope: !4907, file: !2594, line: 790, type: !1071)
!4914 = !DILocalVariable(name: "bpe", arg: 4, scope: !4907, file: !2594, line: 791, type: !144)
!4915 = !DILocalVariable(name: "upcase", scope: !4907, file: !2594, line: 793, type: !157)
!4916 = !DILocalVariable(name: "radix", scope: !4907, file: !2594, line: 794, type: !4917)
!4917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4918 = !DILocalVariable(name: "bp", scope: !4907, file: !2594, line: 795, type: !1071)
!4919 = !DILocalVariable(name: "lsv", scope: !4920, file: !2594, line: 798, type: !32)
!4920 = distinct !DILexicalBlock(scope: !4907, file: !2594, line: 797, column: 5)
!4921 = !DILocation(line: 0, scope: !4907)
!4922 = !DILocation(line: 793, column: 35, scope: !4907)
!4923 = !DILocation(line: 793, column: 24, scope: !4907)
!4924 = !DILocation(line: 793, column: 16, scope: !4907)
!4925 = !DILocation(line: 794, column: 29, scope: !4907)
!4926 = !DILocation(line: 795, column: 24, scope: !4907)
!4927 = !DILocation(line: 795, column: 17, scope: !4907)
!4928 = !DILocation(line: 797, column: 2, scope: !4907)
!4929 = !DILocation(line: 802, column: 9, scope: !4920)
!4930 = !DILocation(line: 798, column: 22, scope: !4920)
!4931 = !DILocation(line: 0, scope: !4920)
!4932 = !DILocation(line: 800, column: 16, scope: !4920)
!4933 = !DILocation(line: 800, column: 11, scope: !4920)
!4934 = !DILocation(line: 800, column: 4, scope: !4920)
!4935 = !DILocation(line: 800, column: 9, scope: !4920)
!4936 = !DILocation(line: 803, column: 18, scope: !4907)
!4937 = !DILocation(line: 803, column: 24, scope: !4907)
!4938 = !DILocation(line: 803, column: 2, scope: !4920)
!4939 = distinct !{!4939, !4928, !4940}
!4940 = !DILocation(line: 803, column: 37, scope: !4907)
!4941 = !DILocation(line: 808, column: 12, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4907, file: !2594, line: 808, column: 6)
!4943 = !DILocation(line: 808, column: 6, scope: !4907)
!4944 = !DILocation(line: 809, column: 7, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4942, file: !2594, line: 808, column: 23)
!4946 = !DILocation(line: 813, column: 3, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4948, file: !2594, line: 811, column: 27)
!4948 = distinct !DILexicalBlock(scope: !4949, file: !2594, line: 811, column: 14)
!4949 = distinct !DILexicalBlock(scope: !4945, file: !2594, line: 809, column: 7)
!4950 = !DILocation(line: 0, scope: !4949)
!4951 = !DILocation(line: 818, column: 2, scope: !4907)
!4952 = distinct !DISubprogram(name: "store_count", scope: !2594, file: !2594, line: 1280, type: !4953, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !4957)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{null, !4955, !102, !103}
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 32)
!4956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4478)
!4957 = !{!4958, !4959, !4960}
!4958 = !DILocalVariable(name: "conv", arg: 1, scope: !4952, file: !2594, line: 1280, type: !4955)
!4959 = !DILocalVariable(name: "dp", arg: 2, scope: !4952, file: !2594, line: 1281, type: !102)
!4960 = !DILocalVariable(name: "count", arg: 3, scope: !4952, file: !2594, line: 1282, type: !103)
!4961 = !DILocation(line: 0, scope: !4952)
!4962 = !DILocation(line: 1284, column: 38, scope: !4952)
!4963 = !DILocation(line: 1284, column: 2, scope: !4952)
!4964 = !DILocation(line: 1286, column: 4, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4952, file: !2594, line: 1284, column: 50)
!4966 = !DILocation(line: 1286, column: 14, scope: !4965)
!4967 = !DILocation(line: 1287, column: 3, scope: !4965)
!4968 = !DILocation(line: 1289, column: 24, scope: !4965)
!4969 = !DILocation(line: 1289, column: 22, scope: !4965)
!4970 = !DILocation(line: 1290, column: 3, scope: !4965)
!4971 = !DILocation(line: 1292, column: 18, scope: !4965)
!4972 = !DILocation(line: 1292, column: 4, scope: !4965)
!4973 = !DILocation(line: 1292, column: 16, scope: !4965)
!4974 = !DILocation(line: 1293, column: 3, scope: !4965)
!4975 = !DILocation(line: 1295, column: 4, scope: !4965)
!4976 = !DILocation(line: 1295, column: 15, scope: !4965)
!4977 = !DILocation(line: 1296, column: 3, scope: !4965)
!4978 = !DILocation(line: 1298, column: 22, scope: !4965)
!4979 = !DILocation(line: 1298, column: 4, scope: !4965)
!4980 = !DILocation(line: 1298, column: 20, scope: !4965)
!4981 = !DILocation(line: 1299, column: 3, scope: !4965)
!4982 = !DILocation(line: 1301, column: 21, scope: !4965)
!4983 = !DILocation(line: 1301, column: 4, scope: !4965)
!4984 = !DILocation(line: 1301, column: 19, scope: !4965)
!4985 = !DILocation(line: 1302, column: 3, scope: !4965)
!4986 = !DILocation(line: 1304, column: 4, scope: !4965)
!4987 = !DILocation(line: 1304, column: 17, scope: !4965)
!4988 = !DILocation(line: 1305, column: 3, scope: !4965)
!4989 = !DILocation(line: 1307, column: 4, scope: !4965)
!4990 = !DILocation(line: 1307, column: 20, scope: !4965)
!4991 = !DILocation(line: 1308, column: 3, scope: !4965)
!4992 = !DILocation(line: 1316, column: 1, scope: !4952)
!4993 = distinct !DISubprogram(name: "isupper", scope: !4994, file: !4994, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !4995)
!4994 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4995 = !{!4996}
!4996 = !DILocalVariable(name: "a", arg: 1, scope: !4993, file: !4994, line: 16, type: !103)
!4997 = !DILocation(line: 0, scope: !4993)
!4998 = !DILocation(line: 18, column: 29, scope: !4993)
!4999 = !DILocation(line: 18, column: 45, scope: !4993)
!5000 = !DILocation(line: 18, column: 2, scope: !4993)
!5001 = distinct !DISubprogram(name: "conversion_radix", scope: !2594, file: !2594, line: 761, type: !5002, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5004)
!5002 = !DISubroutineType(types: !5003)
!5003 = !{!344, !146}
!5004 = !{!5005}
!5005 = !DILocalVariable(name: "specifier", arg: 1, scope: !5001, file: !2594, line: 761, type: !146)
!5006 = !DILocation(line: 0, scope: !5001)
!5007 = !DILocation(line: 763, column: 2, scope: !5001)
!5008 = !DILocation(line: 770, column: 3, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5001, file: !2594, line: 763, column: 21)
!5010 = !DILocation(line: 774, column: 3, scope: !5009)
!5011 = !DILocation(line: 0, scope: !5009)
!5012 = !DILocation(line: 776, column: 1, scope: !5001)
!5013 = distinct !DISubprogram(name: "extract_flags", scope: !2594, file: !2594, line: 339, type: !4855, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5014)
!5014 = !{!5015, !5016, !5017}
!5015 = !DILocalVariable(name: "conv", arg: 1, scope: !5013, file: !2594, line: 339, type: !4511)
!5016 = !DILocalVariable(name: "sp", arg: 2, scope: !5013, file: !2594, line: 340, type: !144)
!5017 = !DILocalVariable(name: "loop", scope: !5013, file: !2594, line: 342, type: !157)
!5018 = !DILocation(line: 0, scope: !5013)
!5019 = !DILocation(line: 344, column: 2, scope: !5013)
!5020 = !DILocation(line: 345, column: 11, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5013, file: !2594, line: 344, column: 5)
!5022 = !DILocation(line: 345, column: 3, scope: !5021)
!5023 = !DILocation(line: 351, column: 4, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5021, file: !2594, line: 345, column: 16)
!5025 = !DILocation(line: 354, column: 4, scope: !5024)
!5026 = !DILocation(line: 357, column: 4, scope: !5024)
!5027 = !DILocation(line: 360, column: 4, scope: !5024)
!5028 = !DILocation(line: 0, scope: !5024)
!5029 = !DILocation(line: 370, column: 12, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5013, file: !2594, line: 370, column: 6)
!5031 = !DILocation(line: 370, column: 22, scope: !5030)
!5032 = !DILocation(line: 371, column: 19, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5030, file: !2594, line: 370, column: 42)
!5034 = !DILocation(line: 372, column: 2, scope: !5033)
!5035 = !DILocation(line: 376, column: 2, scope: !5013)
!5036 = distinct !DISubprogram(name: "extract_width", scope: !2594, file: !2594, line: 388, type: !4855, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5037)
!5037 = !{!5038, !5039, !5040, !5041}
!5038 = !DILocalVariable(name: "conv", arg: 1, scope: !5036, file: !2594, line: 388, type: !4511)
!5039 = !DILocalVariable(name: "sp", arg: 2, scope: !5036, file: !2594, line: 389, type: !144)
!5040 = !DILocalVariable(name: "wp", scope: !5036, file: !2594, line: 398, type: !144)
!5041 = !DILocalVariable(name: "width", scope: !5036, file: !2594, line: 399, type: !344)
!5042 = !DILocation(line: 0, scope: !5036)
!5043 = !DILocation(line: 391, column: 8, scope: !5036)
!5044 = !DILocation(line: 391, column: 22, scope: !5036)
!5045 = !DILocation(line: 393, column: 6, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5036, file: !2594, line: 393, column: 6)
!5047 = !DILocation(line: 393, column: 10, scope: !5046)
!5048 = !DILocation(line: 393, column: 6, scope: !5036)
!5049 = !DILocation(line: 394, column: 20, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5046, file: !2594, line: 393, column: 18)
!5051 = !DILocation(line: 395, column: 10, scope: !5050)
!5052 = !DILocation(line: 395, column: 3, scope: !5050)
!5053 = !DILocation(line: 399, column: 17, scope: !5036)
!5054 = !DILocation(line: 401, column: 6, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5036, file: !2594, line: 401, column: 6)
!5056 = !DILocation(line: 401, column: 9, scope: !5055)
!5057 = !DILocation(line: 401, column: 6, scope: !5036)
!5058 = !DILocation(line: 402, column: 23, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5055, file: !2594, line: 401, column: 16)
!5060 = !DILocation(line: 403, column: 9, scope: !5059)
!5061 = !DILocation(line: 403, column: 21, scope: !5059)
!5062 = !DILocation(line: 405, column: 11, scope: !5059)
!5063 = !DILocation(line: 404, column: 21, scope: !5059)
!5064 = !DILocation(line: 406, column: 2, scope: !5059)
!5065 = !DILocation(line: 409, column: 1, scope: !5036)
!5066 = distinct !DISubprogram(name: "extract_prec", scope: !2594, file: !2594, line: 420, type: !4855, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5067)
!5067 = !{!5068, !5069, !5070}
!5068 = !DILocalVariable(name: "conv", arg: 1, scope: !5066, file: !2594, line: 420, type: !4511)
!5069 = !DILocalVariable(name: "sp", arg: 2, scope: !5066, file: !2594, line: 421, type: !144)
!5070 = !DILocalVariable(name: "prec", scope: !5066, file: !2594, line: 435, type: !344)
!5071 = !DILocation(line: 0, scope: !5066)
!5072 = !DILocation(line: 423, column: 24, scope: !5066)
!5073 = !DILocation(line: 423, column: 28, scope: !5066)
!5074 = !DILocation(line: 423, column: 8, scope: !5066)
!5075 = !DILocation(line: 423, column: 21, scope: !5066)
!5076 = !DILocation(line: 425, column: 6, scope: !5066)
!5077 = !DILocation(line: 428, column: 2, scope: !5066)
!5078 = !DILocation(line: 430, column: 6, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5066, file: !2594, line: 430, column: 6)
!5080 = !DILocation(line: 430, column: 10, scope: !5079)
!5081 = !DILocation(line: 430, column: 6, scope: !5066)
!5082 = !DILocation(line: 431, column: 19, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5079, file: !2594, line: 430, column: 18)
!5084 = !DILocation(line: 432, column: 10, scope: !5083)
!5085 = !DILocation(line: 432, column: 3, scope: !5083)
!5086 = !DILocation(line: 435, column: 16, scope: !5066)
!5087 = !DILocation(line: 437, column: 8, scope: !5066)
!5088 = !DILocation(line: 437, column: 19, scope: !5066)
!5089 = !DILocation(line: 439, column: 10, scope: !5066)
!5090 = !DILocation(line: 438, column: 20, scope: !5066)
!5091 = !DILocation(line: 441, column: 9, scope: !5066)
!5092 = !DILocation(line: 442, column: 1, scope: !5066)
!5093 = distinct !DISubprogram(name: "extract_length", scope: !2594, file: !2594, line: 453, type: !4855, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5094)
!5094 = !{!5095, !5096}
!5095 = !DILocalVariable(name: "conv", arg: 1, scope: !5093, file: !2594, line: 453, type: !4511)
!5096 = !DILocalVariable(name: "sp", arg: 2, scope: !5093, file: !2594, line: 454, type: !144)
!5097 = !DILocation(line: 0, scope: !5093)
!5098 = !DILocation(line: 456, column: 10, scope: !5093)
!5099 = !DILocation(line: 456, column: 2, scope: !5093)
!5100 = !DILocation(line: 458, column: 8, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5102, file: !2594, line: 458, column: 7)
!5102 = distinct !DILexicalBlock(scope: !5093, file: !2594, line: 456, column: 15)
!5103 = !DILocation(line: 458, column: 7, scope: !5101)
!5104 = !DILocation(line: 458, column: 13, scope: !5101)
!5105 = !DILocation(line: 0, scope: !5101)
!5106 = !DILocation(line: 458, column: 7, scope: !5102)
!5107 = !DILocation(line: 459, column: 21, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5101, file: !2594, line: 458, column: 21)
!5109 = !DILocation(line: 460, column: 4, scope: !5108)
!5110 = !DILocation(line: 461, column: 3, scope: !5108)
!5111 = !DILocation(line: 462, column: 21, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5101, file: !2594, line: 461, column: 10)
!5113 = !DILocation(line: 466, column: 8, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5102, file: !2594, line: 466, column: 7)
!5115 = !DILocation(line: 466, column: 7, scope: !5114)
!5116 = !DILocation(line: 466, column: 13, scope: !5114)
!5117 = !DILocation(line: 0, scope: !5114)
!5118 = !DILocation(line: 466, column: 7, scope: !5102)
!5119 = !DILocation(line: 467, column: 21, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5114, file: !2594, line: 466, column: 21)
!5121 = !DILocation(line: 468, column: 4, scope: !5120)
!5122 = !DILocation(line: 469, column: 3, scope: !5120)
!5123 = !DILocation(line: 470, column: 21, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5114, file: !2594, line: 469, column: 10)
!5125 = !DILocation(line: 474, column: 9, scope: !5102)
!5126 = !DILocation(line: 474, column: 20, scope: !5102)
!5127 = !DILocation(line: 475, column: 3, scope: !5102)
!5128 = !DILocation(line: 476, column: 3, scope: !5102)
!5129 = !DILocation(line: 478, column: 9, scope: !5102)
!5130 = !DILocation(line: 478, column: 20, scope: !5102)
!5131 = !DILocation(line: 479, column: 3, scope: !5102)
!5132 = !DILocation(line: 480, column: 3, scope: !5102)
!5133 = !DILocation(line: 482, column: 9, scope: !5102)
!5134 = !DILocation(line: 482, column: 20, scope: !5102)
!5135 = !DILocation(line: 483, column: 3, scope: !5102)
!5136 = !DILocation(line: 484, column: 3, scope: !5102)
!5137 = !DILocation(line: 486, column: 9, scope: !5102)
!5138 = !DILocation(line: 486, column: 20, scope: !5102)
!5139 = !DILocation(line: 487, column: 3, scope: !5102)
!5140 = !DILocation(line: 492, column: 21, scope: !5102)
!5141 = !DILocation(line: 493, column: 3, scope: !5102)
!5142 = !DILocation(line: 495, column: 9, scope: !5102)
!5143 = !DILocation(line: 495, column: 20, scope: !5102)
!5144 = !DILocation(line: 496, column: 3, scope: !5102)
!5145 = !DILocation(line: 498, column: 2, scope: !5093)
!5146 = distinct !DISubprogram(name: "extract_specifier", scope: !2594, file: !2594, line: 513, type: !4855, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5147)
!5147 = !{!5148, !5149, !5150, !5151}
!5148 = !DILocalVariable(name: "conv", arg: 1, scope: !5146, file: !2594, line: 513, type: !4511)
!5149 = !DILocalVariable(name: "sp", arg: 2, scope: !5146, file: !2594, line: 514, type: !144)
!5150 = !DILocalVariable(name: "unsupported", scope: !5146, file: !2594, line: 516, type: !157)
!5151 = !DILabel(scope: !5152, name: "int_conv", file: !2594, line: 526)
!5152 = distinct !DILexicalBlock(scope: !5146, file: !2594, line: 520, column: 27)
!5153 = !DILocation(line: 0, scope: !5146)
!5154 = !DILocation(line: 518, column: 20, scope: !5146)
!5155 = !DILocation(line: 518, column: 8, scope: !5146)
!5156 = !DILocation(line: 518, column: 18, scope: !5146)
!5157 = !DILocation(line: 520, column: 2, scope: !5146)
!5158 = !DILocation(line: 525, column: 3, scope: !5152)
!5159 = !DILocation(line: 0, scope: !5152)
!5160 = !DILocation(line: 526, column: 1, scope: !5152)
!5161 = !DILocation(line: 528, column: 24, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5152, file: !2594, line: 528, column: 7)
!5163 = !DILocation(line: 528, column: 7, scope: !5152)
!5164 = !DILocation(line: 535, column: 23, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5152, file: !2594, line: 535, column: 7)
!5166 = !DILocation(line: 535, column: 7, scope: !5152)
!5167 = !DILocation(line: 536, column: 36, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5165, file: !2594, line: 535, column: 31)
!5169 = !DILocation(line: 537, column: 3, scope: !5168)
!5170 = !DILocation(line: 570, column: 9, scope: !5152)
!5171 = !DILocation(line: 570, column: 23, scope: !5152)
!5172 = !DILocation(line: 575, column: 4, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5174, file: !2594, line: 573, column: 48)
!5174 = distinct !DILexicalBlock(scope: !5152, file: !2594, line: 573, column: 7)
!5175 = !DILocation(line: 603, column: 9, scope: !5152)
!5176 = !DILocation(line: 603, column: 23, scope: !5152)
!5177 = !DILocation(line: 605, column: 24, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5152, file: !2594, line: 605, column: 7)
!5179 = !DILocation(line: 605, column: 7, scope: !5152)
!5180 = !DILocation(line: 612, column: 9, scope: !5152)
!5181 = !DILocation(line: 612, column: 23, scope: !5152)
!5182 = !DILocation(line: 619, column: 24, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5152, file: !2594, line: 619, column: 7)
!5184 = !DILocation(line: 619, column: 7, scope: !5152)
!5185 = !DILocation(line: 625, column: 9, scope: !5152)
!5186 = !DILocation(line: 625, column: 17, scope: !5152)
!5187 = !DILocation(line: 626, column: 3, scope: !5152)
!5188 = !DILocation(line: 629, column: 20, scope: !5146)
!5189 = !DILocation(line: 629, column: 8, scope: !5146)
!5190 = !DILocation(line: 518, column: 23, scope: !5146)
!5191 = !DILocation(line: 631, column: 2, scope: !5146)
!5192 = distinct !DISubprogram(name: "extract_decimal", scope: !2594, file: !2594, line: 318, type: !5193, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5196)
!5193 = !DISubroutineType(types: !5194)
!5194 = !{!344, !5195}
!5195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!5196 = !{!5197, !5198, !5199}
!5197 = !DILocalVariable(name: "str", arg: 1, scope: !5192, file: !2594, line: 318, type: !5195)
!5198 = !DILocalVariable(name: "sp", scope: !5192, file: !2594, line: 320, type: !144)
!5199 = !DILocalVariable(name: "val", scope: !5192, file: !2594, line: 321, type: !344)
!5200 = !DILocation(line: 0, scope: !5192)
!5201 = !DILocation(line: 320, column: 19, scope: !5192)
!5202 = !DILocation(line: 323, column: 37, scope: !5192)
!5203 = !DILocation(line: 323, column: 17, scope: !5192)
!5204 = !DILocation(line: 323, column: 9, scope: !5192)
!5205 = !DILocation(line: 323, column: 2, scope: !5192)
!5206 = !DILocation(line: 324, column: 13, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5192, file: !2594, line: 323, column: 43)
!5208 = !DILocation(line: 324, column: 24, scope: !5207)
!5209 = !DILocation(line: 324, column: 19, scope: !5207)
!5210 = !DILocation(line: 324, column: 27, scope: !5207)
!5211 = distinct !{!5211, !5205, !5212}
!5212 = !DILocation(line: 325, column: 2, scope: !5192)
!5213 = !DILocation(line: 326, column: 7, scope: !5192)
!5214 = !DILocation(line: 327, column: 2, scope: !5192)
!5215 = distinct !DISubprogram(name: "isdigit", scope: !4994, file: !4994, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !5216)
!5216 = !{!5217}
!5217 = !DILocalVariable(name: "a", arg: 1, scope: !5215, file: !4994, line: 43, type: !103)
!5218 = !DILocation(line: 0, scope: !5215)
!5219 = !DILocation(line: 45, column: 29, scope: !5215)
!5220 = !DILocation(line: 45, column: 45, scope: !5215)
!5221 = !DILocation(line: 45, column: 2, scope: !5215)
!5222 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5223, file: !5223, line: 9, type: !3244, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !461)
!5223 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!5224 = !DILocation(line: 11, column: 1, scope: !5222)
!5225 = !{i64 2147561980, i64 2147562023, i64 2147562063}
!5226 = !DILocation(line: 12, column: 1, scope: !5222)
!5227 = !{i64 2147566207, i64 2147566250, i64 2147566290}
!5228 = !DILocation(line: 13, column: 1, scope: !5222)
!5229 = !{i64 2147566416, i64 2147566459, i64 2147566499}
!5230 = !DILocation(line: 14, column: 1, scope: !5222)
!5231 = !{i64 2147566633, i64 2147566676, i64 2147566716}
!5232 = !DILocation(line: 15, column: 1, scope: !5222)
!5233 = !{i64 2147566802, i64 2147566845, i64 2147566885}
!5234 = !DILocation(line: 16, column: 1, scope: !5222)
!5235 = !{i64 2147566965, i64 2147567008, i64 2147567048}
!5236 = !DILocation(line: 17, column: 1, scope: !5222)
!5237 = !{i64 2147567149, i64 2147567192, i64 2147567232}
!5238 = !DILocation(line: 18, column: 1, scope: !5222)
!5239 = !{i64 2147567328, i64 2147567371, i64 2147567411}
!5240 = !DILocation(line: 19, column: 1, scope: !5222)
!5241 = !{i64 2147567571, i64 2147567614, i64 2147567654}
!5242 = !DILocation(line: 20, column: 1, scope: !5222)
!5243 = !{i64 2147567806, i64 2147567849, i64 2147567889}
!5244 = !DILocation(line: 21, column: 1, scope: !5222)
!5245 = !{i64 2147567993, i64 2147568036, i64 2147568076}
!5246 = !DILocation(line: 22, column: 1, scope: !5222)
!5247 = !{i64 2147568209, i64 2147568252, i64 2147568292}
!5248 = !DILocation(line: 23, column: 1, scope: !5222)
!5249 = !{i64 2147568412, i64 2147568455, i64 2147568495}
!5250 = !DILocation(line: 24, column: 1, scope: !5222)
!5251 = !{i64 2147568615, i64 2147568658, i64 2147568698}
!5252 = !DILocation(line: 25, column: 1, scope: !5222)
!5253 = !{i64 2147568790, i64 2147568833, i64 2147568873}
!5254 = !DILocation(line: 26, column: 1, scope: !5222)
!5255 = !{i64 2147568998, i64 2147569041, i64 2147569081}
!5256 = !DILocation(line: 27, column: 1, scope: !5222)
!5257 = !{i64 2147569202, i64 2147569245, i64 2147569285}
!5258 = !DILocation(line: 28, column: 1, scope: !5222)
!5259 = !{i64 2147569395, i64 2147569438, i64 2147569478}
!5260 = !DILocation(line: 29, column: 1, scope: !5222)
!5261 = !{i64 2147569597, i64 2147569640, i64 2147569680}
!5262 = !DILocation(line: 30, column: 1, scope: !5222)
!5263 = !{i64 2147569824, i64 2147569867, i64 2147569907}
!5264 = !DILocation(line: 31, column: 1, scope: !5222)
!5265 = !{i64 2147570026, i64 2147570069, i64 2147570109}
!5266 = !DILocation(line: 32, column: 1, scope: !5222)
!5267 = !{i64 2147570241, i64 2147570284, i64 2147570324}
!5268 = !DILocation(line: 33, column: 1, scope: !5222)
!5269 = !{i64 2147570413, i64 2147570456, i64 2147570496}
!5270 = !DILocation(line: 34, column: 1, scope: !5222)
!5271 = !{i64 2147570615, i64 2147570658, i64 2147570698}
!5272 = !DILocation(line: 35, column: 1, scope: !5222)
!5273 = !{i64 2147570841, i64 2147570884, i64 2147570924}
!5274 = !DILocation(line: 36, column: 1, scope: !5222)
!5275 = !{i64 2147571040, i64 2147571083, i64 2147571123}
!5276 = !DILocation(line: 37, column: 1, scope: !5222)
!5277 = !{i64 2147571215, i64 2147571258, i64 2147571298}
!5278 = !DILocation(line: 38, column: 1, scope: !5222)
!5279 = !{i64 2147571483, i64 2147571526, i64 2147571566}
!5280 = !DILocation(line: 39, column: 1, scope: !5222)
!5281 = !{i64 2147571736, i64 2147571779, i64 2147571819}
!5282 = !DILocation(line: 40, column: 1, scope: !5222)
!5283 = !{i64 2147571977, i64 2147572020, i64 2147572060}
!5284 = !DILocation(line: 41, column: 1, scope: !5222)
!5285 = !{i64 2147572212, i64 2147572255, i64 2147572295}
!5286 = !DILocation(line: 42, column: 1, scope: !5222)
!5287 = !{i64 2147572444, i64 2147572487, i64 2147572527}
!5288 = !DILocation(line: 43, column: 1, scope: !5222)
!5289 = !{i64 2147572670, i64 2147572713, i64 2147572753}
!5290 = !DILocation(line: 44, column: 1, scope: !5222)
!5291 = !{i64 2147572908, i64 2147572951, i64 2147572991}
!5292 = !DILocation(line: 45, column: 1, scope: !5222)
!5293 = !{i64 2147573134, i64 2147573177, i64 2147573217}
!5294 = !DILocation(line: 46, column: 1, scope: !5222)
!5295 = !{i64 2147573369, i64 2147573412, i64 2147573452}
!5296 = !DILocation(line: 47, column: 1, scope: !5222)
!5297 = !{i64 2147573604, i64 2147573647, i64 2147573687}
!5298 = !DILocation(line: 48, column: 1, scope: !5222)
!5299 = !{i64 2147573842, i64 2147573885, i64 2147573925}
!5300 = !DILocation(line: 49, column: 1, scope: !5222)
!5301 = !{i64 2147574116, i64 2147574159, i64 2147574199}
!5302 = !DILocation(line: 50, column: 1, scope: !5222)
!5303 = !{i64 2147574354, i64 2147574397, i64 2147574437}
!5304 = !DILocation(line: 51, column: 1, scope: !5222)
!5305 = !{i64 2147574607, i64 2147574650, i64 2147574690}
!5306 = !DILocation(line: 52, column: 1, scope: !5222)
!5307 = !{i64 2147574851, i64 2147574894, i64 2147574934}
!5308 = !DILocation(line: 53, column: 1, scope: !5222)
!5309 = !{i64 2147579162, i64 2147579205, i64 2147579245}
!5310 = !DILocation(line: 54, column: 1, scope: !5222)
!5311 = !{i64 2147579403, i64 2147579446, i64 2147579486}
!5312 = !DILocation(line: 55, column: 1, scope: !5222)
!5313 = !{i64 2147579650, i64 2147579693, i64 2147579733}
!5314 = !DILocation(line: 56, column: 1, scope: !5222)
!5315 = !{i64 2147579885, i64 2147579928, i64 2147579968}
!5316 = !DILocation(line: 57, column: 1, scope: !5222)
!5317 = !{i64 2147580120, i64 2147580163, i64 2147580203}
!5318 = !DILocation(line: 58, column: 1, scope: !5222)
!5319 = !{i64 2147580355, i64 2147580398, i64 2147580438}
!5320 = !DILocation(line: 59, column: 1, scope: !5222)
!5321 = !{i64 2147580593, i64 2147580636, i64 2147580676}
!5322 = !DILocation(line: 60, column: 1, scope: !5222)
!5323 = !{i64 2147580834, i64 2147580877, i64 2147580917}
!5324 = !DILocation(line: 61, column: 1, scope: !5222)
!5325 = !{i64 2147581114, i64 2147581157, i64 2147581197}
!5326 = !DILocation(line: 62, column: 1, scope: !5222)
!5327 = !{i64 2147581373, i64 2147581416, i64 2147581456}
!5328 = !DILocation(line: 63, column: 1, scope: !5222)
!5329 = !{i64 2147581611, i64 2147581654, i64 2147581694}
!5330 = !DILocation(line: 64, column: 1, scope: !5222)
!5331 = !{i64 2147581870, i64 2147581913, i64 2147581953}
!5332 = !DILocation(line: 65, column: 1, scope: !5222)
!5333 = !{i64 2147582099, i64 2147582142, i64 2147582182}
!5334 = !DILocation(line: 66, column: 1, scope: !5222)
!5335 = !{i64 2147582307, i64 2147582350, i64 2147582390}
!5336 = !DILocation(line: 67, column: 1, scope: !5222)
!5337 = !{i64 2147582518, i64 2147582561, i64 2147582601}
!5338 = !DILocation(line: 68, column: 1, scope: !5222)
!5339 = !{i64 2147582753, i64 2147582796, i64 2147582836}
!5340 = !DILocation(line: 69, column: 1, scope: !5222)
!5341 = !{i64 2147582982, i64 2147583025, i64 2147583065}
!5342 = !DILocation(line: 70, column: 1, scope: !5222)
!5343 = !{i64 2147583220, i64 2147583263, i64 2147583303}
!5344 = !DILocation(line: 71, column: 1, scope: !5222)
!5345 = !{i64 2147583452, i64 2147583495, i64 2147583535}
!5346 = !DILocation(line: 72, column: 1, scope: !5222)
!5347 = !{i64 2147583678, i64 2147583721, i64 2147583761}
!5348 = !DILocation(line: 73, column: 1, scope: !5222)
!5349 = !{i64 2147583895, i64 2147583938, i64 2147583978}
!5350 = !DILocation(line: 74, column: 1, scope: !5222)
!5351 = !{i64 2147584127, i64 2147584170, i64 2147584210}
!5352 = !DILocation(line: 75, column: 1, scope: !5222)
!5353 = !{i64 2147584353, i64 2147584396, i64 2147584436}
!5354 = !DILocation(line: 76, column: 1, scope: !5222)
!5355 = !{i64 2147584567, i64 2147584610, i64 2147584650}
!5356 = !DILocation(line: 77, column: 1, scope: !5222)
!5357 = !{i64 2147584787, i64 2147584830, i64 2147584870}
!5358 = !DILocation(line: 78, column: 1, scope: !5222)
!5359 = !{i64 2147585019, i64 2147585062, i64 2147585102}
!5360 = !DILocation(line: 79, column: 1, scope: !5222)
!5361 = !{i64 2147585227, i64 2147585270, i64 2147585310}
!5362 = !DILocation(line: 80, column: 1, scope: !5222)
!5363 = !{i64 2147585432, i64 2147585475, i64 2147585515}
!5364 = !DILocation(line: 81, column: 1, scope: !5222)
!5365 = !{i64 2147585649, i64 2147585692, i64 2147585732}
!5366 = !DILocation(line: 82, column: 1, scope: !5222)
!5367 = !{i64 2147585863, i64 2147585906, i64 2147585946}
!5368 = !DILocation(line: 83, column: 1, scope: !5222)
!5369 = !{i64 2147586089, i64 2147586132, i64 2147586172}
!5370 = !DILocation(line: 84, column: 1, scope: !5222)
!5371 = !{i64 2147586309, i64 2147586352, i64 2147586392}
!5372 = !DILocation(line: 85, column: 1, scope: !5222)
!5373 = !{i64 2147586514, i64 2147586557, i64 2147586597}
!5374 = !DILocation(line: 86, column: 1, scope: !5222)
!5375 = !{i64 2147586746, i64 2147586789, i64 2147586829}
!5376 = !DILocation(line: 87, column: 1, scope: !5222)
!5377 = !{i64 2147586981, i64 2147587024, i64 2147587064}
!5378 = !DILocation(line: 88, column: 1, scope: !5222)
!5379 = !{i64 2147591292, i64 2147591335, i64 2147591375}
!5380 = !DILocation(line: 89, column: 1, scope: !5222)
!5381 = !{i64 2147591542, i64 2147591585, i64 2147591625}
!5382 = !DILocation(line: 90, column: 1, scope: !5222)
!5383 = !{i64 2147591780, i64 2147591823, i64 2147591863}
!5384 = !DILocation(line: 91, column: 1, scope: !5222)
!5385 = !{i64 2147591991, i64 2147592034, i64 2147592074}
!5386 = !DILocation(line: 92, column: 1, scope: !5222)
!5387 = !{i64 2147592208, i64 2147592251, i64 2147592291}
!5388 = !DILocation(line: 93, column: 1, scope: !5222)
!5389 = !{i64 2147592404, i64 2147592447, i64 2147592487}
!5390 = !DILocation(line: 94, column: 1, scope: !5222)
!5391 = !{i64 2147592606, i64 2147592649, i64 2147592689}
!5392 = !DILocation(line: 95, column: 1, scope: !5222)
!5393 = !{i64 2147592799, i64 2147592842, i64 2147592882}
!5394 = !DILocation(line: 96, column: 1, scope: !5222)
!5395 = !{i64 2147593007, i64 2147593050, i64 2147593090}
!5396 = !DILocation(line: 97, column: 1, scope: !5222)
!5397 = !{i64 2147593203, i64 2147593246, i64 2147593286}
!5398 = !DILocation(line: 98, column: 1, scope: !5222)
!5399 = !{i64 2147593453, i64 2147593496, i64 2147593536}
!5400 = !DILocation(line: 99, column: 1, scope: !5222)
!5401 = !{i64 2147593664, i64 2147593707, i64 2147593747}
!5402 = !DILocation(line: 100, column: 1, scope: !5222)
!5403 = !{i64 2147593863, i64 2147593906, i64 2147593946}
!5404 = !DILocation(line: 101, column: 1, scope: !5222)
!5405 = !{i64 2147594038, i64 2147594081, i64 2147594121}
!5406 = !DILocation(line: 102, column: 1, scope: !5222)
!5407 = !{i64 2147594222, i64 2147594265, i64 2147594305}
!5408 = !DILocation(line: 103, column: 1, scope: !5222)
!5409 = !{i64 2147594424, i64 2147594467, i64 2147594507}
!5410 = !DILocation(line: 104, column: 1, scope: !5222)
!5411 = !{i64 2147594605, i64 2147594648, i64 2147594688}
!5412 = !DILocation(line: 105, column: 1, scope: !5222)
!5413 = !{i64 2147594804, i64 2147594847, i64 2147594887}
!5414 = !DILocation(line: 106, column: 1, scope: !5222)
!5415 = !{i64 2147594970, i64 2147595013, i64 2147595053}
!5416 = !DILocation(line: 107, column: 1, scope: !5222)
!5417 = !{i64 2147595154, i64 2147595197, i64 2147595237}
!5418 = !DILocation(line: 108, column: 1, scope: !5222)
!5419 = !{i64 2147595344, i64 2147595387, i64 2147595427}
!5420 = !DILocation(line: 109, column: 1, scope: !5222)
!5421 = !{i64 2147595528, i64 2147595571, i64 2147595611}
!5422 = !DILocation(line: 110, column: 1, scope: !5222)
!5423 = !{i64 2147595742, i64 2147595785, i64 2147595825}
!5424 = !DILocation(line: 111, column: 1, scope: !5222)
!5425 = !{i64 2147595953, i64 2147595996, i64 2147596036}
!5426 = !DILocation(line: 112, column: 1, scope: !5222)
!5427 = !{i64 2147596176, i64 2147596219, i64 2147596259}
!5428 = !DILocation(line: 113, column: 1, scope: !5222)
!5429 = !{i64 2147596360, i64 2147596403, i64 2147596443}
!5430 = !DILocation(line: 114, column: 1, scope: !5222)
!5431 = !{i64 2147596574, i64 2147596617, i64 2147596657}
!5432 = !DILocation(line: 115, column: 1, scope: !5222)
!5433 = !{i64 2147596740, i64 2147596783, i64 2147596823}
!5434 = !DILocation(line: 116, column: 1, scope: !5222)
!5435 = !{i64 2147596921, i64 2147596964, i64 2147597004}
!5436 = !DILocation(line: 117, column: 1, scope: !5222)
!5437 = !{i64 2147597114, i64 2147597157, i64 2147597197}
!5438 = !DILocation(line: 118, column: 1, scope: !5222)
!5439 = !{i64 2147597340, i64 2147597383, i64 2147597423}
!5440 = !DILocation(line: 119, column: 1, scope: !5222)
!5441 = !{i64 2147597554, i64 2147597597, i64 2147597637}
!5442 = !DILocation(line: 120, column: 1, scope: !5222)
!5443 = !{i64 2147597780, i64 2147597823, i64 2147597863}
!5444 = !DILocation(line: 121, column: 1, scope: !5222)
!5445 = !{i64 2147597997, i64 2147598040, i64 2147598080}
!5446 = !DILocation(line: 122, column: 1, scope: !5222)
!5447 = !{i64 2147598274, i64 2147598317, i64 2147598357}
!5448 = !DILocation(line: 123, column: 1, scope: !5222)
!5449 = !{i64 2147598500, i64 2147598543, i64 2147598583}
!5450 = !DILocation(line: 124, column: 1, scope: !5222)
!5451 = !{i64 2147598708, i64 2147598751, i64 2147598791}
!5452 = !DILocation(line: 125, column: 1, scope: !5222)
!5453 = !{i64 2147598904, i64 2147598947, i64 2147598987}
!5454 = !DILocation(line: 126, column: 1, scope: !5222)
!5455 = !{i64 2147599169, i64 2147599212, i64 2147599252}
!5456 = !DILocation(line: 127, column: 1, scope: !5222)
!5457 = !{i64 2147599383, i64 2147599426, i64 2147599466}
!5458 = !DILocation(line: 128, column: 1, scope: !5222)
!5459 = !{i64 2147599558, i64 2147599601, i64 2147599641}
!5460 = !DILocation(line: 129, column: 1, scope: !5222)
!5461 = !{i64 2147599812, i64 2147599855, i64 2147599895}
!5462 = !DILocation(line: 130, column: 1, scope: !5222)
!5463 = !{i64 2147600011, i64 2147600054, i64 2147600094}
!5464 = !DILocation(line: 131, column: 1, scope: !5222)
!5465 = !{i64 2147604314, i64 2147604357, i64 2147604397}
!5466 = !DILocation(line: 132, column: 1, scope: !5222)
!5467 = !{i64 2147604477, i64 2147604520, i64 2147604560}
!5468 = !DILocation(line: 133, column: 1, scope: !5222)
!5469 = !{i64 2147604664, i64 2147604707, i64 2147604747}
!5470 = !DILocation(line: 134, column: 1, scope: !5222)
!5471 = !{i64 2147604857, i64 2147604900, i64 2147604940}
!5472 = !DILocation(line: 135, column: 1, scope: !5222)
!5473 = !{i64 2147605040, i64 2147605083, i64 2147605123}
!5474 = !DILocation(line: 136, column: 1, scope: !5222)
!5475 = !{i64 2147605254, i64 2147605297, i64 2147605337}
!5476 = !DILocation(line: 137, column: 1, scope: !5222)
!5477 = !{i64 2147605465, i64 2147605508, i64 2147605548}
!5478 = !DILocation(line: 138, column: 1, scope: !5222)
!5479 = !{i64 2147605685, i64 2147605728, i64 2147605768}
!5480 = !DILocation(line: 139, column: 1, scope: !5222)
!5481 = !{i64 2147605892, i64 2147605935, i64 2147605975}
!5482 = !DILocation(line: 140, column: 1, scope: !5222)
!5483 = !{i64 2147606165, i64 2147606208, i64 2147606248}
!5484 = !DILocation(line: 141, column: 1, scope: !5222)
!5485 = !{i64 2147606413, i64 2147606456, i64 2147606496}
!5486 = !DILocation(line: 142, column: 1, scope: !5222)
!5487 = !{i64 2147606612, i64 2147606655, i64 2147606695}
!5488 = !DILocation(line: 143, column: 1, scope: !5222)
!5489 = !{i64 2147606847, i64 2147606890, i64 2147606930}
!5490 = !DILocation(line: 144, column: 1, scope: !5222)
!5491 = !{i64 2147607097, i64 2147607140, i64 2147607180}
!5492 = !DILocation(line: 145, column: 1, scope: !5222)
!5493 = !{i64 2147607299, i64 2147607342, i64 2147607382}
!5494 = !DILocation(line: 146, column: 1, scope: !5222)
!5495 = !{i64 2147607522, i64 2147607565, i64 2147607605}
!5496 = !DILocation(line: 147, column: 1, scope: !5222)
!5497 = !{i64 2147607736, i64 2147607779, i64 2147607819}
!5498 = !DILocation(line: 148, column: 1, scope: !5222)
!5499 = !{i64 2147607980, i64 2147608023, i64 2147608063}
!5500 = !DILocation(line: 149, column: 1, scope: !5222)
!5501 = !{i64 2147608209, i64 2147608252, i64 2147608292}
!5502 = !DILocation(line: 150, column: 1, scope: !5222)
!5503 = !{i64 2147608438, i64 2147608481, i64 2147608521}
!5504 = !DILocation(line: 151, column: 1, scope: !5222)
!5505 = !{i64 2147608646, i64 2147608689, i64 2147608729}
!5506 = !DILocation(line: 152, column: 1, scope: !5222)
!5507 = !{i64 2147608884, i64 2147608927, i64 2147608967}
!5508 = !DILocation(line: 153, column: 1, scope: !5222)
!5509 = !{i64 2147609110, i64 2147609153, i64 2147609193}
!5510 = !DILocation(line: 154, column: 1, scope: !5222)
!5511 = !{i64 2147609369, i64 2147609412, i64 2147609452}
!5512 = !DILocation(line: 155, column: 1, scope: !5222)
!5513 = !{i64 2147609589, i64 2147609632, i64 2147609672}
!5514 = !DILocation(line: 156, column: 1, scope: !5222)
!5515 = !{i64 2147609821, i64 2147609864, i64 2147609904}
!5516 = !DILocation(line: 157, column: 1, scope: !5222)
!5517 = !{i64 2147610062, i64 2147610105, i64 2147610145}
!5518 = !DILocation(line: 158, column: 1, scope: !5222)
!5519 = !{i64 2147610303, i64 2147610346, i64 2147610386}
!5520 = !DILocation(line: 159, column: 1, scope: !5222)
!5521 = !{i64 2147610526, i64 2147610569, i64 2147610609}
!5522 = !DILocation(line: 160, column: 1, scope: !5222)
!5523 = !{i64 2147610743, i64 2147610786, i64 2147610826}
!5524 = !DILocation(line: 161, column: 1, scope: !5222)
!5525 = !{i64 2147610984, i64 2147611027, i64 2147611067}
!5526 = !DILocation(line: 162, column: 1, scope: !5222)
!5527 = !{i64 2147611171, i64 2147611214, i64 2147611254}
!5528 = !DILocation(line: 163, column: 1, scope: !5222)
!5529 = !{i64 2147611358, i64 2147611401, i64 2147611441}
!5530 = !DILocation(line: 164, column: 1, scope: !5222)
!5531 = !{i64 2147611521, i64 2147611564, i64 2147611604}
!5532 = !DILocation(line: 165, column: 1, scope: !5222)
!5533 = !{i64 2147611780, i64 2147611823, i64 2147611863}
!5534 = !DILocation(line: 166, column: 1, scope: !5222)
!5535 = !{i64 2147612003, i64 2147612046, i64 2147612086}
!5536 = !DILocation(line: 167, column: 1, scope: !5222)
!5537 = !{i64 2147612232, i64 2147612275, i64 2147612315}
!5538 = !DILocation(line: 168, column: 1, scope: !5222)
!5539 = !{i64 2147612428, i64 2147612471, i64 2147612511}
!5540 = !DILocation(line: 169, column: 1, scope: !5222)
!5541 = !{i64 2147612640, i64 2147612683, i64 2147612723}
!5542 = !DILocation(line: 170, column: 1, scope: !5222)
!5543 = !{i64 2147616922, i64 2147616965, i64 2147617005}
!5544 = !DILocation(line: 171, column: 1, scope: !5222)
!5545 = !{i64 2147617136, i64 2147617179, i64 2147617219}
!5546 = !DILocation(line: 172, column: 1, scope: !5222)
!5547 = !{i64 2147617326, i64 2147617369, i64 2147617409}
!5548 = !DILocation(line: 173, column: 1, scope: !5222)
!5549 = !{i64 2147617525, i64 2147617568, i64 2147617608}
!5550 = !DILocation(line: 174, column: 1, scope: !5222)
!5551 = !{i64 2147617730, i64 2147617773, i64 2147617813}
!5552 = !DILocation(line: 175, column: 1, scope: !5222)
!5553 = !{i64 2147617950, i64 2147617993, i64 2147618033}
!5554 = !DILocation(line: 176, column: 1, scope: !5222)
!5555 = !{i64 2147618151, i64 2147618194, i64 2147618234}
!5556 = !DILocation(line: 177, column: 1, scope: !5222)
!5557 = !{i64 2147618350, i64 2147618393, i64 2147618433}
!5558 = !DILocation(line: 178, column: 1, scope: !5222)
!5559 = !{i64 2147618555, i64 2147618598, i64 2147618638}
!5560 = !DILocation(line: 179, column: 1, scope: !5222)
!5561 = !{i64 2147618724, i64 2147618767, i64 2147618807}
!5562 = !DILocation(line: 180, column: 1, scope: !5222)
!5563 = !{i64 2147618908, i64 2147618951, i64 2147618991}
!5564 = !DILocation(line: 181, column: 1, scope: !5222)
!5565 = !{i64 2147619092, i64 2147619135, i64 2147619175}
!5566 = !DILocation(line: 182, column: 1, scope: !5222)
!5567 = !{i64 2147619279, i64 2147619322, i64 2147619362}
!5568 = !DILocation(line: 183, column: 1, scope: !5222)
!5569 = !{i64 2147619463, i64 2147619506, i64 2147619546}
!5570 = !DILocation(line: 184, column: 1, scope: !5222)
!5571 = !{i64 2147619701, i64 2147619744, i64 2147619784}
!5572 = !DILocation(line: 185, column: 1, scope: !5222)
!5573 = !{i64 2147619931, i64 2147619974, i64 2147620014}
!5574 = !DILocation(line: 186, column: 1, scope: !5222)
!5575 = !{i64 2147620160, i64 2147620203, i64 2147620243}
!5576 = !DILocation(line: 187, column: 1, scope: !5222)
!5577 = !{i64 2147620347, i64 2147620390, i64 2147620430}
!5578 = !DILocation(line: 188, column: 1, scope: !5222)
!5579 = !{i64 2147620543, i64 2147620586, i64 2147620626}
!5580 = !DILocation(line: 189, column: 1, scope: !5222)
!5581 = !{i64 2147620751, i64 2147620794, i64 2147620834}
!5582 = !DILocation(line: 190, column: 1, scope: !5222)
!5583 = !{i64 2147620963, i64 2147621006, i64 2147621046}
!5584 = !DILocation(line: 191, column: 1, scope: !5222)
!5585 = !{i64 2147621162, i64 2147621205, i64 2147621245}
!5586 = !DILocation(line: 192, column: 1, scope: !5222)
!5587 = !{i64 2147621400, i64 2147621443, i64 2147621483}
!5588 = !DILocation(line: 193, column: 1, scope: !5222)
!5589 = !{i64 2147621596, i64 2147621639, i64 2147621679}
!5590 = !DILocation(line: 194, column: 1, scope: !5222)
!5591 = !{i64 2147621798, i64 2147621841, i64 2147621881}
!5592 = !DILocation(line: 195, column: 1, scope: !5222)
!5593 = !{i64 2147621991, i64 2147622034, i64 2147622074}
!5594 = !DILocation(line: 196, column: 1, scope: !5222)
!5595 = !{i64 2147622225, i64 2147622268, i64 2147622308}
!5596 = !DILocation(line: 197, column: 1, scope: !5222)
!5597 = !{i64 2147622388, i64 2147622431, i64 2147622471}
!5598 = !DILocation(line: 198, column: 1, scope: !5222)
!5599 = !{i64 2147622627, i64 2147622670, i64 2147622710}
!5600 = !DILocation(line: 199, column: 1, scope: !5222)
!5601 = !{i64 2147622866, i64 2147622909, i64 2147622949}
!5602 = !DILocation(line: 200, column: 1, scope: !5222)
!5603 = !{i64 2147623102, i64 2147623145, i64 2147623185}
!5604 = !DILocation(line: 201, column: 1, scope: !5222)
!5605 = !{i64 2147623332, i64 2147623375, i64 2147623415}
!5606 = !DILocation(line: 202, column: 1, scope: !5222)
!5607 = !{i64 2147623519, i64 2147623562, i64 2147623602}
!5608 = !DILocation(line: 203, column: 1, scope: !5222)
!5609 = !{i64 2147623718, i64 2147623761, i64 2147623801}
!5610 = !DILocation(line: 204, column: 1, scope: !5222)
!5611 = !{i64 2147623989, i64 2147624032, i64 2147624072}
!5612 = !DILocation(line: 205, column: 1, scope: !5222)
!5613 = !{i64 2147624164, i64 2147624207, i64 2147624247}
!5614 = !DILocation(line: 206, column: 1, scope: !5222)
!5615 = !{i64 2147624398, i64 2147624441, i64 2147624481}
!5616 = !DILocation(line: 207, column: 1, scope: !5222)
!5617 = !{i64 2147624606, i64 2147624649, i64 2147624689}
!5618 = !DILocation(line: 208, column: 1, scope: !5222)
!5619 = !{i64 2147624805, i64 2147624848, i64 2147624888}
!5620 = !DILocation(line: 209, column: 1, scope: !5222)
!5621 = !{i64 2147625023, i64 2147625066, i64 2147625106}
!5622 = !DILocation(line: 210, column: 1, scope: !5222)
!5623 = !{i64 2147625213, i64 2147625256, i64 2147625296}
!5624 = !DILocation(line: 211, column: 1, scope: !5222)
!5625 = !{i64 2147625460, i64 2147625503, i64 2147625543}
!5626 = !DILocation(line: 212, column: 1, scope: !5222)
!5627 = !{i64 2147625656, i64 2147625699, i64 2147625739}
!5628 = !DILocation(line: 213, column: 1, scope: !5222)
!5629 = !{i64 2147625862, i64 2147625905, i64 2147625945}
!5630 = !DILocation(line: 214, column: 1, scope: !5222)
!5631 = !{i64 2147630128, i64 2147630171, i64 2147630211}
!5632 = !DILocation(line: 215, column: 1, scope: !5222)
!5633 = !{i64 2147630354, i64 2147630397, i64 2147630437}
!5634 = !DILocation(line: 216, column: 1, scope: !5222)
!5635 = !{i64 2147630586, i64 2147630629, i64 2147630669}
!5636 = !DILocation(line: 217, column: 1, scope: !5222)
!5637 = !{i64 2147630770, i64 2147630813, i64 2147630853}
!5638 = !DILocation(line: 218, column: 1, scope: !5222)
!5639 = !{i64 2147630979, i64 2147631022, i64 2147631062}
!5640 = !DILocation(line: 219, column: 1, scope: !5222)
!5641 = !{i64 2147631163, i64 2147631206, i64 2147631246}
!5642 = !DILocation(line: 220, column: 1, scope: !5222)
!5643 = !{i64 2147631389, i64 2147631432, i64 2147631472}
!5644 = !DILocation(line: 221, column: 1, scope: !5222)
!5645 = !{i64 2147631615, i64 2147631658, i64 2147631698}
!5646 = !DILocation(line: 222, column: 1, scope: !5222)
!5647 = !{i64 2147631841, i64 2147631884, i64 2147631924}
!5648 = !DILocation(line: 223, column: 1, scope: !5222)
!5649 = !{i64 2147632067, i64 2147632110, i64 2147632150}
!5650 = !DILocation(line: 224, column: 1, scope: !5222)
!5651 = !{i64 2147632293, i64 2147632336, i64 2147632376}
!5652 = !DILocation(line: 225, column: 1, scope: !5222)
!5653 = !{i64 2147632525, i64 2147632568, i64 2147632608}
!5654 = !DILocation(line: 226, column: 1, scope: !5222)
!5655 = !{i64 2147632763, i64 2147632806, i64 2147632846}
!5656 = !DILocation(line: 227, column: 1, scope: !5222)
!5657 = !{i64 2147632983, i64 2147633026, i64 2147633066}
!5658 = !DILocation(line: 228, column: 1, scope: !5222)
!5659 = !{i64 2147633227, i64 2147633270, i64 2147633310}
!5660 = !DILocation(line: 229, column: 1, scope: !5222)
!5661 = !{i64 2147633468, i64 2147633511, i64 2147633551}
!5662 = !DILocation(line: 230, column: 1, scope: !5222)
!5663 = !{i64 2147633703, i64 2147633746, i64 2147633786}
!5664 = !DILocation(line: 231, column: 1, scope: !5222)
!5665 = !{i64 2147633935, i64 2147633978, i64 2147634018}
!5666 = !DILocation(line: 232, column: 1, scope: !5222)
!5667 = !{i64 2147634137, i64 2147634180, i64 2147634220}
!5668 = !DILocation(line: 233, column: 1, scope: !5222)
!5669 = !{i64 2147634387, i64 2147634430, i64 2147634470}
!5670 = !DILocation(line: 234, column: 1, scope: !5222)
!5671 = !{i64 2147634625, i64 2147634668, i64 2147634708}
!5672 = !DILocation(line: 235, column: 1, scope: !5222)
!5673 = !{i64 2147634809, i64 2147634852, i64 2147634892}
!5674 = !DILocation(line: 236, column: 1, scope: !5222)
!5675 = !{i64 2147635033, i64 2147635076, i64 2147635116}
!5676 = !DILocation(line: 237, column: 1, scope: !5222)
!5677 = !{i64 2147635271, i64 2147635314, i64 2147635354}
!5678 = !DILocation(line: 238, column: 1, scope: !5222)
!5679 = !{i64 2147635509, i64 2147635552, i64 2147635592}
!5680 = !DILocation(line: 239, column: 1, scope: !5222)
!5681 = !{i64 2147635702, i64 2147635745, i64 2147635785}
!5682 = !DILocation(line: 240, column: 1, scope: !5222)
!5683 = !{i64 2147635955, i64 2147635998, i64 2147636038}
!5684 = !DILocation(line: 241, column: 1, scope: !5222)
!5685 = !{i64 2147636169, i64 2147636212, i64 2147636252}
!5686 = !DILocation(line: 242, column: 1, scope: !5222)
!5687 = !{i64 2147636377, i64 2147636420, i64 2147636460}
!5688 = !DILocation(line: 243, column: 1, scope: !5222)
!5689 = !{i64 2147636567, i64 2147636610, i64 2147636650}
!5690 = !DILocation(line: 244, column: 1, scope: !5222)
!5691 = !{i64 2147636781, i64 2147636824, i64 2147636864}
!5692 = !DILocation(line: 245, column: 1, scope: !5222)
!5693 = !{i64 2147637043, i64 2147637086, i64 2147637126}
!5694 = !DILocation(line: 246, column: 1, scope: !5222)
!5695 = !{i64 2147637254, i64 2147637297, i64 2147637337}
!5696 = !DILocation(line: 247, column: 1, scope: !5222)
!5697 = !{i64 2147637498, i64 2147637541, i64 2147637581}
!5698 = !DILocation(line: 248, column: 1, scope: !5222)
!5699 = !{i64 2147637709, i64 2147637752, i64 2147637792}
!5700 = !DILocation(line: 249, column: 1, scope: !5222)
!5701 = !{i64 2147637938, i64 2147637981, i64 2147638021}
!5702 = !DILocation(line: 250, column: 1, scope: !5222)
!5703 = !{i64 2147638203, i64 2147638246, i64 2147638286}
!5704 = !DILocation(line: 251, column: 1, scope: !5222)
!5705 = !{i64 2147638408, i64 2147638451, i64 2147638491}
!5706 = !DILocation(line: 252, column: 1, scope: !5222)
!5707 = !{i64 2147642665, i64 2147642708, i64 2147642748}
!5708 = !DILocation(line: 253, column: 1, scope: !5222)
!5709 = !{i64 2147642888, i64 2147642931, i64 2147642971}
!5710 = !DILocation(line: 254, column: 1, scope: !5222)
!5711 = !{i64 2147643051, i64 2147643094, i64 2147643134}
!5712 = !DILocation(line: 255, column: 1, scope: !5222)
!5713 = !{i64 2147643256, i64 2147643299, i64 2147643339}
!5714 = !DILocation(line: 256, column: 1, scope: !5222)
!5715 = !{i64 2147643476, i64 2147643519, i64 2147643559}
!5716 = !DILocation(line: 257, column: 1, scope: !5222)
!5717 = !{i64 2147643690, i64 2147643733, i64 2147643773}
!5718 = !DILocation(line: 258, column: 1, scope: !5222)
!5719 = !{i64 2147643904, i64 2147643947, i64 2147643987}
!5720 = !DILocation(line: 259, column: 1, scope: !5222)
!5721 = !{i64 2147644115, i64 2147644158, i64 2147644198}
!5722 = !DILocation(line: 260, column: 1, scope: !5222)
!5723 = !{i64 2147644308, i64 2147644351, i64 2147644391}
!5724 = !DILocation(line: 261, column: 1, scope: !5222)
!5725 = !{i64 2147644507, i64 2147644550, i64 2147644590}
!5726 = !DILocation(line: 262, column: 1, scope: !5222)
!5727 = !{i64 2147644703, i64 2147644746, i64 2147644786}
!5728 = !DILocation(line: 263, column: 1, scope: !5222)
!5729 = !{i64 2147644902, i64 2147644945, i64 2147644985}
!5730 = !DILocation(line: 264, column: 1, scope: !5222)
!5731 = !{i64 2147645126, i64 2147645169, i64 2147645209}
!5732 = !DILocation(line: 265, column: 1, scope: !5222)
!5733 = !{i64 2147645350, i64 2147645393, i64 2147645433}
!5734 = !DILocation(line: 266, column: 1, scope: !5222)
!5735 = !{i64 2147645522, i64 2147645565, i64 2147645605}
!5736 = !DILocation(line: 267, column: 1, scope: !5222)
!5737 = !{i64 2147645715, i64 2147645758, i64 2147645798}
!5738 = !DILocation(line: 268, column: 1, scope: !5222)
!5739 = !{i64 2147645911, i64 2147645954, i64 2147645994}
!5740 = !DILocation(line: 269, column: 1, scope: !5222)
!5741 = !{i64 2147646138, i64 2147646181, i64 2147646221}
!5742 = !DILocation(line: 270, column: 1, scope: !5222)
!5743 = !{i64 2147646355, i64 2147646398, i64 2147646438}
!5744 = !DILocation(line: 271, column: 1, scope: !5222)
!5745 = !{i64 2147646647, i64 2147646690, i64 2147646730}
!5746 = !DILocation(line: 272, column: 1, scope: !5222)
!5747 = !{i64 2147646879, i64 2147646922, i64 2147646962}
!5748 = !DILocation(line: 273, column: 1, scope: !5222)
!5749 = !{i64 2147647096, i64 2147647139, i64 2147647179}
!5750 = !DILocation(line: 274, column: 1, scope: !5222)
!5751 = !{i64 2147647303, i64 2147647346, i64 2147647386}
!5752 = !DILocation(line: 275, column: 1, scope: !5222)
!5753 = !{i64 2147647504, i64 2147647547, i64 2147647587}
!5754 = !DILocation(line: 276, column: 1, scope: !5222)
!5755 = !{i64 2147647736, i64 2147647779, i64 2147647819}
!5756 = !DILocation(line: 277, column: 1, scope: !5222)
!5757 = !{i64 2147647944, i64 2147647987, i64 2147648027}
!5758 = !DILocation(line: 278, column: 1, scope: !5222)
!5759 = !{i64 2147648134, i64 2147648177, i64 2147648217}
!5760 = !DILocation(line: 279, column: 1, scope: !5222)
!5761 = !{i64 2147648360, i64 2147648403, i64 2147648443}
!5762 = !DILocation(line: 280, column: 1, scope: !5222)
!5763 = !{i64 2147648549, i64 2147648592, i64 2147648632}
!5764 = !DILocation(line: 281, column: 1, scope: !5222)
!5765 = !{i64 2147648820, i64 2147648863, i64 2147648903}
!5766 = !DILocation(line: 282, column: 1, scope: !5222)
!5767 = !{i64 2147649040, i64 2147649083, i64 2147649123}
!5768 = !DILocation(line: 283, column: 1, scope: !5222)
!5769 = !{i64 2147649293, i64 2147649336, i64 2147649376}
!5770 = !DILocation(line: 284, column: 1, scope: !5222)
!5771 = !{i64 2147649501, i64 2147649544, i64 2147649584}
!5772 = !DILocation(line: 285, column: 1, scope: !5222)
!5773 = !{i64 2147649733, i64 2147649776, i64 2147649816}
!5774 = !DILocation(line: 286, column: 1, scope: !5222)
!5775 = !{i64 2147649944, i64 2147649987, i64 2147650027}
!5776 = !DILocation(line: 287, column: 1, scope: !5222)
!5777 = !{i64 2147650134, i64 2147650177, i64 2147650217}
!5778 = !DILocation(line: 288, column: 1, scope: !5222)
!5779 = !{i64 2147650348, i64 2147650391, i64 2147650431}
!5780 = !DILocation(line: 289, column: 1, scope: !5222)
!5781 = !{i64 2147650547, i64 2147650590, i64 2147650630}
!5782 = !DILocation(line: 290, column: 1, scope: !5222)
!5783 = !{i64 2147650734, i64 2147650777, i64 2147650817}
!5784 = !DILocation(line: 291, column: 1, scope: !5222)
!5785 = !{i64 2147650942, i64 2147650985, i64 2147651025}
!5786 = !DILocation(line: 292, column: 1, scope: !5222)
!5787 = !{i64 2147651171, i64 2147651214, i64 2147651254}
!5788 = !DILocation(line: 293, column: 1, scope: !5222)
!5789 = !{i64 2147651373, i64 2147651416, i64 2147651456}
!5790 = !DILocation(line: 294, column: 1, scope: !5222)
!5791 = !{i64 2147655633, i64 2147655676, i64 2147655716}
!5792 = !DILocation(line: 295, column: 1, scope: !5222)
!5793 = !{i64 2147655850, i64 2147655893, i64 2147655933}
!5794 = !DILocation(line: 297, column: 1, scope: !5222)
!5795 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5796)
!5796 = !{!5797, !5798}
!5797 = !DILocalVariable(name: "arg", arg: 1, scope: !5795, file: !129, line: 30, type: !138)
!5798 = !DILocalVariable(name: "key", scope: !5795, file: !129, line: 32, type: !121)
!5799 = !DILocation(line: 0, scope: !5795)
!5800 = !DILocation(line: 37, column: 2, scope: !5795)
!5801 = !DILocation(line: 38, column: 2, scope: !5795)
!5802 = !DILocation(line: 55, column: 2, scope: !5803, inlinedAt: !5810)
!5803 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5804, file: !5804, line: 42, type: !5805, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5807)
!5804 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5805 = !DISubroutineType(types: !5806)
!5806 = !{!32}
!5807 = !{!5808, !5809}
!5808 = !DILocalVariable(name: "key", scope: !5803, file: !5804, line: 44, type: !32)
!5809 = !DILocalVariable(name: "tmp", scope: !5803, file: !5804, line: 53, type: !32)
!5810 = distinct !DILocation(line: 40, column: 8, scope: !5795)
!5811 = !{i64 2101660}
!5812 = !DILocation(line: 0, scope: !5803, inlinedAt: !5810)
!5813 = !DILocalVariable(name: "key", arg: 1, scope: !5814, file: !5804, line: 84, type: !32)
!5814 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5804, file: !5804, line: 84, type: !5815, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5817)
!5815 = !DISubroutineType(types: !5816)
!5816 = !{null, !32}
!5817 = !{!5813}
!5818 = !DILocation(line: 0, scope: !5814, inlinedAt: !5819)
!5819 = distinct !DILocation(line: 47, column: 2, scope: !5795)
!5820 = !DILocation(line: 95, column: 2, scope: !5814, inlinedAt: !5819)
!5821 = !{i64 2102477}
!5822 = !DILocation(line: 51, column: 18, scope: !5795)
!5823 = !DILocation(line: 53, column: 2, scope: !5795)
!5824 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5825, file: !5825, line: 1609, type: !3244, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !461)
!5825 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5826 = !DILocation(line: 1611, column: 3, scope: !5824)
!5827 = !DILocation(line: 1612, column: 1, scope: !5824)
!5828 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5825, file: !5825, line: 1629, type: !3244, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !461)
!5829 = !DILocation(line: 1631, column: 3, scope: !5828)
!5830 = !DILocation(line: 1632, column: 1, scope: !5828)
!5831 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !5832)
!5832 = !{!5833}
!5833 = !DILocalVariable(name: "dev", arg: 1, scope: !5831, file: !171, line: 26, type: !179)
!5834 = !DILocation(line: 0, scope: !5831)
!5835 = !DILocation(line: 68, column: 2, scope: !5831)
!5836 = distinct !DISubprogram(name: "tty_write", scope: !5837, file: !5837, line: 100, type: !5838, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5881)
!5837 = !DIFile(filename: "zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5838 = !DISubroutineType(types: !5839)
!5839 = !{!5840, !5842, !13, !344}
!5840 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !5841, line: 28, baseType: !103)
!5841 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5843, size: 32)
!5843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !295, line: 18, size: 544, elements: !5844)
!5844 = !{!5845, !5846, !5870, !5871, !5872, !5873, !5874, !5875, !5876, !5877, !5878, !5879, !5880}
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !5843, file: !295, line: 19, baseType: !2640, size: 32)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !5843, file: !295, line: 21, baseType: !5847, size: 128, offset: 32)
!5847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !300, line: 2909, size: 128, elements: !5848)
!5848 = !{!5849, !5868, !5869}
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5847, file: !300, line: 2910, baseType: !5850, size: 64)
!5850 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !5851)
!5851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !5852)
!5852 = !{!5853}
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5851, file: !304, line: 232, baseType: !5854, size: 64)
!5854 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !5855)
!5855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !5856)
!5856 = !{!5857, !5863}
!5857 = !DIDerivedType(tag: DW_TAG_member, scope: !5855, file: !309, line: 38, baseType: !5858, size: 32)
!5858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5855, file: !309, line: 38, size: 32, elements: !5859)
!5859 = !{!5860, !5862}
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5858, file: !309, line: 39, baseType: !5861, size: 32)
!5861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5855, size: 32)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5858, file: !309, line: 40, baseType: !5861, size: 32)
!5863 = !DIDerivedType(tag: DW_TAG_member, scope: !5855, file: !309, line: 42, baseType: !5864, size: 32, offset: 32)
!5864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5855, file: !309, line: 42, size: 32, elements: !5865)
!5865 = !{!5866, !5867}
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5864, file: !309, line: 43, baseType: !5861, size: 32)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5864, file: !309, line: 44, baseType: !5861, size: 32)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5847, file: !300, line: 2911, baseType: !32, size: 32, offset: 64)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5847, file: !300, line: 2912, baseType: !32, size: 32, offset: 96)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !5843, file: !295, line: 22, baseType: !261, size: 32, offset: 160)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !5843, file: !295, line: 23, baseType: !121, size: 32, offset: 192)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !5843, file: !295, line: 24, baseType: !328, size: 16, offset: 224)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !5843, file: !295, line: 24, baseType: !328, size: 16, offset: 240)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !5843, file: !295, line: 25, baseType: !332, size: 32, offset: 256)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !5843, file: !295, line: 27, baseType: !5847, size: 128, offset: 288)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !5843, file: !295, line: 28, baseType: !261, size: 32, offset: 416)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !5843, file: !295, line: 29, baseType: !121, size: 32, offset: 448)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !5843, file: !295, line: 30, baseType: !328, size: 16, offset: 480)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !5843, file: !295, line: 30, baseType: !328, size: 16, offset: 496)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !5843, file: !295, line: 31, baseType: !332, size: 32, offset: 512)
!5881 = !{!5882, !5883, !5884, !5885, !5886, !5887}
!5882 = !DILocalVariable(name: "tty", arg: 1, scope: !5836, file: !5837, line: 100, type: !5842)
!5883 = !DILocalVariable(name: "buf", arg: 2, scope: !5836, file: !5837, line: 100, type: !13)
!5884 = !DILocalVariable(name: "size", arg: 3, scope: !5836, file: !5837, line: 100, type: !344)
!5885 = !DILocalVariable(name: "p", scope: !5836, file: !5837, line: 102, type: !255)
!5886 = !DILocalVariable(name: "out_size", scope: !5836, file: !5837, line: 103, type: !344)
!5887 = !DILocalVariable(name: "res", scope: !5836, file: !5837, line: 104, type: !103)
!5888 = !DILocation(line: 0, scope: !5836)
!5889 = !DILocation(line: 106, column: 11, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5836, file: !5837, line: 106, column: 6)
!5891 = !DILocation(line: 106, column: 25, scope: !5890)
!5892 = !DILocation(line: 106, column: 6, scope: !5836)
!5893 = !DILocation(line: 117, column: 2, scope: !5836)
!5894 = !DILocation(line: 110, column: 3, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5890, file: !5837, line: 106, column: 32)
!5896 = !DILocation(line: 110, column: 14, scope: !5895)
!5897 = !DILocation(line: 111, column: 23, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5895, file: !5837, line: 110, column: 18)
!5899 = !DILocation(line: 111, column: 35, scope: !5898)
!5900 = !DILocation(line: 111, column: 33, scope: !5898)
!5901 = !DILocation(line: 111, column: 4, scope: !5898)
!5902 = distinct !{!5902, !5894, !5903}
!5903 = !DILocation(line: 112, column: 3, scope: !5895)
!5904 = !DILocation(line: 117, column: 13, scope: !5836)
!5905 = !DILocation(line: 118, column: 26, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5836, file: !5837, line: 117, column: 17)
!5907 = !DILocation(line: 118, column: 9, scope: !5906)
!5908 = !DILocation(line: 119, column: 11, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5906, file: !5837, line: 119, column: 7)
!5910 = !DILocation(line: 119, column: 7, scope: !5906)
!5911 = !DILocation(line: 121, column: 17, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !5837, line: 121, column: 8)
!5913 = distinct !DILexicalBlock(scope: !5909, file: !5837, line: 119, column: 16)
!5914 = !DILocation(line: 121, column: 8, scope: !5913)
!5915 = !DILocation(line: 122, column: 13, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5912, file: !5837, line: 121, column: 23)
!5917 = !DILocation(line: 122, column: 5, scope: !5916)
!5918 = !DILocation(line: 122, column: 11, scope: !5916)
!5919 = !DILocation(line: 123, column: 5, scope: !5916)
!5920 = !DILocation(line: 118, column: 28, scope: !5906)
!5921 = !DILocation(line: 135, column: 11, scope: !5906)
!5922 = distinct !{!5922, !5893, !5923}
!5923 = !DILocation(line: 136, column: 2, scope: !5836)
!5924 = !DILocation(line: 139, column: 1, scope: !5836)
!5925 = distinct !DISubprogram(name: "uart_poll_out", scope: !5926, file: !5926, line: 95, type: !2657, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5927)
!5926 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!5927 = !{!5928, !5929}
!5928 = !DILocalVariable(name: "dev", arg: 1, scope: !5925, file: !5926, line: 95, type: !2640)
!5929 = !DILocalVariable(name: "out_char", arg: 2, scope: !5925, file: !5926, line: 95, type: !155)
!5930 = !DILocation(line: 0, scope: !5925)
!5931 = !DILocation(line: 105, column: 2, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5925, file: !5926, line: 105, column: 2)
!5933 = !{i64 2155102815}
!5934 = !DILocation(line: 106, column: 2, scope: !5925)
!5935 = !DILocation(line: 107, column: 1, scope: !5925)
!5936 = distinct !DISubprogram(name: "tty_putchar", scope: !5837, file: !5837, line: 69, type: !5937, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5939)
!5937 = !DISubroutineType(types: !5938)
!5938 = !{!103, !5842, !154}
!5939 = !{!5940, !5941, !5942, !5943, !5944}
!5940 = !DILocalVariable(name: "tty", arg: 1, scope: !5936, file: !5837, line: 69, type: !5842)
!5941 = !DILocalVariable(name: "c", arg: 2, scope: !5936, file: !5837, line: 69, type: !154)
!5942 = !DILocalVariable(name: "key", scope: !5936, file: !5837, line: 71, type: !32)
!5943 = !DILocalVariable(name: "tx_next", scope: !5936, file: !5837, line: 72, type: !103)
!5944 = !DILocalVariable(name: "res", scope: !5936, file: !5837, line: 73, type: !103)
!5945 = !DILocation(line: 0, scope: !5936)
!5946 = !DILocation(line: 75, column: 25, scope: !5936)
!5947 = !DILocation(line: 76, column: 5, scope: !5936)
!5948 = !DILocation(line: 77, column: 7, scope: !5936)
!5949 = !DILocation(line: 75, column: 8, scope: !5936)
!5950 = !DILocation(line: 78, column: 10, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5936, file: !5837, line: 78, column: 6)
!5952 = !DILocation(line: 78, column: 6, scope: !5936)
!5953 = !DILocation(line: 55, column: 2, scope: !5954, inlinedAt: !5958)
!5954 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5804, file: !5804, line: 42, type: !5805, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5955)
!5955 = !{!5956, !5957}
!5956 = !DILocalVariable(name: "key", scope: !5954, file: !5804, line: 44, type: !32)
!5957 = !DILocalVariable(name: "tmp", scope: !5954, file: !5804, line: 53, type: !32)
!5958 = distinct !DILocation(line: 82, column: 8, scope: !5936)
!5959 = !{i64 2224955}
!5960 = !DILocation(line: 0, scope: !5954, inlinedAt: !5958)
!5961 = !DILocation(line: 83, column: 17, scope: !5936)
!5962 = !DILocation(line: 83, column: 12, scope: !5936)
!5963 = !DILocation(line: 83, column: 24, scope: !5936)
!5964 = !DILocation(line: 84, column: 22, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5936, file: !5837, line: 84, column: 6)
!5966 = !DILocation(line: 84, column: 14, scope: !5965)
!5967 = !DILocation(line: 84, column: 6, scope: !5936)
!5968 = !DILocation(line: 87, column: 22, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5936, file: !5837, line: 87, column: 6)
!5970 = !DILocation(line: 87, column: 17, scope: !5969)
!5971 = !DILocation(line: 87, column: 14, scope: !5969)
!5972 = !DILocation(line: 87, column: 6, scope: !5936)
!5973 = !DILocalVariable(name: "key", arg: 1, scope: !5974, file: !5804, line: 84, type: !32)
!5974 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5804, file: !5804, line: 84, type: !5815, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !5975)
!5975 = !{!5973}
!5976 = !DILocation(line: 0, scope: !5974, inlinedAt: !5977)
!5977 = distinct !DILocation(line: 88, column: 3, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5969, file: !5837, line: 87, column: 30)
!5979 = !DILocation(line: 95, column: 2, scope: !5974, inlinedAt: !5977)
!5980 = !{i64 2225772}
!5981 = !DILocation(line: 89, column: 3, scope: !5978)
!5982 = !DILocation(line: 92, column: 7, scope: !5936)
!5983 = !DILocation(line: 92, column: 2, scope: !5936)
!5984 = !DILocation(line: 92, column: 31, scope: !5936)
!5985 = !DILocation(line: 93, column: 16, scope: !5936)
!5986 = !DILocation(line: 93, column: 14, scope: !5936)
!5987 = !DILocation(line: 0, scope: !5974, inlinedAt: !5988)
!5988 = distinct !DILocation(line: 95, column: 2, scope: !5936)
!5989 = !DILocation(line: 95, column: 2, scope: !5974, inlinedAt: !5988)
!5990 = !DILocation(line: 96, column: 26, scope: !5936)
!5991 = !DILocation(line: 96, column: 2, scope: !5936)
!5992 = !DILocation(line: 97, column: 2, scope: !5936)
!5993 = !DILocation(line: 98, column: 1, scope: !5936)
!5994 = distinct !DISubprogram(name: "z_errno", scope: !5995, file: !5995, line: 24, type: !5996, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !461)
!5995 = !DIFile(filename: "zephyr/include/generated/syscalls/errno_private.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!5996 = !DISubroutineType(types: !5997)
!5997 = !{!2618}
!5998 = !DILocation(line: 31, column: 2, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5994, file: !5995, line: 31, column: 2)
!6000 = !{i64 2154366965}
!6001 = !DILocation(line: 32, column: 9, scope: !5994)
!6002 = !DILocation(line: 32, column: 2, scope: !5994)
!6003 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !6004, file: !6004, line: 403, type: !6005, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6007)
!6004 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6005 = !DISubroutineType(types: !6006)
!6006 = !{!1605, !1605}
!6007 = !{!6008}
!6008 = !DILocalVariable(name: "t", arg: 1, scope: !6003, file: !6004, line: 403, type: !1605)
!6009 = !DILocation(line: 0, scope: !6003)
!6010 = !DILocalVariable(name: "t", arg: 1, scope: !6011, file: !6004, line: 102, type: !1605)
!6011 = distinct !DISubprogram(name: "z_tmcvt", scope: !6004, file: !6004, line: 102, type: !6012, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6014)
!6012 = !DISubroutineType(types: !6013)
!6013 = !{!1605, !1605, !121, !121, !157, !157, !157, !157}
!6014 = !{!6010, !6015, !6016, !6017, !6018, !6019, !6020, !6021, !6022, !6023, !6024}
!6015 = !DILocalVariable(name: "from_hz", arg: 2, scope: !6011, file: !6004, line: 102, type: !121)
!6016 = !DILocalVariable(name: "to_hz", arg: 3, scope: !6011, file: !6004, line: 103, type: !121)
!6017 = !DILocalVariable(name: "const_hz", arg: 4, scope: !6011, file: !6004, line: 103, type: !157)
!6018 = !DILocalVariable(name: "result32", arg: 5, scope: !6011, file: !6004, line: 104, type: !157)
!6019 = !DILocalVariable(name: "round_up", arg: 6, scope: !6011, file: !6004, line: 104, type: !157)
!6020 = !DILocalVariable(name: "round_off", arg: 7, scope: !6011, file: !6004, line: 105, type: !157)
!6021 = !DILocalVariable(name: "mul_ratio", scope: !6011, file: !6004, line: 107, type: !157)
!6022 = !DILocalVariable(name: "div_ratio", scope: !6011, file: !6004, line: 109, type: !157)
!6023 = !DILocalVariable(name: "off", scope: !6011, file: !6004, line: 116, type: !1605)
!6024 = !DILocalVariable(name: "rdivisor", scope: !6025, file: !6004, line: 119, type: !121)
!6025 = distinct !DILexicalBlock(scope: !6026, file: !6004, line: 118, column: 18)
!6026 = distinct !DILexicalBlock(scope: !6011, file: !6004, line: 118, column: 6)
!6027 = !DILocation(line: 0, scope: !6011, inlinedAt: !6028)
!6028 = distinct !DILocation(line: 406, column: 9, scope: !6003)
!6029 = !DILocation(line: 145, column: 13, scope: !6030, inlinedAt: !6028)
!6030 = distinct !DILexicalBlock(scope: !6031, file: !6004, line: 144, column: 10)
!6031 = distinct !DILexicalBlock(scope: !6032, file: !6004, line: 142, column: 7)
!6032 = distinct !DILexicalBlock(scope: !6033, file: !6004, line: 141, column: 24)
!6033 = distinct !DILexicalBlock(scope: !6034, file: !6004, line: 141, column: 13)
!6034 = distinct !DILexicalBlock(scope: !6011, file: !6004, line: 134, column: 6)
!6035 = !DILocation(line: 406, column: 2, scope: !6003)
!6036 = distinct !DISubprogram(name: "k_sem_take", scope: !3677, file: !3677, line: 1044, type: !6037, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6044)
!6037 = !DISubroutineType(types: !6038)
!6038 = !{!103, !6039, !6040}
!6039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5847, size: 32)
!6040 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1709, line: 67, baseType: !6041)
!6041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1709, line: 65, size: 64, elements: !6042)
!6042 = !{!6043}
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !6041, file: !1709, line: 66, baseType: !1708, size: 64)
!6044 = !{!6045, !6046}
!6045 = !DILocalVariable(name: "sem", arg: 1, scope: !6036, file: !3677, line: 1044, type: !6039)
!6046 = !DILocalVariable(name: "timeout", arg: 2, scope: !6036, file: !3677, line: 1044, type: !6040)
!6047 = !DILocation(line: 0, scope: !6036)
!6048 = !DILocation(line: 1053, column: 2, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6036, file: !3677, line: 1053, column: 2)
!6050 = !{i64 2154846153}
!6051 = !DILocation(line: 1054, column: 9, scope: !6036)
!6052 = !DILocation(line: 1054, column: 2, scope: !6036)
!6053 = distinct !DISubprogram(name: "uart_irq_tx_enable", scope: !5926, file: !5926, line: 193, type: !2691, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6054)
!6054 = !{!6055}
!6055 = !DILocalVariable(name: "dev", arg: 1, scope: !6053, file: !5926, line: 193, type: !2640)
!6056 = !DILocation(line: 0, scope: !6053)
!6057 = !DILocation(line: 202, column: 2, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6053, file: !5926, line: 202, column: 2)
!6059 = !{i64 2155103087}
!6060 = !DILocation(line: 203, column: 2, scope: !6053)
!6061 = !DILocation(line: 204, column: 1, scope: !6053)
!6062 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_enable", scope: !203, file: !203, line: 857, type: !2691, scopeLine: 858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6063)
!6063 = !{!6064, !6065}
!6064 = !DILocalVariable(name: "dev", arg: 1, scope: !6062, file: !203, line: 857, type: !2640)
!6065 = !DILocalVariable(name: "api", scope: !6062, file: !203, line: 860, type: !2632)
!6066 = !DILocation(line: 0, scope: !6062)
!6067 = !DILocation(line: 861, column: 40, scope: !6062)
!6068 = !DILocation(line: 863, column: 11, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6062, file: !203, line: 863, column: 6)
!6070 = !DILocation(line: 863, column: 25, scope: !6069)
!6071 = !DILocation(line: 863, column: 6, scope: !6062)
!6072 = !DILocation(line: 864, column: 3, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6069, file: !203, line: 863, column: 34)
!6074 = !DILocation(line: 865, column: 2, scope: !6073)
!6075 = !DILocation(line: 869, column: 1, scope: !6062)
!6076 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !203, file: !203, line: 574, type: !2657, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6077)
!6077 = !{!6078, !6079, !6080}
!6078 = !DILocalVariable(name: "dev", arg: 1, scope: !6076, file: !203, line: 574, type: !2640)
!6079 = !DILocalVariable(name: "out_char", arg: 2, scope: !6076, file: !203, line: 575, type: !155)
!6080 = !DILocalVariable(name: "api", scope: !6076, file: !203, line: 577, type: !2632)
!6081 = !DILocation(line: 0, scope: !6076)
!6082 = !DILocation(line: 578, column: 40, scope: !6076)
!6083 = !DILocation(line: 580, column: 7, scope: !6076)
!6084 = !DILocation(line: 580, column: 2, scope: !6076)
!6085 = !DILocation(line: 581, column: 1, scope: !6076)
!6086 = distinct !DISubprogram(name: "tty_read", scope: !5837, file: !5837, line: 206, type: !6087, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6089)
!6087 = !DISubroutineType(types: !6088)
!6088 = !{!5840, !5842, !102, !344}
!6089 = !{!6090, !6091, !6092, !6093, !6094, !6095}
!6090 = !DILocalVariable(name: "tty", arg: 1, scope: !6086, file: !5837, line: 206, type: !5842)
!6091 = !DILocalVariable(name: "buf", arg: 2, scope: !6086, file: !5837, line: 206, type: !102)
!6092 = !DILocalVariable(name: "size", arg: 3, scope: !6086, file: !5837, line: 206, type: !344)
!6093 = !DILocalVariable(name: "p", scope: !6086, file: !5837, line: 208, type: !261)
!6094 = !DILocalVariable(name: "out_size", scope: !6086, file: !5837, line: 209, type: !344)
!6095 = !DILocalVariable(name: "res", scope: !6086, file: !5837, line: 210, type: !103)
!6096 = !DILocation(line: 0, scope: !6086)
!6097 = !DILocation(line: 212, column: 11, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6086, file: !5837, line: 212, column: 6)
!6099 = !DILocation(line: 212, column: 25, scope: !6098)
!6100 = !DILocation(line: 212, column: 6, scope: !6086)
!6101 = !DILocation(line: 216, column: 2, scope: !6086)
!6102 = !DILocation(line: 213, column: 10, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6098, file: !5837, line: 212, column: 32)
!6104 = !DILocation(line: 213, column: 3, scope: !6103)
!6105 = !DILocation(line: 216, column: 13, scope: !6086)
!6106 = !DILocation(line: 217, column: 9, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6086, file: !5837, line: 216, column: 17)
!6108 = !DILocation(line: 218, column: 11, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6107, file: !5837, line: 218, column: 7)
!6110 = !DILocation(line: 218, column: 7, scope: !6107)
!6111 = !DILocation(line: 220, column: 17, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6113, file: !5837, line: 220, column: 8)
!6113 = distinct !DILexicalBlock(scope: !6109, file: !5837, line: 218, column: 16)
!6114 = !DILocation(line: 220, column: 8, scope: !6113)
!6115 = !DILocation(line: 221, column: 13, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6112, file: !5837, line: 220, column: 23)
!6117 = !DILocation(line: 221, column: 5, scope: !6116)
!6118 = !DILocation(line: 221, column: 11, scope: !6116)
!6119 = !DILocation(line: 222, column: 5, scope: !6116)
!6120 = !DILocation(line: 234, column: 10, scope: !6107)
!6121 = !DILocation(line: 234, column: 5, scope: !6107)
!6122 = !DILocation(line: 234, column: 8, scope: !6107)
!6123 = !DILocation(line: 235, column: 11, scope: !6107)
!6124 = distinct !{!6124, !6101, !6125}
!6125 = !DILocation(line: 236, column: 2, scope: !6086)
!6126 = !DILocation(line: 239, column: 1, scope: !6086)
!6127 = distinct !DISubprogram(name: "tty_read_unbuf", scope: !5837, file: !5837, line: 162, type: !6087, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6128)
!6128 = !{!6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136}
!6129 = !DILocalVariable(name: "tty", arg: 1, scope: !6127, file: !5837, line: 162, type: !5842)
!6130 = !DILocalVariable(name: "buf", arg: 2, scope: !6127, file: !5837, line: 162, type: !102)
!6131 = !DILocalVariable(name: "size", arg: 3, scope: !6127, file: !5837, line: 162, type: !344)
!6132 = !DILocalVariable(name: "p", scope: !6127, file: !5837, line: 164, type: !261)
!6133 = !DILocalVariable(name: "out_size", scope: !6127, file: !5837, line: 165, type: !344)
!6134 = !DILocalVariable(name: "res", scope: !6127, file: !5837, line: 166, type: !103)
!6135 = !DILocalVariable(name: "timeout", scope: !6127, file: !5837, line: 167, type: !121)
!6136 = !DILocalVariable(name: "c", scope: !6137, file: !5837, line: 170, type: !154)
!6137 = distinct !DILexicalBlock(scope: !6127, file: !5837, line: 169, column: 15)
!6138 = !DILocation(line: 0, scope: !6127)
!6139 = !DILocation(line: 169, column: 2, scope: !6127)
!6140 = !DILocation(line: 167, column: 26, scope: !6127)
!6141 = !DILocation(line: 170, column: 3, scope: !6137)
!6142 = !DILocation(line: 171, column: 27, scope: !6137)
!6143 = !DILocation(line: 0, scope: !6137)
!6144 = !DILocation(line: 171, column: 9, scope: !6137)
!6145 = !DILocation(line: 172, column: 11, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6137, file: !5837, line: 172, column: 7)
!6147 = !DILocation(line: 172, column: 7, scope: !6137)
!6148 = !DILocation(line: 177, column: 17, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6150, file: !5837, line: 177, column: 8)
!6150 = distinct !DILexicalBlock(scope: !6146, file: !5837, line: 172, column: 18)
!6151 = !DILocation(line: 177, column: 8, scope: !6150)
!6152 = !DILocation(line: 178, column: 5, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6149, file: !5837, line: 177, column: 23)
!6154 = !DILocation(line: 178, column: 11, scope: !6153)
!6155 = !DILocation(line: 201, column: 2, scope: !6127)
!6156 = !DILocation(line: 184, column: 11, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6137, file: !5837, line: 184, column: 7)
!6158 = !DILocation(line: 184, column: 7, scope: !6137)
!6159 = !DILocation(line: 185, column: 11, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6157, file: !5837, line: 184, column: 17)
!6161 = !DILocation(line: 185, column: 6, scope: !6160)
!6162 = !DILocation(line: 185, column: 9, scope: !6160)
!6163 = !DILocation(line: 186, column: 12, scope: !6160)
!6164 = !DILocation(line: 187, column: 8, scope: !6160)
!6165 = !DILocation(line: 190, column: 12, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6137, file: !5837, line: 190, column: 7)
!6167 = !DILocation(line: 190, column: 17, scope: !6166)
!6168 = !DILocation(line: 191, column: 17, scope: !6166)
!6169 = !DILocation(line: 191, column: 36, scope: !6166)
!6170 = !DILocation(line: 191, column: 46, scope: !6166)
!6171 = !DILocation(line: 191, column: 49, scope: !6166)
!6172 = !DILocation(line: 190, column: 7, scope: !6137)
!6173 = !DILocation(line: 198, column: 11, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6137, file: !5837, line: 198, column: 7)
!6175 = !DILocation(line: 198, column: 7, scope: !6137)
!6176 = !DILocation(line: 199, column: 12, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6174, file: !5837, line: 198, column: 18)
!6178 = !DILocation(line: 199, column: 4, scope: !6177)
!6179 = !DILocation(line: 200, column: 3, scope: !6177)
!6180 = !DILocation(line: 204, column: 1, scope: !6127)
!6181 = distinct !DISubprogram(name: "tty_getchar", scope: !5837, file: !5837, line: 141, type: !6182, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6184)
!6182 = !DISubroutineType(types: !6183)
!6183 = !{!103, !5842}
!6184 = !{!6185, !6186, !6187, !6188}
!6185 = !DILocalVariable(name: "tty", arg: 1, scope: !6181, file: !5837, line: 141, type: !5842)
!6186 = !DILocalVariable(name: "key", scope: !6181, file: !5837, line: 143, type: !32)
!6187 = !DILocalVariable(name: "c", scope: !6181, file: !5837, line: 144, type: !154)
!6188 = !DILocalVariable(name: "res", scope: !6181, file: !5837, line: 145, type: !103)
!6189 = !DILocation(line: 0, scope: !6181)
!6190 = !DILocation(line: 147, column: 25, scope: !6181)
!6191 = !DILocation(line: 147, column: 33, scope: !6181)
!6192 = !DILocation(line: 147, column: 8, scope: !6181)
!6193 = !DILocation(line: 148, column: 10, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6181, file: !5837, line: 148, column: 6)
!6195 = !DILocation(line: 148, column: 6, scope: !6181)
!6196 = !DILocation(line: 55, column: 2, scope: !5954, inlinedAt: !6197)
!6197 = distinct !DILocation(line: 152, column: 8, scope: !6181)
!6198 = !DILocation(line: 0, scope: !5954, inlinedAt: !6197)
!6199 = !DILocation(line: 153, column: 11, scope: !6181)
!6200 = !DILocation(line: 153, column: 27, scope: !6181)
!6201 = !DILocation(line: 153, column: 33, scope: !6181)
!6202 = !DILocation(line: 153, column: 6, scope: !6181)
!6203 = !DILocation(line: 154, column: 6, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6181, file: !5837, line: 154, column: 6)
!6205 = !DILocation(line: 154, column: 26, scope: !6204)
!6206 = !DILocation(line: 154, column: 18, scope: !6204)
!6207 = !DILocation(line: 154, column: 6, scope: !6181)
!6208 = !DILocation(line: 0, scope: !5974, inlinedAt: !6209)
!6209 = distinct !DILocation(line: 157, column: 2, scope: !6181)
!6210 = !DILocation(line: 95, column: 2, scope: !5974, inlinedAt: !6209)
!6211 = !DILocation(line: 159, column: 9, scope: !6181)
!6212 = !DILocation(line: 159, column: 2, scope: !6181)
!6213 = !DILocation(line: 160, column: 1, scope: !6181)
!6214 = distinct !DISubprogram(name: "uart_poll_in", scope: !5926, file: !5926, line: 47, type: !2638, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6215)
!6215 = !{!6216, !6217}
!6216 = !DILocalVariable(name: "dev", arg: 1, scope: !6214, file: !5926, line: 47, type: !2640)
!6217 = !DILocalVariable(name: "p_char", arg: 2, scope: !6214, file: !5926, line: 47, type: !224)
!6218 = !DILocation(line: 0, scope: !6214)
!6219 = !DILocation(line: 56, column: 2, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6214, file: !5926, line: 56, column: 2)
!6221 = !{i64 2155102679}
!6222 = !DILocation(line: 57, column: 9, scope: !6214)
!6223 = !DILocation(line: 57, column: 2, scope: !6214)
!6224 = distinct !DISubprogram(name: "k_sleep", scope: !3677, file: !3677, line: 91, type: !6225, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6227)
!6225 = !DISubroutineType(types: !6226)
!6226 = !{!332, !6040}
!6227 = !{!6228}
!6228 = !DILocalVariable(name: "timeout", arg: 1, scope: !6224, file: !3677, line: 91, type: !6040)
!6229 = !DILocation(line: 0, scope: !6224)
!6230 = !DILocation(line: 99, column: 2, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6224, file: !3677, line: 99, column: 2)
!6232 = !{i64 2154842309}
!6233 = !DILocation(line: 100, column: 9, scope: !6224)
!6234 = !DILocation(line: 100, column: 2, scope: !6224)
!6235 = distinct !DISubprogram(name: "z_impl_uart_poll_in", scope: !203, file: !203, line: 504, type: !2638, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6236)
!6236 = !{!6237, !6238, !6239}
!6237 = !DILocalVariable(name: "dev", arg: 1, scope: !6235, file: !203, line: 504, type: !2640)
!6238 = !DILocalVariable(name: "p_char", arg: 2, scope: !6235, file: !203, line: 505, type: !224)
!6239 = !DILocalVariable(name: "api", scope: !6235, file: !203, line: 507, type: !2632)
!6240 = !DILocation(line: 0, scope: !6235)
!6241 = !DILocation(line: 508, column: 40, scope: !6235)
!6242 = !DILocation(line: 510, column: 11, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6235, file: !203, line: 510, column: 6)
!6244 = !DILocation(line: 510, column: 19, scope: !6243)
!6245 = !DILocation(line: 510, column: 6, scope: !6235)
!6246 = !DILocation(line: 514, column: 9, scope: !6235)
!6247 = !DILocation(line: 514, column: 2, scope: !6235)
!6248 = !DILocation(line: 515, column: 1, scope: !6235)
!6249 = distinct !DISubprogram(name: "tty_init", scope: !5837, file: !5837, line: 241, type: !6250, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6252)
!6250 = !DISubroutineType(types: !6251)
!6251 = !{!103, !5842, !2640}
!6252 = !{!6253, !6254}
!6253 = !DILocalVariable(name: "tty", arg: 1, scope: !6249, file: !5837, line: 241, type: !5842)
!6254 = !DILocalVariable(name: "uart_dev", arg: 2, scope: !6249, file: !5837, line: 241, type: !2640)
!6255 = !DILocation(line: 0, scope: !6249)
!6256 = !DILocation(line: 243, column: 7, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6249, file: !5837, line: 243, column: 6)
!6258 = !DILocation(line: 243, column: 6, scope: !6249)
!6259 = !DILocation(line: 247, column: 7, scope: !6249)
!6260 = !DILocation(line: 247, column: 16, scope: !6249)
!6261 = !DILocation(line: 250, column: 7, scope: !6249)
!6262 = !DILocation(line: 250, column: 18, scope: !6249)
!6263 = !DILocation(line: 251, column: 7, scope: !6249)
!6264 = !DILocation(line: 251, column: 21, scope: !6249)
!6265 = !DILocation(line: 252, column: 7, scope: !6249)
!6266 = !DILocation(line: 252, column: 18, scope: !6249)
!6267 = !DILocation(line: 253, column: 7, scope: !6249)
!6268 = !DILocation(line: 253, column: 21, scope: !6249)
!6269 = !DILocation(line: 255, column: 49, scope: !6249)
!6270 = !DILocation(line: 255, column: 56, scope: !6249)
!6271 = !DILocation(line: 255, column: 35, scope: !6249)
!6272 = !DILocation(line: 255, column: 42, scope: !6249)
!6273 = !DILocation(line: 255, column: 21, scope: !6249)
!6274 = !DILocation(line: 255, column: 28, scope: !6249)
!6275 = !DILocation(line: 255, column: 7, scope: !6249)
!6276 = !DILocation(line: 255, column: 14, scope: !6249)
!6277 = !DILocation(line: 257, column: 7, scope: !6249)
!6278 = !DILocation(line: 257, column: 18, scope: !6249)
!6279 = !DILocation(line: 258, column: 7, scope: !6249)
!6280 = !DILocation(line: 258, column: 18, scope: !6249)
!6281 = !DILocation(line: 260, column: 58, scope: !6249)
!6282 = !DILocation(line: 260, column: 2, scope: !6249)
!6283 = !DILocation(line: 262, column: 2, scope: !6249)
!6284 = !DILocation(line: 263, column: 1, scope: !6249)
!6285 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !203, file: !203, line: 1163, type: !2705, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6286)
!6286 = !{!6287, !6288, !6289, !6290}
!6287 = !DILocalVariable(name: "dev", arg: 1, scope: !6285, file: !203, line: 1163, type: !2640)
!6288 = !DILocalVariable(name: "cb", arg: 2, scope: !6285, file: !203, line: 1164, type: !2707)
!6289 = !DILocalVariable(name: "user_data", arg: 3, scope: !6285, file: !203, line: 1165, type: !102)
!6290 = !DILocalVariable(name: "api", scope: !6285, file: !203, line: 1168, type: !2632)
!6291 = !DILocation(line: 0, scope: !6285)
!6292 = !DILocation(line: 1169, column: 40, scope: !6285)
!6293 = !DILocation(line: 1171, column: 11, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6285, file: !203, line: 1171, column: 6)
!6295 = !DILocation(line: 1171, column: 20, scope: !6294)
!6296 = !DILocation(line: 1171, column: 29, scope: !6294)
!6297 = !DILocation(line: 1171, column: 46, scope: !6294)
!6298 = !DILocation(line: 1171, column: 6, scope: !6285)
!6299 = !DILocation(line: 1172, column: 3, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6294, file: !203, line: 1171, column: 56)
!6301 = !DILocation(line: 1173, column: 2, scope: !6300)
!6302 = !DILocation(line: 1179, column: 1, scope: !6285)
!6303 = distinct !DISubprogram(name: "tty_uart_isr", scope: !5837, file: !5837, line: 15, type: !2709, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6304)
!6304 = !{!6305, !6306, !6307, !6308}
!6305 = !DILocalVariable(name: "dev", arg: 1, scope: !6303, file: !5837, line: 15, type: !2640)
!6306 = !DILocalVariable(name: "user_data", arg: 2, scope: !6303, file: !5837, line: 15, type: !102)
!6307 = !DILocalVariable(name: "tty", scope: !6303, file: !5837, line: 17, type: !5842)
!6308 = !DILocalVariable(name: "c", scope: !6309, file: !5837, line: 22, type: !154)
!6309 = distinct !DILexicalBlock(scope: !6310, file: !5837, line: 21, column: 30)
!6310 = distinct !DILexicalBlock(scope: !6303, file: !5837, line: 21, column: 6)
!6311 = !DILocation(line: 0, scope: !6303)
!6312 = !DILocation(line: 17, column: 27, scope: !6303)
!6313 = !DILocation(line: 19, column: 2, scope: !6303)
!6314 = !DILocation(line: 21, column: 6, scope: !6310)
!6315 = !DILocation(line: 21, column: 6, scope: !6303)
!6316 = !DILocation(line: 22, column: 3, scope: !6309)
!6317 = !DILocation(line: 0, scope: !6309)
!6318 = !DILocation(line: 25, column: 8, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6320, file: !5837, line: 25, column: 8)
!6320 = distinct !DILexicalBlock(scope: !6309, file: !5837, line: 24, column: 13)
!6321 = !DILocation(line: 25, column: 35, scope: !6319)
!6322 = !DILocation(line: 25, column: 8, scope: !6320)
!6323 = !DILocation(line: 28, column: 28, scope: !6320)
!6324 = !DILocation(line: 28, column: 4, scope: !6320)
!6325 = distinct !{!6325, !6326, !6327}
!6326 = !DILocation(line: 24, column: 3, scope: !6309)
!6327 = !DILocation(line: 29, column: 3, scope: !6309)
!6328 = !DILocation(line: 30, column: 2, scope: !6310)
!6329 = !DILocation(line: 30, column: 2, scope: !6309)
!6330 = !DILocation(line: 32, column: 6, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6303, file: !5837, line: 32, column: 6)
!6332 = !DILocation(line: 32, column: 6, scope: !6303)
!6333 = !DILocation(line: 33, column: 12, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6335, file: !5837, line: 33, column: 7)
!6335 = distinct !DILexicalBlock(scope: !6331, file: !5837, line: 32, column: 30)
!6336 = !DILocation(line: 33, column: 27, scope: !6334)
!6337 = !DILocation(line: 33, column: 19, scope: !6334)
!6338 = !DILocation(line: 33, column: 7, scope: !6335)
!6339 = !DILocation(line: 37, column: 4, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6334, file: !5837, line: 33, column: 35)
!6341 = !DILocation(line: 38, column: 3, scope: !6340)
!6342 = !DILocation(line: 33, column: 7, scope: !6334)
!6343 = !DILocation(line: 39, column: 30, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6334, file: !5837, line: 38, column: 10)
!6345 = !DILocation(line: 39, column: 52, scope: !6344)
!6346 = !DILocation(line: 39, column: 25, scope: !6344)
!6347 = !DILocation(line: 39, column: 4, scope: !6344)
!6348 = !DILocation(line: 40, column: 13, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6344, file: !5837, line: 40, column: 8)
!6350 = !DILocation(line: 40, column: 8, scope: !6349)
!6351 = !DILocation(line: 40, column: 28, scope: !6349)
!6352 = !DILocation(line: 40, column: 20, scope: !6349)
!6353 = !DILocation(line: 40, column: 8, scope: !6344)
!6354 = !DILocation(line: 41, column: 17, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6349, file: !5837, line: 40, column: 43)
!6356 = !DILocation(line: 42, column: 4, scope: !6355)
!6357 = !DILocation(line: 43, column: 21, scope: !6344)
!6358 = !DILocation(line: 43, column: 4, scope: !6344)
!6359 = !DILocation(line: 46, column: 1, scope: !6303)
!6360 = distinct !DISubprogram(name: "uart_irq_update", scope: !5926, file: !5926, line: 360, type: !2661, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6361)
!6361 = !{!6362}
!6362 = !DILocalVariable(name: "dev", arg: 1, scope: !6360, file: !5926, line: 360, type: !2640)
!6363 = !DILocation(line: 0, scope: !6360)
!6364 = !DILocation(line: 368, column: 2, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6360, file: !5926, line: 368, column: 2)
!6366 = !{i64 2155103563}
!6367 = !DILocation(line: 369, column: 9, scope: !6360)
!6368 = !DILocation(line: 369, column: 2, scope: !6360)
!6369 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !203, file: !203, line: 1024, type: !2661, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6370)
!6370 = !{!6371, !6372}
!6371 = !DILocalVariable(name: "dev", arg: 1, scope: !6369, file: !203, line: 1024, type: !2640)
!6372 = !DILocalVariable(name: "api", scope: !6369, file: !203, line: 1027, type: !2632)
!6373 = !DILocation(line: 0, scope: !6369)
!6374 = !DILocation(line: 1028, column: 40, scope: !6369)
!6375 = !DILocation(line: 1030, column: 11, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6369, file: !203, line: 1030, column: 6)
!6377 = !DILocation(line: 1030, column: 24, scope: !6376)
!6378 = !DILocation(line: 1030, column: 6, scope: !6369)
!6379 = !DILocation(line: 1033, column: 9, scope: !6369)
!6380 = !DILocation(line: 1033, column: 2, scope: !6369)
!6381 = !DILocation(line: 1038, column: 1, scope: !6369)
!6382 = distinct !DISubprogram(name: "uart_fifo_read", scope: !203, file: !203, line: 785, type: !2687, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6383)
!6383 = !{!6384, !6385, !6386, !6387}
!6384 = !DILocalVariable(name: "dev", arg: 1, scope: !6382, file: !203, line: 785, type: !2640)
!6385 = !DILocalVariable(name: "rx_data", arg: 2, scope: !6382, file: !203, line: 785, type: !261)
!6386 = !DILocalVariable(name: "size", arg: 3, scope: !6382, file: !203, line: 786, type: !262)
!6387 = !DILocalVariable(name: "api", scope: !6382, file: !203, line: 789, type: !2632)
!6388 = !DILocation(line: 0, scope: !6382)
!6389 = !DILocation(line: 790, column: 40, scope: !6382)
!6390 = !DILocation(line: 792, column: 11, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6382, file: !203, line: 792, column: 6)
!6392 = !DILocation(line: 792, column: 21, scope: !6391)
!6393 = !DILocation(line: 792, column: 6, scope: !6382)
!6394 = !DILocation(line: 796, column: 9, scope: !6382)
!6395 = !DILocation(line: 796, column: 2, scope: !6382)
!6396 = !DILocation(line: 803, column: 1, scope: !6382)
!6397 = distinct !DISubprogram(name: "tty_irq_input_hook", scope: !5837, file: !5837, line: 48, type: !5937, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6398)
!6398 = !{!6399, !6400, !6401}
!6399 = !DILocalVariable(name: "tty", arg: 1, scope: !6397, file: !5837, line: 48, type: !5842)
!6400 = !DILocalVariable(name: "c", arg: 2, scope: !6397, file: !5837, line: 48, type: !154)
!6401 = !DILocalVariable(name: "rx_next", scope: !6397, file: !5837, line: 50, type: !103)
!6402 = !DILocation(line: 0, scope: !6397)
!6403 = !DILocation(line: 50, column: 21, scope: !6397)
!6404 = !DILocation(line: 50, column: 16, scope: !6397)
!6405 = !DILocation(line: 50, column: 28, scope: !6397)
!6406 = !DILocation(line: 52, column: 22, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6397, file: !5837, line: 52, column: 6)
!6408 = !DILocation(line: 52, column: 14, scope: !6407)
!6409 = !DILocation(line: 52, column: 6, scope: !6397)
!6410 = !DILocation(line: 56, column: 22, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6397, file: !5837, line: 56, column: 6)
!6412 = !DILocation(line: 56, column: 17, scope: !6411)
!6413 = !DILocation(line: 56, column: 14, scope: !6411)
!6414 = !DILocation(line: 56, column: 6, scope: !6397)
!6415 = !DILocation(line: 58, column: 3, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6411, file: !5837, line: 56, column: 30)
!6417 = !DILocation(line: 59, column: 3, scope: !6416)
!6418 = !DILocation(line: 62, column: 7, scope: !6397)
!6419 = !DILocation(line: 62, column: 2, scope: !6397)
!6420 = !DILocation(line: 62, column: 31, scope: !6397)
!6421 = !DILocation(line: 63, column: 16, scope: !6397)
!6422 = !DILocation(line: 63, column: 14, scope: !6397)
!6423 = !DILocation(line: 64, column: 19, scope: !6397)
!6424 = !DILocation(line: 64, column: 2, scope: !6397)
!6425 = !DILocation(line: 66, column: 2, scope: !6397)
!6426 = !DILocation(line: 67, column: 1, scope: !6397)
!6427 = distinct !DISubprogram(name: "uart_irq_tx_ready", scope: !203, file: !203, line: 910, type: !2661, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6428)
!6428 = !{!6429, !6430}
!6429 = !DILocalVariable(name: "dev", arg: 1, scope: !6427, file: !203, line: 910, type: !2640)
!6430 = !DILocalVariable(name: "api", scope: !6427, file: !203, line: 913, type: !2632)
!6431 = !DILocation(line: 0, scope: !6427)
!6432 = !DILocation(line: 914, column: 40, scope: !6427)
!6433 = !DILocation(line: 916, column: 11, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6427, file: !203, line: 916, column: 6)
!6435 = !DILocation(line: 916, column: 24, scope: !6434)
!6436 = !DILocation(line: 916, column: 6, scope: !6427)
!6437 = !DILocation(line: 920, column: 9, scope: !6427)
!6438 = !DILocation(line: 920, column: 2, scope: !6427)
!6439 = !DILocation(line: 925, column: 1, scope: !6427)
!6440 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5926, file: !5926, line: 217, type: !2691, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6441)
!6441 = !{!6442}
!6442 = !DILocalVariable(name: "dev", arg: 1, scope: !6440, file: !5926, line: 217, type: !2640)
!6443 = !DILocation(line: 0, scope: !6440)
!6444 = !DILocation(line: 226, column: 2, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6440, file: !5926, line: 226, column: 2)
!6446 = !{i64 2155103155}
!6447 = !DILocation(line: 227, column: 2, scope: !6440)
!6448 = !DILocation(line: 228, column: 1, scope: !6440)
!6449 = distinct !DISubprogram(name: "uart_fifo_fill", scope: !203, file: !203, line: 699, type: !2683, scopeLine: 702, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6450)
!6450 = !{!6451, !6452, !6453, !6454}
!6451 = !DILocalVariable(name: "dev", arg: 1, scope: !6449, file: !203, line: 699, type: !2640)
!6452 = !DILocalVariable(name: "tx_data", arg: 2, scope: !6449, file: !203, line: 700, type: !255)
!6453 = !DILocalVariable(name: "size", arg: 3, scope: !6449, file: !203, line: 701, type: !103)
!6454 = !DILocalVariable(name: "api", scope: !6449, file: !203, line: 704, type: !2632)
!6455 = !DILocation(line: 0, scope: !6449)
!6456 = !DILocation(line: 705, column: 40, scope: !6449)
!6457 = !DILocation(line: 707, column: 11, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6449, file: !203, line: 707, column: 6)
!6459 = !DILocation(line: 707, column: 21, scope: !6458)
!6460 = !DILocation(line: 707, column: 6, scope: !6449)
!6461 = !DILocation(line: 711, column: 9, scope: !6449)
!6462 = !DILocation(line: 711, column: 2, scope: !6449)
!6463 = !DILocation(line: 718, column: 1, scope: !6449)
!6464 = distinct !DISubprogram(name: "k_sem_give", scope: !3677, file: !3677, line: 1061, type: !6465, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6467)
!6465 = !DISubroutineType(types: !6466)
!6466 = !{null, !6039}
!6467 = !{!6468}
!6468 = !DILocalVariable(name: "sem", arg: 1, scope: !6464, file: !3677, line: 1061, type: !6039)
!6469 = !DILocation(line: 0, scope: !6464)
!6470 = !DILocation(line: 1070, column: 2, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6464, file: !3677, line: 1070, column: 2)
!6472 = !{i64 2154846221}
!6473 = !DILocation(line: 1071, column: 2, scope: !6464)
!6474 = !DILocation(line: 1072, column: 1, scope: !6464)
!6475 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !203, file: !203, line: 878, type: !2691, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6476)
!6476 = !{!6477, !6478}
!6477 = !DILocalVariable(name: "dev", arg: 1, scope: !6475, file: !203, line: 878, type: !2640)
!6478 = !DILocalVariable(name: "api", scope: !6475, file: !203, line: 881, type: !2632)
!6479 = !DILocation(line: 0, scope: !6475)
!6480 = !DILocation(line: 882, column: 40, scope: !6475)
!6481 = !DILocation(line: 884, column: 11, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6475, file: !203, line: 884, column: 6)
!6483 = !DILocation(line: 884, column: 26, scope: !6482)
!6484 = !DILocation(line: 884, column: 6, scope: !6475)
!6485 = !DILocation(line: 885, column: 3, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6482, file: !203, line: 884, column: 35)
!6487 = !DILocation(line: 886, column: 2, scope: !6486)
!6488 = !DILocation(line: 890, column: 1, scope: !6475)
!6489 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !203, file: !203, line: 1136, type: !2661, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6490)
!6490 = !{!6491, !6492}
!6491 = !DILocalVariable(name: "dev", arg: 1, scope: !6489, file: !203, line: 1136, type: !2640)
!6492 = !DILocalVariable(name: "api", scope: !6489, file: !203, line: 1139, type: !2632)
!6493 = !DILocation(line: 0, scope: !6489)
!6494 = !DILocation(line: 1140, column: 40, scope: !6489)
!6495 = !DILocation(line: 1142, column: 11, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6489, file: !203, line: 1142, column: 6)
!6497 = !DILocation(line: 1142, column: 22, scope: !6496)
!6498 = !DILocation(line: 1142, column: 6, scope: !6489)
!6499 = !DILocation(line: 1145, column: 9, scope: !6489)
!6500 = !DILocation(line: 1145, column: 2, scope: !6489)
!6501 = !DILocation(line: 1150, column: 1, scope: !6489)
!6502 = distinct !DISubprogram(name: "tty_set_rx_buf", scope: !5837, file: !5837, line: 265, type: !6503, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6505)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{!103, !5842, !102, !344}
!6505 = !{!6506, !6507, !6508}
!6506 = !DILocalVariable(name: "tty", arg: 1, scope: !6502, file: !5837, line: 265, type: !5842)
!6507 = !DILocalVariable(name: "buf", arg: 2, scope: !6502, file: !5837, line: 265, type: !102)
!6508 = !DILocalVariable(name: "size", arg: 3, scope: !6502, file: !5837, line: 265, type: !344)
!6509 = !DILocation(line: 0, scope: !6502)
!6510 = !DILocation(line: 267, column: 27, scope: !6502)
!6511 = !DILocation(line: 267, column: 2, scope: !6502)
!6512 = !DILocation(line: 269, column: 7, scope: !6502)
!6513 = !DILocation(line: 269, column: 18, scope: !6502)
!6514 = !DILocation(line: 270, column: 7, scope: !6502)
!6515 = !DILocation(line: 270, column: 21, scope: !6502)
!6516 = !DILocation(line: 272, column: 11, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6502, file: !5837, line: 272, column: 6)
!6518 = !DILocation(line: 272, column: 6, scope: !6502)
!6519 = !DILocation(line: 273, column: 20, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6517, file: !5837, line: 272, column: 16)
!6521 = !DILocation(line: 273, column: 3, scope: !6520)
!6522 = !DILocation(line: 274, column: 27, scope: !6520)
!6523 = !DILocation(line: 274, column: 3, scope: !6520)
!6524 = !DILocation(line: 275, column: 2, scope: !6520)
!6525 = !DILocation(line: 277, column: 2, scope: !6502)
!6526 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5926, file: !5926, line: 265, type: !2691, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6527)
!6527 = !{!6528}
!6528 = !DILocalVariable(name: "dev", arg: 1, scope: !6526, file: !5926, line: 265, type: !2640)
!6529 = !DILocation(line: 0, scope: !6526)
!6530 = !DILocation(line: 274, column: 2, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6526, file: !5926, line: 274, column: 2)
!6532 = !{i64 2155103291}
!6533 = !DILocation(line: 275, column: 2, scope: !6526)
!6534 = !DILocation(line: 276, column: 1, scope: !6526)
!6535 = distinct !DISubprogram(name: "k_sem_init", scope: !3677, file: !3677, line: 1026, type: !6536, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6538)
!6536 = !DISubroutineType(types: !6537)
!6537 = !{!103, !6039, !32, !32}
!6538 = !{!6539, !6540, !6541}
!6539 = !DILocalVariable(name: "sem", arg: 1, scope: !6535, file: !3677, line: 1026, type: !6039)
!6540 = !DILocalVariable(name: "initial_count", arg: 2, scope: !6535, file: !3677, line: 1026, type: !32)
!6541 = !DILocalVariable(name: "limit", arg: 3, scope: !6535, file: !3677, line: 1026, type: !32)
!6542 = !DILocation(line: 0, scope: !6535)
!6543 = !DILocation(line: 1036, column: 2, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6535, file: !3677, line: 1036, column: 2)
!6545 = !{i64 2154846085}
!6546 = !DILocation(line: 1037, column: 9, scope: !6535)
!6547 = !DILocation(line: 1037, column: 2, scope: !6535)
!6548 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5926, file: !5926, line: 241, type: !2691, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6549)
!6549 = !{!6550}
!6550 = !DILocalVariable(name: "dev", arg: 1, scope: !6548, file: !5926, line: 241, type: !2640)
!6551 = !DILocation(line: 0, scope: !6548)
!6552 = !DILocation(line: 250, column: 2, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6548, file: !5926, line: 250, column: 2)
!6554 = !{i64 2155103223}
!6555 = !DILocation(line: 251, column: 2, scope: !6548)
!6556 = !DILocation(line: 252, column: 1, scope: !6548)
!6557 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !203, file: !203, line: 934, type: !2691, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6558)
!6558 = !{!6559, !6560}
!6559 = !DILocalVariable(name: "dev", arg: 1, scope: !6557, file: !203, line: 934, type: !2640)
!6560 = !DILocalVariable(name: "api", scope: !6557, file: !203, line: 937, type: !2632)
!6561 = !DILocation(line: 0, scope: !6557)
!6562 = !DILocation(line: 938, column: 40, scope: !6557)
!6563 = !DILocation(line: 940, column: 11, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6557, file: !203, line: 940, column: 6)
!6565 = !DILocation(line: 940, column: 25, scope: !6564)
!6566 = !DILocation(line: 940, column: 6, scope: !6557)
!6567 = !DILocation(line: 941, column: 3, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6564, file: !203, line: 940, column: 34)
!6569 = !DILocation(line: 942, column: 2, scope: !6568)
!6570 = !DILocation(line: 946, column: 1, scope: !6557)
!6571 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !203, file: !203, line: 955, type: !2691, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6572)
!6572 = !{!6573, !6574}
!6573 = !DILocalVariable(name: "dev", arg: 1, scope: !6571, file: !203, line: 955, type: !2640)
!6574 = !DILocalVariable(name: "api", scope: !6571, file: !203, line: 958, type: !2632)
!6575 = !DILocation(line: 0, scope: !6571)
!6576 = !DILocation(line: 959, column: 40, scope: !6571)
!6577 = !DILocation(line: 961, column: 11, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6571, file: !203, line: 961, column: 6)
!6579 = !DILocation(line: 961, column: 26, scope: !6578)
!6580 = !DILocation(line: 961, column: 6, scope: !6571)
!6581 = !DILocation(line: 962, column: 3, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6578, file: !203, line: 961, column: 35)
!6583 = !DILocation(line: 963, column: 2, scope: !6582)
!6584 = !DILocation(line: 967, column: 1, scope: !6571)
!6585 = distinct !DISubprogram(name: "tty_set_tx_buf", scope: !5837, file: !5837, line: 280, type: !6503, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6586)
!6586 = !{!6587, !6588, !6589}
!6587 = !DILocalVariable(name: "tty", arg: 1, scope: !6585, file: !5837, line: 280, type: !5842)
!6588 = !DILocalVariable(name: "buf", arg: 2, scope: !6585, file: !5837, line: 280, type: !102)
!6589 = !DILocalVariable(name: "size", arg: 3, scope: !6585, file: !5837, line: 280, type: !344)
!6590 = !DILocation(line: 0, scope: !6585)
!6591 = !DILocation(line: 282, column: 27, scope: !6585)
!6592 = !DILocation(line: 282, column: 2, scope: !6585)
!6593 = !DILocation(line: 284, column: 7, scope: !6585)
!6594 = !DILocation(line: 284, column: 18, scope: !6585)
!6595 = !DILocation(line: 285, column: 7, scope: !6585)
!6596 = !DILocation(line: 285, column: 21, scope: !6585)
!6597 = !DILocation(line: 287, column: 19, scope: !6585)
!6598 = !DILocation(line: 287, column: 32, scope: !6585)
!6599 = !DILocation(line: 287, column: 2, scope: !6585)
!6600 = !DILocation(line: 293, column: 2, scope: !6585)
!6601 = distinct !DISubprogram(name: "console_write", scope: !288, file: !288, line: 18, type: !6602, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6604)
!6602 = !DISubroutineType(types: !6603)
!6603 = !{!5840, !102, !13, !344}
!6604 = !{!6605, !6606, !6607}
!6605 = !DILocalVariable(name: "dummy", arg: 1, scope: !6601, file: !288, line: 18, type: !102)
!6606 = !DILocalVariable(name: "buf", arg: 2, scope: !6601, file: !288, line: 18, type: !13)
!6607 = !DILocalVariable(name: "size", arg: 3, scope: !6601, file: !288, line: 18, type: !344)
!6608 = !DILocation(line: 0, scope: !6601)
!6609 = !DILocation(line: 22, column: 9, scope: !6601)
!6610 = !DILocation(line: 22, column: 2, scope: !6601)
!6611 = distinct !DISubprogram(name: "console_read", scope: !288, file: !288, line: 25, type: !6612, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6614)
!6612 = !DISubroutineType(types: !6613)
!6613 = !{!5840, !102, !102, !344}
!6614 = !{!6615, !6616, !6617}
!6615 = !DILocalVariable(name: "dummy", arg: 1, scope: !6611, file: !288, line: 25, type: !102)
!6616 = !DILocalVariable(name: "buf", arg: 2, scope: !6611, file: !288, line: 25, type: !102)
!6617 = !DILocalVariable(name: "size", arg: 3, scope: !6611, file: !288, line: 25, type: !344)
!6618 = !DILocation(line: 0, scope: !6611)
!6619 = !DILocation(line: 29, column: 9, scope: !6611)
!6620 = !DILocation(line: 29, column: 2, scope: !6611)
!6621 = distinct !DISubprogram(name: "console_putchar", scope: !288, file: !288, line: 32, type: !1077, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6622)
!6622 = !{!6623}
!6623 = !DILocalVariable(name: "c", arg: 1, scope: !6621, file: !288, line: 32, type: !146)
!6624 = !DILocation(line: 0, scope: !6621)
!6625 = !DILocation(line: 34, column: 9, scope: !6621)
!6626 = !DILocation(line: 34, column: 2, scope: !6621)
!6627 = distinct !DISubprogram(name: "console_getchar", scope: !288, file: !288, line: 37, type: !6628, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6630)
!6628 = !DISubroutineType(types: !6629)
!6629 = !{!103}
!6630 = !{!6631, !6632}
!6631 = !DILocalVariable(name: "c", scope: !6627, file: !288, line: 39, type: !154)
!6632 = !DILocalVariable(name: "res", scope: !6627, file: !288, line: 40, type: !103)
!6633 = !DILocation(line: 39, column: 2, scope: !6627)
!6634 = !DILocation(line: 0, scope: !6627)
!6635 = !DILocation(line: 42, column: 8, scope: !6627)
!6636 = !DILocation(line: 43, column: 10, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6627, file: !288, line: 43, column: 6)
!6638 = !DILocation(line: 43, column: 6, scope: !6627)
!6639 = !DILocation(line: 48, column: 1, scope: !6627)
!6640 = distinct !DISubprogram(name: "console_init", scope: !288, file: !288, line: 50, type: !6628, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6641)
!6641 = !{!6642, !6643, !6644}
!6642 = !DILocalVariable(name: "uart_dev", scope: !6640, file: !288, line: 52, type: !209)
!6643 = !DILocalVariable(name: "ret", scope: !6640, file: !288, line: 53, type: !103)
!6644 = !DILocalVariable(name: "api", scope: !6645, file: !288, line: 68, type: !200)
!6645 = distinct !DILexicalBlock(scope: !6646, file: !288, line: 67, column: 71)
!6646 = distinct !DILexicalBlock(scope: !6640, file: !288, line: 67, column: 6)
!6647 = !DILocation(line: 0, scope: !6640)
!6648 = !DILocation(line: 56, column: 7, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6640, file: !288, line: 56, column: 6)
!6650 = !DILocation(line: 56, column: 6, scope: !6640)
!6651 = !DILocation(line: 60, column: 8, scope: !6640)
!6652 = !DILocation(line: 62, column: 6, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6640, file: !288, line: 62, column: 6)
!6654 = !DILocation(line: 62, column: 6, scope: !6640)
!6655 = !DILocation(line: 69, column: 46, scope: !6645)
!6656 = !DILocation(line: 0, scope: !6645)
!6657 = !DILocation(line: 70, column: 13, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6645, file: !288, line: 70, column: 7)
!6659 = !DILocation(line: 70, column: 8, scope: !6658)
!6660 = !DILocation(line: 75, column: 2, scope: !6640)
!6661 = !DILocation(line: 76, column: 2, scope: !6640)
!6662 = !DILocation(line: 78, column: 2, scope: !6640)
!6663 = !DILocation(line: 79, column: 1, scope: !6640)
!6664 = distinct !DISubprogram(name: "device_is_ready", scope: !6665, file: !6665, line: 47, type: !6666, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6668)
!6665 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!6666 = !DISubroutineType(types: !6667)
!6667 = !{!157, !209}
!6668 = !{!6669}
!6669 = !DILocalVariable(name: "dev", arg: 1, scope: !6664, file: !6665, line: 47, type: !209)
!6670 = !DILocation(line: 0, scope: !6664)
!6671 = !DILocation(line: 55, column: 2, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6664, file: !6665, line: 55, column: 2)
!6673 = !{i64 2155015504}
!6674 = !DILocation(line: 56, column: 9, scope: !6664)
!6675 = !DILocation(line: 56, column: 2, scope: !6664)
!6676 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !6666, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6677)
!6677 = !{!6678}
!6678 = !DILocalVariable(name: "dev", arg: 1, scope: !6676, file: !141, line: 730, type: !209)
!6679 = !DILocation(line: 0, scope: !6676)
!6680 = !DILocation(line: 732, column: 9, scope: !6676)
!6681 = !DILocation(line: 732, column: 2, scope: !6676)
!6682 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6683, file: !6683, line: 57, type: !6684, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2711, retainedNodes: !6730)
!6683 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6684 = !DISubroutineType(types: !6685)
!6685 = !{null, !32, !6686}
!6686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6687, size: 32)
!6687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6688)
!6688 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2831, line: 141, baseType: !6689)
!6689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2831, line: 97, size: 256, elements: !6690)
!6690 = !{!6691}
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6689, file: !2831, line: 107, baseType: !6692, size: 256)
!6692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2831, line: 98, size: 256, elements: !6693)
!6693 = !{!6694, !6699, !6704, !6709, !6714, !6719, !6724, !6729}
!6694 = !DIDerivedType(tag: DW_TAG_member, scope: !6692, file: !2831, line: 99, baseType: !6695, size: 32)
!6695 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6692, file: !2831, line: 99, size: 32, elements: !6696)
!6696 = !{!6697, !6698}
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6695, file: !2831, line: 99, baseType: !121, size: 32)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6695, file: !2831, line: 99, baseType: !121, size: 32)
!6699 = !DIDerivedType(tag: DW_TAG_member, scope: !6692, file: !2831, line: 100, baseType: !6700, size: 32, offset: 32)
!6700 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6692, file: !2831, line: 100, size: 32, elements: !6701)
!6701 = !{!6702, !6703}
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6700, file: !2831, line: 100, baseType: !121, size: 32)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6700, file: !2831, line: 100, baseType: !121, size: 32)
!6704 = !DIDerivedType(tag: DW_TAG_member, scope: !6692, file: !2831, line: 101, baseType: !6705, size: 32, offset: 64)
!6705 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6692, file: !2831, line: 101, size: 32, elements: !6706)
!6706 = !{!6707, !6708}
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6705, file: !2831, line: 101, baseType: !121, size: 32)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6705, file: !2831, line: 101, baseType: !121, size: 32)
!6709 = !DIDerivedType(tag: DW_TAG_member, scope: !6692, file: !2831, line: 102, baseType: !6710, size: 32, offset: 96)
!6710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6692, file: !2831, line: 102, size: 32, elements: !6711)
!6711 = !{!6712, !6713}
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6710, file: !2831, line: 102, baseType: !121, size: 32)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6710, file: !2831, line: 102, baseType: !121, size: 32)
!6714 = !DIDerivedType(tag: DW_TAG_member, scope: !6692, file: !2831, line: 103, baseType: !6715, size: 32, offset: 128)
!6715 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6692, file: !2831, line: 103, size: 32, elements: !6716)
!6716 = !{!6717, !6718}
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6715, file: !2831, line: 103, baseType: !121, size: 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6715, file: !2831, line: 103, baseType: !121, size: 32)
!6719 = !DIDerivedType(tag: DW_TAG_member, scope: !6692, file: !2831, line: 104, baseType: !6720, size: 32, offset: 160)
!6720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6692, file: !2831, line: 104, size: 32, elements: !6721)
!6721 = !{!6722, !6723}
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6720, file: !2831, line: 104, baseType: !121, size: 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6720, file: !2831, line: 104, baseType: !121, size: 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, scope: !6692, file: !2831, line: 105, baseType: !6725, size: 32, offset: 192)
!6725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6692, file: !2831, line: 105, size: 32, elements: !6726)
!6726 = !{!6727, !6728}
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6725, file: !2831, line: 105, baseType: !121, size: 32)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6725, file: !2831, line: 105, baseType: !121, size: 32)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6692, file: !2831, line: 106, baseType: !121, size: 32, offset: 224)
!6730 = !{!6731, !6732}
!6731 = !DILocalVariable(name: "reason", arg: 1, scope: !6682, file: !6683, line: 57, type: !32)
!6732 = !DILocalVariable(name: "esf", arg: 2, scope: !6682, file: !6683, line: 57, type: !6686)
!6733 = !DILocation(line: 0, scope: !6682)
!6734 = !DILocation(line: 63, column: 2, scope: !6682)
!6735 = !DILocation(line: 64, column: 1, scope: !6682)
!6736 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6683, file: !6683, line: 82, type: !6737, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2711, retainedNodes: !6752)
!6737 = !DISubroutineType(types: !6738)
!6738 = !{null, !6686, !6739}
!6739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6740, size: 32)
!6740 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !424, line: 37, baseType: !6741)
!6741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !6742)
!6742 = !{!6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751}
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6741, file: !424, line: 26, baseType: !121, size: 32)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6741, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6741, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6741, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6741, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6741, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6741, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6741, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6741, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!6752 = !{!6753, !6754, !6755}
!6753 = !DILocalVariable(name: "esf", arg: 1, scope: !6736, file: !6683, line: 82, type: !6686)
!6754 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6736, file: !6683, line: 82, type: !6739)
!6755 = !DILocalVariable(name: "reason", scope: !6736, file: !6683, line: 88, type: !32)
!6756 = !DILocation(line: 0, scope: !6736)
!6757 = !DILocation(line: 88, column: 35, scope: !6736)
!6758 = !DILocation(line: 108, column: 2, scope: !6736)
!6759 = !DILocation(line: 131, column: 1, scope: !6736)
!6760 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6683, file: !6683, line: 133, type: !6761, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2711, retainedNodes: !6763)
!6761 = !DISubroutineType(types: !6762)
!6762 = !{null, !102}
!6763 = !{!6764, !6765, !6766}
!6764 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6760, file: !6683, line: 133, type: !102)
!6765 = !DILocalVariable(name: "ssf_contents", scope: !6760, file: !6683, line: 135, type: !845)
!6766 = !DILocalVariable(name: "oops_esf", scope: !6760, file: !6683, line: 136, type: !6688)
!6767 = !DILocation(line: 0, scope: !6760)
!6768 = !DILocation(line: 136, column: 2, scope: !6760)
!6769 = !DILocation(line: 136, column: 15, scope: !6760)
!6770 = !DILocation(line: 139, column: 22, scope: !6760)
!6771 = !DILocation(line: 139, column: 17, scope: !6760)
!6772 = !DILocation(line: 139, column: 20, scope: !6760)
!6773 = !DILocation(line: 141, column: 2, scope: !6760)
!6774 = !DILocation(line: 142, column: 2, scope: !6760)
!6775 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6776, file: !6776, line: 40, type: !5815, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6777)
!6776 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6777 = !{!6778}
!6778 = !DILocalVariable(name: "irq", arg: 1, scope: !6775, file: !6776, line: 40, type: !32)
!6779 = !DILocation(line: 0, scope: !6775)
!6780 = !DILocation(line: 42, column: 2, scope: !6775)
!6781 = !DILocation(line: 43, column: 1, scope: !6775)
!6782 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !495, file: !495, line: 1684, type: !6783, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6785)
!6783 = !DISubroutineType(types: !6784)
!6784 = !{null, !751}
!6785 = !{!6786}
!6786 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6782, file: !495, line: 1684, type: !751)
!6787 = !DILocation(line: 0, scope: !6782)
!6788 = !DILocation(line: 1686, column: 23, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6782, file: !495, line: 1686, column: 7)
!6790 = !DILocation(line: 1686, column: 7, scope: !6782)
!6791 = !DILocation(line: 1688, column: 5, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6789, file: !495, line: 1687, column: 3)
!6793 = !{i64 2151069585}
!6794 = !DILocation(line: 1689, column: 81, scope: !6792)
!6795 = !DILocation(line: 1689, column: 60, scope: !6792)
!6796 = !DILocation(line: 1689, column: 34, scope: !6792)
!6797 = !DILocation(line: 1689, column: 5, scope: !6792)
!6798 = !DILocation(line: 1689, column: 43, scope: !6792)
!6799 = !DILocation(line: 1690, column: 5, scope: !6792)
!6800 = !{i64 2151069699}
!6801 = !DILocation(line: 1691, column: 3, scope: !6792)
!6802 = !DILocation(line: 1692, column: 1, scope: !6782)
!6803 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6776, file: !6776, line: 45, type: !5815, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6804)
!6804 = !{!6805}
!6805 = !DILocalVariable(name: "irq", arg: 1, scope: !6803, file: !6776, line: 45, type: !32)
!6806 = !DILocation(line: 0, scope: !6803)
!6807 = !DILocation(line: 47, column: 2, scope: !6803)
!6808 = !DILocation(line: 48, column: 1, scope: !6803)
!6809 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !495, file: !495, line: 1722, type: !6783, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6810)
!6810 = !{!6811}
!6811 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6809, file: !495, line: 1722, type: !751)
!6812 = !DILocation(line: 0, scope: !6809)
!6813 = !DILocation(line: 1724, column: 23, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6809, file: !495, line: 1724, column: 7)
!6815 = !DILocation(line: 1724, column: 7, scope: !6809)
!6816 = !DILocation(line: 1726, column: 81, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6814, file: !495, line: 1725, column: 3)
!6818 = !DILocation(line: 1726, column: 60, scope: !6817)
!6819 = !DILocation(line: 1726, column: 34, scope: !6817)
!6820 = !DILocation(line: 1726, column: 5, scope: !6817)
!6821 = !DILocation(line: 1726, column: 43, scope: !6817)
!6822 = !DILocation(line: 271, column: 3, scope: !6823, inlinedAt: !6825)
!6823 = distinct !DISubprogram(name: "__DSB", scope: !6824, file: !6824, line: 269, type: !3244, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !461)
!6824 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6825 = distinct !DILocation(line: 1727, column: 5, scope: !6817)
!6826 = !{i64 3523968}
!6827 = !DILocation(line: 260, column: 3, scope: !6828, inlinedAt: !6829)
!6828 = distinct !DISubprogram(name: "__ISB", scope: !6824, file: !6824, line: 258, type: !3244, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !461)
!6829 = distinct !DILocation(line: 1728, column: 5, scope: !6817)
!6830 = !{i64 3523685}
!6831 = !DILocation(line: 1729, column: 3, scope: !6817)
!6832 = !DILocation(line: 1730, column: 1, scope: !6809)
!6833 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6776, file: !6776, line: 50, type: !6834, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6836)
!6834 = !DISubroutineType(types: !6835)
!6835 = !{!103, !32}
!6836 = !{!6837}
!6837 = !DILocalVariable(name: "irq", arg: 1, scope: !6833, file: !6776, line: 50, type: !32)
!6838 = !DILocation(line: 0, scope: !6833)
!6839 = !DILocation(line: 52, column: 20, scope: !6833)
!6840 = !DILocation(line: 52, column: 9, scope: !6833)
!6841 = !DILocation(line: 52, column: 41, scope: !6833)
!6842 = !DILocation(line: 52, column: 39, scope: !6833)
!6843 = !DILocation(line: 52, column: 2, scope: !6833)
!6844 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6776, file: !6776, line: 64, type: !6845, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6847)
!6845 = !DISubroutineType(types: !6846)
!6846 = !{null, !32, !32, !121}
!6847 = !{!6848, !6849, !6850}
!6848 = !DILocalVariable(name: "irq", arg: 1, scope: !6844, file: !6776, line: 64, type: !32)
!6849 = !DILocalVariable(name: "prio", arg: 2, scope: !6844, file: !6776, line: 64, type: !32)
!6850 = !DILocalVariable(name: "flags", arg: 3, scope: !6844, file: !6776, line: 64, type: !121)
!6851 = !DILocation(line: 0, scope: !6844)
!6852 = !DILocation(line: 83, column: 8, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6854, file: !6776, line: 82, column: 9)
!6854 = distinct !DILexicalBlock(scope: !6844, file: !6776, line: 76, column: 6)
!6855 = !DILocation(line: 95, column: 2, scope: !6844)
!6856 = !DILocation(line: 96, column: 1, scope: !6844)
!6857 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6858, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6860)
!6858 = !DISubroutineType(types: !6859)
!6859 = !{null, !751, !121}
!6860 = !{!6861, !6862}
!6861 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6857, file: !495, line: 1814, type: !751)
!6862 = !DILocalVariable(name: "priority", arg: 2, scope: !6857, file: !495, line: 1814, type: !121)
!6863 = !DILocation(line: 0, scope: !6857)
!6864 = !DILocation(line: 0, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6857, file: !495, line: 1816, column: 7)
!6866 = !DILocation(line: 1816, column: 7, scope: !6857)
!6867 = !DILocation(line: 1824, column: 1, scope: !6857)
!6868 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6776, file: !6776, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6869)
!6869 = !{!6870}
!6870 = !DILocalVariable(name: "unused", arg: 1, scope: !6868, file: !6776, line: 155, type: !13)
!6871 = !DILocation(line: 0, scope: !6868)
!6872 = !DILocation(line: 159, column: 2, scope: !6868)
!6873 = !DILocation(line: 160, column: 1, scope: !6868)
!6874 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6875, file: !6875, line: 87, type: !3244, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !461)
!6875 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6876 = !DILocation(line: 89, column: 2, scope: !6874)
!6877 = !DILocation(line: 90, column: 2, scope: !6874)
!6878 = !DILocation(line: 91, column: 1, scope: !6874)
!6879 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6875, file: !6875, line: 23, type: !3244, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!6880 = !DISubprogram(name: "z_arm_int_exit", scope: !6881, file: !6881, line: 153, type: !3244, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!6881 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6882 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6883, file: !6883, line: 256, type: !3244, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !461)
!6883 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6884 = !DILocation(line: 258, column: 2, scope: !6882)
!6885 = !DILocation(line: 260, column: 2, scope: !6882)
!6886 = !DILocation(line: 262, column: 2, scope: !6882)
!6887 = !DILocation(line: 263, column: 2, scope: !6882)
!6888 = !DILocation(line: 267, column: 2, scope: !6882)
!6889 = !DILocation(line: 268, column: 2, scope: !6882)
!6890 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6883, file: !6883, line: 53, type: !3244, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !461)
!6891 = !DILocation(line: 55, column: 12, scope: !6890)
!6892 = !DILocation(line: 271, column: 3, scope: !6893, inlinedAt: !6894)
!6893 = distinct !DISubprogram(name: "__DSB", scope: !6824, file: !6824, line: 269, type: !3244, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !461)
!6894 = distinct !DILocation(line: 56, column: 2, scope: !6890)
!6895 = !{i64 3522639}
!6896 = !DILocation(line: 260, column: 3, scope: !6897, inlinedAt: !6898)
!6897 = distinct !DISubprogram(name: "__ISB", scope: !6824, file: !6824, line: 258, type: !3244, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !461)
!6898 = distinct !DILocation(line: 57, column: 2, scope: !6890)
!6899 = !{i64 3522356}
!6900 = !DILocation(line: 58, column: 1, scope: !6890)
!6901 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6883, file: !6883, line: 96, type: !3244, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !461)
!6902 = !DILocation(line: 103, column: 13, scope: !6901)
!6903 = !DILocation(line: 975, column: 3, scope: !6904, inlinedAt: !6909)
!6904 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6824, file: !6824, line: 971, type: !6905, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !6907)
!6905 = !DISubroutineType(types: !6906)
!6906 = !{!121}
!6907 = !{!6908}
!6908 = !DILocalVariable(name: "result", scope: !6904, file: !6824, line: 973, type: !121)
!6909 = distinct !DILocation(line: 189, column: 16, scope: !6901)
!6910 = !{i64 3543469}
!6911 = !DILocation(line: 0, scope: !6904, inlinedAt: !6909)
!6912 = !DILocation(line: 189, column: 32, scope: !6901)
!6913 = !DILocalVariable(name: "control", arg: 1, scope: !6914, file: !6824, line: 1001, type: !121)
!6914 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6824, file: !6824, line: 1001, type: !6915, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !6917)
!6915 = !DISubroutineType(types: !6916)
!6916 = !{null, !121}
!6917 = !{!6913}
!6918 = !DILocation(line: 0, scope: !6914, inlinedAt: !6919)
!6919 = distinct !DILocation(line: 189, column: 2, scope: !6901)
!6920 = !DILocation(line: 1003, column: 3, scope: !6914, inlinedAt: !6919)
!6921 = !{i64 3544189}
!6922 = !DILocation(line: 260, column: 3, scope: !6897, inlinedAt: !6923)
!6923 = distinct !DILocation(line: 1004, column: 3, scope: !6914, inlinedAt: !6919)
!6924 = !DILocation(line: 191, column: 1, scope: !6901)
!6925 = distinct !DISubprogram(name: "arch_swap", scope: !6926, file: !6926, line: 33, type: !6834, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !6927)
!6926 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6927 = !{!6928}
!6928 = !DILocalVariable(name: "key", arg: 1, scope: !6925, file: !6926, line: 33, type: !32)
!6929 = !DILocation(line: 0, scope: !6925)
!6930 = !DILocation(line: 36, column: 2, scope: !6925)
!6931 = !DILocation(line: 36, column: 17, scope: !6925)
!6932 = !DILocation(line: 36, column: 25, scope: !6925)
!6933 = !DILocation(line: 37, column: 37, scope: !6925)
!6934 = !DILocation(line: 37, column: 17, scope: !6925)
!6935 = !DILocation(line: 37, column: 35, scope: !6925)
!6936 = !DILocation(line: 41, column: 12, scope: !6925)
!6937 = !DILocalVariable(name: "key", arg: 1, scope: !6938, file: !5804, line: 84, type: !32)
!6938 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5804, file: !5804, line: 84, type: !5815, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !6939)
!6939 = !{!6937}
!6940 = !DILocation(line: 0, scope: !6938, inlinedAt: !6941)
!6941 = distinct !DILocation(line: 44, column: 2, scope: !6925)
!6942 = !DILocation(line: 95, column: 2, scope: !6938, inlinedAt: !6941)
!6943 = !{i64 2221961}
!6944 = !DILocation(line: 53, column: 9, scope: !6925)
!6945 = !DILocation(line: 53, column: 24, scope: !6925)
!6946 = !DILocation(line: 53, column: 2, scope: !6925)
!6947 = distinct !DISubprogram(name: "arch_new_thread", scope: !6948, file: !6948, line: 56, type: !6949, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !7056)
!6948 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6949 = !DISubroutineType(types: !6950)
!6950 = !{null, !6951, !7051, !1071, !3555, !102, !102, !102}
!6951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6952, size: 32)
!6952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !6953)
!6953 = !{!6954, !7012, !7024, !7025, !7026, !7027, !7033, !7046}
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6952, file: !355, line: 247, baseType: !6955, size: 384)
!6955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !6956)
!6956 = !{!6957, !6981, !6988, !6989, !6990, !6999, !7000, !7001}
!6957 = !DIDerivedType(tag: DW_TAG_member, scope: !6955, file: !355, line: 60, baseType: !6958, size: 64)
!6958 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6955, file: !355, line: 60, size: 64, elements: !6959)
!6959 = !{!6960, !6975}
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6958, file: !355, line: 61, baseType: !6961, size: 64)
!6961 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !6962)
!6962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !6963)
!6963 = !{!6964, !6970}
!6964 = !DIDerivedType(tag: DW_TAG_member, scope: !6962, file: !309, line: 38, baseType: !6965, size: 32)
!6965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6962, file: !309, line: 38, size: 32, elements: !6966)
!6966 = !{!6967, !6969}
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6965, file: !309, line: 39, baseType: !6968, size: 32)
!6968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6962, size: 32)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6965, file: !309, line: 40, baseType: !6968, size: 32)
!6970 = !DIDerivedType(tag: DW_TAG_member, scope: !6962, file: !309, line: 42, baseType: !6971, size: 32, offset: 32)
!6971 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6962, file: !309, line: 42, size: 32, elements: !6972)
!6972 = !{!6973, !6974}
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6971, file: !309, line: 43, baseType: !6968, size: 32)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6971, file: !309, line: 44, baseType: !6968, size: 32)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6958, file: !355, line: 62, baseType: !6976, size: 64)
!6976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !6977)
!6977 = !{!6978}
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6976, file: !380, line: 50, baseType: !6979, size: 64)
!6979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6980, size: 64, elements: !385)
!6980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6976, size: 32)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6955, file: !355, line: 68, baseType: !6982, size: 32, offset: 64)
!6982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6983, size: 32)
!6983 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !6984)
!6984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !6985)
!6985 = !{!6986}
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6984, file: !304, line: 232, baseType: !6987, size: 64)
!6987 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !6962)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6955, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6955, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!6990 = !DIDerivedType(tag: DW_TAG_member, scope: !6955, file: !355, line: 90, baseType: !6991, size: 16, offset: 112)
!6991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6955, file: !355, line: 90, size: 16, elements: !6992)
!6992 = !{!6993, !6998}
!6993 = !DIDerivedType(tag: DW_TAG_member, scope: !6991, file: !355, line: 91, baseType: !6994, size: 16)
!6994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6991, file: !355, line: 91, size: 16, elements: !6995)
!6995 = !{!6996, !6997}
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6994, file: !355, line: 96, baseType: !403, size: 8)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6994, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6991, file: !355, line: 100, baseType: !328, size: 16)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6955, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6955, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6955, file: !355, line: 131, baseType: !7002, size: 192, offset: 192)
!7002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !7003)
!7003 = !{!7004, !7005, !7011}
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7002, file: !304, line: 245, baseType: !6961, size: 64)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7002, file: !304, line: 246, baseType: !7006, size: 32, offset: 64)
!7006 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !7007)
!7007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7008, size: 32)
!7008 = !DISubroutineType(types: !7009)
!7009 = !{null, !7010}
!7010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7002, size: 32)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7002, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6952, file: !355, line: 250, baseType: !7013, size: 288, offset: 384)
!7013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !7014)
!7014 = !{!7015, !7016, !7017, !7018, !7019, !7020, !7021, !7022, !7023}
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7013, file: !424, line: 26, baseType: !121, size: 32)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7013, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7013, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7013, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7013, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7013, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7013, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7013, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7013, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6952, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6952, file: !355, line: 256, baseType: !6983, size: 64, offset: 704)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6952, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6952, file: !355, line: 300, baseType: !7028, size: 96, offset: 800)
!7028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !7029)
!7029 = !{!7030, !7031, !7032}
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7028, file: !355, line: 153, baseType: !22, size: 32)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7028, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7028, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6952, file: !355, line: 325, baseType: !7034, size: 32, offset: 896)
!7034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7035, size: 32)
!7035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !7036)
!7036 = !{!7037, !7043, !7044}
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7035, file: !300, line: 5074, baseType: !7038, size: 96)
!7038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !7039)
!7039 = !{!7040, !7041, !7042}
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7038, file: !450, line: 57, baseType: !453, size: 32)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7038, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7038, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7035, file: !300, line: 5075, baseType: !6983, size: 64, offset: 96)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7035, file: !300, line: 5076, baseType: !7045, offset: 160)
!7045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6952, file: !355, line: 343, baseType: !7047, size: 64, offset: 928)
!7047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !7048)
!7048 = !{!7049, !7050}
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7047, file: !424, line: 63, baseType: !121, size: 32)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7047, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!7051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7052, size: 32)
!7052 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3556, line: 44, baseType: !7053)
!7053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2173, line: 47, size: 8, elements: !7054)
!7054 = !{!7055}
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7053, file: !2173, line: 48, baseType: !146, size: 8)
!7056 = !{!7057, !7058, !7059, !7060, !7061, !7062, !7063, !7064}
!7057 = !DILocalVariable(name: "thread", arg: 1, scope: !6947, file: !6948, line: 56, type: !6951)
!7058 = !DILocalVariable(name: "stack", arg: 2, scope: !6947, file: !6948, line: 56, type: !7051)
!7059 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6947, file: !6948, line: 57, type: !1071)
!7060 = !DILocalVariable(name: "entry", arg: 4, scope: !6947, file: !6948, line: 57, type: !3555)
!7061 = !DILocalVariable(name: "p1", arg: 5, scope: !6947, file: !6948, line: 58, type: !102)
!7062 = !DILocalVariable(name: "p2", arg: 6, scope: !6947, file: !6948, line: 58, type: !102)
!7063 = !DILocalVariable(name: "p3", arg: 7, scope: !6947, file: !6948, line: 58, type: !102)
!7064 = !DILocalVariable(name: "iframe", scope: !6947, file: !6948, line: 60, type: !2829)
!7065 = !DILocation(line: 0, scope: !6947)
!7066 = !DILocation(line: 85, column: 11, scope: !6947)
!7067 = !DILocation(line: 93, column: 10, scope: !6947)
!7068 = !DILocation(line: 98, column: 13, scope: !6947)
!7069 = !DILocation(line: 100, column: 15, scope: !6947)
!7070 = !DILocation(line: 100, column: 10, scope: !6947)
!7071 = !DILocation(line: 100, column: 13, scope: !6947)
!7072 = !DILocation(line: 101, column: 15, scope: !6947)
!7073 = !DILocation(line: 101, column: 10, scope: !6947)
!7074 = !DILocation(line: 101, column: 13, scope: !6947)
!7075 = !DILocation(line: 102, column: 15, scope: !6947)
!7076 = !DILocation(line: 102, column: 10, scope: !6947)
!7077 = !DILocation(line: 102, column: 13, scope: !6947)
!7078 = !DILocation(line: 103, column: 15, scope: !6947)
!7079 = !DILocation(line: 103, column: 10, scope: !6947)
!7080 = !DILocation(line: 103, column: 13, scope: !6947)
!7081 = !DILocation(line: 106, column: 10, scope: !6947)
!7082 = !DILocation(line: 106, column: 15, scope: !6947)
!7083 = !DILocation(line: 122, column: 29, scope: !6947)
!7084 = !DILocation(line: 122, column: 23, scope: !6947)
!7085 = !DILocation(line: 122, column: 27, scope: !6947)
!7086 = !DILocation(line: 123, column: 15, scope: !6947)
!7087 = !DILocation(line: 123, column: 23, scope: !6947)
!7088 = !DILocation(line: 143, column: 1, scope: !6947)
!7089 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6948, file: !6948, line: 385, type: !7090, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !7093)
!7090 = !DISubroutineType(types: !7091)
!7091 = !{!121, !7092, !7092}
!7092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!7093 = !{!7094, !7095, !7096, !7099}
!7094 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7089, file: !6948, line: 385, type: !7092)
!7095 = !DILocalVariable(name: "psp", arg: 2, scope: !7089, file: !6948, line: 385, type: !7092)
!7096 = !DILocalVariable(name: "thread", scope: !7089, file: !6948, line: 388, type: !7097)
!7097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7098, size: 32)
!7098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6952)
!7099 = !DILocalVariable(name: "guard_len", scope: !7089, file: !6948, line: 405, type: !121)
!7100 = !DILocation(line: 0, scope: !7089)
!7101 = !DILocation(line: 388, column: 34, scope: !7089)
!7102 = !DILocation(line: 390, column: 13, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7089, file: !6948, line: 390, column: 6)
!7104 = !DILocation(line: 390, column: 6, scope: !7089)
!7105 = !DILocation(line: 438, column: 6, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7089, file: !6948, line: 438, column: 6)
!7107 = !DILocation(line: 438, column: 6, scope: !7089)
!7108 = !DILocation(line: 442, column: 3, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7106, file: !6948, line: 440, column: 22)
!7110 = !DILocation(line: 455, column: 1, scope: !7089)
!7111 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6948, file: !6948, line: 530, type: !7112, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !7114)
!7112 = !DISubroutineType(types: !7113)
!7113 = !{null, !6951, !1071, !3555}
!7114 = !{!7115, !7116, !7117}
!7115 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7111, file: !6948, line: 530, type: !6951)
!7116 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7111, file: !6948, line: 530, type: !1071)
!7117 = !DILocalVariable(name: "_main", arg: 3, scope: !7111, file: !6948, line: 531, type: !3555)
!7118 = !DILocation(line: 0, scope: !7111)
!7119 = !DILocation(line: 535, column: 11, scope: !7111)
!7120 = !DILocation(line: 560, column: 2, scope: !7111)
!7121 = !DILocation(line: 576, column: 2, scope: !7111)
!7122 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7123 = !DILocation(line: 603, column: 2, scope: !7111)
!7124 = distinct !DISubprogram(name: "z_arm_fault", scope: !7125, file: !7125, line: 1036, type: !7126, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7141)
!7125 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7126 = !DISubroutineType(types: !7127)
!7127 = !{null, !121, !121, !121, !7128}
!7128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7129, size: 32)
!7129 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !424, line: 37, baseType: !7130)
!7130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !7131)
!7131 = !{!7132, !7133, !7134, !7135, !7136, !7137, !7138, !7139, !7140}
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7130, file: !424, line: 26, baseType: !121, size: 32)
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7130, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7130, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7130, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7130, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7130, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7130, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7130, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7130, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!7141 = !{!7142, !7143, !7144, !7145, !7146, !7147, !7148, !7149, !7150, !7151}
!7142 = !DILocalVariable(name: "msp", arg: 1, scope: !7124, file: !7125, line: 1036, type: !121)
!7143 = !DILocalVariable(name: "psp", arg: 2, scope: !7124, file: !7125, line: 1036, type: !121)
!7144 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7124, file: !7125, line: 1036, type: !121)
!7145 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7124, file: !7125, line: 1037, type: !7128)
!7146 = !DILocalVariable(name: "reason", scope: !7124, file: !7125, line: 1039, type: !121)
!7147 = !DILocalVariable(name: "fault", scope: !7124, file: !7125, line: 1040, type: !103)
!7148 = !DILocalVariable(name: "recoverable", scope: !7124, file: !7125, line: 1041, type: !157)
!7149 = !DILocalVariable(name: "nested_exc", scope: !7124, file: !7125, line: 1041, type: !157)
!7150 = !DILocalVariable(name: "esf", scope: !7124, file: !7125, line: 1042, type: !2897)
!7151 = !DILocalVariable(name: "esf_copy", scope: !7124, file: !7125, line: 1047, type: !2898)
!7152 = !DILocation(line: 0, scope: !7124)
!7153 = !DILocation(line: 1040, column: 19, scope: !7124)
!7154 = !DILocation(line: 1040, column: 24, scope: !7124)
!7155 = !DILocation(line: 1041, column: 2, scope: !7124)
!7156 = !DILocation(line: 1047, column: 2, scope: !7124)
!7157 = !DILocation(line: 1047, column: 15, scope: !7124)
!7158 = !DILocalVariable(name: "key", arg: 1, scope: !7159, file: !5804, line: 84, type: !32)
!7159 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5804, file: !5804, line: 84, type: !5815, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7160)
!7160 = !{!7158}
!7161 = !DILocation(line: 0, scope: !7159, inlinedAt: !7162)
!7162 = distinct !DILocation(line: 1050, column: 2, scope: !7124)
!7163 = !DILocation(line: 95, column: 2, scope: !7159, inlinedAt: !7162)
!7164 = !{i64 2255205}
!7165 = !DILocation(line: 1055, column: 9, scope: !7124)
!7166 = !DILocation(line: 1063, column: 11, scope: !7124)
!7167 = !DILocation(line: 1064, column: 6, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7124, file: !7125, line: 1064, column: 6)
!7169 = !{i8 0, i8 2}
!7170 = !DILocation(line: 1064, column: 6, scope: !7124)
!7171 = !DILocation(line: 1070, column: 20, scope: !7124)
!7172 = !DILocation(line: 1070, column: 2, scope: !7124)
!7173 = !DILocation(line: 1089, column: 6, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7124, file: !7125, line: 1089, column: 6)
!7175 = !DILocation(line: 0, scope: !7174)
!7176 = !DILocation(line: 1089, column: 6, scope: !7124)
!7177 = !DILocation(line: 1090, column: 28, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !7125, line: 1090, column: 7)
!7179 = distinct !DILexicalBlock(scope: !7174, file: !7125, line: 1089, column: 18)
!7180 = !DILocation(line: 1090, column: 44, scope: !7178)
!7181 = !DILocation(line: 1090, column: 7, scope: !7179)
!7182 = !DILocation(line: 1091, column: 24, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7178, file: !7125, line: 1090, column: 50)
!7184 = !DILocation(line: 1092, column: 3, scope: !7183)
!7185 = !DILocation(line: 1094, column: 23, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7174, file: !7125, line: 1093, column: 9)
!7187 = !DILocation(line: 1097, column: 2, scope: !7124)
!7188 = !DILocation(line: 1098, column: 1, scope: !7124)
!7189 = distinct !DISubprogram(name: "get_esf", scope: !7125, file: !7125, line: 894, type: !7190, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7193)
!7190 = !DISubroutineType(types: !7191)
!7191 = !{!2897, !121, !121, !121, !7192}
!7192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!7193 = !{!7194, !7195, !7196, !7197, !7198, !7199}
!7194 = !DILocalVariable(name: "msp", arg: 1, scope: !7189, file: !7125, line: 894, type: !121)
!7195 = !DILocalVariable(name: "psp", arg: 2, scope: !7189, file: !7125, line: 894, type: !121)
!7196 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7189, file: !7125, line: 894, type: !121)
!7197 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7189, file: !7125, line: 895, type: !7192)
!7198 = !DILocalVariable(name: "alternative_state_exc", scope: !7189, file: !7125, line: 897, type: !157)
!7199 = !DILocalVariable(name: "ptr_esf", scope: !7189, file: !7125, line: 898, type: !2897)
!7200 = !DILocation(line: 0, scope: !7189)
!7201 = !DILocation(line: 900, column: 14, scope: !7189)
!7202 = !DILocation(line: 902, column: 49, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7189, file: !7125, line: 902, column: 6)
!7204 = !DILocation(line: 902, column: 6, scope: !7189)
!7205 = !DILocation(line: 983, column: 18, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7189, file: !7125, line: 983, column: 6)
!7207 = !DILocation(line: 991, column: 7, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7209, file: !7125, line: 990, column: 30)
!7209 = distinct !DILexicalBlock(scope: !7189, file: !7125, line: 990, column: 6)
!7210 = !DILocation(line: 998, column: 16, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !7125, line: 995, column: 10)
!7212 = distinct !DILexicalBlock(scope: !7208, file: !7125, line: 991, column: 7)
!7213 = !DILocation(line: 1002, column: 2, scope: !7189)
!7214 = !DILocation(line: 1003, column: 1, scope: !7189)
!7215 = distinct !DISubprogram(name: "fault_handle", scope: !7125, file: !7125, line: 786, type: !7216, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7218)
!7216 = !DISubroutineType(types: !7217)
!7217 = !{!121, !2897, !103, !7192}
!7218 = !{!7219, !7220, !7221, !7222}
!7219 = !DILocalVariable(name: "esf", arg: 1, scope: !7215, file: !7125, line: 786, type: !2897)
!7220 = !DILocalVariable(name: "fault", arg: 2, scope: !7215, file: !7125, line: 786, type: !103)
!7221 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7215, file: !7125, line: 786, type: !7192)
!7222 = !DILocalVariable(name: "reason", scope: !7215, file: !7125, line: 788, type: !121)
!7223 = !DILocation(line: 0, scope: !7215)
!7224 = !DILocation(line: 790, column: 15, scope: !7215)
!7225 = !DILocation(line: 792, column: 2, scope: !7215)
!7226 = !DILocation(line: 794, column: 12, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7215, file: !7125, line: 792, column: 17)
!7228 = !DILocation(line: 795, column: 3, scope: !7227)
!7229 = !DILocation(line: 800, column: 12, scope: !7227)
!7230 = !DILocation(line: 801, column: 3, scope: !7227)
!7231 = !DILocation(line: 803, column: 12, scope: !7227)
!7232 = !DILocation(line: 804, column: 3, scope: !7227)
!7233 = !DILocation(line: 806, column: 12, scope: !7227)
!7234 = !DILocation(line: 807, column: 3, scope: !7227)
!7235 = !DILocation(line: 814, column: 3, scope: !7227)
!7236 = !DILocation(line: 815, column: 3, scope: !7227)
!7237 = !DILocation(line: 829, column: 2, scope: !7215)
!7238 = distinct !DISubprogram(name: "hard_fault", scope: !7125, file: !7125, line: 709, type: !7239, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7241)
!7239 = !DISubroutineType(types: !7240)
!7240 = !{!121, !2897, !7192}
!7241 = !{!7242, !7243, !7244}
!7242 = !DILocalVariable(name: "esf", arg: 1, scope: !7238, file: !7125, line: 709, type: !2897)
!7243 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7238, file: !7125, line: 709, type: !7192)
!7244 = !DILocalVariable(name: "reason", scope: !7238, file: !7125, line: 711, type: !121)
!7245 = !DILocation(line: 0, scope: !7238)
!7246 = !DILocation(line: 732, column: 15, scope: !7238)
!7247 = !DILocation(line: 734, column: 12, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7238, file: !7125, line: 734, column: 6)
!7249 = !DILocation(line: 734, column: 17, scope: !7248)
!7250 = !DILocation(line: 734, column: 41, scope: !7248)
!7251 = !DILocation(line: 734, column: 6, scope: !7238)
!7252 = !DILocation(line: 736, column: 19, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7248, file: !7125, line: 736, column: 13)
!7254 = !DILocation(line: 736, column: 49, scope: !7253)
!7255 = !DILocation(line: 736, column: 13, scope: !7248)
!7256 = !DILocation(line: 738, column: 19, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7253, file: !7125, line: 738, column: 13)
!7258 = !DILocation(line: 738, column: 24, scope: !7257)
!7259 = !DILocation(line: 738, column: 47, scope: !7257)
!7260 = !DILocation(line: 738, column: 13, scope: !7253)
!7261 = !DILocation(line: 740, column: 7, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7263, file: !7125, line: 740, column: 7)
!7263 = distinct !DILexicalBlock(scope: !7257, file: !7125, line: 738, column: 53)
!7264 = !DILocation(line: 740, column: 7, scope: !7263)
!7265 = !DILocation(line: 742, column: 24, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7262, file: !7125, line: 740, column: 38)
!7267 = !DILocation(line: 743, column: 3, scope: !7266)
!7268 = !DILocation(line: 743, column: 20, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7262, file: !7125, line: 743, column: 14)
!7270 = !DILocation(line: 743, column: 25, scope: !7269)
!7271 = !DILocation(line: 743, column: 52, scope: !7269)
!7272 = !DILocation(line: 743, column: 14, scope: !7262)
!7273 = !DILocation(line: 744, column: 13, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7269, file: !7125, line: 743, column: 58)
!7275 = !DILocation(line: 745, column: 3, scope: !7274)
!7276 = !DILocation(line: 745, column: 20, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7269, file: !7125, line: 745, column: 14)
!7278 = !DILocation(line: 745, column: 25, scope: !7277)
!7279 = !DILocation(line: 745, column: 52, scope: !7277)
!7280 = !DILocation(line: 745, column: 14, scope: !7269)
!7281 = !DILocation(line: 746, column: 13, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7277, file: !7125, line: 745, column: 58)
!7283 = !DILocation(line: 747, column: 3, scope: !7282)
!7284 = !DILocation(line: 747, column: 20, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7277, file: !7125, line: 747, column: 14)
!7286 = !DILocation(line: 747, column: 52, scope: !7285)
!7287 = !DILocation(line: 747, column: 14, scope: !7277)
!7288 = !DILocation(line: 748, column: 13, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7285, file: !7125, line: 747, column: 58)
!7290 = !DILocation(line: 753, column: 3, scope: !7289)
!7291 = !DILocation(line: 766, column: 2, scope: !7238)
!7292 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7125, file: !7125, line: 229, type: !7216, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7293)
!7293 = !{!7294, !7295, !7296, !7297, !7298, !7299, !7302}
!7294 = !DILocalVariable(name: "esf", arg: 1, scope: !7292, file: !7125, line: 229, type: !2897)
!7295 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7292, file: !7125, line: 229, type: !103)
!7296 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7292, file: !7125, line: 230, type: !7192)
!7297 = !DILocalVariable(name: "reason", scope: !7292, file: !7125, line: 232, type: !121)
!7298 = !DILocalVariable(name: "mmfar", scope: !7292, file: !7125, line: 233, type: !121)
!7299 = !DILocalVariable(name: "temp", scope: !7300, file: !7125, line: 254, type: !121)
!7300 = distinct !DILexicalBlock(scope: !7301, file: !7125, line: 244, column: 48)
!7301 = distinct !DILexicalBlock(scope: !7292, file: !7125, line: 244, column: 6)
!7302 = !DILocalVariable(name: "min_stack_ptr", scope: !7303, file: !7125, line: 309, type: !121)
!7303 = distinct !DILexicalBlock(scope: !7304, file: !7125, line: 308, column: 43)
!7304 = distinct !DILexicalBlock(scope: !7305, file: !7125, line: 308, column: 7)
!7305 = distinct !DILexicalBlock(scope: !7306, file: !7125, line: 289, column: 40)
!7306 = distinct !DILexicalBlock(scope: !7292, file: !7125, line: 288, column: 6)
!7307 = !DILocation(line: 0, scope: !7292)
!7308 = !DILocation(line: 237, column: 12, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7292, file: !7125, line: 237, column: 6)
!7310 = !DILocation(line: 241, column: 12, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7292, file: !7125, line: 241, column: 6)
!7312 = !DILocation(line: 244, column: 12, scope: !7301)
!7313 = !DILocation(line: 244, column: 17, scope: !7301)
!7314 = !DILocation(line: 244, column: 42, scope: !7301)
!7315 = !DILocation(line: 244, column: 6, scope: !7292)
!7316 = !DILocation(line: 254, column: 24, scope: !7300)
!7317 = !DILocation(line: 0, scope: !7300)
!7318 = !DILocation(line: 256, column: 13, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7300, file: !7125, line: 256, column: 7)
!7320 = !DILocation(line: 256, column: 18, scope: !7319)
!7321 = !DILocation(line: 256, column: 44, scope: !7319)
!7322 = !DILocation(line: 256, column: 7, scope: !7300)
!7323 = !DILocation(line: 259, column: 24, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7325, file: !7125, line: 259, column: 8)
!7325 = distinct !DILexicalBlock(scope: !7319, file: !7125, line: 256, column: 50)
!7326 = !DILocation(line: 259, column: 8, scope: !7325)
!7327 = !DILocation(line: 261, column: 15, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7324, file: !7125, line: 259, column: 30)
!7329 = !DILocation(line: 262, column: 4, scope: !7328)
!7330 = !DILocation(line: 265, column: 12, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7292, file: !7125, line: 265, column: 6)
!7332 = !DILocation(line: 269, column: 12, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7292, file: !7125, line: 269, column: 6)
!7334 = !DILocation(line: 288, column: 12, scope: !7306)
!7335 = !DILocation(line: 288, column: 17, scope: !7306)
!7336 = !DILocation(line: 288, column: 41, scope: !7306)
!7337 = !DILocation(line: 289, column: 9, scope: !7306)
!7338 = !DILocation(line: 289, column: 14, scope: !7306)
!7339 = !DILocation(line: 288, column: 6, scope: !7292)
!7340 = !DILocation(line: 308, column: 12, scope: !7304)
!7341 = !DILocation(line: 308, column: 17, scope: !7304)
!7342 = !DILocation(line: 308, column: 7, scope: !7305)
!7343 = !DILocation(line: 310, column: 6, scope: !7303)
!7344 = !DILocation(line: 309, column: 29, scope: !7303)
!7345 = !DILocation(line: 0, scope: !7303)
!7346 = !DILocation(line: 312, column: 8, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7303, file: !7125, line: 312, column: 8)
!7348 = !DILocation(line: 312, column: 8, scope: !7303)
!7349 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7350, file: !6824, line: 1099, type: !121)
!7350 = distinct !DISubprogram(name: "__set_PSP", scope: !6824, file: !6824, line: 1099, type: !6915, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7351)
!7351 = !{!7349}
!7352 = !DILocation(line: 0, scope: !7350, inlinedAt: !7353)
!7353 = distinct !DILocation(line: 338, column: 5, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7347, file: !7125, line: 312, column: 23)
!7355 = !DILocation(line: 1101, column: 3, scope: !7350, inlinedAt: !7353)
!7356 = !{i64 3573608}
!7357 = !DILocation(line: 341, column: 4, scope: !7354)
!7358 = !DILocation(line: 360, column: 12, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7292, file: !7125, line: 360, column: 6)
!7360 = !DILocation(line: 360, column: 17, scope: !7359)
!7361 = !DILocation(line: 360, column: 41, scope: !7359)
!7362 = !DILocation(line: 360, column: 6, scope: !7292)
!7363 = !DILocation(line: 361, column: 14, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7359, file: !7125, line: 360, column: 47)
!7365 = !DILocation(line: 362, column: 2, scope: !7364)
!7366 = !DILocation(line: 366, column: 12, scope: !7292)
!7367 = !DILocation(line: 369, column: 15, scope: !7292)
!7368 = !DILocation(line: 371, column: 2, scope: !7292)
!7369 = distinct !DISubprogram(name: "bus_fault", scope: !7125, file: !7125, line: 383, type: !7370, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7372)
!7370 = !DISubroutineType(types: !7371)
!7371 = !{!103, !2897, !103, !7192}
!7372 = !{!7373, !7374, !7375, !7376, !7377}
!7373 = !DILocalVariable(name: "esf", arg: 1, scope: !7369, file: !7125, line: 383, type: !2897)
!7374 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7369, file: !7125, line: 383, type: !103)
!7375 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7369, file: !7125, line: 383, type: !7192)
!7376 = !DILocalVariable(name: "reason", scope: !7369, file: !7125, line: 385, type: !121)
!7377 = !DILocalVariable(name: "bfar", scope: !7378, file: !7125, line: 405, type: !121)
!7378 = distinct !DILexicalBlock(scope: !7379, file: !7125, line: 395, column: 42)
!7379 = distinct !DILexicalBlock(scope: !7369, file: !7125, line: 395, column: 6)
!7380 = !DILocation(line: 0, scope: !7369)
!7381 = !DILocation(line: 389, column: 11, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7369, file: !7125, line: 389, column: 6)
!7383 = !DILocation(line: 392, column: 11, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7369, file: !7125, line: 392, column: 6)
!7385 = !DILocation(line: 395, column: 11, scope: !7379)
!7386 = !DILocation(line: 395, column: 16, scope: !7379)
!7387 = !DILocation(line: 395, column: 6, scope: !7369)
!7388 = !DILocation(line: 405, column: 3, scope: !7378)
!7389 = !DILocation(line: 0, scope: !7378)
!7390 = !DILocation(line: 407, column: 13, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7378, file: !7125, line: 407, column: 7)
!7392 = !DILocation(line: 407, column: 18, scope: !7391)
!7393 = !DILocation(line: 407, column: 44, scope: !7391)
!7394 = !DILocation(line: 407, column: 7, scope: !7378)
!7395 = !DILocation(line: 411, column: 15, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7397, file: !7125, line: 409, column: 30)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !7125, line: 409, column: 8)
!7398 = distinct !DILexicalBlock(scope: !7391, file: !7125, line: 407, column: 50)
!7399 = !DILocation(line: 412, column: 4, scope: !7396)
!7400 = !DILocation(line: 415, column: 11, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7369, file: !7125, line: 415, column: 6)
!7402 = !DILocation(line: 418, column: 12, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7369, file: !7125, line: 418, column: 6)
!7404 = !DILocation(line: 418, column: 17, scope: !7403)
!7405 = !DILocation(line: 418, column: 41, scope: !7403)
!7406 = !DILocation(line: 418, column: 6, scope: !7369)
!7407 = !DILocation(line: 423, column: 18, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7403, file: !7125, line: 423, column: 13)
!7409 = !DILocation(line: 524, column: 12, scope: !7369)
!7410 = !DILocation(line: 526, column: 15, scope: !7369)
!7411 = !DILocation(line: 528, column: 2, scope: !7369)
!7412 = distinct !DISubprogram(name: "usage_fault", scope: !7125, file: !7125, line: 539, type: !7413, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7417)
!7413 = !DISubroutineType(types: !7414)
!7414 = !{!121, !7415}
!7415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7416, size: 32)
!7416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2898)
!7417 = !{!7418, !7419}
!7418 = !DILocalVariable(name: "esf", arg: 1, scope: !7412, file: !7125, line: 539, type: !7415)
!7419 = !DILocalVariable(name: "reason", scope: !7412, file: !7125, line: 541, type: !121)
!7420 = !DILocation(line: 0, scope: !7412)
!7421 = !DILocation(line: 546, column: 12, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7412, file: !7125, line: 546, column: 6)
!7423 = !DILocation(line: 549, column: 12, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7412, file: !7125, line: 549, column: 6)
!7425 = !DILocation(line: 567, column: 12, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7412, file: !7125, line: 567, column: 6)
!7427 = !DILocation(line: 570, column: 12, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7412, file: !7125, line: 570, column: 6)
!7429 = !DILocation(line: 573, column: 12, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7412, file: !7125, line: 573, column: 6)
!7431 = !DILocation(line: 576, column: 12, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7412, file: !7125, line: 576, column: 6)
!7433 = !DILocation(line: 581, column: 12, scope: !7412)
!7434 = !DILocation(line: 583, column: 2, scope: !7412)
!7435 = distinct !DISubprogram(name: "debug_monitor", scope: !7125, file: !7125, line: 632, type: !7436, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7438)
!7436 = !DISubroutineType(types: !7437)
!7437 = !{null, !2897, !7192}
!7438 = !{!7439, !7440}
!7439 = !DILocalVariable(name: "esf", arg: 1, scope: !7435, file: !7125, line: 632, type: !2897)
!7440 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7435, file: !7125, line: 632, type: !7192)
!7441 = !DILocation(line: 0, scope: !7435)
!7442 = !DILocation(line: 634, column: 15, scope: !7435)
!7443 = !DILocation(line: 652, column: 1, scope: !7435)
!7444 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7125, file: !7125, line: 658, type: !7445, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !7447)
!7445 = !DISubroutineType(types: !7446)
!7446 = !{!157, !2897}
!7447 = !{!7448, !7449, !7450}
!7448 = !DILocalVariable(name: "esf", arg: 1, scope: !7444, file: !7125, line: 658, type: !2897)
!7449 = !DILocalVariable(name: "ret_addr", scope: !7444, file: !7125, line: 660, type: !2589)
!7450 = !DILocalVariable(name: "fault_insn", scope: !7444, file: !7125, line: 686, type: !328)
!7451 = !DILocation(line: 0, scope: !7444)
!7452 = !DILocation(line: 660, column: 46, scope: !7444)
!7453 = !DILocation(line: 660, column: 23, scope: !7444)
!7454 = !DILocation(line: 682, column: 11, scope: !7444)
!7455 = !DILocation(line: 271, column: 3, scope: !7456, inlinedAt: !7457)
!7456 = distinct !DISubprogram(name: "__DSB", scope: !6824, file: !6824, line: 269, type: !3244, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !461)
!7457 = distinct !DILocation(line: 683, column: 2, scope: !7444)
!7458 = !{i64 3549743}
!7459 = !DILocation(line: 260, column: 3, scope: !7460, inlinedAt: !7461)
!7460 = distinct !DISubprogram(name: "__ISB", scope: !6824, file: !6824, line: 258, type: !3244, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !461)
!7461 = distinct !DILocation(line: 684, column: 2, scope: !7444)
!7462 = !{i64 3549460}
!7463 = !DILocation(line: 686, column: 35, scope: !7444)
!7464 = !DILocation(line: 686, column: 24, scope: !7444)
!7465 = !DILocation(line: 688, column: 11, scope: !7444)
!7466 = !DILocation(line: 271, column: 3, scope: !7456, inlinedAt: !7467)
!7467 = distinct !DILocation(line: 689, column: 2, scope: !7444)
!7468 = !DILocation(line: 260, column: 3, scope: !7460, inlinedAt: !7469)
!7469 = distinct !DILocation(line: 690, column: 2, scope: !7444)
!7470 = !DILocation(line: 693, column: 45, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7444, file: !7125, line: 693, column: 6)
!7472 = !DILocation(line: 699, column: 1, scope: !7444)
!7473 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7125, file: !7125, line: 1107, type: !3244, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !461)
!7474 = !DILocation(line: 1111, column: 11, scope: !7473)
!7475 = !DILocation(line: 1136, column: 1, scope: !7473)
!7476 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7477, file: !7477, line: 26, type: !3244, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !7478)
!7477 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7478 = !{!7479}
!7479 = !DILocalVariable(name: "irq", scope: !7476, file: !7477, line: 28, type: !103)
!7480 = !DILocation(line: 0, scope: !7476)
!7481 = !DILocation(line: 30, column: 2, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7476, file: !7477, line: 30, column: 2)
!7483 = !DILocation(line: 31, column: 3, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7485, file: !7477, line: 30, column: 39)
!7485 = distinct !DILexicalBlock(scope: !7482, file: !7477, line: 30, column: 2)
!7486 = !DILocation(line: 30, column: 35, scope: !7485)
!7487 = !DILocation(line: 30, column: 13, scope: !7485)
!7488 = distinct !{!7488, !7481, !7489}
!7489 = !DILocation(line: 32, column: 2, scope: !7482)
!7490 = !DILocation(line: 33, column: 1, scope: !7476)
!7491 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6858, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !7492)
!7492 = !{!7493, !7494}
!7493 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7491, file: !495, line: 1814, type: !751)
!7494 = !DILocalVariable(name: "priority", arg: 2, scope: !7491, file: !495, line: 1814, type: !121)
!7495 = !DILocation(line: 0, scope: !7491)
!7496 = !DILocation(line: 1816, column: 7, scope: !7491)
!7497 = !DILocation(line: 0, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7491, file: !495, line: 1816, column: 7)
!7499 = !DILocation(line: 1824, column: 1, scope: !7491)
!7500 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7501, file: !7501, line: 27, type: !7502, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !7605)
!7501 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7502 = !DISubroutineType(types: !7503)
!7503 = !{null, !7504}
!7504 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !7505)
!7505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7506, size: 32)
!7506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !7507)
!7507 = !{!7508, !7566, !7578, !7579, !7580, !7581, !7587, !7600}
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7506, file: !355, line: 247, baseType: !7509, size: 384)
!7509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !7510)
!7510 = !{!7511, !7535, !7542, !7543, !7544, !7553, !7554, !7555}
!7511 = !DIDerivedType(tag: DW_TAG_member, scope: !7509, file: !355, line: 60, baseType: !7512, size: 64)
!7512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7509, file: !355, line: 60, size: 64, elements: !7513)
!7513 = !{!7514, !7529}
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7512, file: !355, line: 61, baseType: !7515, size: 64)
!7515 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !7516)
!7516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !7517)
!7517 = !{!7518, !7524}
!7518 = !DIDerivedType(tag: DW_TAG_member, scope: !7516, file: !309, line: 38, baseType: !7519, size: 32)
!7519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7516, file: !309, line: 38, size: 32, elements: !7520)
!7520 = !{!7521, !7523}
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7519, file: !309, line: 39, baseType: !7522, size: 32)
!7522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7516, size: 32)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7519, file: !309, line: 40, baseType: !7522, size: 32)
!7524 = !DIDerivedType(tag: DW_TAG_member, scope: !7516, file: !309, line: 42, baseType: !7525, size: 32, offset: 32)
!7525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7516, file: !309, line: 42, size: 32, elements: !7526)
!7526 = !{!7527, !7528}
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7525, file: !309, line: 43, baseType: !7522, size: 32)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7525, file: !309, line: 44, baseType: !7522, size: 32)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7512, file: !355, line: 62, baseType: !7530, size: 64)
!7530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !7531)
!7531 = !{!7532}
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7530, file: !380, line: 50, baseType: !7533, size: 64)
!7533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7534, size: 64, elements: !385)
!7534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7530, size: 32)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7509, file: !355, line: 68, baseType: !7536, size: 32, offset: 64)
!7536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7537, size: 32)
!7537 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !7538)
!7538 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !7539)
!7539 = !{!7540}
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7538, file: !304, line: 232, baseType: !7541, size: 64)
!7541 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !7516)
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7509, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7509, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!7544 = !DIDerivedType(tag: DW_TAG_member, scope: !7509, file: !355, line: 90, baseType: !7545, size: 16, offset: 112)
!7545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7509, file: !355, line: 90, size: 16, elements: !7546)
!7546 = !{!7547, !7552}
!7547 = !DIDerivedType(tag: DW_TAG_member, scope: !7545, file: !355, line: 91, baseType: !7548, size: 16)
!7548 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7545, file: !355, line: 91, size: 16, elements: !7549)
!7549 = !{!7550, !7551}
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7548, file: !355, line: 96, baseType: !403, size: 8)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7548, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7545, file: !355, line: 100, baseType: !328, size: 16)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7509, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7509, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7509, file: !355, line: 131, baseType: !7556, size: 192, offset: 192)
!7556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !7557)
!7557 = !{!7558, !7559, !7565}
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7556, file: !304, line: 245, baseType: !7515, size: 64)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7556, file: !304, line: 246, baseType: !7560, size: 32, offset: 64)
!7560 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !7561)
!7561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7562, size: 32)
!7562 = !DISubroutineType(types: !7563)
!7563 = !{null, !7564}
!7564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7556, size: 32)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7556, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7506, file: !355, line: 250, baseType: !7567, size: 288, offset: 384)
!7567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !7568)
!7568 = !{!7569, !7570, !7571, !7572, !7573, !7574, !7575, !7576, !7577}
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7567, file: !424, line: 26, baseType: !121, size: 32)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7567, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7567, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7567, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7567, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7567, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7567, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7567, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7567, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7506, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7506, file: !355, line: 256, baseType: !7537, size: 64, offset: 704)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7506, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7506, file: !355, line: 300, baseType: !7582, size: 96, offset: 800)
!7582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !7583)
!7583 = !{!7584, !7585, !7586}
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7582, file: !355, line: 153, baseType: !22, size: 32)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7582, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7582, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7506, file: !355, line: 325, baseType: !7588, size: 32, offset: 896)
!7588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7589, size: 32)
!7589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !7590)
!7590 = !{!7591, !7597, !7598}
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7589, file: !300, line: 5074, baseType: !7592, size: 96)
!7592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !7593)
!7593 = !{!7594, !7595, !7596}
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7592, file: !450, line: 57, baseType: !453, size: 32)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7592, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7592, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7589, file: !300, line: 5075, baseType: !7537, size: 64, offset: 96)
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7589, file: !300, line: 5076, baseType: !7599, offset: 160)
!7599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7506, file: !355, line: 343, baseType: !7601, size: 64, offset: 928)
!7601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !7602)
!7602 = !{!7603, !7604}
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7601, file: !424, line: 63, baseType: !121, size: 32)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7601, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!7605 = !{!7606}
!7606 = !DILocalVariable(name: "thread", arg: 1, scope: !7500, file: !7501, line: 27, type: !7504)
!7607 = !DILocation(line: 0, scope: !7500)
!7608 = !DILocation(line: 29, column: 6, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7500, file: !7501, line: 29, column: 6)
!7610 = !DILocation(line: 29, column: 15, scope: !7609)
!7611 = !DILocation(line: 29, column: 6, scope: !7500)
!7612 = !DILocation(line: 1031, column: 3, scope: !7613, inlinedAt: !7616)
!7613 = distinct !DISubprogram(name: "__get_IPSR", scope: !6824, file: !6824, line: 1027, type: !6905, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !7614)
!7614 = !{!7615}
!7615 = !DILocalVariable(name: "result", scope: !7613, file: !6824, line: 1029, type: !121)
!7616 = distinct !DILocation(line: 48, column: 10, scope: !7617, inlinedAt: !7621)
!7617 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7618, file: !7618, line: 46, type: !7619, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !461)
!7618 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7619 = !DISubroutineType(types: !7620)
!7620 = !{!157}
!7621 = distinct !DILocation(line: 30, column: 7, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7623, file: !7501, line: 30, column: 7)
!7623 = distinct !DILexicalBlock(scope: !7609, file: !7501, line: 29, column: 26)
!7624 = !{i64 3538591}
!7625 = !DILocation(line: 0, scope: !7613, inlinedAt: !7616)
!7626 = !DILocation(line: 48, column: 9, scope: !7617, inlinedAt: !7621)
!7627 = !DILocation(line: 30, column: 7, scope: !7623)
!7628 = !DILocation(line: 42, column: 14, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7622, file: !7501, line: 30, column: 25)
!7630 = !DILocation(line: 48, column: 15, scope: !7629)
!7631 = !DILocation(line: 49, column: 3, scope: !7629)
!7632 = !DILocation(line: 52, column: 2, scope: !7500)
!7633 = !DILocation(line: 53, column: 1, scope: !7500)
!7634 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !350, file: !350, line: 127, type: !3244, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !341, retainedNodes: !461)
!7635 = !DILocation(line: 134, column: 2, scope: !7634)
!7636 = !DILocation(line: 156, column: 1, scope: !7634)
!7637 = !DILocation(line: 0, scope: !349)
!7638 = !DILocation(line: 289, column: 36, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !349, file: !350, line: 285, column: 2)
!7640 = !DILocation(line: 289, column: 42, scope: !7639)
!7641 = !DILocation(line: 300, column: 36, scope: !349)
!7642 = !DILocation(line: 301, column: 35, scope: !349)
!7643 = !DILocation(line: 302, column: 37, scope: !349)
!7644 = !DILocation(line: 311, column: 2, scope: !349)
!7645 = !DILocation(line: 316, column: 1, scope: !349)
!7646 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !523, file: !523, line: 180, type: !3244, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7647 = !DILocation(line: 188, column: 12, scope: !7646)
!7648 = !DILocation(line: 271, column: 3, scope: !7649, inlinedAt: !7650)
!7649 = distinct !DISubprogram(name: "__DSB", scope: !6824, file: !6824, line: 269, type: !3244, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7650 = distinct !DILocation(line: 192, column: 2, scope: !7646)
!7651 = !{i64 3699269}
!7652 = !DILocation(line: 260, column: 3, scope: !7653, inlinedAt: !7654)
!7653 = distinct !DISubprogram(name: "__ISB", scope: !6824, file: !6824, line: 258, type: !3244, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7654 = distinct !DILocation(line: 193, column: 2, scope: !7646)
!7655 = !{i64 3698986}
!7656 = !DILocation(line: 194, column: 1, scope: !7646)
!7657 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !523, file: !523, line: 199, type: !3244, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7658 = !DILocation(line: 282, column: 3, scope: !7659, inlinedAt: !7660)
!7659 = distinct !DISubprogram(name: "__DMB", scope: !6824, file: !6824, line: 280, type: !3244, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7660 = distinct !DILocation(line: 202, column: 2, scope: !7657)
!7661 = !{i64 3699545}
!7662 = !DILocation(line: 205, column: 12, scope: !7657)
!7663 = !DILocation(line: 206, column: 1, scope: !7657)
!7664 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !523, file: !523, line: 275, type: !7665, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7678)
!7665 = !DISubroutineType(types: !7666)
!7666 = !{null, !7667, !256, !7092, !7092}
!7667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7668, size: 32)
!7668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7669)
!7669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !474, line: 52, size: 96, elements: !7670)
!7670 = !{!7671, !7672, !7673}
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7669, file: !474, line: 53, baseType: !22, size: 32)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7669, file: !474, line: 54, baseType: !344, size: 32, offset: 32)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7669, file: !474, line: 55, baseType: !7674, size: 32, offset: 64)
!7674 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !480, line: 151, baseType: !7675)
!7675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !480, line: 149, size: 32, elements: !7676)
!7676 = !{!7677}
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7675, file: !480, line: 150, baseType: !121, size: 32)
!7678 = !{!7679, !7680, !7681, !7682}
!7679 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7664, file: !523, line: 276, type: !7667)
!7680 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7664, file: !523, line: 276, type: !256)
!7681 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7664, file: !523, line: 277, type: !7092)
!7682 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7664, file: !523, line: 277, type: !7092)
!7683 = !DILocation(line: 0, scope: !7664)
!7684 = !DILocation(line: 279, column: 6, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7664, file: !523, line: 279, column: 6)
!7686 = !DILocation(line: 285, column: 1, scope: !7664)
!7687 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7688, file: !7688, line: 220, type: !7689, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7691)
!7688 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7689 = !DISubroutineType(types: !7690)
!7690 = !{!103, !7667, !256, !7092, !7092}
!7691 = !{!7692, !7693, !7694, !7695, !7696}
!7692 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7687, file: !7688, line: 221, type: !7667)
!7693 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7687, file: !7688, line: 221, type: !256)
!7694 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7687, file: !7688, line: 222, type: !7092)
!7695 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7687, file: !7688, line: 223, type: !7092)
!7696 = !DILocalVariable(name: "mpu_reg_index", scope: !7687, file: !7688, line: 225, type: !103)
!7697 = !DILocation(line: 0, scope: !7687)
!7698 = !DILocation(line: 225, column: 22, scope: !7687)
!7699 = !DILocation(line: 233, column: 18, scope: !7687)
!7700 = !DILocation(line: 236, column: 23, scope: !7687)
!7701 = !DILocation(line: 236, column: 21, scope: !7687)
!7702 = !DILocation(line: 238, column: 2, scope: !7687)
!7703 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !523, file: !523, line: 105, type: !7704, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7706)
!7704 = !DISubroutineType(types: !7705)
!7705 = !{!103, !7667, !154, !154, !157}
!7706 = !{!7707, !7708, !7709, !7710, !7711, !7712}
!7707 = !DILocalVariable(name: "regions", arg: 1, scope: !7703, file: !523, line: 106, type: !7667)
!7708 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7703, file: !523, line: 106, type: !154)
!7709 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7703, file: !523, line: 106, type: !154)
!7710 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7703, file: !523, line: 107, type: !157)
!7711 = !DILocalVariable(name: "i", scope: !7703, file: !523, line: 109, type: !103)
!7712 = !DILocalVariable(name: "reg_index", scope: !7703, file: !523, line: 110, type: !103)
!7713 = !DILocation(line: 0, scope: !7703)
!7714 = !DILocation(line: 110, column: 18, scope: !7703)
!7715 = !DILocation(line: 112, column: 16, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !523, line: 112, column: 2)
!7717 = distinct !DILexicalBlock(scope: !7703, file: !523, line: 112, column: 2)
!7718 = !DILocation(line: 112, column: 2, scope: !7717)
!7719 = !DILocation(line: 113, column: 7, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7721, file: !523, line: 113, column: 7)
!7721 = distinct !DILexicalBlock(scope: !7716, file: !523, line: 112, column: 36)
!7722 = !DILocation(line: 113, column: 18, scope: !7720)
!7723 = !DILocation(line: 113, column: 23, scope: !7720)
!7724 = !DILocation(line: 113, column: 7, scope: !7721)
!7725 = !DILocation(line: 118, column: 23, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7721, file: !523, line: 118, column: 7)
!7727 = !DILocation(line: 119, column: 7, scope: !7726)
!7728 = !DILocation(line: 118, column: 7, scope: !7721)
!7729 = !DILocation(line: 124, column: 36, scope: !7721)
!7730 = !DILocation(line: 124, column: 15, scope: !7721)
!7731 = !DILocation(line: 126, column: 17, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7721, file: !523, line: 126, column: 7)
!7733 = !DILocation(line: 126, column: 7, scope: !7721)
!7734 = !DILocation(line: 131, column: 12, scope: !7721)
!7735 = !DILocation(line: 132, column: 2, scope: !7721)
!7736 = !DILocation(line: 112, column: 32, scope: !7716)
!7737 = distinct !{!7737, !7718, !7738}
!7738 = !DILocation(line: 132, column: 2, scope: !7717)
!7739 = !DILocation(line: 135, column: 1, scope: !7703)
!7740 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7688, file: !7688, line: 63, type: !7741, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7743)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!103, !7667}
!7743 = !{!7744, !7745}
!7744 = !DILocalVariable(name: "part", arg: 1, scope: !7740, file: !7688, line: 63, type: !7667)
!7745 = !DILocalVariable(name: "partition_is_valid", scope: !7740, file: !7688, line: 70, type: !103)
!7746 = !DILocation(line: 0, scope: !7740)
!7747 = !DILocation(line: 71, column: 11, scope: !7740)
!7748 = !DILocation(line: 71, column: 37, scope: !7740)
!7749 = !DILocation(line: 72, column: 3, scope: !7740)
!7750 = !DILocation(line: 71, column: 30, scope: !7740)
!7751 = !DILocation(line: 75, column: 11, scope: !7740)
!7752 = !DILocation(line: 75, column: 17, scope: !7740)
!7753 = !DILocation(line: 75, column: 38, scope: !7740)
!7754 = !DILocation(line: 77, column: 2, scope: !7740)
!7755 = distinct !DISubprogram(name: "mpu_configure_region", scope: !523, file: !523, line: 79, type: !7756, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7758)
!7756 = !DISubroutineType(types: !7757)
!7757 = !{!103, !256, !7667}
!7758 = !{!7759, !7760, !7761}
!7759 = !DILocalVariable(name: "index", arg: 1, scope: !7755, file: !523, line: 79, type: !256)
!7760 = !DILocalVariable(name: "new_region", arg: 2, scope: !7755, file: !523, line: 80, type: !7667)
!7761 = !DILocalVariable(name: "region_conf", scope: !7755, file: !523, line: 82, type: !512)
!7762 = !DILocation(line: 0, scope: !7755)
!7763 = !DILocation(line: 82, column: 2, scope: !7755)
!7764 = !DILocation(line: 82, column: 24, scope: !7755)
!7765 = !DILocation(line: 87, column: 33, scope: !7755)
!7766 = !DILocation(line: 87, column: 14, scope: !7755)
!7767 = !DILocation(line: 87, column: 19, scope: !7755)
!7768 = !DILocation(line: 91, column: 55, scope: !7755)
!7769 = !DILocation(line: 92, column: 16, scope: !7755)
!7770 = !DILocation(line: 92, column: 53, scope: !7755)
!7771 = !DILocation(line: 91, column: 2, scope: !7755)
!7772 = !DILocation(line: 95, column: 9, scope: !7755)
!7773 = !DILocation(line: 97, column: 1, scope: !7755)
!7774 = !DILocation(line: 95, column: 2, scope: !7755)
!7775 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7688, file: !7688, line: 113, type: !7776, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7781)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{null, !7778, !7779, !121, !121}
!7778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 32)
!7779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7780, size: 32)
!7780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7674)
!7781 = !{!7782, !7783, !7784, !7785}
!7782 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7775, file: !7688, line: 114, type: !7778)
!7783 = !DILocalVariable(name: "attr", arg: 2, scope: !7775, file: !7688, line: 115, type: !7779)
!7784 = !DILocalVariable(name: "base", arg: 3, scope: !7775, file: !7688, line: 115, type: !121)
!7785 = !DILocalVariable(name: "size", arg: 4, scope: !7775, file: !7688, line: 115, type: !121)
!7786 = !DILocation(line: 0, scope: !7775)
!7787 = !DILocation(line: 127, column: 23, scope: !7775)
!7788 = !DILocation(line: 127, column: 35, scope: !7775)
!7789 = !DILocation(line: 127, column: 33, scope: !7775)
!7790 = !DILocation(line: 127, column: 10, scope: !7775)
!7791 = !DILocation(line: 127, column: 15, scope: !7775)
!7792 = !DILocation(line: 129, column: 1, scope: !7775)
!7793 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !523, file: !523, line: 57, type: !7794, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7796)
!7794 = !DISubroutineType(types: !7795)
!7795 = !{!103, !256, !510}
!7796 = !{!7797, !7798}
!7797 = !DILocalVariable(name: "index", arg: 1, scope: !7793, file: !523, line: 57, type: !256)
!7798 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7793, file: !523, line: 58, type: !510)
!7799 = !DILocation(line: 0, scope: !7793)
!7800 = !DILocation(line: 61, column: 6, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7793, file: !523, line: 61, column: 6)
!7802 = !DILocation(line: 61, column: 12, scope: !7801)
!7803 = !DILocation(line: 61, column: 6, scope: !7793)
!7804 = !DILocation(line: 71, column: 2, scope: !7793)
!7805 = !DILocation(line: 73, column: 2, scope: !7793)
!7806 = !DILocation(line: 74, column: 1, scope: !7793)
!7807 = distinct !DISubprogram(name: "region_init", scope: !7688, file: !7688, line: 29, type: !7808, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7810)
!7808 = !DISubroutineType(types: !7809)
!7809 = !{null, !7092, !510}
!7810 = !{!7811, !7812}
!7811 = !DILocalVariable(name: "index", arg: 1, scope: !7807, file: !7688, line: 29, type: !7092)
!7812 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7807, file: !7688, line: 30, type: !510)
!7813 = !DILocation(line: 0, scope: !7807)
!7814 = !DILocation(line: 33, column: 2, scope: !7807)
!7815 = !DILocation(line: 47, column: 28, scope: !7807)
!7816 = !DILocation(line: 47, column: 33, scope: !7807)
!7817 = !DILocation(line: 48, column: 26, scope: !7807)
!7818 = !DILocation(line: 47, column: 12, scope: !7807)
!7819 = !DILocation(line: 49, column: 32, scope: !7807)
!7820 = !DILocation(line: 49, column: 37, scope: !7807)
!7821 = !DILocation(line: 49, column: 12, scope: !7807)
!7822 = !DILocation(line: 53, column: 1, scope: !7807)
!7823 = distinct !DISubprogram(name: "set_region_number", scope: !7824, file: !7824, line: 32, type: !6915, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7825)
!7824 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7825 = !{!7826}
!7826 = !DILocalVariable(name: "index", arg: 1, scope: !7823, file: !7824, line: 32, type: !121)
!7827 = !DILocation(line: 0, scope: !7823)
!7828 = !DILocation(line: 34, column: 11, scope: !7823)
!7829 = !DILocation(line: 35, column: 1, scope: !7823)
!7830 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7688, file: !7688, line: 88, type: !7831, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7833)
!7831 = !DISubroutineType(types: !7832)
!7832 = !{!121, !121}
!7833 = !{!7834}
!7834 = !DILocalVariable(name: "size", arg: 1, scope: !7830, file: !7688, line: 88, type: !121)
!7835 = !DILocation(line: 0, scope: !7830)
!7836 = !DILocation(line: 91, column: 11, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7830, file: !7688, line: 91, column: 6)
!7838 = !DILocation(line: 91, column: 6, scope: !7830)
!7839 = !DILocation(line: 100, column: 11, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7830, file: !7688, line: 100, column: 6)
!7841 = !DILocation(line: 100, column: 6, scope: !7830)
!7842 = !DILocation(line: 104, column: 35, scope: !7830)
!7843 = !DILocation(line: 104, column: 16, scope: !7830)
!7844 = !DILocation(line: 104, column: 50, scope: !7830)
!7845 = !DILocation(line: 104, column: 72, scope: !7830)
!7846 = !DILocation(line: 104, column: 2, scope: !7830)
!7847 = !DILocation(line: 106, column: 1, scope: !7830)
!7848 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !523, file: !523, line: 307, type: !7849, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7851)
!7849 = !DISubroutineType(types: !7850)
!7850 = !{null, !7667, !154}
!7851 = !{!7852, !7853}
!7852 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7848, file: !523, line: 308, type: !7667)
!7853 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7848, file: !523, line: 308, type: !154)
!7854 = !DILocation(line: 0, scope: !7848)
!7855 = !DILocation(line: 310, column: 6, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7848, file: !523, line: 310, column: 6)
!7857 = !DILocation(line: 316, column: 1, scope: !7848)
!7858 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7688, file: !7688, line: 249, type: !7859, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7861)
!7859 = !DISubroutineType(types: !7860)
!7860 = !{!103, !7667, !154}
!7861 = !{!7862, !7863, !7864, !7865}
!7862 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7858, file: !7688, line: 250, type: !7667)
!7863 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7858, file: !7688, line: 250, type: !154)
!7864 = !DILocalVariable(name: "mpu_reg_index", scope: !7858, file: !7688, line: 252, type: !103)
!7865 = !DILocalVariable(name: "i", scope: !7866, file: !7688, line: 264, type: !103)
!7866 = distinct !DILexicalBlock(scope: !7867, file: !7688, line: 264, column: 3)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !7688, line: 261, column: 32)
!7868 = distinct !DILexicalBlock(scope: !7858, file: !7688, line: 261, column: 6)
!7869 = !DILocation(line: 0, scope: !7858)
!7870 = !DILocation(line: 252, column: 22, scope: !7858)
!7871 = !DILocation(line: 258, column: 18, scope: !7858)
!7872 = !DILocation(line: 261, column: 20, scope: !7868)
!7873 = !DILocation(line: 261, column: 6, scope: !7858)
!7874 = !DILocation(line: 0, scope: !7866)
!7875 = !DILocation(line: 265, column: 4, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7877, file: !7688, line: 264, column: 59)
!7877 = distinct !DILexicalBlock(scope: !7866, file: !7688, line: 264, column: 3)
!7878 = !DILocation(line: 264, column: 55, scope: !7877)
!7879 = !DILocation(line: 264, column: 33, scope: !7877)
!7880 = !DILocation(line: 264, column: 3, scope: !7866)
!7881 = distinct !{!7881, !7880, !7882}
!7882 = !DILocation(line: 266, column: 3, scope: !7866)
!7883 = !DILocation(line: 269, column: 2, scope: !7858)
!7884 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7885, file: !7885, line: 218, type: !6915, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7886)
!7885 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7886 = !{!7887}
!7887 = !DILocalVariable(name: "rnr", arg: 1, scope: !7884, file: !7885, line: 218, type: !121)
!7888 = !DILocation(line: 0, scope: !7884)
!7889 = !DILocation(line: 220, column: 12, scope: !7884)
!7890 = !DILocation(line: 221, column: 13, scope: !7884)
!7891 = !DILocation(line: 222, column: 1, scope: !7884)
!7892 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !523, file: !523, line: 326, type: !6628, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7893)
!7893 = !{!7894}
!7894 = !DILocalVariable(name: "r_index", scope: !7892, file: !523, line: 328, type: !121)
!7895 = !DILocation(line: 330, column: 17, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7892, file: !523, line: 330, column: 6)
!7897 = !DILocation(line: 330, column: 29, scope: !7896)
!7898 = !DILocation(line: 330, column: 6, scope: !7892)
!7899 = !DILocation(line: 347, column: 2, scope: !7892)
!7900 = !DILocation(line: 0, scope: !7892)
!7901 = !DILocation(line: 364, column: 29, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7903, file: !523, line: 364, column: 2)
!7903 = distinct !DILexicalBlock(scope: !7892, file: !523, line: 364, column: 2)
!7904 = !DILocation(line: 364, column: 2, scope: !7903)
!7905 = !DILocation(line: 365, column: 25, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7902, file: !523, line: 364, column: 66)
!7907 = !DILocation(line: 365, column: 3, scope: !7906)
!7908 = !DILocation(line: 364, column: 62, scope: !7902)
!7909 = distinct !{!7909, !7904, !7910}
!7910 = !DILocation(line: 366, column: 2, scope: !7903)
!7911 = !DILocation(line: 369, column: 23, scope: !7892)
!7912 = !DILocation(line: 369, column: 21, scope: !7892)
!7913 = !DILocation(line: 372, column: 2, scope: !7892)
!7914 = !DILocation(line: 443, column: 2, scope: !7892)
!7915 = !DILocation(line: 444, column: 1, scope: !7892)
!7916 = distinct !DISubprogram(name: "strcpy", scope: !7917, file: !7917, line: 20, type: !7918, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !7922)
!7917 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7918 = !DISubroutineType(types: !7919)
!7919 = !{!1071, !7920, !7921}
!7920 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1071)
!7921 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!7922 = !{!7923, !7924, !7925}
!7923 = !DILocalVariable(name: "d", arg: 1, scope: !7916, file: !7917, line: 20, type: !7920)
!7924 = !DILocalVariable(name: "s", arg: 2, scope: !7916, file: !7917, line: 20, type: !7921)
!7925 = !DILocalVariable(name: "dest", scope: !7916, file: !7917, line: 22, type: !1071)
!7926 = !DILocation(line: 0, scope: !7916)
!7927 = !DILocation(line: 24, column: 9, scope: !7916)
!7928 = !DILocation(line: 24, column: 12, scope: !7916)
!7929 = !DILocation(line: 24, column: 2, scope: !7916)
!7930 = !DILocation(line: 25, column: 6, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7916, file: !7917, line: 24, column: 21)
!7932 = !DILocation(line: 26, column: 4, scope: !7931)
!7933 = !DILocation(line: 27, column: 4, scope: !7931)
!7934 = distinct !{!7934, !7929, !7935}
!7935 = !DILocation(line: 28, column: 2, scope: !7916)
!7936 = !DILocation(line: 30, column: 5, scope: !7916)
!7937 = !DILocation(line: 32, column: 2, scope: !7916)
!7938 = distinct !DISubprogram(name: "strncpy", scope: !7917, file: !7917, line: 42, type: !7939, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !7941)
!7939 = !DISubroutineType(types: !7940)
!7940 = !{!1071, !7920, !7921, !344}
!7941 = !{!7942, !7943, !7944, !7945}
!7942 = !DILocalVariable(name: "d", arg: 1, scope: !7938, file: !7917, line: 42, type: !7920)
!7943 = !DILocalVariable(name: "s", arg: 2, scope: !7938, file: !7917, line: 42, type: !7921)
!7944 = !DILocalVariable(name: "n", arg: 3, scope: !7938, file: !7917, line: 42, type: !344)
!7945 = !DILocalVariable(name: "dest", scope: !7938, file: !7917, line: 44, type: !1071)
!7946 = !DILocation(line: 0, scope: !7938)
!7947 = !DILocation(line: 46, column: 12, scope: !7938)
!7948 = !DILocation(line: 46, column: 17, scope: !7938)
!7949 = !DILocation(line: 46, column: 20, scope: !7938)
!7950 = !DILocation(line: 46, column: 23, scope: !7938)
!7951 = !DILocation(line: 46, column: 2, scope: !7938)
!7952 = !DILocation(line: 47, column: 6, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7938, file: !7917, line: 46, column: 32)
!7954 = !DILocation(line: 48, column: 4, scope: !7953)
!7955 = !DILocation(line: 49, column: 4, scope: !7953)
!7956 = !DILocation(line: 50, column: 4, scope: !7953)
!7957 = distinct !{!7957, !7951, !7958}
!7958 = !DILocation(line: 51, column: 2, scope: !7938)
!7959 = !DILocation(line: 54, column: 6, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7938, file: !7917, line: 53, column: 16)
!7961 = !DILocation(line: 55, column: 4, scope: !7960)
!7962 = !DILocation(line: 56, column: 4, scope: !7960)
!7963 = !DILocation(line: 53, column: 11, scope: !7938)
!7964 = !DILocation(line: 53, column: 2, scope: !7938)
!7965 = distinct !{!7965, !7964, !7966}
!7966 = !DILocation(line: 57, column: 2, scope: !7938)
!7967 = !DILocation(line: 59, column: 2, scope: !7938)
!7968 = distinct !DISubprogram(name: "strchr", scope: !7917, file: !7917, line: 69, type: !7969, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !7971)
!7969 = !DISubroutineType(types: !7970)
!7970 = !{!1071, !144, !103}
!7971 = !{!7972, !7973, !7974}
!7972 = !DILocalVariable(name: "s", arg: 1, scope: !7968, file: !7917, line: 69, type: !144)
!7973 = !DILocalVariable(name: "c", arg: 2, scope: !7968, file: !7917, line: 69, type: !103)
!7974 = !DILocalVariable(name: "tmp", scope: !7968, file: !7917, line: 71, type: !146)
!7975 = !DILocation(line: 0, scope: !7968)
!7976 = !DILocation(line: 73, column: 2, scope: !7968)
!7977 = !DILocation(line: 73, column: 10, scope: !7968)
!7978 = !DILocation(line: 73, column: 13, scope: !7968)
!7979 = !DILocation(line: 73, column: 21, scope: !7968)
!7980 = !DILocation(line: 74, column: 4, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7968, file: !7917, line: 73, column: 38)
!7982 = distinct !{!7982, !7976, !7983}
!7983 = !DILocation(line: 75, column: 2, scope: !7968)
!7984 = !DILocation(line: 77, column: 9, scope: !7968)
!7985 = !DILocation(line: 77, column: 2, scope: !7968)
!7986 = distinct !DISubprogram(name: "strrchr", scope: !7917, file: !7917, line: 87, type: !7969, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !7987)
!7987 = !{!7988, !7989, !7990}
!7988 = !DILocalVariable(name: "s", arg: 1, scope: !7986, file: !7917, line: 87, type: !144)
!7989 = !DILocalVariable(name: "c", arg: 2, scope: !7986, file: !7917, line: 87, type: !103)
!7990 = !DILocalVariable(name: "match", scope: !7986, file: !7917, line: 89, type: !1071)
!7991 = !DILocation(line: 0, scope: !7986)
!7992 = !DILocation(line: 91, column: 2, scope: !7986)
!7993 = !DILocation(line: 92, column: 7, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7995, file: !7917, line: 92, column: 7)
!7995 = distinct !DILexicalBlock(scope: !7986, file: !7917, line: 91, column: 5)
!7996 = !DILocation(line: 92, column: 10, scope: !7994)
!7997 = !DILocation(line: 92, column: 7, scope: !7995)
!7998 = !DILocation(line: 95, column: 13, scope: !7986)
!7999 = !DILocation(line: 95, column: 2, scope: !7995)
!8000 = distinct !{!8000, !7992, !8001}
!8001 = !DILocation(line: 95, column: 15, scope: !7986)
!8002 = !DILocation(line: 97, column: 2, scope: !7986)
!8003 = distinct !DISubprogram(name: "strlen", scope: !7917, file: !7917, line: 107, type: !8004, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8006)
!8004 = !DISubroutineType(types: !8005)
!8005 = !{!344, !144}
!8006 = !{!8007, !8008}
!8007 = !DILocalVariable(name: "s", arg: 1, scope: !8003, file: !7917, line: 107, type: !144)
!8008 = !DILocalVariable(name: "n", scope: !8003, file: !7917, line: 109, type: !344)
!8009 = !DILocation(line: 0, scope: !8003)
!8010 = !DILocation(line: 111, column: 9, scope: !8003)
!8011 = !DILocation(line: 111, column: 12, scope: !8003)
!8012 = !DILocation(line: 111, column: 2, scope: !8003)
!8013 = !DILocation(line: 112, column: 4, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8003, file: !7917, line: 111, column: 21)
!8015 = !DILocation(line: 113, column: 4, scope: !8014)
!8016 = distinct !{!8016, !8012, !8017}
!8017 = !DILocation(line: 114, column: 2, scope: !8003)
!8018 = !DILocation(line: 116, column: 2, scope: !8003)
!8019 = distinct !DISubprogram(name: "strnlen", scope: !7917, file: !7917, line: 126, type: !8020, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8022)
!8020 = !DISubroutineType(types: !8021)
!8021 = !{!344, !144, !344}
!8022 = !{!8023, !8024, !8025}
!8023 = !DILocalVariable(name: "s", arg: 1, scope: !8019, file: !7917, line: 126, type: !144)
!8024 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8019, file: !7917, line: 126, type: !344)
!8025 = !DILocalVariable(name: "n", scope: !8019, file: !7917, line: 128, type: !344)
!8026 = !DILocation(line: 0, scope: !8019)
!8027 = !DILocation(line: 130, column: 9, scope: !8019)
!8028 = !DILocation(line: 130, column: 12, scope: !8019)
!8029 = !DILocation(line: 130, column: 20, scope: !8019)
!8030 = !DILocation(line: 130, column: 2, scope: !8019)
!8031 = !DILocation(line: 131, column: 4, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8019, file: !7917, line: 130, column: 35)
!8033 = !DILocation(line: 132, column: 4, scope: !8032)
!8034 = distinct !{!8034, !8030, !8035}
!8035 = !DILocation(line: 133, column: 2, scope: !8019)
!8036 = !DILocation(line: 135, column: 2, scope: !8019)
!8037 = distinct !DISubprogram(name: "strcmp", scope: !7917, file: !7917, line: 145, type: !8038, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8040)
!8038 = !DISubroutineType(types: !8039)
!8039 = !{!103, !144, !144}
!8040 = !{!8041, !8042}
!8041 = !DILocalVariable(name: "s1", arg: 1, scope: !8037, file: !7917, line: 145, type: !144)
!8042 = !DILocalVariable(name: "s2", arg: 2, scope: !8037, file: !7917, line: 145, type: !144)
!8043 = !DILocation(line: 0, scope: !8037)
!8044 = !DILocation(line: 147, column: 10, scope: !8037)
!8045 = !DILocation(line: 147, column: 17, scope: !8037)
!8046 = !DILocation(line: 147, column: 14, scope: !8037)
!8047 = !DILocation(line: 147, column: 22, scope: !8037)
!8048 = !DILocation(line: 148, column: 5, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8037, file: !7917, line: 147, column: 40)
!8050 = !DILocation(line: 149, column: 5, scope: !8049)
!8051 = distinct !{!8051, !8052, !8053}
!8052 = !DILocation(line: 147, column: 2, scope: !8037)
!8053 = !DILocation(line: 150, column: 2, scope: !8037)
!8054 = !DILocation(line: 152, column: 9, scope: !8037)
!8055 = !DILocation(line: 152, column: 15, scope: !8037)
!8056 = !DILocation(line: 152, column: 13, scope: !8037)
!8057 = !DILocation(line: 152, column: 2, scope: !8037)
!8058 = distinct !DISubprogram(name: "strncmp", scope: !7917, file: !7917, line: 162, type: !8059, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8061)
!8059 = !DISubroutineType(types: !8060)
!8060 = !{!103, !144, !144, !344}
!8061 = !{!8062, !8063, !8064}
!8062 = !DILocalVariable(name: "s1", arg: 1, scope: !8058, file: !7917, line: 162, type: !144)
!8063 = !DILocalVariable(name: "s2", arg: 2, scope: !8058, file: !7917, line: 162, type: !144)
!8064 = !DILocalVariable(name: "n", arg: 3, scope: !8058, file: !7917, line: 162, type: !344)
!8065 = !DILocation(line: 0, scope: !8058)
!8066 = !DILocation(line: 164, column: 17, scope: !8058)
!8067 = !DILocation(line: 164, column: 21, scope: !8058)
!8068 = !DILocation(line: 164, column: 28, scope: !8058)
!8069 = !DILocation(line: 164, column: 25, scope: !8058)
!8070 = !DILocation(line: 164, column: 33, scope: !8058)
!8071 = !DILocation(line: 165, column: 5, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8058, file: !7917, line: 164, column: 51)
!8073 = !DILocation(line: 166, column: 5, scope: !8072)
!8074 = !DILocation(line: 167, column: 4, scope: !8072)
!8075 = distinct !{!8075, !8076, !8077}
!8076 = !DILocation(line: 164, column: 2, scope: !8058)
!8077 = !DILocation(line: 168, column: 2, scope: !8058)
!8078 = !DILocation(line: 170, column: 25, scope: !8058)
!8079 = !DILocation(line: 170, column: 31, scope: !8058)
!8080 = !DILocation(line: 170, column: 29, scope: !8058)
!8081 = !DILocation(line: 170, column: 9, scope: !8058)
!8082 = !DILocation(line: 170, column: 2, scope: !8058)
!8083 = distinct !DISubprogram(name: "strtok_r", scope: !7917, file: !7917, line: 180, type: !8084, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8087)
!8084 = !DISubroutineType(types: !8085)
!8085 = !{!1071, !1071, !144, !8086}
!8086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!8087 = !{!8088, !8089, !8090, !8091, !8092}
!8088 = !DILocalVariable(name: "str", arg: 1, scope: !8083, file: !7917, line: 180, type: !1071)
!8089 = !DILocalVariable(name: "sep", arg: 2, scope: !8083, file: !7917, line: 180, type: !144)
!8090 = !DILocalVariable(name: "state", arg: 3, scope: !8083, file: !7917, line: 180, type: !8086)
!8091 = !DILocalVariable(name: "start", scope: !8083, file: !7917, line: 182, type: !1071)
!8092 = !DILocalVariable(name: "end", scope: !8083, file: !7917, line: 182, type: !1071)
!8093 = !DILocation(line: 0, scope: !8083)
!8094 = !DILocation(line: 184, column: 10, scope: !8083)
!8095 = !DILocation(line: 184, column: 22, scope: !8083)
!8096 = !DILocation(line: 187, column: 9, scope: !8083)
!8097 = !DILocation(line: 187, column: 16, scope: !8083)
!8098 = !DILocation(line: 187, column: 19, scope: !8083)
!8099 = !DILocation(line: 187, column: 2, scope: !8083)
!8100 = !DILocation(line: 188, column: 8, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8083, file: !7917, line: 187, column: 40)
!8102 = distinct !{!8102, !8099, !8103}
!8103 = !DILocation(line: 189, column: 2, scope: !8083)
!8104 = !DILocation(line: 198, column: 9, scope: !8083)
!8105 = !DILocation(line: 198, column: 18, scope: !8083)
!8106 = !DILocation(line: 198, column: 17, scope: !8083)
!8107 = !DILocation(line: 198, column: 2, scope: !8083)
!8108 = !DILocation(line: 199, column: 6, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8083, file: !7917, line: 198, column: 37)
!8110 = !DILocation(line: 198, column: 14, scope: !8083)
!8111 = distinct !{!8111, !8107, !8112}
!8112 = !DILocation(line: 200, column: 2, scope: !8083)
!8113 = !DILocation(line: 203, column: 8, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8115, file: !7917, line: 202, column: 20)
!8115 = distinct !DILexicalBlock(scope: !8083, file: !7917, line: 202, column: 6)
!8116 = !DILocation(line: 204, column: 16, scope: !8114)
!8117 = !DILocation(line: 205, column: 2, scope: !8114)
!8118 = !DILocation(line: 210, column: 1, scope: !8083)
!8119 = distinct !DISubprogram(name: "strcat", scope: !7917, file: !7917, line: 212, type: !7918, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8120)
!8120 = !{!8121, !8122}
!8121 = !DILocalVariable(name: "dest", arg: 1, scope: !8119, file: !7917, line: 212, type: !7920)
!8122 = !DILocalVariable(name: "src", arg: 2, scope: !8119, file: !7917, line: 212, type: !7921)
!8123 = !DILocation(line: 0, scope: !8119)
!8124 = !DILocation(line: 214, column: 16, scope: !8119)
!8125 = !DILocation(line: 214, column: 14, scope: !8119)
!8126 = !DILocation(line: 214, column: 2, scope: !8119)
!8127 = !DILocation(line: 215, column: 2, scope: !8119)
!8128 = distinct !DISubprogram(name: "strncat", scope: !7917, file: !7917, line: 218, type: !7939, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8129)
!8129 = !{!8130, !8131, !8132, !8133, !8134}
!8130 = !DILocalVariable(name: "dest", arg: 1, scope: !8128, file: !7917, line: 218, type: !7920)
!8131 = !DILocalVariable(name: "src", arg: 2, scope: !8128, file: !7917, line: 218, type: !7921)
!8132 = !DILocalVariable(name: "n", arg: 3, scope: !8128, file: !7917, line: 219, type: !344)
!8133 = !DILocalVariable(name: "orig_dest", scope: !8128, file: !7917, line: 221, type: !1071)
!8134 = !DILocalVariable(name: "len", scope: !8128, file: !7917, line: 222, type: !344)
!8135 = !DILocation(line: 0, scope: !8128)
!8136 = !DILocation(line: 222, column: 15, scope: !8128)
!8137 = !DILocation(line: 224, column: 7, scope: !8128)
!8138 = !DILocation(line: 225, column: 14, scope: !8128)
!8139 = !DILocation(line: 225, column: 19, scope: !8128)
!8140 = !DILocation(line: 225, column: 11, scope: !8128)
!8141 = !DILocation(line: 225, column: 23, scope: !8128)
!8142 = !DILocation(line: 225, column: 28, scope: !8128)
!8143 = !DILocation(line: 225, column: 2, scope: !8128)
!8144 = !DILocation(line: 226, column: 17, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8128, file: !7917, line: 225, column: 38)
!8146 = !DILocation(line: 226, column: 8, scope: !8145)
!8147 = !DILocation(line: 226, column: 11, scope: !8145)
!8148 = distinct !{!8148, !8143, !8149}
!8149 = !DILocation(line: 227, column: 2, scope: !8128)
!8150 = !DILocation(line: 228, column: 8, scope: !8128)
!8151 = !DILocation(line: 230, column: 2, scope: !8128)
!8152 = distinct !DISubprogram(name: "memcmp", scope: !7917, file: !7917, line: 239, type: !8153, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8155)
!8153 = !DISubroutineType(types: !8154)
!8154 = !{!103, !13, !13, !344}
!8155 = !{!8156, !8157, !8158, !8159, !8160}
!8156 = !DILocalVariable(name: "m1", arg: 1, scope: !8152, file: !7917, line: 239, type: !13)
!8157 = !DILocalVariable(name: "m2", arg: 2, scope: !8152, file: !7917, line: 239, type: !13)
!8158 = !DILocalVariable(name: "n", arg: 3, scope: !8152, file: !7917, line: 239, type: !344)
!8159 = !DILocalVariable(name: "c1", scope: !8152, file: !7917, line: 241, type: !144)
!8160 = !DILocalVariable(name: "c2", scope: !8152, file: !7917, line: 242, type: !144)
!8161 = !DILocation(line: 0, scope: !8152)
!8162 = !DILocation(line: 244, column: 7, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8152, file: !7917, line: 244, column: 6)
!8164 = !DILocation(line: 244, column: 6, scope: !8152)
!8165 = !DILocation(line: 248, column: 10, scope: !8152)
!8166 = !DILocation(line: 248, column: 14, scope: !8152)
!8167 = !DILocation(line: 248, column: 19, scope: !8152)
!8168 = !DILocation(line: 248, column: 2, scope: !8152)
!8169 = !DILocation(line: 248, column: 23, scope: !8152)
!8170 = !DILocation(line: 248, column: 30, scope: !8152)
!8171 = !DILocation(line: 248, column: 27, scope: !8152)
!8172 = !DILocation(line: 249, column: 5, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8152, file: !7917, line: 248, column: 36)
!8174 = !DILocation(line: 250, column: 5, scope: !8173)
!8175 = distinct !{!8175, !8168, !8176}
!8176 = !DILocation(line: 251, column: 2, scope: !8152)
!8177 = !DILocation(line: 253, column: 9, scope: !8152)
!8178 = !DILocation(line: 253, column: 15, scope: !8152)
!8179 = !DILocation(line: 253, column: 13, scope: !8152)
!8180 = !DILocation(line: 253, column: 2, scope: !8152)
!8181 = !DILocation(line: 254, column: 1, scope: !8152)
!8182 = distinct !DISubprogram(name: "memmove", scope: !7917, file: !7917, line: 263, type: !8183, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8185)
!8183 = !DISubroutineType(types: !8184)
!8184 = !{!102, !102, !13, !344}
!8185 = !{!8186, !8187, !8188, !8189, !8190}
!8186 = !DILocalVariable(name: "d", arg: 1, scope: !8182, file: !7917, line: 263, type: !102)
!8187 = !DILocalVariable(name: "s", arg: 2, scope: !8182, file: !7917, line: 263, type: !13)
!8188 = !DILocalVariable(name: "n", arg: 3, scope: !8182, file: !7917, line: 263, type: !344)
!8189 = !DILocalVariable(name: "dest", scope: !8182, file: !7917, line: 265, type: !1071)
!8190 = !DILocalVariable(name: "src", scope: !8182, file: !7917, line: 266, type: !144)
!8191 = !DILocation(line: 0, scope: !8182)
!8192 = !DILocation(line: 268, column: 21, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8182, file: !7917, line: 268, column: 6)
!8194 = !DILocation(line: 268, column: 28, scope: !8193)
!8195 = !DILocation(line: 268, column: 6, scope: !8182)
!8196 = !DILocation(line: 280, column: 12, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8193, file: !7917, line: 278, column: 9)
!8198 = !DILocation(line: 280, column: 3, scope: !8197)
!8199 = !DILocation(line: 275, column: 5, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !7917, line: 274, column: 17)
!8201 = distinct !DILexicalBlock(scope: !8193, file: !7917, line: 268, column: 33)
!8202 = !DILocation(line: 276, column: 14, scope: !8200)
!8203 = !DILocation(line: 276, column: 4, scope: !8200)
!8204 = !DILocation(line: 276, column: 12, scope: !8200)
!8205 = !DILocation(line: 274, column: 12, scope: !8201)
!8206 = !DILocation(line: 274, column: 3, scope: !8201)
!8207 = distinct !{!8207, !8206, !8208}
!8208 = !DILocation(line: 277, column: 3, scope: !8201)
!8209 = !DILocation(line: 281, column: 12, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8197, file: !7917, line: 280, column: 17)
!8211 = !DILocation(line: 281, column: 10, scope: !8210)
!8212 = !DILocation(line: 282, column: 8, scope: !8210)
!8213 = !DILocation(line: 283, column: 7, scope: !8210)
!8214 = !DILocation(line: 284, column: 5, scope: !8210)
!8215 = distinct !{!8215, !8198, !8216}
!8216 = !DILocation(line: 285, column: 3, scope: !8197)
!8217 = !DILocation(line: 288, column: 2, scope: !8182)
!8218 = distinct !DISubprogram(name: "memcpy", scope: !7917, file: !7917, line: 298, type: !8219, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8223)
!8219 = !DISubroutineType(types: !8220)
!8220 = !{!102, !8221, !8222, !344}
!8221 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8222 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8223 = !{!8224, !8225, !8226, !8227, !8228}
!8224 = !DILocalVariable(name: "d", arg: 1, scope: !8218, file: !7917, line: 298, type: !8221)
!8225 = !DILocalVariable(name: "s", arg: 2, scope: !8218, file: !7917, line: 298, type: !8222)
!8226 = !DILocalVariable(name: "n", arg: 3, scope: !8218, file: !7917, line: 298, type: !344)
!8227 = !DILocalVariable(name: "d_byte", scope: !8218, file: !7917, line: 302, type: !224)
!8228 = !DILocalVariable(name: "s_byte", scope: !8218, file: !7917, line: 303, type: !3016)
!8229 = !DILocation(line: 0, scope: !8218)
!8230 = !DILocation(line: 337, column: 11, scope: !8218)
!8231 = !DILocation(line: 337, column: 2, scope: !8218)
!8232 = !DILocation(line: 338, column: 25, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8218, file: !7917, line: 337, column: 16)
!8234 = !DILocation(line: 338, column: 17, scope: !8233)
!8235 = !DILocation(line: 338, column: 11, scope: !8233)
!8236 = !DILocation(line: 338, column: 15, scope: !8233)
!8237 = !DILocation(line: 339, column: 4, scope: !8233)
!8238 = distinct !{!8238, !8231, !8239}
!8239 = !DILocation(line: 340, column: 2, scope: !8218)
!8240 = !DILocation(line: 342, column: 2, scope: !8218)
!8241 = distinct !DISubprogram(name: "memset", scope: !7917, file: !7917, line: 352, type: !8242, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8244)
!8242 = !DISubroutineType(types: !8243)
!8243 = !{!102, !102, !103, !344}
!8244 = !{!8245, !8246, !8247, !8248, !8249}
!8245 = !DILocalVariable(name: "buf", arg: 1, scope: !8241, file: !7917, line: 352, type: !102)
!8246 = !DILocalVariable(name: "c", arg: 2, scope: !8241, file: !7917, line: 352, type: !103)
!8247 = !DILocalVariable(name: "n", arg: 3, scope: !8241, file: !7917, line: 352, type: !344)
!8248 = !DILocalVariable(name: "d_byte", scope: !8241, file: !7917, line: 356, type: !224)
!8249 = !DILocalVariable(name: "c_byte", scope: !8241, file: !7917, line: 357, type: !155)
!8250 = !DILocation(line: 0, scope: !8241)
!8251 = !DILocation(line: 357, column: 25, scope: !8241)
!8252 = !DILocation(line: 389, column: 11, scope: !8241)
!8253 = !DILocation(line: 389, column: 2, scope: !8241)
!8254 = !DILocation(line: 390, column: 11, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8241, file: !7917, line: 389, column: 16)
!8256 = !DILocation(line: 390, column: 15, scope: !8255)
!8257 = !DILocation(line: 391, column: 4, scope: !8255)
!8258 = distinct !{!8258, !8253, !8259}
!8259 = !DILocation(line: 392, column: 2, scope: !8241)
!8260 = !DILocation(line: 394, column: 2, scope: !8241)
!8261 = distinct !DISubprogram(name: "memchr", scope: !7917, file: !7917, line: 404, type: !8262, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !8264)
!8262 = !DISubroutineType(types: !8263)
!8263 = !{!102, !13, !103, !344}
!8264 = !{!8265, !8266, !8267, !8268}
!8265 = !DILocalVariable(name: "s", arg: 1, scope: !8261, file: !7917, line: 404, type: !13)
!8266 = !DILocalVariable(name: "c", arg: 2, scope: !8261, file: !7917, line: 404, type: !103)
!8267 = !DILocalVariable(name: "n", arg: 3, scope: !8261, file: !7917, line: 404, type: !344)
!8268 = !DILocalVariable(name: "p", scope: !8269, file: !7917, line: 407, type: !3016)
!8269 = distinct !DILexicalBlock(scope: !8270, file: !7917, line: 406, column: 14)
!8270 = distinct !DILexicalBlock(scope: !8261, file: !7917, line: 406, column: 6)
!8271 = !DILocation(line: 0, scope: !8261)
!8272 = !DILocation(line: 406, column: 8, scope: !8270)
!8273 = !DILocation(line: 406, column: 6, scope: !8261)
!8274 = !DILocation(line: 409, column: 3, scope: !8269)
!8275 = !DILocation(line: 0, scope: !8269)
!8276 = !DILocation(line: 410, column: 8, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8278, file: !7917, line: 410, column: 8)
!8278 = distinct !DILexicalBlock(scope: !8269, file: !7917, line: 409, column: 6)
!8279 = !DILocation(line: 410, column: 13, scope: !8277)
!8280 = !DILocation(line: 410, column: 8, scope: !8278)
!8281 = distinct !{!8281, !8274, !8282}
!8282 = !DILocation(line: 414, column: 20, scope: !8269)
!8283 = !DILocation(line: 417, column: 2, scope: !8261)
!8284 = !DILocation(line: 418, column: 1, scope: !8261)
!8285 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !533, file: !533, line: 23, type: !3375, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8286)
!8286 = !{!8287}
!8287 = !DILocalVariable(name: "hook", arg: 1, scope: !8285, file: !533, line: 23, type: !106)
!8288 = !DILocation(line: 0, scope: !8285)
!8289 = !DILocation(line: 25, column: 15, scope: !8285)
!8290 = !DILocation(line: 26, column: 1, scope: !8285)
!8291 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !533, file: !533, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8292)
!8292 = !{!8293}
!8293 = !DILocalVariable(name: "c", arg: 1, scope: !8291, file: !533, line: 14, type: !103)
!8294 = !DILocation(line: 0, scope: !8291)
!8295 = !DILocation(line: 18, column: 2, scope: !8291)
!8296 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !533, file: !533, line: 28, type: !8297, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8299)
!8297 = !DISubroutineType(types: !8298)
!8298 = !{!103, !103, !529}
!8299 = !{!8300, !8301}
!8300 = !DILocalVariable(name: "c", arg: 1, scope: !8296, file: !533, line: 28, type: !103)
!8301 = !DILocalVariable(name: "stream", arg: 2, scope: !8296, file: !533, line: 28, type: !529)
!8302 = !DILocation(line: 0, scope: !8296)
!8303 = !DILocation(line: 30, column: 27, scope: !8296)
!8304 = !DILocation(line: 30, column: 50, scope: !8296)
!8305 = !DILocation(line: 30, column: 9, scope: !8296)
!8306 = !DILocation(line: 30, column: 2, scope: !8296)
!8307 = distinct !DISubprogram(name: "fputc", scope: !533, file: !533, line: 41, type: !8297, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8308)
!8308 = !{!8309, !8310}
!8309 = !DILocalVariable(name: "c", arg: 1, scope: !8307, file: !533, line: 41, type: !103)
!8310 = !DILocalVariable(name: "stream", arg: 2, scope: !8307, file: !533, line: 41, type: !529)
!8311 = !DILocation(line: 0, scope: !8307)
!8312 = !DILocation(line: 43, column: 9, scope: !8307)
!8313 = !DILocation(line: 43, column: 2, scope: !8307)
!8314 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8315, file: !8315, line: 72, type: !8297, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8316)
!8315 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/getchar")
!8316 = !{!8317, !8318}
!8317 = !DILocalVariable(name: "c", arg: 1, scope: !8314, file: !8315, line: 72, type: !103)
!8318 = !DILocalVariable(name: "stream", arg: 2, scope: !8314, file: !8315, line: 72, type: !529)
!8319 = !DILocation(line: 0, scope: !8314)
!8320 = !DILocation(line: 81, column: 2, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8314, file: !8315, line: 81, column: 2)
!8322 = !{i64 2154903644}
!8323 = !DILocation(line: 82, column: 9, scope: !8314)
!8324 = !DILocation(line: 82, column: 2, scope: !8314)
!8325 = distinct !DISubprogram(name: "fputs", scope: !533, file: !533, line: 46, type: !8326, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8329)
!8326 = !DISubroutineType(types: !8327)
!8327 = !{!103, !7921, !8328}
!8328 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !529)
!8329 = !{!8330, !8331, !8332, !8333}
!8330 = !DILocalVariable(name: "s", arg: 1, scope: !8325, file: !533, line: 46, type: !7921)
!8331 = !DILocalVariable(name: "stream", arg: 2, scope: !8325, file: !533, line: 46, type: !8328)
!8332 = !DILocalVariable(name: "len", scope: !8325, file: !533, line: 48, type: !103)
!8333 = !DILocalVariable(name: "ret", scope: !8325, file: !533, line: 49, type: !103)
!8334 = !DILocation(line: 0, scope: !8325)
!8335 = !DILocation(line: 48, column: 12, scope: !8325)
!8336 = !DILocation(line: 51, column: 8, scope: !8325)
!8337 = !DILocation(line: 53, column: 13, scope: !8325)
!8338 = !DILocation(line: 53, column: 9, scope: !8325)
!8339 = !DILocation(line: 53, column: 2, scope: !8325)
!8340 = distinct !DISubprogram(name: "fwrite", scope: !533, file: !533, line: 99, type: !8341, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8343)
!8341 = !DISubroutineType(types: !8342)
!8342 = !{!344, !8222, !344, !344, !8328}
!8343 = !{!8344, !8345, !8346, !8347}
!8344 = !DILocalVariable(name: "ptr", arg: 1, scope: !8340, file: !533, line: 99, type: !8222)
!8345 = !DILocalVariable(name: "size", arg: 2, scope: !8340, file: !533, line: 99, type: !344)
!8346 = !DILocalVariable(name: "nitems", arg: 3, scope: !8340, file: !533, line: 99, type: !344)
!8347 = !DILocalVariable(name: "stream", arg: 4, scope: !8340, file: !533, line: 100, type: !8328)
!8348 = !DILocation(line: 0, scope: !8340)
!8349 = !DILocation(line: 102, column: 9, scope: !8340)
!8350 = !DILocation(line: 102, column: 2, scope: !8340)
!8351 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8315, file: !8315, line: 96, type: !8341, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8352)
!8352 = !{!8353, !8354, !8355, !8356}
!8353 = !DILocalVariable(name: "ptr", arg: 1, scope: !8351, file: !8315, line: 96, type: !8222)
!8354 = !DILocalVariable(name: "size", arg: 2, scope: !8351, file: !8315, line: 96, type: !344)
!8355 = !DILocalVariable(name: "nitems", arg: 3, scope: !8351, file: !8315, line: 96, type: !344)
!8356 = !DILocalVariable(name: "stream", arg: 4, scope: !8351, file: !8315, line: 96, type: !8328)
!8357 = !DILocation(line: 0, scope: !8351)
!8358 = !DILocation(line: 107, column: 2, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8351, file: !8315, line: 107, column: 2)
!8360 = !{i64 2154903748}
!8361 = !DILocation(line: 108, column: 9, scope: !8351)
!8362 = !DILocation(line: 108, column: 2, scope: !8351)
!8363 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !533, file: !533, line: 56, type: !8341, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8364)
!8364 = !{!8365, !8366, !8367, !8368, !8369, !8370, !8371, !8372}
!8365 = !DILocalVariable(name: "ptr", arg: 1, scope: !8363, file: !533, line: 56, type: !8222)
!8366 = !DILocalVariable(name: "size", arg: 2, scope: !8363, file: !533, line: 56, type: !344)
!8367 = !DILocalVariable(name: "nitems", arg: 3, scope: !8363, file: !533, line: 57, type: !344)
!8368 = !DILocalVariable(name: "stream", arg: 4, scope: !8363, file: !533, line: 57, type: !8328)
!8369 = !DILocalVariable(name: "i", scope: !8363, file: !533, line: 59, type: !344)
!8370 = !DILocalVariable(name: "j", scope: !8363, file: !533, line: 60, type: !344)
!8371 = !DILocalVariable(name: "p", scope: !8363, file: !533, line: 61, type: !3016)
!8372 = !DILabel(scope: !8363, name: "done", file: !533, line: 82)
!8373 = !DILocation(line: 0, scope: !8363)
!8374 = !DILocation(line: 63, column: 14, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8363, file: !533, line: 63, column: 6)
!8376 = !DILocation(line: 63, column: 24, scope: !8375)
!8377 = !DILocation(line: 72, column: 3, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8363, file: !533, line: 70, column: 5)
!8379 = !DILocation(line: 0, scope: !8378)
!8380 = !DILocation(line: 73, column: 8, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8382, file: !533, line: 73, column: 8)
!8382 = distinct !DILexicalBlock(scope: !8378, file: !533, line: 72, column: 6)
!8383 = !DILocation(line: 73, column: 29, scope: !8381)
!8384 = !DILocation(line: 73, column: 27, scope: !8381)
!8385 = !DILocation(line: 73, column: 21, scope: !8381)
!8386 = !DILocation(line: 73, column: 33, scope: !8381)
!8387 = !DILocation(line: 73, column: 8, scope: !8382)
!8388 = !DILocation(line: 76, column: 5, scope: !8382)
!8389 = !DILocation(line: 77, column: 14, scope: !8378)
!8390 = !DILocation(line: 77, column: 3, scope: !8382)
!8391 = distinct !{!8391, !8377, !8392}
!8392 = !DILocation(line: 77, column: 17, scope: !8378)
!8393 = !DILocation(line: 79, column: 4, scope: !8378)
!8394 = !DILocation(line: 80, column: 13, scope: !8363)
!8395 = !DILocation(line: 80, column: 2, scope: !8378)
!8396 = distinct !{!8396, !8397, !8398}
!8397 = !DILocation(line: 70, column: 2, scope: !8363)
!8398 = !DILocation(line: 80, column: 16, scope: !8363)
!8399 = !DILocation(line: 82, column: 1, scope: !8363)
!8400 = !DILocation(line: 83, column: 17, scope: !8363)
!8401 = !DILocation(line: 83, column: 2, scope: !8363)
!8402 = !DILocation(line: 84, column: 1, scope: !8363)
!8403 = distinct !DISubprogram(name: "puts", scope: !533, file: !533, line: 106, type: !8404, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8406)
!8404 = !DISubroutineType(types: !8405)
!8405 = !{!103, !144}
!8406 = !{!8407}
!8407 = !DILocalVariable(name: "s", arg: 1, scope: !8403, file: !533, line: 106, type: !144)
!8408 = !DILocation(line: 0, scope: !8403)
!8409 = !DILocation(line: 108, column: 6, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8403, file: !533, line: 108, column: 6)
!8411 = !DILocation(line: 108, column: 23, scope: !8410)
!8412 = !DILocation(line: 108, column: 6, scope: !8403)
!8413 = !DILocation(line: 112, column: 9, scope: !8403)
!8414 = !DILocation(line: 112, column: 29, scope: !8403)
!8415 = !DILocation(line: 112, column: 2, scope: !8403)
!8416 = !DILocation(line: 113, column: 1, scope: !8403)
!8417 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !666, file: !666, line: 368, type: !719, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8418)
!8418 = !{!8419}
!8419 = !DILocalVariable(name: "dev", arg: 1, scope: !8417, file: !666, line: 368, type: !695)
!8420 = !DILocation(line: 0, scope: !8417)
!8421 = !DILocation(line: 370, column: 2, scope: !8417)
!8422 = !DILocation(line: 371, column: 1, scope: !8417)
!8423 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !666, file: !666, line: 243, type: !8424, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8426)
!8424 = !DISubroutineType(types: !8425)
!8425 = !{null, !103, !103, !695}
!8426 = !{!8427, !8428, !8429, !8430, !8432}
!8427 = !DILocalVariable(name: "min", arg: 1, scope: !8423, file: !666, line: 243, type: !103)
!8428 = !DILocalVariable(name: "max", arg: 2, scope: !8423, file: !666, line: 243, type: !103)
!8429 = !DILocalVariable(name: "dev", arg: 3, scope: !8423, file: !666, line: 243, type: !695)
!8430 = !DILocalVariable(name: "data", scope: !8423, file: !666, line: 245, type: !8431)
!8431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 32)
!8432 = !DILocalVariable(name: "line", scope: !8423, file: !666, line: 246, type: !103)
!8433 = !DILocation(line: 0, scope: !8423)
!8434 = !DILocation(line: 245, column: 38, scope: !8423)
!8435 = !DILocation(line: 249, column: 24, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8437, file: !666, line: 249, column: 2)
!8437 = distinct !DILexicalBlock(scope: !8423, file: !666, line: 249, column: 2)
!8438 = !DILocation(line: 249, column: 2, scope: !8437)
!8439 = !DILocation(line: 251, column: 7, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8441, file: !666, line: 251, column: 7)
!8441 = distinct !DILexicalBlock(scope: !8436, file: !666, line: 249, column: 39)
!8442 = !DILocation(line: 251, column: 7, scope: !8441)
!8443 = !DILocation(line: 253, column: 4, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8440, file: !666, line: 251, column: 36)
!8445 = !DILocation(line: 256, column: 24, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8444, file: !666, line: 256, column: 8)
!8447 = !DILocation(line: 256, column: 9, scope: !8446)
!8448 = !DILocation(line: 256, column: 8, scope: !8444)
!8449 = !DILocation(line: 260, column: 43, scope: !8444)
!8450 = !DILocation(line: 260, column: 4, scope: !8444)
!8451 = !DILocation(line: 261, column: 3, scope: !8444)
!8452 = !DILocation(line: 249, column: 35, scope: !8436)
!8453 = distinct !{!8453, !8438, !8454}
!8454 = !DILocation(line: 262, column: 2, scope: !8437)
!8455 = !DILocation(line: 263, column: 1, scope: !8423)
!8456 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !666, file: !666, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8457)
!8457 = !{!8458}
!8458 = !DILocalVariable(name: "line", arg: 1, scope: !8456, file: !666, line: 158, type: !103)
!8459 = !DILocation(line: 0, scope: !8456)
!8460 = !DILocation(line: 170, column: 38, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !666, line: 160, column: 17)
!8462 = distinct !DILexicalBlock(scope: !8456, file: !666, line: 160, column: 6)
!8463 = !DILocation(line: 170, column: 10, scope: !8461)
!8464 = !DILocation(line: 176, column: 1, scope: !8456)
!8465 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !666, file: !666, line: 183, type: !8466, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8468)
!8466 = !DISubroutineType(types: !8467)
!8467 = !{null, !103}
!8468 = !{!8469}
!8469 = !DILocalVariable(name: "line", arg: 1, scope: !8465, file: !666, line: 183, type: !103)
!8470 = !DILocation(line: 0, scope: !8465)
!8471 = !DILocation(line: 195, column: 28, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8473, file: !666, line: 185, column: 17)
!8473 = distinct !DILexicalBlock(scope: !8465, file: !666, line: 185, column: 6)
!8474 = !DILocation(line: 195, column: 3, scope: !8472)
!8475 = !DILocation(line: 200, column: 1, scope: !8465)
!8476 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8477, file: !8477, line: 910, type: !6915, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8478)
!8477 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8478 = !{!8479}
!8479 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8476, file: !8477, line: 910, type: !121)
!8480 = !DILocation(line: 0, scope: !8476)
!8481 = !DILocation(line: 912, column: 3, scope: !8476)
!8482 = !DILocation(line: 913, column: 1, scope: !8476)
!8483 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8477, file: !8477, line: 834, type: !7831, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8484)
!8484 = !{!8485}
!8485 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8483, file: !8477, line: 834, type: !121)
!8486 = !DILocation(line: 0, scope: !8483)
!8487 = !DILocation(line: 836, column: 11, scope: !8483)
!8488 = !DILocation(line: 836, column: 40, scope: !8483)
!8489 = !DILocation(line: 836, column: 3, scope: !8483)
!8490 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !666, file: !666, line: 304, type: !719, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8491)
!8491 = !{!8492}
!8492 = !DILocalVariable(name: "dev", arg: 1, scope: !8490, file: !666, line: 304, type: !695)
!8493 = !DILocation(line: 0, scope: !8490)
!8494 = !DILocation(line: 306, column: 2, scope: !8490)
!8495 = !DILocation(line: 307, column: 1, scope: !8490)
!8496 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !666, file: !666, line: 299, type: !719, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8497)
!8497 = !{!8498}
!8498 = !DILocalVariable(name: "dev", arg: 1, scope: !8496, file: !666, line: 299, type: !695)
!8499 = !DILocation(line: 0, scope: !8496)
!8500 = !DILocation(line: 301, column: 2, scope: !8496)
!8501 = !DILocation(line: 302, column: 1, scope: !8496)
!8502 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !666, file: !666, line: 294, type: !719, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8503)
!8503 = !{!8504}
!8504 = !DILocalVariable(name: "dev", arg: 1, scope: !8502, file: !666, line: 294, type: !695)
!8505 = !DILocation(line: 0, scope: !8502)
!8506 = !DILocation(line: 296, column: 2, scope: !8502)
!8507 = !DILocation(line: 297, column: 1, scope: !8502)
!8508 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !666, file: !666, line: 397, type: !719, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8509)
!8509 = !{!8510}
!8510 = !DILocalVariable(name: "dev", arg: 1, scope: !8508, file: !666, line: 397, type: !695)
!8511 = !DILocation(line: 0, scope: !8508)
!8512 = !DILocation(line: 399, column: 2, scope: !8508)
!8513 = !DILocation(line: 400, column: 1, scope: !8508)
!8514 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !666, file: !666, line: 392, type: !719, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8515)
!8515 = !{!8516}
!8516 = !DILocalVariable(name: "dev", arg: 1, scope: !8514, file: !666, line: 392, type: !695)
!8517 = !DILocation(line: 0, scope: !8514)
!8518 = !DILocation(line: 394, column: 2, scope: !8514)
!8519 = !DILocation(line: 395, column: 1, scope: !8514)
!8520 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !666, file: !666, line: 289, type: !719, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8521)
!8521 = !{!8522}
!8522 = !DILocalVariable(name: "dev", arg: 1, scope: !8520, file: !666, line: 289, type: !695)
!8523 = !DILocation(line: 0, scope: !8520)
!8524 = !DILocation(line: 291, column: 2, scope: !8520)
!8525 = !DILocation(line: 292, column: 1, scope: !8520)
!8526 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !666, file: !666, line: 387, type: !719, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8527)
!8527 = !{!8528}
!8528 = !DILocalVariable(name: "dev", arg: 1, scope: !8526, file: !666, line: 387, type: !695)
!8529 = !DILocation(line: 0, scope: !8526)
!8530 = !DILocation(line: 389, column: 2, scope: !8526)
!8531 = !DILocation(line: 390, column: 1, scope: !8526)
!8532 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !666, file: !666, line: 382, type: !719, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8533)
!8533 = !{!8534}
!8534 = !DILocalVariable(name: "dev", arg: 1, scope: !8532, file: !666, line: 382, type: !695)
!8535 = !DILocation(line: 0, scope: !8532)
!8536 = !DILocation(line: 384, column: 2, scope: !8532)
!8537 = !DILocation(line: 385, column: 1, scope: !8532)
!8538 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !666, file: !666, line: 373, type: !719, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8539)
!8539 = !{!8540}
!8540 = !DILocalVariable(name: "dev", arg: 1, scope: !8538, file: !666, line: 373, type: !695)
!8541 = !DILocation(line: 0, scope: !8538)
!8542 = !DILocation(line: 375, column: 2, scope: !8538)
!8543 = !DILocation(line: 376, column: 1, scope: !8538)
!8544 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !666, file: !666, line: 284, type: !719, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8545)
!8545 = !{!8546}
!8546 = !DILocalVariable(name: "dev", arg: 1, scope: !8544, file: !666, line: 284, type: !695)
!8547 = !DILocation(line: 0, scope: !8544)
!8548 = !DILocation(line: 286, column: 2, scope: !8544)
!8549 = !DILocation(line: 287, column: 1, scope: !8544)
!8550 = distinct !DISubprogram(name: "stm32_exti_init", scope: !666, file: !666, line: 416, type: !693, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8551)
!8551 = !{!8552}
!8552 = !DILocalVariable(name: "dev", arg: 1, scope: !8550, file: !666, line: 416, type: !695)
!8553 = !DILocation(line: 0, scope: !8550)
!8554 = !DILocation(line: 418, column: 2, scope: !8550)
!8555 = !DILocation(line: 420, column: 2, scope: !8550)
!8556 = !DILocation(line: 0, scope: !718)
!8557 = !DILocation(line: 493, column: 2, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !718, file: !666, line: 493, column: 2)
!8559 = !DILocation(line: 497, column: 2, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !718, file: !666, line: 497, column: 2)
!8561 = !DILocation(line: 507, column: 2, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !718, file: !666, line: 507, column: 2)
!8563 = !DILocation(line: 512, column: 2, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !718, file: !666, line: 512, column: 2)
!8565 = !DILocation(line: 516, column: 2, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !718, file: !666, line: 516, column: 2)
!8567 = !DILocation(line: 523, column: 2, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !718, file: !666, line: 523, column: 2)
!8569 = !DILocation(line: 527, column: 2, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !718, file: !666, line: 527, column: 2)
!8571 = !DILocation(line: 581, column: 2, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !718, file: !666, line: 581, column: 2)
!8573 = !DILocation(line: 586, column: 2, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !718, file: !666, line: 586, column: 2)
!8575 = !DILocation(line: 591, column: 2, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !718, file: !666, line: 591, column: 2)
!8577 = !DILocation(line: 595, column: 2, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !718, file: !666, line: 595, column: 2)
!8579 = !DILocation(line: 607, column: 1, scope: !718)
!8580 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !666, file: !666, line: 112, type: !8466, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8581)
!8581 = !{!8582, !8583}
!8582 = !DILocalVariable(name: "line", arg: 1, scope: !8580, file: !666, line: 112, type: !103)
!8583 = !DILocalVariable(name: "irqnum", scope: !8580, file: !666, line: 114, type: !103)
!8584 = !DILocation(line: 0, scope: !8580)
!8585 = !DILocation(line: 121, column: 11, scope: !8580)
!8586 = !DILocation(line: 130, column: 26, scope: !8580)
!8587 = !DILocation(line: 130, column: 2, scope: !8580)
!8588 = !DILocation(line: 134, column: 2, scope: !8580)
!8589 = !DILocation(line: 135, column: 1, scope: !8580)
!8590 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8477, file: !8477, line: 268, type: !6915, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8591)
!8591 = !{!8592}
!8592 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8590, file: !8477, line: 268, type: !121)
!8593 = !DILocation(line: 0, scope: !8590)
!8594 = !DILocation(line: 270, column: 3, scope: !8590)
!8595 = !DILocation(line: 271, column: 1, scope: !8590)
!8596 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !666, file: !666, line: 137, type: !8466, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8597)
!8597 = !{!8598}
!8598 = !DILocalVariable(name: "line", arg: 1, scope: !8596, file: !666, line: 137, type: !103)
!8599 = !DILocation(line: 0, scope: !8596)
!8600 = !DILocation(line: 141, column: 11, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8596, file: !666, line: 141, column: 6)
!8602 = !DILocation(line: 141, column: 6, scope: !8596)
!8603 = !DILocation(line: 145, column: 28, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8601, file: !666, line: 141, column: 17)
!8605 = !DILocation(line: 145, column: 3, scope: !8604)
!8606 = !DILocation(line: 147, column: 2, scope: !8604)
!8607 = !DILocation(line: 151, column: 1, scope: !8596)
!8608 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8477, file: !8477, line: 309, type: !6915, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8609)
!8609 = !{!8610}
!8610 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8608, file: !8477, line: 309, type: !121)
!8611 = !DILocation(line: 0, scope: !8608)
!8612 = !DILocation(line: 311, column: 3, scope: !8608)
!8613 = !DILocation(line: 312, column: 1, scope: !8608)
!8614 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !666, file: !666, line: 202, type: !8615, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8617)
!8615 = !DISubroutineType(types: !8616)
!8616 = !{null, !103, !103}
!8617 = !{!8618, !8619}
!8618 = !DILocalVariable(name: "line", arg: 1, scope: !8614, file: !666, line: 202, type: !103)
!8619 = !DILocalVariable(name: "trigger", arg: 2, scope: !8614, file: !666, line: 202, type: !103)
!8620 = !DILocation(line: 0, scope: !8614)
!8621 = !DILocation(line: 211, column: 2, scope: !8614)
!8622 = !DILocation(line: 213, column: 36, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8614, file: !666, line: 211, column: 19)
!8624 = !DILocation(line: 213, column: 3, scope: !8623)
!8625 = !DILocation(line: 214, column: 3, scope: !8623)
!8626 = !DILocation(line: 215, column: 3, scope: !8623)
!8627 = !DILocation(line: 217, column: 35, scope: !8623)
!8628 = !DILocation(line: 217, column: 3, scope: !8623)
!8629 = !DILocation(line: 218, column: 3, scope: !8623)
!8630 = !DILocation(line: 219, column: 3, scope: !8623)
!8631 = !DILocation(line: 221, column: 36, scope: !8623)
!8632 = !DILocation(line: 221, column: 3, scope: !8623)
!8633 = !DILocation(line: 222, column: 3, scope: !8623)
!8634 = !DILocation(line: 223, column: 3, scope: !8623)
!8635 = !DILocation(line: 225, column: 35, scope: !8623)
!8636 = !DILocation(line: 225, column: 3, scope: !8623)
!8637 = !DILocation(line: 226, column: 3, scope: !8623)
!8638 = !DILocation(line: 227, column: 3, scope: !8623)
!8639 = !DILocation(line: 232, column: 1, scope: !8614)
!8640 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8477, file: !8477, line: 573, type: !6915, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8641)
!8641 = !{!8642}
!8642 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8640, file: !8477, line: 573, type: !121)
!8643 = !DILocation(line: 0, scope: !8640)
!8644 = !DILocation(line: 575, column: 3, scope: !8640)
!8645 = !DILocation(line: 577, column: 1, scope: !8640)
!8646 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8477, file: !8477, line: 703, type: !6915, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8647)
!8647 = !{!8648}
!8648 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8646, file: !8477, line: 703, type: !121)
!8649 = !DILocation(line: 0, scope: !8646)
!8650 = !DILocation(line: 705, column: 3, scope: !8646)
!8651 = !DILocation(line: 706, column: 1, scope: !8646)
!8652 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8477, file: !8477, line: 529, type: !6915, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8653)
!8653 = !{!8654}
!8654 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8652, file: !8477, line: 529, type: !121)
!8655 = !DILocation(line: 0, scope: !8652)
!8656 = !DILocation(line: 531, column: 3, scope: !8652)
!8657 = !DILocation(line: 533, column: 1, scope: !8652)
!8658 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8477, file: !8477, line: 661, type: !6915, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8659)
!8659 = !{!8660}
!8660 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8658, file: !8477, line: 661, type: !121)
!8661 = !DILocation(line: 0, scope: !8658)
!8662 = !DILocation(line: 663, column: 3, scope: !8658)
!8663 = !DILocation(line: 664, column: 1, scope: !8658)
!8664 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !666, file: !666, line: 433, type: !8665, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8667)
!8665 = !DISubroutineType(types: !8666)
!8666 = !{!103, !103, !706, !102}
!8667 = !{!8668, !8669, !8670, !8671, !8673}
!8668 = !DILocalVariable(name: "line", arg: 1, scope: !8664, file: !666, line: 433, type: !103)
!8669 = !DILocalVariable(name: "cb", arg: 2, scope: !8664, file: !666, line: 433, type: !706)
!8670 = !DILocalVariable(name: "arg", arg: 3, scope: !8664, file: !666, line: 433, type: !102)
!8671 = !DILocalVariable(name: "dev", scope: !8664, file: !666, line: 435, type: !8672)
!8672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !695)
!8673 = !DILocalVariable(name: "data", scope: !8664, file: !666, line: 436, type: !8431)
!8674 = !DILocation(line: 0, scope: !8664)
!8675 = !DILocation(line: 438, column: 21, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8664, file: !666, line: 438, column: 6)
!8677 = !DILocation(line: 438, column: 6, scope: !8676)
!8678 = !DILocation(line: 438, column: 6, scope: !8664)
!8679 = !DILocation(line: 442, column: 20, scope: !8664)
!8680 = !DILocation(line: 443, column: 17, scope: !8664)
!8681 = !DILocation(line: 443, column: 22, scope: !8664)
!8682 = !DILocation(line: 445, column: 2, scope: !8664)
!8683 = !DILocation(line: 446, column: 1, scope: !8664)
!8684 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !666, file: !666, line: 448, type: !8466, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8685)
!8685 = !{!8686, !8687, !8688}
!8686 = !DILocalVariable(name: "line", arg: 1, scope: !8684, file: !666, line: 448, type: !103)
!8687 = !DILocalVariable(name: "dev", scope: !8684, file: !666, line: 450, type: !8672)
!8688 = !DILocalVariable(name: "data", scope: !8684, file: !666, line: 451, type: !8431)
!8689 = !DILocation(line: 0, scope: !8684)
!8690 = !DILocation(line: 453, column: 17, scope: !8684)
!8691 = !DILocation(line: 453, column: 20, scope: !8684)
!8692 = !DILocation(line: 454, column: 17, scope: !8684)
!8693 = !DILocation(line: 454, column: 22, scope: !8684)
!8694 = !DILocation(line: 455, column: 1, scope: !8684)
!8695 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !849, file: !849, line: 183, type: !887, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8696)
!8696 = !{!8697, !8698, !8699, !8700, !8701}
!8697 = !DILocalVariable(name: "dev", arg: 1, scope: !8695, file: !849, line: 183, type: !878)
!8698 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8695, file: !849, line: 184, type: !889)
!8699 = !DILocalVariable(name: "pclken", scope: !8695, file: !849, line: 186, type: !839)
!8700 = !DILocalVariable(name: "reg", scope: !8695, file: !849, line: 187, type: !1607)
!8701 = !DILocalVariable(name: "reg_val", scope: !8695, file: !849, line: 188, type: !121)
!8702 = !DILocation(line: 0, scope: !8695)
!8703 = !DILocation(line: 192, column: 6, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8695, file: !849, line: 192, column: 6)
!8705 = !DILocation(line: 192, column: 6, scope: !8695)
!8706 = !DILocation(line: 197, column: 52, scope: !8695)
!8707 = !DILocation(line: 197, column: 8, scope: !8695)
!8708 = !DILocation(line: 198, column: 12, scope: !8695)
!8709 = !DILocation(line: 199, column: 21, scope: !8695)
!8710 = !DILocation(line: 199, column: 10, scope: !8695)
!8711 = !DILocation(line: 200, column: 7, scope: !8695)
!8712 = !DILocation(line: 202, column: 2, scope: !8695)
!8713 = !DILocation(line: 203, column: 1, scope: !8695)
!8714 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !849, file: !849, line: 205, type: !887, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8715)
!8715 = !{!8716, !8717, !8718, !8719, !8720}
!8716 = !DILocalVariable(name: "dev", arg: 1, scope: !8714, file: !849, line: 205, type: !878)
!8717 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8714, file: !849, line: 206, type: !889)
!8718 = !DILocalVariable(name: "pclken", scope: !8714, file: !849, line: 208, type: !839)
!8719 = !DILocalVariable(name: "reg", scope: !8714, file: !849, line: 209, type: !1607)
!8720 = !DILocalVariable(name: "reg_val", scope: !8714, file: !849, line: 210, type: !121)
!8721 = !DILocation(line: 0, scope: !8714)
!8722 = !DILocation(line: 214, column: 6, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8714, file: !849, line: 214, column: 6)
!8724 = !DILocation(line: 214, column: 6, scope: !8714)
!8725 = !DILocation(line: 219, column: 52, scope: !8714)
!8726 = !DILocation(line: 219, column: 8, scope: !8714)
!8727 = !DILocation(line: 220, column: 12, scope: !8714)
!8728 = !DILocation(line: 221, column: 22, scope: !8714)
!8729 = !DILocation(line: 221, column: 13, scope: !8714)
!8730 = !DILocation(line: 221, column: 10, scope: !8714)
!8731 = !DILocation(line: 222, column: 7, scope: !8714)
!8732 = !DILocation(line: 224, column: 2, scope: !8714)
!8733 = !DILocation(line: 225, column: 1, scope: !8714)
!8734 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !849, file: !849, line: 262, type: !903, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8735)
!8735 = !{!8736, !8737, !8738, !8739, !8740, !8741, !8742, !8743}
!8736 = !DILocalVariable(name: "clock", arg: 1, scope: !8734, file: !849, line: 262, type: !878)
!8737 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8734, file: !849, line: 263, type: !889)
!8738 = !DILocalVariable(name: "rate", arg: 3, scope: !8734, file: !849, line: 264, type: !845)
!8739 = !DILocalVariable(name: "pclken", scope: !8734, file: !849, line: 266, type: !839)
!8740 = !DILocalVariable(name: "ahb_clock", scope: !8734, file: !849, line: 273, type: !121)
!8741 = !DILocalVariable(name: "apb1_clock", scope: !8734, file: !849, line: 274, type: !121)
!8742 = !DILocalVariable(name: "apb2_clock", scope: !8734, file: !849, line: 276, type: !121)
!8743 = !DILocalVariable(name: "ahb3_clock", scope: !8734, file: !849, line: 286, type: !121)
!8744 = !DILocation(line: 0, scope: !8734)
!8745 = !DILocation(line: 273, column: 23, scope: !8734)
!8746 = !DILocation(line: 299, column: 18, scope: !8734)
!8747 = !DILocation(line: 299, column: 2, scope: !8734)
!8748 = !DILocation(line: 274, column: 24, scope: !8734)
!8749 = !DILocation(line: 319, column: 3, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8734, file: !849, line: 299, column: 23)
!8751 = !DILocation(line: 276, column: 24, scope: !8734)
!8752 = !DILocation(line: 323, column: 3, scope: !8750)
!8753 = !DILocation(line: 346, column: 33, scope: !8750)
!8754 = !DILocation(line: 346, column: 11, scope: !8750)
!8755 = !DILocation(line: 350, column: 3, scope: !8750)
!8756 = !DILocation(line: 354, column: 33, scope: !8750)
!8757 = !DILocation(line: 354, column: 11, scope: !8750)
!8758 = !DILocation(line: 358, column: 3, scope: !8750)
!8759 = !DILocation(line: 374, column: 3, scope: !8750)
!8760 = !DILocation(line: 379, column: 3, scope: !8750)
!8761 = !DILocation(line: 0, scope: !8750)
!8762 = !DILocation(line: 396, column: 1, scope: !8734)
!8763 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !849, file: !849, line: 227, type: !919, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8764)
!8764 = !{!8765, !8766, !8767, !8768, !8769, !8770, !8771, !8772}
!8765 = !DILocalVariable(name: "dev", arg: 1, scope: !8763, file: !849, line: 227, type: !878)
!8766 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8763, file: !849, line: 228, type: !889)
!8767 = !DILocalVariable(name: "data", arg: 3, scope: !8763, file: !849, line: 229, type: !102)
!8768 = !DILocalVariable(name: "pclken", scope: !8763, file: !849, line: 233, type: !839)
!8769 = !DILocalVariable(name: "reg", scope: !8763, file: !849, line: 234, type: !1607)
!8770 = !DILocalVariable(name: "reg_val", scope: !8763, file: !849, line: 235, type: !121)
!8771 = !DILocalVariable(name: "dt_val", scope: !8763, file: !849, line: 235, type: !121)
!8772 = !DILocalVariable(name: "err", scope: !8763, file: !849, line: 236, type: !103)
!8773 = !DILocation(line: 0, scope: !8763)
!8774 = !DILocation(line: 241, column: 30, scope: !8763)
!8775 = !DILocation(line: 241, column: 8, scope: !8763)
!8776 = !DILocation(line: 242, column: 10, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8763, file: !849, line: 242, column: 6)
!8778 = !DILocation(line: 242, column: 6, scope: !8763)
!8779 = !DILocation(line: 247, column: 11, scope: !8763)
!8780 = !DILocation(line: 248, column: 6, scope: !8763)
!8781 = !DILocation(line: 247, column: 44, scope: !8763)
!8782 = !DILocation(line: 250, column: 6, scope: !8763)
!8783 = !DILocation(line: 249, column: 52, scope: !8763)
!8784 = !DILocation(line: 249, column: 8, scope: !8763)
!8785 = !DILocation(line: 251, column: 12, scope: !8763)
!8786 = !DILocation(line: 252, column: 10, scope: !8763)
!8787 = !DILocation(line: 253, column: 7, scope: !8763)
!8788 = !DILocation(line: 255, column: 2, scope: !8763)
!8789 = !DILocation(line: 260, column: 1, scope: !8763)
!8790 = distinct !DISubprogram(name: "enabled_clock", scope: !849, file: !849, line: 100, type: !8791, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8793)
!8791 = !DISubroutineType(types: !8792)
!8792 = !{!103, !121}
!8793 = !{!8794, !8795}
!8794 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8790, file: !849, line: 100, type: !121)
!8795 = !DILocalVariable(name: "r", scope: !8790, file: !849, line: 102, type: !103)
!8796 = !DILocation(line: 0, scope: !8790)
!8797 = !DILocation(line: 104, column: 2, scope: !8790)
!8798 = !DILocation(line: 180, column: 2, scope: !8790)
!8799 = !DILocation(line: 181, column: 1, scope: !8790)
!8800 = distinct !DISubprogram(name: "get_bus_clock", scope: !849, file: !849, line: 79, type: !8801, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8803)
!8801 = !DISubroutineType(types: !8802)
!8802 = !{!121, !121, !121}
!8803 = !{!8804, !8805}
!8804 = !DILocalVariable(name: "clock", arg: 1, scope: !8800, file: !849, line: 79, type: !121)
!8805 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8800, file: !849, line: 79, type: !121)
!8806 = !DILocation(line: 0, scope: !8800)
!8807 = !DILocation(line: 81, column: 15, scope: !8800)
!8808 = !DILocation(line: 81, column: 2, scope: !8800)
!8809 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !849, file: !849, line: 68, type: !8810, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8812)
!8810 = !DISubroutineType(types: !8811)
!8811 = !{!121, !121, !103, !103, !103}
!8812 = !{!8813, !8814, !8815, !8816}
!8813 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8809, file: !849, line: 68, type: !121)
!8814 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8809, file: !849, line: 69, type: !103)
!8815 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8809, file: !849, line: 70, type: !103)
!8816 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8809, file: !849, line: 71, type: !103)
!8817 = !DILocation(line: 0, scope: !8809)
!8818 = !DILocation(line: 75, column: 22, scope: !8809)
!8819 = !DILocation(line: 76, column: 13, scope: !8809)
!8820 = !DILocation(line: 75, column: 34, scope: !8809)
!8821 = !DILocation(line: 75, column: 2, scope: !8809)
!8822 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !849, file: !849, line: 641, type: !876, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8823)
!8823 = !{!8824, !8825, !8826}
!8824 = !DILocalVariable(name: "dev", arg: 1, scope: !8822, file: !849, line: 641, type: !878)
!8825 = !DILocalVariable(name: "old_flash_freq", scope: !8822, file: !849, line: 664, type: !121)
!8826 = !DILocalVariable(name: "new_flash_freq", scope: !8822, file: !849, line: 665, type: !121)
!8827 = !DILocation(line: 0, scope: !8822)
!8828 = !DILocation(line: 646, column: 2, scope: !8822)
!8829 = !DILocation(line: 667, column: 19, scope: !8822)
!8830 = !DILocation(line: 674, column: 21, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8822, file: !849, line: 674, column: 6)
!8832 = !DILocation(line: 674, column: 6, scope: !8822)
!8833 = !DILocation(line: 675, column: 3, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8831, file: !849, line: 674, column: 59)
!8835 = !DILocation(line: 676, column: 2, scope: !8834)
!8836 = !DILocation(line: 680, column: 2, scope: !8822)
!8837 = !DILocation(line: 683, column: 2, scope: !8822)
!8838 = !DILocation(line: 690, column: 3, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !849, line: 689, column: 9)
!8840 = distinct !DILexicalBlock(scope: !8822, file: !849, line: 685, column: 6)
!8841 = !DILocation(line: 695, column: 2, scope: !8822)
!8842 = !DILocation(line: 696, column: 2, scope: !8822)
!8843 = !DILocation(line: 696, column: 9, scope: !8822)
!8844 = !DILocation(line: 696, column: 34, scope: !8822)
!8845 = distinct !{!8845, !8842, !8846}
!8846 = !DILocation(line: 697, column: 2, scope: !8822)
!8847 = !DILocation(line: 720, column: 21, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8822, file: !849, line: 720, column: 6)
!8849 = !DILocation(line: 720, column: 6, scope: !8822)
!8850 = !DILocation(line: 721, column: 3, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8848, file: !849, line: 720, column: 60)
!8852 = !DILocation(line: 722, column: 2, scope: !8851)
!8853 = !DILocation(line: 725, column: 18, scope: !8822)
!8854 = !DILocation(line: 728, column: 2, scope: !8822)
!8855 = !DILocation(line: 730, column: 2, scope: !8822)
!8856 = !DILocation(line: 745, column: 2, scope: !8822)
!8857 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8858, file: !8858, line: 3275, type: !6905, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8858 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8859 = !DILocation(line: 3277, column: 21, scope: !8857)
!8860 = !DILocation(line: 3277, column: 3, scope: !8857)
!8861 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !849, file: !849, line: 507, type: !3244, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8862 = !DILocation(line: 516, column: 4, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8864, file: !849, line: 515, column: 10)
!8864 = distinct !DILexicalBlock(scope: !8865, file: !849, line: 513, column: 7)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !849, line: 510, column: 37)
!8866 = distinct !DILexicalBlock(scope: !8861, file: !849, line: 510, column: 6)
!8867 = !DILocation(line: 526, column: 3, scope: !8865)
!8868 = !DILocation(line: 527, column: 3, scope: !8865)
!8869 = !DILocation(line: 527, column: 10, scope: !8865)
!8870 = !DILocation(line: 527, column: 31, scope: !8865)
!8871 = distinct !{!8871, !8868, !8872}
!8872 = !DILocation(line: 529, column: 3, scope: !8865)
!8873 = !DILocation(line: 583, column: 3, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8875, file: !849, line: 577, column: 37)
!8875 = distinct !DILexicalBlock(scope: !8861, file: !849, line: 577, column: 6)
!8876 = !DILocation(line: 584, column: 3, scope: !8874)
!8877 = !DILocation(line: 584, column: 10, scope: !8874)
!8878 = !DILocation(line: 584, column: 31, scope: !8874)
!8879 = distinct !{!8879, !8876, !8880}
!8880 = !DILocation(line: 585, column: 3, scope: !8874)
!8881 = !DILocation(line: 627, column: 1, scope: !8861)
!8882 = distinct !DISubprogram(name: "set_up_plls", scope: !849, file: !849, line: 448, type: !3244, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8883 = !DILocation(line: 460, column: 6, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8882, file: !849, line: 460, column: 6)
!8885 = !DILocation(line: 460, column: 31, scope: !8884)
!8886 = !DILocation(line: 460, column: 6, scope: !8882)
!8887 = !DILocation(line: 461, column: 3, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8884, file: !849, line: 460, column: 67)
!8889 = !DILocation(line: 462, column: 3, scope: !8888)
!8890 = !DILocation(line: 463, column: 2, scope: !8888)
!8891 = !DILocation(line: 464, column: 2, scope: !8882)
!8892 = !DILocation(line: 488, column: 2, scope: !8882)
!8893 = !DILocation(line: 492, column: 2, scope: !8882)
!8894 = !DILocation(line: 496, column: 2, scope: !8882)
!8895 = !DILocation(line: 499, column: 2, scope: !8882)
!8896 = !DILocation(line: 500, column: 2, scope: !8882)
!8897 = !DILocation(line: 500, column: 9, scope: !8882)
!8898 = !DILocation(line: 500, column: 30, scope: !8882)
!8899 = distinct !{!8899, !8896, !8900}
!8900 = !DILocation(line: 502, column: 2, scope: !8882)
!8901 = !DILocation(line: 505, column: 1, scope: !8882)
!8902 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8858, file: !8858, line: 3224, type: !6915, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8903)
!8903 = !{!8904}
!8904 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8902, file: !8858, line: 3224, type: !121)
!8905 = !DILocation(line: 0, scope: !8902)
!8906 = !DILocation(line: 3226, column: 3, scope: !8902)
!8907 = !DILocation(line: 3227, column: 1, scope: !8902)
!8908 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8858, file: !8858, line: 3188, type: !6915, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8909)
!8909 = !{!8910}
!8910 = !DILocalVariable(name: "Source", arg: 1, scope: !8908, file: !8858, line: 3188, type: !121)
!8911 = !DILocation(line: 0, scope: !8908)
!8912 = !DILocation(line: 3190, column: 3, scope: !8908)
!8913 = !DILocation(line: 3191, column: 1, scope: !8908)
!8914 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8858, file: !8858, line: 3204, type: !6905, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8915 = !DILocation(line: 3206, column: 21, scope: !8914)
!8916 = !DILocation(line: 3206, column: 3, scope: !8914)
!8917 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8858, file: !8858, line: 3240, type: !6915, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8918)
!8918 = !{!8919}
!8919 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8917, file: !8858, line: 3240, type: !121)
!8920 = !DILocation(line: 0, scope: !8917)
!8921 = !DILocation(line: 3242, column: 3, scope: !8917)
!8922 = !DILocation(line: 3243, column: 1, scope: !8917)
!8923 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8858, file: !8858, line: 3256, type: !6915, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8924)
!8924 = !{!8925}
!8925 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8923, file: !8858, line: 3256, type: !121)
!8926 = !DILocation(line: 0, scope: !8923)
!8927 = !DILocation(line: 3258, column: 3, scope: !8923)
!8928 = !DILocation(line: 3259, column: 1, scope: !8923)
!8929 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !849, file: !849, line: 409, type: !3244, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8930 = !DILocation(line: 412, column: 6, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8929, file: !849, line: 412, column: 6)
!8932 = !DILocation(line: 412, column: 27, scope: !8931)
!8933 = !DILocation(line: 412, column: 6, scope: !8929)
!8934 = !DILocation(line: 414, column: 3, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8931, file: !849, line: 412, column: 33)
!8936 = !DILocation(line: 415, column: 3, scope: !8935)
!8937 = !DILocation(line: 415, column: 10, scope: !8935)
!8938 = !DILocation(line: 415, column: 31, scope: !8935)
!8939 = distinct !{!8939, !8936, !8940}
!8940 = !DILocation(line: 417, column: 3, scope: !8935)
!8941 = !DILocation(line: 421, column: 2, scope: !8929)
!8942 = !DILocation(line: 422, column: 2, scope: !8929)
!8943 = !DILocation(line: 422, column: 9, scope: !8929)
!8944 = !DILocation(line: 422, column: 34, scope: !8929)
!8945 = distinct !{!8945, !8942, !8946}
!8946 = !DILocation(line: 423, column: 2, scope: !8929)
!8947 = !DILocation(line: 424, column: 1, scope: !8929)
!8948 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8858, file: !8858, line: 4195, type: !3244, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8949 = !DILocation(line: 4197, column: 3, scope: !8948)
!8950 = !DILocation(line: 4198, column: 1, scope: !8948)
!8951 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8858, file: !8858, line: 4184, type: !3244, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8952 = !DILocation(line: 4186, column: 3, scope: !8951)
!8953 = !DILocation(line: 4187, column: 1, scope: !8951)
!8954 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8858, file: !8858, line: 4205, type: !6905, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8955 = !DILocation(line: 4207, column: 11, scope: !8954)
!8956 = !DILocation(line: 4207, column: 44, scope: !8954)
!8957 = !DILocation(line: 4207, column: 3, scope: !8954)
!8958 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8858, file: !8858, line: 3007, type: !6905, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8959 = !DILocation(line: 3009, column: 11, scope: !8958)
!8960 = !DILocation(line: 3009, column: 44, scope: !8958)
!8961 = !DILocation(line: 3009, column: 3, scope: !8958)
!8962 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8858, file: !8858, line: 2987, type: !3244, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8963 = !DILocation(line: 2989, column: 3, scope: !8962)
!8964 = !DILocation(line: 2990, column: 1, scope: !8962)
!8965 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8858, file: !8858, line: 2939, type: !3244, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8966 = !DILocation(line: 2941, column: 3, scope: !8965)
!8967 = !DILocation(line: 2942, column: 1, scope: !8965)
!8968 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8858, file: !8858, line: 2949, type: !3244, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8969 = !DILocation(line: 2951, column: 3, scope: !8968)
!8970 = !DILocation(line: 2952, column: 1, scope: !8968)
!8971 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8858, file: !8858, line: 2969, type: !6905, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8972 = !DILocation(line: 2971, column: 11, scope: !8971)
!8973 = !DILocation(line: 2971, column: 44, scope: !8971)
!8974 = !DILocation(line: 2971, column: 3, scope: !8971)
!8975 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8858, file: !8858, line: 3143, type: !3244, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8976 = !DILocation(line: 3145, column: 3, scope: !8975)
!8977 = !DILocation(line: 3146, column: 1, scope: !8975)
!8978 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8858, file: !8858, line: 3163, type: !6905, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !461)
!8979 = !DILocation(line: 3165, column: 11, scope: !8978)
!8980 = !DILocation(line: 3165, column: 46, scope: !8978)
!8981 = !DILocation(line: 3165, column: 3, scope: !8978)
!8982 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8983, file: !8983, line: 40, type: !6905, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !461)
!8983 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8984 = !DILocation(line: 45, column: 3, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8986, file: !8983, line: 44, column: 44)
!8986 = distinct !DILexicalBlock(scope: !8987, file: !8983, line: 44, column: 13)
!8987 = distinct !DILexicalBlock(scope: !8982, file: !8983, line: 42, column: 6)
!8988 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8983, file: !8983, line: 56, type: !3244, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !461)
!8989 = !DILocation(line: 58, column: 2, scope: !8988)
!8990 = !DILocation(line: 62, column: 1, scope: !8988)
!8991 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8858, file: !8858, line: 4304, type: !8992, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !8994)
!8992 = !DISubroutineType(types: !8993)
!8993 = !{null, !121, !121, !121, !121}
!8994 = !{!8995, !8996, !8997, !8998}
!8995 = !DILocalVariable(name: "Source", arg: 1, scope: !8991, file: !8858, line: 4304, type: !121)
!8996 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8991, file: !8858, line: 4304, type: !121)
!8997 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8991, file: !8858, line: 4304, type: !121)
!8998 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8991, file: !8858, line: 4304, type: !121)
!8999 = !DILocation(line: 0, scope: !8991)
!9000 = !DILocation(line: 4306, column: 3, scope: !8991)
!9001 = !DILocation(line: 4308, column: 3, scope: !8991)
!9002 = !DILocation(line: 4312, column: 1, scope: !8991)
!9003 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8983, file: !8983, line: 69, type: !3244, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !461)
!9004 = !DILocation(line: 72, column: 2, scope: !9003)
!9005 = !DILocation(line: 73, column: 1, scope: !9003)
!9006 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9007, file: !9007, line: 1185, type: !6915, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !9008)
!9007 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9008 = !{!9009, !9010}
!9009 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9006, file: !9007, line: 1185, type: !121)
!9010 = !DILocalVariable(name: "tmpreg", scope: !9006, file: !9007, line: 1187, type: !120)
!9011 = !DILocation(line: 0, scope: !9006)
!9012 = !DILocation(line: 1187, column: 3, scope: !9006)
!9013 = !DILocation(line: 1187, column: 17, scope: !9006)
!9014 = !DILocation(line: 1188, column: 3, scope: !9006)
!9015 = !DILocation(line: 1190, column: 12, scope: !9006)
!9016 = !DILocation(line: 1190, column: 10, scope: !9006)
!9017 = !DILocation(line: 1191, column: 9, scope: !9006)
!9018 = !DILocation(line: 1192, column: 1, scope: !9006)
!9019 = distinct !DISubprogram(name: "uart_console_init", scope: !927, file: !927, line: 588, type: !964, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9020)
!9020 = !{!9021}
!9021 = !DILocalVariable(name: "arg", arg: 1, scope: !9019, file: !927, line: 588, type: !943)
!9022 = !DILocation(line: 0, scope: !9019)
!9023 = !DILocation(line: 593, column: 7, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9019, file: !927, line: 593, column: 6)
!9025 = !DILocation(line: 593, column: 6, scope: !9019)
!9026 = !DILocation(line: 597, column: 2, scope: !9019)
!9027 = !DILocation(line: 599, column: 2, scope: !9019)
!9028 = !DILocation(line: 600, column: 1, scope: !9019)
!9029 = distinct !DISubprogram(name: "device_is_ready", scope: !6665, file: !6665, line: 47, type: !9030, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9032)
!9030 = !DISubroutineType(types: !9031)
!9031 = !{!157, !943}
!9032 = !{!9033}
!9033 = !DILocalVariable(name: "dev", arg: 1, scope: !9029, file: !6665, line: 47, type: !943)
!9034 = !DILocation(line: 0, scope: !9029)
!9035 = !DILocation(line: 55, column: 2, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9029, file: !6665, line: 55, column: 2)
!9037 = !{i64 2155043658}
!9038 = !DILocation(line: 56, column: 9, scope: !9029)
!9039 = !DILocation(line: 56, column: 2, scope: !9029)
!9040 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !927, file: !927, line: 573, type: !3244, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !461)
!9041 = !DILocation(line: 576, column: 2, scope: !9040)
!9042 = !DILocation(line: 579, column: 2, scope: !9040)
!9043 = !DILocation(line: 581, column: 1, scope: !9040)
!9044 = distinct !DISubprogram(name: "console_out", scope: !927, file: !927, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9045)
!9045 = !{!9046, !9047}
!9046 = !DILocalVariable(name: "c", arg: 1, scope: !9044, file: !927, line: 77, type: !103)
!9047 = !DILocalVariable(name: "handled_by_debug_server", scope: !9044, file: !927, line: 81, type: !103)
!9048 = !DILocation(line: 0, scope: !9044)
!9049 = !DILocation(line: 81, column: 32, scope: !9044)
!9050 = !DILocation(line: 83, column: 6, scope: !9044)
!9051 = !DILocation(line: 89, column: 11, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9044, file: !927, line: 89, column: 6)
!9053 = !DILocation(line: 89, column: 6, scope: !9044)
!9054 = !DILocation(line: 90, column: 3, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9052, file: !927, line: 89, column: 17)
!9056 = !DILocation(line: 91, column: 2, scope: !9055)
!9057 = !DILocation(line: 92, column: 2, scope: !9044)
!9058 = !DILocation(line: 94, column: 2, scope: !9044)
!9059 = !DILocation(line: 95, column: 1, scope: !9044)
!9060 = distinct !DISubprogram(name: "uart_poll_out", scope: !5926, file: !5926, line: 95, type: !960, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9061)
!9061 = !{!9062, !9063}
!9062 = !DILocalVariable(name: "dev", arg: 1, scope: !9060, file: !5926, line: 95, type: !943)
!9063 = !DILocalVariable(name: "out_char", arg: 2, scope: !9060, file: !5926, line: 95, type: !155)
!9064 = !DILocation(line: 0, scope: !9060)
!9065 = !DILocation(line: 105, column: 2, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9060, file: !5926, line: 105, column: 2)
!9067 = !{i64 2155126903}
!9068 = !DILocation(line: 106, column: 2, scope: !9060)
!9069 = !DILocation(line: 107, column: 1, scope: !9060)
!9070 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !203, file: !203, line: 574, type: !960, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9071)
!9071 = !{!9072, !9073, !9074}
!9072 = !DILocalVariable(name: "dev", arg: 1, scope: !9070, file: !203, line: 574, type: !943)
!9073 = !DILocalVariable(name: "out_char", arg: 2, scope: !9070, file: !203, line: 575, type: !155)
!9074 = !DILocalVariable(name: "api", scope: !9070, file: !203, line: 577, type: !935)
!9075 = !DILocation(line: 0, scope: !9070)
!9076 = !DILocation(line: 578, column: 40, scope: !9070)
!9077 = !DILocation(line: 580, column: 7, scope: !9070)
!9078 = !DILocation(line: 580, column: 2, scope: !9070)
!9079 = !DILocation(line: 581, column: 1, scope: !9070)
!9080 = distinct !DISubprogram(name: "debug_hook_out_nop", scope: !927, file: !927, line: 49, type: !1077, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9081)
!9081 = !{!9082}
!9082 = !DILocalVariable(name: "c", arg: 1, scope: !9080, file: !927, line: 49, type: !146)
!9083 = !DILocation(line: 0, scope: !9080)
!9084 = !DILocation(line: 51, column: 2, scope: !9080)
!9085 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9030, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9086)
!9086 = !{!9087}
!9087 = !DILocalVariable(name: "dev", arg: 1, scope: !9085, file: !141, line: 730, type: !943)
!9088 = !DILocation(line: 0, scope: !9085)
!9089 = !DILocation(line: 732, column: 9, scope: !9085)
!9090 = !DILocation(line: 732, column: 2, scope: !9085)
!9091 = distinct !DISubprogram(name: "uart_console_in_debug_hook_install", scope: !927, file: !927, line: 44, type: !9092, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9094)
!9092 = !DISubroutineType(types: !9093)
!9093 = !{null, !1119}
!9094 = !{!9095}
!9095 = !DILocalVariable(name: "hook", arg: 1, scope: !9091, file: !927, line: 44, type: !1119)
!9096 = !DILocation(line: 0, scope: !9091)
!9097 = !DILocation(line: 46, column: 16, scope: !9091)
!9098 = !DILocation(line: 47, column: 1, scope: !9091)
!9099 = distinct !DISubprogram(name: "uart_console_out_debug_hook_install", scope: !927, file: !927, line: 55, type: !9100, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9102)
!9100 = !DISubroutineType(types: !9101)
!9101 = !{null, !1074}
!9102 = !{!9103}
!9103 = !DILocalVariable(name: "hook", arg: 1, scope: !9099, file: !927, line: 55, type: !1074)
!9104 = !DILocation(line: 0, scope: !9099)
!9105 = !DILocation(line: 57, column: 17, scope: !9099)
!9106 = !DILocation(line: 58, column: 1, scope: !9099)
!9107 = distinct !DISubprogram(name: "uart_register_input", scope: !927, file: !927, line: 549, type: !9108, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9110)
!9108 = !DISubroutineType(types: !9109)
!9109 = !{null, !1024, !1024, !1068}
!9110 = !{!9111, !9112, !9113}
!9111 = !DILocalVariable(name: "avail", arg: 1, scope: !9107, file: !927, line: 549, type: !1024)
!9112 = !DILocalVariable(name: "lines", arg: 2, scope: !9107, file: !927, line: 549, type: !1024)
!9113 = !DILocalVariable(name: "completion", arg: 3, scope: !9107, file: !927, line: 550, type: !1068)
!9114 = !DILocation(line: 0, scope: !9107)
!9115 = !DILocation(line: 552, column: 14, scope: !9107)
!9116 = !DILocation(line: 553, column: 14, scope: !9107)
!9117 = !DILocation(line: 554, column: 16, scope: !9107)
!9118 = !DILocation(line: 556, column: 2, scope: !9107)
!9119 = !DILocation(line: 557, column: 1, scope: !9107)
!9120 = distinct !DISubprogram(name: "console_input_init", scope: !927, file: !927, line: 532, type: !3244, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9121)
!9121 = !{!9122}
!9122 = !DILocalVariable(name: "c", scope: !9120, file: !927, line: 534, type: !154)
!9123 = !DILocation(line: 534, column: 2, scope: !9120)
!9124 = !DILocation(line: 536, column: 2, scope: !9120)
!9125 = !DILocation(line: 537, column: 2, scope: !9120)
!9126 = !DILocation(line: 539, column: 2, scope: !9120)
!9127 = !DILocation(line: 542, column: 9, scope: !9120)
!9128 = !DILocation(line: 542, column: 2, scope: !9120)
!9129 = !DILocation(line: 0, scope: !9120)
!9130 = !DILocation(line: 543, column: 3, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9120, file: !927, line: 542, column: 46)
!9132 = distinct !{!9132, !9128, !9133}
!9133 = !DILocation(line: 544, column: 2, scope: !9120)
!9134 = !DILocation(line: 546, column: 2, scope: !9120)
!9135 = !DILocation(line: 547, column: 1, scope: !9120)
!9136 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5926, file: !5926, line: 265, type: !994, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9137)
!9137 = !{!9138}
!9138 = !DILocalVariable(name: "dev", arg: 1, scope: !9136, file: !5926, line: 265, type: !943)
!9139 = !DILocation(line: 0, scope: !9136)
!9140 = !DILocation(line: 274, column: 2, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9136, file: !5926, line: 274, column: 2)
!9142 = !{i64 2155127379}
!9143 = !DILocation(line: 275, column: 2, scope: !9136)
!9144 = !DILocation(line: 276, column: 1, scope: !9136)
!9145 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5926, file: !5926, line: 217, type: !994, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9146)
!9146 = !{!9147}
!9147 = !DILocalVariable(name: "dev", arg: 1, scope: !9145, file: !5926, line: 217, type: !943)
!9148 = !DILocation(line: 0, scope: !9145)
!9149 = !DILocation(line: 226, column: 2, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9145, file: !5926, line: 226, column: 2)
!9151 = !{i64 2155127243}
!9152 = !DILocation(line: 227, column: 2, scope: !9145)
!9153 = !DILocation(line: 228, column: 1, scope: !9145)
!9154 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !203, file: !203, line: 1190, type: !9155, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9157)
!9155 = !DISubroutineType(types: !9156)
!9156 = !{null, !943, !1010}
!9157 = !{!9158, !9159}
!9158 = !DILocalVariable(name: "dev", arg: 1, scope: !9154, file: !203, line: 1190, type: !943)
!9159 = !DILocalVariable(name: "cb", arg: 2, scope: !9154, file: !203, line: 1191, type: !1010)
!9160 = !DILocation(line: 0, scope: !9154)
!9161 = !DILocation(line: 1193, column: 2, scope: !9154)
!9162 = !DILocation(line: 1194, column: 1, scope: !9154)
!9163 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !203, file: !203, line: 1024, type: !964, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9164)
!9164 = !{!9165, !9166}
!9165 = !DILocalVariable(name: "dev", arg: 1, scope: !9163, file: !203, line: 1024, type: !943)
!9166 = !DILocalVariable(name: "api", scope: !9163, file: !203, line: 1027, type: !935)
!9167 = !DILocation(line: 0, scope: !9163)
!9168 = !DILocation(line: 1028, column: 40, scope: !9163)
!9169 = !DILocation(line: 1030, column: 11, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9163, file: !203, line: 1030, column: 6)
!9171 = !DILocation(line: 1030, column: 24, scope: !9170)
!9172 = !DILocation(line: 1030, column: 6, scope: !9163)
!9173 = !DILocation(line: 1033, column: 9, scope: !9163)
!9174 = !DILocation(line: 1033, column: 2, scope: !9163)
!9175 = !DILocation(line: 1038, column: 1, scope: !9163)
!9176 = distinct !DISubprogram(name: "uart_fifo_read", scope: !203, file: !203, line: 785, type: !990, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9177)
!9177 = !{!9178, !9179, !9180, !9181}
!9178 = !DILocalVariable(name: "dev", arg: 1, scope: !9176, file: !203, line: 785, type: !943)
!9179 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9176, file: !203, line: 785, type: !261)
!9180 = !DILocalVariable(name: "size", arg: 3, scope: !9176, file: !203, line: 786, type: !262)
!9181 = !DILocalVariable(name: "api", scope: !9176, file: !203, line: 789, type: !935)
!9182 = !DILocation(line: 0, scope: !9176)
!9183 = !DILocation(line: 790, column: 40, scope: !9176)
!9184 = !DILocation(line: 792, column: 11, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9176, file: !203, line: 792, column: 6)
!9186 = !DILocation(line: 792, column: 21, scope: !9185)
!9187 = !DILocation(line: 792, column: 6, scope: !9176)
!9188 = !DILocation(line: 796, column: 9, scope: !9176)
!9189 = !DILocation(line: 796, column: 2, scope: !9176)
!9190 = !DILocation(line: 803, column: 1, scope: !9176)
!9191 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5926, file: !5926, line: 241, type: !994, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9192)
!9192 = !{!9193}
!9193 = !DILocalVariable(name: "dev", arg: 1, scope: !9191, file: !5926, line: 241, type: !943)
!9194 = !DILocation(line: 0, scope: !9191)
!9195 = !DILocation(line: 250, column: 2, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9191, file: !5926, line: 250, column: 2)
!9197 = !{i64 2155127311}
!9198 = !DILocation(line: 251, column: 2, scope: !9191)
!9199 = !DILocation(line: 252, column: 1, scope: !9191)
!9200 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !203, file: !203, line: 934, type: !994, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9201)
!9201 = !{!9202, !9203}
!9202 = !DILocalVariable(name: "dev", arg: 1, scope: !9200, file: !203, line: 934, type: !943)
!9203 = !DILocalVariable(name: "api", scope: !9200, file: !203, line: 937, type: !935)
!9204 = !DILocation(line: 0, scope: !9200)
!9205 = !DILocation(line: 938, column: 40, scope: !9200)
!9206 = !DILocation(line: 940, column: 11, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9200, file: !203, line: 940, column: 6)
!9208 = !DILocation(line: 940, column: 25, scope: !9207)
!9209 = !DILocation(line: 940, column: 6, scope: !9200)
!9210 = !DILocation(line: 941, column: 3, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9207, file: !203, line: 940, column: 34)
!9212 = !DILocation(line: 942, column: 2, scope: !9211)
!9213 = !DILocation(line: 946, column: 1, scope: !9200)
!9214 = !DILocation(line: 0, scope: !1084)
!9215 = !DILocation(line: 433, column: 9, scope: !1084)
!9216 = !DILocation(line: 433, column: 43, scope: !1084)
!9217 = !DILocation(line: 434, column: 9, scope: !1084)
!9218 = !DILocation(line: 433, column: 2, scope: !1084)
!9219 = !DILocation(line: 436, column: 3, scope: !1089)
!9220 = !DILocation(line: 439, column: 8, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !1089, file: !927, line: 439, column: 7)
!9222 = !DILocation(line: 439, column: 7, scope: !1089)
!9223 = distinct !{!9223, !9218, !9224}
!9224 = !DILocation(line: 529, column: 2, scope: !1084)
!9225 = !DILocation(line: 0, scope: !1089)
!9226 = !DILocation(line: 445, column: 8, scope: !1089)
!9227 = !DILocation(line: 446, column: 10, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !1089, file: !927, line: 446, column: 7)
!9229 = !DILocation(line: 446, column: 7, scope: !1089)
!9230 = !DILocation(line: 451, column: 7, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !1089, file: !927, line: 451, column: 7)
!9232 = !DILocation(line: 451, column: 21, scope: !9231)
!9233 = !DILocation(line: 451, column: 29, scope: !9231)
!9234 = !DILocation(line: 451, column: 46, scope: !9231)
!9235 = !DILocation(line: 451, column: 32, scope: !9231)
!9236 = !DILocation(line: 451, column: 52, scope: !9231)
!9237 = !DILocation(line: 451, column: 7, scope: !1089)
!9238 = !DILocation(line: 460, column: 8, scope: !1094)
!9239 = !DILocation(line: 460, column: 7, scope: !1089)
!9240 = !DILocation(line: 461, column: 10, scope: !1092)
!9241 = !DILocation(line: 0, scope: !1092)
!9242 = !DILocation(line: 461, column: 8, scope: !1093)
!9243 = !DILocation(line: 462, column: 9, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !1093, file: !927, line: 462, column: 8)
!9245 = !DILocation(line: 462, column: 8, scope: !1093)
!9246 = !DILocation(line: 477, column: 7, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !1089, file: !927, line: 477, column: 7)
!9248 = !DILocation(line: 477, column: 7, scope: !1089)
!9249 = !DILocation(line: 478, column: 16, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9247, file: !927, line: 477, column: 46)
!9251 = !DILocation(line: 478, column: 22, scope: !9250)
!9252 = !DILocation(line: 478, column: 4, scope: !9250)
!9253 = !DILocation(line: 479, column: 4, scope: !9250)
!9254 = !DILocation(line: 483, column: 7, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !1089, file: !927, line: 483, column: 7)
!9256 = !DILocation(line: 483, column: 7, scope: !1089)
!9257 = !DILocation(line: 484, column: 13, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9259, file: !927, line: 484, column: 8)
!9259 = distinct !DILexicalBlock(scope: !9255, file: !927, line: 483, column: 55)
!9260 = !DILocation(line: 484, column: 8, scope: !9259)
!9261 = !DILocation(line: 485, column: 5, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9258, file: !927, line: 484, column: 26)
!9263 = !DILocation(line: 486, column: 5, scope: !9262)
!9264 = !DILocation(line: 487, column: 4, scope: !9262)
!9265 = !DILocation(line: 493, column: 16, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !1089, file: !927, line: 493, column: 7)
!9267 = !DILocation(line: 493, column: 8, scope: !9266)
!9268 = !DILocation(line: 493, column: 7, scope: !1089)
!9269 = !DILocation(line: 494, column: 4, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9266, file: !927, line: 493, column: 23)
!9271 = !DILocation(line: 497, column: 9, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !927, line: 497, column: 9)
!9273 = distinct !DILexicalBlock(scope: !9270, file: !927, line: 494, column: 18)
!9274 = !DILocation(line: 497, column: 13, scope: !9272)
!9275 = !DILocation(line: 497, column: 9, scope: !9273)
!9276 = !DILocation(line: 498, column: 16, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9272, file: !927, line: 497, column: 18)
!9278 = !DILocation(line: 498, column: 26, scope: !9277)
!9279 = !DILocation(line: 498, column: 34, scope: !9277)
!9280 = !DILocation(line: 498, column: 6, scope: !9277)
!9281 = !DILocation(line: 499, column: 5, scope: !9277)
!9282 = !DILocation(line: 502, column: 5, scope: !9273)
!9283 = !DILocation(line: 503, column: 5, scope: !9273)
!9284 = !DILocation(line: 505, column: 5, scope: !9273)
!9285 = !DILocation(line: 505, column: 15, scope: !9273)
!9286 = !DILocation(line: 505, column: 21, scope: !9273)
!9287 = !DILocation(line: 505, column: 19, scope: !9273)
!9288 = !DILocation(line: 505, column: 26, scope: !9273)
!9289 = !DILocation(line: 506, column: 5, scope: !9273)
!9290 = !DILocation(line: 507, column: 5, scope: !9273)
!9291 = !DILocation(line: 508, column: 9, scope: !9273)
!9292 = !DILocation(line: 509, column: 9, scope: !9273)
!9293 = !DILocation(line: 510, column: 5, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9273, file: !927, line: 510, column: 5)
!9295 = !DILocation(line: 511, column: 9, scope: !9273)
!9296 = !DILocation(line: 512, column: 5, scope: !9273)
!9297 = !DILocation(line: 514, column: 9, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9273, file: !927, line: 514, column: 9)
!9299 = !DILocation(line: 514, column: 23, scope: !9298)
!9300 = !DILocation(line: 515, column: 27, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9298, file: !927, line: 514, column: 32)
!9302 = !DILocation(line: 515, column: 38, scope: !9301)
!9303 = !DILocation(line: 515, column: 13, scope: !9301)
!9304 = !DILocation(line: 515, column: 10, scope: !9301)
!9305 = !DILocation(line: 516, column: 5, scope: !9301)
!9306 = !DILocation(line: 526, column: 7, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !1089, file: !927, line: 526, column: 7)
!9308 = !DILocation(line: 526, column: 13, scope: !9307)
!9309 = !DILocation(line: 526, column: 11, scope: !9307)
!9310 = !DILocation(line: 526, column: 17, scope: !9307)
!9311 = !DILocation(line: 526, column: 7, scope: !1089)
!9312 = !DILocation(line: 527, column: 17, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9307, file: !927, line: 526, column: 42)
!9314 = !DILocation(line: 527, column: 30, scope: !9313)
!9315 = !DILocation(line: 527, column: 4, scope: !9313)
!9316 = !DILocation(line: 528, column: 3, scope: !9313)
!9317 = !DILocation(line: 530, column: 1, scope: !1084)
!9318 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !203, file: !203, line: 1163, type: !1008, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9319)
!9319 = !{!9320, !9321, !9322, !9323}
!9320 = !DILocalVariable(name: "dev", arg: 1, scope: !9318, file: !203, line: 1163, type: !943)
!9321 = !DILocalVariable(name: "cb", arg: 2, scope: !9318, file: !203, line: 1164, type: !1010)
!9322 = !DILocalVariable(name: "user_data", arg: 3, scope: !9318, file: !203, line: 1165, type: !102)
!9323 = !DILocalVariable(name: "api", scope: !9318, file: !203, line: 1168, type: !935)
!9324 = !DILocation(line: 0, scope: !9318)
!9325 = !DILocation(line: 1169, column: 40, scope: !9318)
!9326 = !DILocation(line: 1171, column: 11, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9318, file: !203, line: 1171, column: 6)
!9328 = !DILocation(line: 1171, column: 20, scope: !9327)
!9329 = !DILocation(line: 1171, column: 29, scope: !9327)
!9330 = !DILocation(line: 1171, column: 46, scope: !9327)
!9331 = !DILocation(line: 1171, column: 6, scope: !9318)
!9332 = !DILocation(line: 1172, column: 3, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9327, file: !203, line: 1171, column: 56)
!9334 = !DILocation(line: 1173, column: 2, scope: !9333)
!9335 = !DILocation(line: 1179, column: 1, scope: !9318)
!9336 = distinct !DISubprogram(name: "uart_irq_update", scope: !5926, file: !5926, line: 360, type: !964, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9337)
!9337 = !{!9338}
!9338 = !DILocalVariable(name: "dev", arg: 1, scope: !9336, file: !5926, line: 360, type: !943)
!9339 = !DILocation(line: 0, scope: !9336)
!9340 = !DILocation(line: 368, column: 2, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9336, file: !5926, line: 368, column: 2)
!9342 = !{i64 2155127651}
!9343 = !DILocation(line: 369, column: 9, scope: !9336)
!9344 = !DILocation(line: 369, column: 2, scope: !9336)
!9345 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !5926, file: !5926, line: 337, type: !964, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9346)
!9346 = !{!9347}
!9347 = !DILocalVariable(name: "dev", arg: 1, scope: !9345, file: !5926, line: 337, type: !943)
!9348 = !DILocation(line: 0, scope: !9345)
!9349 = !DILocation(line: 345, column: 2, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9345, file: !5926, line: 345, column: 2)
!9351 = !{i64 2155127583}
!9352 = !DILocation(line: 346, column: 9, scope: !9345)
!9353 = !DILocation(line: 346, column: 2, scope: !9345)
!9354 = distinct !DISubprogram(name: "read_uart", scope: !927, file: !927, line: 127, type: !9355, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9357)
!9355 = !DISubroutineType(types: !9356)
!9356 = !{!103, !943, !261, !32}
!9357 = !{!9358, !9359, !9360, !9361}
!9358 = !DILocalVariable(name: "uart", arg: 1, scope: !9354, file: !927, line: 127, type: !943)
!9359 = !DILocalVariable(name: "buf", arg: 2, scope: !9354, file: !927, line: 127, type: !261)
!9360 = !DILocalVariable(name: "size", arg: 3, scope: !9354, file: !927, line: 128, type: !32)
!9361 = !DILocalVariable(name: "rx", scope: !9354, file: !927, line: 130, type: !103)
!9362 = !DILocation(line: 0, scope: !9354)
!9363 = !DILocation(line: 132, column: 7, scope: !9354)
!9364 = !DILocation(line: 133, column: 9, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9354, file: !927, line: 133, column: 6)
!9366 = !DILocation(line: 133, column: 6, scope: !9354)
!9367 = !DILocation(line: 135, column: 3, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9365, file: !927, line: 133, column: 14)
!9369 = !DILocation(line: 137, column: 3, scope: !9368)
!9370 = !DILocation(line: 141, column: 1, scope: !9354)
!9371 = distinct !DISubprogram(name: "k_queue_get", scope: !3677, file: !3677, line: 649, type: !9372, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9379)
!9372 = !DISubroutineType(types: !9373)
!9373 = !{!102, !9374, !9375}
!9374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!9375 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1709, line: 67, baseType: !9376)
!9376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1709, line: 65, size: 64, elements: !9377)
!9377 = !{!9378}
!9378 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9376, file: !1709, line: 66, baseType: !1708, size: 64)
!9379 = !{!9380, !9381}
!9380 = !DILocalVariable(name: "queue", arg: 1, scope: !9371, file: !3677, line: 649, type: !9374)
!9381 = !DILocalVariable(name: "timeout", arg: 2, scope: !9371, file: !3677, line: 649, type: !9375)
!9382 = !DILocation(line: 0, scope: !9371)
!9383 = !DILocation(line: 658, column: 2, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9371, file: !3677, line: 658, column: 2)
!9385 = !{i64 2154851498}
!9386 = !DILocation(line: 659, column: 9, scope: !9371)
!9387 = !DILocation(line: 659, column: 2, scope: !9371)
!9388 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1110, file: !1110, line: 131, type: !9389, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9393)
!9389 = !DISubroutineType(types: !9390)
!9390 = !{!157, !9391, !103}
!9391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9392, size: 32)
!9392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1109)
!9393 = !{!9394, !9395, !9396}
!9394 = !DILocalVariable(name: "target", arg: 1, scope: !9388, file: !1110, line: 131, type: !9391)
!9395 = !DILocalVariable(name: "bit", arg: 2, scope: !9388, file: !1110, line: 131, type: !103)
!9396 = !DILocalVariable(name: "val", scope: !9388, file: !1110, line: 133, type: !9397)
!9397 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1110, line: 23, baseType: !1109)
!9398 = !DILocation(line: 0, scope: !9388)
!9399 = !DILocation(line: 133, column: 21, scope: !9388)
!9400 = !DILocation(line: 135, column: 27, scope: !9388)
!9401 = !DILocation(line: 135, column: 50, scope: !9388)
!9402 = !DILocation(line: 135, column: 2, scope: !9388)
!9403 = distinct !DISubprogram(name: "handle_ansi", scope: !927, file: !927, line: 232, type: !9404, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9406)
!9404 = !DISubroutineType(types: !9405)
!9405 = !{null, !154, !1071}
!9406 = !{!9407, !9408, !9409}
!9407 = !DILocalVariable(name: "byte", arg: 1, scope: !9403, file: !927, line: 232, type: !154)
!9408 = !DILocalVariable(name: "line", arg: 2, scope: !9403, file: !927, line: 232, type: !1071)
!9409 = !DILabel(scope: !9403, name: "ansi_cmd", file: !927, line: 268)
!9410 = !DILocation(line: 0, scope: !9403)
!9411 = !DILocation(line: 234, column: 6, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9403, file: !927, line: 234, column: 6)
!9413 = !DILocation(line: 234, column: 6, scope: !9403)
!9414 = !DILocation(line: 235, column: 16, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9416, file: !927, line: 235, column: 7)
!9416 = distinct !DILexicalBlock(scope: !9412, file: !927, line: 234, column: 61)
!9417 = !DILocation(line: 235, column: 8, scope: !9415)
!9418 = !DILocation(line: 235, column: 7, scope: !9416)
!9419 = !DILocation(line: 236, column: 13, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9415, file: !927, line: 235, column: 23)
!9421 = !DILocation(line: 237, column: 4, scope: !9420)
!9422 = !DILocation(line: 240, column: 3, scope: !9416)
!9423 = !DILocation(line: 241, column: 19, scope: !9416)
!9424 = !DILocation(line: 241, column: 12, scope: !9416)
!9425 = !DILocation(line: 242, column: 14, scope: !9416)
!9426 = !DILocation(line: 243, column: 3, scope: !9416)
!9427 = !DILocation(line: 246, column: 6, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9403, file: !927, line: 246, column: 6)
!9429 = !DILocation(line: 246, column: 6, scope: !9403)
!9430 = !DILocation(line: 247, column: 15, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9432, file: !927, line: 247, column: 7)
!9432 = distinct !DILexicalBlock(scope: !9428, file: !927, line: 246, column: 49)
!9433 = !DILocation(line: 247, column: 7, scope: !9431)
!9434 = !DILocation(line: 247, column: 7, scope: !9432)
!9435 = !DILocation(line: 248, column: 8, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !927, line: 248, column: 8)
!9437 = distinct !DILexicalBlock(scope: !9431, file: !927, line: 247, column: 22)
!9438 = !DILocation(line: 248, column: 8, scope: !9437)
!9439 = !DILocation(line: 249, column: 16, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9436, file: !927, line: 248, column: 53)
!9441 = !DILocation(line: 250, column: 24, scope: !9440)
!9442 = !DILocation(line: 250, column: 16, scope: !9440)
!9443 = !DILocation(line: 251, column: 4, scope: !9440)
!9444 = !DILocation(line: 252, column: 14, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9436, file: !927, line: 251, column: 11)
!9446 = !DILocation(line: 253, column: 22, scope: !9445)
!9447 = !DILocation(line: 253, column: 14, scope: !9445)
!9448 = !DILocation(line: 259, column: 12, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9432, file: !927, line: 259, column: 7)
!9450 = !DILocation(line: 259, column: 19, scope: !9449)
!9451 = !DILocation(line: 260, column: 8, scope: !9449)
!9452 = !DILocation(line: 259, column: 7, scope: !9432)
!9453 = !DILocation(line: 264, column: 3, scope: !9432)
!9454 = !DILocation(line: 265, column: 3, scope: !9432)
!9455 = !DILocation(line: 266, column: 2, scope: !9432)
!9456 = !DILocation(line: 268, column: 1, scope: !9403)
!9457 = !DILocation(line: 269, column: 2, scope: !9403)
!9458 = !DILocation(line: 271, column: 7, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9460, file: !927, line: 271, column: 7)
!9460 = distinct !DILexicalBlock(scope: !9403, file: !927, line: 269, column: 16)
!9461 = !DILocation(line: 271, column: 18, scope: !9459)
!9462 = !DILocation(line: 271, column: 16, scope: !9459)
!9463 = !DILocation(line: 271, column: 7, scope: !9460)
!9464 = !DILocation(line: 275, column: 7, scope: !9460)
!9465 = !DILocation(line: 276, column: 7, scope: !9460)
!9466 = !DILocation(line: 277, column: 3, scope: !9460)
!9467 = !DILocation(line: 278, column: 3, scope: !9460)
!9468 = !DILocation(line: 280, column: 7, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9460, file: !927, line: 280, column: 7)
!9470 = !DILocation(line: 280, column: 18, scope: !9469)
!9471 = !DILocation(line: 280, column: 16, scope: !9469)
!9472 = !DILocation(line: 280, column: 7, scope: !9460)
!9473 = !DILocation(line: 284, column: 7, scope: !9460)
!9474 = !DILocation(line: 285, column: 7, scope: !9460)
!9475 = !DILocation(line: 286, column: 3, scope: !9460)
!9476 = !DILocation(line: 287, column: 3, scope: !9460)
!9477 = !DILocation(line: 289, column: 8, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9460, file: !927, line: 289, column: 7)
!9479 = !DILocation(line: 289, column: 7, scope: !9460)
!9480 = !DILocation(line: 293, column: 19, scope: !9460)
!9481 = !DILocation(line: 293, column: 3, scope: !9460)
!9482 = !DILocation(line: 294, column: 10, scope: !9460)
!9483 = !DILocation(line: 294, column: 7, scope: !9460)
!9484 = !DILocation(line: 295, column: 7, scope: !9460)
!9485 = !DILocation(line: 296, column: 3, scope: !9460)
!9486 = !DILocation(line: 298, column: 8, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9460, file: !927, line: 298, column: 7)
!9488 = !DILocation(line: 298, column: 7, scope: !9460)
!9489 = !DILocation(line: 302, column: 18, scope: !9460)
!9490 = !DILocation(line: 302, column: 3, scope: !9460)
!9491 = !DILocation(line: 303, column: 10, scope: !9460)
!9492 = !DILocation(line: 303, column: 7, scope: !9460)
!9493 = !DILocation(line: 304, column: 7, scope: !9460)
!9494 = !DILocation(line: 305, column: 3, scope: !9460)
!9495 = !DILocation(line: 307, column: 8, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9460, file: !927, line: 307, column: 7)
!9497 = !DILocation(line: 307, column: 7, scope: !9460)
!9498 = !DILocation(line: 311, column: 3, scope: !9460)
!9499 = !DILocation(line: 312, column: 18, scope: !9460)
!9500 = !DILocation(line: 312, column: 13, scope: !9460)
!9501 = !DILocation(line: 312, column: 24, scope: !9460)
!9502 = !DILocation(line: 312, column: 3, scope: !9460)
!9503 = !DILocation(line: 313, column: 3, scope: !9460)
!9504 = !DILocation(line: 318, column: 2, scope: !9403)
!9505 = !DILocation(line: 319, column: 1, scope: !9403)
!9506 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1110, file: !1110, line: 152, type: !9507, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9510)
!9507 = !DISubroutineType(types: !9508)
!9508 = !{!157, !9509, !103}
!9509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!9510 = !{!9511, !9512, !9513, !9514}
!9511 = !DILocalVariable(name: "target", arg: 1, scope: !9506, file: !1110, line: 152, type: !9509)
!9512 = !DILocalVariable(name: "bit", arg: 2, scope: !9506, file: !1110, line: 152, type: !103)
!9513 = !DILocalVariable(name: "mask", scope: !9506, file: !1110, line: 154, type: !9397)
!9514 = !DILocalVariable(name: "old", scope: !9506, file: !1110, line: 155, type: !9397)
!9515 = !DILocation(line: 0, scope: !9506)
!9516 = !DILocation(line: 154, column: 22, scope: !9506)
!9517 = !DILocation(line: 157, column: 45, scope: !9506)
!9518 = !DILocation(line: 157, column: 8, scope: !9506)
!9519 = !DILocation(line: 159, column: 14, scope: !9506)
!9520 = !DILocation(line: 159, column: 22, scope: !9506)
!9521 = !DILocation(line: 159, column: 2, scope: !9506)
!9522 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1110, file: !1110, line: 217, type: !9523, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9525)
!9523 = !DISubroutineType(types: !9524)
!9524 = !{null, !9509, !103}
!9525 = !{!9526, !9527, !9528}
!9526 = !DILocalVariable(name: "target", arg: 1, scope: !9522, file: !1110, line: 217, type: !9509)
!9527 = !DILocalVariable(name: "bit", arg: 2, scope: !9522, file: !1110, line: 217, type: !103)
!9528 = !DILocalVariable(name: "mask", scope: !9522, file: !1110, line: 219, type: !9397)
!9529 = !DILocation(line: 0, scope: !9522)
!9530 = !DILocation(line: 219, column: 22, scope: !9522)
!9531 = !DILocation(line: 221, column: 8, scope: !9522)
!9532 = !DILocation(line: 222, column: 1, scope: !9522)
!9533 = distinct !DISubprogram(name: "isprint", scope: !4994, file: !4994, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9534)
!9534 = !{!9535}
!9535 = !DILocalVariable(name: "c", arg: 1, scope: !9533, file: !4994, line: 37, type: !103)
!9536 = !DILocation(line: 0, scope: !9533)
!9537 = !DILocation(line: 39, column: 38, scope: !9533)
!9538 = !DILocation(line: 39, column: 2, scope: !9533)
!9539 = distinct !DISubprogram(name: "del_char", scope: !927, file: !927, line: 191, type: !9540, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9542)
!9540 = !DISubroutineType(types: !9541)
!9541 = !{null, !1071, !154}
!9542 = !{!9543, !9544}
!9543 = !DILocalVariable(name: "pos", arg: 1, scope: !9539, file: !927, line: 191, type: !1071)
!9544 = !DILocalVariable(name: "end", arg: 2, scope: !9539, file: !927, line: 191, type: !154)
!9545 = !DILocation(line: 0, scope: !9539)
!9546 = !DILocation(line: 193, column: 2, scope: !9539)
!9547 = !DILocation(line: 195, column: 10, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9539, file: !927, line: 195, column: 6)
!9549 = !DILocation(line: 195, column: 6, scope: !9539)
!9550 = !DILocation(line: 196, column: 3, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9548, file: !927, line: 195, column: 17)
!9552 = !DILocation(line: 197, column: 3, scope: !9551)
!9553 = !DILocation(line: 198, column: 3, scope: !9551)
!9554 = !DILocation(line: 201, column: 2, scope: !9539)
!9555 = !DILocation(line: 203, column: 2, scope: !9539)
!9556 = !DILocation(line: 203, column: 12, scope: !9539)
!9557 = !DILocation(line: 204, column: 16, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9539, file: !927, line: 203, column: 20)
!9559 = !DILocation(line: 204, column: 10, scope: !9558)
!9560 = !DILocation(line: 204, column: 8, scope: !9558)
!9561 = !DILocation(line: 205, column: 3, scope: !9558)
!9562 = !DILocation(line: 203, column: 15, scope: !9539)
!9563 = distinct !{!9563, !9555, !9564}
!9564 = !DILocation(line: 206, column: 2, scope: !9539)
!9565 = !DILocation(line: 208, column: 2, scope: !9539)
!9566 = !DILocation(line: 211, column: 2, scope: !9539)
!9567 = !DILocation(line: 212, column: 1, scope: !9539)
!9568 = !DISubprogram(name: "k_queue_append", scope: !300, file: !300, line: 1775, type: !9569, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!9569 = !DISubroutineType(types: !9570)
!9570 = !{null, !9374, !102}
!9571 = distinct !DISubprogram(name: "insert_char", scope: !927, file: !927, line: 163, type: !9572, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9574)
!9572 = !DISubroutineType(types: !9573)
!9573 = !{null, !1071, !146, !154}
!9574 = !{!9575, !9576, !9577, !9578}
!9575 = !DILocalVariable(name: "pos", arg: 1, scope: !9571, file: !927, line: 163, type: !1071)
!9576 = !DILocalVariable(name: "c", arg: 2, scope: !9571, file: !927, line: 163, type: !146)
!9577 = !DILocalVariable(name: "end", arg: 3, scope: !9571, file: !927, line: 163, type: !154)
!9578 = !DILocalVariable(name: "tmp", scope: !9571, file: !927, line: 165, type: !146)
!9579 = !DILocation(line: 0, scope: !9571)
!9580 = !DILocation(line: 168, column: 2, scope: !9571)
!9581 = !DILocation(line: 170, column: 10, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9571, file: !927, line: 170, column: 6)
!9583 = !DILocation(line: 170, column: 6, scope: !9571)
!9584 = !DILocation(line: 171, column: 8, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9582, file: !927, line: 170, column: 17)
!9586 = !DILocation(line: 172, column: 3, scope: !9585)
!9587 = !DILocation(line: 175, column: 8, scope: !9571)
!9588 = !DILocation(line: 176, column: 11, scope: !9571)
!9589 = !DILocation(line: 178, column: 2, scope: !9571)
!9590 = !DILocation(line: 180, column: 2, scope: !9571)
!9591 = !DILocation(line: 180, column: 12, scope: !9571)
!9592 = !DILocation(line: 181, column: 3, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9571, file: !927, line: 180, column: 20)
!9594 = !DILocation(line: 182, column: 7, scope: !9593)
!9595 = !DILocation(line: 183, column: 12, scope: !9593)
!9596 = !DILocation(line: 180, column: 15, scope: !9571)
!9597 = distinct !{!9597, !9590, !9598}
!9598 = !DILocation(line: 185, column: 2, scope: !9571)
!9599 = !DILocation(line: 188, column: 2, scope: !9571)
!9600 = !DILocation(line: 189, column: 1, scope: !9571)
!9601 = distinct !DISubprogram(name: "cursor_save", scope: !927, file: !927, line: 153, type: !3244, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !461)
!9602 = !DILocation(line: 155, column: 2, scope: !9601)
!9603 = !DILocation(line: 156, column: 1, scope: !9601)
!9604 = distinct !DISubprogram(name: "cursor_restore", scope: !927, file: !927, line: 158, type: !3244, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !461)
!9605 = !DILocation(line: 160, column: 2, scope: !9604)
!9606 = !DILocation(line: 161, column: 1, scope: !9604)
!9607 = distinct !DISubprogram(name: "atomic_or", scope: !9608, file: !9608, line: 279, type: !9609, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9611)
!9608 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9609 = !DISubroutineType(types: !9610)
!9610 = !{!9397, !9509, !9397}
!9611 = !{!9612, !9613}
!9612 = !DILocalVariable(name: "target", arg: 1, scope: !9607, file: !9608, line: 279, type: !9509)
!9613 = !DILocalVariable(name: "value", arg: 2, scope: !9607, file: !9608, line: 279, type: !9397)
!9614 = !DILocation(line: 0, scope: !9607)
!9615 = !DILocation(line: 281, column: 9, scope: !9607)
!9616 = !DILocation(line: 281, column: 2, scope: !9607)
!9617 = distinct !DISubprogram(name: "atomic_and", scope: !9608, file: !9608, line: 319, type: !9609, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9618)
!9618 = !{!9619, !9620}
!9619 = !DILocalVariable(name: "target", arg: 1, scope: !9617, file: !9608, line: 319, type: !9509)
!9620 = !DILocalVariable(name: "value", arg: 2, scope: !9617, file: !9608, line: 319, type: !9397)
!9621 = !DILocation(line: 0, scope: !9617)
!9622 = !DILocation(line: 321, column: 9, scope: !9617)
!9623 = !DILocation(line: 321, column: 2, scope: !9617)
!9624 = distinct !DISubprogram(name: "isdigit", scope: !4994, file: !4994, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9625)
!9625 = !{!9626}
!9626 = !DILocalVariable(name: "a", arg: 1, scope: !9624, file: !4994, line: 43, type: !103)
!9627 = !DILocation(line: 0, scope: !9624)
!9628 = !DILocation(line: 45, column: 29, scope: !9624)
!9629 = !DILocation(line: 45, column: 45, scope: !9624)
!9630 = !DILocation(line: 45, column: 2, scope: !9624)
!9631 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1110, file: !1110, line: 176, type: !9507, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9632)
!9632 = !{!9633, !9634, !9635, !9636}
!9633 = !DILocalVariable(name: "target", arg: 1, scope: !9631, file: !1110, line: 176, type: !9509)
!9634 = !DILocalVariable(name: "bit", arg: 2, scope: !9631, file: !1110, line: 176, type: !103)
!9635 = !DILocalVariable(name: "mask", scope: !9631, file: !1110, line: 178, type: !9397)
!9636 = !DILocalVariable(name: "old", scope: !9631, file: !1110, line: 179, type: !9397)
!9637 = !DILocation(line: 0, scope: !9631)
!9638 = !DILocation(line: 181, column: 8, scope: !9631)
!9639 = !DILocation(line: 183, column: 14, scope: !9631)
!9640 = !DILocation(line: 183, column: 22, scope: !9631)
!9641 = !DILocation(line: 183, column: 2, scope: !9631)
!9642 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1110, file: !1110, line: 198, type: !9523, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9643)
!9643 = !{!9644, !9645, !9646}
!9644 = !DILocalVariable(name: "target", arg: 1, scope: !9642, file: !1110, line: 198, type: !9509)
!9645 = !DILocalVariable(name: "bit", arg: 2, scope: !9642, file: !1110, line: 198, type: !103)
!9646 = !DILocalVariable(name: "mask", scope: !9642, file: !1110, line: 200, type: !9397)
!9647 = !DILocation(line: 0, scope: !9642)
!9648 = !DILocation(line: 200, column: 22, scope: !9642)
!9649 = !DILocation(line: 202, column: 45, scope: !9642)
!9650 = !DILocation(line: 202, column: 8, scope: !9642)
!9651 = !DILocation(line: 203, column: 1, scope: !9642)
!9652 = distinct !DISubprogram(name: "cursor_backward", scope: !927, file: !927, line: 148, type: !5815, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9653)
!9653 = !{!9654}
!9654 = !DILocalVariable(name: "count", arg: 1, scope: !9652, file: !927, line: 148, type: !32)
!9655 = !DILocation(line: 0, scope: !9652)
!9656 = !DILocation(line: 150, column: 2, scope: !9652)
!9657 = !DILocation(line: 151, column: 1, scope: !9652)
!9658 = distinct !DISubprogram(name: "cursor_forward", scope: !927, file: !927, line: 143, type: !5815, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9659)
!9659 = !{!9660}
!9660 = !DILocalVariable(name: "count", arg: 1, scope: !9658, file: !927, line: 143, type: !32)
!9661 = !DILocation(line: 0, scope: !9658)
!9662 = !DILocation(line: 145, column: 2, scope: !9658)
!9663 = !DILocation(line: 146, column: 1, scope: !9658)
!9664 = distinct !DISubprogram(name: "atomic_get", scope: !9608, file: !9608, line: 159, type: !9665, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9667)
!9665 = !DISubroutineType(types: !9666)
!9666 = !{!9397, !9391}
!9667 = !{!9668}
!9668 = !DILocalVariable(name: "target", arg: 1, scope: !9664, file: !9608, line: 159, type: !9391)
!9669 = !DILocation(line: 0, scope: !9664)
!9670 = !DILocation(line: 161, column: 9, scope: !9664)
!9671 = !DILocation(line: 161, column: 2, scope: !9664)
!9672 = !DISubprogram(name: "z_impl_k_queue_get", scope: !3677, file: !3677, line: 646, type: !9372, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!9673 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !203, file: !203, line: 1093, type: !964, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9674)
!9674 = !{!9675, !9676}
!9675 = !DILocalVariable(name: "dev", arg: 1, scope: !9673, file: !203, line: 1093, type: !943)
!9676 = !DILocalVariable(name: "api", scope: !9673, file: !203, line: 1096, type: !935)
!9677 = !DILocation(line: 0, scope: !9673)
!9678 = !DILocation(line: 1097, column: 40, scope: !9673)
!9679 = !DILocation(line: 1099, column: 11, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9673, file: !203, line: 1099, column: 6)
!9681 = !DILocation(line: 1099, column: 26, scope: !9680)
!9682 = !DILocation(line: 1099, column: 6, scope: !9673)
!9683 = !DILocation(line: 1102, column: 9, scope: !9673)
!9684 = !DILocation(line: 1102, column: 2, scope: !9673)
!9685 = !DILocation(line: 1107, column: 1, scope: !9673)
!9686 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !203, file: !203, line: 1136, type: !964, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9687)
!9687 = !{!9688, !9689}
!9688 = !DILocalVariable(name: "dev", arg: 1, scope: !9686, file: !203, line: 1136, type: !943)
!9689 = !DILocalVariable(name: "api", scope: !9686, file: !203, line: 1139, type: !935)
!9690 = !DILocation(line: 0, scope: !9686)
!9691 = !DILocation(line: 1140, column: 40, scope: !9686)
!9692 = !DILocation(line: 1142, column: 11, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9686, file: !203, line: 1142, column: 6)
!9694 = !DILocation(line: 1142, column: 22, scope: !9693)
!9695 = !DILocation(line: 1142, column: 6, scope: !9686)
!9696 = !DILocation(line: 1145, column: 9, scope: !9686)
!9697 = !DILocation(line: 1145, column: 2, scope: !9686)
!9698 = !DILocation(line: 1150, column: 1, scope: !9686)
!9699 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !203, file: !203, line: 878, type: !994, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9700)
!9700 = !{!9701, !9702}
!9701 = !DILocalVariable(name: "dev", arg: 1, scope: !9699, file: !203, line: 878, type: !943)
!9702 = !DILocalVariable(name: "api", scope: !9699, file: !203, line: 881, type: !935)
!9703 = !DILocation(line: 0, scope: !9699)
!9704 = !DILocation(line: 882, column: 40, scope: !9699)
!9705 = !DILocation(line: 884, column: 11, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9699, file: !203, line: 884, column: 6)
!9707 = !DILocation(line: 884, column: 26, scope: !9706)
!9708 = !DILocation(line: 884, column: 6, scope: !9699)
!9709 = !DILocation(line: 885, column: 3, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9706, file: !203, line: 884, column: 35)
!9711 = !DILocation(line: 886, column: 2, scope: !9710)
!9712 = !DILocation(line: 890, column: 1, scope: !9699)
!9713 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !203, file: !203, line: 955, type: !994, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !923, retainedNodes: !9714)
!9714 = !{!9715, !9716}
!9715 = !DILocalVariable(name: "dev", arg: 1, scope: !9713, file: !203, line: 955, type: !943)
!9716 = !DILocalVariable(name: "api", scope: !9713, file: !203, line: 958, type: !935)
!9717 = !DILocation(line: 0, scope: !9713)
!9718 = !DILocation(line: 959, column: 40, scope: !9713)
!9719 = !DILocation(line: 961, column: 11, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9713, file: !203, line: 961, column: 6)
!9721 = !DILocation(line: 961, column: 26, scope: !9720)
!9722 = !DILocation(line: 961, column: 6, scope: !9713)
!9723 = !DILocation(line: 962, column: 3, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9720, file: !203, line: 961, column: 35)
!9725 = !DILocation(line: 963, column: 2, scope: !9724)
!9726 = !DILocation(line: 967, column: 1, scope: !9713)
!9727 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1294, file: !1294, line: 523, type: !1152, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9728)
!9728 = !{!9729, !9730, !9731, !9732, !9733}
!9729 = !DILocalVariable(name: "dev", arg: 1, scope: !9727, file: !1294, line: 523, type: !1154)
!9730 = !DILocalVariable(name: "pin", arg: 2, scope: !9727, file: !1294, line: 524, type: !1169)
!9731 = !DILocalVariable(name: "flags", arg: 3, scope: !9727, file: !1294, line: 524, type: !1170)
!9732 = !DILocalVariable(name: "err", scope: !9727, file: !1294, line: 526, type: !103)
!9733 = !DILocalVariable(name: "pincfg", scope: !9727, file: !1294, line: 527, type: !103)
!9734 = !DILocation(line: 0, scope: !9727)
!9735 = !DILocation(line: 527, column: 2, scope: !9727)
!9736 = !DILocation(line: 532, column: 8, scope: !9727)
!9737 = !DILocation(line: 533, column: 10, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9727, file: !1294, line: 533, column: 6)
!9739 = !DILocation(line: 533, column: 6, scope: !9727)
!9740 = !DILocation(line: 543, column: 13, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9727, file: !1294, line: 543, column: 6)
!9742 = !DILocation(line: 543, column: 28, scope: !9741)
!9743 = !DILocation(line: 543, column: 6, scope: !9727)
!9744 = !DILocation(line: 544, column: 14, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9746, file: !1294, line: 544, column: 7)
!9746 = distinct !DILexicalBlock(scope: !9741, file: !1294, line: 543, column: 34)
!9747 = !DILocation(line: 544, column: 39, scope: !9745)
!9748 = !DILocation(line: 544, column: 7, scope: !9746)
!9749 = !DILocation(line: 545, column: 38, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9745, file: !1294, line: 544, column: 45)
!9751 = !DILocation(line: 545, column: 4, scope: !9750)
!9752 = !DILocation(line: 546, column: 3, scope: !9750)
!9753 = !DILocation(line: 546, column: 21, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9745, file: !1294, line: 546, column: 14)
!9755 = !DILocation(line: 546, column: 45, scope: !9754)
!9756 = !DILocation(line: 546, column: 14, scope: !9745)
!9757 = !DILocation(line: 547, column: 40, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9754, file: !1294, line: 546, column: 51)
!9759 = !DILocation(line: 547, column: 4, scope: !9758)
!9760 = !DILocation(line: 548, column: 3, scope: !9758)
!9761 = !DILocation(line: 551, column: 32, scope: !9727)
!9762 = !DILocation(line: 551, column: 37, scope: !9727)
!9763 = !DILocation(line: 551, column: 2, scope: !9727)
!9764 = !DILocation(line: 554, column: 6, scope: !9727)
!9765 = !DILocation(line: 562, column: 1, scope: !9727)
!9766 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1294, file: !1294, line: 410, type: !9767, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9769)
!9767 = !DISubroutineType(types: !9768)
!9768 = !{!103, !1154, !845}
!9769 = !{!9770, !9771, !9772, !9774}
!9770 = !DILocalVariable(name: "dev", arg: 1, scope: !9766, file: !1294, line: 410, type: !1154)
!9771 = !DILocalVariable(name: "value", arg: 2, scope: !9766, file: !1294, line: 410, type: !845)
!9772 = !DILocalVariable(name: "cfg", scope: !9766, file: !1294, line: 412, type: !9773)
!9773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 32)
!9774 = !DILocalVariable(name: "gpio", scope: !9766, file: !1294, line: 413, type: !1227)
!9775 = !DILocation(line: 0, scope: !9766)
!9776 = !DILocation(line: 412, column: 45, scope: !9766)
!9777 = !DILocation(line: 413, column: 44, scope: !9766)
!9778 = !DILocation(line: 415, column: 11, scope: !9766)
!9779 = !DILocation(line: 415, column: 9, scope: !9766)
!9780 = !DILocation(line: 417, column: 2, scope: !9766)
!9781 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1294, file: !1294, line: 420, type: !1179, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9782)
!9782 = !{!9783, !9784, !9785, !9786, !9787, !9788}
!9783 = !DILocalVariable(name: "dev", arg: 1, scope: !9781, file: !1294, line: 420, type: !1154)
!9784 = !DILocalVariable(name: "mask", arg: 2, scope: !9781, file: !1294, line: 421, type: !1181)
!9785 = !DILocalVariable(name: "value", arg: 3, scope: !9781, file: !1294, line: 422, type: !1176)
!9786 = !DILocalVariable(name: "cfg", scope: !9781, file: !1294, line: 424, type: !9773)
!9787 = !DILocalVariable(name: "gpio", scope: !9781, file: !1294, line: 425, type: !1227)
!9788 = !DILocalVariable(name: "port_value", scope: !9781, file: !1294, line: 426, type: !121)
!9789 = !DILocation(line: 0, scope: !9781)
!9790 = !DILocation(line: 424, column: 45, scope: !9781)
!9791 = !DILocation(line: 425, column: 44, scope: !9781)
!9792 = !DILocation(line: 430, column: 15, scope: !9781)
!9793 = !DILocation(line: 431, column: 46, scope: !9781)
!9794 = !DILocation(line: 431, column: 44, scope: !9781)
!9795 = !DILocation(line: 431, column: 61, scope: !9781)
!9796 = !DILocation(line: 431, column: 53, scope: !9781)
!9797 = !DILocation(line: 431, column: 2, scope: !9781)
!9798 = !DILocation(line: 435, column: 2, scope: !9781)
!9799 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1294, file: !1294, line: 438, type: !1184, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9800)
!9800 = !{!9801, !9802, !9803, !9804}
!9801 = !DILocalVariable(name: "dev", arg: 1, scope: !9799, file: !1294, line: 438, type: !1154)
!9802 = !DILocalVariable(name: "pins", arg: 2, scope: !9799, file: !1294, line: 439, type: !1181)
!9803 = !DILocalVariable(name: "cfg", scope: !9799, file: !1294, line: 441, type: !9773)
!9804 = !DILocalVariable(name: "gpio", scope: !9799, file: !1294, line: 442, type: !1227)
!9805 = !DILocation(line: 0, scope: !9799)
!9806 = !DILocation(line: 441, column: 45, scope: !9799)
!9807 = !DILocation(line: 442, column: 44, scope: !9799)
!9808 = !DILocation(line: 448, column: 2, scope: !9799)
!9809 = !DILocation(line: 450, column: 2, scope: !9799)
!9810 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1294, file: !1294, line: 453, type: !1184, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9811)
!9811 = !{!9812, !9813, !9814, !9815}
!9812 = !DILocalVariable(name: "dev", arg: 1, scope: !9810, file: !1294, line: 453, type: !1154)
!9813 = !DILocalVariable(name: "pins", arg: 2, scope: !9810, file: !1294, line: 454, type: !1181)
!9814 = !DILocalVariable(name: "cfg", scope: !9810, file: !1294, line: 456, type: !9773)
!9815 = !DILocalVariable(name: "gpio", scope: !9810, file: !1294, line: 457, type: !1227)
!9816 = !DILocation(line: 0, scope: !9810)
!9817 = !DILocation(line: 456, column: 45, scope: !9810)
!9818 = !DILocation(line: 457, column: 44, scope: !9810)
!9819 = !DILocation(line: 467, column: 2, scope: !9810)
!9820 = !DILocation(line: 470, column: 2, scope: !9810)
!9821 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1294, file: !1294, line: 473, type: !1184, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9822)
!9822 = !{!9823, !9824, !9825, !9826}
!9823 = !DILocalVariable(name: "dev", arg: 1, scope: !9821, file: !1294, line: 473, type: !1154)
!9824 = !DILocalVariable(name: "pins", arg: 2, scope: !9821, file: !1294, line: 474, type: !1181)
!9825 = !DILocalVariable(name: "cfg", scope: !9821, file: !1294, line: 476, type: !9773)
!9826 = !DILocalVariable(name: "gpio", scope: !9821, file: !1294, line: 477, type: !1227)
!9827 = !DILocation(line: 0, scope: !9821)
!9828 = !DILocation(line: 476, column: 45, scope: !9821)
!9829 = !DILocation(line: 477, column: 44, scope: !9821)
!9830 = !DILocation(line: 484, column: 2, scope: !9821)
!9831 = !DILocation(line: 487, column: 2, scope: !9821)
!9832 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1294, file: !1294, line: 594, type: !1190, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9833)
!9833 = !{!9834, !9835, !9836, !9837, !9838, !9839, !9841, !9842, !9843}
!9834 = !DILocalVariable(name: "dev", arg: 1, scope: !9832, file: !1294, line: 594, type: !1154)
!9835 = !DILocalVariable(name: "pin", arg: 2, scope: !9832, file: !1294, line: 595, type: !1169)
!9836 = !DILocalVariable(name: "mode", arg: 3, scope: !9832, file: !1294, line: 596, type: !1128)
!9837 = !DILocalVariable(name: "trig", arg: 4, scope: !9832, file: !1294, line: 597, type: !1134)
!9838 = !DILocalVariable(name: "cfg", scope: !9832, file: !1294, line: 599, type: !9773)
!9839 = !DILocalVariable(name: "data", scope: !9832, file: !1294, line: 600, type: !9840)
!9840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!9841 = !DILocalVariable(name: "edge", scope: !9832, file: !1294, line: 601, type: !103)
!9842 = !DILocalVariable(name: "err", scope: !9832, file: !1294, line: 602, type: !103)
!9843 = !DILabel(scope: !9832, name: "exit", file: !1294, line: 643)
!9844 = !DILocation(line: 0, scope: !9832)
!9845 = !DILocation(line: 599, column: 45, scope: !9832)
!9846 = !DILocation(line: 604, column: 6, scope: !9832)
!9847 = !DILocation(line: 605, column: 34, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9849, file: !1294, line: 605, column: 7)
!9849 = distinct !DILexicalBlock(scope: !9850, file: !1294, line: 604, column: 38)
!9850 = distinct !DILexicalBlock(scope: !9832, file: !1294, line: 604, column: 6)
!9851 = !DILocation(line: 605, column: 7, scope: !9848)
!9852 = !DILocation(line: 605, column: 47, scope: !9848)
!9853 = !DILocation(line: 605, column: 39, scope: !9848)
!9854 = !DILocation(line: 605, column: 7, scope: !9849)
!9855 = !DILocation(line: 606, column: 4, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9848, file: !1294, line: 605, column: 53)
!9857 = !DILocation(line: 607, column: 4, scope: !9856)
!9858 = !DILocation(line: 608, column: 4, scope: !9856)
!9859 = !DILocation(line: 609, column: 3, scope: !9856)
!9860 = !DILocation(line: 600, column: 38, scope: !9832)
!9861 = !DILocation(line: 620, column: 30, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9832, file: !1294, line: 620, column: 6)
!9863 = !DILocation(line: 620, column: 6, scope: !9862)
!9864 = !DILocation(line: 620, column: 57, scope: !9862)
!9865 = !DILocation(line: 620, column: 6, scope: !9832)
!9866 = !DILocation(line: 625, column: 29, scope: !9832)
!9867 = !DILocation(line: 625, column: 2, scope: !9832)
!9868 = !DILocation(line: 627, column: 2, scope: !9832)
!9869 = !DILocation(line: 630, column: 3, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9832, file: !1294, line: 627, column: 16)
!9871 = !DILocation(line: 633, column: 3, scope: !9870)
!9872 = !DILocation(line: 636, column: 3, scope: !9870)
!9873 = !DILocation(line: 639, column: 2, scope: !9832)
!9874 = !DILocation(line: 641, column: 2, scope: !9832)
!9875 = !DILocation(line: 643, column: 1, scope: !9832)
!9876 = !DILocation(line: 644, column: 2, scope: !9832)
!9877 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1294, file: !1294, line: 647, type: !1194, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9878)
!9878 = !{!9879, !9880, !9881, !9882}
!9879 = !DILocalVariable(name: "dev", arg: 1, scope: !9877, file: !1294, line: 647, type: !1154)
!9880 = !DILocalVariable(name: "callback", arg: 2, scope: !9877, file: !1294, line: 648, type: !1196)
!9881 = !DILocalVariable(name: "set", arg: 3, scope: !9877, file: !1294, line: 649, type: !157)
!9882 = !DILocalVariable(name: "data", scope: !9877, file: !1294, line: 651, type: !9840)
!9883 = !DILocation(line: 0, scope: !9877)
!9884 = !DILocation(line: 651, column: 38, scope: !9877)
!9885 = !DILocation(line: 653, column: 37, scope: !9877)
!9886 = !DILocation(line: 653, column: 9, scope: !9877)
!9887 = !DILocation(line: 653, column: 2, scope: !9877)
!9888 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9889, file: !9889, line: 38, type: !9890, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9893)
!9889 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9890 = !DISubroutineType(types: !9891)
!9891 = !{!103, !9892, !1196, !157}
!9892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!9893 = !{!9894, !9895, !9896}
!9894 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9888, file: !9889, line: 38, type: !9892)
!9895 = !DILocalVariable(name: "callback", arg: 2, scope: !9888, file: !9889, line: 39, type: !1196)
!9896 = !DILocalVariable(name: "set", arg: 3, scope: !9888, file: !9889, line: 40, type: !157)
!9897 = !DILocation(line: 0, scope: !9888)
!9898 = !DILocation(line: 45, column: 7, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9888, file: !9889, line: 45, column: 6)
!9900 = !DILocation(line: 45, column: 6, scope: !9888)
!9901 = !DILocation(line: 46, column: 56, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9903, file: !9889, line: 46, column: 7)
!9903 = distinct !DILexicalBlock(scope: !9899, file: !9889, line: 45, column: 38)
!9904 = !DILocation(line: 46, column: 8, scope: !9902)
!9905 = !DILocation(line: 46, column: 7, scope: !9903)
!9906 = !DILocation(line: 51, column: 13, scope: !9899)
!9907 = !DILocation(line: 56, column: 43, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9909, file: !9889, line: 55, column: 11)
!9909 = distinct !DILexicalBlock(scope: !9888, file: !9889, line: 55, column: 6)
!9910 = !DILocation(line: 56, column: 3, scope: !9908)
!9911 = !DILocation(line: 57, column: 2, scope: !9908)
!9912 = !DILocation(line: 60, column: 1, scope: !9888)
!9913 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1201, file: !1201, line: 261, type: !9914, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9916)
!9914 = !DISubroutineType(types: !9915)
!9915 = !{!157, !9892}
!9916 = !{!9917}
!9917 = !DILocalVariable(name: "list", arg: 1, scope: !9913, file: !1201, line: 261, type: !9892)
!9918 = !DILocation(line: 0, scope: !9913)
!9919 = !DILocation(line: 261, column: 1, scope: !9913)
!9920 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1201, file: !1201, line: 417, type: !9921, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9923)
!9921 = !DISubroutineType(types: !9922)
!9922 = !{!157, !9892, !1373}
!9923 = !{!9924, !9925, !9926, !9927}
!9924 = !DILocalVariable(name: "list", arg: 1, scope: !9920, file: !1201, line: 417, type: !9892)
!9925 = !DILocalVariable(name: "node", arg: 2, scope: !9920, file: !1201, line: 417, type: !1373)
!9926 = !DILocalVariable(name: "prev", scope: !9920, file: !1201, line: 417, type: !1373)
!9927 = !DILocalVariable(name: "test", scope: !9920, file: !1201, line: 417, type: !1373)
!9928 = !DILocation(line: 0, scope: !9920)
!9929 = !DILocation(line: 417, column: 1, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9920, file: !1201, line: 417, column: 1)
!9931 = !DILocation(line: 417, column: 1, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9930, file: !1201, line: 417, column: 1)
!9933 = !DILocation(line: 417, column: 1, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9935, file: !1201, line: 417, column: 1)
!9935 = distinct !DILexicalBlock(scope: !9932, file: !1201, line: 417, column: 1)
!9936 = !DILocation(line: 417, column: 1, scope: !9935)
!9937 = distinct !{!9937, !9929, !9929}
!9938 = !DILocation(line: 417, column: 1, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9934, file: !1201, line: 417, column: 1)
!9940 = !DILocation(line: 417, column: 1, scope: !9920)
!9941 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1201, file: !1201, line: 298, type: !9942, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9944)
!9942 = !DISubroutineType(types: !9943)
!9943 = !{null, !9892, !1373}
!9944 = !{!9945, !9946}
!9945 = !DILocalVariable(name: "list", arg: 1, scope: !9941, file: !1201, line: 298, type: !9892)
!9946 = !DILocalVariable(name: "node", arg: 2, scope: !9941, file: !1201, line: 298, type: !1373)
!9947 = !DILocation(line: 0, scope: !9941)
!9948 = !DILocation(line: 298, column: 1, scope: !9941)
!9949 = !DILocation(line: 298, column: 1, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9941, file: !1201, line: 298, column: 1)
!9951 = !DILocation(line: 298, column: 1, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9950, file: !1201, line: 298, column: 1)
!9953 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1201, file: !1201, line: 231, type: !9954, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9956)
!9954 = !DISubroutineType(types: !9955)
!9955 = !{!1373, !9892}
!9956 = !{!9957}
!9957 = !DILocalVariable(name: "list", arg: 1, scope: !9953, file: !1201, line: 231, type: !9892)
!9958 = !DILocation(line: 0, scope: !9953)
!9959 = !DILocation(line: 233, column: 15, scope: !9953)
!9960 = !DILocation(line: 233, column: 2, scope: !9953)
!9961 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1201, file: !1201, line: 209, type: !9962, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9964)
!9962 = !DISubroutineType(types: !9963)
!9963 = !{null, !1373, !1373}
!9964 = !{!9965, !9966}
!9965 = !DILocalVariable(name: "parent", arg: 1, scope: !9961, file: !1201, line: 209, type: !1373)
!9966 = !DILocalVariable(name: "child", arg: 2, scope: !9961, file: !1201, line: 209, type: !1373)
!9967 = !DILocation(line: 0, scope: !9961)
!9968 = !DILocation(line: 211, column: 10, scope: !9961)
!9969 = !DILocation(line: 211, column: 15, scope: !9961)
!9970 = !DILocation(line: 212, column: 1, scope: !9961)
!9971 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1201, file: !1201, line: 214, type: !9942, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9972)
!9972 = !{!9973, !9974}
!9973 = !DILocalVariable(name: "list", arg: 1, scope: !9971, file: !1201, line: 214, type: !9892)
!9974 = !DILocalVariable(name: "node", arg: 2, scope: !9971, file: !1201, line: 214, type: !1373)
!9975 = !DILocation(line: 0, scope: !9971)
!9976 = !DILocation(line: 216, column: 8, scope: !9971)
!9977 = !DILocation(line: 216, column: 13, scope: !9971)
!9978 = !DILocation(line: 217, column: 1, scope: !9971)
!9979 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1201, file: !1201, line: 243, type: !9954, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9980)
!9980 = !{!9981}
!9981 = !DILocalVariable(name: "list", arg: 1, scope: !9979, file: !1201, line: 243, type: !9892)
!9982 = !DILocation(line: 0, scope: !9979)
!9983 = !DILocation(line: 245, column: 15, scope: !9979)
!9984 = !DILocation(line: 245, column: 2, scope: !9979)
!9985 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1201, file: !1201, line: 219, type: !9942, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9986)
!9986 = !{!9987, !9988}
!9987 = !DILocalVariable(name: "list", arg: 1, scope: !9985, file: !1201, line: 219, type: !9892)
!9988 = !DILocalVariable(name: "node", arg: 2, scope: !9985, file: !1201, line: 219, type: !1373)
!9989 = !DILocation(line: 0, scope: !9985)
!9990 = !DILocation(line: 221, column: 8, scope: !9985)
!9991 = !DILocation(line: 221, column: 13, scope: !9985)
!9992 = !DILocation(line: 222, column: 1, scope: !9985)
!9993 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1201, file: !1201, line: 401, type: !9994, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !9996)
!9994 = !DISubroutineType(types: !9995)
!9995 = !{null, !9892, !1373, !1373}
!9996 = !{!9997, !9998, !9999}
!9997 = !DILocalVariable(name: "list", arg: 1, scope: !9993, file: !1201, line: 401, type: !9892)
!9998 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9993, file: !1201, line: 401, type: !1373)
!9999 = !DILocalVariable(name: "node", arg: 3, scope: !9993, file: !1201, line: 401, type: !1373)
!10000 = !DILocation(line: 0, scope: !9993)
!10001 = !DILocation(line: 401, column: 1, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9993, file: !1201, line: 401, column: 1)
!10003 = !DILocation(line: 0, scope: !10002)
!10004 = !DILocation(line: 401, column: 1, scope: !9993)
!10005 = !DILocation(line: 401, column: 1, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10002, file: !1201, line: 401, column: 1)
!10007 = !DILocation(line: 401, column: 1, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10006, file: !1201, line: 401, column: 1)
!10009 = !DILocation(line: 401, column: 1, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10008, file: !1201, line: 401, column: 1)
!10011 = !DILocation(line: 401, column: 1, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10002, file: !1201, line: 401, column: 1)
!10013 = !DILocation(line: 401, column: 1, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10012, file: !1201, line: 401, column: 1)
!10015 = !DILocation(line: 401, column: 1, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10014, file: !1201, line: 401, column: 1)
!10017 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1201, file: !1201, line: 285, type: !10018, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10020)
!10018 = !DISubroutineType(types: !10019)
!10019 = !{!1373, !1373}
!10020 = !{!10021}
!10021 = !DILocalVariable(name: "node", arg: 1, scope: !10017, file: !1201, line: 285, type: !1373)
!10022 = !DILocation(line: 0, scope: !10017)
!10023 = !DILocation(line: 285, column: 1, scope: !10017)
!10024 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1201, file: !1201, line: 274, type: !10018, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10025)
!10025 = !{!10026}
!10026 = !DILocalVariable(name: "node", arg: 1, scope: !10024, file: !1201, line: 274, type: !1373)
!10027 = !DILocation(line: 0, scope: !10024)
!10028 = !DILocation(line: 274, column: 1, scope: !10024)
!10029 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1201, file: !1201, line: 204, type: !10018, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10030)
!10030 = !{!10031}
!10031 = !DILocalVariable(name: "node", arg: 1, scope: !10029, file: !1201, line: 204, type: !1373)
!10032 = !DILocation(line: 0, scope: !10029)
!10033 = !DILocation(line: 206, column: 15, scope: !10029)
!10034 = !DILocation(line: 206, column: 2, scope: !10029)
!10035 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1294, file: !1294, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10036)
!10036 = !{!10037, !10038, !10039}
!10037 = !DILocalVariable(name: "pin", arg: 1, scope: !10035, file: !1294, line: 342, type: !103)
!10038 = !DILocalVariable(name: "line", scope: !10035, file: !1294, line: 344, type: !121)
!10039 = !DILocalVariable(name: "port", scope: !10035, file: !1294, line: 345, type: !103)
!10040 = !DILocation(line: 0, scope: !10035)
!10041 = !DILocation(line: 344, column: 18, scope: !10035)
!10042 = !{i32 983040, i32 0}
!10043 = !DILocation(line: 356, column: 9, scope: !10035)
!10044 = !DILocation(line: 370, column: 2, scope: !10035)
!10045 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1294, file: !1294, line: 37, type: !709, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10046)
!10046 = !{!10047, !10048, !10049}
!10047 = !DILocalVariable(name: "line", arg: 1, scope: !10045, file: !1294, line: 37, type: !103)
!10048 = !DILocalVariable(name: "arg", arg: 2, scope: !10045, file: !1294, line: 37, type: !102)
!10049 = !DILocalVariable(name: "data", scope: !10045, file: !1294, line: 39, type: !9840)
!10050 = !DILocation(line: 0, scope: !10045)
!10051 = !DILocation(line: 41, column: 29, scope: !10045)
!10052 = !DILocation(line: 41, column: 39, scope: !10045)
!10053 = !DILocation(line: 41, column: 44, scope: !10045)
!10054 = !DILocation(line: 41, column: 2, scope: !10045)
!10055 = !DILocation(line: 42, column: 1, scope: !10045)
!10056 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1294, file: !1294, line: 376, type: !10057, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10059)
!10057 = !DISubroutineType(types: !10058)
!10058 = !{!103, !103, !103}
!10059 = !{!10060, !10061, !10062, !10064, !10065}
!10060 = !DILocalVariable(name: "port", arg: 1, scope: !10056, file: !1294, line: 376, type: !103)
!10061 = !DILocalVariable(name: "pin", arg: 2, scope: !10056, file: !1294, line: 376, type: !103)
!10062 = !DILocalVariable(name: "clk", scope: !10056, file: !1294, line: 386, type: !10063)
!10063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1154)
!10064 = !DILocalVariable(name: "pclken", scope: !10056, file: !1294, line: 387, type: !1420)
!10065 = !DILocalVariable(name: "ret", scope: !10056, file: !1294, line: 396, type: !103)
!10066 = !DILocation(line: 0, scope: !10056)
!10067 = !DILocation(line: 387, column: 2, scope: !10056)
!10068 = !DILocation(line: 387, column: 22, scope: !10056)
!10069 = !DILocation(line: 399, column: 8, scope: !10056)
!10070 = !DILocation(line: 400, column: 10, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10056, file: !1294, line: 400, column: 6)
!10072 = !DILocation(line: 400, column: 6, scope: !10056)
!10073 = !DILocation(line: 405, column: 2, scope: !10056)
!10074 = !DILocation(line: 407, column: 2, scope: !10056)
!10075 = !DILocation(line: 408, column: 1, scope: !10056)
!10076 = distinct !DISubprogram(name: "clock_control_on", scope: !797, file: !797, line: 123, type: !1259, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10077)
!10077 = !{!10078, !10079, !10080}
!10078 = !DILocalVariable(name: "dev", arg: 1, scope: !10076, file: !797, line: 123, type: !1154)
!10079 = !DILocalVariable(name: "sys", arg: 2, scope: !10076, file: !797, line: 124, type: !889)
!10080 = !DILocalVariable(name: "api", scope: !10076, file: !797, line: 126, type: !1252)
!10081 = !DILocation(line: 0, scope: !10076)
!10082 = !DILocation(line: 127, column: 49, scope: !10076)
!10083 = !DILocation(line: 129, column: 14, scope: !10076)
!10084 = !DILocation(line: 129, column: 9, scope: !10076)
!10085 = !DILocation(line: 129, column: 2, scope: !10076)
!10086 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1294, file: !1294, line: 311, type: !8615, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10087)
!10087 = !{!10088, !10089, !10090}
!10088 = !DILocalVariable(name: "port", arg: 1, scope: !10086, file: !1294, line: 311, type: !103)
!10089 = !DILocalVariable(name: "pin", arg: 2, scope: !10086, file: !1294, line: 311, type: !103)
!10090 = !DILocalVariable(name: "line", scope: !10086, file: !1294, line: 313, type: !121)
!10091 = !DILocation(line: 0, scope: !10086)
!10092 = !DILocation(line: 313, column: 18, scope: !10086)
!10093 = !DILocation(line: 337, column: 2, scope: !10086)
!10094 = !DILocation(line: 340, column: 1, scope: !10086)
!10095 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1294, file: !1294, line: 295, type: !10096, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10098)
!10096 = !DISubroutineType(types: !10097)
!10097 = !{!121, !103}
!10098 = !{!10099}
!10099 = !DILocalVariable(name: "pin", arg: 1, scope: !10095, file: !1294, line: 295, type: !103)
!10100 = !DILocation(line: 0, scope: !10095)
!10101 = !DILocation(line: 307, column: 46, scope: !10095)
!10102 = !DILocation(line: 307, column: 27, scope: !10095)
!10103 = !DILocation(line: 307, column: 32, scope: !10095)
!10104 = !DILocation(line: 307, column: 14, scope: !10095)
!10105 = !DILocation(line: 307, column: 39, scope: !10095)
!10106 = !DILocation(line: 307, column: 2, scope: !10095)
!10107 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5825, file: !5825, line: 671, type: !10108, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10110)
!10108 = !DISubroutineType(types: !10109)
!10109 = !{null, !121, !121}
!10110 = !{!10111, !10112}
!10111 = !DILocalVariable(name: "Port", arg: 1, scope: !10107, file: !5825, line: 671, type: !121)
!10112 = !DILocalVariable(name: "Line", arg: 2, scope: !10107, file: !5825, line: 671, type: !121)
!10113 = !DILocation(line: 0, scope: !10107)
!10114 = !DILocation(line: 673, column: 3, scope: !10107)
!10115 = !DILocalVariable(name: "value", arg: 1, scope: !10116, file: !6824, line: 373, type: !121)
!10116 = distinct !DISubprogram(name: "__RBIT", scope: !6824, file: !6824, line: 373, type: !7831, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10117)
!10117 = !{!10115, !10118}
!10118 = !DILocalVariable(name: "result", scope: !10116, file: !6824, line: 375, type: !121)
!10119 = !DILocation(line: 0, scope: !10116, inlinedAt: !10120)
!10120 = distinct !DILocation(line: 673, column: 3, scope: !10107)
!10121 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10120)
!10122 = !{i64 3545891}
!10123 = !DILocalVariable(name: "value", arg: 1, scope: !10124, file: !6824, line: 403, type: !121)
!10124 = distinct !DISubprogram(name: "__CLZ", scope: !6824, file: !6824, line: 403, type: !10125, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10127)
!10125 = !DISubroutineType(types: !10126)
!10126 = !{!154, !121}
!10127 = !{!10123}
!10128 = !DILocation(line: 0, scope: !10124, inlinedAt: !10129)
!10129 = distinct !DILocation(line: 673, column: 3, scope: !10107)
!10130 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10129)
!10131 = !DILocation(line: 674, column: 1, scope: !10107)
!10132 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9889, file: !9889, line: 69, type: !10133, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10135)
!10133 = !DISubroutineType(types: !10134)
!10134 = !{null, !9892, !1154, !121}
!10135 = !{!10136, !10137, !10138, !10139, !10140}
!10136 = !DILocalVariable(name: "list", arg: 1, scope: !10132, file: !9889, line: 69, type: !9892)
!10137 = !DILocalVariable(name: "port", arg: 2, scope: !10132, file: !9889, line: 70, type: !1154)
!10138 = !DILocalVariable(name: "pins", arg: 3, scope: !10132, file: !9889, line: 71, type: !121)
!10139 = !DILocalVariable(name: "cb", scope: !10132, file: !9889, line: 73, type: !1196)
!10140 = !DILocalVariable(name: "tmp", scope: !10132, file: !9889, line: 73, type: !1196)
!10141 = !DILocation(line: 0, scope: !10132)
!10142 = !DILocation(line: 75, column: 2, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10132, file: !9889, line: 75, column: 2)
!10144 = !DILocation(line: 0, scope: !10143)
!10145 = !DILocation(line: 76, column: 11, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10147, file: !9889, line: 76, column: 7)
!10147 = distinct !DILexicalBlock(scope: !10148, file: !9889, line: 75, column: 57)
!10148 = distinct !DILexicalBlock(scope: !10143, file: !9889, line: 75, column: 2)
!10149 = !DILocation(line: 76, column: 20, scope: !10146)
!10150 = !DILocation(line: 76, column: 7, scope: !10147)
!10151 = !DILocation(line: 78, column: 8, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10146, file: !9889, line: 76, column: 28)
!10153 = !DILocation(line: 78, column: 4, scope: !10152)
!10154 = !DILocation(line: 79, column: 3, scope: !10152)
!10155 = !DILocation(line: 75, column: 2, scope: !10148)
!10156 = !DILocation(line: 81, column: 1, scope: !10132)
!10157 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5825, file: !5825, line: 710, type: !7831, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10158)
!10158 = !{!10159}
!10159 = !DILocalVariable(name: "Line", arg: 1, scope: !10157, file: !5825, line: 710, type: !121)
!10160 = !DILocation(line: 0, scope: !10157)
!10161 = !DILocation(line: 712, column: 21, scope: !10157)
!10162 = !DILocation(line: 0, scope: !10116, inlinedAt: !10163)
!10163 = distinct !DILocation(line: 712, column: 76, scope: !10157)
!10164 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10163)
!10165 = !DILocation(line: 0, scope: !10124, inlinedAt: !10166)
!10166 = distinct !DILocation(line: 712, column: 76, scope: !10157)
!10167 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10166)
!10168 = !DILocation(line: 712, column: 73, scope: !10157)
!10169 = !DILocation(line: 712, column: 3, scope: !10157)
!10170 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10171, file: !10171, line: 910, type: !10172, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10174)
!10171 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10172 = !DISubroutineType(types: !10173)
!10173 = !{null, !1227, !121}
!10174 = !{!10175, !10176}
!10175 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10170, file: !10171, line: 910, type: !1227)
!10176 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10170, file: !10171, line: 910, type: !121)
!10177 = !DILocation(line: 0, scope: !10170)
!10178 = !DILocation(line: 912, column: 3, scope: !10170)
!10179 = !DILocation(line: 913, column: 1, scope: !10170)
!10180 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10171, file: !10171, line: 823, type: !10181, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10183)
!10181 = !DISubroutineType(types: !10182)
!10182 = !{!121, !1227}
!10183 = !{!10184}
!10184 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10180, file: !10171, line: 823, type: !1227)
!10185 = !DILocation(line: 0, scope: !10180)
!10186 = !DILocation(line: 825, column: 21, scope: !10180)
!10187 = !DILocation(line: 825, column: 3, scope: !10180)
!10188 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10171, file: !10171, line: 812, type: !10172, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10189)
!10189 = !{!10190, !10191}
!10190 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10188, file: !10171, line: 812, type: !1227)
!10191 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10188, file: !10171, line: 812, type: !121)
!10192 = !DILocation(line: 0, scope: !10188)
!10193 = !DILocation(line: 814, column: 3, scope: !10188)
!10194 = !DILocation(line: 815, column: 1, scope: !10188)
!10195 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10171, file: !10171, line: 771, type: !10181, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10196)
!10196 = !{!10197}
!10197 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10195, file: !10171, line: 771, type: !1227)
!10198 = !DILocation(line: 0, scope: !10195)
!10199 = !DILocation(line: 773, column: 21, scope: !10195)
!10200 = !DILocation(line: 773, column: 3, scope: !10195)
!10201 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1294, file: !1294, line: 47, type: !10202, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10204)
!10202 = !DISubroutineType(types: !10203)
!10203 = !{!103, !1170, !2618}
!10204 = !{!10205, !10206}
!10205 = !DILocalVariable(name: "flags", arg: 1, scope: !10201, file: !1294, line: 47, type: !1170)
!10206 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10201, file: !1294, line: 47, type: !2618)
!10207 = !DILocation(line: 0, scope: !10201)
!10208 = !DILocation(line: 50, column: 13, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10201, file: !1294, line: 50, column: 6)
!10210 = !DILocation(line: 50, column: 28, scope: !10209)
!10211 = !DILocation(line: 50, column: 6, scope: !10201)
!10212 = !DILocation(line: 53, column: 11, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10209, file: !1294, line: 50, column: 34)
!10214 = !DILocation(line: 55, column: 14, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10213, file: !1294, line: 55, column: 7)
!10216 = !DILocation(line: 55, column: 35, scope: !10215)
!10217 = !DILocation(line: 55, column: 7, scope: !10213)
!10218 = !DILocation(line: 56, column: 14, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !1294, line: 56, column: 8)
!10220 = distinct !DILexicalBlock(scope: !10215, file: !1294, line: 55, column: 41)
!10221 = !DILocation(line: 56, column: 8, scope: !10220)
!10222 = !DILocation(line: 0, scope: !10215)
!10223 = !DILocation(line: 66, column: 14, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10213, file: !1294, line: 66, column: 7)
!10225 = !DILocation(line: 66, column: 30, scope: !10224)
!10226 = !DILocation(line: 66, column: 7, scope: !10213)
!10227 = !DILocation(line: 67, column: 12, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10224, file: !1294, line: 66, column: 36)
!10229 = !DILocation(line: 68, column: 3, scope: !10228)
!10230 = !DILocation(line: 68, column: 21, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10224, file: !1294, line: 68, column: 14)
!10232 = !DILocation(line: 68, column: 39, scope: !10231)
!10233 = !DILocation(line: 68, column: 14, scope: !10224)
!10234 = !DILocation(line: 69, column: 12, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10231, file: !1294, line: 68, column: 45)
!10236 = !DILocation(line: 70, column: 3, scope: !10235)
!10237 = !DILocation(line: 72, column: 21, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10209, file: !1294, line: 72, column: 14)
!10239 = !DILocation(line: 72, column: 35, scope: !10238)
!10240 = !DILocation(line: 72, column: 14, scope: !10209)
!10241 = !DILocation(line: 77, column: 14, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10243, file: !1294, line: 77, column: 7)
!10243 = distinct !DILexicalBlock(scope: !10238, file: !1294, line: 72, column: 41)
!10244 = !DILocation(line: 77, column: 30, scope: !10242)
!10245 = !DILocation(line: 77, column: 7, scope: !10243)
!10246 = !DILocation(line: 0, scope: !10209)
!10247 = !DILocation(line: 90, column: 1, scope: !10201)
!10248 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1294, file: !1294, line: 157, type: !10249, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10251)
!10249 = !DISubroutineType(types: !10250)
!10250 = !{null, !1154, !103, !103, !103}
!10251 = !{!10252, !10253, !10254, !10255, !10256, !10257, !10258, !10259, !10260, !10261, !10262}
!10252 = !DILocalVariable(name: "dev", arg: 1, scope: !10248, file: !1294, line: 157, type: !1154)
!10253 = !DILocalVariable(name: "pin", arg: 2, scope: !10248, file: !1294, line: 157, type: !103)
!10254 = !DILocalVariable(name: "conf", arg: 3, scope: !10248, file: !1294, line: 158, type: !103)
!10255 = !DILocalVariable(name: "func", arg: 4, scope: !10248, file: !1294, line: 158, type: !103)
!10256 = !DILocalVariable(name: "cfg", scope: !10248, file: !1294, line: 160, type: !9773)
!10257 = !DILocalVariable(name: "gpio", scope: !10248, file: !1294, line: 161, type: !1227)
!10258 = !DILocalVariable(name: "pin_ll", scope: !10248, file: !1294, line: 163, type: !103)
!10259 = !DILocalVariable(name: "mode", scope: !10248, file: !1294, line: 227, type: !32)
!10260 = !DILocalVariable(name: "otype", scope: !10248, file: !1294, line: 227, type: !32)
!10261 = !DILocalVariable(name: "ospeed", scope: !10248, file: !1294, line: 227, type: !32)
!10262 = !DILocalVariable(name: "pupd", scope: !10248, file: !1294, line: 227, type: !32)
!10263 = !DILocation(line: 0, scope: !10248)
!10264 = !DILocation(line: 160, column: 45, scope: !10248)
!10265 = !DILocation(line: 161, column: 44, scope: !10248)
!10266 = !DILocation(line: 163, column: 15, scope: !10248)
!10267 = !DILocation(line: 229, column: 14, scope: !10248)
!10268 = !DILocation(line: 246, column: 47, scope: !10248)
!10269 = !DILocation(line: 246, column: 2, scope: !10248)
!10270 = !DILocation(line: 248, column: 43, scope: !10248)
!10271 = !DILocation(line: 248, column: 2, scope: !10248)
!10272 = !DILocation(line: 250, column: 40, scope: !10248)
!10273 = !DILocation(line: 250, column: 2, scope: !10248)
!10274 = !DILocation(line: 252, column: 11, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10248, file: !1294, line: 252, column: 6)
!10276 = !DILocation(line: 252, column: 6, scope: !10248)
!10277 = !DILocation(line: 253, column: 11, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10279, file: !1294, line: 253, column: 7)
!10279 = distinct !DILexicalBlock(scope: !10275, file: !1294, line: 252, column: 36)
!10280 = !DILocation(line: 253, column: 7, scope: !10279)
!10281 = !DILocation(line: 254, column: 4, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10278, file: !1294, line: 253, column: 16)
!10283 = !DILocation(line: 255, column: 3, scope: !10282)
!10284 = !DILocation(line: 256, column: 4, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10278, file: !1294, line: 255, column: 10)
!10286 = !DILocation(line: 260, column: 40, scope: !10248)
!10287 = !DILocation(line: 260, column: 2, scope: !10248)
!10288 = !DILocation(line: 265, column: 1, scope: !10248)
!10289 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1294, file: !1294, line: 137, type: !10096, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10290)
!10290 = !{!10291, !10292}
!10291 = !DILocalVariable(name: "pin", arg: 1, scope: !10289, file: !1294, line: 137, type: !103)
!10292 = !DILocalVariable(name: "pinval", scope: !10289, file: !1294, line: 139, type: !121)
!10293 = !DILocation(line: 0, scope: !10289)
!10294 = !DILocation(line: 149, column: 13, scope: !10289)
!10295 = !DILocation(line: 151, column: 2, scope: !10289)
!10296 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10171, file: !10171, line: 342, type: !10297, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10299)
!10297 = !DISubroutineType(types: !10298)
!10298 = !{null, !1227, !121, !121}
!10299 = !{!10300, !10301, !10302}
!10300 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10296, file: !10171, line: 342, type: !1227)
!10301 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10296, file: !10171, line: 342, type: !121)
!10302 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10296, file: !10171, line: 342, type: !121)
!10303 = !DILocation(line: 0, scope: !10296)
!10304 = !DILocation(line: 344, column: 3, scope: !10296)
!10305 = !DILocation(line: 345, column: 1, scope: !10296)
!10306 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10171, file: !10171, line: 413, type: !10297, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10307)
!10307 = !{!10308, !10309, !10310}
!10308 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10306, file: !10171, line: 413, type: !1227)
!10309 = !DILocalVariable(name: "Pin", arg: 2, scope: !10306, file: !10171, line: 413, type: !121)
!10310 = !DILocalVariable(name: "Speed", arg: 3, scope: !10306, file: !10171, line: 413, type: !121)
!10311 = !DILocation(line: 0, scope: !10306)
!10312 = !DILocation(line: 415, column: 3, scope: !10306)
!10313 = !DILocation(line: 0, scope: !10116, inlinedAt: !10314)
!10314 = distinct !DILocation(line: 415, column: 3, scope: !10306)
!10315 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10314)
!10316 = !DILocation(line: 0, scope: !10124, inlinedAt: !10317)
!10317 = distinct !DILocation(line: 415, column: 3, scope: !10306)
!10318 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10317)
!10319 = !DILocation(line: 0, scope: !10116, inlinedAt: !10320)
!10320 = distinct !DILocation(line: 415, column: 3, scope: !10306)
!10321 = !DILocation(line: 0, scope: !10124, inlinedAt: !10322)
!10322 = distinct !DILocation(line: 415, column: 3, scope: !10306)
!10323 = !DILocation(line: 417, column: 1, scope: !10306)
!10324 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10171, file: !10171, line: 484, type: !10297, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10325)
!10325 = !{!10326, !10327, !10328}
!10326 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10324, file: !10171, line: 484, type: !1227)
!10327 = !DILocalVariable(name: "Pin", arg: 2, scope: !10324, file: !10171, line: 484, type: !121)
!10328 = !DILocalVariable(name: "Pull", arg: 3, scope: !10324, file: !10171, line: 484, type: !121)
!10329 = !DILocation(line: 0, scope: !10324)
!10330 = !DILocation(line: 486, column: 3, scope: !10324)
!10331 = !DILocation(line: 0, scope: !10116, inlinedAt: !10332)
!10332 = distinct !DILocation(line: 486, column: 3, scope: !10324)
!10333 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10332)
!10334 = !DILocation(line: 0, scope: !10124, inlinedAt: !10335)
!10335 = distinct !DILocation(line: 486, column: 3, scope: !10324)
!10336 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10335)
!10337 = !DILocation(line: 0, scope: !10116, inlinedAt: !10338)
!10338 = distinct !DILocation(line: 486, column: 3, scope: !10324)
!10339 = !DILocation(line: 0, scope: !10124, inlinedAt: !10340)
!10340 = distinct !DILocation(line: 486, column: 3, scope: !10324)
!10341 = !DILocation(line: 487, column: 1, scope: !10324)
!10342 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10171, file: !10171, line: 556, type: !10297, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10343)
!10343 = !{!10344, !10345, !10346}
!10344 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10342, file: !10171, line: 556, type: !1227)
!10345 = !DILocalVariable(name: "Pin", arg: 2, scope: !10342, file: !10171, line: 556, type: !121)
!10346 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10342, file: !10171, line: 556, type: !121)
!10347 = !DILocation(line: 0, scope: !10342)
!10348 = !DILocation(line: 558, column: 3, scope: !10342)
!10349 = !DILocation(line: 0, scope: !10116, inlinedAt: !10350)
!10350 = distinct !DILocation(line: 558, column: 3, scope: !10342)
!10351 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10350)
!10352 = !DILocation(line: 0, scope: !10124, inlinedAt: !10353)
!10353 = distinct !DILocation(line: 558, column: 3, scope: !10342)
!10354 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10353)
!10355 = !DILocation(line: 0, scope: !10116, inlinedAt: !10356)
!10356 = distinct !DILocation(line: 558, column: 3, scope: !10342)
!10357 = !DILocation(line: 0, scope: !10124, inlinedAt: !10358)
!10358 = distinct !DILocation(line: 558, column: 3, scope: !10342)
!10359 = !DILocation(line: 560, column: 1, scope: !10342)
!10360 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10171, file: !10171, line: 633, type: !10297, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10361)
!10361 = !{!10362, !10363, !10364}
!10362 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10360, file: !10171, line: 633, type: !1227)
!10363 = !DILocalVariable(name: "Pin", arg: 2, scope: !10360, file: !10171, line: 633, type: !121)
!10364 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10360, file: !10171, line: 633, type: !121)
!10365 = !DILocation(line: 0, scope: !10360)
!10366 = !DILocation(line: 635, column: 3, scope: !10360)
!10367 = !DILocation(line: 0, scope: !10116, inlinedAt: !10368)
!10368 = distinct !DILocation(line: 635, column: 3, scope: !10360)
!10369 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10368)
!10370 = !DILocation(line: 0, scope: !10124, inlinedAt: !10371)
!10371 = distinct !DILocation(line: 635, column: 3, scope: !10360)
!10372 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10371)
!10373 = !DILocation(line: 0, scope: !10116, inlinedAt: !10374)
!10374 = distinct !DILocation(line: 635, column: 3, scope: !10360)
!10375 = !DILocation(line: 0, scope: !10124, inlinedAt: !10376)
!10376 = distinct !DILocation(line: 635, column: 3, scope: !10360)
!10377 = !DILocation(line: 637, column: 1, scope: !10360)
!10378 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10171, file: !10171, line: 273, type: !10297, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10379)
!10379 = !{!10380, !10381, !10382}
!10380 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10378, file: !10171, line: 273, type: !1227)
!10381 = !DILocalVariable(name: "Pin", arg: 2, scope: !10378, file: !10171, line: 273, type: !121)
!10382 = !DILocalVariable(name: "Mode", arg: 3, scope: !10378, file: !10171, line: 273, type: !121)
!10383 = !DILocation(line: 0, scope: !10378)
!10384 = !DILocation(line: 275, column: 3, scope: !10378)
!10385 = !DILocation(line: 0, scope: !10116, inlinedAt: !10386)
!10386 = distinct !DILocation(line: 275, column: 3, scope: !10378)
!10387 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10386)
!10388 = !DILocation(line: 0, scope: !10124, inlinedAt: !10389)
!10389 = distinct !DILocation(line: 275, column: 3, scope: !10378)
!10390 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10389)
!10391 = !DILocation(line: 0, scope: !10116, inlinedAt: !10392)
!10392 = distinct !DILocation(line: 275, column: 3, scope: !10378)
!10393 = !DILocation(line: 0, scope: !10124, inlinedAt: !10394)
!10394 = distinct !DILocation(line: 275, column: 3, scope: !10378)
!10395 = !DILocation(line: 276, column: 1, scope: !10378)
!10396 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1294, file: !1294, line: 698, type: !1307, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10397)
!10397 = !{!10398, !10399, !10400}
!10398 = !DILocalVariable(name: "dev", arg: 1, scope: !10396, file: !1294, line: 698, type: !1154)
!10399 = !DILocalVariable(name: "data", scope: !10396, file: !1294, line: 700, type: !9840)
!10400 = !DILocalVariable(name: "ret", scope: !10396, file: !1294, line: 701, type: !103)
!10401 = !DILocation(line: 0, scope: !10396)
!10402 = !DILocation(line: 700, column: 38, scope: !10396)
!10403 = !DILocation(line: 703, column: 8, scope: !10396)
!10404 = !DILocation(line: 703, column: 12, scope: !10396)
!10405 = !DILocation(line: 705, column: 7, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10396, file: !1294, line: 705, column: 6)
!10407 = !DILocation(line: 705, column: 6, scope: !10396)
!10408 = !DILocation(line: 722, column: 8, scope: !10396)
!10409 = !DILocation(line: 723, column: 10, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10396, file: !1294, line: 723, column: 6)
!10411 = !DILocation(line: 723, column: 6, scope: !10396)
!10412 = !DILocation(line: 731, column: 1, scope: !10396)
!10413 = distinct !DISubprogram(name: "device_is_ready", scope: !6665, file: !6665, line: 47, type: !10414, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10416)
!10414 = !DISubroutineType(types: !10415)
!10415 = !{!157, !1154}
!10416 = !{!10417}
!10417 = !DILocalVariable(name: "dev", arg: 1, scope: !10413, file: !6665, line: 47, type: !1154)
!10418 = !DILocation(line: 0, scope: !10413)
!10419 = !DILocation(line: 55, column: 2, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10413, file: !6665, line: 55, column: 2)
!10421 = !{i64 2155034865}
!10422 = !DILocation(line: 56, column: 9, scope: !10413)
!10423 = !DILocation(line: 56, column: 2, scope: !10413)
!10424 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1294, file: !1294, line: 270, type: !10425, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10427)
!10425 = !DISubroutineType(types: !10426)
!10426 = !{!103, !1154, !157}
!10427 = !{!10428, !10429, !10430, !10431, !10432}
!10428 = !DILocalVariable(name: "dev", arg: 1, scope: !10424, file: !1294, line: 270, type: !1154)
!10429 = !DILocalVariable(name: "on", arg: 2, scope: !10424, file: !1294, line: 270, type: !157)
!10430 = !DILocalVariable(name: "cfg", scope: !10424, file: !1294, line: 272, type: !9773)
!10431 = !DILocalVariable(name: "ret", scope: !10424, file: !1294, line: 273, type: !103)
!10432 = !DILocalVariable(name: "clk", scope: !10424, file: !1294, line: 278, type: !10063)
!10433 = !DILocation(line: 0, scope: !10424)
!10434 = !DILocation(line: 272, column: 45, scope: !10424)
!10435 = !DILocation(line: 282, column: 38, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10437, file: !1294, line: 280, column: 10)
!10437 = distinct !DILexicalBlock(scope: !10424, file: !1294, line: 280, column: 6)
!10438 = !DILocation(line: 282, column: 6, scope: !10436)
!10439 = !DILocation(line: 281, column: 9, scope: !10436)
!10440 = !DILocation(line: 293, column: 1, scope: !10424)
!10441 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !10414, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10442)
!10442 = !{!10443}
!10443 = !DILocalVariable(name: "dev", arg: 1, scope: !10441, file: !141, line: 730, type: !1154)
!10444 = !DILocation(line: 0, scope: !10441)
!10445 = !DILocation(line: 732, column: 9, scope: !10441)
!10446 = !DILocation(line: 732, column: 2, scope: !10441)
!10447 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1294, file: !1294, line: 496, type: !10448, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10450)
!10448 = !DISubroutineType(types: !10449)
!10449 = !{!103, !1154, !103, !103, !103}
!10450 = !{!10451, !10452, !10453, !10454, !10455, !10456}
!10451 = !DILocalVariable(name: "dev", arg: 1, scope: !10447, file: !1294, line: 496, type: !1154)
!10452 = !DILocalVariable(name: "pin", arg: 2, scope: !10447, file: !1294, line: 496, type: !103)
!10453 = !DILocalVariable(name: "conf", arg: 3, scope: !10447, file: !1294, line: 496, type: !103)
!10454 = !DILocalVariable(name: "func", arg: 4, scope: !10447, file: !1294, line: 496, type: !103)
!10455 = !DILocalVariable(name: "ret", scope: !10447, file: !1294, line: 498, type: !103)
!10456 = !DILocalVariable(name: "gpio_out", scope: !10457, file: !1294, line: 508, type: !121)
!10457 = distinct !DILexicalBlock(scope: !10458, file: !1294, line: 507, column: 27)
!10458 = distinct !DILexicalBlock(scope: !10447, file: !1294, line: 507, column: 6)
!10459 = !DILocation(line: 0, scope: !10447)
!10460 = !DILocation(line: 505, column: 2, scope: !10447)
!10461 = !DILocation(line: 507, column: 11, scope: !10458)
!10462 = !DILocation(line: 507, column: 6, scope: !10447)
!10463 = !DILocation(line: 508, column: 28, scope: !10457)
!10464 = !DILocation(line: 0, scope: !10457)
!10465 = !DILocation(line: 510, column: 16, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10457, file: !1294, line: 510, column: 7)
!10467 = !DILocation(line: 0, scope: !10466)
!10468 = !DILocation(line: 510, column: 7, scope: !10457)
!10469 = !DILocation(line: 511, column: 4, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10466, file: !1294, line: 510, column: 32)
!10471 = !DILocation(line: 512, column: 3, scope: !10470)
!10472 = !DILocation(line: 513, column: 4, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10474, file: !1294, line: 512, column: 39)
!10474 = distinct !DILexicalBlock(scope: !10466, file: !1294, line: 512, column: 14)
!10475 = !DILocation(line: 514, column: 3, scope: !10473)
!10476 = !DILocation(line: 518, column: 1, scope: !10447)
!10477 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1611, file: !1611, line: 526, type: !1482, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10478)
!10478 = !{!10479, !10480, !10481}
!10479 = !DILocalVariable(name: "dev", arg: 1, scope: !10477, file: !1611, line: 526, type: !1484)
!10480 = !DILocalVariable(name: "c", arg: 2, scope: !10477, file: !1611, line: 526, type: !224)
!10481 = !DILocalVariable(name: "config", scope: !10477, file: !1611, line: 528, type: !10482)
!10482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!10483 = !DILocation(line: 0, scope: !10477)
!10484 = !DILocation(line: 528, column: 48, scope: !10477)
!10485 = !DILocation(line: 531, column: 40, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10477, file: !1611, line: 531, column: 6)
!10487 = !DILocation(line: 531, column: 6, scope: !10486)
!10488 = !DILocation(line: 531, column: 6, scope: !10477)
!10489 = !DILocation(line: 532, column: 34, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10486, file: !1611, line: 531, column: 48)
!10491 = !DILocation(line: 532, column: 3, scope: !10490)
!10492 = !DILocation(line: 533, column: 2, scope: !10490)
!10493 = !DILocation(line: 539, column: 42, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10477, file: !1611, line: 539, column: 6)
!10495 = !DILocation(line: 539, column: 7, scope: !10494)
!10496 = !DILocation(line: 539, column: 6, scope: !10477)
!10497 = !DILocation(line: 543, column: 52, scope: !10477)
!10498 = !DILocation(line: 543, column: 22, scope: !10477)
!10499 = !DILocation(line: 543, column: 5, scope: !10477)
!10500 = !DILocation(line: 545, column: 2, scope: !10477)
!10501 = !DILocation(line: 546, column: 1, scope: !10477)
!10502 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1611, file: !1611, line: 548, type: !1501, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10503)
!10503 = !{!10504, !10505, !10506, !10507}
!10504 = !DILocalVariable(name: "dev", arg: 1, scope: !10502, file: !1611, line: 548, type: !1484)
!10505 = !DILocalVariable(name: "c", arg: 2, scope: !10502, file: !1611, line: 549, type: !155)
!10506 = !DILocalVariable(name: "config", scope: !10502, file: !1611, line: 551, type: !10482)
!10507 = !DILocalVariable(name: "key", scope: !10502, file: !1611, line: 555, type: !32)
!10508 = !DILocation(line: 0, scope: !10502)
!10509 = !DILocation(line: 551, column: 48, scope: !10502)
!10510 = !DILocation(line: 562, column: 2, scope: !10502)
!10511 = !DILocation(line: 563, column: 41, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10513, file: !1611, line: 563, column: 7)
!10513 = distinct !DILexicalBlock(scope: !10502, file: !1611, line: 562, column: 12)
!10514 = !DILocation(line: 563, column: 7, scope: !10512)
!10515 = !DILocation(line: 563, column: 7, scope: !10513)
!10516 = !DILocation(line: 55, column: 2, scope: !10517, inlinedAt: !10521)
!10517 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5804, file: !5804, line: 42, type: !5805, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10518)
!10518 = !{!10519, !10520}
!10519 = !DILocalVariable(name: "key", scope: !10517, file: !5804, line: 44, type: !32)
!10520 = !DILocalVariable(name: "tmp", scope: !10517, file: !5804, line: 53, type: !32)
!10521 = distinct !DILocation(line: 564, column: 10, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10512, file: !1611, line: 563, column: 49)
!10523 = !{i64 2271562}
!10524 = !DILocation(line: 0, scope: !10517, inlinedAt: !10521)
!10525 = !DILocation(line: 565, column: 42, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10522, file: !1611, line: 565, column: 8)
!10527 = !DILocation(line: 565, column: 8, scope: !10526)
!10528 = !DILocation(line: 565, column: 8, scope: !10522)
!10529 = !DILocalVariable(name: "key", arg: 1, scope: !10530, file: !5804, line: 84, type: !32)
!10530 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5804, file: !5804, line: 84, type: !5815, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10531)
!10531 = !{!10529}
!10532 = !DILocation(line: 0, scope: !10530, inlinedAt: !10533)
!10533 = distinct !DILocation(line: 568, column: 4, scope: !10522)
!10534 = !DILocation(line: 95, column: 2, scope: !10530, inlinedAt: !10533)
!10535 = !{i64 2272379}
!10536 = !DILocation(line: 569, column: 3, scope: !10522)
!10537 = distinct !{!10537, !10510, !10538}
!10538 = !DILocation(line: 570, column: 2, scope: !10502)
!10539 = !DILocation(line: 592, column: 33, scope: !10502)
!10540 = !DILocation(line: 592, column: 2, scope: !10502)
!10541 = !DILocation(line: 0, scope: !10530, inlinedAt: !10542)
!10542 = distinct !DILocation(line: 593, column: 2, scope: !10502)
!10543 = !DILocation(line: 95, column: 2, scope: !10530, inlinedAt: !10542)
!10544 = !DILocation(line: 594, column: 1, scope: !10502)
!10545 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1611, file: !1611, line: 596, type: !1505, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10546)
!10546 = !{!10547, !10548, !10549}
!10547 = !DILocalVariable(name: "dev", arg: 1, scope: !10545, file: !1611, line: 596, type: !1484)
!10548 = !DILocalVariable(name: "config", scope: !10545, file: !1611, line: 598, type: !10482)
!10549 = !DILocalVariable(name: "err", scope: !10545, file: !1611, line: 599, type: !121)
!10550 = !DILocation(line: 0, scope: !10545)
!10551 = !DILocation(line: 598, column: 48, scope: !10545)
!10552 = !DILocation(line: 606, column: 40, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10545, file: !1611, line: 606, column: 6)
!10554 = !DILocation(line: 606, column: 6, scope: !10553)
!10555 = !DILocation(line: 606, column: 6, scope: !10545)
!10556 = !DILocation(line: 610, column: 39, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10545, file: !1611, line: 610, column: 6)
!10558 = !DILocation(line: 610, column: 6, scope: !10557)
!10559 = !DILocation(line: 610, column: 6, scope: !10545)
!10560 = !DILocation(line: 614, column: 39, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10545, file: !1611, line: 614, column: 6)
!10562 = !DILocation(line: 614, column: 6, scope: !10561)
!10563 = !DILocation(line: 614, column: 6, scope: !10545)
!10564 = !DILocation(line: 619, column: 40, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10545, file: !1611, line: 619, column: 6)
!10566 = !DILocation(line: 619, column: 6, scope: !10565)
!10567 = !DILocation(line: 619, column: 6, scope: !10545)
!10568 = !DILocation(line: 623, column: 10, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10545, file: !1611, line: 623, column: 6)
!10570 = !DILocation(line: 623, column: 6, scope: !10545)
!10571 = !DILocation(line: 624, column: 34, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10569, file: !1611, line: 623, column: 24)
!10573 = !DILocation(line: 624, column: 3, scope: !10572)
!10574 = !DILocation(line: 625, column: 2, scope: !10572)
!10575 = !DILocation(line: 632, column: 10, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10545, file: !1611, line: 632, column: 6)
!10577 = !DILocation(line: 632, column: 6, scope: !10545)
!10578 = !DILocation(line: 633, column: 34, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10576, file: !1611, line: 632, column: 32)
!10580 = !DILocation(line: 633, column: 3, scope: !10579)
!10581 = !DILocation(line: 634, column: 2, scope: !10579)
!10582 = !DILocation(line: 636, column: 10, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10545, file: !1611, line: 636, column: 6)
!10584 = !DILocation(line: 636, column: 6, scope: !10545)
!10585 = !DILocation(line: 637, column: 33, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10583, file: !1611, line: 636, column: 31)
!10587 = !DILocation(line: 637, column: 3, scope: !10586)
!10588 = !DILocation(line: 638, column: 2, scope: !10586)
!10589 = !DILocation(line: 640, column: 10, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10545, file: !1611, line: 640, column: 6)
!10591 = !DILocation(line: 640, column: 6, scope: !10545)
!10592 = !DILocation(line: 641, column: 33, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10590, file: !1611, line: 640, column: 32)
!10594 = !DILocation(line: 641, column: 3, scope: !10593)
!10595 = !DILocation(line: 642, column: 2, scope: !10593)
!10596 = !DILocation(line: 646, column: 32, scope: !10545)
!10597 = !DILocation(line: 646, column: 2, scope: !10545)
!10598 = !DILocation(line: 648, column: 2, scope: !10545)
!10599 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1611, file: !1611, line: 419, type: !1509, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10600)
!10600 = !{!10601, !10602, !10603, !10604, !10606, !10607, !10608, !10609}
!10601 = !DILocalVariable(name: "dev", arg: 1, scope: !10599, file: !1611, line: 419, type: !1484)
!10602 = !DILocalVariable(name: "cfg", arg: 2, scope: !10599, file: !1611, line: 420, type: !1511)
!10603 = !DILocalVariable(name: "config", scope: !10599, file: !1611, line: 422, type: !10482)
!10604 = !DILocalVariable(name: "data", scope: !10599, file: !1611, line: 423, type: !10605)
!10605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!10606 = !DILocalVariable(name: "parity", scope: !10599, file: !1611, line: 424, type: !7092)
!10607 = !DILocalVariable(name: "stopbits", scope: !10599, file: !1611, line: 425, type: !7092)
!10608 = !DILocalVariable(name: "databits", scope: !10599, file: !1611, line: 426, type: !7092)
!10609 = !DILocalVariable(name: "flowctrl", scope: !10599, file: !1611, line: 428, type: !7092)
!10610 = !DILocation(line: 0, scope: !10599)
!10611 = !DILocation(line: 422, column: 48, scope: !10599)
!10612 = !DILocation(line: 423, column: 38, scope: !10599)
!10613 = !DILocation(line: 424, column: 56, scope: !10599)
!10614 = !DILocation(line: 424, column: 51, scope: !10599)
!10615 = !DILocation(line: 424, column: 26, scope: !10599)
!10616 = !DILocation(line: 425, column: 60, scope: !10599)
!10617 = !DILocation(line: 425, column: 55, scope: !10599)
!10618 = !DILocation(line: 425, column: 28, scope: !10599)
!10619 = !DILocation(line: 426, column: 60, scope: !10599)
!10620 = !DILocation(line: 426, column: 55, scope: !10599)
!10621 = !DILocation(line: 426, column: 28, scope: !10599)
!10622 = !DILocation(line: 428, column: 58, scope: !10599)
!10623 = !DILocation(line: 428, column: 53, scope: !10599)
!10624 = !DILocation(line: 428, column: 28, scope: !10599)
!10625 = !DILocation(line: 431, column: 44, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10599, file: !1611, line: 431, column: 6)
!10627 = !DILocation(line: 438, column: 22, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10599, file: !1611, line: 437, column: 6)
!10629 = !DILocation(line: 437, column: 6, scope: !10599)
!10630 = !DILocation(line: 448, column: 6, scope: !10599)
!10631 = !DILocation(line: 465, column: 47, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10599, file: !1611, line: 465, column: 6)
!10633 = !DILocation(line: 475, column: 21, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10599, file: !1611, line: 475, column: 6)
!10635 = !DILocation(line: 475, column: 6, scope: !10599)
!10636 = !DILocation(line: 476, column: 8, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10638, file: !1611, line: 476, column: 7)
!10638 = distinct !DILexicalBlock(scope: !10634, file: !1611, line: 475, column: 49)
!10639 = !DILocation(line: 477, column: 34, scope: !10637)
!10640 = !DILocation(line: 476, column: 7, scope: !10638)
!10641 = !DILocation(line: 482, column: 27, scope: !10599)
!10642 = !DILocation(line: 482, column: 2, scope: !10599)
!10643 = !DILocation(line: 484, column: 16, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10599, file: !1611, line: 484, column: 6)
!10645 = !DILocation(line: 484, column: 13, scope: !10644)
!10646 = !DILocation(line: 484, column: 6, scope: !10599)
!10647 = !DILocation(line: 485, column: 3, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10644, file: !1611, line: 484, column: 44)
!10649 = !DILocation(line: 486, column: 2, scope: !10648)
!10650 = !DILocation(line: 488, column: 18, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10599, file: !1611, line: 488, column: 6)
!10652 = !DILocation(line: 488, column: 15, scope: !10651)
!10653 = !DILocation(line: 488, column: 6, scope: !10599)
!10654 = !DILocation(line: 489, column: 3, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10651, file: !1611, line: 488, column: 48)
!10656 = !DILocation(line: 490, column: 2, scope: !10655)
!10657 = !DILocation(line: 492, column: 18, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10599, file: !1611, line: 492, column: 6)
!10659 = !DILocation(line: 492, column: 15, scope: !10658)
!10660 = !DILocation(line: 492, column: 6, scope: !10599)
!10661 = !DILocation(line: 493, column: 3, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10658, file: !1611, line: 492, column: 48)
!10663 = !DILocation(line: 494, column: 2, scope: !10662)
!10664 = !DILocation(line: 496, column: 18, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10599, file: !1611, line: 496, column: 6)
!10666 = !DILocation(line: 496, column: 15, scope: !10665)
!10667 = !DILocation(line: 496, column: 6, scope: !10599)
!10668 = !DILocation(line: 497, column: 3, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10665, file: !1611, line: 496, column: 46)
!10670 = !DILocation(line: 498, column: 2, scope: !10669)
!10671 = !DILocation(line: 500, column: 11, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10599, file: !1611, line: 500, column: 6)
!10673 = !DILocation(line: 500, column: 29, scope: !10672)
!10674 = !DILocation(line: 500, column: 20, scope: !10672)
!10675 = !DILocation(line: 500, column: 6, scope: !10599)
!10676 = !DILocation(line: 501, column: 3, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10672, file: !1611, line: 500, column: 40)
!10678 = !DILocation(line: 502, column: 26, scope: !10677)
!10679 = !DILocation(line: 502, column: 19, scope: !10677)
!10680 = !DILocation(line: 503, column: 2, scope: !10677)
!10681 = !DILocation(line: 505, column: 26, scope: !10599)
!10682 = !DILocation(line: 505, column: 2, scope: !10599)
!10683 = !DILocation(line: 506, column: 2, scope: !10599)
!10684 = !DILocation(line: 507, column: 1, scope: !10599)
!10685 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1611, file: !1611, line: 509, type: !1522, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10686)
!10686 = !{!10687, !10688, !10689}
!10687 = !DILocalVariable(name: "dev", arg: 1, scope: !10685, file: !1611, line: 509, type: !1484)
!10688 = !DILocalVariable(name: "cfg", arg: 2, scope: !10685, file: !1611, line: 510, type: !1524)
!10689 = !DILocalVariable(name: "data", scope: !10685, file: !1611, line: 512, type: !10605)
!10690 = !DILocation(line: 0, scope: !10685)
!10691 = !DILocation(line: 512, column: 38, scope: !10685)
!10692 = !DILocation(line: 514, column: 24, scope: !10685)
!10693 = !DILocation(line: 514, column: 7, scope: !10685)
!10694 = !DILocation(line: 514, column: 16, scope: !10685)
!10695 = !DILocation(line: 515, column: 41, scope: !10685)
!10696 = !{i32 0, i32 1537}
!10697 = !DILocation(line: 515, column: 16, scope: !10685)
!10698 = !DILocation(line: 515, column: 7, scope: !10685)
!10699 = !DILocation(line: 515, column: 14, scope: !10685)
!10700 = !DILocation(line: 517, column: 3, scope: !10685)
!10701 = !{i32 0, i32 12289}
!10702 = !DILocation(line: 516, column: 19, scope: !10685)
!10703 = !DILocation(line: 516, column: 7, scope: !10685)
!10704 = !DILocation(line: 516, column: 17, scope: !10685)
!10705 = !DILocation(line: 519, column: 3, scope: !10685)
!10706 = !DILocation(line: 519, column: 33, scope: !10685)
!10707 = !DILocation(line: 518, column: 19, scope: !10685)
!10708 = !DILocation(line: 518, column: 7, scope: !10685)
!10709 = !DILocation(line: 518, column: 17, scope: !10685)
!10710 = !DILocation(line: 521, column: 3, scope: !10685)
!10711 = !{i32 0, i32 769}
!10712 = !DILocation(line: 520, column: 19, scope: !10685)
!10713 = !DILocation(line: 520, column: 7, scope: !10685)
!10714 = !DILocation(line: 520, column: 17, scope: !10685)
!10715 = !DILocation(line: 522, column: 2, scope: !10685)
!10716 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1611, file: !1611, line: 661, type: !1527, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10717)
!10717 = !{!10718, !10719, !10720, !10721, !10722, !10723}
!10718 = !DILocalVariable(name: "dev", arg: 1, scope: !10716, file: !1611, line: 661, type: !1484)
!10719 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10716, file: !1611, line: 662, type: !255)
!10720 = !DILocalVariable(name: "size", arg: 3, scope: !10716, file: !1611, line: 663, type: !103)
!10721 = !DILocalVariable(name: "config", scope: !10716, file: !1611, line: 665, type: !10482)
!10722 = !DILocalVariable(name: "num_tx", scope: !10716, file: !1611, line: 666, type: !154)
!10723 = !DILocalVariable(name: "key", scope: !10716, file: !1611, line: 667, type: !32)
!10724 = !DILocation(line: 0, scope: !10716)
!10725 = !DILocation(line: 665, column: 48, scope: !10716)
!10726 = !DILocation(line: 669, column: 41, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10716, file: !1611, line: 669, column: 6)
!10728 = !DILocation(line: 669, column: 7, scope: !10727)
!10729 = !DILocation(line: 669, column: 6, scope: !10716)
!10730 = !DILocation(line: 55, column: 2, scope: !10517, inlinedAt: !10731)
!10731 = distinct !DILocation(line: 674, column: 8, scope: !10716)
!10732 = !DILocation(line: 0, scope: !10517, inlinedAt: !10731)
!10733 = !DILocation(line: 676, column: 24, scope: !10716)
!10734 = !DILocation(line: 676, column: 29, scope: !10716)
!10735 = !DILocation(line: 677, column: 43, scope: !10716)
!10736 = !DILocation(line: 677, column: 9, scope: !10716)
!10737 = !DILocation(line: 676, column: 2, scope: !10716)
!10738 = !DILocation(line: 681, column: 34, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10716, file: !1611, line: 677, column: 51)
!10740 = !DILocation(line: 681, column: 55, scope: !10739)
!10741 = !DILocation(line: 681, column: 41, scope: !10739)
!10742 = !DILocation(line: 681, column: 3, scope: !10739)
!10743 = !DILocation(line: 676, column: 17, scope: !10716)
!10744 = distinct !{!10744, !10737, !10745}
!10745 = !DILocation(line: 682, column: 2, scope: !10716)
!10746 = !DILocation(line: 0, scope: !10530, inlinedAt: !10747)
!10747 = distinct !DILocation(line: 684, column: 2, scope: !10716)
!10748 = !DILocation(line: 95, column: 2, scope: !10530, inlinedAt: !10747)
!10749 = !DILocation(line: 686, column: 2, scope: !10716)
!10750 = !DILocation(line: 687, column: 1, scope: !10716)
!10751 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1611, file: !1611, line: 689, type: !1531, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10752)
!10752 = !{!10753, !10754, !10755, !10756, !10757}
!10753 = !DILocalVariable(name: "dev", arg: 1, scope: !10751, file: !1611, line: 689, type: !1484)
!10754 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10751, file: !1611, line: 689, type: !261)
!10755 = !DILocalVariable(name: "size", arg: 3, scope: !10751, file: !1611, line: 690, type: !262)
!10756 = !DILocalVariable(name: "config", scope: !10751, file: !1611, line: 692, type: !10482)
!10757 = !DILocalVariable(name: "num_rx", scope: !10751, file: !1611, line: 693, type: !154)
!10758 = !DILocation(line: 0, scope: !10751)
!10759 = !DILocation(line: 692, column: 48, scope: !10751)
!10760 = !DILocation(line: 696, column: 44, scope: !10751)
!10761 = !DILocation(line: 695, column: 24, scope: !10751)
!10762 = !DILocation(line: 695, column: 29, scope: !10751)
!10763 = !DILocation(line: 696, column: 9, scope: !10751)
!10764 = !DILocation(line: 695, column: 2, scope: !10751)
!10765 = !DILocation(line: 700, column: 53, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10751, file: !1611, line: 696, column: 52)
!10767 = !DILocation(line: 700, column: 23, scope: !10766)
!10768 = !DILocation(line: 700, column: 17, scope: !10766)
!10769 = !DILocation(line: 700, column: 3, scope: !10766)
!10770 = !DILocation(line: 700, column: 21, scope: !10766)
!10771 = !DILocation(line: 703, column: 41, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10766, file: !1611, line: 703, column: 7)
!10773 = !DILocation(line: 703, column: 7, scope: !10772)
!10774 = !DILocation(line: 703, column: 7, scope: !10766)
!10775 = !DILocation(line: 704, column: 35, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10772, file: !1611, line: 703, column: 49)
!10777 = !DILocation(line: 704, column: 4, scope: !10776)
!10778 = !DILocation(line: 709, column: 3, scope: !10776)
!10779 = !DILocation(line: 695, column: 17, scope: !10751)
!10780 = distinct !{!10780, !10764, !10781}
!10781 = !DILocation(line: 710, column: 2, scope: !10751)
!10782 = !DILocation(line: 712, column: 2, scope: !10751)
!10783 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1611, file: !1611, line: 715, type: !1535, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10784)
!10784 = !{!10785, !10786}
!10785 = !DILocalVariable(name: "dev", arg: 1, scope: !10783, file: !1611, line: 715, type: !1484)
!10786 = !DILocalVariable(name: "config", scope: !10783, file: !1611, line: 717, type: !10482)
!10787 = !DILocation(line: 0, scope: !10783)
!10788 = !DILocation(line: 717, column: 48, scope: !10783)
!10789 = !DILocation(line: 729, column: 31, scope: !10783)
!10790 = !DILocation(line: 729, column: 2, scope: !10783)
!10791 = !DILocation(line: 734, column: 1, scope: !10783)
!10792 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1611, file: !1611, line: 736, type: !1535, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10793)
!10793 = !{!10794, !10795}
!10794 = !DILocalVariable(name: "dev", arg: 1, scope: !10792, file: !1611, line: 736, type: !1484)
!10795 = !DILocalVariable(name: "config", scope: !10792, file: !1611, line: 738, type: !10482)
!10796 = !DILocation(line: 0, scope: !10792)
!10797 = !DILocation(line: 738, column: 48, scope: !10792)
!10798 = !DILocation(line: 746, column: 32, scope: !10792)
!10799 = !DILocation(line: 746, column: 2, scope: !10792)
!10800 = !DILocation(line: 756, column: 1, scope: !10792)
!10801 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1611, file: !1611, line: 758, type: !1505, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10802)
!10802 = !{!10803, !10804}
!10803 = !DILocalVariable(name: "dev", arg: 1, scope: !10801, file: !1611, line: 758, type: !1484)
!10804 = !DILocalVariable(name: "config", scope: !10801, file: !1611, line: 760, type: !10482)
!10805 = !DILocation(line: 0, scope: !10801)
!10806 = !DILocation(line: 760, column: 48, scope: !10801)
!10807 = !DILocation(line: 762, column: 43, scope: !10801)
!10808 = !DILocation(line: 762, column: 9, scope: !10801)
!10809 = !DILocation(line: 762, column: 50, scope: !10801)
!10810 = !DILocation(line: 763, column: 35, scope: !10801)
!10811 = !DILocation(line: 763, column: 3, scope: !10801)
!10812 = !DILocation(line: 762, column: 2, scope: !10801)
!10813 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1611, file: !1611, line: 773, type: !1535, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10814)
!10814 = !{!10815, !10816}
!10815 = !DILocalVariable(name: "dev", arg: 1, scope: !10813, file: !1611, line: 773, type: !1484)
!10816 = !DILocalVariable(name: "config", scope: !10813, file: !1611, line: 775, type: !10482)
!10817 = !DILocation(line: 0, scope: !10813)
!10818 = !DILocation(line: 775, column: 48, scope: !10813)
!10819 = !DILocation(line: 777, column: 33, scope: !10813)
!10820 = !DILocation(line: 777, column: 2, scope: !10813)
!10821 = !DILocation(line: 778, column: 1, scope: !10813)
!10822 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1611, file: !1611, line: 780, type: !1535, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10823)
!10823 = !{!10824, !10825}
!10824 = !DILocalVariable(name: "dev", arg: 1, scope: !10822, file: !1611, line: 780, type: !1484)
!10825 = !DILocalVariable(name: "config", scope: !10822, file: !1611, line: 782, type: !10482)
!10826 = !DILocation(line: 0, scope: !10822)
!10827 = !DILocation(line: 782, column: 48, scope: !10822)
!10828 = !DILocation(line: 784, column: 34, scope: !10822)
!10829 = !DILocation(line: 784, column: 2, scope: !10822)
!10830 = !DILocation(line: 785, column: 1, scope: !10822)
!10831 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1611, file: !1611, line: 766, type: !1505, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10832)
!10832 = !{!10833, !10834}
!10833 = !DILocalVariable(name: "dev", arg: 1, scope: !10831, file: !1611, line: 766, type: !1484)
!10834 = !DILocalVariable(name: "config", scope: !10831, file: !1611, line: 768, type: !10482)
!10835 = !DILocation(line: 0, scope: !10831)
!10836 = !DILocation(line: 768, column: 48, scope: !10831)
!10837 = !DILocation(line: 770, column: 42, scope: !10831)
!10838 = !DILocation(line: 770, column: 9, scope: !10831)
!10839 = !DILocation(line: 770, column: 2, scope: !10831)
!10840 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1611, file: !1611, line: 787, type: !1505, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10841)
!10841 = !{!10842, !10843}
!10842 = !DILocalVariable(name: "dev", arg: 1, scope: !10840, file: !1611, line: 787, type: !1484)
!10843 = !DILocalVariable(name: "config", scope: !10840, file: !1611, line: 789, type: !10482)
!10844 = !DILocation(line: 0, scope: !10840)
!10845 = !DILocation(line: 789, column: 48, scope: !10840)
!10846 = !DILocation(line: 794, column: 44, scope: !10840)
!10847 = !DILocation(line: 794, column: 9, scope: !10840)
!10848 = !DILocation(line: 794, column: 2, scope: !10840)
!10849 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1611, file: !1611, line: 797, type: !1535, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10850)
!10850 = !{!10851, !10852}
!10851 = !DILocalVariable(name: "dev", arg: 1, scope: !10849, file: !1611, line: 797, type: !1484)
!10852 = !DILocalVariable(name: "config", scope: !10849, file: !1611, line: 799, type: !10482)
!10853 = !DILocation(line: 0, scope: !10849)
!10854 = !DILocation(line: 799, column: 48, scope: !10849)
!10855 = !DILocation(line: 802, column: 34, scope: !10849)
!10856 = !DILocation(line: 802, column: 2, scope: !10849)
!10857 = !DILocation(line: 805, column: 6, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10849, file: !1611, line: 805, column: 6)
!10859 = !DILocation(line: 806, column: 3, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10858, file: !1611, line: 805, column: 43)
!10861 = !DILocation(line: 810, column: 31, scope: !10849)
!10862 = !DILocation(line: 807, column: 2, scope: !10860)
!10863 = !DILocation(line: 810, column: 2, scope: !10849)
!10864 = !DILocation(line: 811, column: 1, scope: !10849)
!10865 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1611, file: !1611, line: 813, type: !1535, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10866)
!10866 = !{!10867, !10868}
!10867 = !DILocalVariable(name: "dev", arg: 1, scope: !10865, file: !1611, line: 813, type: !1484)
!10868 = !DILocalVariable(name: "config", scope: !10865, file: !1611, line: 815, type: !10482)
!10869 = !DILocation(line: 0, scope: !10865)
!10870 = !DILocation(line: 815, column: 48, scope: !10865)
!10871 = !DILocation(line: 818, column: 35, scope: !10865)
!10872 = !DILocation(line: 818, column: 2, scope: !10865)
!10873 = !DILocation(line: 821, column: 6, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10865, file: !1611, line: 821, column: 6)
!10875 = !DILocation(line: 822, column: 3, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10874, file: !1611, line: 821, column: 43)
!10877 = !DILocation(line: 826, column: 32, scope: !10865)
!10878 = !DILocation(line: 823, column: 2, scope: !10876)
!10879 = !DILocation(line: 826, column: 2, scope: !10865)
!10880 = !DILocation(line: 827, column: 1, scope: !10865)
!10881 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1611, file: !1611, line: 829, type: !1505, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10882)
!10882 = !{!10883, !10884}
!10883 = !DILocalVariable(name: "dev", arg: 1, scope: !10881, file: !1611, line: 829, type: !1484)
!10884 = !DILocalVariable(name: "config", scope: !10881, file: !1611, line: 831, type: !10482)
!10885 = !DILocation(line: 0, scope: !10881)
!10886 = !DILocation(line: 831, column: 48, scope: !10881)
!10887 = !DILocation(line: 833, column: 46, scope: !10881)
!10888 = !DILocation(line: 833, column: 11, scope: !10881)
!10889 = !DILocation(line: 833, column: 53, scope: !10881)
!10890 = !DILocation(line: 834, column: 38, scope: !10881)
!10891 = !DILocation(line: 834, column: 4, scope: !10881)
!10892 = !DILocation(line: 834, column: 46, scope: !10881)
!10893 = !DILocation(line: 835, column: 37, scope: !10881)
!10894 = !DILocation(line: 835, column: 4, scope: !10881)
!10895 = !DILocation(line: 835, column: 44, scope: !10881)
!10896 = !DILocation(line: 836, column: 36, scope: !10881)
!10897 = !DILocation(line: 836, column: 4, scope: !10881)
!10898 = !DILocation(line: 833, column: 2, scope: !10881)
!10899 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1611, file: !1611, line: 839, type: !1505, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10900)
!10900 = !{!10901}
!10901 = !DILocalVariable(name: "dev", arg: 1, scope: !10899, file: !1611, line: 839, type: !1484)
!10902 = !DILocation(line: 0, scope: !10899)
!10903 = !DILocation(line: 841, column: 2, scope: !10899)
!10904 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1611, file: !1611, line: 844, type: !1549, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10905)
!10905 = !{!10906, !10907, !10908, !10909}
!10906 = !DILocalVariable(name: "dev", arg: 1, scope: !10904, file: !1611, line: 844, type: !1484)
!10907 = !DILocalVariable(name: "cb", arg: 2, scope: !10904, file: !1611, line: 845, type: !1551)
!10908 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10904, file: !1611, line: 846, type: !102)
!10909 = !DILocalVariable(name: "data", scope: !10904, file: !1611, line: 848, type: !10605)
!10910 = !DILocation(line: 0, scope: !10904)
!10911 = !DILocation(line: 848, column: 38, scope: !10904)
!10912 = !DILocation(line: 850, column: 8, scope: !10904)
!10913 = !DILocation(line: 850, column: 16, scope: !10904)
!10914 = !DILocation(line: 851, column: 8, scope: !10904)
!10915 = !DILocation(line: 851, column: 18, scope: !10904)
!10916 = !DILocation(line: 852, column: 1, scope: !10904)
!10917 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10918, file: !10918, line: 1792, type: !10919, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10921)
!10918 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10919 = !DISubroutineType(types: !10920)
!10920 = !{!121, !1555}
!10921 = !{!10922}
!10922 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10917, file: !10918, line: 1792, type: !1555)
!10923 = !DILocation(line: 0, scope: !10917)
!10924 = !DILocation(line: 1794, column: 11, scope: !10917)
!10925 = !DILocation(line: 1794, column: 47, scope: !10917)
!10926 = !DILocation(line: 1794, column: 3, scope: !10917)
!10927 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10918, file: !10918, line: 2227, type: !10919, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10928)
!10928 = !{!10929}
!10929 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10927, file: !10918, line: 2227, type: !1555)
!10930 = !DILocation(line: 0, scope: !10927)
!10931 = !DILocation(line: 2229, column: 11, scope: !10927)
!10932 = !DILocation(line: 2229, column: 51, scope: !10927)
!10933 = !DILocation(line: 2229, column: 3, scope: !10927)
!10934 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10918, file: !10918, line: 1803, type: !10919, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10935)
!10935 = !{!10936}
!10936 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10934, file: !10918, line: 1803, type: !1555)
!10937 = !DILocation(line: 0, scope: !10934)
!10938 = !DILocation(line: 1805, column: 11, scope: !10934)
!10939 = !DILocation(line: 1805, column: 45, scope: !10934)
!10940 = !DILocation(line: 1805, column: 3, scope: !10934)
!10941 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10918, file: !10918, line: 2238, type: !10919, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10942)
!10942 = !{!10943}
!10943 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10941, file: !10918, line: 2238, type: !1555)
!10944 = !DILocation(line: 0, scope: !10941)
!10945 = !DILocation(line: 2240, column: 11, scope: !10941)
!10946 = !DILocation(line: 2240, column: 49, scope: !10941)
!10947 = !DILocation(line: 2240, column: 3, scope: !10941)
!10948 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10918, file: !10918, line: 2192, type: !10949, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10951)
!10949 = !DISubroutineType(types: !10950)
!10950 = !{null, !1555}
!10951 = !{!10952, !10953}
!10952 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10948, file: !10918, line: 2192, type: !1555)
!10953 = !DILocalVariable(name: "val", scope: !10954, file: !10918, line: 2194, type: !121)
!10954 = distinct !DILexicalBlock(scope: !10948, file: !10918, line: 2194, column: 3)
!10955 = !DILocation(line: 0, scope: !10948)
!10956 = !DILocation(line: 2194, column: 3, scope: !10954)
!10957 = !DILocalVariable(name: "addr", arg: 1, scope: !10958, file: !6824, line: 476, type: !1607)
!10958 = distinct !DISubprogram(name: "__LDREXW", scope: !6824, file: !6824, line: 476, type: !10959, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10961)
!10959 = !DISubroutineType(types: !10960)
!10960 = !{!121, !1607}
!10961 = !{!10957, !10962}
!10962 = !DILocalVariable(name: "result", scope: !10958, file: !6824, line: 478, type: !121)
!10963 = !DILocation(line: 0, scope: !10958, inlinedAt: !10964)
!10964 = distinct !DILocation(line: 2194, column: 3, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10954, file: !10918, line: 2194, column: 3)
!10966 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !10964)
!10967 = !{i64 3573498}
!10968 = !DILocation(line: 2194, column: 3, scope: !10965)
!10969 = !DILocation(line: 0, scope: !10954)
!10970 = !DILocalVariable(name: "value", arg: 1, scope: !10971, file: !6824, line: 527, type: !121)
!10971 = distinct !DISubprogram(name: "__STREXW", scope: !6824, file: !6824, line: 527, type: !10972, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10974)
!10972 = !DISubroutineType(types: !10973)
!10973 = !{!121, !121, !1607}
!10974 = !{!10970, !10975, !10976}
!10975 = !DILocalVariable(name: "addr", arg: 2, scope: !10971, file: !6824, line: 527, type: !1607)
!10976 = !DILocalVariable(name: "result", scope: !10971, file: !6824, line: 529, type: !121)
!10977 = !DILocation(line: 0, scope: !10971, inlinedAt: !10978)
!10978 = distinct !DILocation(line: 2194, column: 3, scope: !10954)
!10979 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !10978)
!10980 = !{i64 3574934}
!10981 = distinct !{!10981, !10956, !10956}
!10982 = !DILocation(line: 2195, column: 1, scope: !10948)
!10983 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10918, file: !10918, line: 2177, type: !10949, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10984)
!10984 = !{!10985}
!10985 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10983, file: !10918, line: 2177, type: !1555)
!10986 = !DILocation(line: 0, scope: !10983)
!10987 = !DILocation(line: 2179, column: 3, scope: !10983)
!10988 = !DILocation(line: 2180, column: 1, scope: !10983)
!10989 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10918, file: !10918, line: 2164, type: !10949, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10990)
!10990 = !{!10991, !10992}
!10991 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10989, file: !10918, line: 2164, type: !1555)
!10992 = !DILocalVariable(name: "val", scope: !10993, file: !10918, line: 2166, type: !121)
!10993 = distinct !DILexicalBlock(scope: !10989, file: !10918, line: 2166, column: 3)
!10994 = !DILocation(line: 0, scope: !10989)
!10995 = !DILocation(line: 2166, column: 3, scope: !10993)
!10996 = !DILocation(line: 0, scope: !10958, inlinedAt: !10997)
!10997 = distinct !DILocation(line: 2166, column: 3, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10993, file: !10918, line: 2166, column: 3)
!10999 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !10997)
!11000 = !DILocation(line: 2166, column: 3, scope: !10998)
!11001 = !DILocation(line: 0, scope: !10993)
!11002 = !DILocation(line: 0, scope: !10971, inlinedAt: !11003)
!11003 = distinct !DILocation(line: 2166, column: 3, scope: !10993)
!11004 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11003)
!11005 = distinct !{!11005, !10995, !10995}
!11006 = !DILocation(line: 2167, column: 1, scope: !10989)
!11007 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10918, file: !10918, line: 2096, type: !10949, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11008)
!11008 = !{!11009, !11010}
!11009 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11007, file: !10918, line: 2096, type: !1555)
!11010 = !DILocalVariable(name: "val", scope: !11011, file: !10918, line: 2098, type: !121)
!11011 = distinct !DILexicalBlock(scope: !11007, file: !10918, line: 2098, column: 3)
!11012 = !DILocation(line: 0, scope: !11007)
!11013 = !DILocation(line: 2098, column: 3, scope: !11011)
!11014 = !DILocation(line: 0, scope: !10958, inlinedAt: !11015)
!11015 = distinct !DILocation(line: 2098, column: 3, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11011, file: !10918, line: 2098, column: 3)
!11017 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11015)
!11018 = !DILocation(line: 2098, column: 3, scope: !11016)
!11019 = !DILocation(line: 0, scope: !11011)
!11020 = !DILocation(line: 0, scope: !10971, inlinedAt: !11021)
!11021 = distinct !DILocation(line: 2098, column: 3, scope: !11011)
!11022 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11021)
!11023 = distinct !{!11023, !11013, !11013}
!11024 = !DILocation(line: 2099, column: 1, scope: !11007)
!11025 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10918, file: !10918, line: 2081, type: !10949, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11026)
!11026 = !{!11027}
!11027 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11025, file: !10918, line: 2081, type: !1555)
!11028 = !DILocation(line: 0, scope: !11025)
!11029 = !DILocation(line: 2083, column: 3, scope: !11025)
!11030 = !DILocation(line: 2084, column: 1, scope: !11025)
!11031 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10918, file: !10918, line: 2068, type: !10949, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11032)
!11032 = !{!11033, !11034}
!11033 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11031, file: !10918, line: 2068, type: !1555)
!11034 = !DILocalVariable(name: "val", scope: !11035, file: !10918, line: 2070, type: !121)
!11035 = distinct !DILexicalBlock(scope: !11031, file: !10918, line: 2070, column: 3)
!11036 = !DILocation(line: 0, scope: !11031)
!11037 = !DILocation(line: 2070, column: 3, scope: !11035)
!11038 = !DILocation(line: 0, scope: !10958, inlinedAt: !11039)
!11039 = distinct !DILocation(line: 2070, column: 3, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11035, file: !10918, line: 2070, column: 3)
!11041 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11039)
!11042 = !DILocation(line: 2070, column: 3, scope: !11040)
!11043 = !DILocation(line: 0, scope: !11035)
!11044 = !DILocation(line: 0, scope: !10971, inlinedAt: !11045)
!11045 = distinct !DILocation(line: 2070, column: 3, scope: !11035)
!11046 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11045)
!11047 = distinct !{!11047, !11037, !11037}
!11048 = !DILocation(line: 2071, column: 1, scope: !11031)
!11049 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10918, file: !10918, line: 2131, type: !10949, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11050)
!11050 = !{!11051, !11052}
!11051 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11049, file: !10918, line: 2131, type: !1555)
!11052 = !DILocalVariable(name: "val", scope: !11053, file: !10918, line: 2133, type: !121)
!11053 = distinct !DILexicalBlock(scope: !11049, file: !10918, line: 2133, column: 3)
!11054 = !DILocation(line: 0, scope: !11049)
!11055 = !DILocation(line: 2133, column: 3, scope: !11053)
!11056 = !DILocation(line: 0, scope: !10958, inlinedAt: !11057)
!11057 = distinct !DILocation(line: 2133, column: 3, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11053, file: !10918, line: 2133, column: 3)
!11059 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11057)
!11060 = !DILocation(line: 2133, column: 3, scope: !11058)
!11061 = !DILocation(line: 0, scope: !11053)
!11062 = !DILocation(line: 0, scope: !10971, inlinedAt: !11063)
!11063 = distinct !DILocation(line: 2133, column: 3, scope: !11053)
!11064 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11063)
!11065 = distinct !{!11065, !11055, !11055}
!11066 = !DILocation(line: 2134, column: 1, scope: !11049)
!11067 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10918, file: !10918, line: 2035, type: !10949, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11068)
!11068 = !{!11069, !11070}
!11069 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11067, file: !10918, line: 2035, type: !1555)
!11070 = !DILocalVariable(name: "val", scope: !11071, file: !10918, line: 2037, type: !121)
!11071 = distinct !DILexicalBlock(scope: !11067, file: !10918, line: 2037, column: 3)
!11072 = !DILocation(line: 0, scope: !11067)
!11073 = !DILocation(line: 2037, column: 3, scope: !11071)
!11074 = !DILocation(line: 0, scope: !10958, inlinedAt: !11075)
!11075 = distinct !DILocation(line: 2037, column: 3, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11071, file: !10918, line: 2037, column: 3)
!11077 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11075)
!11078 = !DILocation(line: 2037, column: 3, scope: !11076)
!11079 = !DILocation(line: 0, scope: !11071)
!11080 = !DILocation(line: 0, scope: !10971, inlinedAt: !11081)
!11081 = distinct !DILocation(line: 2037, column: 3, scope: !11071)
!11082 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11081)
!11083 = distinct !{!11083, !11073, !11073}
!11084 = !DILocation(line: 2038, column: 1, scope: !11067)
!11085 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10918, file: !10918, line: 1814, type: !10919, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11086)
!11086 = !{!11087}
!11087 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11085, file: !10918, line: 1814, type: !1555)
!11088 = !DILocation(line: 0, scope: !11085)
!11089 = !DILocation(line: 1816, column: 11, scope: !11085)
!11090 = !DILocation(line: 1816, column: 46, scope: !11085)
!11091 = !DILocation(line: 1816, column: 3, scope: !11085)
!11092 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10918, file: !10918, line: 2142, type: !10949, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11093)
!11093 = !{!11094, !11095}
!11094 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11092, file: !10918, line: 2142, type: !1555)
!11095 = !DILocalVariable(name: "val", scope: !11096, file: !10918, line: 2144, type: !121)
!11096 = distinct !DILexicalBlock(scope: !11092, file: !10918, line: 2144, column: 3)
!11097 = !DILocation(line: 0, scope: !11092)
!11098 = !DILocation(line: 2144, column: 3, scope: !11096)
!11099 = !DILocation(line: 0, scope: !10958, inlinedAt: !11100)
!11100 = distinct !DILocation(line: 2144, column: 3, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11096, file: !10918, line: 2144, column: 3)
!11102 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11100)
!11103 = !DILocation(line: 2144, column: 3, scope: !11101)
!11104 = !DILocation(line: 0, scope: !11096)
!11105 = !DILocation(line: 0, scope: !10971, inlinedAt: !11106)
!11106 = distinct !DILocation(line: 2144, column: 3, scope: !11096)
!11107 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11106)
!11108 = distinct !{!11108, !11098, !11098}
!11109 = !DILocation(line: 2145, column: 1, scope: !11092)
!11110 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10918, file: !10918, line: 2046, type: !10949, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11111)
!11111 = !{!11112, !11113}
!11112 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11110, file: !10918, line: 2046, type: !1555)
!11113 = !DILocalVariable(name: "val", scope: !11114, file: !10918, line: 2048, type: !121)
!11114 = distinct !DILexicalBlock(scope: !11110, file: !10918, line: 2048, column: 3)
!11115 = !DILocation(line: 0, scope: !11110)
!11116 = !DILocation(line: 2048, column: 3, scope: !11114)
!11117 = !DILocation(line: 0, scope: !10958, inlinedAt: !11118)
!11118 = distinct !DILocation(line: 2048, column: 3, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11114, file: !10918, line: 2048, column: 3)
!11120 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11118)
!11121 = !DILocation(line: 2048, column: 3, scope: !11119)
!11122 = !DILocation(line: 0, scope: !11114)
!11123 = !DILocation(line: 0, scope: !10971, inlinedAt: !11124)
!11124 = distinct !DILocation(line: 2048, column: 3, scope: !11114)
!11125 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11124)
!11126 = distinct !{!11126, !11116, !11116}
!11127 = !DILocation(line: 2049, column: 1, scope: !11110)
!11128 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10918, file: !10918, line: 2403, type: !11129, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11131)
!11129 = !DISubroutineType(types: !11130)
!11130 = !{!154, !1555}
!11131 = !{!11132}
!11132 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11128, file: !10918, line: 2403, type: !1555)
!11133 = !DILocation(line: 0, scope: !11128)
!11134 = !DILocation(line: 2405, column: 20, scope: !11128)
!11135 = !DILocation(line: 2405, column: 10, scope: !11128)
!11136 = !DILocation(line: 2405, column: 3, scope: !11128)
!11137 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10918, file: !10918, line: 1770, type: !10919, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11138)
!11138 = !{!11139}
!11139 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11137, file: !10918, line: 1770, type: !1555)
!11140 = !DILocation(line: 0, scope: !11137)
!11141 = !DILocation(line: 1772, column: 11, scope: !11137)
!11142 = !DILocation(line: 1772, column: 46, scope: !11137)
!11143 = !DILocation(line: 1772, column: 3, scope: !11137)
!11144 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10918, file: !10918, line: 1934, type: !10949, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11145)
!11145 = !{!11146, !11147}
!11146 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11144, file: !10918, line: 1934, type: !1555)
!11147 = !DILocalVariable(name: "tmpreg", scope: !11144, file: !10918, line: 1936, type: !120)
!11148 = !DILocation(line: 0, scope: !11144)
!11149 = !DILocation(line: 1936, column: 3, scope: !11144)
!11150 = !DILocation(line: 1936, column: 17, scope: !11144)
!11151 = !DILocation(line: 1937, column: 20, scope: !11144)
!11152 = !DILocation(line: 1937, column: 10, scope: !11144)
!11153 = !DILocation(line: 1938, column: 10, scope: !11144)
!11154 = !DILocation(line: 1939, column: 20, scope: !11144)
!11155 = !DILocation(line: 1939, column: 10, scope: !11144)
!11156 = !DILocation(line: 1940, column: 10, scope: !11144)
!11157 = !DILocation(line: 1941, column: 1, scope: !11144)
!11158 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10918, file: !10918, line: 2426, type: !11159, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11161)
!11159 = !DISubroutineType(types: !11160)
!11160 = !{null, !1555, !154}
!11161 = !{!11162, !11163}
!11162 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11158, file: !10918, line: 2426, type: !1555)
!11163 = !DILocalVariable(name: "Value", arg: 2, scope: !11158, file: !10918, line: 2426, type: !154)
!11164 = !DILocation(line: 0, scope: !11158)
!11165 = !DILocation(line: 2428, column: 16, scope: !11158)
!11166 = !DILocation(line: 2428, column: 11, scope: !11158)
!11167 = !DILocation(line: 2428, column: 14, scope: !11158)
!11168 = !DILocation(line: 2429, column: 1, scope: !11158)
!11169 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1611, file: !1611, line: 205, type: !11170, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11172)
!11170 = !DISubroutineType(types: !11171)
!11171 = !{!121, !1484}
!11172 = !{!11173, !11174}
!11173 = !DILocalVariable(name: "dev", arg: 1, scope: !11169, file: !1611, line: 205, type: !1484)
!11174 = !DILocalVariable(name: "config", scope: !11169, file: !1611, line: 207, type: !10482)
!11175 = !DILocation(line: 0, scope: !11169)
!11176 = !DILocation(line: 207, column: 48, scope: !11169)
!11177 = !DILocation(line: 209, column: 36, scope: !11169)
!11178 = !DILocation(line: 209, column: 9, scope: !11169)
!11179 = !DILocation(line: 209, column: 2, scope: !11169)
!11180 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1611, file: !1611, line: 270, type: !11181, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11183)
!11181 = !DISubroutineType(types: !11182)
!11182 = !{!1450, !121}
!11183 = !{!11184}
!11184 = !DILocalVariable(name: "parity", arg: 1, scope: !11180, file: !1611, line: 270, type: !121)
!11185 = !DILocation(line: 0, scope: !11180)
!11186 = !DILocation(line: 272, column: 2, scope: !11180)
!11187 = !DILocation(line: 281, column: 1, scope: !11180)
!11188 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1611, file: !1611, line: 220, type: !11170, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11189)
!11189 = !{!11190, !11191}
!11190 = !DILocalVariable(name: "dev", arg: 1, scope: !11188, file: !1611, line: 220, type: !1484)
!11191 = !DILocalVariable(name: "config", scope: !11188, file: !1611, line: 222, type: !10482)
!11192 = !DILocation(line: 0, scope: !11188)
!11193 = !DILocation(line: 222, column: 48, scope: !11188)
!11194 = !DILocation(line: 224, column: 44, scope: !11188)
!11195 = !DILocation(line: 224, column: 9, scope: !11188)
!11196 = !DILocation(line: 224, column: 2, scope: !11188)
!11197 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1611, file: !1611, line: 304, type: !11198, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11200)
!11198 = !DISubroutineType(types: !11199)
!11199 = !{!1464, !121}
!11200 = !{!11201}
!11201 = !DILocalVariable(name: "sb", arg: 1, scope: !11197, file: !1611, line: 304, type: !121)
!11202 = !DILocation(line: 0, scope: !11197)
!11203 = !DILocation(line: 306, column: 2, scope: !11197)
!11204 = !DILocation(line: 0, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11197, file: !1611, line: 306, column: 14)
!11206 = !DILocation(line: 323, column: 1, scope: !11197)
!11207 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1611, file: !1611, line: 235, type: !11170, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11208)
!11208 = !{!11209, !11210}
!11209 = !DILocalVariable(name: "dev", arg: 1, scope: !11207, file: !1611, line: 235, type: !1484)
!11210 = !DILocalVariable(name: "config", scope: !11207, file: !1611, line: 237, type: !10482)
!11211 = !DILocation(line: 0, scope: !11207)
!11212 = !DILocation(line: 237, column: 48, scope: !11207)
!11213 = !DILocation(line: 239, column: 39, scope: !11207)
!11214 = !DILocation(line: 239, column: 9, scope: !11207)
!11215 = !DILocation(line: 239, column: 2, scope: !11207)
!11216 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1611, file: !1611, line: 355, type: !11217, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11219)
!11217 = !DISubroutineType(types: !11218)
!11218 = !{!1457, !121, !121}
!11219 = !{!11220, !11221}
!11220 = !DILocalVariable(name: "db", arg: 1, scope: !11216, file: !1611, line: 355, type: !121)
!11221 = !DILocalVariable(name: "p", arg: 2, scope: !11216, file: !1611, line: 356, type: !121)
!11222 = !DILocation(line: 0, scope: !11216)
!11223 = !DILocation(line: 358, column: 2, scope: !11216)
!11224 = !DILocation(line: 384, column: 1, scope: !11216)
!11225 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1611, file: !1611, line: 250, type: !11170, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11226)
!11226 = !{!11227, !11228}
!11227 = !DILocalVariable(name: "dev", arg: 1, scope: !11225, file: !1611, line: 250, type: !1484)
!11228 = !DILocalVariable(name: "config", scope: !11225, file: !1611, line: 252, type: !10482)
!11229 = !DILocation(line: 0, scope: !11225)
!11230 = !DILocation(line: 252, column: 48, scope: !11225)
!11231 = !DILocation(line: 254, column: 40, scope: !11225)
!11232 = !DILocation(line: 254, column: 9, scope: !11225)
!11233 = !DILocation(line: 254, column: 2, scope: !11225)
!11234 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1611, file: !1611, line: 409, type: !11235, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11237)
!11235 = !DISubroutineType(types: !11236)
!11236 = !{!1470, !121}
!11237 = !{!11238}
!11238 = !DILocalVariable(name: "fc", arg: 1, scope: !11234, file: !1611, line: 409, type: !121)
!11239 = !DILocation(line: 0, scope: !11234)
!11240 = !DILocation(line: 411, column: 9, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11234, file: !1611, line: 411, column: 6)
!11242 = !DILocation(line: 416, column: 1, scope: !11234)
!11243 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10918, file: !10918, line: 967, type: !10919, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11244)
!11244 = !{!11245}
!11245 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11243, file: !10918, line: 967, type: !1555)
!11246 = !DILocation(line: 0, scope: !11243)
!11247 = !DILocation(line: 969, column: 21, scope: !11243)
!11248 = !DILocation(line: 969, column: 3, scope: !11243)
!11249 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10918, file: !10918, line: 601, type: !10919, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11250)
!11250 = !{!11251}
!11251 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11249, file: !10918, line: 601, type: !1555)
!11252 = !DILocation(line: 0, scope: !11249)
!11253 = !DILocation(line: 603, column: 21, scope: !11249)
!11254 = !DILocation(line: 603, column: 3, scope: !11249)
!11255 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10918, file: !10918, line: 820, type: !10919, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11256)
!11256 = !{!11257}
!11257 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11255, file: !10918, line: 820, type: !1555)
!11258 = !DILocation(line: 0, scope: !11255)
!11259 = !DILocation(line: 822, column: 21, scope: !11255)
!11260 = !DILocation(line: 822, column: 3, scope: !11255)
!11261 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10918, file: !10918, line: 547, type: !10919, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11262)
!11262 = !{!11263}
!11263 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11261, file: !10918, line: 547, type: !1555)
!11264 = !DILocation(line: 0, scope: !11261)
!11265 = !DILocation(line: 549, column: 21, scope: !11261)
!11266 = !DILocation(line: 549, column: 3, scope: !11261)
!11267 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1611, file: !1611, line: 257, type: !11268, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11270)
!11268 = !DISubroutineType(types: !11269)
!11269 = !{!121, !1450}
!11270 = !{!11271}
!11271 = !DILocalVariable(name: "parity", arg: 1, scope: !11267, file: !1611, line: 257, type: !1450)
!11272 = !DILocation(line: 0, scope: !11267)
!11273 = !DILocation(line: 259, column: 2, scope: !11267)
!11274 = !DILocation(line: 268, column: 1, scope: !11267)
!11275 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1611, file: !1611, line: 283, type: !11276, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11278)
!11276 = !DISubroutineType(types: !11277)
!11277 = !{!121, !1464}
!11278 = !{!11279}
!11279 = !DILocalVariable(name: "sb", arg: 1, scope: !11275, file: !1611, line: 283, type: !1464)
!11280 = !DILocation(line: 0, scope: !11275)
!11281 = !DILocation(line: 285, column: 2, scope: !11275)
!11282 = !DILocation(line: 0, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11275, file: !1611, line: 285, column: 14)
!11284 = !DILocation(line: 302, column: 1, scope: !11275)
!11285 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1611, file: !1611, line: 325, type: !11286, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11288)
!11286 = !DISubroutineType(types: !11287)
!11287 = !{!121, !1457, !1450}
!11288 = !{!11289, !11290}
!11289 = !DILocalVariable(name: "db", arg: 1, scope: !11285, file: !1611, line: 325, type: !1457)
!11290 = !DILocalVariable(name: "p", arg: 2, scope: !11285, file: !1611, line: 326, type: !1450)
!11291 = !DILocation(line: 0, scope: !11285)
!11292 = !DILocation(line: 328, column: 2, scope: !11285)
!11293 = !DILocation(line: 353, column: 1, scope: !11285)
!11294 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1611, file: !1611, line: 393, type: !11295, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11297)
!11295 = !DISubroutineType(types: !11296)
!11296 = !{!121, !1470}
!11297 = !{!11298}
!11298 = !DILocalVariable(name: "fc", arg: 1, scope: !11294, file: !1611, line: 393, type: !1470)
!11299 = !DILocation(line: 0, scope: !11294)
!11300 = !DILocation(line: 395, column: 9, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11294, file: !1611, line: 395, column: 6)
!11302 = !DILocation(line: 400, column: 1, scope: !11294)
!11303 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10918, file: !10918, line: 424, type: !10949, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11304)
!11304 = !{!11305}
!11305 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11303, file: !10918, line: 424, type: !1555)
!11306 = !DILocation(line: 0, scope: !11303)
!11307 = !DILocation(line: 426, column: 3, scope: !11303)
!11308 = !DILocation(line: 427, column: 1, scope: !11303)
!11309 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1611, file: !1611, line: 197, type: !11310, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11312)
!11310 = !DISubroutineType(types: !11311)
!11311 = !{null, !1484, !121}
!11312 = !{!11313, !11314, !11315}
!11313 = !DILocalVariable(name: "dev", arg: 1, scope: !11309, file: !1611, line: 197, type: !1484)
!11314 = !DILocalVariable(name: "parity", arg: 2, scope: !11309, file: !1611, line: 198, type: !121)
!11315 = !DILocalVariable(name: "config", scope: !11309, file: !1611, line: 200, type: !10482)
!11316 = !DILocation(line: 0, scope: !11309)
!11317 = !DILocation(line: 200, column: 48, scope: !11309)
!11318 = !DILocation(line: 202, column: 29, scope: !11309)
!11319 = !DILocation(line: 202, column: 2, scope: !11309)
!11320 = !DILocation(line: 203, column: 1, scope: !11309)
!11321 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1611, file: !1611, line: 212, type: !11310, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11322)
!11322 = !{!11323, !11324, !11325}
!11323 = !DILocalVariable(name: "dev", arg: 1, scope: !11321, file: !1611, line: 212, type: !1484)
!11324 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11321, file: !1611, line: 213, type: !121)
!11325 = !DILocalVariable(name: "config", scope: !11321, file: !1611, line: 215, type: !10482)
!11326 = !DILocation(line: 0, scope: !11321)
!11327 = !DILocation(line: 215, column: 48, scope: !11321)
!11328 = !DILocation(line: 217, column: 37, scope: !11321)
!11329 = !DILocation(line: 217, column: 2, scope: !11321)
!11330 = !DILocation(line: 218, column: 1, scope: !11321)
!11331 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1611, file: !1611, line: 227, type: !11310, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11332)
!11332 = !{!11333, !11334, !11335}
!11333 = !DILocalVariable(name: "dev", arg: 1, scope: !11331, file: !1611, line: 227, type: !1484)
!11334 = !DILocalVariable(name: "databits", arg: 2, scope: !11331, file: !1611, line: 228, type: !121)
!11335 = !DILocalVariable(name: "config", scope: !11331, file: !1611, line: 230, type: !10482)
!11336 = !DILocation(line: 0, scope: !11331)
!11337 = !DILocation(line: 230, column: 48, scope: !11331)
!11338 = !DILocation(line: 232, column: 32, scope: !11331)
!11339 = !DILocation(line: 232, column: 2, scope: !11331)
!11340 = !DILocation(line: 233, column: 1, scope: !11331)
!11341 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1611, file: !1611, line: 242, type: !11310, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11342)
!11342 = !{!11343, !11344, !11345}
!11343 = !DILocalVariable(name: "dev", arg: 1, scope: !11341, file: !1611, line: 242, type: !1484)
!11344 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11341, file: !1611, line: 243, type: !121)
!11345 = !DILocalVariable(name: "config", scope: !11341, file: !1611, line: 245, type: !10482)
!11346 = !DILocation(line: 0, scope: !11341)
!11347 = !DILocation(line: 245, column: 48, scope: !11341)
!11348 = !DILocation(line: 247, column: 33, scope: !11341)
!11349 = !DILocation(line: 247, column: 2, scope: !11341)
!11350 = !DILocation(line: 248, column: 1, scope: !11341)
!11351 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1611, file: !1611, line: 107, type: !11310, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11352)
!11352 = !{!11353, !11354, !11355, !11356, !11357}
!11353 = !DILocalVariable(name: "dev", arg: 1, scope: !11351, file: !1611, line: 107, type: !1484)
!11354 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11351, file: !1611, line: 107, type: !121)
!11355 = !DILocalVariable(name: "config", scope: !11351, file: !1611, line: 109, type: !10482)
!11356 = !DILocalVariable(name: "data", scope: !11351, file: !1611, line: 110, type: !10605)
!11357 = !DILocalVariable(name: "clock_rate", scope: !11351, file: !1611, line: 112, type: !121)
!11358 = !DILocation(line: 0, scope: !11351)
!11359 = !DILocation(line: 109, column: 48, scope: !11351)
!11360 = !DILocation(line: 110, column: 38, scope: !11351)
!11361 = !DILocation(line: 112, column: 2, scope: !11351)
!11362 = !DILocation(line: 123, column: 36, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11364, file: !1611, line: 123, column: 7)
!11364 = distinct !DILexicalBlock(scope: !11365, file: !1611, line: 122, column: 9)
!11365 = distinct !DILexicalBlock(scope: !11351, file: !1611, line: 115, column: 6)
!11366 = !DILocation(line: 124, column: 42, scope: !11363)
!11367 = !DILocation(line: 123, column: 7, scope: !11363)
!11368 = !DILocation(line: 125, column: 22, scope: !11363)
!11369 = !DILocation(line: 123, column: 7, scope: !11364)
!11370 = !DILocation(line: 176, column: 36, scope: !11351)
!11371 = !DILocation(line: 176, column: 3, scope: !11351)
!11372 = !DILocation(line: 179, column: 32, scope: !11351)
!11373 = !DILocation(line: 180, column: 10, scope: !11351)
!11374 = !DILocation(line: 179, column: 3, scope: !11351)
!11375 = !DILocation(line: 195, column: 1, scope: !11351)
!11376 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10918, file: !10918, line: 410, type: !10949, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11377)
!11377 = !{!11378}
!11378 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11376, file: !10918, line: 410, type: !1555)
!11379 = !DILocation(line: 0, scope: !11376)
!11380 = !DILocation(line: 412, column: 3, scope: !11376)
!11381 = !DILocation(line: 413, column: 1, scope: !11376)
!11382 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !797, file: !797, line: 216, type: !1588, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11383)
!11383 = !{!11384, !11385, !11386, !11387}
!11384 = !DILocalVariable(name: "dev", arg: 1, scope: !11382, file: !797, line: 216, type: !1484)
!11385 = !DILocalVariable(name: "sys", arg: 2, scope: !11382, file: !797, line: 217, type: !889)
!11386 = !DILocalVariable(name: "rate", arg: 3, scope: !11382, file: !797, line: 218, type: !845)
!11387 = !DILocalVariable(name: "api", scope: !11382, file: !797, line: 220, type: !1566)
!11388 = !DILocation(line: 0, scope: !11382)
!11389 = !DILocation(line: 221, column: 49, scope: !11382)
!11390 = !DILocation(line: 223, column: 11, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11382, file: !797, line: 223, column: 6)
!11392 = !DILocation(line: 223, column: 20, scope: !11391)
!11393 = !DILocation(line: 223, column: 6, scope: !11382)
!11394 = !DILocation(line: 227, column: 9, scope: !11382)
!11395 = !DILocation(line: 227, column: 2, scope: !11382)
!11396 = !DILocation(line: 228, column: 1, scope: !11382)
!11397 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10918, file: !10918, line: 615, type: !11398, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11400)
!11398 = !DISubroutineType(types: !11399)
!11399 = !{null, !1555, !121}
!11400 = !{!11401, !11402}
!11401 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11397, file: !10918, line: 615, type: !1555)
!11402 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11397, file: !10918, line: 615, type: !121)
!11403 = !DILocation(line: 0, scope: !11397)
!11404 = !DILocation(line: 617, column: 3, scope: !11397)
!11405 = !DILocation(line: 618, column: 1, scope: !11397)
!11406 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10918, file: !10918, line: 1020, type: !11407, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11409)
!11407 = !DISubroutineType(types: !11408)
!11408 = !{null, !1555, !121, !121, !121}
!11409 = !{!11410, !11411, !11412, !11413}
!11410 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11406, file: !10918, line: 1020, type: !1555)
!11411 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11406, file: !10918, line: 1020, type: !121)
!11412 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11406, file: !10918, line: 1020, type: !121)
!11413 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11406, file: !10918, line: 1021, type: !121)
!11414 = !DILocation(line: 0, scope: !11406)
!11415 = !DILocation(line: 1029, column: 30, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11417, file: !10918, line: 1028, column: 3)
!11417 = distinct !DILexicalBlock(scope: !11406, file: !10918, line: 1023, column: 7)
!11418 = !DILocation(line: 1029, column: 19, scope: !11416)
!11419 = !DILocation(line: 1029, column: 13, scope: !11416)
!11420 = !DILocation(line: 1029, column: 17, scope: !11416)
!11421 = !DILocation(line: 1031, column: 1, scope: !11406)
!11422 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10918, file: !10918, line: 949, type: !11398, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11423)
!11423 = !{!11424, !11425}
!11424 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11422, file: !10918, line: 949, type: !1555)
!11425 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11422, file: !10918, line: 949, type: !121)
!11426 = !DILocation(line: 0, scope: !11422)
!11427 = !DILocation(line: 951, column: 3, scope: !11422)
!11428 = !DILocation(line: 952, column: 1, scope: !11422)
!11429 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10918, file: !10918, line: 588, type: !11398, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11430)
!11430 = !{!11431, !11432}
!11431 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11429, file: !10918, line: 588, type: !1555)
!11432 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11429, file: !10918, line: 588, type: !121)
!11433 = !DILocation(line: 0, scope: !11429)
!11434 = !DILocation(line: 590, column: 3, scope: !11429)
!11435 = !DILocation(line: 591, column: 1, scope: !11429)
!11436 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10918, file: !10918, line: 805, type: !11398, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11437)
!11437 = !{!11438, !11439}
!11438 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11436, file: !10918, line: 805, type: !1555)
!11439 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11436, file: !10918, line: 805, type: !121)
!11440 = !DILocation(line: 0, scope: !11436)
!11441 = !DILocation(line: 807, column: 3, scope: !11436)
!11442 = !DILocation(line: 808, column: 1, scope: !11436)
!11443 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10918, file: !10918, line: 532, type: !11398, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11444)
!11444 = !{!11445, !11446}
!11445 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11443, file: !10918, line: 532, type: !1555)
!11446 = !DILocalVariable(name: "Parity", arg: 2, scope: !11443, file: !10918, line: 532, type: !121)
!11447 = !DILocation(line: 0, scope: !11443)
!11448 = !DILocation(line: 534, column: 3, scope: !11443)
!11449 = !DILocation(line: 535, column: 1, scope: !11443)
!11450 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10918, file: !10918, line: 1737, type: !10919, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11451)
!11451 = !{!11452}
!11452 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11450, file: !10918, line: 1737, type: !1555)
!11453 = !DILocation(line: 0, scope: !11450)
!11454 = !DILocation(line: 1739, column: 11, scope: !11450)
!11455 = !DILocation(line: 1739, column: 3, scope: !11450)
!11456 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10918, file: !10918, line: 1748, type: !10919, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11457)
!11457 = !{!11458}
!11458 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11456, file: !10918, line: 1748, type: !1555)
!11459 = !DILocation(line: 0, scope: !11456)
!11460 = !DILocation(line: 1750, column: 11, scope: !11456)
!11461 = !DILocation(line: 1750, column: 45, scope: !11456)
!11462 = !DILocation(line: 1750, column: 3, scope: !11456)
!11463 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10918, file: !10918, line: 1827, type: !10919, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11464)
!11464 = !{!11465}
!11465 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11463, file: !10918, line: 1827, type: !1555)
!11466 = !DILocation(line: 0, scope: !11463)
!11467 = !DILocation(line: 1829, column: 11, scope: !11463)
!11468 = !DILocation(line: 1829, column: 46, scope: !11463)
!11469 = !DILocation(line: 1829, column: 3, scope: !11463)
!11470 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10918, file: !10918, line: 1992, type: !10949, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11471)
!11471 = !{!11472}
!11472 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11470, file: !10918, line: 1992, type: !1555)
!11473 = !DILocation(line: 0, scope: !11470)
!11474 = !DILocation(line: 1994, column: 3, scope: !11470)
!11475 = !DILocation(line: 1995, column: 1, scope: !11470)
!11476 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10918, file: !10918, line: 1877, type: !10949, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11477)
!11477 = !{!11478, !11479}
!11478 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11476, file: !10918, line: 1877, type: !1555)
!11479 = !DILocalVariable(name: "tmpreg", scope: !11476, file: !10918, line: 1879, type: !120)
!11480 = !DILocation(line: 0, scope: !11476)
!11481 = !DILocation(line: 1879, column: 3, scope: !11476)
!11482 = !DILocation(line: 1879, column: 17, scope: !11476)
!11483 = !DILocation(line: 1880, column: 20, scope: !11476)
!11484 = !DILocation(line: 1880, column: 10, scope: !11476)
!11485 = !DILocation(line: 1881, column: 10, scope: !11476)
!11486 = !DILocation(line: 1882, column: 20, scope: !11476)
!11487 = !DILocation(line: 1882, column: 10, scope: !11476)
!11488 = !DILocation(line: 1883, column: 10, scope: !11476)
!11489 = !DILocation(line: 1884, column: 1, scope: !11476)
!11490 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10918, file: !10918, line: 1896, type: !10949, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11491)
!11491 = !{!11492, !11493}
!11492 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11490, file: !10918, line: 1896, type: !1555)
!11493 = !DILocalVariable(name: "tmpreg", scope: !11490, file: !10918, line: 1898, type: !120)
!11494 = !DILocation(line: 0, scope: !11490)
!11495 = !DILocation(line: 1898, column: 3, scope: !11490)
!11496 = !DILocation(line: 1898, column: 17, scope: !11490)
!11497 = !DILocation(line: 1899, column: 20, scope: !11490)
!11498 = !DILocation(line: 1899, column: 10, scope: !11490)
!11499 = !DILocation(line: 1900, column: 10, scope: !11490)
!11500 = !DILocation(line: 1901, column: 20, scope: !11490)
!11501 = !DILocation(line: 1901, column: 10, scope: !11490)
!11502 = !DILocation(line: 1902, column: 10, scope: !11490)
!11503 = !DILocation(line: 1903, column: 1, scope: !11490)
!11504 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10918, file: !10918, line: 1915, type: !10949, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11505)
!11505 = !{!11506, !11507}
!11506 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11504, file: !10918, line: 1915, type: !1555)
!11507 = !DILocalVariable(name: "tmpreg", scope: !11504, file: !10918, line: 1917, type: !120)
!11508 = !DILocation(line: 0, scope: !11504)
!11509 = !DILocation(line: 1917, column: 3, scope: !11504)
!11510 = !DILocation(line: 1917, column: 17, scope: !11504)
!11511 = !DILocation(line: 1918, column: 20, scope: !11504)
!11512 = !DILocation(line: 1918, column: 10, scope: !11504)
!11513 = !DILocation(line: 1919, column: 10, scope: !11504)
!11514 = !DILocation(line: 1920, column: 20, scope: !11504)
!11515 = !DILocation(line: 1920, column: 10, scope: !11504)
!11516 = !DILocation(line: 1921, column: 10, scope: !11504)
!11517 = !DILocation(line: 1922, column: 1, scope: !11504)
!11518 = !DILocation(line: 0, scope: !1665)
!11519 = !DILocation(line: 1914, column: 1, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !1665, file: !1611, line: 1914, column: 1)
!11521 = !DILocation(line: 1914, column: 1, scope: !1665)
!11522 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1611, file: !1611, line: 987, type: !1535, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11523)
!11523 = !{!11524, !11525}
!11524 = !DILocalVariable(name: "dev", arg: 1, scope: !11522, file: !1611, line: 987, type: !1484)
!11525 = !DILocalVariable(name: "data", scope: !11522, file: !1611, line: 989, type: !10605)
!11526 = !DILocation(line: 0, scope: !11522)
!11527 = !DILocation(line: 989, column: 38, scope: !11522)
!11528 = !DILocation(line: 1014, column: 12, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11522, file: !1611, line: 1014, column: 6)
!11530 = !DILocation(line: 1014, column: 6, scope: !11529)
!11531 = !DILocation(line: 1014, column: 6, scope: !11522)
!11532 = !DILocation(line: 1015, column: 28, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11529, file: !1611, line: 1014, column: 21)
!11534 = !DILocation(line: 1015, column: 3, scope: !11533)
!11535 = !DILocation(line: 1016, column: 2, scope: !11533)
!11536 = !DILocation(line: 1059, column: 1, scope: !11522)
!11537 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1611, file: !1611, line: 1583, type: !1505, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11538)
!11538 = !{!11539, !11540, !11541, !11542, !11543, !11544}
!11539 = !DILocalVariable(name: "dev", arg: 1, scope: !11537, file: !1611, line: 1583, type: !1484)
!11540 = !DILocalVariable(name: "config", scope: !11537, file: !1611, line: 1585, type: !10482)
!11541 = !DILocalVariable(name: "data", scope: !11537, file: !1611, line: 1586, type: !10605)
!11542 = !DILocalVariable(name: "ll_parity", scope: !11537, file: !1611, line: 1587, type: !121)
!11543 = !DILocalVariable(name: "ll_datawidth", scope: !11537, file: !1611, line: 1588, type: !121)
!11544 = !DILocalVariable(name: "err", scope: !11537, file: !1611, line: 1589, type: !103)
!11545 = !DILocation(line: 0, scope: !11537)
!11546 = !DILocation(line: 1585, column: 48, scope: !11537)
!11547 = !DILocation(line: 1586, column: 38, scope: !11537)
!11548 = !DILocation(line: 1591, column: 2, scope: !11537)
!11549 = !DILocation(line: 1593, column: 29, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11537, file: !1611, line: 1593, column: 6)
!11551 = !DILocation(line: 1593, column: 7, scope: !11550)
!11552 = !DILocation(line: 1593, column: 6, scope: !11537)
!11553 = !DILocation(line: 1599, column: 31, scope: !11537)
!11554 = !DILocation(line: 1599, column: 71, scope: !11537)
!11555 = !DILocation(line: 1599, column: 8, scope: !11537)
!11556 = !DILocation(line: 1600, column: 10, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11537, file: !1611, line: 1600, column: 6)
!11558 = !DILocation(line: 1600, column: 6, scope: !11537)
!11559 = !DILocation(line: 1616, column: 36, scope: !11537)
!11560 = !DILocation(line: 1616, column: 8, scope: !11537)
!11561 = !DILocation(line: 1617, column: 10, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11537, file: !1611, line: 1617, column: 6)
!11563 = !DILocation(line: 1617, column: 6, scope: !11537)
!11564 = !DILocation(line: 1621, column: 27, scope: !11537)
!11565 = !DILocation(line: 1621, column: 2, scope: !11537)
!11566 = !DILocation(line: 1624, column: 40, scope: !11537)
!11567 = !DILocation(line: 1624, column: 2, scope: !11537)
!11568 = !DILocation(line: 1630, column: 14, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11537, file: !1611, line: 1630, column: 6)
!11570 = !DILocation(line: 1630, column: 6, scope: !11537)
!11571 = !DILocation(line: 1638, column: 2, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11573, file: !1611, line: 1634, column: 34)
!11573 = distinct !DILexicalBlock(scope: !11569, file: !1611, line: 1634, column: 13)
!11574 = !DILocation(line: 0, scope: !11569)
!11575 = !DILocation(line: 1649, column: 35, scope: !11537)
!11576 = !DILocation(line: 1649, column: 2, scope: !11537)
!11577 = !DILocation(line: 1654, column: 14, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11537, file: !1611, line: 1654, column: 6)
!11579 = !DILocation(line: 1654, column: 6, scope: !11537)
!11580 = !DILocation(line: 1655, column: 3, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11578, file: !1611, line: 1654, column: 31)
!11582 = !DILocation(line: 1656, column: 2, scope: !11581)
!11583 = !DILocation(line: 1659, column: 37, scope: !11537)
!11584 = !DILocation(line: 1659, column: 2, scope: !11537)
!11585 = !DILocation(line: 1662, column: 14, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11537, file: !1611, line: 1662, column: 6)
!11587 = !DILocation(line: 1662, column: 6, scope: !11537)
!11588 = !DILocation(line: 1663, column: 37, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11586, file: !1611, line: 1662, column: 27)
!11590 = !DILocation(line: 1663, column: 3, scope: !11589)
!11591 = !DILocation(line: 1664, column: 2, scope: !11589)
!11592 = !DILocation(line: 1684, column: 26, scope: !11537)
!11593 = !DILocation(line: 1684, column: 2, scope: !11537)
!11594 = !DILocation(line: 1701, column: 10, scope: !11537)
!11595 = !DILocation(line: 1701, column: 2, scope: !11537)
!11596 = !DILocation(line: 1722, column: 2, scope: !11537)
!11597 = !DILocation(line: 1724, column: 1, scope: !11537)
!11598 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1611, file: !1611, line: 651, type: !1535, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11599)
!11599 = !{!11600, !11601, !11602}
!11600 = !DILocalVariable(name: "dev", arg: 1, scope: !11598, file: !1611, line: 651, type: !1484)
!11601 = !DILocalVariable(name: "data", scope: !11598, file: !1611, line: 653, type: !10605)
!11602 = !DILocalVariable(name: "clk", scope: !11598, file: !1611, line: 654, type: !11603)
!11603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1484)
!11604 = !DILocation(line: 0, scope: !11598)
!11605 = !DILocation(line: 653, column: 38, scope: !11598)
!11606 = !DILocation(line: 656, column: 8, scope: !11598)
!11607 = !DILocation(line: 656, column: 14, scope: !11598)
!11608 = !DILocation(line: 657, column: 1, scope: !11598)
!11609 = distinct !DISubprogram(name: "device_is_ready", scope: !6665, file: !6665, line: 47, type: !11610, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11612)
!11610 = !DISubroutineType(types: !11611)
!11611 = !{!157, !1484}
!11612 = !{!11613}
!11613 = !DILocalVariable(name: "dev", arg: 1, scope: !11609, file: !6665, line: 47, type: !1484)
!11614 = !DILocation(line: 0, scope: !11609)
!11615 = !DILocation(line: 55, column: 2, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11609, file: !6665, line: 55, column: 2)
!11617 = !{i64 2155126028}
!11618 = !DILocation(line: 56, column: 9, scope: !11609)
!11619 = !DILocation(line: 56, column: 2, scope: !11609)
!11620 = distinct !DISubprogram(name: "clock_control_on", scope: !797, file: !797, line: 123, type: !1573, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11621)
!11621 = !{!11622, !11623, !11624}
!11622 = !DILocalVariable(name: "dev", arg: 1, scope: !11620, file: !797, line: 123, type: !1484)
!11623 = !DILocalVariable(name: "sys", arg: 2, scope: !11620, file: !797, line: 124, type: !889)
!11624 = !DILocalVariable(name: "api", scope: !11620, file: !797, line: 126, type: !1566)
!11625 = !DILocation(line: 0, scope: !11620)
!11626 = !DILocation(line: 127, column: 49, scope: !11620)
!11627 = !DILocation(line: 129, column: 14, scope: !11620)
!11628 = !DILocation(line: 129, column: 9, scope: !11620)
!11629 = !DILocation(line: 129, column: 2, scope: !11620)
!11630 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1638, file: !1638, line: 342, type: !11631, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11633)
!11631 = !DISubroutineType(types: !11632)
!11632 = !{!103, !1699, !154}
!11633 = !{!11634, !11635, !11636, !11637}
!11634 = !DILocalVariable(name: "config", arg: 1, scope: !11630, file: !1638, line: 342, type: !1699)
!11635 = !DILocalVariable(name: "id", arg: 2, scope: !11630, file: !1638, line: 343, type: !154)
!11636 = !DILocalVariable(name: "ret", scope: !11630, file: !1638, line: 345, type: !103)
!11637 = !DILocalVariable(name: "state", scope: !11630, file: !1638, line: 346, type: !1641)
!11638 = !DILocation(line: 0, scope: !11630)
!11639 = !DILocation(line: 346, column: 2, scope: !11630)
!11640 = !DILocation(line: 348, column: 8, scope: !11630)
!11641 = !DILocation(line: 349, column: 10, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11630, file: !1638, line: 349, column: 6)
!11643 = !DILocation(line: 349, column: 6, scope: !11630)
!11644 = !DILocation(line: 353, column: 44, scope: !11630)
!11645 = !DILocation(line: 353, column: 9, scope: !11630)
!11646 = !DILocation(line: 353, column: 2, scope: !11630)
!11647 = !DILocation(line: 354, column: 1, scope: !11630)
!11648 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10918, file: !10918, line: 497, type: !11398, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11649)
!11649 = !{!11650, !11651, !11652}
!11650 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11648, file: !10918, line: 497, type: !1555)
!11651 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11648, file: !10918, line: 497, type: !121)
!11652 = !DILocalVariable(name: "val", scope: !11653, file: !10918, line: 499, type: !121)
!11653 = distinct !DILexicalBlock(scope: !11648, file: !10918, line: 499, column: 3)
!11654 = !DILocation(line: 0, scope: !11648)
!11655 = !DILocation(line: 499, column: 3, scope: !11653)
!11656 = !DILocation(line: 0, scope: !10958, inlinedAt: !11657)
!11657 = distinct !DILocation(line: 499, column: 3, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11653, file: !10918, line: 499, column: 3)
!11659 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11657)
!11660 = !DILocation(line: 499, column: 3, scope: !11658)
!11661 = !DILocation(line: 0, scope: !11653)
!11662 = !DILocation(line: 0, scope: !10971, inlinedAt: !11663)
!11663 = distinct !DILocation(line: 499, column: 3, scope: !11653)
!11664 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11663)
!11665 = distinct !{!11665, !11655, !11655}
!11666 = !DILocation(line: 500, column: 1, scope: !11648)
!11667 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10918, file: !10918, line: 850, type: !11407, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11668)
!11668 = !{!11669, !11670, !11671, !11672}
!11669 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11667, file: !10918, line: 850, type: !1555)
!11670 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11667, file: !10918, line: 850, type: !121)
!11671 = !DILocalVariable(name: "Parity", arg: 3, scope: !11667, file: !10918, line: 850, type: !121)
!11672 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11667, file: !10918, line: 851, type: !121)
!11673 = !DILocation(line: 0, scope: !11667)
!11674 = !DILocation(line: 853, column: 3, scope: !11667)
!11675 = !DILocation(line: 854, column: 3, scope: !11667)
!11676 = !DILocation(line: 855, column: 1, scope: !11667)
!11677 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10918, file: !10918, line: 1337, type: !10949, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11678)
!11678 = !{!11679}
!11679 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11677, file: !10918, line: 1337, type: !1555)
!11680 = !DILocation(line: 0, scope: !11677)
!11681 = !DILocation(line: 1339, column: 3, scope: !11677)
!11682 = !DILocation(line: 1340, column: 1, scope: !11677)
!11683 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1638, file: !1638, line: 316, type: !11684, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11686)
!11684 = !DISubroutineType(types: !11685)
!11685 = !{!103, !1699, !1641}
!11686 = !{!11687, !11688, !11689}
!11687 = !DILocalVariable(name: "config", arg: 1, scope: !11683, file: !1638, line: 317, type: !1699)
!11688 = !DILocalVariable(name: "state", arg: 2, scope: !11683, file: !1638, line: 318, type: !1641)
!11689 = !DILocalVariable(name: "reg", scope: !11683, file: !1638, line: 320, type: !22)
!11690 = !DILocation(line: 0, scope: !11683)
!11691 = !DILocation(line: 329, column: 39, scope: !11683)
!11692 = !DILocation(line: 329, column: 52, scope: !11683)
!11693 = !DILocation(line: 329, column: 9, scope: !11683)
!11694 = !DILocation(line: 329, column: 2, scope: !11683)
!11695 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !11610, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !11696)
!11696 = !{!11697}
!11697 = !DILocalVariable(name: "dev", arg: 1, scope: !11695, file: !141, line: 730, type: !1484)
!11698 = !DILocation(line: 0, scope: !11695)
!11699 = !DILocation(line: 732, column: 9, scope: !11695)
!11700 = !DILocation(line: 732, column: 2, scope: !11695)
!11701 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1784, file: !1784, line: 270, type: !1790, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !11702)
!11702 = !{!11703}
!11703 = !DILocalVariable(name: "dev", arg: 1, scope: !11701, file: !1784, line: 270, type: !1792)
!11704 = !DILocation(line: 0, scope: !11701)
!11705 = !DILocation(line: 274, column: 2, scope: !11701)
!11706 = !DILocation(line: 275, column: 12, scope: !11701)
!11707 = !DILocation(line: 276, column: 15, scope: !11701)
!11708 = !DILocation(line: 277, column: 16, scope: !11701)
!11709 = !DILocation(line: 278, column: 15, scope: !11701)
!11710 = !DILocation(line: 279, column: 16, scope: !11701)
!11711 = !DILocation(line: 282, column: 2, scope: !11701)
!11712 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6858, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !11713)
!11713 = !{!11714, !11715}
!11714 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11712, file: !495, line: 1814, type: !751)
!11715 = !DILocalVariable(name: "priority", arg: 2, scope: !11712, file: !495, line: 1814, type: !121)
!11716 = !DILocation(line: 0, scope: !11712)
!11717 = !DILocation(line: 1822, column: 46, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11719, file: !495, line: 1821, column: 3)
!11719 = distinct !DILexicalBlock(scope: !11712, file: !495, line: 1816, column: 7)
!11720 = !DILocation(line: 1824, column: 1, scope: !11712)
!11721 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1784, file: !1784, line: 118, type: !6761, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !11722)
!11722 = !{!11723, !11724}
!11723 = !DILocalVariable(name: "arg", arg: 1, scope: !11721, file: !1784, line: 118, type: !102)
!11724 = !DILocalVariable(name: "dticks", scope: !11721, file: !1784, line: 121, type: !121)
!11725 = !DILocation(line: 0, scope: !11721)
!11726 = !DILocation(line: 124, column: 2, scope: !11721)
!11727 = !DILocation(line: 129, column: 17, scope: !11721)
!11728 = !DILocation(line: 129, column: 14, scope: !11721)
!11729 = !DILocation(line: 130, column: 15, scope: !11721)
!11730 = !DILocation(line: 145, column: 27, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11732, file: !1784, line: 132, column: 16)
!11732 = distinct !DILexicalBlock(scope: !11721, file: !1784, line: 132, column: 6)
!11733 = !DILocation(line: 145, column: 25, scope: !11731)
!11734 = !DILocation(line: 145, column: 45, scope: !11731)
!11735 = !DILocation(line: 146, column: 30, scope: !11731)
!11736 = !DILocation(line: 146, column: 20, scope: !11731)
!11737 = !DILocation(line: 147, column: 3, scope: !11731)
!11738 = !DILocation(line: 151, column: 2, scope: !11721)
!11739 = !DILocation(line: 152, column: 1, scope: !11721)
!11740 = distinct !DISubprogram(name: "elapsed", scope: !1784, file: !1784, line: 85, type: !6905, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !11741)
!11741 = !{!11742, !11743, !11744}
!11742 = !DILocalVariable(name: "val1", scope: !11740, file: !1784, line: 87, type: !121)
!11743 = !DILocalVariable(name: "ctrl", scope: !11740, file: !1784, line: 88, type: !121)
!11744 = !DILocalVariable(name: "val2", scope: !11740, file: !1784, line: 89, type: !121)
!11745 = !DILocation(line: 87, column: 27, scope: !11740)
!11746 = !DILocation(line: 0, scope: !11740)
!11747 = !DILocation(line: 88, column: 27, scope: !11740)
!11748 = !DILocation(line: 89, column: 27, scope: !11740)
!11749 = !DILocation(line: 105, column: 12, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11740, file: !1784, line: 105, column: 6)
!11751 = !DILocation(line: 106, column: 6, scope: !11750)
!11752 = !DILocation(line: 107, column: 16, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11750, file: !1784, line: 106, column: 24)
!11754 = !DILocation(line: 111, column: 18, scope: !11753)
!11755 = !DILocation(line: 112, column: 2, scope: !11753)
!11756 = !DILocation(line: 114, column: 20, scope: !11740)
!11757 = !DILocation(line: 114, column: 30, scope: !11740)
!11758 = !DILocation(line: 114, column: 28, scope: !11740)
!11759 = !DILocation(line: 114, column: 2, scope: !11740)
!11760 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1784, file: !1784, line: 154, type: !11761, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !11763)
!11761 = !DISubroutineType(types: !11762)
!11762 = !{null, !332, !157}
!11763 = !{!11764, !11765, !11766, !11767, !11768, !11769, !11770, !11775, !11776}
!11764 = !DILocalVariable(name: "ticks", arg: 1, scope: !11760, file: !1784, line: 154, type: !332)
!11765 = !DILocalVariable(name: "idle", arg: 2, scope: !11760, file: !1784, line: 154, type: !157)
!11766 = !DILocalVariable(name: "delay", scope: !11760, file: !1784, line: 169, type: !121)
!11767 = !DILocalVariable(name: "val1", scope: !11760, file: !1784, line: 170, type: !121)
!11768 = !DILocalVariable(name: "val2", scope: !11760, file: !1784, line: 170, type: !121)
!11769 = !DILocalVariable(name: "last_load_", scope: !11760, file: !1784, line: 171, type: !121)
!11770 = !DILocalVariable(name: "key", scope: !11760, file: !1784, line: 176, type: !11771)
!11771 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !11772)
!11772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !11773)
!11773 = !{!11774}
!11774 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11772, file: !460, line: 33, baseType: !103, size: 32)
!11775 = !DILocalVariable(name: "pending", scope: !11760, file: !1784, line: 178, type: !121)
!11776 = !DILocalVariable(name: "unannounced", scope: !11760, file: !1784, line: 185, type: !121)
!11777 = !DILocation(line: 0, scope: !11760)
!11778 = !DILocation(line: 162, column: 49, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11760, file: !1784, line: 162, column: 6)
!11780 = !DILocation(line: 163, column: 17, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11779, file: !1784, line: 162, column: 78)
!11782 = !DILocation(line: 164, column: 13, scope: !11781)
!11783 = !DILocation(line: 165, column: 3, scope: !11781)
!11784 = !DILocation(line: 171, column: 24, scope: !11760)
!11785 = !DILocation(line: 173, column: 10, scope: !11760)
!11786 = !DILocation(line: 174, column: 10, scope: !11760)
!11787 = !DILocalVariable(name: "l", arg: 1, scope: !11788, file: !460, line: 136, type: !11791)
!11788 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !11789, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !11792)
!11789 = !DISubroutineType(types: !11790)
!11790 = !{!11771, !11791}
!11791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!11792 = !{!11787, !11793}
!11793 = !DILocalVariable(name: "k", scope: !11788, file: !460, line: 139, type: !11771)
!11794 = !DILocation(line: 0, scope: !11788, inlinedAt: !11795)
!11795 = distinct !DILocation(line: 176, column: 25, scope: !11760)
!11796 = !DILocation(line: 55, column: 2, scope: !11797, inlinedAt: !11801)
!11797 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5804, file: !5804, line: 42, type: !5805, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !11798)
!11798 = !{!11799, !11800}
!11799 = !DILocalVariable(name: "key", scope: !11797, file: !5804, line: 44, type: !32)
!11800 = !DILocalVariable(name: "tmp", scope: !11797, file: !5804, line: 53, type: !32)
!11801 = distinct !DILocation(line: 145, column: 10, scope: !11788, inlinedAt: !11795)
!11802 = !{i64 2195950}
!11803 = !DILocation(line: 0, scope: !11797, inlinedAt: !11801)
!11804 = !DILocation(line: 178, column: 21, scope: !11760)
!11805 = !DILocation(line: 180, column: 18, scope: !11760)
!11806 = !DILocation(line: 182, column: 14, scope: !11760)
!11807 = !DILocation(line: 183, column: 15, scope: !11760)
!11808 = !DILocation(line: 185, column: 39, scope: !11760)
!11809 = !DILocation(line: 185, column: 37, scope: !11760)
!11810 = !DILocation(line: 187, column: 27, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11760, file: !1784, line: 187, column: 6)
!11812 = !DILocation(line: 187, column: 6, scope: !11760)
!11813 = !DILocation(line: 202, column: 27, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11811, file: !1784, line: 195, column: 9)
!11815 = !DILocation(line: 202, column: 48, scope: !11814)
!11816 = !DILocation(line: 203, column: 9, scope: !11814)
!11817 = !DILocation(line: 204, column: 11, scope: !11814)
!11818 = !DILocation(line: 205, column: 13, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11814, file: !1784, line: 205, column: 7)
!11820 = !DILocation(line: 205, column: 7, scope: !11814)
!11821 = !DILocation(line: 0, scope: !11811)
!11822 = !DILocation(line: 212, column: 18, scope: !11760)
!11823 = !DILocation(line: 214, column: 28, scope: !11760)
!11824 = !DILocation(line: 214, column: 16, scope: !11760)
!11825 = !DILocation(line: 215, column: 15, scope: !11760)
!11826 = !DILocation(line: 227, column: 11, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11760, file: !1784, line: 227, column: 6)
!11828 = !DILocation(line: 227, column: 6, scope: !11760)
!11829 = !DILocation(line: 228, column: 15, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11827, file: !1784, line: 227, column: 19)
!11831 = !DILocation(line: 228, column: 38, scope: !11830)
!11832 = !DILocation(line: 228, column: 24, scope: !11830)
!11833 = !DILocation(line: 229, column: 2, scope: !11830)
!11834 = !DILocation(line: 230, column: 24, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11827, file: !1784, line: 229, column: 9)
!11836 = !DILocation(line: 230, column: 15, scope: !11835)
!11837 = !DILocation(line: 0, scope: !11827)
!11838 = !DILocalVariable(name: "key", arg: 2, scope: !11839, file: !460, line: 190, type: !11771)
!11839 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !11840, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !11842)
!11840 = !DISubroutineType(types: !11841)
!11841 = !{null, !11791, !11771}
!11842 = !{!11843, !11838}
!11843 = !DILocalVariable(name: "l", arg: 1, scope: !11839, file: !460, line: 189, type: !11791)
!11844 = !DILocation(line: 0, scope: !11839, inlinedAt: !11845)
!11845 = distinct !DILocation(line: 232, column: 2, scope: !11760)
!11846 = !DILocalVariable(name: "key", arg: 1, scope: !11847, file: !5804, line: 84, type: !32)
!11847 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5804, file: !5804, line: 84, type: !5815, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !11848)
!11848 = !{!11846}
!11849 = !DILocation(line: 0, scope: !11847, inlinedAt: !11850)
!11850 = distinct !DILocation(line: 215, column: 2, scope: !11839, inlinedAt: !11845)
!11851 = !DILocation(line: 95, column: 2, scope: !11847, inlinedAt: !11850)
!11852 = !{i64 2196767}
!11853 = !DILocation(line: 234, column: 1, scope: !11760)
!11854 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1784, file: !1784, line: 236, type: !6905, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !11855)
!11855 = !{!11856, !11857}
!11856 = !DILocalVariable(name: "key", scope: !11854, file: !1784, line: 242, type: !11771)
!11857 = !DILocalVariable(name: "cyc", scope: !11854, file: !1784, line: 243, type: !121)
!11858 = !DILocation(line: 0, scope: !11788, inlinedAt: !11859)
!11859 = distinct !DILocation(line: 242, column: 25, scope: !11854)
!11860 = !DILocation(line: 55, column: 2, scope: !11797, inlinedAt: !11861)
!11861 = distinct !DILocation(line: 145, column: 10, scope: !11788, inlinedAt: !11859)
!11862 = !DILocation(line: 0, scope: !11797, inlinedAt: !11861)
!11863 = !DILocation(line: 0, scope: !11854)
!11864 = !DILocation(line: 243, column: 17, scope: !11854)
!11865 = !DILocation(line: 243, column: 29, scope: !11854)
!11866 = !DILocation(line: 243, column: 27, scope: !11854)
!11867 = !DILocation(line: 243, column: 43, scope: !11854)
!11868 = !DILocation(line: 243, column: 41, scope: !11854)
!11869 = !DILocation(line: 0, scope: !11839, inlinedAt: !11870)
!11870 = distinct !DILocation(line: 245, column: 2, scope: !11854)
!11871 = !DILocation(line: 0, scope: !11847, inlinedAt: !11872)
!11872 = distinct !DILocation(line: 215, column: 2, scope: !11839, inlinedAt: !11870)
!11873 = !DILocation(line: 95, column: 2, scope: !11847, inlinedAt: !11872)
!11874 = !DILocation(line: 246, column: 13, scope: !11854)
!11875 = !DILocation(line: 246, column: 2, scope: !11854)
!11876 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1784, file: !1784, line: 249, type: !6905, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !11877)
!11877 = !{!11878, !11879}
!11878 = !DILocalVariable(name: "key", scope: !11876, file: !1784, line: 251, type: !11771)
!11879 = !DILocalVariable(name: "ret", scope: !11876, file: !1784, line: 252, type: !121)
!11880 = !DILocation(line: 0, scope: !11788, inlinedAt: !11881)
!11881 = distinct !DILocation(line: 251, column: 25, scope: !11876)
!11882 = !DILocation(line: 55, column: 2, scope: !11797, inlinedAt: !11883)
!11883 = distinct !DILocation(line: 145, column: 10, scope: !11788, inlinedAt: !11881)
!11884 = !DILocation(line: 0, scope: !11797, inlinedAt: !11883)
!11885 = !DILocation(line: 0, scope: !11876)
!11886 = !DILocation(line: 252, column: 17, scope: !11876)
!11887 = !DILocation(line: 252, column: 29, scope: !11876)
!11888 = !DILocation(line: 252, column: 27, scope: !11876)
!11889 = !DILocation(line: 0, scope: !11839, inlinedAt: !11890)
!11890 = distinct !DILocation(line: 254, column: 2, scope: !11876)
!11891 = !DILocation(line: 0, scope: !11847, inlinedAt: !11892)
!11892 = distinct !DILocation(line: 215, column: 2, scope: !11839, inlinedAt: !11890)
!11893 = !DILocation(line: 95, column: 2, scope: !11847, inlinedAt: !11892)
!11894 = !DILocation(line: 255, column: 2, scope: !11876)
!11895 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1784, file: !1784, line: 258, type: !3244, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !461)
!11896 = !DILocation(line: 260, column: 6, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11895, file: !1784, line: 260, column: 6)
!11898 = !DILocation(line: 260, column: 16, scope: !11897)
!11899 = !DILocation(line: 260, column: 6, scope: !11895)
!11900 = !DILocation(line: 261, column: 17, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11897, file: !1784, line: 260, column: 34)
!11902 = !DILocation(line: 262, column: 2, scope: !11901)
!11903 = !DILocation(line: 263, column: 1, scope: !11895)
!11904 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1784, file: !1784, line: 265, type: !3244, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !461)
!11905 = !DILocation(line: 267, column: 16, scope: !11904)
!11906 = !DILocation(line: 268, column: 1, scope: !11904)
!11907 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11908, file: !11908, line: 9, type: !11909, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3055, retainedNodes: !11932)
!11908 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11909 = !DISubroutineType(types: !11910)
!11910 = !{!103, !11911, !154, !11931}
!11911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11912, size: 32)
!11912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11913)
!11913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1638, line: 60, size: 64, elements: !11914)
!11914 = !{!11915, !11930}
!11915 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11913, file: !1638, line: 69, baseType: !11916, size: 32)
!11916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11917, size: 32)
!11917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11918)
!11918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1638, line: 50, size: 64, elements: !11919)
!11919 = !{!11920, !11928, !11929}
!11920 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11918, file: !1638, line: 52, baseType: !11921, size: 32)
!11921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11922, size: 32)
!11922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11923)
!11923 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1649, line: 37, baseType: !11924)
!11924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1649, line: 32, size: 64, elements: !11925)
!11925 = !{!11926, !11927}
!11926 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11924, file: !1649, line: 34, baseType: !121, size: 32)
!11927 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11924, file: !1649, line: 36, baseType: !121, size: 32, offset: 32)
!11928 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11918, file: !1638, line: 54, baseType: !154, size: 8, offset: 32)
!11929 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11918, file: !1638, line: 56, baseType: !154, size: 8, offset: 40)
!11930 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11913, file: !1638, line: 71, baseType: !154, size: 8, offset: 32)
!11931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11916, size: 32)
!11932 = !{!11933, !11934, !11935}
!11933 = !DILocalVariable(name: "config", arg: 1, scope: !11907, file: !11908, line: 9, type: !11911)
!11934 = !DILocalVariable(name: "id", arg: 2, scope: !11907, file: !11908, line: 9, type: !154)
!11935 = !DILocalVariable(name: "state", arg: 3, scope: !11907, file: !11908, line: 10, type: !11931)
!11936 = !DILocation(line: 0, scope: !11907)
!11937 = !DILocation(line: 12, column: 20, scope: !11907)
!11938 = !DILocation(line: 13, column: 27, scope: !11907)
!11939 = !DILocation(line: 13, column: 42, scope: !11907)
!11940 = !DILocation(line: 13, column: 19, scope: !11907)
!11941 = !DILocation(line: 13, column: 16, scope: !11907)
!11942 = !DILocation(line: 13, column: 2, scope: !11907)
!11943 = distinct !{!11943, !11942, !11944}
!11944 = !DILocation(line: 19, column: 2, scope: !11907)
!11945 = !DILocation(line: 14, column: 23, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11947, file: !11908, line: 14, column: 7)
!11947 = distinct !DILexicalBlock(scope: !11907, file: !11908, line: 13, column: 54)
!11948 = !DILocation(line: 14, column: 10, scope: !11946)
!11949 = !DILocation(line: 18, column: 11, scope: !11947)
!11950 = !DILocation(line: 14, column: 7, scope: !11947)
!11951 = !DILocation(line: 22, column: 1, scope: !11907)
!11952 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1901, file: !1901, line: 193, type: !11953, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !11962)
!11953 = !DISubroutineType(types: !11954)
!11954 = !{!103, !11955, !154, !22}
!11955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11956, size: 32)
!11956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11957)
!11957 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1649, line: 37, baseType: !11958)
!11958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1649, line: 32, size: 64, elements: !11959)
!11959 = !{!11960, !11961}
!11960 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11958, file: !1649, line: 34, baseType: !121, size: 32)
!11961 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11958, file: !1649, line: 36, baseType: !121, size: 32, offset: 32)
!11962 = !{!11963, !11964, !11965, !11966, !11967, !11968, !11969, !11970, !11972}
!11963 = !DILocalVariable(name: "pins", arg: 1, scope: !11952, file: !1901, line: 193, type: !11955)
!11964 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11952, file: !1901, line: 193, type: !154)
!11965 = !DILocalVariable(name: "reg", arg: 3, scope: !11952, file: !1901, line: 194, type: !22)
!11966 = !DILocalVariable(name: "pin", scope: !11952, file: !1901, line: 196, type: !121)
!11967 = !DILocalVariable(name: "mux", scope: !11952, file: !1901, line: 196, type: !121)
!11968 = !DILocalVariable(name: "pin_cgf", scope: !11952, file: !1901, line: 197, type: !121)
!11969 = !DILocalVariable(name: "ret", scope: !11952, file: !1901, line: 198, type: !103)
!11970 = !DILocalVariable(name: "i", scope: !11971, file: !1901, line: 209, type: !154)
!11971 = distinct !DILexicalBlock(scope: !11952, file: !1901, line: 209, column: 2)
!11972 = !DILocalVariable(name: "gpio_out", scope: !11973, file: !1901, line: 239, type: !121)
!11973 = distinct !DILexicalBlock(scope: !11974, file: !1901, line: 238, column: 55)
!11974 = distinct !DILexicalBlock(scope: !11975, file: !1901, line: 238, column: 14)
!11975 = distinct !DILexicalBlock(scope: !11976, file: !1901, line: 236, column: 14)
!11976 = distinct !DILexicalBlock(scope: !11977, file: !1901, line: 234, column: 7)
!11977 = distinct !DILexicalBlock(scope: !11978, file: !1901, line: 209, column: 41)
!11978 = distinct !DILexicalBlock(scope: !11971, file: !1901, line: 209, column: 2)
!11979 = !DILocation(line: 0, scope: !11952)
!11980 = !DILocation(line: 0, scope: !11971)
!11981 = !DILocation(line: 209, column: 25, scope: !11978)
!11982 = !DILocation(line: 209, column: 2, scope: !11971)
!11983 = distinct !{!11983, !11982, !11984}
!11984 = !DILocation(line: 259, column: 2, scope: !11971)
!11985 = !DILocation(line: 210, column: 17, scope: !11977)
!11986 = !DILocation(line: 234, column: 7, scope: !11976)
!11987 = !DILocation(line: 234, column: 33, scope: !11976)
!11988 = !DILocation(line: 234, column: 7, scope: !11977)
!11989 = !DILocation(line: 235, column: 22, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11976, file: !1901, line: 234, column: 49)
!11991 = !DILocation(line: 235, column: 29, scope: !11990)
!11992 = !DILocation(line: 236, column: 3, scope: !11990)
!11993 = !DILocation(line: 236, column: 14, scope: !11976)
!11994 = !DILocation(line: 239, column: 32, scope: !11973)
!11995 = !DILocation(line: 0, scope: !11973)
!11996 = !DILocation(line: 241, column: 8, scope: !11973)
!11997 = !DILocation(line: 246, column: 3, scope: !11973)
!11998 = !DILocation(line: 252, column: 9, scope: !11977)
!11999 = !DILocation(line: 255, column: 9, scope: !11977)
!12000 = !DILocation(line: 256, column: 11, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11977, file: !1901, line: 256, column: 7)
!12002 = !DILocation(line: 209, column: 37, scope: !11978)
!12003 = !DILocation(line: 256, column: 7, scope: !11977)
!12004 = !DILocation(line: 262, column: 1, scope: !11952)
!12005 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1901, file: !1901, line: 176, type: !12006, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12008)
!12006 = !DISubroutineType(types: !12007)
!12007 = !{!103, !121, !121, !121}
!12008 = !{!12009, !12010, !12011, !12012}
!12009 = !DILocalVariable(name: "pin", arg: 1, scope: !12005, file: !1901, line: 176, type: !121)
!12010 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12005, file: !1901, line: 176, type: !121)
!12011 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12005, file: !1901, line: 176, type: !121)
!12012 = !DILocalVariable(name: "port_device", scope: !12005, file: !1901, line: 178, type: !1831)
!12013 = !DILocation(line: 0, scope: !12005)
!12014 = !DILocation(line: 180, column: 22, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12005, file: !1901, line: 180, column: 6)
!12016 = !DILocation(line: 180, column: 6, scope: !12005)
!12017 = !DILocation(line: 180, column: 6, scope: !12015)
!12018 = !DILocation(line: 184, column: 16, scope: !12005)
!12019 = !DILocation(line: 186, column: 19, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12005, file: !1901, line: 186, column: 6)
!12021 = !DILocation(line: 186, column: 28, scope: !12020)
!12022 = !DILocation(line: 186, column: 33, scope: !12020)
!12023 = !DILocation(line: 186, column: 6, scope: !12005)
!12024 = !DILocation(line: 190, column: 43, scope: !12005)
!12025 = !DILocation(line: 190, column: 9, scope: !12005)
!12026 = !DILocation(line: 190, column: 2, scope: !12005)
!12027 = !DILocation(line: 191, column: 1, scope: !12005)
!12028 = distinct !DISubprogram(name: "device_is_ready", scope: !6665, file: !6665, line: 47, type: !12029, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12031)
!12029 = !DISubroutineType(types: !12030)
!12030 = !{!157, !1831}
!12031 = !{!12032}
!12032 = !DILocalVariable(name: "dev", arg: 1, scope: !12028, file: !6665, line: 47, type: !1831)
!12033 = !DILocation(line: 0, scope: !12028)
!12034 = !DILocation(line: 55, column: 2, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12028, file: !6665, line: 55, column: 2)
!12036 = !{i64 2149429956}
!12037 = !DILocation(line: 56, column: 9, scope: !12028)
!12038 = !DILocation(line: 56, column: 2, scope: !12028)
!12039 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !12029, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12040)
!12040 = !{!12041}
!12041 = !DILocalVariable(name: "dev", arg: 1, scope: !12039, file: !141, line: 730, type: !1831)
!12042 = !DILocation(line: 0, scope: !12039)
!12043 = !DILocation(line: 732, column: 9, scope: !12039)
!12044 = !DILocation(line: 732, column: 2, scope: !12039)
!12045 = distinct !DISubprogram(name: "SystemInit", scope: !1949, file: !1949, line: 167, type: !3244, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1909, retainedNodes: !461)
!12046 = !DILocation(line: 182, column: 1, scope: !12045)
!12047 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1949, file: !1949, line: 220, type: !3244, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1909, retainedNodes: !12048)
!12048 = !{!12049, !12050, !12051, !12052, !12053}
!12049 = !DILocalVariable(name: "tmp", scope: !12047, file: !1949, line: 222, type: !121)
!12050 = !DILocalVariable(name: "pllvco", scope: !12047, file: !1949, line: 222, type: !121)
!12051 = !DILocalVariable(name: "pllp", scope: !12047, file: !1949, line: 222, type: !121)
!12052 = !DILocalVariable(name: "pllsource", scope: !12047, file: !1949, line: 222, type: !121)
!12053 = !DILocalVariable(name: "pllm", scope: !12047, file: !1949, line: 222, type: !121)
!12054 = !DILocation(line: 0, scope: !12047)
!12055 = !DILocation(line: 225, column: 14, scope: !12047)
!12056 = !DILocation(line: 225, column: 19, scope: !12047)
!12057 = !DILocation(line: 227, column: 3, scope: !12047)
!12058 = !DILocation(line: 234, column: 7, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12047, file: !1949, line: 228, column: 3)
!12060 = !DILocation(line: 240, column: 25, scope: !12059)
!12061 = !DILocation(line: 241, column: 19, scope: !12059)
!12062 = !DILocation(line: 241, column: 27, scope: !12059)
!12063 = !DILocation(line: 243, column: 21, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12059, file: !1949, line: 243, column: 11)
!12065 = !DILocation(line: 0, scope: !12064)
!12066 = !DILocation(line: 254, column: 22, scope: !12059)
!12067 = !DILocation(line: 254, column: 62, scope: !12059)
!12068 = !DILocation(line: 255, column: 31, scope: !12059)
!12069 = !DILocation(line: 256, column: 7, scope: !12059)
!12070 = !DILocation(line: 0, scope: !12059)
!12071 = !DILocation(line: 263, column: 30, scope: !12047)
!12072 = !DILocation(line: 263, column: 52, scope: !12047)
!12073 = !DILocation(line: 263, column: 9, scope: !12047)
!12074 = !DILocation(line: 265, column: 19, scope: !12047)
!12075 = !DILocation(line: 266, column: 1, scope: !12047)
!12076 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12077, file: !12077, line: 200, type: !12078, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !461)
!12077 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12078 = !DISubroutineType(types: !12079)
!12079 = !{!12080}
!12080 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3061, line: 44, baseType: !3060)
!12081 = !DILocation(line: 202, column: 3, scope: !12076)
!12082 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12077, file: !12077, line: 219, type: !12083, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12107)
!12083 = !DISubroutineType(types: !12084)
!12084 = !{!12080, !12085}
!12085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12086, size: 32)
!12086 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12087, line: 70, baseType: !12088)
!12087 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12088 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12087, line: 49, size: 384, elements: !12089)
!12089 = !{!12090, !12091, !12092, !12093, !12094, !12095, !12096}
!12090 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12088, file: !12087, line: 51, baseType: !121, size: 32)
!12091 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12088, file: !12087, line: 54, baseType: !121, size: 32, offset: 32)
!12092 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12088, file: !12087, line: 57, baseType: !121, size: 32, offset: 64)
!12093 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12088, file: !12087, line: 60, baseType: !121, size: 32, offset: 96)
!12094 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12088, file: !12087, line: 63, baseType: !121, size: 32, offset: 128)
!12095 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12088, file: !12087, line: 66, baseType: !121, size: 32, offset: 160)
!12096 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12088, file: !12087, line: 69, baseType: !12097, size: 192, offset: 192)
!12097 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12098, line: 73, baseType: !12099)
!12098 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12099 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12098, line: 45, size: 192, elements: !12100)
!12100 = !{!12101, !12102, !12103, !12104, !12105, !12106}
!12101 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12099, file: !12098, line: 47, baseType: !121, size: 32)
!12102 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12099, file: !12098, line: 50, baseType: !121, size: 32, offset: 32)
!12103 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12099, file: !12098, line: 53, baseType: !121, size: 32, offset: 64)
!12104 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12099, file: !12098, line: 56, baseType: !121, size: 32, offset: 96)
!12105 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12099, file: !12098, line: 60, baseType: !121, size: 32, offset: 128)
!12106 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12099, file: !12098, line: 63, baseType: !121, size: 32, offset: 160)
!12107 = !{!12108, !12109, !12110, !12111, !12115}
!12108 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12082, file: !12077, line: 219, type: !12085)
!12109 = !DILocalVariable(name: "tickstart", scope: !12082, file: !12077, line: 221, type: !121)
!12110 = !DILocalVariable(name: "pll_config", scope: !12082, file: !12077, line: 221, type: !121)
!12111 = !DILocalVariable(name: "pwrclkchanged", scope: !12112, file: !12077, line: 391, type: !12114)
!12112 = distinct !DILexicalBlock(scope: !12113, file: !12077, line: 390, column: 3)
!12113 = distinct !DILexicalBlock(scope: !12082, file: !12077, line: 389, column: 6)
!12114 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !792, line: 188, baseType: !3067)
!12115 = !DILocalVariable(name: "tmpreg", scope: !12116, file: !12077, line: 400, type: !120)
!12116 = distinct !DILexicalBlock(scope: !12117, file: !12077, line: 400, column: 7)
!12117 = distinct !DILexicalBlock(scope: !12118, file: !12077, line: 399, column: 5)
!12118 = distinct !DILexicalBlock(scope: !12112, file: !12077, line: 398, column: 8)
!12119 = !DILocation(line: 0, scope: !12082)
!12120 = !DILocation(line: 224, column: 24, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12082, file: !12077, line: 224, column: 6)
!12122 = !DILocation(line: 224, column: 6, scope: !12082)
!12123 = !DILocation(line: 232, column: 27, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12082, file: !12077, line: 232, column: 6)
!12125 = !DILocation(line: 232, column: 43, scope: !12124)
!12126 = !DILocation(line: 232, column: 69, scope: !12124)
!12127 = !DILocation(line: 232, column: 6, scope: !12082)
!12128 = !DILocation(line: 237, column: 9, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !12077, line: 237, column: 8)
!12130 = distinct !DILexicalBlock(scope: !12124, file: !12077, line: 233, column: 3)
!12131 = !DILocation(line: 237, column: 39, scope: !12129)
!12132 = !DILocation(line: 237, column: 60, scope: !12129)
!12133 = !DILocation(line: 238, column: 9, scope: !12129)
!12134 = !DILocation(line: 238, column: 39, scope: !12129)
!12135 = !DILocation(line: 238, column: 60, scope: !12129)
!12136 = !DILocation(line: 238, column: 70, scope: !12129)
!12137 = !DILocation(line: 238, column: 78, scope: !12129)
!12138 = !DILocation(line: 238, column: 100, scope: !12129)
!12139 = !DILocation(line: 237, column: 8, scope: !12130)
!12140 = !DILocation(line: 240, column: 11, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12142, file: !12077, line: 240, column: 10)
!12142 = distinct !DILexicalBlock(scope: !12129, file: !12077, line: 239, column: 5)
!12143 = !DILocation(line: 240, column: 57, scope: !12141)
!12144 = !DILocation(line: 240, column: 80, scope: !12141)
!12145 = !DILocation(line: 240, column: 89, scope: !12141)
!12146 = !DILocation(line: 240, column: 10, scope: !12142)
!12147 = !DILocation(line: 248, column: 7, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12149, file: !12077, line: 248, column: 7)
!12149 = distinct !DILexicalBlock(scope: !12150, file: !12077, line: 248, column: 7)
!12150 = distinct !DILexicalBlock(scope: !12129, file: !12077, line: 246, column: 5)
!12151 = !DILocation(line: 248, column: 7, scope: !12149)
!12152 = !DILocation(line: 248, column: 7, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12148, file: !12077, line: 248, column: 7)
!12154 = !DILocation(line: 248, column: 7, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12156, file: !12077, line: 248, column: 7)
!12156 = distinct !DILexicalBlock(scope: !12148, file: !12077, line: 248, column: 7)
!12157 = !DILocation(line: 248, column: 7, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12156, file: !12077, line: 248, column: 7)
!12159 = !DILocation(line: 0, scope: !12148)
!12160 = !DILocation(line: 251, column: 30, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12150, file: !12077, line: 251, column: 10)
!12162 = !DILocation(line: 251, column: 40, scope: !12161)
!12163 = !DILocation(line: 0, scope: !12161)
!12164 = !DILocation(line: 251, column: 10, scope: !12150)
!12165 = !DILocation(line: 257, column: 15, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12161, file: !12077, line: 252, column: 7)
!12167 = !DILocation(line: 257, column: 51, scope: !12166)
!12168 = !DILocation(line: 257, column: 9, scope: !12166)
!12169 = !DILocation(line: 259, column: 15, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12171, file: !12077, line: 259, column: 14)
!12171 = distinct !DILexicalBlock(scope: !12166, file: !12077, line: 258, column: 9)
!12172 = !DILocation(line: 259, column: 29, scope: !12170)
!12173 = !DILocation(line: 259, column: 43, scope: !12170)
!12174 = !DILocation(line: 259, column: 14, scope: !12171)
!12175 = distinct !{!12175, !12168, !12176}
!12176 = !DILocation(line: 263, column: 9, scope: !12166)
!12177 = !DILocation(line: 271, column: 15, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12161, file: !12077, line: 266, column: 7)
!12179 = !DILocation(line: 271, column: 9, scope: !12178)
!12180 = !DILocation(line: 273, column: 15, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12182, file: !12077, line: 273, column: 14)
!12182 = distinct !DILexicalBlock(scope: !12178, file: !12077, line: 272, column: 9)
!12183 = !DILocation(line: 273, column: 29, scope: !12181)
!12184 = !DILocation(line: 273, column: 43, scope: !12181)
!12185 = !DILocation(line: 273, column: 14, scope: !12182)
!12186 = distinct !{!12186, !12179, !12187}
!12187 = !DILocation(line: 277, column: 9, scope: !12178)
!12188 = !DILocation(line: 282, column: 27, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12082, file: !12077, line: 282, column: 6)
!12190 = !DILocation(line: 282, column: 43, scope: !12189)
!12191 = !DILocation(line: 282, column: 69, scope: !12189)
!12192 = !DILocation(line: 282, column: 6, scope: !12082)
!12193 = !DILocation(line: 289, column: 9, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12195, file: !12077, line: 289, column: 8)
!12195 = distinct !DILexicalBlock(scope: !12189, file: !12077, line: 283, column: 3)
!12196 = !DILocation(line: 289, column: 39, scope: !12194)
!12197 = !DILocation(line: 289, column: 60, scope: !12194)
!12198 = !DILocation(line: 290, column: 9, scope: !12194)
!12199 = !DILocation(line: 290, column: 39, scope: !12194)
!12200 = !DILocation(line: 290, column: 60, scope: !12194)
!12201 = !DILocation(line: 290, column: 70, scope: !12194)
!12202 = !DILocation(line: 290, column: 78, scope: !12194)
!12203 = !DILocation(line: 290, column: 100, scope: !12194)
!12204 = !DILocation(line: 289, column: 8, scope: !12195)
!12205 = !DILocation(line: 293, column: 11, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12207, file: !12077, line: 293, column: 10)
!12207 = distinct !DILexicalBlock(scope: !12194, file: !12077, line: 291, column: 5)
!12208 = !DILocation(line: 293, column: 57, scope: !12206)
!12209 = !DILocation(line: 293, column: 80, scope: !12206)
!12210 = !DILocation(line: 293, column: 89, scope: !12206)
!12211 = !DILocation(line: 293, column: 10, scope: !12207)
!12212 = !DILocation(line: 307, column: 30, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12214, file: !12077, line: 307, column: 10)
!12214 = distinct !DILexicalBlock(scope: !12194, file: !12077, line: 305, column: 5)
!12215 = !DILocation(line: 307, column: 39, scope: !12213)
!12216 = !DILocation(line: 307, column: 10, scope: !12214)
!12217 = !DILocation(line: 310, column: 9, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12213, file: !12077, line: 308, column: 7)
!12219 = !DILocation(line: 313, column: 21, scope: !12218)
!12220 = !DILocation(line: 316, column: 9, scope: !12218)
!12221 = !DILocation(line: 316, column: 15, scope: !12218)
!12222 = !DILocation(line: 316, column: 51, scope: !12218)
!12223 = !DILocation(line: 318, column: 15, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12225, file: !12077, line: 318, column: 14)
!12225 = distinct !DILexicalBlock(scope: !12218, file: !12077, line: 317, column: 9)
!12226 = !DILocation(line: 318, column: 29, scope: !12224)
!12227 = !DILocation(line: 318, column: 43, scope: !12224)
!12228 = !DILocation(line: 318, column: 14, scope: !12225)
!12229 = distinct !{!12229, !12220, !12230}
!12230 = !DILocation(line: 322, column: 9, scope: !12218)
!12231 = !DILocation(line: 330, column: 9, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12213, file: !12077, line: 328, column: 7)
!12233 = !DILocation(line: 333, column: 21, scope: !12232)
!12234 = !DILocation(line: 336, column: 9, scope: !12232)
!12235 = !DILocation(line: 336, column: 15, scope: !12232)
!12236 = !DILocation(line: 338, column: 15, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12238, file: !12077, line: 338, column: 14)
!12238 = distinct !DILexicalBlock(scope: !12232, file: !12077, line: 337, column: 9)
!12239 = !DILocation(line: 338, column: 29, scope: !12237)
!12240 = !DILocation(line: 338, column: 43, scope: !12237)
!12241 = !DILocation(line: 338, column: 14, scope: !12238)
!12242 = distinct !{!12242, !12234, !12243}
!12243 = !DILocation(line: 342, column: 9, scope: !12232)
!12244 = !DILocation(line: 0, scope: !12194)
!12245 = !DILocation(line: 347, column: 27, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12082, file: !12077, line: 347, column: 6)
!12247 = !DILocation(line: 347, column: 43, scope: !12246)
!12248 = !DILocation(line: 347, column: 69, scope: !12246)
!12249 = !DILocation(line: 347, column: 6, scope: !12082)
!12250 = !DILocation(line: 353, column: 28, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12252, file: !12077, line: 353, column: 8)
!12252 = distinct !DILexicalBlock(scope: !12246, file: !12077, line: 348, column: 3)
!12253 = !DILocation(line: 353, column: 37, scope: !12251)
!12254 = !DILocation(line: 353, column: 8, scope: !12252)
!12255 = !DILocation(line: 356, column: 7, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12251, file: !12077, line: 354, column: 5)
!12257 = !DILocation(line: 359, column: 19, scope: !12256)
!12258 = !DILocation(line: 362, column: 7, scope: !12256)
!12259 = !DILocation(line: 362, column: 13, scope: !12256)
!12260 = !DILocation(line: 362, column: 49, scope: !12256)
!12261 = !DILocation(line: 364, column: 13, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12263, file: !12077, line: 364, column: 12)
!12263 = distinct !DILexicalBlock(scope: !12256, file: !12077, line: 363, column: 7)
!12264 = !DILocation(line: 364, column: 27, scope: !12262)
!12265 = !DILocation(line: 364, column: 41, scope: !12262)
!12266 = !DILocation(line: 364, column: 12, scope: !12263)
!12267 = distinct !{!12267, !12258, !12268}
!12268 = !DILocation(line: 368, column: 7, scope: !12256)
!12269 = !DILocation(line: 373, column: 7, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12251, file: !12077, line: 371, column: 5)
!12271 = !DILocation(line: 376, column: 19, scope: !12270)
!12272 = !DILocation(line: 379, column: 7, scope: !12270)
!12273 = !DILocation(line: 379, column: 13, scope: !12270)
!12274 = !DILocation(line: 381, column: 13, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12276, file: !12077, line: 381, column: 12)
!12276 = distinct !DILexicalBlock(scope: !12270, file: !12077, line: 380, column: 7)
!12277 = !DILocation(line: 381, column: 27, scope: !12275)
!12278 = !DILocation(line: 381, column: 41, scope: !12275)
!12279 = !DILocation(line: 381, column: 12, scope: !12276)
!12280 = distinct !{!12280, !12272, !12281}
!12281 = !DILocation(line: 385, column: 7, scope: !12270)
!12282 = !DILocation(line: 389, column: 27, scope: !12113)
!12283 = !DILocation(line: 389, column: 43, scope: !12113)
!12284 = !DILocation(line: 389, column: 69, scope: !12113)
!12285 = !DILocation(line: 389, column: 6, scope: !12082)
!12286 = !DILocation(line: 0, scope: !12112)
!12287 = !DILocation(line: 398, column: 8, scope: !12118)
!12288 = !DILocation(line: 398, column: 8, scope: !12112)
!12289 = !DILocation(line: 400, column: 7, scope: !12116)
!12290 = !DILocation(line: 400, column: 7, scope: !12117)
!12291 = !DILocation(line: 402, column: 5, scope: !12117)
!12292 = !DILocation(line: 404, column: 8, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12112, file: !12077, line: 404, column: 8)
!12294 = !DILocation(line: 404, column: 8, scope: !12112)
!12295 = !DILocation(line: 407, column: 7, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12293, file: !12077, line: 405, column: 5)
!12297 = !DILocation(line: 410, column: 19, scope: !12296)
!12298 = !DILocation(line: 412, column: 7, scope: !12296)
!12299 = !DILocation(line: 412, column: 13, scope: !12296)
!12300 = !DILocation(line: 414, column: 13, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12302, file: !12077, line: 414, column: 12)
!12302 = distinct !DILexicalBlock(scope: !12296, file: !12077, line: 413, column: 7)
!12303 = !DILocation(line: 414, column: 27, scope: !12301)
!12304 = !DILocation(line: 414, column: 40, scope: !12301)
!12305 = !DILocation(line: 414, column: 12, scope: !12302)
!12306 = distinct !{!12306, !12298, !12307}
!12307 = !DILocation(line: 418, column: 7, scope: !12296)
!12308 = !DILocation(line: 422, column: 5, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12310, file: !12077, line: 422, column: 5)
!12310 = distinct !DILexicalBlock(scope: !12112, file: !12077, line: 422, column: 5)
!12311 = !DILocation(line: 422, column: 5, scope: !12310)
!12312 = !DILocation(line: 422, column: 5, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12309, file: !12077, line: 422, column: 5)
!12314 = !DILocation(line: 422, column: 5, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12316, file: !12077, line: 422, column: 5)
!12316 = distinct !DILexicalBlock(scope: !12309, file: !12077, line: 422, column: 5)
!12317 = !DILocation(line: 422, column: 5, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12316, file: !12077, line: 422, column: 5)
!12319 = !DILocation(line: 0, scope: !12309)
!12320 = !DILocation(line: 424, column: 28, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12112, file: !12077, line: 424, column: 8)
!12322 = !DILocation(line: 424, column: 38, scope: !12321)
!12323 = !DILocation(line: 0, scope: !12321)
!12324 = !DILocation(line: 424, column: 8, scope: !12112)
!12325 = !DILocation(line: 430, column: 13, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12321, file: !12077, line: 425, column: 5)
!12327 = !DILocation(line: 430, column: 49, scope: !12326)
!12328 = !DILocation(line: 430, column: 7, scope: !12326)
!12329 = !DILocation(line: 432, column: 13, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12331, file: !12077, line: 432, column: 12)
!12331 = distinct !DILexicalBlock(scope: !12326, file: !12077, line: 431, column: 7)
!12332 = !DILocation(line: 432, column: 27, scope: !12330)
!12333 = !DILocation(line: 432, column: 41, scope: !12330)
!12334 = !DILocation(line: 432, column: 12, scope: !12331)
!12335 = distinct !{!12335, !12328, !12336}
!12336 = !DILocation(line: 436, column: 7, scope: !12326)
!12337 = !DILocation(line: 444, column: 13, scope: !12338)
!12338 = distinct !DILexicalBlock(scope: !12321, file: !12077, line: 439, column: 5)
!12339 = !DILocation(line: 444, column: 7, scope: !12338)
!12340 = !DILocation(line: 446, column: 13, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12342, file: !12077, line: 446, column: 12)
!12342 = distinct !DILexicalBlock(scope: !12338, file: !12077, line: 445, column: 7)
!12343 = !DILocation(line: 446, column: 27, scope: !12341)
!12344 = !DILocation(line: 446, column: 41, scope: !12341)
!12345 = !DILocation(line: 446, column: 12, scope: !12342)
!12346 = distinct !{!12346, !12339, !12347}
!12347 = !DILocation(line: 450, column: 7, scope: !12338)
!12348 = !DILocation(line: 454, column: 8, scope: !12112)
!12349 = !DILocation(line: 456, column: 7, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12351, file: !12077, line: 455, column: 5)
!12351 = distinct !DILexicalBlock(scope: !12112, file: !12077, line: 454, column: 8)
!12352 = !DILocation(line: 457, column: 5, scope: !12350)
!12353 = !DILocation(line: 462, column: 31, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12082, file: !12077, line: 462, column: 7)
!12355 = !DILocation(line: 462, column: 41, scope: !12354)
!12356 = !DILocation(line: 462, column: 7, scope: !12082)
!12357 = !DILocation(line: 465, column: 8, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12359, file: !12077, line: 465, column: 8)
!12359 = distinct !DILexicalBlock(scope: !12354, file: !12077, line: 463, column: 3)
!12360 = !DILocation(line: 465, column: 38, scope: !12358)
!12361 = !DILocation(line: 465, column: 8, scope: !12359)
!12362 = !DILocation(line: 467, column: 44, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12364, file: !12077, line: 467, column: 10)
!12364 = distinct !DILexicalBlock(scope: !12358, file: !12077, line: 466, column: 5)
!12365 = !DILocation(line: 0, scope: !12363)
!12366 = !DILocation(line: 467, column: 10, scope: !12364)
!12367 = !DILocation(line: 483, column: 15, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12363, file: !12077, line: 468, column: 7)
!12369 = !DILocation(line: 483, column: 9, scope: !12368)
!12370 = !DILocation(line: 485, column: 15, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12372, file: !12077, line: 485, column: 14)
!12372 = distinct !DILexicalBlock(scope: !12368, file: !12077, line: 484, column: 9)
!12373 = !DILocation(line: 485, column: 29, scope: !12371)
!12374 = !DILocation(line: 485, column: 43, scope: !12371)
!12375 = !DILocation(line: 485, column: 14, scope: !12372)
!12376 = distinct !{!12376, !12369, !12377}
!12377 = !DILocation(line: 489, column: 9, scope: !12368)
!12378 = !DILocation(line: 492, column: 9, scope: !12368)
!12379 = !DILocation(line: 498, column: 9, scope: !12368)
!12380 = !DILocation(line: 501, column: 21, scope: !12368)
!12381 = !DILocation(line: 504, column: 9, scope: !12368)
!12382 = !DILocation(line: 504, column: 15, scope: !12368)
!12383 = !DILocation(line: 504, column: 51, scope: !12368)
!12384 = !DILocation(line: 506, column: 15, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12386, file: !12077, line: 506, column: 14)
!12386 = distinct !DILexicalBlock(scope: !12368, file: !12077, line: 505, column: 9)
!12387 = !DILocation(line: 506, column: 29, scope: !12385)
!12388 = !DILocation(line: 506, column: 43, scope: !12385)
!12389 = !DILocation(line: 506, column: 14, scope: !12386)
!12390 = distinct !{!12390, !12381, !12391}
!12391 = !DILocation(line: 510, column: 9, scope: !12368)
!12392 = !DILocation(line: 521, column: 15, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12363, file: !12077, line: 513, column: 7)
!12394 = !DILocation(line: 521, column: 9, scope: !12393)
!12395 = !DILocation(line: 523, column: 15, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12397, file: !12077, line: 523, column: 14)
!12397 = distinct !DILexicalBlock(scope: !12393, file: !12077, line: 522, column: 9)
!12398 = !DILocation(line: 523, column: 29, scope: !12396)
!12399 = !DILocation(line: 523, column: 43, scope: !12396)
!12400 = !DILocation(line: 523, column: 14, scope: !12397)
!12401 = distinct !{!12401, !12394, !12402}
!12402 = !DILocation(line: 527, column: 9, scope: !12393)
!12403 = !DILocation(line: 533, column: 44, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12405, file: !12077, line: 533, column: 10)
!12405 = distinct !DILexicalBlock(scope: !12358, file: !12077, line: 531, column: 5)
!12406 = !DILocation(line: 533, column: 10, scope: !12405)
!12407 = !DILocation(line: 540, column: 27, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12404, file: !12077, line: 538, column: 7)
!12409 = !DILocation(line: 551, column: 14, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12408, file: !12077, line: 550, column: 13)
!12411 = !DILocation(line: 551, column: 81, scope: !12410)
!12412 = !DILocation(line: 551, column: 55, scope: !12410)
!12413 = !DILocation(line: 551, column: 92, scope: !12410)
!12414 = !DILocation(line: 552, column: 14, scope: !12410)
!12415 = !DILocation(line: 552, column: 80, scope: !12410)
!12416 = !DILocation(line: 552, column: 53, scope: !12410)
!12417 = !DILocation(line: 552, column: 111, scope: !12410)
!12418 = !DILocation(line: 553, column: 14, scope: !12410)
!12419 = !DILocation(line: 553, column: 80, scope: !12410)
!12420 = !DILocation(line: 553, column: 86, scope: !12410)
!12421 = !DILocation(line: 553, column: 53, scope: !12410)
!12422 = !DILocation(line: 553, column: 111, scope: !12410)
!12423 = !DILocation(line: 554, column: 14, scope: !12410)
!12424 = !DILocation(line: 554, column: 82, scope: !12410)
!12425 = !DILocation(line: 554, column: 101, scope: !12410)
!12426 = !DILocation(line: 554, column: 53, scope: !12410)
!12427 = !DILocation(line: 554, column: 126, scope: !12410)
!12428 = !DILocation(line: 555, column: 14, scope: !12410)
!12429 = !DILocation(line: 555, column: 80, scope: !12410)
!12430 = !DILocation(line: 555, column: 85, scope: !12410)
!12431 = !DILocation(line: 555, column: 53, scope: !12410)
!12432 = !DILocation(line: 550, column: 13, scope: !12408)
!12433 = !DILocation(line: 563, column: 3, scope: !12082)
!12434 = !DILocation(line: 564, column: 1, scope: !12082)
!12435 = !DISubprogram(name: "HAL_GetTick", scope: !12436, file: !12436, line: 234, type: !6905, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!12436 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12437 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12077, file: !12077, line: 591, type: !12438, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12449)
!12438 = !DISubroutineType(types: !12439)
!12439 = !{!12080, !12440, !121}
!12440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12441, size: 32)
!12441 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12087, line: 92, baseType: !12442)
!12442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12087, line: 75, size: 160, elements: !12443)
!12443 = !{!12444, !12445, !12446, !12447, !12448}
!12444 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12442, file: !12087, line: 77, baseType: !121, size: 32)
!12445 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12442, file: !12087, line: 80, baseType: !121, size: 32, offset: 32)
!12446 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12442, file: !12087, line: 83, baseType: !121, size: 32, offset: 64)
!12447 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12442, file: !12087, line: 86, baseType: !121, size: 32, offset: 96)
!12448 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12442, file: !12087, line: 89, baseType: !121, size: 32, offset: 128)
!12449 = !{!12450, !12451, !12452}
!12450 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12437, file: !12077, line: 591, type: !12440)
!12451 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12437, file: !12077, line: 591, type: !121)
!12452 = !DILocalVariable(name: "tickstart", scope: !12437, file: !12077, line: 593, type: !121)
!12453 = !DILocation(line: 0, scope: !12437)
!12454 = !DILocation(line: 596, column: 24, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12437, file: !12077, line: 596, column: 6)
!12456 = !DILocation(line: 596, column: 6, scope: !12437)
!12457 = !DILocation(line: 610, column: 17, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12437, file: !12077, line: 610, column: 6)
!12459 = !DILocation(line: 610, column: 15, scope: !12458)
!12460 = !DILocation(line: 610, column: 6, scope: !12437)
!12461 = !DILocation(line: 613, column: 5, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12458, file: !12077, line: 611, column: 3)
!12463 = !DILocation(line: 617, column: 8, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12462, file: !12077, line: 617, column: 8)
!12465 = !DILocation(line: 617, column: 34, scope: !12464)
!12466 = !DILocation(line: 617, column: 8, scope: !12462)
!12467 = !DILocation(line: 624, column: 27, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12437, file: !12077, line: 624, column: 6)
!12469 = !DILocation(line: 624, column: 38, scope: !12468)
!12470 = !DILocation(line: 624, column: 60, scope: !12468)
!12471 = !DILocation(line: 624, column: 6, scope: !12437)
!12472 = !DILocation(line: 628, column: 40, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12474, file: !12077, line: 628, column: 8)
!12474 = distinct !DILexicalBlock(scope: !12468, file: !12077, line: 625, column: 3)
!12475 = !DILocation(line: 628, column: 63, scope: !12473)
!12476 = !DILocation(line: 628, column: 8, scope: !12474)
!12477 = !DILocation(line: 630, column: 7, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12473, file: !12077, line: 629, column: 5)
!12479 = !DILocation(line: 633, column: 29, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12474, file: !12077, line: 633, column: 8)
!12481 = !DILocation(line: 631, column: 5, scope: !12478)
!12482 = !DILocation(line: 633, column: 40, scope: !12480)
!12483 = !DILocation(line: 633, column: 63, scope: !12480)
!12484 = !DILocation(line: 633, column: 8, scope: !12474)
!12485 = !DILocation(line: 635, column: 7, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12480, file: !12077, line: 634, column: 5)
!12487 = !DILocation(line: 636, column: 5, scope: !12486)
!12488 = !DILocation(line: 639, column: 5, scope: !12474)
!12489 = !DILocation(line: 643, column: 27, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12437, file: !12077, line: 643, column: 6)
!12491 = !DILocation(line: 640, column: 3, scope: !12474)
!12492 = !DILocation(line: 643, column: 38, scope: !12490)
!12493 = !DILocation(line: 643, column: 62, scope: !12490)
!12494 = !DILocation(line: 643, column: 6, scope: !12437)
!12495 = !DILocation(line: 648, column: 27, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12497, file: !12077, line: 648, column: 8)
!12497 = distinct !DILexicalBlock(scope: !12490, file: !12077, line: 644, column: 3)
!12498 = !DILocation(line: 648, column: 8, scope: !12497)
!12499 = !DILocation(line: 651, column: 10, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12501, file: !12077, line: 651, column: 10)
!12501 = distinct !DILexicalBlock(scope: !12496, file: !12077, line: 649, column: 5)
!12502 = !DILocation(line: 651, column: 46, scope: !12500)
!12503 = !DILocation(line: 651, column: 10, scope: !12501)
!12504 = !DILocation(line: 661, column: 10, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12506, file: !12077, line: 661, column: 10)
!12506 = distinct !DILexicalBlock(scope: !12507, file: !12077, line: 659, column: 5)
!12507 = distinct !DILexicalBlock(scope: !12496, file: !12077, line: 657, column: 13)
!12508 = !DILocation(line: 661, column: 46, scope: !12505)
!12509 = !DILocation(line: 661, column: 10, scope: !12506)
!12510 = !DILocation(line: 670, column: 10, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12512, file: !12077, line: 670, column: 10)
!12512 = distinct !DILexicalBlock(scope: !12507, file: !12077, line: 668, column: 5)
!12513 = !DILocation(line: 670, column: 46, scope: !12511)
!12514 = !DILocation(line: 670, column: 10, scope: !12512)
!12515 = !DILocation(line: 676, column: 5, scope: !12497)
!12516 = !DILocation(line: 679, column: 17, scope: !12497)
!12517 = !DILocation(line: 681, column: 5, scope: !12497)
!12518 = !DILocation(line: 681, column: 12, scope: !12497)
!12519 = !DILocation(line: 681, column: 65, scope: !12497)
!12520 = !DILocation(line: 681, column: 78, scope: !12497)
!12521 = !DILocation(line: 681, column: 42, scope: !12497)
!12522 = !DILocation(line: 683, column: 12, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12524, file: !12077, line: 683, column: 11)
!12524 = distinct !DILexicalBlock(scope: !12497, file: !12077, line: 682, column: 5)
!12525 = !DILocation(line: 683, column: 26, scope: !12523)
!12526 = !DILocation(line: 683, column: 39, scope: !12523)
!12527 = !DILocation(line: 683, column: 11, scope: !12524)
!12528 = distinct !{!12528, !12517, !12529}
!12529 = !DILocation(line: 687, column: 5, scope: !12497)
!12530 = !DILocation(line: 691, column: 17, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12437, file: !12077, line: 691, column: 6)
!12532 = !DILocation(line: 691, column: 15, scope: !12531)
!12533 = !DILocation(line: 691, column: 6, scope: !12437)
!12534 = !DILocation(line: 694, column: 5, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12531, file: !12077, line: 692, column: 3)
!12536 = !DILocation(line: 698, column: 8, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12535, file: !12077, line: 698, column: 8)
!12538 = !DILocation(line: 698, column: 34, scope: !12537)
!12539 = !DILocation(line: 698, column: 8, scope: !12535)
!12540 = !DILocation(line: 705, column: 27, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12437, file: !12077, line: 705, column: 6)
!12542 = !DILocation(line: 705, column: 38, scope: !12541)
!12543 = !DILocation(line: 705, column: 61, scope: !12541)
!12544 = !DILocation(line: 705, column: 6, scope: !12437)
!12545 = !DILocation(line: 708, column: 5, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12541, file: !12077, line: 706, column: 3)
!12547 = !DILocation(line: 712, column: 27, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12437, file: !12077, line: 712, column: 6)
!12549 = !DILocation(line: 709, column: 3, scope: !12546)
!12550 = !DILocation(line: 712, column: 38, scope: !12548)
!12551 = !DILocation(line: 712, column: 61, scope: !12548)
!12552 = !DILocation(line: 712, column: 6, scope: !12437)
!12553 = !DILocation(line: 715, column: 5, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12548, file: !12077, line: 713, column: 3)
!12555 = !DILocation(line: 716, column: 3, scope: !12554)
!12556 = !DILocation(line: 719, column: 21, scope: !12437)
!12557 = !DILocation(line: 719, column: 70, scope: !12437)
!12558 = !DILocation(line: 719, column: 91, scope: !12437)
!12559 = !DILocation(line: 719, column: 50, scope: !12437)
!12560 = !DILocation(line: 719, column: 47, scope: !12437)
!12561 = !DILocation(line: 719, column: 19, scope: !12437)
!12562 = !DILocation(line: 722, column: 17, scope: !12437)
!12563 = !DILocation(line: 722, column: 3, scope: !12437)
!12564 = !DILocation(line: 724, column: 3, scope: !12437)
!12565 = !DILocation(line: 725, column: 1, scope: !12437)
!12566 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12077, file: !12077, line: 885, type: !6905, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12567)
!12567 = !{!12568, !12569, !12570, !12571}
!12568 = !DILocalVariable(name: "pllm", scope: !12566, file: !12077, line: 887, type: !121)
!12569 = !DILocalVariable(name: "pllvco", scope: !12566, file: !12077, line: 887, type: !121)
!12570 = !DILocalVariable(name: "pllp", scope: !12566, file: !12077, line: 887, type: !121)
!12571 = !DILocalVariable(name: "sysclockfreq", scope: !12566, file: !12077, line: 888, type: !121)
!12572 = !DILocation(line: 0, scope: !12566)
!12573 = !DILocation(line: 891, column: 16, scope: !12566)
!12574 = !DILocation(line: 891, column: 21, scope: !12566)
!12575 = !DILocation(line: 891, column: 3, scope: !12566)
!12576 = !DILocation(line: 901, column: 7, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12578, file: !12077, line: 899, column: 5)
!12578 = distinct !DILexicalBlock(scope: !12566, file: !12077, line: 892, column: 3)
!12579 = !DILocation(line: 907, column: 19, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12578, file: !12077, line: 904, column: 5)
!12581 = !DILocation(line: 907, column: 27, scope: !12580)
!12582 = !DILocation(line: 908, column: 10, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12580, file: !12077, line: 908, column: 10)
!12584 = !DILocation(line: 908, column: 40, scope: !12583)
!12585 = !DILocation(line: 0, scope: !12583)
!12586 = !DILocation(line: 918, column: 23, scope: !12580)
!12587 = !DILocation(line: 918, column: 82, scope: !12580)
!12588 = !DILocation(line: 920, column: 28, scope: !12580)
!12589 = !DILocation(line: 921, column: 7, scope: !12580)
!12590 = !DILocation(line: 0, scope: !12578)
!12591 = !DILocation(line: 929, column: 3, scope: !12566)
!12592 = !DISubprogram(name: "HAL_InitTick", scope: !12436, file: !12436, line: 223, type: !12593, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!12593 = !DISubroutineType(types: !12594)
!12594 = !{!12080, !121}
!12595 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12077, file: !12077, line: 775, type: !12596, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12598)
!12596 = !DISubroutineType(types: !12597)
!12597 = !{null, !121, !121, !121}
!12598 = !{!12599, !12600, !12601, !12602, !12612, !12616}
!12599 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12595, file: !12077, line: 775, type: !121)
!12600 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12595, file: !12077, line: 775, type: !121)
!12601 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12595, file: !12077, line: 775, type: !121)
!12602 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12595, file: !12077, line: 777, type: !12603)
!12603 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12604, line: 62, baseType: !12605)
!12604 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12604, line: 46, size: 160, elements: !12606)
!12606 = !{!12607, !12608, !12609, !12610, !12611}
!12607 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12605, file: !12604, line: 48, baseType: !121, size: 32)
!12608 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12605, file: !12604, line: 51, baseType: !121, size: 32, offset: 32)
!12609 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12605, file: !12604, line: 54, baseType: !121, size: 32, offset: 64)
!12610 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12605, file: !12604, line: 57, baseType: !121, size: 32, offset: 96)
!12611 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12605, file: !12604, line: 60, baseType: !121, size: 32, offset: 128)
!12612 = !DILocalVariable(name: "tmpreg", scope: !12613, file: !12077, line: 787, type: !120)
!12613 = distinct !DILexicalBlock(scope: !12614, file: !12077, line: 787, column: 5)
!12614 = distinct !DILexicalBlock(scope: !12615, file: !12077, line: 783, column: 3)
!12615 = distinct !DILexicalBlock(scope: !12595, file: !12077, line: 782, column: 6)
!12616 = !DILocalVariable(name: "tmpreg", scope: !12617, file: !12077, line: 811, type: !120)
!12617 = distinct !DILexicalBlock(scope: !12618, file: !12077, line: 811, column: 5)
!12618 = distinct !DILexicalBlock(scope: !12615, file: !12077, line: 807, column: 3)
!12619 = !DILocation(line: 0, scope: !12595)
!12620 = !DILocation(line: 777, column: 3, scope: !12595)
!12621 = !DILocation(line: 777, column: 20, scope: !12595)
!12622 = !DILocation(line: 782, column: 15, scope: !12615)
!12623 = !DILocation(line: 782, column: 6, scope: !12595)
!12624 = !DILocation(line: 787, column: 5, scope: !12613)
!12625 = !DILocation(line: 787, column: 5, scope: !12614)
!12626 = !DILocation(line: 790, column: 21, scope: !12614)
!12627 = !DILocation(line: 790, column: 25, scope: !12614)
!12628 = !DILocation(line: 791, column: 21, scope: !12614)
!12629 = !DILocation(line: 791, column: 26, scope: !12614)
!12630 = !DILocation(line: 792, column: 21, scope: !12614)
!12631 = !DILocation(line: 792, column: 27, scope: !12614)
!12632 = !DILocation(line: 793, column: 21, scope: !12614)
!12633 = !DILocation(line: 793, column: 26, scope: !12614)
!12634 = !DILocation(line: 794, column: 21, scope: !12614)
!12635 = !DILocation(line: 794, column: 31, scope: !12614)
!12636 = !DILocation(line: 795, column: 5, scope: !12614)
!12637 = !DILocation(line: 798, column: 5, scope: !12614)
!12638 = !DILocation(line: 804, column: 3, scope: !12614)
!12639 = !DILocation(line: 811, column: 5, scope: !12617)
!12640 = !DILocation(line: 811, column: 5, scope: !12618)
!12641 = !DILocation(line: 814, column: 21, scope: !12618)
!12642 = !DILocation(line: 814, column: 25, scope: !12618)
!12643 = !DILocation(line: 815, column: 21, scope: !12618)
!12644 = !DILocation(line: 815, column: 26, scope: !12618)
!12645 = !DILocation(line: 816, column: 21, scope: !12618)
!12646 = !DILocation(line: 816, column: 27, scope: !12618)
!12647 = !DILocation(line: 817, column: 21, scope: !12618)
!12648 = !DILocation(line: 817, column: 26, scope: !12618)
!12649 = !DILocation(line: 818, column: 21, scope: !12618)
!12650 = !DILocation(line: 818, column: 31, scope: !12618)
!12651 = !DILocation(line: 819, column: 5, scope: !12618)
!12652 = !DILocation(line: 822, column: 5, scope: !12618)
!12653 = !DILocation(line: 0, scope: !12615)
!12654 = !DILocation(line: 830, column: 1, scope: !12595)
!12655 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12604, file: !12604, line: 224, type: !12656, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!12656 = !DISubroutineType(types: !12657)
!12657 = !{null, !3128, !12658}
!12658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12603, size: 32)
!12659 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12077, file: !12077, line: 841, type: !3244, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !461)
!12660 = !DILocation(line: 843, column: 38, scope: !12659)
!12661 = !DILocation(line: 844, column: 1, scope: !12659)
!12662 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12077, file: !12077, line: 850, type: !3244, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !461)
!12663 = !DILocation(line: 852, column: 38, scope: !12662)
!12664 = !DILocation(line: 853, column: 1, scope: !12662)
!12665 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12077, file: !12077, line: 941, type: !6905, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !461)
!12666 = !DILocation(line: 943, column: 10, scope: !12665)
!12667 = !DILocation(line: 943, column: 3, scope: !12665)
!12668 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12077, file: !12077, line: 952, type: !6905, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !461)
!12669 = !DILocation(line: 955, column: 11, scope: !12668)
!12670 = !DILocation(line: 955, column: 56, scope: !12668)
!12671 = !DILocation(line: 955, column: 78, scope: !12668)
!12672 = !DILocation(line: 955, column: 36, scope: !12668)
!12673 = !DILocation(line: 955, column: 33, scope: !12668)
!12674 = !DILocation(line: 955, column: 3, scope: !12668)
!12675 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12077, file: !12077, line: 964, type: !6905, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !461)
!12676 = !DILocation(line: 967, column: 11, scope: !12675)
!12677 = !DILocation(line: 967, column: 55, scope: !12675)
!12678 = !DILocation(line: 967, column: 77, scope: !12675)
!12679 = !DILocation(line: 967, column: 35, scope: !12675)
!12680 = !DILocation(line: 967, column: 32, scope: !12675)
!12681 = !DILocation(line: 967, column: 3, scope: !12675)
!12682 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12077, file: !12077, line: 977, type: !12683, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12685)
!12683 = !DISubroutineType(types: !12684)
!12684 = !{null, !12085}
!12685 = !{!12686}
!12686 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12682, file: !12077, line: 977, type: !12085)
!12687 = !DILocation(line: 0, scope: !12682)
!12688 = !DILocation(line: 980, column: 22, scope: !12682)
!12689 = !DILocation(line: 980, column: 37, scope: !12682)
!12690 = !DILocation(line: 983, column: 12, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12682, file: !12077, line: 983, column: 6)
!12692 = !DILocation(line: 983, column: 15, scope: !12691)
!12693 = !DILocation(line: 983, column: 31, scope: !12691)
!12694 = !DILocation(line: 983, column: 6, scope: !12682)
!12695 = !DILocation(line: 985, column: 24, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12691, file: !12077, line: 984, column: 3)
!12697 = !DILocation(line: 985, column: 33, scope: !12696)
!12698 = !DILocation(line: 986, column: 3, scope: !12696)
!12699 = !DILocation(line: 987, column: 17, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12691, file: !12077, line: 987, column: 11)
!12701 = !DILocation(line: 987, column: 20, scope: !12700)
!12702 = !DILocation(line: 987, column: 35, scope: !12700)
!12703 = !DILocation(line: 0, scope: !12700)
!12704 = !DILocation(line: 987, column: 11, scope: !12691)
!12705 = !DILocation(line: 989, column: 33, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12700, file: !12077, line: 988, column: 3)
!12707 = !DILocation(line: 990, column: 3, scope: !12706)
!12708 = !DILocation(line: 993, column: 33, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12700, file: !12077, line: 992, column: 3)
!12710 = !DILocation(line: 997, column: 12, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12682, file: !12077, line: 997, column: 6)
!12712 = !DILocation(line: 997, column: 15, scope: !12711)
!12713 = !DILocation(line: 1003, column: 24, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12711, file: !12077, line: 1002, column: 3)
!12715 = !DILocation(line: 1003, column: 33, scope: !12714)
!12716 = !DILocation(line: 1006, column: 61, scope: !12682)
!12717 = !DILocation(line: 1006, column: 81, scope: !12682)
!12718 = !DILocation(line: 1006, column: 22, scope: !12682)
!12719 = !DILocation(line: 1006, column: 42, scope: !12682)
!12720 = !DILocation(line: 1009, column: 12, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12682, file: !12077, line: 1009, column: 6)
!12722 = !DILocation(line: 1009, column: 17, scope: !12721)
!12723 = !DILocation(line: 1009, column: 35, scope: !12721)
!12724 = !DILocation(line: 1009, column: 6, scope: !12682)
!12725 = !DILocation(line: 1011, column: 24, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12721, file: !12077, line: 1010, column: 3)
!12727 = !DILocation(line: 1011, column: 33, scope: !12726)
!12728 = !DILocation(line: 1012, column: 3, scope: !12726)
!12729 = !DILocation(line: 1013, column: 17, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12721, file: !12077, line: 1013, column: 11)
!12731 = !DILocation(line: 1013, column: 22, scope: !12730)
!12732 = !DILocation(line: 1013, column: 39, scope: !12730)
!12733 = !DILocation(line: 0, scope: !12730)
!12734 = !DILocation(line: 1013, column: 11, scope: !12721)
!12735 = !DILocation(line: 1015, column: 33, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12730, file: !12077, line: 1014, column: 3)
!12737 = !DILocation(line: 1016, column: 3, scope: !12736)
!12738 = !DILocation(line: 1019, column: 33, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12730, file: !12077, line: 1018, column: 3)
!12740 = !DILocation(line: 1023, column: 12, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12682, file: !12077, line: 1023, column: 6)
!12742 = !DILocation(line: 1023, column: 16, scope: !12741)
!12743 = !DILocation(line: 1029, column: 24, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12741, file: !12077, line: 1028, column: 3)
!12745 = !DILocation(line: 1029, column: 33, scope: !12744)
!12746 = !DILocation(line: 1033, column: 12, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12682, file: !12077, line: 1033, column: 6)
!12748 = !DILocation(line: 1033, column: 15, scope: !12747)
!12749 = !DILocation(line: 1033, column: 30, scope: !12747)
!12750 = !DILocation(line: 1033, column: 6, scope: !12682)
!12751 = !DILocation(line: 1039, column: 28, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12747, file: !12077, line: 1038, column: 3)
!12753 = !DILocation(line: 1039, column: 37, scope: !12752)
!12754 = !DILocation(line: 1041, column: 54, scope: !12682)
!12755 = !DILocation(line: 1041, column: 62, scope: !12682)
!12756 = !DILocation(line: 1041, column: 26, scope: !12682)
!12757 = !DILocation(line: 1041, column: 36, scope: !12682)
!12758 = !DILocation(line: 1042, column: 49, scope: !12682)
!12759 = !DILocation(line: 1042, column: 57, scope: !12682)
!12760 = !DILocation(line: 1042, column: 26, scope: !12682)
!12761 = !DILocation(line: 1042, column: 31, scope: !12682)
!12762 = !DILocation(line: 1043, column: 50, scope: !12682)
!12763 = !DILocation(line: 1043, column: 78, scope: !12682)
!12764 = !DILocation(line: 1043, column: 26, scope: !12682)
!12765 = !DILocation(line: 1043, column: 31, scope: !12682)
!12766 = !DILocation(line: 1044, column: 52, scope: !12682)
!12767 = !DILocation(line: 1044, column: 102, scope: !12682)
!12768 = !DILocation(line: 1044, column: 109, scope: !12682)
!12769 = !DILocation(line: 1044, column: 26, scope: !12682)
!12770 = !DILocation(line: 1044, column: 31, scope: !12682)
!12771 = !DILocation(line: 1045, column: 50, scope: !12682)
!12772 = !DILocation(line: 1045, column: 78, scope: !12682)
!12773 = !DILocation(line: 1045, column: 26, scope: !12682)
!12774 = !DILocation(line: 1045, column: 31, scope: !12682)
!12775 = !DILocation(line: 1046, column: 1, scope: !12682)
!12776 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12077, file: !12077, line: 1056, type: !12777, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12779)
!12777 = !DISubroutineType(types: !12778)
!12778 = !{null, !12440, !845}
!12779 = !{!12780, !12781}
!12780 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12776, file: !12077, line: 1056, type: !12440)
!12781 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12776, file: !12077, line: 1056, type: !845)
!12782 = !DILocation(line: 0, scope: !12776)
!12783 = !DILocation(line: 1059, column: 22, scope: !12776)
!12784 = !DILocation(line: 1059, column: 32, scope: !12776)
!12785 = !DILocation(line: 1062, column: 53, scope: !12776)
!12786 = !DILocation(line: 1062, column: 58, scope: !12776)
!12787 = !DILocation(line: 1062, column: 22, scope: !12776)
!12788 = !DILocation(line: 1062, column: 35, scope: !12776)
!12789 = !DILocation(line: 1065, column: 54, scope: !12776)
!12790 = !DILocation(line: 1065, column: 59, scope: !12776)
!12791 = !DILocation(line: 1065, column: 22, scope: !12776)
!12792 = !DILocation(line: 1065, column: 36, scope: !12776)
!12793 = !DILocation(line: 1068, column: 55, scope: !12776)
!12794 = !DILocation(line: 1068, column: 60, scope: !12776)
!12795 = !DILocation(line: 1068, column: 22, scope: !12776)
!12796 = !DILocation(line: 1068, column: 37, scope: !12776)
!12797 = !DILocation(line: 1071, column: 56, scope: !12776)
!12798 = !DILocation(line: 1071, column: 79, scope: !12776)
!12799 = !DILocation(line: 1071, column: 22, scope: !12776)
!12800 = !DILocation(line: 1071, column: 37, scope: !12776)
!12801 = !DILocation(line: 1074, column: 34, scope: !12776)
!12802 = !DILocation(line: 1074, column: 38, scope: !12776)
!12803 = !DILocation(line: 1074, column: 14, scope: !12776)
!12804 = !DILocation(line: 1075, column: 1, scope: !12776)
!12805 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12077, file: !12077, line: 1082, type: !3244, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !461)
!12806 = !DILocation(line: 1085, column: 6, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12805, file: !12077, line: 1085, column: 6)
!12808 = !DILocation(line: 1085, column: 6, scope: !12805)
!12809 = !DILocation(line: 1088, column: 5, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12807, file: !12077, line: 1086, column: 3)
!12811 = !DILocation(line: 1091, column: 5, scope: !12810)
!12812 = !DILocation(line: 1092, column: 3, scope: !12810)
!12813 = !DILocation(line: 1093, column: 1, scope: !12805)
!12814 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12077, file: !12077, line: 1099, type: !3244, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !461)
!12815 = !DILocation(line: 1104, column: 1, scope: !12814)
!12816 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12817, file: !12817, line: 257, type: !6915, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12818)
!12817 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12818 = !{!12819}
!12819 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12816, file: !12817, line: 257, type: !121)
!12820 = !DILocation(line: 0, scope: !12816)
!12821 = !DILocation(line: 260, column: 3, scope: !12816)
!12822 = !DILocation(line: 261, column: 1, scope: !12816)
!12823 = distinct !DISubprogram(name: "LL_InitTick", scope: !12824, file: !12824, line: 260, type: !10108, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12825)
!12824 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12825 = !{!12826, !12827}
!12826 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12823, file: !12824, line: 260, type: !121)
!12827 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12823, file: !12824, line: 260, type: !121)
!12828 = !DILocation(line: 0, scope: !12823)
!12829 = !DILocation(line: 263, column: 46, scope: !12823)
!12830 = !DILocation(line: 263, column: 55, scope: !12823)
!12831 = !DILocation(line: 263, column: 18, scope: !12823)
!12832 = !DILocation(line: 264, column: 18, scope: !12823)
!12833 = !DILocation(line: 265, column: 18, scope: !12823)
!12834 = !DILocation(line: 267, column: 1, scope: !12823)
!12835 = distinct !DISubprogram(name: "LL_mDelay", scope: !12817, file: !12817, line: 273, type: !6915, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12836)
!12836 = !{!12837, !12838}
!12837 = !DILocalVariable(name: "Delay", arg: 1, scope: !12835, file: !12817, line: 273, type: !121)
!12838 = !DILocalVariable(name: "tmp", scope: !12835, file: !12817, line: 275, type: !120)
!12839 = !DILocation(line: 0, scope: !12835)
!12840 = !DILocation(line: 275, column: 3, scope: !12835)
!12841 = !DILocation(line: 275, column: 18, scope: !12835)
!12842 = !DILocation(line: 275, column: 33, scope: !12835)
!12843 = !DILocation(line: 277, column: 10, scope: !12835)
!12844 = !DILocation(line: 280, column: 12, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12835, file: !12817, line: 280, column: 6)
!12846 = !DILocation(line: 285, column: 3, scope: !12835)
!12847 = !DILocation(line: 287, column: 18, scope: !12848)
!12848 = distinct !DILexicalBlock(scope: !12849, file: !12817, line: 287, column: 8)
!12849 = distinct !DILexicalBlock(scope: !12835, file: !12817, line: 286, column: 3)
!12850 = !DILocation(line: 292, column: 1, scope: !12835)
!12851 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12817, file: !12817, line: 323, type: !6915, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12852)
!12852 = !{!12853}
!12853 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12851, file: !12817, line: 323, type: !121)
!12854 = !DILocation(line: 0, scope: !12851)
!12855 = !DILocation(line: 326, column: 19, scope: !12851)
!12856 = !DILocation(line: 327, column: 1, scope: !12851)
!12857 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12817, file: !12817, line: 338, type: !12858, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12861)
!12858 = !DISubroutineType(types: !12859)
!12859 = !{!12860, !121}
!12860 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !792, line: 201, baseType: !791)
!12861 = !{!12862, !12863, !12864, !12865, !12866}
!12862 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12857, file: !12817, line: 338, type: !121)
!12863 = !DILocalVariable(name: "timeout", scope: !12857, file: !12817, line: 340, type: !121)
!12864 = !DILocalVariable(name: "getlatency", scope: !12857, file: !12817, line: 341, type: !121)
!12865 = !DILocalVariable(name: "latency", scope: !12857, file: !12817, line: 342, type: !121)
!12866 = !DILocalVariable(name: "status", scope: !12857, file: !12817, line: 343, type: !12860)
!12867 = !DILocation(line: 0, scope: !12857)
!12868 = !DILocation(line: 347, column: 21, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12857, file: !12817, line: 347, column: 6)
!12870 = !DILocation(line: 347, column: 6, scope: !12857)
!12871 = !DILocation(line: 353, column: 8, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12873, file: !12817, line: 353, column: 8)
!12873 = distinct !DILexicalBlock(scope: !12869, file: !12817, line: 352, column: 3)
!12874 = !DILocation(line: 353, column: 40, scope: !12872)
!12875 = !DILocation(line: 353, column: 8, scope: !12873)
!12876 = !DILocation(line: 356, column: 26, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12878, file: !12817, line: 356, column: 10)
!12878 = distinct !DILexicalBlock(scope: !12872, file: !12817, line: 354, column: 5)
!12879 = !DILocation(line: 356, column: 55, scope: !12877)
!12880 = !DILocation(line: 362, column: 55, scope: !12881)
!12881 = distinct !DILexicalBlock(scope: !12878, file: !12817, line: 362, column: 10)
!12882 = !DILocation(line: 368, column: 55, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12878, file: !12817, line: 368, column: 10)
!12884 = !DILocation(line: 374, column: 26, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !12878, file: !12817, line: 374, column: 10)
!12886 = !DILocation(line: 374, column: 55, scope: !12885)
!12887 = !DILocation(line: 380, column: 28, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12889, file: !12817, line: 380, column: 12)
!12889 = distinct !DILexicalBlock(scope: !12885, file: !12817, line: 379, column: 7)
!12890 = !DILocation(line: 380, column: 57, scope: !12888)
!12891 = !DILocation(line: 387, column: 8, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12873, file: !12817, line: 387, column: 8)
!12893 = !DILocation(line: 387, column: 40, scope: !12892)
!12894 = !DILocation(line: 387, column: 8, scope: !12873)
!12895 = !DILocation(line: 396, column: 26, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12897, file: !12817, line: 396, column: 10)
!12897 = distinct !DILexicalBlock(scope: !12892, file: !12817, line: 388, column: 5)
!12898 = !DILocation(line: 396, column: 55, scope: !12896)
!12899 = !DILocation(line: 402, column: 26, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12897, file: !12817, line: 402, column: 10)
!12901 = !DILocation(line: 402, column: 55, scope: !12900)
!12902 = !DILocation(line: 407, column: 26, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12897, file: !12817, line: 407, column: 10)
!12904 = !DILocation(line: 407, column: 55, scope: !12903)
!12905 = !DILocation(line: 413, column: 28, scope: !12906)
!12906 = distinct !DILexicalBlock(scope: !12907, file: !12817, line: 413, column: 12)
!12907 = distinct !DILexicalBlock(scope: !12903, file: !12817, line: 412, column: 7)
!12908 = !DILocation(line: 413, column: 57, scope: !12906)
!12909 = !DILocation(line: 0, scope: !12873)
!12910 = !DILocation(line: 444, column: 5, scope: !12873)
!12911 = !DILocation(line: 448, column: 5, scope: !12873)
!12912 = !DILocation(line: 451, column: 18, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12873, file: !12817, line: 449, column: 5)
!12914 = !DILocation(line: 452, column: 12, scope: !12913)
!12915 = !DILocation(line: 453, column: 26, scope: !12873)
!12916 = !DILocation(line: 453, column: 38, scope: !12873)
!12917 = !DILocation(line: 453, column: 5, scope: !12913)
!12918 = distinct !{!12918, !12911, !12919}
!12919 = !DILocation(line: 453, column: 54, scope: !12873)
!12920 = !DILocation(line: 0, scope: !12869)
!12921 = !DILocation(line: 464, column: 3, scope: !12857)
!12922 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12923, file: !12923, line: 519, type: !6905, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !461)
!12923 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12924 = !DILocation(line: 521, column: 21, scope: !12922)
!12925 = !DILocation(line: 521, column: 3, scope: !12922)
!12926 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5825, file: !5825, line: 1543, type: !6915, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12927)
!12927 = !{!12928}
!12928 = !DILocalVariable(name: "Latency", arg: 1, scope: !12926, file: !5825, line: 1543, type: !121)
!12929 = !DILocation(line: 0, scope: !12926)
!12930 = !DILocation(line: 1545, column: 3, scope: !12926)
!12931 = !DILocation(line: 1546, column: 1, scope: !12926)
!12932 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5825, file: !5825, line: 1569, type: !6905, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !461)
!12933 = !DILocation(line: 1571, column: 21, scope: !12932)
!12934 = !DILocation(line: 1571, column: 3, scope: !12932)
!12935 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12817, file: !12817, line: 483, type: !12936, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12952)
!12936 = !DISubroutineType(types: !12937)
!12937 = !{!12860, !12938, !12945}
!12938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12939, size: 32)
!12939 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12824, line: 114, baseType: !12940)
!12940 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12824, line: 94, size: 96, elements: !12941)
!12941 = !{!12942, !12943, !12944}
!12942 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12940, file: !12824, line: 96, baseType: !121, size: 32)
!12943 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12940, file: !12824, line: 102, baseType: !121, size: 32, offset: 32)
!12944 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12940, file: !12824, line: 109, baseType: !121, size: 32, offset: 64)
!12945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12946, size: 32)
!12946 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12824, line: 139, baseType: !12947)
!12947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12824, line: 119, size: 96, elements: !12948)
!12948 = !{!12949, !12950, !12951}
!12949 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12947, file: !12824, line: 121, baseType: !121, size: 32)
!12950 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12947, file: !12824, line: 127, baseType: !121, size: 32, offset: 32)
!12951 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12947, file: !12824, line: 133, baseType: !121, size: 32, offset: 64)
!12952 = !{!12953, !12954, !12955, !12956}
!12953 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12935, file: !12817, line: 483, type: !12938)
!12954 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12935, file: !12817, line: 484, type: !12945)
!12955 = !DILocalVariable(name: "status", scope: !12935, file: !12817, line: 486, type: !12860)
!12956 = !DILocalVariable(name: "pllfreq", scope: !12935, file: !12817, line: 487, type: !121)
!12957 = !DILocation(line: 0, scope: !12935)
!12958 = !DILocation(line: 490, column: 6, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12935, file: !12817, line: 490, column: 6)
!12960 = !DILocation(line: 490, column: 25, scope: !12959)
!12961 = !DILocation(line: 490, column: 6, scope: !12935)
!12962 = !DILocation(line: 493, column: 15, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12959, file: !12817, line: 491, column: 3)
!12964 = !DILocation(line: 496, column: 8, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12963, file: !12817, line: 496, column: 8)
!12966 = !DILocation(line: 496, column: 29, scope: !12965)
!12967 = !DILocation(line: 496, column: 8, scope: !12963)
!12968 = !DILocation(line: 498, column: 7, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12965, file: !12817, line: 497, column: 5)
!12970 = !DILocation(line: 499, column: 7, scope: !12969)
!12971 = !DILocation(line: 499, column: 14, scope: !12969)
!12972 = !DILocation(line: 499, column: 35, scope: !12969)
!12973 = distinct !{!12973, !12970, !12974}
!12974 = !DILocation(line: 502, column: 7, scope: !12969)
!12975 = !DILocation(line: 506, column: 76, scope: !12963)
!12976 = !DILocation(line: 506, column: 103, scope: !12963)
!12977 = !DILocation(line: 507, column: 54, scope: !12963)
!12978 = !DILocation(line: 506, column: 5, scope: !12963)
!12979 = !DILocation(line: 510, column: 14, scope: !12963)
!12980 = !DILocation(line: 511, column: 3, scope: !12963)
!12981 = !DILocation(line: 0, scope: !12959)
!12982 = !DILocation(line: 518, column: 3, scope: !12935)
!12983 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12817, file: !12817, line: 642, type: !12984, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12986)
!12984 = !DISubroutineType(types: !12985)
!12985 = !{!12860}
!12986 = !{!12987}
!12987 = !DILocalVariable(name: "status", scope: !12983, file: !12817, line: 644, type: !12860)
!12988 = !DILocation(line: 0, scope: !12983)
!12989 = !DILocation(line: 647, column: 6, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12983, file: !12817, line: 647, column: 6)
!12991 = !DILocation(line: 647, column: 27, scope: !12990)
!12992 = !DILocation(line: 663, column: 6, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12983, file: !12817, line: 663, column: 6)
!12994 = !DILocation(line: 663, column: 30, scope: !12993)
!12995 = !DILocation(line: 663, column: 6, scope: !12983)
!12996 = !DILocation(line: 669, column: 3, scope: !12983)
!12997 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12817, file: !12817, line: 611, type: !12998, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !13000)
!12998 = !DISubroutineType(types: !12999)
!12999 = !{!121, !121, !12938}
!13000 = !{!13001, !13002, !13003}
!13001 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12997, file: !12817, line: 611, type: !121)
!13002 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12997, file: !12817, line: 611, type: !12938)
!13003 = !DILocalVariable(name: "pllfreq", scope: !12997, file: !12817, line: 613, type: !121)
!13004 = !DILocation(line: 0, scope: !12997)
!13005 = !DILocation(line: 622, column: 56, scope: !12997)
!13006 = !DILocation(line: 622, column: 61, scope: !12997)
!13007 = !DILocation(line: 622, column: 32, scope: !12997)
!13008 = !DILocation(line: 626, column: 45, scope: !12997)
!13009 = !DILocation(line: 626, column: 50, scope: !12997)
!13010 = !DILocation(line: 626, column: 21, scope: !12997)
!13011 = !DILocation(line: 630, column: 47, scope: !12997)
!13012 = !DILocation(line: 630, column: 82, scope: !12997)
!13013 = !DILocation(line: 630, column: 21, scope: !12997)
!13014 = !DILocation(line: 633, column: 3, scope: !12997)
!13015 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8858, file: !8858, line: 3007, type: !6905, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !461)
!13016 = !DILocation(line: 3009, column: 11, scope: !13015)
!13017 = !DILocation(line: 3009, column: 44, scope: !13015)
!13018 = !DILocation(line: 3009, column: 3, scope: !13015)
!13019 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8858, file: !8858, line: 2987, type: !3244, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !461)
!13020 = !DILocation(line: 2989, column: 3, scope: !13019)
!13021 = !DILocation(line: 2990, column: 1, scope: !13019)
!13022 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8858, file: !8858, line: 4304, type: !8992, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !13023)
!13023 = !{!13024, !13025, !13026, !13027}
!13024 = !DILocalVariable(name: "Source", arg: 1, scope: !13022, file: !8858, line: 4304, type: !121)
!13025 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13022, file: !8858, line: 4304, type: !121)
!13026 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13022, file: !8858, line: 4304, type: !121)
!13027 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13022, file: !8858, line: 4304, type: !121)
!13028 = !DILocation(line: 0, scope: !13022)
!13029 = !DILocation(line: 4306, column: 3, scope: !13022)
!13030 = !DILocation(line: 4308, column: 3, scope: !13022)
!13031 = !DILocation(line: 4312, column: 1, scope: !13022)
!13032 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12817, file: !12817, line: 681, type: !13033, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !13035)
!13033 = !DISubroutineType(types: !13034)
!13034 = !{!12860, !121, !12945}
!13035 = !{!13036, !13037, !13038, !13039}
!13036 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13032, file: !12817, line: 681, type: !121)
!13037 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13032, file: !12817, line: 681, type: !12945)
!13038 = !DILocalVariable(name: "status", scope: !13032, file: !12817, line: 683, type: !12860)
!13039 = !DILocalVariable(name: "hclk_frequency", scope: !13032, file: !12817, line: 684, type: !121)
!13040 = !DILocation(line: 0, scope: !13032)
!13041 = !DILocation(line: 691, column: 20, scope: !13032)
!13042 = !DILocation(line: 694, column: 6, scope: !13043)
!13043 = distinct !DILexicalBlock(scope: !13032, file: !12817, line: 694, column: 6)
!13044 = !DILocation(line: 694, column: 22, scope: !13043)
!13045 = !DILocation(line: 694, column: 6, scope: !13032)
!13046 = !DILocation(line: 697, column: 14, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13043, file: !12817, line: 695, column: 3)
!13048 = !DILocation(line: 701, column: 13, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13032, file: !12817, line: 701, column: 6)
!13050 = !DILocation(line: 701, column: 6, scope: !13032)
!13051 = !DILocation(line: 704, column: 5, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13049, file: !12817, line: 702, column: 3)
!13053 = !DILocation(line: 705, column: 5, scope: !13052)
!13054 = !DILocation(line: 705, column: 12, scope: !13052)
!13055 = !DILocation(line: 705, column: 33, scope: !13052)
!13056 = distinct !{!13056, !13053, !13057}
!13057 = !DILocation(line: 708, column: 5, scope: !13052)
!13058 = !DILocation(line: 711, column: 49, scope: !13052)
!13059 = !DILocation(line: 711, column: 5, scope: !13052)
!13060 = !DILocation(line: 712, column: 5, scope: !13052)
!13061 = !DILocation(line: 713, column: 5, scope: !13052)
!13062 = !DILocation(line: 713, column: 12, scope: !13052)
!13063 = !DILocation(line: 713, column: 37, scope: !13052)
!13064 = distinct !{!13064, !13061, !13065}
!13065 = !DILocation(line: 716, column: 5, scope: !13052)
!13066 = !DILocation(line: 719, column: 50, scope: !13052)
!13067 = !DILocation(line: 719, column: 5, scope: !13052)
!13068 = !DILocation(line: 720, column: 50, scope: !13052)
!13069 = !DILocation(line: 720, column: 5, scope: !13052)
!13070 = !DILocation(line: 721, column: 3, scope: !13052)
!13071 = !DILocation(line: 724, column: 6, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13032, file: !12817, line: 724, column: 6)
!13073 = !DILocation(line: 724, column: 22, scope: !13072)
!13074 = !DILocation(line: 724, column: 6, scope: !13032)
!13075 = !DILocation(line: 727, column: 14, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13072, file: !12817, line: 725, column: 3)
!13077 = !DILocation(line: 728, column: 3, scope: !13076)
!13078 = !DILocation(line: 731, column: 13, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13032, file: !12817, line: 731, column: 6)
!13080 = !DILocation(line: 731, column: 6, scope: !13032)
!13081 = !DILocation(line: 733, column: 5, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13079, file: !12817, line: 732, column: 3)
!13083 = !DILocation(line: 734, column: 3, scope: !13082)
!13084 = !DILocation(line: 736, column: 3, scope: !13032)
!13085 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8858, file: !8858, line: 4184, type: !3244, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !461)
!13086 = !DILocation(line: 4186, column: 3, scope: !13085)
!13087 = !DILocation(line: 4187, column: 1, scope: !13085)
!13088 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8858, file: !8858, line: 4205, type: !6905, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !461)
!13089 = !DILocation(line: 4207, column: 11, scope: !13088)
!13090 = !DILocation(line: 4207, column: 44, scope: !13088)
!13091 = !DILocation(line: 4207, column: 3, scope: !13088)
!13092 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8858, file: !8858, line: 3224, type: !6915, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !13093)
!13093 = !{!13094}
!13094 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13092, file: !8858, line: 3224, type: !121)
!13095 = !DILocation(line: 0, scope: !13092)
!13096 = !DILocation(line: 3226, column: 3, scope: !13092)
!13097 = !DILocation(line: 3227, column: 1, scope: !13092)
!13098 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8858, file: !8858, line: 3188, type: !6915, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !13099)
!13099 = !{!13100}
!13100 = !DILocalVariable(name: "Source", arg: 1, scope: !13098, file: !8858, line: 3188, type: !121)
!13101 = !DILocation(line: 0, scope: !13098)
!13102 = !DILocation(line: 3190, column: 3, scope: !13098)
!13103 = !DILocation(line: 3191, column: 1, scope: !13098)
!13104 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8858, file: !8858, line: 3204, type: !6905, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !461)
!13105 = !DILocation(line: 3206, column: 21, scope: !13104)
!13106 = !DILocation(line: 3206, column: 3, scope: !13104)
!13107 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8858, file: !8858, line: 3240, type: !6915, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !13108)
!13108 = !{!13109}
!13109 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13107, file: !8858, line: 3240, type: !121)
!13110 = !DILocation(line: 0, scope: !13107)
!13111 = !DILocation(line: 3242, column: 3, scope: !13107)
!13112 = !DILocation(line: 3243, column: 1, scope: !13107)
!13113 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8858, file: !8858, line: 3256, type: !6915, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !13114)
!13114 = !{!13115}
!13115 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13113, file: !8858, line: 3256, type: !121)
!13116 = !DILocation(line: 0, scope: !13113)
!13117 = !DILocation(line: 3258, column: 3, scope: !13113)
!13118 = !DILocation(line: 3259, column: 1, scope: !13113)
!13119 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8858, file: !8858, line: 5153, type: !6905, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !461)
!13120 = !DILocation(line: 5155, column: 11, scope: !13119)
!13121 = !DILocation(line: 5155, column: 47, scope: !13119)
!13122 = !DILocation(line: 5155, column: 3, scope: !13119)
!13123 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12817, file: !12817, line: 540, type: !13124, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !13126)
!13124 = !DISubroutineType(types: !13125)
!13125 = !{!12860, !121, !121, !12938, !12945}
!13126 = !{!13127, !13128, !13129, !13130, !13131, !13132}
!13127 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13123, file: !12817, line: 540, type: !121)
!13128 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13123, file: !12817, line: 540, type: !121)
!13129 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13123, file: !12817, line: 541, type: !12938)
!13130 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13123, file: !12817, line: 541, type: !12945)
!13131 = !DILocalVariable(name: "status", scope: !13123, file: !12817, line: 543, type: !12860)
!13132 = !DILocalVariable(name: "pllfreq", scope: !13123, file: !12817, line: 544, type: !121)
!13133 = !DILocation(line: 0, scope: !13123)
!13134 = !DILocation(line: 551, column: 6, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13123, file: !12817, line: 551, column: 6)
!13136 = !DILocation(line: 551, column: 25, scope: !13135)
!13137 = !DILocation(line: 551, column: 6, scope: !13123)
!13138 = !DILocation(line: 554, column: 15, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13135, file: !12817, line: 552, column: 3)
!13140 = !DILocation(line: 557, column: 8, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13139, file: !12817, line: 557, column: 8)
!13142 = !DILocation(line: 557, column: 29, scope: !13141)
!13143 = !DILocation(line: 557, column: 8, scope: !13139)
!13144 = !DILocation(line: 560, column: 20, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13146, file: !12817, line: 560, column: 10)
!13146 = distinct !DILexicalBlock(scope: !13141, file: !12817, line: 558, column: 5)
!13147 = !DILocation(line: 560, column: 10, scope: !13146)
!13148 = !DILocation(line: 562, column: 9, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13145, file: !12817, line: 561, column: 7)
!13150 = !DILocation(line: 563, column: 7, scope: !13149)
!13151 = !DILocation(line: 566, column: 9, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13145, file: !12817, line: 565, column: 7)
!13153 = !DILocation(line: 570, column: 7, scope: !13146)
!13154 = !DILocation(line: 571, column: 7, scope: !13146)
!13155 = !DILocation(line: 571, column: 14, scope: !13146)
!13156 = !DILocation(line: 571, column: 35, scope: !13146)
!13157 = distinct !{!13157, !13154, !13158}
!13158 = !DILocation(line: 574, column: 7, scope: !13146)
!13159 = !DILocation(line: 578, column: 76, scope: !13139)
!13160 = !DILocation(line: 578, column: 103, scope: !13139)
!13161 = !DILocation(line: 579, column: 54, scope: !13139)
!13162 = !DILocation(line: 578, column: 5, scope: !13139)
!13163 = !DILocation(line: 582, column: 14, scope: !13139)
!13164 = !DILocation(line: 583, column: 3, scope: !13139)
!13165 = !DILocation(line: 0, scope: !13135)
!13166 = !DILocation(line: 590, column: 3, scope: !13123)
!13167 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8858, file: !8858, line: 2969, type: !6905, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !461)
!13168 = !DILocation(line: 2971, column: 11, scope: !13167)
!13169 = !DILocation(line: 2971, column: 44, scope: !13167)
!13170 = !DILocation(line: 2971, column: 3, scope: !13167)
!13171 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8858, file: !8858, line: 2929, type: !3244, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !461)
!13172 = !DILocation(line: 2931, column: 3, scope: !13171)
!13173 = !DILocation(line: 2932, column: 1, scope: !13171)
!13174 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8858, file: !8858, line: 2939, type: !3244, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !461)
!13175 = !DILocation(line: 2941, column: 3, scope: !13174)
!13176 = !DILocation(line: 2942, column: 1, scope: !13174)
!13177 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8858, file: !8858, line: 2949, type: !3244, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !461)
!13178 = !DILocation(line: 2951, column: 3, scope: !13177)
!13179 = !DILocation(line: 2952, column: 1, scope: !13177)
!13180 = distinct !DISubprogram(name: "z_device_state_init", scope: !13181, file: !13181, line: 23, type: !3244, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3204, retainedNodes: !13182)
!13181 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13182 = !{!13183}
!13183 = !DILocalVariable(name: "dev", scope: !13180, file: !13181, line: 25, type: !13184)
!13184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13185, size: 32)
!13185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13186)
!13186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !13187)
!13187 = !{!13188, !13189, !13190, !13191, !13197, !13198}
!13188 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13186, file: !141, line: 380, baseType: !144, size: 32)
!13189 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13186, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!13190 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13186, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!13191 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13186, file: !141, line: 386, baseType: !13192, size: 32, offset: 96)
!13192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13193, size: 32)
!13193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !13194)
!13194 = !{!13195, !13196}
!13195 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13193, file: !141, line: 359, baseType: !154, size: 8)
!13196 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13193, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13197 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13186, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!13198 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13186, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!13199 = !DILocation(line: 0, scope: !13180)
!13200 = !DILocation(line: 31, column: 1, scope: !13180)
!13201 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13181, file: !13181, line: 33, type: !13202, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3204, retainedNodes: !13204)
!13202 = !DISubroutineType(types: !13203)
!13203 = !{!13184, !144}
!13204 = !{!13205, !13206}
!13205 = !DILocalVariable(name: "name", arg: 1, scope: !13201, file: !13181, line: 33, type: !144)
!13206 = !DILocalVariable(name: "dev", scope: !13201, file: !13181, line: 35, type: !13184)
!13207 = !DILocation(line: 0, scope: !13201)
!13208 = !DILocation(line: 40, column: 12, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13201, file: !13181, line: 40, column: 6)
!13210 = !DILocation(line: 40, column: 21, scope: !13209)
!13211 = !DILocation(line: 40, column: 25, scope: !13209)
!13212 = !DILocation(line: 40, column: 33, scope: !13209)
!13213 = !DILocation(line: 40, column: 6, scope: !13201)
!13214 = !DILocation(line: 55, column: 2, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13201, file: !13181, line: 55, column: 2)
!13216 = !DILocation(line: 50, column: 7, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13218, file: !13181, line: 50, column: 7)
!13218 = distinct !DILexicalBlock(scope: !13219, file: !13181, line: 49, column: 57)
!13219 = distinct !DILexicalBlock(scope: !13220, file: !13181, line: 49, column: 2)
!13220 = distinct !DILexicalBlock(scope: !13201, file: !13181, line: 49, column: 2)
!13221 = !DILocation(line: 50, column: 30, scope: !13217)
!13222 = !DILocation(line: 50, column: 39, scope: !13217)
!13223 = !DILocation(line: 50, column: 44, scope: !13217)
!13224 = !DILocation(line: 50, column: 7, scope: !13218)
!13225 = !DILocation(line: 49, column: 53, scope: !13219)
!13226 = !DILocation(line: 49, column: 33, scope: !13219)
!13227 = !DILocation(line: 49, column: 2, scope: !13220)
!13228 = distinct !{!13228, !13227, !13229}
!13229 = !DILocation(line: 53, column: 2, scope: !13220)
!13230 = !DILocation(line: 56, column: 7, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13232, file: !13181, line: 56, column: 7)
!13232 = distinct !DILexicalBlock(scope: !13233, file: !13181, line: 55, column: 57)
!13233 = distinct !DILexicalBlock(scope: !13215, file: !13181, line: 55, column: 2)
!13234 = !DILocation(line: 56, column: 30, scope: !13231)
!13235 = !DILocation(line: 56, column: 52, scope: !13231)
!13236 = !DILocation(line: 56, column: 34, scope: !13231)
!13237 = !DILocation(line: 56, column: 58, scope: !13231)
!13238 = !DILocation(line: 56, column: 7, scope: !13232)
!13239 = !DILocation(line: 55, column: 53, scope: !13233)
!13240 = !DILocation(line: 55, column: 33, scope: !13233)
!13241 = distinct !{!13241, !13214, !13242}
!13242 = !DILocation(line: 59, column: 2, scope: !13215)
!13243 = !DILocation(line: 62, column: 1, scope: !13201)
!13244 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13181, file: !13181, line: 93, type: !13245, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3204, retainedNodes: !13247)
!13245 = !DISubroutineType(types: !13246)
!13246 = !{!157, !13184}
!13247 = !{!13248}
!13248 = !DILocalVariable(name: "dev", arg: 1, scope: !13244, file: !13181, line: 93, type: !13184)
!13249 = !DILocation(line: 0, scope: !13244)
!13250 = !DILocation(line: 99, column: 10, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13244, file: !13181, line: 99, column: 6)
!13252 = !DILocation(line: 99, column: 6, scope: !13244)
!13253 = !DILocation(line: 103, column: 14, scope: !13244)
!13254 = !DILocation(line: 103, column: 21, scope: !13244)
!13255 = !DILocation(line: 103, column: 33, scope: !13244)
!13256 = !DILocation(line: 103, column: 49, scope: !13244)
!13257 = !DILocation(line: 103, column: 58, scope: !13244)
!13258 = !DILocation(line: 104, column: 1, scope: !13244)
!13259 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13181, file: !13181, line: 87, type: !13260, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3204, retainedNodes: !13263)
!13260 = !DISubroutineType(types: !13261)
!13261 = !{!344, !13262}
!13262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13184, size: 32)
!13263 = !{!13264}
!13264 = !DILocalVariable(name: "devices", arg: 1, scope: !13259, file: !13181, line: 87, type: !13262)
!13265 = !DILocation(line: 0, scope: !13259)
!13266 = !DILocation(line: 89, column: 11, scope: !13259)
!13267 = !DILocation(line: 90, column: 2, scope: !13259)
!13268 = distinct !DISubprogram(name: "device_required_foreach", scope: !13181, file: !13181, line: 125, type: !13269, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3204, retainedNodes: !13275)
!13269 = !DISubroutineType(types: !13270)
!13270 = !{!103, !13184, !13271, !102}
!13271 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !13272)
!13272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13273, size: 32)
!13273 = !DISubroutineType(types: !13274)
!13274 = !{!103, !13184, !102}
!13275 = !{!13276, !13277, !13278, !13279, !13280}
!13276 = !DILocalVariable(name: "dev", arg: 1, scope: !13268, file: !13181, line: 125, type: !13184)
!13277 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13268, file: !13181, line: 126, type: !13271)
!13278 = !DILocalVariable(name: "context", arg: 3, scope: !13268, file: !13181, line: 127, type: !102)
!13279 = !DILocalVariable(name: "handle_count", scope: !13268, file: !13181, line: 129, type: !344)
!13280 = !DILocalVariable(name: "handles", scope: !13268, file: !13181, line: 130, type: !160)
!13281 = !DILocation(line: 0, scope: !13268)
!13282 = !DILocation(line: 129, column: 2, scope: !13268)
!13283 = !DILocation(line: 129, column: 9, scope: !13268)
!13284 = !DILocation(line: 130, column: 35, scope: !13268)
!13285 = !DILocation(line: 132, column: 33, scope: !13268)
!13286 = !DILocation(line: 132, column: 9, scope: !13268)
!13287 = !DILocation(line: 133, column: 1, scope: !13268)
!13288 = !DILocation(line: 132, column: 2, scope: !13268)
!13289 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !13290, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3204, retainedNodes: !13292)
!13290 = !DISubroutineType(types: !13291)
!13291 = !{!160, !13184, !2624}
!13292 = !{!13293, !13294, !13295, !13296}
!13293 = !DILocalVariable(name: "dev", arg: 1, scope: !13289, file: !141, line: 493, type: !13184)
!13294 = !DILocalVariable(name: "count", arg: 2, scope: !13289, file: !141, line: 493, type: !2624)
!13295 = !DILocalVariable(name: "rv", scope: !13289, file: !141, line: 495, type: !160)
!13296 = !DILocalVariable(name: "i", scope: !13297, file: !141, line: 498, type: !344)
!13297 = distinct !DILexicalBlock(scope: !13298, file: !141, line: 497, column: 18)
!13298 = distinct !DILexicalBlock(scope: !13289, file: !141, line: 497, column: 6)
!13299 = !DILocation(line: 0, scope: !13289)
!13300 = !DILocation(line: 495, column: 35, scope: !13289)
!13301 = !DILocation(line: 497, column: 9, scope: !13298)
!13302 = !DILocation(line: 497, column: 6, scope: !13289)
!13303 = !DILocation(line: 0, scope: !13297)
!13304 = !DILocation(line: 500, column: 11, scope: !13297)
!13305 = !DILocation(line: 500, column: 40, scope: !13297)
!13306 = !DILocation(line: 502, column: 4, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13297, file: !141, line: 501, column: 40)
!13308 = distinct !{!13308, !13309, !13310}
!13309 = !DILocation(line: 500, column: 3, scope: !13297)
!13310 = !DILocation(line: 503, column: 3, scope: !13297)
!13311 = !DILocation(line: 504, column: 10, scope: !13297)
!13312 = !DILocation(line: 505, column: 2, scope: !13297)
!13313 = !DILocation(line: 507, column: 2, scope: !13289)
!13314 = distinct !DISubprogram(name: "device_visitor", scope: !13181, file: !13181, line: 106, type: !13315, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3204, retainedNodes: !13317)
!13315 = !DISubroutineType(types: !13316)
!13316 = !{!103, !160, !344, !13271, !102}
!13317 = !{!13318, !13319, !13320, !13321, !13322, !13324, !13327, !13328}
!13318 = !DILocalVariable(name: "handles", arg: 1, scope: !13314, file: !13181, line: 106, type: !160)
!13319 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13314, file: !13181, line: 107, type: !344)
!13320 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13314, file: !13181, line: 108, type: !13271)
!13321 = !DILocalVariable(name: "context", arg: 4, scope: !13314, file: !13181, line: 109, type: !102)
!13322 = !DILocalVariable(name: "i", scope: !13323, file: !13181, line: 112, type: !344)
!13323 = distinct !DILexicalBlock(scope: !13314, file: !13181, line: 112, column: 2)
!13324 = !DILocalVariable(name: "dh", scope: !13325, file: !13181, line: 113, type: !162)
!13325 = distinct !DILexicalBlock(scope: !13326, file: !13181, line: 112, column: 44)
!13326 = distinct !DILexicalBlock(scope: !13323, file: !13181, line: 112, column: 2)
!13327 = !DILocalVariable(name: "rdev", scope: !13325, file: !13181, line: 114, type: !13184)
!13328 = !DILocalVariable(name: "rc", scope: !13325, file: !13181, line: 115, type: !103)
!13329 = !DILocation(line: 0, scope: !13314)
!13330 = !DILocation(line: 0, scope: !13323)
!13331 = !DILocation(line: 112, column: 23, scope: !13326)
!13332 = !DILocation(line: 112, column: 2, scope: !13323)
!13333 = distinct !{!13333, !13332, !13334}
!13334 = !DILocation(line: 120, column: 2, scope: !13323)
!13335 = !DILocation(line: 113, column: 24, scope: !13325)
!13336 = !DILocation(line: 0, scope: !13325)
!13337 = !DILocation(line: 114, column: 31, scope: !13325)
!13338 = !DILocation(line: 115, column: 12, scope: !13325)
!13339 = !DILocation(line: 117, column: 10, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13325, file: !13181, line: 117, column: 7)
!13341 = !DILocation(line: 112, column: 39, scope: !13326)
!13342 = !DILocation(line: 123, column: 1, scope: !13314)
!13343 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !13344, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3204, retainedNodes: !13346)
!13344 = !DISubroutineType(types: !13345)
!13345 = !{!13184, !162}
!13346 = !{!13347, !13348, !13349}
!13347 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13343, file: !141, line: 439, type: !162)
!13348 = !DILocalVariable(name: "dev", scope: !13343, file: !141, line: 443, type: !13184)
!13349 = !DILocalVariable(name: "numdev", scope: !13343, file: !141, line: 444, type: !344)
!13350 = !DILocation(line: 0, scope: !13343)
!13351 = !DILocation(line: 446, column: 7, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13343, file: !141, line: 446, column: 6)
!13353 = !DILocation(line: 446, column: 18, scope: !13352)
!13354 = !DILocation(line: 446, column: 23, scope: !13352)
!13355 = !DILocation(line: 450, column: 2, scope: !13343)
!13356 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13181, file: !13181, line: 135, type: !13269, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3204, retainedNodes: !13357)
!13357 = !{!13358, !13359, !13360, !13361, !13362}
!13358 = !DILocalVariable(name: "dev", arg: 1, scope: !13356, file: !13181, line: 135, type: !13184)
!13359 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13356, file: !13181, line: 136, type: !13271)
!13360 = !DILocalVariable(name: "context", arg: 3, scope: !13356, file: !13181, line: 137, type: !102)
!13361 = !DILocalVariable(name: "handle_count", scope: !13356, file: !13181, line: 139, type: !344)
!13362 = !DILocalVariable(name: "handles", scope: !13356, file: !13181, line: 140, type: !160)
!13363 = !DILocation(line: 0, scope: !13356)
!13364 = !DILocation(line: 139, column: 2, scope: !13356)
!13365 = !DILocation(line: 139, column: 9, scope: !13356)
!13366 = !DILocation(line: 140, column: 35, scope: !13356)
!13367 = !DILocation(line: 142, column: 33, scope: !13356)
!13368 = !DILocation(line: 142, column: 9, scope: !13356)
!13369 = !DILocation(line: 143, column: 1, scope: !13356)
!13370 = !DILocation(line: 142, column: 2, scope: !13356)
!13371 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !13290, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3204, retainedNodes: !13372)
!13372 = !{!13373, !13374, !13375, !13376, !13377}
!13373 = !DILocalVariable(name: "dev", arg: 1, scope: !13371, file: !141, line: 573, type: !13184)
!13374 = !DILocalVariable(name: "count", arg: 2, scope: !13371, file: !141, line: 573, type: !2624)
!13375 = !DILocalVariable(name: "rv", scope: !13371, file: !141, line: 575, type: !160)
!13376 = !DILocalVariable(name: "region", scope: !13371, file: !141, line: 576, type: !344)
!13377 = !DILocalVariable(name: "i", scope: !13371, file: !141, line: 577, type: !344)
!13378 = !DILocation(line: 0, scope: !13371)
!13379 = !DILocation(line: 575, column: 35, scope: !13371)
!13380 = !DILocation(line: 579, column: 9, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13371, file: !141, line: 579, column: 6)
!13382 = !DILocation(line: 579, column: 6, scope: !13371)
!13383 = !DILocation(line: 582, column: 8, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13385, file: !141, line: 582, column: 8)
!13385 = distinct !DILexicalBlock(scope: !13386, file: !141, line: 581, column: 23)
!13386 = distinct !DILexicalBlock(scope: !13381, file: !141, line: 579, column: 18)
!13387 = !DILocation(line: 582, column: 12, scope: !13384)
!13388 = !DILocation(line: 585, column: 6, scope: !13385)
!13389 = !DILocation(line: 0, scope: !13386)
!13390 = !DILocation(line: 581, column: 17, scope: !13386)
!13391 = !DILocation(line: 581, column: 3, scope: !13386)
!13392 = !DILocation(line: 588, column: 10, scope: !13386)
!13393 = !DILocation(line: 588, column: 16, scope: !13386)
!13394 = !DILocation(line: 589, column: 4, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13386, file: !141, line: 588, column: 39)
!13396 = !DILocation(line: 588, column: 3, scope: !13386)
!13397 = distinct !{!13397, !13396, !13398}
!13398 = !DILocation(line: 590, column: 3, scope: !13386)
!13399 = !DILocation(line: 591, column: 10, scope: !13386)
!13400 = !DILocation(line: 592, column: 2, scope: !13386)
!13401 = !DILocation(line: 575, column: 25, scope: !13371)
!13402 = !DILocation(line: 594, column: 2, scope: !13371)
!13403 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1959, file: !1959, line: 49, type: !5996, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1956, retainedNodes: !461)
!13404 = !DILocation(line: 51, column: 10, scope: !13403)
!13405 = !DILocation(line: 51, column: 20, scope: !13403)
!13406 = !DILocation(line: 51, column: 2, scope: !13403)
!13407 = distinct !DISubprogram(name: "coredump", scope: !3211, file: !3211, line: 209, type: !13408, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !13554)
!13408 = !DISubroutineType(types: !13409)
!13409 = !{null, !32, !13410, !13454}
!13410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13411, size: 32)
!13411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13412)
!13412 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2831, line: 141, baseType: !13413)
!13413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2831, line: 97, size: 256, elements: !13414)
!13414 = !{!13415}
!13415 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13413, file: !2831, line: 107, baseType: !13416, size: 256)
!13416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2831, line: 98, size: 256, elements: !13417)
!13417 = !{!13418, !13423, !13428, !13433, !13438, !13443, !13448, !13453}
!13418 = !DIDerivedType(tag: DW_TAG_member, scope: !13416, file: !2831, line: 99, baseType: !13419, size: 32)
!13419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13416, file: !2831, line: 99, size: 32, elements: !13420)
!13420 = !{!13421, !13422}
!13421 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13419, file: !2831, line: 99, baseType: !121, size: 32)
!13422 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13419, file: !2831, line: 99, baseType: !121, size: 32)
!13423 = !DIDerivedType(tag: DW_TAG_member, scope: !13416, file: !2831, line: 100, baseType: !13424, size: 32, offset: 32)
!13424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13416, file: !2831, line: 100, size: 32, elements: !13425)
!13425 = !{!13426, !13427}
!13426 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13424, file: !2831, line: 100, baseType: !121, size: 32)
!13427 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13424, file: !2831, line: 100, baseType: !121, size: 32)
!13428 = !DIDerivedType(tag: DW_TAG_member, scope: !13416, file: !2831, line: 101, baseType: !13429, size: 32, offset: 64)
!13429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13416, file: !2831, line: 101, size: 32, elements: !13430)
!13430 = !{!13431, !13432}
!13431 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13429, file: !2831, line: 101, baseType: !121, size: 32)
!13432 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13429, file: !2831, line: 101, baseType: !121, size: 32)
!13433 = !DIDerivedType(tag: DW_TAG_member, scope: !13416, file: !2831, line: 102, baseType: !13434, size: 32, offset: 96)
!13434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13416, file: !2831, line: 102, size: 32, elements: !13435)
!13435 = !{!13436, !13437}
!13436 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13434, file: !2831, line: 102, baseType: !121, size: 32)
!13437 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13434, file: !2831, line: 102, baseType: !121, size: 32)
!13438 = !DIDerivedType(tag: DW_TAG_member, scope: !13416, file: !2831, line: 103, baseType: !13439, size: 32, offset: 128)
!13439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13416, file: !2831, line: 103, size: 32, elements: !13440)
!13440 = !{!13441, !13442}
!13441 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13439, file: !2831, line: 103, baseType: !121, size: 32)
!13442 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13439, file: !2831, line: 103, baseType: !121, size: 32)
!13443 = !DIDerivedType(tag: DW_TAG_member, scope: !13416, file: !2831, line: 104, baseType: !13444, size: 32, offset: 160)
!13444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13416, file: !2831, line: 104, size: 32, elements: !13445)
!13445 = !{!13446, !13447}
!13446 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13444, file: !2831, line: 104, baseType: !121, size: 32)
!13447 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13444, file: !2831, line: 104, baseType: !121, size: 32)
!13448 = !DIDerivedType(tag: DW_TAG_member, scope: !13416, file: !2831, line: 105, baseType: !13449, size: 32, offset: 192)
!13449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13416, file: !2831, line: 105, size: 32, elements: !13450)
!13450 = !{!13451, !13452}
!13451 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13449, file: !2831, line: 105, baseType: !121, size: 32)
!13452 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13449, file: !2831, line: 105, baseType: !121, size: 32)
!13453 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13416, file: !2831, line: 106, baseType: !121, size: 32, offset: 224)
!13454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13455, size: 32)
!13455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !13456)
!13456 = !{!13457, !13515, !13527, !13528, !13529, !13530, !13536, !13549}
!13457 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13455, file: !355, line: 247, baseType: !13458, size: 384)
!13458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !13459)
!13459 = !{!13460, !13484, !13491, !13492, !13493, !13502, !13503, !13504}
!13460 = !DIDerivedType(tag: DW_TAG_member, scope: !13458, file: !355, line: 60, baseType: !13461, size: 64)
!13461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13458, file: !355, line: 60, size: 64, elements: !13462)
!13462 = !{!13463, !13478}
!13463 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13461, file: !355, line: 61, baseType: !13464, size: 64)
!13464 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !13465)
!13465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !13466)
!13466 = !{!13467, !13473}
!13467 = !DIDerivedType(tag: DW_TAG_member, scope: !13465, file: !309, line: 38, baseType: !13468, size: 32)
!13468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13465, file: !309, line: 38, size: 32, elements: !13469)
!13469 = !{!13470, !13472}
!13470 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13468, file: !309, line: 39, baseType: !13471, size: 32)
!13471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13465, size: 32)
!13472 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13468, file: !309, line: 40, baseType: !13471, size: 32)
!13473 = !DIDerivedType(tag: DW_TAG_member, scope: !13465, file: !309, line: 42, baseType: !13474, size: 32, offset: 32)
!13474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13465, file: !309, line: 42, size: 32, elements: !13475)
!13475 = !{!13476, !13477}
!13476 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13474, file: !309, line: 43, baseType: !13471, size: 32)
!13477 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13474, file: !309, line: 44, baseType: !13471, size: 32)
!13478 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13461, file: !355, line: 62, baseType: !13479, size: 64)
!13479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !13480)
!13480 = !{!13481}
!13481 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13479, file: !380, line: 50, baseType: !13482, size: 64)
!13482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13483, size: 64, elements: !385)
!13483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13479, size: 32)
!13484 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13458, file: !355, line: 68, baseType: !13485, size: 32, offset: 64)
!13485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13486, size: 32)
!13486 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !13487)
!13487 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !13488)
!13488 = !{!13489}
!13489 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13487, file: !304, line: 232, baseType: !13490, size: 64)
!13490 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !13465)
!13491 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13458, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!13492 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13458, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!13493 = !DIDerivedType(tag: DW_TAG_member, scope: !13458, file: !355, line: 90, baseType: !13494, size: 16, offset: 112)
!13494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13458, file: !355, line: 90, size: 16, elements: !13495)
!13495 = !{!13496, !13501}
!13496 = !DIDerivedType(tag: DW_TAG_member, scope: !13494, file: !355, line: 91, baseType: !13497, size: 16)
!13497 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13494, file: !355, line: 91, size: 16, elements: !13498)
!13498 = !{!13499, !13500}
!13499 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13497, file: !355, line: 96, baseType: !403, size: 8)
!13500 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13497, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!13501 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13494, file: !355, line: 100, baseType: !328, size: 16)
!13502 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13458, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13458, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!13504 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13458, file: !355, line: 131, baseType: !13505, size: 192, offset: 192)
!13505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !13506)
!13506 = !{!13507, !13508, !13514}
!13507 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13505, file: !304, line: 245, baseType: !13464, size: 64)
!13508 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13505, file: !304, line: 246, baseType: !13509, size: 32, offset: 64)
!13509 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !13510)
!13510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13511, size: 32)
!13511 = !DISubroutineType(types: !13512)
!13512 = !{null, !13513}
!13513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13505, size: 32)
!13514 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13505, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!13515 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13455, file: !355, line: 250, baseType: !13516, size: 288, offset: 384)
!13516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !13517)
!13517 = !{!13518, !13519, !13520, !13521, !13522, !13523, !13524, !13525, !13526}
!13518 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13516, file: !424, line: 26, baseType: !121, size: 32)
!13519 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13516, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!13520 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13516, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!13521 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13516, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!13522 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13516, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!13523 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13516, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!13524 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13516, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!13525 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13516, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!13526 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13516, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!13527 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13455, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!13528 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13455, file: !355, line: 256, baseType: !13486, size: 64, offset: 704)
!13529 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13455, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!13530 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13455, file: !355, line: 300, baseType: !13531, size: 96, offset: 800)
!13531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !13532)
!13532 = !{!13533, !13534, !13535}
!13533 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13531, file: !355, line: 153, baseType: !22, size: 32)
!13534 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13531, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!13535 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13531, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!13536 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13455, file: !355, line: 325, baseType: !13537, size: 32, offset: 896)
!13537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13538, size: 32)
!13538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !13539)
!13539 = !{!13540, !13546, !13547}
!13540 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13538, file: !300, line: 5074, baseType: !13541, size: 96)
!13541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !13542)
!13542 = !{!13543, !13544, !13545}
!13543 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13541, file: !450, line: 57, baseType: !453, size: 32)
!13544 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13541, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!13545 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13541, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!13546 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13538, file: !300, line: 5075, baseType: !13486, size: 64, offset: 96)
!13547 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13538, file: !300, line: 5076, baseType: !13548, offset: 160)
!13548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!13549 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13455, file: !355, line: 343, baseType: !13550, size: 64, offset: 928)
!13550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !13551)
!13551 = !{!13552, !13553}
!13552 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13550, file: !424, line: 63, baseType: !121, size: 32)
!13553 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13550, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!13554 = !{!13555, !13556, !13557}
!13555 = !DILocalVariable(name: "reason", arg: 1, scope: !13407, file: !3211, line: 209, type: !32)
!13556 = !DILocalVariable(name: "esf", arg: 2, scope: !13407, file: !3211, line: 209, type: !13410)
!13557 = !DILocalVariable(name: "thread", arg: 3, scope: !13407, file: !3211, line: 210, type: !13454)
!13558 = !DILocation(line: 0, scope: !13407)
!13559 = !DILocation(line: 212, column: 1, scope: !13407)
!13560 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3211, file: !3211, line: 214, type: !13561, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !13563)
!13561 = !DISubroutineType(types: !13562)
!13562 = !{null, !22, !22}
!13563 = !{!13564, !13565}
!13564 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13560, file: !3211, line: 214, type: !22)
!13565 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13560, file: !3211, line: 214, type: !22)
!13566 = !DILocation(line: 0, scope: !13560)
!13567 = !DILocation(line: 216, column: 1, scope: !13560)
!13568 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3211, file: !3211, line: 218, type: !13569, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !13571)
!13569 = !DISubroutineType(types: !13570)
!13570 = !{null, !261, !344}
!13571 = !{!13572, !13573}
!13572 = !DILocalVariable(name: "buf", arg: 1, scope: !13568, file: !3211, line: 218, type: !261)
!13573 = !DILocalVariable(name: "buflen", arg: 2, scope: !13568, file: !3211, line: 218, type: !344)
!13574 = !DILocation(line: 0, scope: !13568)
!13575 = !DILocation(line: 220, column: 1, scope: !13568)
!13576 = distinct !DISubprogram(name: "coredump_query", scope: !3211, file: !3211, line: 222, type: !13577, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !13579)
!13577 = !DISubroutineType(types: !13578)
!13578 = !{!103, !3210, !102}
!13579 = !{!13580, !13581}
!13580 = !DILocalVariable(name: "query_id", arg: 1, scope: !13576, file: !3211, line: 222, type: !3210)
!13581 = !DILocalVariable(name: "arg", arg: 2, scope: !13576, file: !3211, line: 222, type: !102)
!13582 = !DILocation(line: 0, scope: !13576)
!13583 = !DILocation(line: 224, column: 2, scope: !13576)
!13584 = distinct !DISubprogram(name: "coredump_cmd", scope: !3211, file: !3211, line: 227, type: !13585, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !13587)
!13585 = !DISubroutineType(types: !13586)
!13586 = !{!103, !3217, !102}
!13587 = !{!13588, !13589}
!13588 = !DILocalVariable(name: "query_id", arg: 1, scope: !13584, file: !3211, line: 227, type: !3217)
!13589 = !DILocalVariable(name: "arg", arg: 2, scope: !13584, file: !3211, line: 227, type: !102)
!13590 = !DILocation(line: 0, scope: !13584)
!13591 = !DILocation(line: 229, column: 2, scope: !13584)
!13592 = distinct !DISubprogram(name: "arch_system_halt", scope: !13593, file: !13593, line: 23, type: !5815, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !13594)
!13593 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13594 = !{!13595}
!13595 = !DILocalVariable(name: "reason", arg: 1, scope: !13592, file: !13593, line: 23, type: !32)
!13596 = !DILocation(line: 0, scope: !13592)
!13597 = !DILocation(line: 55, column: 2, scope: !13598, inlinedAt: !13602)
!13598 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5804, file: !5804, line: 42, type: !5805, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !13599)
!13599 = !{!13600, !13601}
!13600 = !DILocalVariable(name: "key", scope: !13598, file: !5804, line: 44, type: !32)
!13601 = !DILocalVariable(name: "tmp", scope: !13598, file: !5804, line: 53, type: !32)
!13602 = distinct !DILocation(line: 31, column: 8, scope: !13592)
!13603 = !{i64 2224122}
!13604 = !DILocation(line: 0, scope: !13598, inlinedAt: !13602)
!13605 = !DILocation(line: 32, column: 2, scope: !13592)
!13606 = !DILocation(line: 32, column: 2, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13608, file: !13593, line: 32, column: 2)
!13608 = distinct !DILexicalBlock(scope: !13592, file: !13593, line: 32, column: 2)
!13609 = distinct !{!13609, !13610, !13611}
!13610 = !DILocation(line: 32, column: 2, scope: !13608)
!13611 = !DILocation(line: 34, column: 2, scope: !13608)
!13612 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13593, file: !13593, line: 39, type: !13613, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !13615)
!13613 = !DISubroutineType(types: !13614)
!13614 = !{null, !32, !13410}
!13615 = !{!13616, !13617}
!13616 = !DILocalVariable(name: "reason", arg: 1, scope: !13612, file: !13593, line: 39, type: !32)
!13617 = !DILocalVariable(name: "esf", arg: 2, scope: !13612, file: !13593, line: 40, type: !13410)
!13618 = !DILocation(line: 0, scope: !13612)
!13619 = !DILocation(line: 46, column: 2, scope: !13612)
!13620 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13593, file: !13593, line: 81, type: !5815, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !13621)
!13621 = !{!13622}
!13622 = !DILocalVariable(name: "reason", arg: 1, scope: !13620, file: !13593, line: 81, type: !32)
!13623 = !DILocation(line: 0, scope: !13620)
!13624 = !DILocation(line: 83, column: 2, scope: !13620)
!13625 = distinct !DISubprogram(name: "z_fatal_error", scope: !13593, file: !13593, line: 96, type: !13613, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !13626)
!13626 = !{!13627, !13628, !13629, !13630}
!13627 = !DILocalVariable(name: "reason", arg: 1, scope: !13625, file: !13593, line: 96, type: !32)
!13628 = !DILocalVariable(name: "esf", arg: 2, scope: !13625, file: !13593, line: 96, type: !13410)
!13629 = !DILocalVariable(name: "key", scope: !13625, file: !13593, line: 102, type: !32)
!13630 = !DILocalVariable(name: "thread", scope: !13625, file: !13593, line: 103, type: !13454)
!13631 = !DILocation(line: 0, scope: !13625)
!13632 = !DILocation(line: 55, column: 2, scope: !13598, inlinedAt: !13633)
!13633 = distinct !DILocation(line: 102, column: 21, scope: !13625)
!13634 = !DILocation(line: 0, scope: !13598, inlinedAt: !13633)
!13635 = !DILocation(line: 119, column: 11, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13625, file: !13593, line: 119, column: 6)
!13637 = !DILocation(line: 119, column: 20, scope: !13636)
!13638 = !DILocation(line: 131, column: 2, scope: !13625)
!13639 = !DILocation(line: 151, column: 7, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13641, file: !13593, line: 146, column: 32)
!13641 = distinct !DILexicalBlock(scope: !13625, file: !13593, line: 146, column: 6)
!13642 = !DILocation(line: 151, column: 21, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13640, file: !13593, line: 151, column: 7)
!13644 = !DILocation(line: 104, column: 4, scope: !13625)
!13645 = !DILocalVariable(name: "key", arg: 1, scope: !13646, file: !5804, line: 84, type: !32)
!13646 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5804, file: !5804, line: 84, type: !5815, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !13647)
!13647 = !{!13645}
!13648 = !DILocation(line: 0, scope: !13646, inlinedAt: !13649)
!13649 = distinct !DILocation(line: 186, column: 2, scope: !13625)
!13650 = !DILocation(line: 95, column: 2, scope: !13646, inlinedAt: !13649)
!13651 = !{i64 2224939}
!13652 = !DILocation(line: 189, column: 3, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13654, file: !13593, line: 188, column: 41)
!13654 = distinct !DILexicalBlock(scope: !13625, file: !13593, line: 188, column: 6)
!13655 = !DILocation(line: 191, column: 1, scope: !13625)
!13656 = distinct !DISubprogram(name: "k_current_get", scope: !300, file: !300, line: 530, type: !13657, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !461)
!13657 = !DISubroutineType(types: !13658)
!13658 = !{!13659}
!13659 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !13454)
!13660 = !DILocation(line: 535, column: 9, scope: !13656)
!13661 = !DILocation(line: 535, column: 2, scope: !13656)
!13662 = distinct !DISubprogram(name: "k_thread_abort", scope: !3677, file: !3677, line: 188, type: !13663, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !13665)
!13663 = !DISubroutineType(types: !13664)
!13664 = !{null, !13659}
!13665 = !{!13666}
!13666 = !DILocalVariable(name: "thread", arg: 1, scope: !13662, file: !3677, line: 188, type: !13659)
!13667 = !DILocation(line: 0, scope: !13662)
!13668 = !DILocation(line: 197, column: 2, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13662, file: !3677, line: 197, column: 2)
!13670 = !{i64 2154841884}
!13671 = !DILocation(line: 198, column: 2, scope: !13662)
!13672 = !DILocation(line: 199, column: 1, scope: !13662)
!13673 = distinct !DISubprogram(name: "z_current_get", scope: !3677, file: !3677, line: 173, type: !13657, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !461)
!13674 = !DILocation(line: 180, column: 2, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13673, file: !3677, line: 180, column: 2)
!13676 = !{i64 2154841816}
!13677 = !DILocation(line: 181, column: 9, scope: !13673)
!13678 = !DILocation(line: 181, column: 2, scope: !13673)
!13679 = distinct !DISubprogram(name: "z_early_memset", scope: !1966, file: !1966, line: 108, type: !13680, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13682)
!13680 = !DISubroutineType(types: !13681)
!13681 = !{null, !102, !103, !344}
!13682 = !{!13683, !13684, !13685}
!13683 = !DILocalVariable(name: "dst", arg: 1, scope: !13679, file: !1966, line: 108, type: !102)
!13684 = !DILocalVariable(name: "c", arg: 2, scope: !13679, file: !1966, line: 108, type: !103)
!13685 = !DILocalVariable(name: "n", arg: 3, scope: !13679, file: !1966, line: 108, type: !344)
!13686 = !DILocation(line: 0, scope: !13679)
!13687 = !DILocation(line: 110, column: 9, scope: !13679)
!13688 = !DILocation(line: 111, column: 1, scope: !13679)
!13689 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1966, file: !1966, line: 121, type: !13690, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13692)
!13690 = !DISubroutineType(types: !13691)
!13691 = !{null, !102, !13, !344}
!13692 = !{!13693, !13694, !13695}
!13693 = !DILocalVariable(name: "dst", arg: 1, scope: !13689, file: !1966, line: 121, type: !102)
!13694 = !DILocalVariable(name: "src", arg: 2, scope: !13689, file: !1966, line: 121, type: !13)
!13695 = !DILocalVariable(name: "n", arg: 3, scope: !13689, file: !1966, line: 121, type: !344)
!13696 = !DILocation(line: 0, scope: !13689)
!13697 = !DILocation(line: 123, column: 9, scope: !13689)
!13698 = !DILocation(line: 124, column: 1, scope: !13689)
!13699 = distinct !DISubprogram(name: "z_bss_zero", scope: !1966, file: !1966, line: 132, type: !3244, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !461)
!13700 = !DILocation(line: 143, column: 2, scope: !13699)
!13701 = !DILocation(line: 145, column: 2, scope: !13699)
!13702 = !DILocation(line: 168, column: 1, scope: !13699)
!13703 = distinct !DISubprogram(name: "z_init_cpu", scope: !1966, file: !1966, line: 372, type: !8466, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13704)
!13704 = !{!13705}
!13705 = !DILocalVariable(name: "id", arg: 1, scope: !13703, file: !1966, line: 372, type: !103)
!13706 = !DILocation(line: 0, scope: !13703)
!13707 = !DILocation(line: 374, column: 2, scope: !13703)
!13708 = !DILocation(line: 375, column: 34, scope: !13703)
!13709 = !DILocation(line: 375, column: 19, scope: !13703)
!13710 = !DILocation(line: 375, column: 31, scope: !13703)
!13711 = !DILocation(line: 376, column: 24, scope: !13703)
!13712 = !DILocation(line: 376, column: 19, scope: !13703)
!13713 = !DILocation(line: 376, column: 22, scope: !13703)
!13714 = !DILocation(line: 378, column: 26, scope: !13703)
!13715 = !DILocation(line: 378, column: 4, scope: !13703)
!13716 = !DILocation(line: 378, column: 50, scope: !13703)
!13717 = !DILocation(line: 377, column: 19, scope: !13703)
!13718 = !DILocation(line: 377, column: 29, scope: !13703)
!13719 = !DILocation(line: 384, column: 1, scope: !13703)
!13720 = distinct !DISubprogram(name: "init_idle_thread", scope: !1966, file: !1966, line: 343, type: !8466, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13721)
!13721 = !{!13722, !13723, !13724, !13727}
!13722 = !DILocalVariable(name: "i", arg: 1, scope: !13720, file: !1966, line: 343, type: !103)
!13723 = !DILocalVariable(name: "thread", scope: !13720, file: !1966, line: 345, type: !2058)
!13724 = !DILocalVariable(name: "stack", scope: !13720, file: !1966, line: 346, type: !13725)
!13725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13726, size: 32)
!13726 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3556, line: 44, baseType: !2172)
!13727 = !DILocalVariable(name: "tname", scope: !13720, file: !1966, line: 358, type: !1071)
!13728 = !DILocation(line: 0, scope: !13720)
!13729 = !DILocation(line: 345, column: 29, scope: !13720)
!13730 = !DILocation(line: 346, column: 28, scope: !13720)
!13731 = !DILocation(line: 362, column: 37, scope: !13720)
!13732 = !DILocation(line: 362, column: 36, scope: !13720)
!13733 = !DILocation(line: 361, column: 2, scope: !13720)
!13734 = !DILocation(line: 365, column: 2, scope: !13720)
!13735 = !DILocation(line: 370, column: 1, scope: !13720)
!13736 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2173, file: !2173, line: 331, type: !13737, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13739)
!13737 = !DISubroutineType(types: !13738)
!13738 = !{!1071, !13725}
!13739 = !{!13740}
!13740 = !DILocalVariable(name: "sym", arg: 1, scope: !13736, file: !2173, line: 331, type: !13725)
!13741 = !DILocation(line: 0, scope: !13736)
!13742 = !DILocation(line: 333, column: 21, scope: !13736)
!13743 = !DILocation(line: 333, column: 2, scope: !13736)
!13744 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13745, file: !13745, line: 155, type: !13746, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13748)
!13745 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13746 = !DISubroutineType(types: !13747)
!13747 = !{null, !2058}
!13748 = !{!13749}
!13749 = !DILocalVariable(name: "thread", arg: 1, scope: !13744, file: !13745, line: 155, type: !2058)
!13750 = !DILocation(line: 0, scope: !13744)
!13751 = !DILocation(line: 157, column: 15, scope: !13744)
!13752 = !DILocation(line: 157, column: 28, scope: !13744)
!13753 = !DILocation(line: 158, column: 1, scope: !13744)
!13754 = distinct !DISubprogram(name: "z_cstart", scope: !1966, file: !1966, line: 501, type: !3244, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13755)
!13755 = !{!13756}
!13756 = !DILocalVariable(name: "dummy_thread", scope: !13754, file: !1966, line: 518, type: !2059)
!13757 = !DILocation(line: 507, column: 2, scope: !13754)
!13758 = !DILocation(line: 43, column: 14, scope: !13759, inlinedAt: !13763)
!13759 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13760, file: !13760, line: 40, type: !3244, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13761)
!13760 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13761 = !{!13762}
!13762 = !DILocalVariable(name: "msp", scope: !13759, file: !13760, line: 42, type: !121)
!13763 = distinct !DILocation(line: 44, column: 2, scope: !13764, inlinedAt: !13766)
!13764 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13765, file: !13765, line: 42, type: !3244, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !461)
!13765 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13766 = distinct !DILocation(line: 510, column: 2, scope: !13754)
!13767 = !DILocation(line: 43, column: 3, scope: !13759, inlinedAt: !13763)
!13768 = !DILocation(line: 43, column: 60, scope: !13759, inlinedAt: !13763)
!13769 = !DILocation(line: 0, scope: !13759, inlinedAt: !13763)
!13770 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13771, file: !6824, line: 1153, type: !121)
!13771 = distinct !DISubprogram(name: "__set_MSP", scope: !6824, file: !6824, line: 1153, type: !6915, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13772)
!13772 = !{!13770}
!13773 = !DILocation(line: 0, scope: !13771, inlinedAt: !13774)
!13774 = distinct !DILocation(line: 46, column: 2, scope: !13759, inlinedAt: !13763)
!13775 = !DILocation(line: 1155, column: 3, scope: !13771, inlinedAt: !13774)
!13776 = !{i64 3561240}
!13777 = !DILocation(line: 62, column: 11, scope: !13759, inlinedAt: !13763)
!13778 = !DILocation(line: 102, column: 2, scope: !13779, inlinedAt: !13780)
!13779 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7618, file: !7618, line: 97, type: !3244, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !461)
!13780 = distinct !DILocation(line: 45, column: 2, scope: !13764, inlinedAt: !13766)
!13781 = !DILocation(line: 108, column: 2, scope: !13779, inlinedAt: !13780)
!13782 = !DILocation(line: 112, column: 2, scope: !13779, inlinedAt: !13780)
!13783 = !DILocation(line: 113, column: 2, scope: !13779, inlinedAt: !13780)
!13784 = !DILocation(line: 114, column: 2, scope: !13779, inlinedAt: !13780)
!13785 = !DILocation(line: 116, column: 2, scope: !13779, inlinedAt: !13780)
!13786 = !DILocation(line: 123, column: 13, scope: !13779, inlinedAt: !13780)
!13787 = !DILocation(line: 46, column: 2, scope: !13764, inlinedAt: !13766)
!13788 = !DILocation(line: 47, column: 2, scope: !13764, inlinedAt: !13766)
!13789 = !DILocation(line: 174, column: 12, scope: !13790, inlinedAt: !13791)
!13790 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7618, file: !7618, line: 169, type: !3244, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !461)
!13791 = distinct !DILocation(line: 48, column: 2, scope: !13764, inlinedAt: !13766)
!13792 = !DILocation(line: 179, column: 12, scope: !13790, inlinedAt: !13791)
!13793 = !DILocation(line: 50, column: 2, scope: !13764, inlinedAt: !13766)
!13794 = !DILocation(line: 57, column: 2, scope: !13764, inlinedAt: !13766)
!13795 = !DILocation(line: 518, column: 2, scope: !13754)
!13796 = !DILocation(line: 518, column: 18, scope: !13754)
!13797 = !DILocation(line: 520, column: 2, scope: !13754)
!13798 = !DILocation(line: 523, column: 2, scope: !13754)
!13799 = !DILocation(line: 526, column: 2, scope: !13754)
!13800 = !DILocation(line: 527, column: 2, scope: !13754)
!13801 = !DILocation(line: 543, column: 24, scope: !13754)
!13802 = !DILocation(line: 543, column: 2, scope: !13754)
!13803 = !DILocation(line: 0, scope: !2192)
!13804 = !DILocation(line: 246, column: 15, scope: !2210)
!13805 = !DILocation(line: 246, column: 36, scope: !2209)
!13806 = !DILocation(line: 246, column: 2, scope: !2210)
!13807 = !DILocation(line: 247, column: 37, scope: !2208)
!13808 = !DILocation(line: 0, scope: !2208)
!13809 = !DILocation(line: 248, column: 19, scope: !2208)
!13810 = !DILocation(line: 248, column: 12, scope: !2208)
!13811 = !DILocation(line: 250, column: 11, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !2208, file: !1966, line: 250, column: 7)
!13813 = !DILocation(line: 250, column: 7, scope: !2208)
!13814 = !DILocation(line: 254, column: 11, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13816, file: !1966, line: 254, column: 8)
!13816 = distinct !DILexicalBlock(scope: !13812, file: !1966, line: 250, column: 20)
!13817 = !DILocation(line: 254, column: 8, scope: !13816)
!13818 = !DILocation(line: 255, column: 9, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13815, file: !1966, line: 254, column: 17)
!13820 = !DILocation(line: 258, column: 9, scope: !13819)
!13821 = !DILocation(line: 261, column: 28, scope: !13819)
!13822 = !DILocation(line: 261, column: 10, scope: !13819)
!13823 = !DILocation(line: 261, column: 17, scope: !13819)
!13824 = !DILocation(line: 261, column: 26, scope: !13819)
!13825 = !DILocation(line: 262, column: 4, scope: !13819)
!13826 = !DILocation(line: 263, column: 9, scope: !13816)
!13827 = !DILocation(line: 263, column: 16, scope: !13816)
!13828 = !DILocation(line: 263, column: 28, scope: !13816)
!13829 = !DILocation(line: 264, column: 3, scope: !13816)
!13830 = !DILocation(line: 246, column: 60, scope: !2209)
!13831 = distinct !{!13831, !13806, !13832}
!13832 = !DILocation(line: 265, column: 2, scope: !2210)
!13833 = !DILocation(line: 266, column: 1, scope: !2192)
!13834 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6858, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13835)
!13835 = !{!13836, !13837}
!13836 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13834, file: !495, line: 1814, type: !751)
!13837 = !DILocalVariable(name: "priority", arg: 2, scope: !13834, file: !495, line: 1814, type: !121)
!13838 = !DILocation(line: 0, scope: !13834)
!13839 = !DILocation(line: 1822, column: 48, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13841, file: !495, line: 1821, column: 3)
!13841 = distinct !DILexicalBlock(scope: !13834, file: !495, line: 1816, column: 7)
!13842 = !DILocation(line: 1822, column: 32, scope: !13840)
!13843 = !DILocation(line: 1822, column: 40, scope: !13840)
!13844 = !DILocation(line: 1822, column: 5, scope: !13840)
!13845 = !DILocation(line: 1822, column: 46, scope: !13840)
!13846 = !DILocation(line: 1824, column: 1, scope: !13834)
!13847 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13765, file: !13765, line: 32, type: !3244, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!13848 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13849, file: !13849, line: 215, type: !13746, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13850)
!13849 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13850 = !{!13851}
!13851 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13848, file: !13849, line: 215, type: !2058)
!13852 = !DILocation(line: 0, scope: !13848)
!13853 = !DILocation(line: 217, column: 21, scope: !13848)
!13854 = !DILocation(line: 217, column: 34, scope: !13848)
!13855 = !DILocation(line: 221, column: 21, scope: !13848)
!13856 = !DILocation(line: 221, column: 34, scope: !13848)
!13857 = !DILocation(line: 223, column: 27, scope: !13848)
!13858 = !DILocation(line: 223, column: 33, scope: !13848)
!13859 = !DILocation(line: 224, column: 27, scope: !13848)
!13860 = !DILocation(line: 224, column: 32, scope: !13848)
!13861 = !DILocation(line: 232, column: 16, scope: !13848)
!13862 = !DILocation(line: 232, column: 30, scope: !13848)
!13863 = !DILocation(line: 239, column: 24, scope: !13848)
!13864 = !DILocation(line: 240, column: 1, scope: !13848)
!13865 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1966, file: !1966, line: 399, type: !13866, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13868)
!13866 = !DISubroutineType(types: !13867)
!13867 = !{!1071}
!13868 = !{!13869}
!13869 = !DILocalVariable(name: "stack_ptr", scope: !13865, file: !1966, line: 401, type: !1071)
!13870 = !DILocation(line: 404, column: 2, scope: !13865)
!13871 = !DILocation(line: 416, column: 24, scope: !13865)
!13872 = !DILocation(line: 418, column: 14, scope: !13865)
!13873 = !DILocation(line: 0, scope: !13865)
!13874 = !DILocation(line: 423, column: 2, scope: !13865)
!13875 = !DILocation(line: 424, column: 2, scope: !13865)
!13876 = !DILocation(line: 426, column: 2, scope: !13865)
!13877 = !DILocation(line: 428, column: 2, scope: !13865)
!13878 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1966, file: !1966, line: 432, type: !13879, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13881)
!13879 = !DISubroutineType(types: !13880)
!13880 = !{null, !1071}
!13881 = !{!13882}
!13882 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13878, file: !1966, line: 432, type: !1071)
!13883 = !DILocation(line: 0, scope: !13878)
!13884 = !DILocation(line: 435, column: 2, scope: !13878)
!13885 = !DILocation(line: 445, column: 2, scope: !13878)
!13886 = distinct !DISubprogram(name: "bg_thread_main", scope: !1966, file: !1966, line: 277, type: !3558, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13887)
!13887 = !{!13888, !13889, !13890}
!13888 = !DILocalVariable(name: "unused1", arg: 1, scope: !13886, file: !1966, line: 277, type: !102)
!13889 = !DILocalVariable(name: "unused2", arg: 2, scope: !13886, file: !1966, line: 277, type: !102)
!13890 = !DILocalVariable(name: "unused3", arg: 3, scope: !13886, file: !1966, line: 277, type: !102)
!13891 = !DILocation(line: 0, scope: !13886)
!13892 = !DILocation(line: 291, column: 20, scope: !13886)
!13893 = !DILocation(line: 293, column: 2, scope: !13886)
!13894 = !DILocation(line: 297, column: 2, scope: !13886)
!13895 = !DILocation(line: 305, column: 2, scope: !13886)
!13896 = !DILocation(line: 307, column: 2, scope: !13886)
!13897 = !DILocation(line: 330, column: 8, scope: !13886)
!13898 = !DILocation(line: 333, column: 34, scope: !13886)
!13899 = !DILocation(line: 339, column: 1, scope: !13886)
!13900 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2219, file: !2219, line: 45, type: !13901, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13909)
!13901 = !DISubroutineType(types: !13902)
!13902 = !{null, !13903, !102}
!13903 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !300, line: 103, baseType: !13904)
!13904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13905, size: 32)
!13905 = !DISubroutineType(types: !13906)
!13906 = !{null, !13907, !102}
!13907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13908, size: 32)
!13908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2224)
!13909 = !{!13910, !13911}
!13910 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13900, file: !2219, line: 45, type: !13903)
!13911 = !DILocalVariable(name: "user_data", arg: 2, scope: !13900, file: !2219, line: 45, type: !102)
!13912 = !DILocation(line: 0, scope: !13900)
!13913 = !DILocation(line: 71, column: 1, scope: !13900)
!13914 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2219, file: !2219, line: 73, type: !13901, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13915)
!13915 = !{!13916, !13917}
!13916 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13914, file: !2219, line: 73, type: !13903)
!13917 = !DILocalVariable(name: "user_data", arg: 2, scope: !13914, file: !2219, line: 73, type: !102)
!13918 = !DILocation(line: 0, scope: !13914)
!13919 = !DILocation(line: 95, column: 1, scope: !13914)
!13920 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2219, file: !2219, line: 97, type: !7619, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !461)
!13921 = !DILocation(line: 1031, column: 3, scope: !13922, inlinedAt: !13925)
!13922 = distinct !DISubprogram(name: "__get_IPSR", scope: !6824, file: !6824, line: 1027, type: !6905, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13923)
!13923 = !{!13924}
!13924 = !DILocalVariable(name: "result", scope: !13922, file: !6824, line: 1029, type: !121)
!13925 = distinct !DILocation(line: 48, column: 10, scope: !13926, inlinedAt: !13927)
!13926 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7618, file: !7618, line: 46, type: !7619, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !461)
!13927 = distinct !DILocation(line: 99, column: 9, scope: !13920)
!13928 = !{i64 3566891}
!13929 = !DILocation(line: 0, scope: !13922, inlinedAt: !13925)
!13930 = !DILocation(line: 48, column: 9, scope: !13926, inlinedAt: !13927)
!13931 = !DILocation(line: 99, column: 2, scope: !13920)
!13932 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2219, file: !2219, line: 106, type: !3244, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !461)
!13933 = !DILocation(line: 108, column: 2, scope: !13932)
!13934 = !DILocation(line: 108, column: 17, scope: !13932)
!13935 = !DILocation(line: 108, column: 30, scope: !13932)
!13936 = !DILocation(line: 109, column: 1, scope: !13932)
!13937 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2219, file: !2219, line: 116, type: !3244, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !461)
!13938 = !DILocation(line: 118, column: 2, scope: !13937)
!13939 = !DILocation(line: 118, column: 17, scope: !13937)
!13940 = !DILocation(line: 118, column: 30, scope: !13937)
!13941 = !DILocation(line: 119, column: 1, scope: !13937)
!13942 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2219, file: !2219, line: 126, type: !7619, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !461)
!13943 = !DILocation(line: 128, column: 10, scope: !13942)
!13944 = !DILocation(line: 128, column: 25, scope: !13942)
!13945 = !DILocation(line: 128, column: 38, scope: !13942)
!13946 = !DILocation(line: 128, column: 53, scope: !13942)
!13947 = !DILocation(line: 128, column: 2, scope: !13942)
!13948 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2219, file: !2219, line: 187, type: !13949, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13951)
!13949 = !DISubroutineType(types: !13950)
!13950 = !{!103, !2223, !144}
!13951 = !{!13952, !13953}
!13952 = !DILocalVariable(name: "thread", arg: 1, scope: !13948, file: !2219, line: 187, type: !2223)
!13953 = !DILocalVariable(name: "value", arg: 2, scope: !13948, file: !2219, line: 187, type: !144)
!13954 = !DILocation(line: 0, scope: !13948)
!13955 = !DILocation(line: 206, column: 2, scope: !13948)
!13956 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2219, file: !2219, line: 238, type: !13957, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13959)
!13957 = !DISubroutineType(types: !13958)
!13958 = !{!144, !2223}
!13959 = !{!13960}
!13960 = !DILocalVariable(name: "thread", arg: 1, scope: !13956, file: !2219, line: 238, type: !2223)
!13961 = !DILocation(line: 0, scope: !13956)
!13962 = !DILocation(line: 244, column: 2, scope: !13956)
!13963 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2219, file: !2219, line: 248, type: !13964, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13966)
!13964 = !DISubroutineType(types: !13965)
!13965 = !{!103, !2222, !1071, !344}
!13966 = !{!13967, !13968, !13969}
!13967 = !DILocalVariable(name: "thread", arg: 1, scope: !13963, file: !2219, line: 248, type: !2222)
!13968 = !DILocalVariable(name: "buf", arg: 2, scope: !13963, file: !2219, line: 248, type: !1071)
!13969 = !DILocalVariable(name: "size", arg: 3, scope: !13963, file: !2219, line: 248, type: !344)
!13970 = !DILocation(line: 0, scope: !13963)
!13971 = !DILocation(line: 257, column: 2, scope: !13963)
!13972 = !DILocation(line: 0, scope: !2218)
!13973 = !DILocation(line: 281, column: 11, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !2218, file: !2219, line: 281, column: 6)
!13975 = !DILocation(line: 281, column: 20, scope: !13974)
!13976 = !DILocation(line: 275, column: 45, scope: !2218)
!13977 = !DILocation(line: 285, column: 10, scope: !2218)
!13978 = !DILocation(line: 0, scope: !2339)
!13979 = !DILocation(line: 293, column: 39, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !2339, file: !2219, line: 293, column: 2)
!13981 = !DILocation(line: 293, column: 2, scope: !2339)
!13982 = !DILocation(line: 273, column: 14, scope: !2218)
!13983 = !DILocation(line: 309, column: 2, scope: !2218)
!13984 = !DILocation(line: 309, column: 11, scope: !2218)
!13985 = !DILocation(line: 311, column: 2, scope: !2218)
!13986 = !DILocation(line: 293, column: 26, scope: !13980)
!13987 = !DILocation(line: 294, column: 9, scope: !13988)
!13988 = distinct !DILexicalBlock(scope: !13980, file: !2219, line: 293, column: 54)
!13989 = !DILocation(line: 295, column: 21, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13988, file: !2219, line: 295, column: 7)
!13991 = !DILocation(line: 295, column: 28, scope: !13990)
!13992 = !DILocation(line: 295, column: 7, scope: !13988)
!13993 = !DILocation(line: 299, column: 25, scope: !13988)
!13994 = !DILocation(line: 299, column: 41, scope: !13988)
!13995 = !DILocation(line: 300, column: 7, scope: !13988)
!13996 = !DILocation(line: 300, column: 26, scope: !13988)
!13997 = !DILocation(line: 299, column: 10, scope: !13988)
!13998 = !DILocation(line: 299, column: 7, scope: !13988)
!13999 = !DILocation(line: 302, column: 16, scope: !13988)
!14000 = !DILocation(line: 304, column: 20, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13988, file: !2219, line: 304, column: 7)
!14002 = !DILocation(line: 304, column: 7, scope: !13988)
!14003 = !DILocation(line: 305, column: 26, scope: !14004)
!14004 = distinct !DILexicalBlock(scope: !14001, file: !2219, line: 304, column: 26)
!14005 = !DILocation(line: 305, column: 42, scope: !14004)
!14006 = !DILocation(line: 305, column: 11, scope: !14004)
!14007 = !DILocation(line: 305, column: 8, scope: !14004)
!14008 = !DILocation(line: 306, column: 3, scope: !14004)
!14009 = !DILocation(line: 293, column: 50, scope: !13980)
!14010 = !DILocation(line: 312, column: 1, scope: !2218)
!14011 = distinct !DISubprogram(name: "copy_bytes", scope: !2219, file: !2219, line: 261, type: !14012, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14014)
!14012 = !DISubroutineType(types: !14013)
!14013 = !{!344, !1071, !344, !144, !344}
!14014 = !{!14015, !14016, !14017, !14018, !14019}
!14015 = !DILocalVariable(name: "dest", arg: 1, scope: !14011, file: !2219, line: 261, type: !1071)
!14016 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14011, file: !2219, line: 261, type: !344)
!14017 = !DILocalVariable(name: "src", arg: 3, scope: !14011, file: !2219, line: 261, type: !144)
!14018 = !DILocalVariable(name: "src_size", arg: 4, scope: !14011, file: !2219, line: 261, type: !344)
!14019 = !DILocalVariable(name: "bytes_to_copy", scope: !14011, file: !2219, line: 263, type: !344)
!14020 = !DILocation(line: 0, scope: !14011)
!14021 = !DILocation(line: 265, column: 18, scope: !14011)
!14022 = !DILocation(line: 266, column: 2, scope: !14011)
!14023 = !DILocation(line: 268, column: 2, scope: !14011)
!14024 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2219, file: !2219, line: 383, type: !14025, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14027)
!14025 = !DISubroutineType(types: !14026)
!14026 = !{null, !2223}
!14027 = !{!14028}
!14028 = !DILocalVariable(name: "thread", arg: 1, scope: !14024, file: !2219, line: 383, type: !2223)
!14029 = !DILocation(line: 0, scope: !14024)
!14030 = !DILocation(line: 387, column: 2, scope: !14024)
!14031 = !DILocation(line: 388, column: 1, scope: !14024)
!14032 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2219, file: !2219, line: 528, type: !14033, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14040)
!14033 = !DISubroutineType(types: !14034)
!14034 = !{!1071, !2223, !14035, !344, !3555, !102, !102, !102, !103, !121, !144}
!14035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14036, size: 32)
!14036 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3556, line: 44, baseType: !14037)
!14037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2173, line: 47, size: 8, elements: !14038)
!14038 = !{!14039}
!14039 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14037, file: !2173, line: 48, baseType: !146, size: 8)
!14040 = !{!14041, !14042, !14043, !14044, !14045, !14046, !14047, !14048, !14049, !14050, !14051}
!14041 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14032, file: !2219, line: 528, type: !2223)
!14042 = !DILocalVariable(name: "stack", arg: 2, scope: !14032, file: !2219, line: 529, type: !14035)
!14043 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14032, file: !2219, line: 529, type: !344)
!14044 = !DILocalVariable(name: "entry", arg: 4, scope: !14032, file: !2219, line: 530, type: !3555)
!14045 = !DILocalVariable(name: "p1", arg: 5, scope: !14032, file: !2219, line: 531, type: !102)
!14046 = !DILocalVariable(name: "p2", arg: 6, scope: !14032, file: !2219, line: 531, type: !102)
!14047 = !DILocalVariable(name: "p3", arg: 7, scope: !14032, file: !2219, line: 531, type: !102)
!14048 = !DILocalVariable(name: "prio", arg: 8, scope: !14032, file: !2219, line: 532, type: !103)
!14049 = !DILocalVariable(name: "options", arg: 9, scope: !14032, file: !2219, line: 532, type: !121)
!14050 = !DILocalVariable(name: "name", arg: 10, scope: !14032, file: !2219, line: 532, type: !144)
!14051 = !DILocalVariable(name: "stack_ptr", scope: !14032, file: !2219, line: 534, type: !1071)
!14052 = !DILocation(line: 0, scope: !14032)
!14053 = !DILocation(line: 550, column: 28, scope: !14032)
!14054 = !DILocation(line: 550, column: 2, scope: !14032)
!14055 = !DILocation(line: 553, column: 34, scope: !14032)
!14056 = !DILocation(line: 553, column: 2, scope: !14032)
!14057 = !DILocation(line: 554, column: 14, scope: !14032)
!14058 = !DILocation(line: 564, column: 2, scope: !14032)
!14059 = !DILocation(line: 567, column: 14, scope: !14032)
!14060 = !DILocation(line: 567, column: 24, scope: !14032)
!14061 = !DILocation(line: 612, column: 7, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14032, file: !2219, line: 612, column: 6)
!14063 = !DILocation(line: 612, column: 6, scope: !14032)
!14064 = !DILocation(line: 627, column: 40, scope: !14032)
!14065 = !DILocation(line: 637, column: 2, scope: !14032)
!14066 = !DILocation(line: 613, column: 15, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14062, file: !2219, line: 612, column: 17)
!14068 = !DILocation(line: 613, column: 29, scope: !14067)
!14069 = !DILocation(line: 638, column: 1, scope: !14032)
!14070 = distinct !DISubprogram(name: "z_waitq_init", scope: !14071, file: !14071, line: 47, type: !14072, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14074)
!14071 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14072 = !DISubroutineType(types: !14073)
!14073 = !{null, !2254}
!14074 = !{!14075}
!14075 = !DILocalVariable(name: "w", arg: 1, scope: !14070, file: !14071, line: 47, type: !2254)
!14076 = !DILocation(line: 0, scope: !14070)
!14077 = !DILocation(line: 49, column: 21, scope: !14070)
!14078 = !DILocation(line: 49, column: 2, scope: !14070)
!14079 = !DILocation(line: 50, column: 1, scope: !14070)
!14080 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2219, file: !2219, line: 791, type: !14081, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14084)
!14081 = !DISubroutineType(types: !14082)
!14082 = !{null, !14083, !103, !121, !32}
!14083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!14084 = !{!14085, !14086, !14087, !14088}
!14085 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14080, file: !2219, line: 791, type: !14083)
!14086 = !DILocalVariable(name: "priority", arg: 2, scope: !14080, file: !2219, line: 791, type: !103)
!14087 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14080, file: !2219, line: 792, type: !121)
!14088 = !DILocalVariable(name: "options", arg: 4, scope: !14080, file: !2219, line: 792, type: !32)
!14089 = !DILocation(line: 0, scope: !14080)
!14090 = !DILocation(line: 795, column: 15, scope: !14080)
!14091 = !DILocation(line: 795, column: 25, scope: !14080)
!14092 = !DILocation(line: 796, column: 30, scope: !14080)
!14093 = !DILocation(line: 796, column: 15, scope: !14080)
!14094 = !DILocation(line: 796, column: 28, scope: !14080)
!14095 = !DILocation(line: 797, column: 30, scope: !14080)
!14096 = !DILocation(line: 797, column: 15, scope: !14080)
!14097 = !DILocation(line: 797, column: 28, scope: !14080)
!14098 = !DILocation(line: 799, column: 22, scope: !14080)
!14099 = !DILocation(line: 799, column: 15, scope: !14080)
!14100 = !DILocation(line: 799, column: 20, scope: !14080)
!14101 = !DILocation(line: 801, column: 15, scope: !14080)
!14102 = !DILocation(line: 801, column: 28, scope: !14080)
!14103 = !DILocation(line: 814, column: 2, scope: !14080)
!14104 = !DILocation(line: 815, column: 1, scope: !14080)
!14105 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2219, file: !2219, line: 449, type: !14106, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14108)
!14106 = !DISubroutineType(types: !14107)
!14107 = !{!1071, !2223, !14035, !344}
!14108 = !{!14109, !14110, !14111, !14112, !14113, !14114, !14115, !14116}
!14109 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14105, file: !2219, line: 449, type: !2223)
!14110 = !DILocalVariable(name: "stack", arg: 2, scope: !14105, file: !2219, line: 450, type: !14035)
!14111 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14105, file: !2219, line: 450, type: !344)
!14112 = !DILocalVariable(name: "stack_obj_size", scope: !14105, file: !2219, line: 452, type: !344)
!14113 = !DILocalVariable(name: "stack_buf_size", scope: !14105, file: !2219, line: 452, type: !344)
!14114 = !DILocalVariable(name: "stack_ptr", scope: !14105, file: !2219, line: 453, type: !1071)
!14115 = !DILocalVariable(name: "stack_buf_start", scope: !14105, file: !2219, line: 453, type: !1071)
!14116 = !DILocalVariable(name: "delta", scope: !14105, file: !2219, line: 454, type: !344)
!14117 = !DILocation(line: 0, scope: !14105)
!14118 = !DILocation(line: 465, column: 20, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14105, file: !2219, line: 463, column: 2)
!14120 = !DILocation(line: 466, column: 21, scope: !14119)
!14121 = !DILocation(line: 473, column: 28, scope: !14105)
!14122 = !DILocation(line: 514, column: 33, scope: !14105)
!14123 = !DILocation(line: 514, column: 25, scope: !14105)
!14124 = !DILocation(line: 514, column: 31, scope: !14105)
!14125 = !DILocation(line: 515, column: 25, scope: !14105)
!14126 = !DILocation(line: 515, column: 30, scope: !14105)
!14127 = !DILocation(line: 516, column: 25, scope: !14105)
!14128 = !DILocation(line: 516, column: 31, scope: !14105)
!14129 = !DILocation(line: 520, column: 2, scope: !14105)
!14130 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2173, file: !2173, line: 331, type: !14131, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14133)
!14131 = !DISubroutineType(types: !14132)
!14132 = !{!1071, !14035}
!14133 = !{!14134}
!14134 = !DILocalVariable(name: "sym", arg: 1, scope: !14130, file: !2173, line: 331, type: !14035)
!14135 = !DILocation(line: 0, scope: !14130)
!14136 = !DILocation(line: 333, column: 21, scope: !14130)
!14137 = !DILocation(line: 333, column: 2, scope: !14130)
!14138 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14139, file: !14139, line: 40, type: !14140, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14142)
!14139 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14140 = !DISubroutineType(types: !14141)
!14141 = !{null, !14083}
!14142 = !{!14143}
!14143 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14138, file: !14139, line: 40, type: !14083)
!14144 = !DILocation(line: 0, scope: !14138)
!14145 = !DILocation(line: 42, column: 31, scope: !14138)
!14146 = !DILocation(line: 42, column: 2, scope: !14138)
!14147 = !DILocation(line: 43, column: 1, scope: !14138)
!14148 = distinct !DISubprogram(name: "z_init_timeout", scope: !14139, file: !14139, line: 25, type: !2280, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14149)
!14149 = !{!14150}
!14150 = !DILocalVariable(name: "to", arg: 1, scope: !14148, file: !14139, line: 25, type: !2282)
!14151 = !DILocation(line: 0, scope: !14148)
!14152 = !DILocation(line: 27, column: 22, scope: !14148)
!14153 = !DILocation(line: 27, column: 2, scope: !14148)
!14154 = !DILocation(line: 28, column: 1, scope: !14148)
!14155 = distinct !DISubprogram(name: "sys_dnode_init", scope: !309, file: !309, line: 211, type: !14156, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14158)
!14156 = !DISubroutineType(types: !14157)
!14157 = !{null, !2326}
!14158 = !{!14159}
!14159 = !DILocalVariable(name: "node", arg: 1, scope: !14155, file: !309, line: 211, type: !2326)
!14160 = !DILocation(line: 0, scope: !14155)
!14161 = !DILocation(line: 213, column: 8, scope: !14155)
!14162 = !DILocation(line: 213, column: 13, scope: !14155)
!14163 = !DILocation(line: 214, column: 8, scope: !14155)
!14164 = !DILocation(line: 214, column: 13, scope: !14155)
!14165 = !DILocation(line: 215, column: 1, scope: !14155)
!14166 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !14167, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14170)
!14167 = !DISubroutineType(types: !14168)
!14168 = !{null, !14169}
!14169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!14170 = !{!14171}
!14171 = !DILocalVariable(name: "list", arg: 1, scope: !14166, file: !309, line: 197, type: !14169)
!14172 = !DILocation(line: 0, scope: !14166)
!14173 = !DILocation(line: 199, column: 8, scope: !14166)
!14174 = !DILocation(line: 199, column: 13, scope: !14166)
!14175 = !DILocation(line: 200, column: 8, scope: !14166)
!14176 = !DILocation(line: 200, column: 13, scope: !14166)
!14177 = !DILocation(line: 201, column: 1, scope: !14166)
!14178 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2219, file: !2219, line: 641, type: !14179, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14185)
!14179 = !DISubroutineType(types: !14180)
!14180 = !{!2222, !2223, !14035, !344, !3555, !102, !102, !102, !103, !121, !14181}
!14181 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1709, line: 67, baseType: !14182)
!14182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1709, line: 65, size: 64, elements: !14183)
!14183 = !{!14184}
!14184 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14182, file: !1709, line: 66, baseType: !1708, size: 64)
!14185 = !{!14186, !14187, !14188, !14189, !14190, !14191, !14192, !14193, !14194, !14195}
!14186 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14178, file: !2219, line: 641, type: !2223)
!14187 = !DILocalVariable(name: "stack", arg: 2, scope: !14178, file: !2219, line: 642, type: !14035)
!14188 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14178, file: !2219, line: 643, type: !344)
!14189 = !DILocalVariable(name: "entry", arg: 4, scope: !14178, file: !2219, line: 643, type: !3555)
!14190 = !DILocalVariable(name: "p1", arg: 5, scope: !14178, file: !2219, line: 644, type: !102)
!14191 = !DILocalVariable(name: "p2", arg: 6, scope: !14178, file: !2219, line: 644, type: !102)
!14192 = !DILocalVariable(name: "p3", arg: 7, scope: !14178, file: !2219, line: 644, type: !102)
!14193 = !DILocalVariable(name: "prio", arg: 8, scope: !14178, file: !2219, line: 645, type: !103)
!14194 = !DILocalVariable(name: "options", arg: 9, scope: !14178, file: !2219, line: 645, type: !121)
!14195 = !DILocalVariable(name: "delay", arg: 10, scope: !14178, file: !2219, line: 645, type: !14181)
!14196 = !DILocation(line: 0, scope: !14178)
!14197 = !DILocation(line: 649, column: 2, scope: !14178)
!14198 = !DILocation(line: 652, column: 7, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14178, file: !2219, line: 652, column: 6)
!14200 = !DILocation(line: 652, column: 6, scope: !14178)
!14201 = !DILocation(line: 653, column: 3, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14199, file: !2219, line: 652, column: 39)
!14203 = !DILocation(line: 654, column: 2, scope: !14202)
!14204 = !DILocation(line: 656, column: 2, scope: !14178)
!14205 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2219, file: !2219, line: 401, type: !14206, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14208)
!14206 = !DISubroutineType(types: !14207)
!14207 = !{null, !2223, !14181}
!14208 = !{!14209, !14210}
!14209 = !DILocalVariable(name: "thread", arg: 1, scope: !14205, file: !2219, line: 401, type: !2223)
!14210 = !DILocalVariable(name: "delay", arg: 2, scope: !14205, file: !2219, line: 401, type: !14181)
!14211 = !DILocation(line: 0, scope: !14205)
!14212 = !DILocation(line: 404, column: 6, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14205, file: !2219, line: 404, column: 6)
!14214 = !DILocation(line: 404, column: 6, scope: !14205)
!14215 = !DILocation(line: 405, column: 3, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14213, file: !2219, line: 404, column: 38)
!14217 = !DILocation(line: 406, column: 2, scope: !14216)
!14218 = !DILocation(line: 407, column: 3, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14213, file: !2219, line: 406, column: 9)
!14220 = !DILocation(line: 413, column: 1, scope: !14205)
!14221 = distinct !DISubprogram(name: "k_thread_start", scope: !3677, file: !3677, line: 205, type: !14222, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14224)
!14222 = !DISubroutineType(types: !14223)
!14223 = !{null, !2222}
!14224 = !{!14225}
!14225 = !DILocalVariable(name: "thread", arg: 1, scope: !14221, file: !3677, line: 205, type: !2222)
!14226 = !DILocation(line: 0, scope: !14221)
!14227 = !DILocation(line: 214, column: 2, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !14221, file: !3677, line: 214, column: 2)
!14229 = !{i64 2154867108}
!14230 = !DILocation(line: 215, column: 2, scope: !14221)
!14231 = !DILocation(line: 216, column: 1, scope: !14221)
!14232 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14139, file: !14139, line: 47, type: !14206, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14233)
!14233 = !{!14234, !14235}
!14234 = !DILocalVariable(name: "thread", arg: 1, scope: !14232, file: !14139, line: 47, type: !2223)
!14235 = !DILocalVariable(name: "ticks", arg: 2, scope: !14232, file: !14139, line: 47, type: !14181)
!14236 = !DILocation(line: 0, scope: !14232)
!14237 = !DILocation(line: 49, column: 30, scope: !14232)
!14238 = !DILocation(line: 49, column: 2, scope: !14232)
!14239 = !DILocation(line: 50, column: 1, scope: !14232)
!14240 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2219, file: !2219, line: 748, type: !3244, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14241)
!14241 = !{!14242, !14260}
!14242 = !DILocalVariable(name: "thread_data", scope: !14243, file: !2219, line: 750, type: !14244)
!14243 = distinct !DILexicalBlock(scope: !14240, file: !2219, line: 750, column: 2)
!14244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14245, size: 32)
!14245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !300, line: 620, size: 384, elements: !14246)
!14246 = !{!14247, !14248, !14249, !14250, !14251, !14252, !14253, !14254, !14255, !14256, !14257, !14259}
!14247 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14245, file: !300, line: 621, baseType: !2223, size: 32)
!14248 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14245, file: !300, line: 622, baseType: !14035, size: 32, offset: 32)
!14249 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14245, file: !300, line: 623, baseType: !32, size: 32, offset: 64)
!14250 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14245, file: !300, line: 624, baseType: !3555, size: 32, offset: 96)
!14251 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14245, file: !300, line: 625, baseType: !102, size: 32, offset: 128)
!14252 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14245, file: !300, line: 626, baseType: !102, size: 32, offset: 160)
!14253 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14245, file: !300, line: 627, baseType: !102, size: 32, offset: 192)
!14254 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14245, file: !300, line: 628, baseType: !103, size: 32, offset: 224)
!14255 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14245, file: !300, line: 629, baseType: !121, size: 32, offset: 256)
!14256 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14245, file: !300, line: 630, baseType: !332, size: 32, offset: 288)
!14257 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14245, file: !300, line: 631, baseType: !14258, size: 32, offset: 320)
!14258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 32)
!14259 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14245, file: !300, line: 632, baseType: !144, size: 32, offset: 352)
!14260 = !DILocalVariable(name: "thread_data", scope: !14261, file: !2219, line: 781, type: !14244)
!14261 = distinct !DILexicalBlock(scope: !14240, file: !2219, line: 781, column: 2)
!14262 = !DILocation(line: 0, scope: !14243)
!14263 = !DILocation(line: 750, column: 2, scope: !14243)
!14264 = !DILocation(line: 780, column: 2, scope: !14240)
!14265 = !DILocation(line: 0, scope: !14261)
!14266 = !DILocation(line: 781, column: 2, scope: !14261)
!14267 = !DILocation(line: 752, column: 17, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14269, file: !2219, line: 750, column: 38)
!14269 = distinct !DILexicalBlock(scope: !14243, file: !2219, line: 750, column: 2)
!14270 = !DILocation(line: 753, column: 17, scope: !14268)
!14271 = !DILocation(line: 754, column: 17, scope: !14268)
!14272 = !DILocation(line: 755, column: 17, scope: !14268)
!14273 = !DILocation(line: 756, column: 17, scope: !14268)
!14274 = !DILocation(line: 757, column: 17, scope: !14268)
!14275 = !DILocation(line: 758, column: 17, scope: !14268)
!14276 = !DILocation(line: 759, column: 17, scope: !14268)
!14277 = !DILocation(line: 760, column: 17, scope: !14268)
!14278 = !DILocation(line: 751, column: 3, scope: !14268)
!14279 = !DILocation(line: 763, column: 16, scope: !14268)
!14280 = !DILocation(line: 763, column: 29, scope: !14268)
!14281 = !DILocation(line: 763, column: 39, scope: !14268)
!14282 = !DILocation(line: 750, column: 2, scope: !14269)
!14283 = !DILocation(line: 750, column: 2, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14269, file: !2219, line: 750, column: 2)
!14285 = distinct !{!14285, !14263, !14286}
!14286 = !DILocation(line: 764, column: 2, scope: !14243)
!14287 = !DILocation(line: 787, column: 2, scope: !14240)
!14288 = !DILocation(line: 788, column: 1, scope: !14240)
!14289 = !DILocation(line: 782, column: 20, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14291, file: !2219, line: 782, column: 7)
!14291 = distinct !DILexicalBlock(scope: !14292, file: !2219, line: 781, column: 38)
!14292 = distinct !DILexicalBlock(scope: !14261, file: !2219, line: 781, column: 2)
!14293 = !DILocation(line: 782, column: 31, scope: !14290)
!14294 = !DILocation(line: 782, column: 7, scope: !14291)
!14295 = !DILocation(line: 783, column: 37, scope: !14296)
!14296 = distinct !DILexicalBlock(scope: !14290, file: !2219, line: 782, column: 51)
!14297 = !DILocation(line: 784, column: 10, scope: !14296)
!14298 = !DILocation(line: 783, column: 4, scope: !14296)
!14299 = !DILocation(line: 785, column: 3, scope: !14296)
!14300 = !DILocation(line: 781, column: 2, scope: !14292)
!14301 = !DILocation(line: 781, column: 2, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14292, file: !2219, line: 781, column: 2)
!14303 = distinct !{!14303, !14266, !14304}
!14304 = !DILocation(line: 786, column: 2, scope: !14261)
!14305 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !6004, file: !6004, line: 403, type: !6005, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14306)
!14306 = !{!14307}
!14307 = !DILocalVariable(name: "t", arg: 1, scope: !14305, file: !6004, line: 403, type: !1605)
!14308 = !DILocation(line: 0, scope: !14305)
!14309 = !DILocalVariable(name: "t", arg: 1, scope: !14310, file: !6004, line: 102, type: !1605)
!14310 = distinct !DISubprogram(name: "z_tmcvt", scope: !6004, file: !6004, line: 102, type: !6012, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14311)
!14311 = !{!14309, !14312, !14313, !14314, !14315, !14316, !14317, !14318, !14319, !14320, !14321}
!14312 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14310, file: !6004, line: 102, type: !121)
!14313 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14310, file: !6004, line: 103, type: !121)
!14314 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14310, file: !6004, line: 103, type: !157)
!14315 = !DILocalVariable(name: "result32", arg: 5, scope: !14310, file: !6004, line: 104, type: !157)
!14316 = !DILocalVariable(name: "round_up", arg: 6, scope: !14310, file: !6004, line: 104, type: !157)
!14317 = !DILocalVariable(name: "round_off", arg: 7, scope: !14310, file: !6004, line: 105, type: !157)
!14318 = !DILocalVariable(name: "mul_ratio", scope: !14310, file: !6004, line: 107, type: !157)
!14319 = !DILocalVariable(name: "div_ratio", scope: !14310, file: !6004, line: 109, type: !157)
!14320 = !DILocalVariable(name: "off", scope: !14310, file: !6004, line: 116, type: !1605)
!14321 = !DILocalVariable(name: "rdivisor", scope: !14322, file: !6004, line: 119, type: !121)
!14322 = distinct !DILexicalBlock(scope: !14323, file: !6004, line: 118, column: 18)
!14323 = distinct !DILexicalBlock(scope: !14310, file: !6004, line: 118, column: 6)
!14324 = !DILocation(line: 0, scope: !14310, inlinedAt: !14325)
!14325 = distinct !DILocation(line: 406, column: 9, scope: !14305)
!14326 = !DILocation(line: 145, column: 13, scope: !14327, inlinedAt: !14325)
!14327 = distinct !DILexicalBlock(scope: !14328, file: !6004, line: 144, column: 10)
!14328 = distinct !DILexicalBlock(scope: !14329, file: !6004, line: 142, column: 7)
!14329 = distinct !DILexicalBlock(scope: !14330, file: !6004, line: 141, column: 24)
!14330 = distinct !DILexicalBlock(scope: !14331, file: !6004, line: 141, column: 13)
!14331 = distinct !DILexicalBlock(scope: !14310, file: !6004, line: 134, column: 6)
!14332 = !DILocation(line: 406, column: 2, scope: !14305)
!14333 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2219, file: !2219, line: 817, type: !3553, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14334)
!14334 = !{!14335, !14336, !14337, !14338}
!14335 = !DILocalVariable(name: "entry", arg: 1, scope: !14333, file: !2219, line: 817, type: !3555)
!14336 = !DILocalVariable(name: "p1", arg: 2, scope: !14333, file: !2219, line: 818, type: !102)
!14337 = !DILocalVariable(name: "p2", arg: 3, scope: !14333, file: !2219, line: 818, type: !102)
!14338 = !DILocalVariable(name: "p3", arg: 4, scope: !14333, file: !2219, line: 818, type: !102)
!14339 = !DILocation(line: 0, scope: !14333)
!14340 = !DILocation(line: 822, column: 2, scope: !14333)
!14341 = !DILocation(line: 822, column: 17, scope: !14333)
!14342 = !DILocation(line: 822, column: 30, scope: !14333)
!14343 = !DILocation(line: 823, column: 2, scope: !14333)
!14344 = !DILocation(line: 845, column: 2, scope: !14333)
!14345 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2219, file: !2219, line: 888, type: !14346, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14348)
!14346 = !DISubroutineType(types: !14347)
!14347 = !{!103, !2223}
!14348 = !{!14349}
!14349 = !DILocalVariable(name: "thread", arg: 1, scope: !14345, file: !2219, line: 888, type: !2223)
!14350 = !DILocation(line: 0, scope: !14345)
!14351 = !DILocation(line: 893, column: 2, scope: !14345)
!14352 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2219, file: !2219, line: 897, type: !14353, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14355)
!14353 = !DISubroutineType(types: !14354)
!14354 = !{!103, !2223, !32}
!14355 = !{!14356, !14357}
!14356 = !DILocalVariable(name: "thread", arg: 1, scope: !14352, file: !2219, line: 897, type: !2223)
!14357 = !DILocalVariable(name: "options", arg: 2, scope: !14352, file: !2219, line: 897, type: !32)
!14358 = !DILocation(line: 0, scope: !14352)
!14359 = !DILocation(line: 902, column: 2, scope: !14352)
!14360 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2219, file: !2219, line: 1072, type: !14361, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14366)
!14361 = !DISubroutineType(types: !14362)
!14362 = !{!103, !2222, !14363}
!14363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14364, size: 32)
!14364 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !355, line: 234, baseType: !14365)
!14365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !355, line: 192, elements: !461)
!14366 = !{!14367, !14368}
!14367 = !DILocalVariable(name: "thread", arg: 1, scope: !14360, file: !2219, line: 1072, type: !2222)
!14368 = !DILocalVariable(name: "stats", arg: 2, scope: !14360, file: !2219, line: 1073, type: !14363)
!14369 = !DILocation(line: 0, scope: !14360)
!14370 = !DILocation(line: 1075, column: 14, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14360, file: !2219, line: 1075, column: 6)
!14372 = !DILocation(line: 1075, column: 23, scope: !14371)
!14373 = !DILocation(line: 1086, column: 1, scope: !14360)
!14374 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2219, file: !2219, line: 1088, type: !14375, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14377)
!14375 = !DISubroutineType(types: !14376)
!14376 = !{!103, !14363}
!14377 = !{!14378}
!14378 = !DILocalVariable(name: "stats", arg: 1, scope: !14374, file: !2219, line: 1088, type: !14363)
!14379 = !DILocation(line: 0, scope: !14374)
!14380 = !DILocation(line: 1094, column: 12, scope: !14381)
!14381 = distinct !DILexicalBlock(scope: !14374, file: !2219, line: 1094, column: 6)
!14382 = !DILocation(line: 1120, column: 1, scope: !14374)
!14383 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14384, file: !14384, line: 20, type: !3244, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3225, retainedNodes: !461)
!14384 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14385 = !DILocation(line: 30, column: 2, scope: !14383)
!14386 = !DILocation(line: 31, column: 1, scope: !14383)
!14387 = distinct !DISubprogram(name: "idle", scope: !14384, file: !14384, line: 33, type: !3558, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3225, retainedNodes: !14388)
!14388 = !{!14389, !14390, !14391}
!14389 = !DILocalVariable(name: "unused1", arg: 1, scope: !14387, file: !14384, line: 33, type: !102)
!14390 = !DILocalVariable(name: "unused2", arg: 2, scope: !14387, file: !14384, line: 33, type: !102)
!14391 = !DILocalVariable(name: "unused3", arg: 3, scope: !14387, file: !14384, line: 33, type: !102)
!14392 = !DILocation(line: 0, scope: !14387)
!14393 = !DILocation(line: 41, column: 2, scope: !14387)
!14394 = !DILocation(line: 55, column: 2, scope: !14395, inlinedAt: !14399)
!14395 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5804, file: !5804, line: 42, type: !5805, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3225, retainedNodes: !14396)
!14396 = !{!14397, !14398}
!14397 = !DILocalVariable(name: "key", scope: !14395, file: !5804, line: 44, type: !32)
!14398 = !DILocalVariable(name: "tmp", scope: !14395, file: !5804, line: 53, type: !32)
!14399 = distinct !DILocation(line: 62, column: 10, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14387, file: !14384, line: 41, column: 15)
!14401 = !{i64 2222464}
!14402 = !DILocation(line: 0, scope: !14395, inlinedAt: !14399)
!14403 = !DILocation(line: 86, column: 3, scope: !14400)
!14404 = distinct !{!14404, !14393, !14405}
!14405 = !DILocation(line: 105, column: 2, scope: !14387)
!14406 = distinct !DISubprogram(name: "k_cpu_idle", scope: !300, file: !300, line: 5627, type: !3244, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3225, retainedNodes: !461)
!14407 = !DILocation(line: 5629, column: 2, scope: !14406)
!14408 = !DILocation(line: 5630, column: 1, scope: !14406)
!14409 = !DISubprogram(name: "arch_cpu_idle", scope: !3556, file: !3556, line: 167, type: !3244, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!14410 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2362, file: !2362, line: 41, type: !14411, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14424)
!14411 = !DISubroutineType(types: !14412)
!14412 = !{!103, !14413, !32, !32}
!14413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14414, size: 32)
!14414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !300, line: 2909, size: 128, elements: !14415)
!14415 = !{!14416, !14422, !14423}
!14416 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14414, file: !300, line: 2910, baseType: !14417, size: 64)
!14417 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !14418)
!14418 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !14419)
!14419 = !{!14420}
!14420 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14418, file: !304, line: 232, baseType: !14421, size: 64)
!14421 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2348)
!14422 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !14414, file: !300, line: 2911, baseType: !32, size: 32, offset: 64)
!14423 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !14414, file: !300, line: 2912, baseType: !32, size: 32, offset: 96)
!14424 = !{!14425, !14426, !14427}
!14425 = !DILocalVariable(name: "sem", arg: 1, scope: !14410, file: !2362, line: 41, type: !14413)
!14426 = !DILocalVariable(name: "initial_count", arg: 2, scope: !14410, file: !2362, line: 41, type: !32)
!14427 = !DILocalVariable(name: "limit", arg: 3, scope: !14410, file: !2362, line: 42, type: !32)
!14428 = !DILocation(line: 0, scope: !14410)
!14429 = !DILocation(line: 47, column: 2, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14410, file: !2362, line: 47, column: 2)
!14431 = !DILocation(line: 53, column: 7, scope: !14410)
!14432 = !DILocation(line: 53, column: 13, scope: !14410)
!14433 = !DILocation(line: 54, column: 7, scope: !14410)
!14434 = !DILocation(line: 54, column: 13, scope: !14410)
!14435 = !DILocation(line: 58, column: 21, scope: !14410)
!14436 = !DILocation(line: 58, column: 2, scope: !14410)
!14437 = !DILocation(line: 64, column: 2, scope: !14410)
!14438 = !DILocation(line: 65, column: 1, scope: !14410)
!14439 = distinct !DISubprogram(name: "z_waitq_init", scope: !14071, file: !14071, line: 47, type: !14440, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14443)
!14440 = !DISubroutineType(types: !14441)
!14441 = !{null, !14442}
!14442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14417, size: 32)
!14443 = !{!14444}
!14444 = !DILocalVariable(name: "w", arg: 1, scope: !14439, file: !14071, line: 47, type: !14442)
!14445 = !DILocation(line: 0, scope: !14439)
!14446 = !DILocation(line: 49, column: 21, scope: !14439)
!14447 = !DILocation(line: 49, column: 2, scope: !14439)
!14448 = !DILocation(line: 50, column: 1, scope: !14439)
!14449 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !14450, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14453)
!14450 = !DISubroutineType(types: !14451)
!14451 = !{null, !14452}
!14452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14421, size: 32)
!14453 = !{!14454}
!14454 = !DILocalVariable(name: "list", arg: 1, scope: !14449, file: !309, line: 197, type: !14452)
!14455 = !DILocation(line: 0, scope: !14449)
!14456 = !DILocation(line: 199, column: 8, scope: !14449)
!14457 = !DILocation(line: 199, column: 13, scope: !14449)
!14458 = !DILocation(line: 200, column: 8, scope: !14449)
!14459 = !DILocation(line: 200, column: 13, scope: !14449)
!14460 = !DILocation(line: 201, column: 1, scope: !14449)
!14461 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2362, file: !2362, line: 86, type: !14462, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14464)
!14462 = !DISubroutineType(types: !14463)
!14463 = !{null, !14413}
!14464 = !{!14465, !14466, !14471}
!14465 = !DILocalVariable(name: "sem", arg: 1, scope: !14461, file: !2362, line: 86, type: !14413)
!14466 = !DILocalVariable(name: "key", scope: !14461, file: !2362, line: 88, type: !14467)
!14467 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !14468)
!14468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !14469)
!14469 = !{!14470}
!14470 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14468, file: !460, line: 33, baseType: !103, size: 32)
!14471 = !DILocalVariable(name: "thread", scope: !14461, file: !2362, line: 89, type: !14472)
!14472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14473, size: 32)
!14473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !14474)
!14474 = !{!14475, !14513, !14525, !14526, !14527, !14528, !14534, !14546}
!14475 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14473, file: !355, line: 247, baseType: !14476, size: 384)
!14476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !14477)
!14477 = !{!14478, !14488, !14489, !14490, !14491, !14500, !14501, !14502}
!14478 = !DIDerivedType(tag: DW_TAG_member, scope: !14476, file: !355, line: 60, baseType: !14479, size: 64)
!14479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14476, file: !355, line: 60, size: 64, elements: !14480)
!14480 = !{!14481, !14482}
!14481 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14479, file: !355, line: 61, baseType: !2347, size: 64)
!14482 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14479, file: !355, line: 62, baseType: !14483, size: 64)
!14483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !14484)
!14484 = !{!14485}
!14485 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14483, file: !380, line: 50, baseType: !14486, size: 64)
!14486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14487, size: 64, elements: !385)
!14487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14483, size: 32)
!14488 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14476, file: !355, line: 68, baseType: !14442, size: 32, offset: 64)
!14489 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14476, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!14490 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14476, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!14491 = !DIDerivedType(tag: DW_TAG_member, scope: !14476, file: !355, line: 90, baseType: !14492, size: 16, offset: 112)
!14492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14476, file: !355, line: 90, size: 16, elements: !14493)
!14493 = !{!14494, !14499}
!14494 = !DIDerivedType(tag: DW_TAG_member, scope: !14492, file: !355, line: 91, baseType: !14495, size: 16)
!14495 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14492, file: !355, line: 91, size: 16, elements: !14496)
!14496 = !{!14497, !14498}
!14497 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14495, file: !355, line: 96, baseType: !403, size: 8)
!14498 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14495, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!14499 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14492, file: !355, line: 100, baseType: !328, size: 16)
!14500 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14476, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!14501 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14476, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!14502 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14476, file: !355, line: 131, baseType: !14503, size: 192, offset: 192)
!14503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !14504)
!14504 = !{!14505, !14506, !14512}
!14505 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14503, file: !304, line: 245, baseType: !2347, size: 64)
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14503, file: !304, line: 246, baseType: !14507, size: 32, offset: 64)
!14507 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !14508)
!14508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14509, size: 32)
!14509 = !DISubroutineType(types: !14510)
!14510 = !{null, !14511}
!14511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14503, size: 32)
!14512 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14503, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!14513 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14473, file: !355, line: 250, baseType: !14514, size: 288, offset: 384)
!14514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !14515)
!14515 = !{!14516, !14517, !14518, !14519, !14520, !14521, !14522, !14523, !14524}
!14516 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14514, file: !424, line: 26, baseType: !121, size: 32)
!14517 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14514, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!14518 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14514, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!14519 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14514, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!14520 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14514, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!14521 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14514, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!14522 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14514, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!14523 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14514, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!14524 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14514, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!14525 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14473, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!14526 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14473, file: !355, line: 256, baseType: !14417, size: 64, offset: 704)
!14527 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14473, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!14528 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14473, file: !355, line: 300, baseType: !14529, size: 96, offset: 800)
!14529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !14530)
!14530 = !{!14531, !14532, !14533}
!14531 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14529, file: !355, line: 153, baseType: !22, size: 32)
!14532 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14529, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!14533 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14529, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!14534 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14473, file: !355, line: 325, baseType: !14535, size: 32, offset: 896)
!14535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14536, size: 32)
!14536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !14537)
!14537 = !{!14538, !14544, !14545}
!14538 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14536, file: !300, line: 5074, baseType: !14539, size: 96)
!14539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !14540)
!14540 = !{!14541, !14542, !14543}
!14541 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14539, file: !450, line: 57, baseType: !453, size: 32)
!14542 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14539, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!14543 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14539, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!14544 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14536, file: !300, line: 5075, baseType: !14417, size: 64, offset: 96)
!14545 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14536, file: !300, line: 5076, baseType: !2363, offset: 160)
!14546 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14473, file: !355, line: 343, baseType: !14547, size: 64, offset: 928)
!14547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !14548)
!14548 = !{!14549, !14550}
!14549 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14547, file: !424, line: 63, baseType: !121, size: 32)
!14550 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14547, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!14551 = !DILocation(line: 0, scope: !14461)
!14552 = !DILocalVariable(name: "l", arg: 1, scope: !14553, file: !460, line: 136, type: !14556)
!14553 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !14554, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14557)
!14554 = !DISubroutineType(types: !14555)
!14555 = !{!14467, !14556}
!14556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!14557 = !{!14552, !14558}
!14558 = !DILocalVariable(name: "k", scope: !14553, file: !460, line: 139, type: !14467)
!14559 = !DILocation(line: 0, scope: !14553, inlinedAt: !14560)
!14560 = distinct !DILocation(line: 88, column: 25, scope: !14461)
!14561 = !DILocation(line: 55, column: 2, scope: !14562, inlinedAt: !14566)
!14562 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5804, file: !5804, line: 42, type: !5805, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14563)
!14563 = !{!14564, !14565}
!14564 = !DILocalVariable(name: "key", scope: !14562, file: !5804, line: 44, type: !32)
!14565 = !DILocalVariable(name: "tmp", scope: !14562, file: !5804, line: 53, type: !32)
!14566 = distinct !DILocation(line: 145, column: 10, scope: !14553, inlinedAt: !14560)
!14567 = !{i64 2224026}
!14568 = !DILocation(line: 0, scope: !14562, inlinedAt: !14566)
!14569 = !DILocation(line: 93, column: 39, scope: !14461)
!14570 = !DILocation(line: 93, column: 11, scope: !14461)
!14571 = !DILocation(line: 95, column: 13, scope: !14572)
!14572 = distinct !DILexicalBlock(scope: !14461, file: !2362, line: 95, column: 6)
!14573 = !DILocation(line: 95, column: 6, scope: !14461)
!14574 = !DILocalVariable(name: "thread", arg: 1, scope: !14575, file: !13765, line: 65, type: !14472)
!14575 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13765, file: !13765, line: 65, type: !14576, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14578)
!14576 = !DISubroutineType(types: !14577)
!14577 = !{null, !14472, !32}
!14578 = !{!14574, !14579}
!14579 = !DILocalVariable(name: "value", arg: 2, scope: !14575, file: !13765, line: 65, type: !32)
!14580 = !DILocation(line: 0, scope: !14575, inlinedAt: !14581)
!14581 = distinct !DILocation(line: 96, column: 3, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14572, file: !2362, line: 95, column: 22)
!14583 = !DILocation(line: 67, column: 15, scope: !14575, inlinedAt: !14581)
!14584 = !DILocation(line: 67, column: 33, scope: !14575, inlinedAt: !14581)
!14585 = !DILocation(line: 97, column: 3, scope: !14582)
!14586 = !DILocation(line: 98, column: 2, scope: !14582)
!14587 = !DILocation(line: 99, column: 23, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14572, file: !2362, line: 98, column: 9)
!14589 = !DILocation(line: 99, column: 37, scope: !14588)
!14590 = !DILocation(line: 99, column: 29, scope: !14588)
!14591 = !DILocation(line: 99, column: 17, scope: !14588)
!14592 = !DILocation(line: 99, column: 14, scope: !14588)
!14593 = !DILocation(line: 103, column: 2, scope: !14461)
!14594 = !DILocation(line: 106, column: 1, scope: !14461)
!14595 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2362, file: !2362, line: 117, type: !14596, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14602)
!14596 = !DISubroutineType(types: !14597)
!14597 = !{!103, !14413, !14598}
!14598 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1709, line: 67, baseType: !14599)
!14599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1709, line: 65, size: 64, elements: !14600)
!14600 = !{!14601}
!14601 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14599, file: !1709, line: 66, baseType: !1708, size: 64)
!14602 = !{!14603, !14604, !14605, !14606, !14607}
!14603 = !DILocalVariable(name: "sem", arg: 1, scope: !14595, file: !2362, line: 117, type: !14413)
!14604 = !DILocalVariable(name: "timeout", arg: 2, scope: !14595, file: !2362, line: 117, type: !14598)
!14605 = !DILocalVariable(name: "ret", scope: !14595, file: !2362, line: 119, type: !103)
!14606 = !DILocalVariable(name: "key", scope: !14595, file: !2362, line: 124, type: !14467)
!14607 = !DILabel(scope: !14595, name: "out", file: !2362, line: 145)
!14608 = !DILocation(line: 0, scope: !14595)
!14609 = !DILocation(line: 0, scope: !14553, inlinedAt: !14610)
!14610 = distinct !DILocation(line: 124, column: 25, scope: !14595)
!14611 = !DILocation(line: 55, column: 2, scope: !14562, inlinedAt: !14612)
!14612 = distinct !DILocation(line: 145, column: 10, scope: !14553, inlinedAt: !14610)
!14613 = !DILocation(line: 0, scope: !14562, inlinedAt: !14612)
!14614 = !DILocation(line: 128, column: 6, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14595, file: !2362, line: 128, column: 6)
!14616 = !DILocation(line: 128, column: 6, scope: !14595)
!14617 = !{!"branch_weights", i32 1, i32 2000}
!14618 = !DILocation(line: 129, column: 13, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !14615, file: !2362, line: 128, column: 31)
!14620 = !DILocalVariable(name: "key", arg: 2, scope: !14621, file: !460, line: 190, type: !14467)
!14621 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !14622, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14624)
!14622 = !DISubroutineType(types: !14623)
!14623 = !{null, !14556, !14467}
!14624 = !{!14625, !14620}
!14625 = !DILocalVariable(name: "l", arg: 1, scope: !14621, file: !460, line: 189, type: !14556)
!14626 = !DILocation(line: 0, scope: !14621, inlinedAt: !14627)
!14627 = distinct !DILocation(line: 130, column: 3, scope: !14619)
!14628 = !DILocalVariable(name: "key", arg: 1, scope: !14629, file: !5804, line: 84, type: !32)
!14629 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5804, file: !5804, line: 84, type: !5815, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14630)
!14630 = !{!14628}
!14631 = !DILocation(line: 0, scope: !14629, inlinedAt: !14632)
!14632 = distinct !DILocation(line: 215, column: 2, scope: !14621, inlinedAt: !14627)
!14633 = !DILocation(line: 95, column: 2, scope: !14629, inlinedAt: !14632)
!14634 = !{i64 2224843}
!14635 = !DILocation(line: 132, column: 3, scope: !14619)
!14636 = !DILocation(line: 135, column: 6, scope: !14637)
!14637 = distinct !DILexicalBlock(scope: !14595, file: !2362, line: 135, column: 6)
!14638 = !DILocation(line: 135, column: 6, scope: !14595)
!14639 = !DILocation(line: 0, scope: !14621, inlinedAt: !14640)
!14640 = distinct !DILocation(line: 136, column: 3, scope: !14641)
!14641 = distinct !DILexicalBlock(scope: !14637, file: !2362, line: 135, column: 40)
!14642 = !DILocation(line: 0, scope: !14629, inlinedAt: !14643)
!14643 = distinct !DILocation(line: 215, column: 2, scope: !14621, inlinedAt: !14640)
!14644 = !DILocation(line: 95, column: 2, scope: !14629, inlinedAt: !14643)
!14645 = !DILocation(line: 138, column: 3, scope: !14641)
!14646 = !DILocation(line: 143, column: 38, scope: !14595)
!14647 = !DILocation(line: 143, column: 8, scope: !14595)
!14648 = !DILocation(line: 143, column: 2, scope: !14595)
!14649 = !DILocation(line: 145, column: 1, scope: !14595)
!14650 = !DILocation(line: 148, column: 2, scope: !14595)
!14651 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2362, file: !2362, line: 151, type: !14462, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !14652)
!14652 = !{!14653, !14654, !14655}
!14653 = !DILocalVariable(name: "sem", arg: 1, scope: !14651, file: !2362, line: 151, type: !14413)
!14654 = !DILocalVariable(name: "thread", scope: !14651, file: !2362, line: 153, type: !14472)
!14655 = !DILocalVariable(name: "key", scope: !14651, file: !2362, line: 154, type: !14467)
!14656 = !DILocation(line: 0, scope: !14651)
!14657 = !DILocation(line: 0, scope: !14553, inlinedAt: !14658)
!14658 = distinct !DILocation(line: 154, column: 25, scope: !14651)
!14659 = !DILocation(line: 55, column: 2, scope: !14562, inlinedAt: !14660)
!14660 = distinct !DILocation(line: 145, column: 10, scope: !14553, inlinedAt: !14658)
!14661 = !DILocation(line: 0, scope: !14562, inlinedAt: !14660)
!14662 = !DILocation(line: 157, column: 12, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14651, file: !2362, line: 156, column: 15)
!14664 = !DILocation(line: 158, column: 14, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14663, file: !2362, line: 158, column: 7)
!14666 = !DILocation(line: 158, column: 7, scope: !14663)
!14667 = !DILocation(line: 0, scope: !14575, inlinedAt: !14668)
!14668 = distinct !DILocation(line: 161, column: 3, scope: !14663)
!14669 = !DILocation(line: 67, column: 15, scope: !14575, inlinedAt: !14668)
!14670 = !DILocation(line: 67, column: 33, scope: !14575, inlinedAt: !14668)
!14671 = !DILocation(line: 162, column: 3, scope: !14663)
!14672 = distinct !{!14672, !14673, !14674}
!14673 = !DILocation(line: 156, column: 2, scope: !14651)
!14674 = !DILocation(line: 163, column: 2, scope: !14651)
!14675 = !DILocation(line: 164, column: 7, scope: !14651)
!14676 = !DILocation(line: 164, column: 13, scope: !14651)
!14677 = !DILocation(line: 170, column: 2, scope: !14651)
!14678 = !DILocation(line: 171, column: 1, scope: !14651)
!14679 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2474, file: !2474, line: 93, type: !14680, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14682)
!14680 = !DISubroutineType(types: !14681)
!14681 = !{!332, !2369, !2369}
!14682 = !{!14683, !14684, !14685, !14686}
!14683 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14679, file: !2474, line: 93, type: !2369)
!14684 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14679, file: !2474, line: 94, type: !2369)
!14685 = !DILocalVariable(name: "b1", scope: !14679, file: !2474, line: 97, type: !332)
!14686 = !DILocalVariable(name: "b2", scope: !14679, file: !2474, line: 98, type: !332)
!14687 = !DILocation(line: 0, scope: !14679)
!14688 = !DILocation(line: 97, column: 30, scope: !14679)
!14689 = !DILocation(line: 98, column: 30, scope: !14679)
!14690 = !DILocation(line: 100, column: 9, scope: !14691)
!14691 = distinct !DILexicalBlock(scope: !14679, file: !2474, line: 100, column: 6)
!14692 = !DILocation(line: 100, column: 6, scope: !14679)
!14693 = !DILocation(line: 125, column: 1, scope: !14679)
!14694 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2474, file: !2474, line: 428, type: !14695, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14697)
!14695 = !DISubroutineType(types: !14696)
!14696 = !{null, !2369}
!14697 = !{!14698}
!14698 = !DILocalVariable(name: "curr", arg: 1, scope: !14694, file: !2474, line: 428, type: !2369)
!14699 = !DILocation(line: 0, scope: !14694)
!14700 = !DILocation(line: 434, column: 6, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14694, file: !2474, line: 434, column: 6)
!14702 = !DILocation(line: 434, column: 23, scope: !14701)
!14703 = !DILocation(line: 434, column: 6, scope: !14694)
!14704 = !DILocation(line: 435, column: 50, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14701, file: !2474, line: 434, column: 29)
!14706 = !DILocation(line: 435, column: 48, scope: !14705)
!14707 = !DILocation(line: 435, column: 29, scope: !14705)
!14708 = !DILocation(line: 436, column: 24, scope: !14705)
!14709 = !DILocation(line: 436, column: 3, scope: !14705)
!14710 = !DILocation(line: 437, column: 2, scope: !14705)
!14711 = !DILocation(line: 438, column: 1, scope: !14694)
!14712 = distinct !DISubprogram(name: "slice_time", scope: !2474, file: !2474, line: 407, type: !14713, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14715)
!14713 = !DISubroutineType(types: !14714)
!14714 = !{!103, !2369}
!14715 = !{!14716, !14717}
!14716 = !DILocalVariable(name: "curr", arg: 1, scope: !14712, file: !2474, line: 407, type: !2369)
!14717 = !DILocalVariable(name: "ret", scope: !14712, file: !2474, line: 409, type: !103)
!14718 = !DILocation(line: 0, scope: !14712)
!14719 = !DILocation(line: 409, column: 12, scope: !14712)
!14720 = !DILocation(line: 416, column: 2, scope: !14712)
!14721 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2474, file: !2474, line: 440, type: !14722, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14724)
!14722 = !DISubroutineType(types: !14723)
!14723 = !{null, !332, !103}
!14724 = !{!14725, !14726, !14727, !14733}
!14725 = !DILocalVariable(name: "slice", arg: 1, scope: !14721, file: !2474, line: 440, type: !332)
!14726 = !DILocalVariable(name: "prio", arg: 2, scope: !14721, file: !2474, line: 440, type: !103)
!14727 = !DILocalVariable(name: "__i", scope: !14728, file: !2474, line: 442, type: !14729)
!14728 = distinct !DILexicalBlock(scope: !14721, file: !2474, line: 442, column: 2)
!14729 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !14730)
!14730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !14731)
!14731 = !{!14732}
!14732 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14730, file: !460, line: 33, baseType: !103, size: 32)
!14733 = !DILocalVariable(name: "__key", scope: !14728, file: !2474, line: 442, type: !14729)
!14734 = !DILocation(line: 0, scope: !14721)
!14735 = !DILocation(line: 0, scope: !14728)
!14736 = !DILocalVariable(name: "l", arg: 1, scope: !14737, file: !460, line: 136, type: !14740)
!14737 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !14738, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14741)
!14738 = !DISubroutineType(types: !14739)
!14739 = !{!14729, !14740}
!14740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 32)
!14741 = !{!14736, !14742}
!14742 = !DILocalVariable(name: "k", scope: !14737, file: !460, line: 139, type: !14729)
!14743 = !DILocation(line: 0, scope: !14737, inlinedAt: !14744)
!14744 = distinct !DILocation(line: 442, column: 2, scope: !14728)
!14745 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !14750)
!14746 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5804, file: !5804, line: 42, type: !5805, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14747)
!14747 = !{!14748, !14749}
!14748 = !DILocalVariable(name: "key", scope: !14746, file: !5804, line: 44, type: !32)
!14749 = !DILocalVariable(name: "tmp", scope: !14746, file: !5804, line: 53, type: !32)
!14750 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !14744)
!14751 = !{i64 2266435}
!14752 = !DILocation(line: 0, scope: !14746, inlinedAt: !14750)
!14753 = !DILocation(line: 443, column: 29, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14755, file: !2474, line: 442, column: 26)
!14755 = distinct !DILexicalBlock(scope: !14728, file: !2474, line: 442, column: 2)
!14756 = !DILocation(line: 444, column: 17, scope: !14754)
!14757 = !DILocation(line: 445, column: 51, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14754, file: !2474, line: 445, column: 7)
!14759 = !DILocation(line: 445, column: 7, scope: !14754)
!14760 = !DILocation(line: 0, scope: !14754)
!14761 = !DILocation(line: 451, column: 18, scope: !14754)
!14762 = !DILocation(line: 452, column: 3, scope: !14754)
!14763 = !DILocalVariable(name: "key", arg: 2, scope: !14764, file: !460, line: 190, type: !14729)
!14764 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !14765, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14767)
!14765 = !DISubroutineType(types: !14766)
!14766 = !{null, !14740, !14729}
!14767 = !{!14768, !14763}
!14768 = !DILocalVariable(name: "l", arg: 1, scope: !14764, file: !460, line: 189, type: !14740)
!14769 = !DILocation(line: 0, scope: !14764, inlinedAt: !14770)
!14770 = distinct !DILocation(line: 442, column: 2, scope: !14755)
!14771 = !DILocalVariable(name: "key", arg: 1, scope: !14772, file: !5804, line: 84, type: !32)
!14772 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5804, file: !5804, line: 84, type: !5815, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14773)
!14773 = !{!14771}
!14774 = !DILocation(line: 0, scope: !14772, inlinedAt: !14775)
!14775 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !14770)
!14776 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !14775)
!14777 = !{i64 2267252}
!14778 = !DILocation(line: 454, column: 1, scope: !14721)
!14779 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !6004, file: !6004, line: 389, type: !7831, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14780)
!14780 = !{!14781}
!14781 = !DILocalVariable(name: "t", arg: 1, scope: !14779, file: !6004, line: 389, type: !121)
!14782 = !DILocation(line: 0, scope: !14779)
!14783 = !DILocalVariable(name: "t", arg: 1, scope: !14784, file: !6004, line: 102, type: !1605)
!14784 = distinct !DISubprogram(name: "z_tmcvt", scope: !6004, file: !6004, line: 102, type: !6012, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14785)
!14785 = !{!14783, !14786, !14787, !14788, !14789, !14790, !14791, !14792, !14793, !14794, !14795}
!14786 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14784, file: !6004, line: 102, type: !121)
!14787 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14784, file: !6004, line: 103, type: !121)
!14788 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14784, file: !6004, line: 103, type: !157)
!14789 = !DILocalVariable(name: "result32", arg: 5, scope: !14784, file: !6004, line: 104, type: !157)
!14790 = !DILocalVariable(name: "round_up", arg: 6, scope: !14784, file: !6004, line: 104, type: !157)
!14791 = !DILocalVariable(name: "round_off", arg: 7, scope: !14784, file: !6004, line: 105, type: !157)
!14792 = !DILocalVariable(name: "mul_ratio", scope: !14784, file: !6004, line: 107, type: !157)
!14793 = !DILocalVariable(name: "div_ratio", scope: !14784, file: !6004, line: 109, type: !157)
!14794 = !DILocalVariable(name: "off", scope: !14784, file: !6004, line: 116, type: !1605)
!14795 = !DILocalVariable(name: "rdivisor", scope: !14796, file: !6004, line: 119, type: !121)
!14796 = distinct !DILexicalBlock(scope: !14797, file: !6004, line: 118, column: 18)
!14797 = distinct !DILexicalBlock(scope: !14784, file: !6004, line: 118, column: 6)
!14798 = !DILocation(line: 0, scope: !14784, inlinedAt: !14799)
!14799 = distinct !DILocation(line: 392, column: 9, scope: !14779)
!14800 = !DILocation(line: 143, column: 25, scope: !14801, inlinedAt: !14799)
!14801 = distinct !DILexicalBlock(scope: !14802, file: !6004, line: 142, column: 17)
!14802 = distinct !DILexicalBlock(scope: !14803, file: !6004, line: 142, column: 7)
!14803 = distinct !DILexicalBlock(scope: !14804, file: !6004, line: 141, column: 24)
!14804 = distinct !DILexicalBlock(scope: !14805, file: !6004, line: 141, column: 13)
!14805 = distinct !DILexicalBlock(scope: !14784, file: !6004, line: 134, column: 6)
!14806 = !DILocation(line: 392, column: 2, scope: !14779)
!14807 = distinct !DISubprogram(name: "z_time_slice", scope: !2474, file: !2474, line: 502, type: !8466, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14808)
!14808 = !{!14809, !14810}
!14809 = !DILocalVariable(name: "ticks", arg: 1, scope: !14807, file: !2474, line: 502, type: !103)
!14810 = !DILocalVariable(name: "key", scope: !14807, file: !2474, line: 511, type: !14729)
!14811 = !DILocation(line: 0, scope: !14807)
!14812 = !DILocation(line: 0, scope: !14737, inlinedAt: !14813)
!14813 = distinct !DILocation(line: 511, column: 25, scope: !14807)
!14814 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !14815)
!14815 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !14813)
!14816 = !DILocation(line: 0, scope: !14746, inlinedAt: !14815)
!14817 = !DILocation(line: 514, column: 6, scope: !14818)
!14818 = distinct !DILexicalBlock(scope: !14807, file: !2474, line: 514, column: 6)
!14819 = !DILocation(line: 514, column: 25, scope: !14818)
!14820 = !DILocation(line: 514, column: 22, scope: !14818)
!14821 = !DILocation(line: 514, column: 6, scope: !14807)
!14822 = !DILocation(line: 515, column: 3, scope: !14823)
!14823 = distinct !DILexicalBlock(scope: !14818, file: !2474, line: 514, column: 35)
!14824 = !DILocation(line: 0, scope: !14764, inlinedAt: !14825)
!14825 = distinct !DILocation(line: 516, column: 3, scope: !14823)
!14826 = !DILocation(line: 0, scope: !14772, inlinedAt: !14827)
!14827 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !14825)
!14828 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !14827)
!14829 = !DILocation(line: 517, column: 3, scope: !14823)
!14830 = !DILocation(line: 519, column: 18, scope: !14807)
!14831 = !DILocation(line: 522, column: 6, scope: !14832)
!14832 = distinct !DILexicalBlock(scope: !14807, file: !2474, line: 522, column: 6)
!14833 = !DILocation(line: 522, column: 27, scope: !14832)
!14834 = !DILocation(line: 522, column: 30, scope: !14832)
!14835 = !DILocation(line: 522, column: 6, scope: !14807)
!14836 = !DILocation(line: 523, column: 30, scope: !14837)
!14837 = distinct !DILexicalBlock(scope: !14838, file: !2474, line: 523, column: 7)
!14838 = distinct !DILexicalBlock(scope: !14832, file: !2474, line: 522, column: 51)
!14839 = !DILocation(line: 523, column: 13, scope: !14837)
!14840 = !DILocation(line: 523, column: 7, scope: !14838)
!14841 = !DILocation(line: 530, column: 10, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14837, file: !2474, line: 523, column: 43)
!14843 = !DILocation(line: 531, column: 3, scope: !14842)
!14844 = !DILocation(line: 532, column: 30, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14837, file: !2474, line: 531, column: 10)
!14846 = !DILocation(line: 535, column: 29, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14832, file: !2474, line: 534, column: 9)
!14848 = !DILocation(line: 0, scope: !14764, inlinedAt: !14849)
!14849 = distinct !DILocation(line: 537, column: 2, scope: !14807)
!14850 = !DILocation(line: 0, scope: !14772, inlinedAt: !14851)
!14851 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !14849)
!14852 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !14851)
!14853 = !DILocation(line: 538, column: 1, scope: !14807)
!14854 = distinct !DISubprogram(name: "sliceable", scope: !2474, file: !2474, line: 468, type: !14855, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14857)
!14855 = !DISubroutineType(types: !14856)
!14856 = !{!157, !2369}
!14857 = !{!14858, !14859}
!14858 = !DILocalVariable(name: "thread", arg: 1, scope: !14854, file: !2474, line: 468, type: !2369)
!14859 = !DILocalVariable(name: "ret", scope: !14854, file: !2474, line: 470, type: !157)
!14860 = !DILocation(line: 0, scope: !14854)
!14861 = !DILocation(line: 470, column: 13, scope: !14854)
!14862 = !DILocation(line: 471, column: 3, scope: !14854)
!14863 = !DILocation(line: 471, column: 7, scope: !14854)
!14864 = !DILocation(line: 472, column: 3, scope: !14854)
!14865 = !DILocation(line: 472, column: 37, scope: !14854)
!14866 = !DILocation(line: 472, column: 24, scope: !14854)
!14867 = !DILocation(line: 472, column: 43, scope: !14854)
!14868 = !DILocation(line: 472, column: 7, scope: !14854)
!14869 = !DILocation(line: 473, column: 3, scope: !14854)
!14870 = !DILocation(line: 473, column: 7, scope: !14854)
!14871 = !DILocation(line: 473, column: 6, scope: !14854)
!14872 = !DILocation(line: 479, column: 2, scope: !14854)
!14873 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2474, file: !2474, line: 482, type: !14874, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14876)
!14874 = !DISubroutineType(types: !14875)
!14875 = !{!14729, !14729}
!14876 = !{!14877, !14878}
!14877 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14873, file: !2474, line: 482, type: !14729)
!14878 = !DILocalVariable(name: "curr", scope: !14873, file: !2474, line: 484, type: !2369)
!14879 = !DILocation(line: 0, scope: !14873)
!14880 = !DILocation(line: 484, column: 26, scope: !14873)
!14881 = !DILocation(line: 493, column: 7, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14873, file: !2474, line: 493, column: 6)
!14883 = !DILocation(line: 493, column: 6, scope: !14873)
!14884 = !DILocation(line: 494, column: 3, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14882, file: !2474, line: 493, column: 49)
!14886 = !DILocation(line: 495, column: 2, scope: !14885)
!14887 = !DILocation(line: 496, column: 2, scope: !14873)
!14888 = !DILocation(line: 499, column: 1, scope: !14873)
!14889 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13745, file: !13745, line: 106, type: !14855, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14890)
!14890 = !{!14891, !14892}
!14891 = !DILocalVariable(name: "thread", arg: 1, scope: !14889, file: !13745, line: 106, type: !2369)
!14892 = !DILocalVariable(name: "state", scope: !14889, file: !13745, line: 108, type: !154)
!14893 = !DILocation(line: 0, scope: !14889)
!14894 = !DILocation(line: 108, column: 31, scope: !14889)
!14895 = !DILocation(line: 110, column: 16, scope: !14889)
!14896 = !DILocation(line: 111, column: 41, scope: !14889)
!14897 = !DILocation(line: 110, column: 2, scope: !14889)
!14898 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2474, file: !2474, line: 393, type: !14695, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14899)
!14899 = !{!14900}
!14900 = !DILocalVariable(name: "thread", arg: 1, scope: !14898, file: !2474, line: 393, type: !2369)
!14901 = !DILocation(line: 0, scope: !14898)
!14902 = !DILocation(line: 395, column: 6, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14898, file: !2474, line: 395, column: 6)
!14904 = !DILocation(line: 395, column: 6, scope: !14898)
!14905 = !DILocalVariable(name: "thread", arg: 1, scope: !14906, file: !2474, line: 264, type: !2369)
!14906 = distinct !DISubprogram(name: "dequeue_thread", scope: !2474, file: !2474, line: 264, type: !14695, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14907)
!14907 = !{!14905}
!14908 = !DILocation(line: 0, scope: !14906, inlinedAt: !14909)
!14909 = distinct !DILocation(line: 396, column: 3, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14903, file: !2474, line: 395, column: 34)
!14911 = !DILocation(line: 266, column: 15, scope: !14906, inlinedAt: !14909)
!14912 = !DILocation(line: 266, column: 28, scope: !14906, inlinedAt: !14909)
!14913 = !DILocalVariable(name: "thread", arg: 1, scope: !14914, file: !2474, line: 232, type: !2369)
!14914 = distinct !DISubprogram(name: "runq_remove", scope: !2474, file: !2474, line: 232, type: !14695, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14915)
!14915 = !{!14913}
!14916 = !DILocation(line: 0, scope: !14914, inlinedAt: !14917)
!14917 = distinct !DILocation(line: 268, column: 3, scope: !14918, inlinedAt: !14909)
!14918 = distinct !DILexicalBlock(scope: !14919, file: !2474, line: 267, column: 35)
!14919 = distinct !DILexicalBlock(scope: !14906, file: !2474, line: 267, column: 6)
!14920 = !DILocation(line: 234, column: 2, scope: !14914, inlinedAt: !14917)
!14921 = !DILocation(line: 397, column: 2, scope: !14910)
!14922 = !DILocalVariable(name: "thread", arg: 1, scope: !14923, file: !2474, line: 250, type: !2369)
!14923 = distinct !DISubprogram(name: "queue_thread", scope: !2474, file: !2474, line: 250, type: !14695, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14924)
!14924 = !{!14922}
!14925 = !DILocation(line: 0, scope: !14923, inlinedAt: !14926)
!14926 = distinct !DILocation(line: 398, column: 2, scope: !14898)
!14927 = !DILocation(line: 252, column: 15, scope: !14923, inlinedAt: !14926)
!14928 = !DILocation(line: 252, column: 28, scope: !14923, inlinedAt: !14926)
!14929 = !DILocalVariable(name: "thread", arg: 1, scope: !14930, file: !2474, line: 227, type: !2369)
!14930 = distinct !DISubprogram(name: "runq_add", scope: !2474, file: !2474, line: 227, type: !14695, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14931)
!14931 = !{!14929}
!14932 = !DILocation(line: 0, scope: !14930, inlinedAt: !14933)
!14933 = distinct !DILocation(line: 254, column: 3, scope: !14934, inlinedAt: !14926)
!14934 = distinct !DILexicalBlock(scope: !14935, file: !2474, line: 253, column: 35)
!14935 = distinct !DILexicalBlock(scope: !14923, file: !2474, line: 253, column: 6)
!14936 = !DILocalVariable(name: "pq", arg: 1, scope: !14937, file: !2474, line: 181, type: !14940)
!14937 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2474, file: !2474, line: 181, type: !14938, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14941)
!14938 = !DISubroutineType(types: !14939)
!14939 = !{null, !14940, !2369}
!14940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 32)
!14941 = !{!14936, !14942, !14943}
!14942 = !DILocalVariable(name: "thread", arg: 2, scope: !14937, file: !2474, line: 182, type: !2369)
!14943 = !DILocalVariable(name: "t", scope: !14937, file: !2474, line: 184, type: !2369)
!14944 = !DILocation(line: 0, scope: !14937, inlinedAt: !14945)
!14945 = distinct !DILocation(line: 229, column: 2, scope: !14930, inlinedAt: !14933)
!14946 = !DILocation(line: 188, column: 2, scope: !14947, inlinedAt: !14945)
!14947 = distinct !DILexicalBlock(scope: !14937, file: !2474, line: 188, column: 2)
!14948 = !DILocation(line: 188, column: 2, scope: !14949, inlinedAt: !14945)
!14949 = distinct !DILexicalBlock(scope: !14947, file: !2474, line: 188, column: 2)
!14950 = !DILocation(line: 0, scope: !14947, inlinedAt: !14945)
!14951 = !DILocation(line: 189, column: 7, scope: !14952, inlinedAt: !14945)
!14952 = distinct !DILexicalBlock(scope: !14953, file: !2474, line: 189, column: 7)
!14953 = distinct !DILexicalBlock(scope: !14949, file: !2474, line: 188, column: 56)
!14954 = !DILocation(line: 189, column: 35, scope: !14952, inlinedAt: !14945)
!14955 = !DILocation(line: 189, column: 7, scope: !14953, inlinedAt: !14945)
!14956 = !DILocation(line: 191, column: 21, scope: !14957, inlinedAt: !14945)
!14957 = distinct !DILexicalBlock(scope: !14952, file: !2474, line: 189, column: 40)
!14958 = !DILocation(line: 190, column: 4, scope: !14957, inlinedAt: !14945)
!14959 = !DILocation(line: 192, column: 4, scope: !14957, inlinedAt: !14945)
!14960 = distinct !{!14960, !14946, !14961}
!14961 = !DILocation(line: 194, column: 2, scope: !14947, inlinedAt: !14945)
!14962 = !DILocation(line: 196, column: 37, scope: !14937, inlinedAt: !14945)
!14963 = !DILocation(line: 196, column: 2, scope: !14937, inlinedAt: !14945)
!14964 = !DILocation(line: 197, column: 1, scope: !14937, inlinedAt: !14945)
!14965 = !DILocation(line: 399, column: 25, scope: !14898)
!14966 = !DILocation(line: 399, column: 22, scope: !14898)
!14967 = !DILocation(line: 399, column: 2, scope: !14898)
!14968 = !DILocation(line: 400, column: 1, scope: !14898)
!14969 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13745, file: !13745, line: 136, type: !14855, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14970)
!14970 = !{!14971}
!14971 = !DILocalVariable(name: "thread", arg: 1, scope: !14969, file: !13745, line: 136, type: !2369)
!14972 = !DILocation(line: 0, scope: !14969)
!14973 = !DILocation(line: 138, column: 9, scope: !14969)
!14974 = !DILocation(line: 138, column: 2, scope: !14969)
!14975 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2474, file: !2474, line: 1137, type: !14938, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14976)
!14976 = !{!14977, !14978}
!14977 = !DILocalVariable(name: "pq", arg: 1, scope: !14975, file: !2474, line: 1137, type: !14940)
!14978 = !DILocalVariable(name: "thread", arg: 2, scope: !14975, file: !2474, line: 1137, type: !2369)
!14979 = !DILocation(line: 0, scope: !14975)
!14980 = !DILocation(line: 1141, column: 33, scope: !14975)
!14981 = !DILocation(line: 1141, column: 2, scope: !14975)
!14982 = !DILocation(line: 1142, column: 1, scope: !14975)
!14983 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !309, file: !309, line: 294, type: !14984, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14986)
!14984 = !DISubroutineType(types: !14985)
!14985 = !{!2470, !14940}
!14986 = !{!14987}
!14987 = !DILocalVariable(name: "list", arg: 1, scope: !14983, file: !309, line: 294, type: !14940)
!14988 = !DILocation(line: 0, scope: !14983)
!14989 = !DILocation(line: 296, column: 9, scope: !14983)
!14990 = !DILocation(line: 296, column: 49, scope: !14983)
!14991 = !DILocation(line: 296, column: 2, scope: !14983)
!14992 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !309, file: !309, line: 443, type: !14993, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !14995)
!14993 = !DISubroutineType(types: !14994)
!14994 = !{null, !2470, !2470}
!14995 = !{!14996, !14997, !14998}
!14996 = !DILocalVariable(name: "successor", arg: 1, scope: !14992, file: !309, line: 443, type: !2470)
!14997 = !DILocalVariable(name: "node", arg: 2, scope: !14992, file: !309, line: 443, type: !2470)
!14998 = !DILocalVariable(name: "prev", scope: !14992, file: !309, line: 445, type: !14999)
!14999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2470)
!15000 = !DILocation(line: 0, scope: !14992)
!15001 = !DILocation(line: 445, column: 39, scope: !14992)
!15002 = !DILocation(line: 447, column: 8, scope: !14992)
!15003 = !DILocation(line: 447, column: 13, scope: !14992)
!15004 = !DILocation(line: 448, column: 8, scope: !14992)
!15005 = !DILocation(line: 448, column: 13, scope: !14992)
!15006 = !DILocation(line: 449, column: 8, scope: !14992)
!15007 = !DILocation(line: 449, column: 13, scope: !14992)
!15008 = !DILocation(line: 450, column: 18, scope: !14992)
!15009 = !DILocation(line: 451, column: 1, scope: !14992)
!15010 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !309, file: !309, line: 341, type: !15011, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15013)
!15011 = !DISubroutineType(types: !15012)
!15012 = !{!2470, !14940, !2470}
!15013 = !{!15014, !15015}
!15014 = !DILocalVariable(name: "list", arg: 1, scope: !15010, file: !309, line: 341, type: !14940)
!15015 = !DILocalVariable(name: "node", arg: 2, scope: !15010, file: !309, line: 342, type: !2470)
!15016 = !DILocation(line: 0, scope: !15010)
!15017 = !DILocation(line: 344, column: 15, scope: !15010)
!15018 = !DILocation(line: 344, column: 9, scope: !15010)
!15019 = !DILocation(line: 344, column: 26, scope: !15010)
!15020 = !DILocation(line: 344, column: 2, scope: !15010)
!15021 = distinct !DISubprogram(name: "sys_dlist_append", scope: !309, file: !309, line: 404, type: !15022, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15024)
!15022 = !DISubroutineType(types: !15023)
!15023 = !{null, !14940, !2470}
!15024 = !{!15025, !15026, !15027}
!15025 = !DILocalVariable(name: "list", arg: 1, scope: !15021, file: !309, line: 404, type: !14940)
!15026 = !DILocalVariable(name: "node", arg: 2, scope: !15021, file: !309, line: 404, type: !2470)
!15027 = !DILocalVariable(name: "tail", scope: !15021, file: !309, line: 406, type: !14999)
!15028 = !DILocation(line: 0, scope: !15021)
!15029 = !DILocation(line: 406, column: 34, scope: !15021)
!15030 = !DILocation(line: 408, column: 8, scope: !15021)
!15031 = !DILocation(line: 408, column: 13, scope: !15021)
!15032 = !DILocation(line: 409, column: 8, scope: !15021)
!15033 = !DILocation(line: 409, column: 13, scope: !15021)
!15034 = !DILocation(line: 411, column: 8, scope: !15021)
!15035 = !DILocation(line: 411, column: 13, scope: !15021)
!15036 = !DILocation(line: 412, column: 13, scope: !15021)
!15037 = !DILocation(line: 413, column: 1, scope: !15021)
!15038 = distinct !DISubprogram(name: "update_cache", scope: !2474, file: !2474, line: 559, type: !8466, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15039)
!15039 = !{!15040, !15041}
!15040 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15038, file: !2474, line: 559, type: !103)
!15041 = !DILocalVariable(name: "thread", scope: !15038, file: !2474, line: 562, type: !2369)
!15042 = !DILocation(line: 0, scope: !15038)
!15043 = !DILocation(line: 239, column: 9, scope: !15044, inlinedAt: !15047)
!15044 = distinct !DISubprogram(name: "runq_best", scope: !2474, file: !2474, line: 237, type: !15045, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !461)
!15045 = !DISubroutineType(types: !15046)
!15046 = !{!2369}
!15047 = distinct !DILocation(line: 314, column: 28, scope: !15048, inlinedAt: !15051)
!15048 = distinct !DISubprogram(name: "next_up", scope: !2474, file: !2474, line: 312, type: !15045, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15049)
!15049 = !{!15050}
!15050 = !DILocalVariable(name: "thread", scope: !15048, file: !2474, line: 314, type: !2369)
!15051 = distinct !DILocation(line: 562, column: 28, scope: !15038)
!15052 = !DILocation(line: 0, scope: !15048, inlinedAt: !15051)
!15053 = !DILocation(line: 340, column: 17, scope: !15048, inlinedAt: !15051)
!15054 = !DILocation(line: 340, column: 9, scope: !15048, inlinedAt: !15051)
!15055 = !DILocalVariable(name: "thread", arg: 1, scope: !15056, file: !2474, line: 127, type: !2369)
!15056 = distinct !DISubprogram(name: "should_preempt", scope: !2474, file: !2474, line: 127, type: !15057, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15059)
!15057 = !DISubroutineType(types: !15058)
!15058 = !{!157, !2369, !103}
!15059 = !{!15055, !15060}
!15060 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15056, file: !2474, line: 128, type: !103)
!15061 = !DILocation(line: 0, scope: !15056, inlinedAt: !15062)
!15062 = distinct !DILocation(line: 564, column: 6, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15038, file: !2474, line: 564, column: 6)
!15064 = !DILocation(line: 133, column: 17, scope: !15065, inlinedAt: !15062)
!15065 = distinct !DILexicalBlock(scope: !15056, file: !2474, line: 133, column: 6)
!15066 = !DILocation(line: 0, scope: !15063)
!15067 = !DILocation(line: 133, column: 6, scope: !15056, inlinedAt: !15062)
!15068 = !DILocation(line: 140, column: 6, scope: !15069, inlinedAt: !15062)
!15069 = distinct !DILexicalBlock(scope: !15056, file: !2474, line: 140, column: 6)
!15070 = !DILocation(line: 140, column: 6, scope: !15056, inlinedAt: !15062)
!15071 = !DILocation(line: 150, column: 9, scope: !15072, inlinedAt: !15062)
!15072 = distinct !DILexicalBlock(scope: !15056, file: !2474, line: 149, column: 6)
!15073 = !DILocation(line: 149, column: 6, scope: !15056, inlinedAt: !15062)
!15074 = !DILocation(line: 157, column: 6, scope: !15075, inlinedAt: !15062)
!15075 = distinct !DILexicalBlock(scope: !15056, file: !2474, line: 157, column: 6)
!15076 = !DILocation(line: 564, column: 6, scope: !15038)
!15077 = !DILocation(line: 566, column: 14, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !15079, file: !2474, line: 566, column: 7)
!15079 = distinct !DILexicalBlock(scope: !15063, file: !2474, line: 564, column: 42)
!15080 = !DILocation(line: 566, column: 7, scope: !15079)
!15081 = !DILocation(line: 567, column: 4, scope: !15082)
!15082 = distinct !DILexicalBlock(scope: !15078, file: !2474, line: 566, column: 27)
!15083 = !DILocation(line: 568, column: 3, scope: !15082)
!15084 = !DILocation(line: 585, column: 1, scope: !15038)
!15085 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2474, file: !2474, line: 1144, type: !15086, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15088)
!15086 = !DISubroutineType(types: !15087)
!15087 = !{!2369, !14940}
!15088 = !{!15089, !15090, !15091}
!15089 = !DILocalVariable(name: "pq", arg: 1, scope: !15085, file: !2474, line: 1144, type: !14940)
!15090 = !DILocalVariable(name: "thread", scope: !15085, file: !2474, line: 1146, type: !2369)
!15091 = !DILocalVariable(name: "n", scope: !15085, file: !2474, line: 1147, type: !2470)
!15092 = !DILocation(line: 0, scope: !15085)
!15093 = !DILocation(line: 1147, column: 19, scope: !15085)
!15094 = !DILocation(line: 1152, column: 2, scope: !15085)
!15095 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13745, file: !13745, line: 115, type: !14855, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15096)
!15096 = !{!15097}
!15097 = !DILocalVariable(name: "thread", arg: 1, scope: !15095, file: !13745, line: 115, type: !2369)
!15098 = !DILocation(line: 0, scope: !15095)
!15099 = !DILocation(line: 117, column: 46, scope: !15095)
!15100 = !DILocation(line: 117, column: 10, scope: !15095)
!15101 = !DILocation(line: 117, column: 9, scope: !15095)
!15102 = !DILocation(line: 117, column: 2, scope: !15095)
!15103 = distinct !DISubprogram(name: "is_preempt", scope: !2474, file: !2474, line: 62, type: !14713, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15104)
!15104 = !{!15105}
!15105 = !DILocalVariable(name: "thread", arg: 1, scope: !15103, file: !2474, line: 62, type: !2369)
!15106 = !DILocation(line: 0, scope: !15103)
!15107 = !DILocation(line: 65, column: 22, scope: !15103)
!15108 = !DILocation(line: 65, column: 30, scope: !15103)
!15109 = !DILocation(line: 65, column: 2, scope: !15103)
!15110 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14139, file: !14139, line: 35, type: !15111, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15115)
!15111 = !DISubroutineType(types: !15112)
!15112 = !{!157, !15113}
!15113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15114, size: 32)
!15114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2420)
!15115 = !{!15116}
!15116 = !DILocalVariable(name: "to", arg: 1, scope: !15110, file: !14139, line: 35, type: !15113)
!15117 = !DILocation(line: 0, scope: !15110)
!15118 = !DILocation(line: 37, column: 35, scope: !15110)
!15119 = !DILocation(line: 37, column: 10, scope: !15110)
!15120 = !DILocation(line: 37, column: 9, scope: !15110)
!15121 = !DILocation(line: 37, column: 2, scope: !15110)
!15122 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !309, file: !309, line: 225, type: !15123, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15127)
!15123 = !DISubroutineType(types: !15124)
!15124 = !{!157, !15125}
!15125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15126, size: 32)
!15126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2379)
!15127 = !{!15128}
!15128 = !DILocalVariable(name: "node", arg: 1, scope: !15122, file: !309, line: 225, type: !15125)
!15129 = !DILocation(line: 0, scope: !15122)
!15130 = !DILocation(line: 227, column: 15, scope: !15122)
!15131 = !DILocation(line: 227, column: 20, scope: !15122)
!15132 = !DILocation(line: 227, column: 2, scope: !15122)
!15133 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !309, file: !309, line: 325, type: !15011, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15134)
!15134 = !{!15135, !15136}
!15135 = !DILocalVariable(name: "list", arg: 1, scope: !15133, file: !309, line: 325, type: !14940)
!15136 = !DILocalVariable(name: "node", arg: 2, scope: !15133, file: !309, line: 326, type: !2470)
!15137 = !DILocation(line: 0, scope: !15133)
!15138 = !DILocation(line: 328, column: 24, scope: !15133)
!15139 = !DILocation(line: 328, column: 15, scope: !15133)
!15140 = !DILocation(line: 328, column: 9, scope: !15133)
!15141 = !DILocation(line: 328, column: 45, scope: !15133)
!15142 = !DILocation(line: 328, column: 2, scope: !15133)
!15143 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !309, file: !309, line: 266, type: !15144, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15146)
!15144 = !DISubroutineType(types: !15145)
!15145 = !{!157, !14940}
!15146 = !{!15147}
!15147 = !DILocalVariable(name: "list", arg: 1, scope: !15143, file: !309, line: 266, type: !14940)
!15148 = !DILocation(line: 0, scope: !15143)
!15149 = !DILocation(line: 268, column: 15, scope: !15143)
!15150 = !DILocation(line: 268, column: 20, scope: !15143)
!15151 = !DILocation(line: 268, column: 2, scope: !15143)
!15152 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !309, file: !309, line: 496, type: !15153, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15155)
!15153 = !DISubroutineType(types: !15154)
!15154 = !{null, !2470}
!15155 = !{!15156, !15157, !15158}
!15156 = !DILocalVariable(name: "node", arg: 1, scope: !15152, file: !309, line: 496, type: !2470)
!15157 = !DILocalVariable(name: "prev", scope: !15152, file: !309, line: 498, type: !14999)
!15158 = !DILocalVariable(name: "next", scope: !15152, file: !309, line: 499, type: !14999)
!15159 = !DILocation(line: 0, scope: !15152)
!15160 = !DILocation(line: 498, column: 34, scope: !15152)
!15161 = !DILocation(line: 499, column: 34, scope: !15152)
!15162 = !DILocation(line: 501, column: 8, scope: !15152)
!15163 = !DILocation(line: 501, column: 13, scope: !15152)
!15164 = !DILocation(line: 502, column: 8, scope: !15152)
!15165 = !DILocation(line: 502, column: 13, scope: !15152)
!15166 = !DILocation(line: 503, column: 2, scope: !15152)
!15167 = !DILocation(line: 504, column: 1, scope: !15152)
!15168 = distinct !DISubprogram(name: "sys_dnode_init", scope: !309, file: !309, line: 211, type: !15153, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15169)
!15169 = !{!15170}
!15170 = !DILocalVariable(name: "node", arg: 1, scope: !15168, file: !309, line: 211, type: !2470)
!15171 = !DILocation(line: 0, scope: !15168)
!15172 = !DILocation(line: 213, column: 8, scope: !15168)
!15173 = !DILocation(line: 213, column: 13, scope: !15168)
!15174 = !DILocation(line: 214, column: 8, scope: !15168)
!15175 = !DILocation(line: 214, column: 13, scope: !15168)
!15176 = !DILocation(line: 215, column: 1, scope: !15168)
!15177 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13745, file: !13745, line: 131, type: !15178, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15180)
!15178 = !DISubroutineType(types: !15179)
!15179 = !{!157, !2369, !121}
!15180 = !{!15181, !15182}
!15181 = !DILocalVariable(name: "thread", arg: 1, scope: !15177, file: !13745, line: 131, type: !2369)
!15182 = !DILocalVariable(name: "state", arg: 2, scope: !15177, file: !13745, line: 131, type: !121)
!15183 = !DILocation(line: 0, scope: !15177)
!15184 = !DILocation(line: 133, column: 23, scope: !15177)
!15185 = !DILocation(line: 133, column: 45, scope: !15177)
!15186 = !DILocation(line: 133, column: 2, scope: !15177)
!15187 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13745, file: !13745, line: 211, type: !15188, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15190)
!15188 = !DISubroutineType(types: !15189)
!15189 = !{!157, !103, !103}
!15190 = !{!15191, !15192}
!15191 = !DILocalVariable(name: "prio", arg: 1, scope: !15187, file: !13745, line: 211, type: !103)
!15192 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15187, file: !13745, line: 211, type: !103)
!15193 = !DILocation(line: 0, scope: !15187)
!15194 = !DILocation(line: 213, column: 9, scope: !15187)
!15195 = !DILocation(line: 213, column: 2, scope: !15187)
!15196 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13745, file: !13745, line: 83, type: !14855, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15197)
!15197 = !{!15198}
!15198 = !DILocalVariable(name: "thread", arg: 1, scope: !15196, file: !13745, line: 83, type: !2369)
!15199 = !DILocation(line: 0, scope: !15196)
!15200 = !DILocation(line: 89, column: 16, scope: !15196)
!15201 = !DILocation(line: 89, column: 2, scope: !15196)
!15202 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13745, file: !13745, line: 206, type: !15188, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15203)
!15203 = !{!15204, !15205}
!15204 = !DILocalVariable(name: "prio1", arg: 1, scope: !15202, file: !13745, line: 206, type: !103)
!15205 = !DILocalVariable(name: "prio2", arg: 2, scope: !15202, file: !13745, line: 206, type: !103)
!15206 = !DILocation(line: 0, scope: !15202)
!15207 = !DILocation(line: 208, column: 15, scope: !15202)
!15208 = !DILocation(line: 208, column: 2, scope: !15202)
!15209 = distinct !DISubprogram(name: "z_ready_thread", scope: !2474, file: !2474, line: 635, type: !14695, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15210)
!15210 = !{!15211, !15212, !15214}
!15211 = !DILocalVariable(name: "thread", arg: 1, scope: !15209, file: !2474, line: 635, type: !2369)
!15212 = !DILocalVariable(name: "__i", scope: !15213, file: !2474, line: 637, type: !14729)
!15213 = distinct !DILexicalBlock(scope: !15209, file: !2474, line: 637, column: 2)
!15214 = !DILocalVariable(name: "__key", scope: !15213, file: !2474, line: 637, type: !14729)
!15215 = !DILocation(line: 0, scope: !15209)
!15216 = !DILocation(line: 0, scope: !15213)
!15217 = !DILocation(line: 0, scope: !14737, inlinedAt: !15218)
!15218 = distinct !DILocation(line: 637, column: 2, scope: !15213)
!15219 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15220)
!15220 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15218)
!15221 = !DILocation(line: 0, scope: !14746, inlinedAt: !15220)
!15222 = !DILocation(line: 639, column: 4, scope: !15223)
!15223 = distinct !DILexicalBlock(scope: !15224, file: !2474, line: 638, column: 41)
!15224 = distinct !DILexicalBlock(scope: !15225, file: !2474, line: 638, column: 7)
!15225 = distinct !DILexicalBlock(scope: !15226, file: !2474, line: 637, column: 26)
!15226 = distinct !DILexicalBlock(scope: !15213, file: !2474, line: 637, column: 2)
!15227 = !DILocation(line: 0, scope: !14764, inlinedAt: !15228)
!15228 = distinct !DILocation(line: 637, column: 2, scope: !15226)
!15229 = !DILocation(line: 0, scope: !14772, inlinedAt: !15230)
!15230 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15228)
!15231 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15230)
!15232 = !DILocation(line: 642, column: 1, scope: !15209)
!15233 = distinct !DISubprogram(name: "ready_thread", scope: !2474, file: !2474, line: 617, type: !14695, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15234)
!15234 = !{!15235}
!15235 = !DILocalVariable(name: "thread", arg: 1, scope: !15233, file: !2474, line: 617, type: !2369)
!15236 = !DILocation(line: 0, scope: !15233)
!15237 = !DILocation(line: 626, column: 7, scope: !15238)
!15238 = distinct !DILexicalBlock(scope: !15233, file: !2474, line: 626, column: 6)
!15239 = !DILocation(line: 626, column: 34, scope: !15238)
!15240 = !DILocation(line: 626, column: 37, scope: !15238)
!15241 = !DILocation(line: 626, column: 6, scope: !15233)
!15242 = !DILocation(line: 0, scope: !14923, inlinedAt: !15243)
!15243 = distinct !DILocation(line: 629, column: 3, scope: !15244)
!15244 = distinct !DILexicalBlock(scope: !15238, file: !2474, line: 626, column: 64)
!15245 = !DILocation(line: 252, column: 15, scope: !14923, inlinedAt: !15243)
!15246 = !DILocation(line: 252, column: 28, scope: !14923, inlinedAt: !15243)
!15247 = !DILocation(line: 0, scope: !14930, inlinedAt: !15248)
!15248 = distinct !DILocation(line: 254, column: 3, scope: !14934, inlinedAt: !15243)
!15249 = !DILocation(line: 0, scope: !14937, inlinedAt: !15250)
!15250 = distinct !DILocation(line: 229, column: 2, scope: !14930, inlinedAt: !15248)
!15251 = !DILocation(line: 188, column: 2, scope: !14947, inlinedAt: !15250)
!15252 = !DILocation(line: 188, column: 2, scope: !14949, inlinedAt: !15250)
!15253 = !DILocation(line: 0, scope: !14947, inlinedAt: !15250)
!15254 = !DILocation(line: 189, column: 7, scope: !14952, inlinedAt: !15250)
!15255 = !DILocation(line: 189, column: 35, scope: !14952, inlinedAt: !15250)
!15256 = !DILocation(line: 189, column: 7, scope: !14953, inlinedAt: !15250)
!15257 = !DILocation(line: 191, column: 21, scope: !14957, inlinedAt: !15250)
!15258 = !DILocation(line: 190, column: 4, scope: !14957, inlinedAt: !15250)
!15259 = !DILocation(line: 192, column: 4, scope: !14957, inlinedAt: !15250)
!15260 = distinct !{!15260, !15251, !15261}
!15261 = !DILocation(line: 194, column: 2, scope: !14947, inlinedAt: !15250)
!15262 = !DILocation(line: 196, column: 37, scope: !14937, inlinedAt: !15250)
!15263 = !DILocation(line: 196, column: 2, scope: !14937, inlinedAt: !15250)
!15264 = !DILocation(line: 197, column: 1, scope: !14937, inlinedAt: !15250)
!15265 = !DILocation(line: 630, column: 3, scope: !15244)
!15266 = !DILocation(line: 632, column: 2, scope: !15244)
!15267 = !DILocation(line: 633, column: 1, scope: !15233)
!15268 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13745, file: !13745, line: 120, type: !14855, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15269)
!15269 = !{!15270}
!15270 = !DILocalVariable(name: "thread", arg: 1, scope: !15268, file: !13745, line: 120, type: !2369)
!15271 = !DILocation(line: 0, scope: !15268)
!15272 = !DILocation(line: 122, column: 12, scope: !15268)
!15273 = !DILocation(line: 122, column: 62, scope: !15268)
!15274 = !DILocation(line: 123, column: 4, scope: !15268)
!15275 = !DILocation(line: 122, column: 2, scope: !15268)
!15276 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2474, file: !2474, line: 644, type: !14695, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15277)
!15277 = !{!15278, !15279, !15281}
!15278 = !DILocalVariable(name: "thread", arg: 1, scope: !15276, file: !2474, line: 644, type: !2369)
!15279 = !DILocalVariable(name: "__i", scope: !15280, file: !2474, line: 646, type: !14729)
!15280 = distinct !DILexicalBlock(scope: !15276, file: !2474, line: 646, column: 2)
!15281 = !DILocalVariable(name: "__key", scope: !15280, file: !2474, line: 646, type: !14729)
!15282 = !DILocation(line: 0, scope: !15276)
!15283 = !DILocation(line: 0, scope: !15280)
!15284 = !DILocation(line: 0, scope: !14737, inlinedAt: !15285)
!15285 = distinct !DILocation(line: 646, column: 2, scope: !15280)
!15286 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15287)
!15287 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15285)
!15288 = !DILocation(line: 0, scope: !14746, inlinedAt: !15287)
!15289 = !DILocation(line: 647, column: 3, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15291, file: !2474, line: 646, column: 26)
!15291 = distinct !DILexicalBlock(scope: !15280, file: !2474, line: 646, column: 2)
!15292 = !DILocation(line: 0, scope: !14764, inlinedAt: !15293)
!15293 = distinct !DILocation(line: 646, column: 2, scope: !15291)
!15294 = !DILocation(line: 0, scope: !14772, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15293)
!15296 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15295)
!15297 = !DILocation(line: 649, column: 1, scope: !15276)
!15298 = distinct !DISubprogram(name: "z_sched_start", scope: !2474, file: !2474, line: 651, type: !14695, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15299)
!15299 = !{!15300, !15301}
!15300 = !DILocalVariable(name: "thread", arg: 1, scope: !15298, file: !2474, line: 651, type: !2369)
!15301 = !DILocalVariable(name: "key", scope: !15298, file: !2474, line: 653, type: !14729)
!15302 = !DILocation(line: 0, scope: !15298)
!15303 = !DILocation(line: 0, scope: !14737, inlinedAt: !15304)
!15304 = distinct !DILocation(line: 653, column: 25, scope: !15298)
!15305 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15306)
!15306 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15304)
!15307 = !DILocation(line: 0, scope: !14746, inlinedAt: !15306)
!15308 = !DILocation(line: 655, column: 6, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15298, file: !2474, line: 655, column: 6)
!15310 = !DILocation(line: 655, column: 6, scope: !15298)
!15311 = !DILocation(line: 0, scope: !14764, inlinedAt: !15312)
!15312 = distinct !DILocation(line: 656, column: 3, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15309, file: !2474, line: 655, column: 36)
!15314 = !DILocation(line: 0, scope: !14772, inlinedAt: !15315)
!15315 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15312)
!15316 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15315)
!15317 = !DILocation(line: 657, column: 3, scope: !15313)
!15318 = !DILocation(line: 660, column: 2, scope: !15298)
!15319 = !DILocation(line: 661, column: 2, scope: !15298)
!15320 = !DILocation(line: 662, column: 2, scope: !15298)
!15321 = !DILocation(line: 663, column: 1, scope: !15298)
!15322 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13745, file: !13745, line: 126, type: !14855, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15323)
!15323 = !{!15324}
!15324 = !DILocalVariable(name: "thread", arg: 1, scope: !15322, file: !13745, line: 126, type: !2369)
!15325 = !DILocation(line: 0, scope: !15322)
!15326 = !DILocation(line: 128, column: 23, scope: !15322)
!15327 = !DILocation(line: 128, column: 36, scope: !15322)
!15328 = !DILocation(line: 128, column: 56, scope: !15322)
!15329 = !DILocation(line: 128, column: 2, scope: !15322)
!15330 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13745, file: !13745, line: 155, type: !14695, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15331)
!15331 = !{!15332}
!15332 = !DILocalVariable(name: "thread", arg: 1, scope: !15330, file: !13745, line: 155, type: !2369)
!15333 = !DILocation(line: 0, scope: !15330)
!15334 = !DILocation(line: 157, column: 15, scope: !15330)
!15335 = !DILocation(line: 157, column: 28, scope: !15330)
!15336 = !DILocation(line: 158, column: 1, scope: !15330)
!15337 = distinct !DISubprogram(name: "z_reschedule", scope: !2474, file: !2474, line: 967, type: !14765, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15338)
!15338 = !{!15339, !15340}
!15339 = !DILocalVariable(name: "lock", arg: 1, scope: !15337, file: !2474, line: 967, type: !14740)
!15340 = !DILocalVariable(name: "key", arg: 2, scope: !15337, file: !2474, line: 967, type: !14729)
!15341 = !DILocation(line: 0, scope: !15337)
!15342 = !DILocation(line: 969, column: 6, scope: !15343)
!15343 = distinct !DILexicalBlock(scope: !15337, file: !2474, line: 969, column: 6)
!15344 = !DILocation(line: 969, column: 23, scope: !15343)
!15345 = !DILocation(line: 969, column: 26, scope: !15343)
!15346 = !DILocation(line: 969, column: 6, scope: !15337)
!15347 = !DILocalVariable(name: "key", arg: 2, scope: !15348, file: !13849, line: 193, type: !14729)
!15348 = distinct !DISubprogram(name: "z_swap", scope: !13849, file: !13849, line: 193, type: !15349, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15351)
!15349 = !DISubroutineType(types: !15350)
!15350 = !{!103, !14740, !14729}
!15351 = !{!15352, !15347}
!15352 = !DILocalVariable(name: "lock", arg: 1, scope: !15348, file: !13849, line: 193, type: !14740)
!15353 = !DILocation(line: 0, scope: !15348, inlinedAt: !15354)
!15354 = distinct !DILocation(line: 970, column: 3, scope: !15355)
!15355 = distinct !DILexicalBlock(scope: !15343, file: !2474, line: 969, column: 39)
!15356 = !DILocation(line: 196, column: 9, scope: !15348, inlinedAt: !15354)
!15357 = !DILocation(line: 971, column: 2, scope: !15355)
!15358 = !DILocation(line: 0, scope: !14764, inlinedAt: !15359)
!15359 = distinct !DILocation(line: 972, column: 3, scope: !15360)
!15360 = distinct !DILexicalBlock(scope: !15343, file: !2474, line: 971, column: 9)
!15361 = !DILocation(line: 0, scope: !14772, inlinedAt: !15362)
!15362 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15359)
!15363 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15362)
!15364 = !DILocation(line: 975, column: 1, scope: !15337)
!15365 = distinct !DISubprogram(name: "resched", scope: !2474, file: !2474, line: 940, type: !15366, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15368)
!15366 = !DISubroutineType(types: !15367)
!15367 = !{!157, !121}
!15368 = !{!15369}
!15369 = !DILocalVariable(name: "key", arg: 1, scope: !15365, file: !2474, line: 940, type: !121)
!15370 = !DILocation(line: 0, scope: !15365)
!15371 = !DILocalVariable(name: "key", arg: 1, scope: !15372, file: !5804, line: 112, type: !32)
!15372 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5804, file: !5804, line: 112, type: !15373, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15375)
!15373 = !DISubroutineType(types: !15374)
!15374 = !{!157, !32}
!15375 = !{!15371}
!15376 = !DILocation(line: 0, scope: !15372, inlinedAt: !15377)
!15377 = distinct !DILocation(line: 946, column: 9, scope: !15365)
!15378 = !DILocation(line: 115, column: 13, scope: !15372, inlinedAt: !15377)
!15379 = !DILocation(line: 946, column: 32, scope: !15365)
!15380 = !DILocation(line: 1031, column: 3, scope: !15381, inlinedAt: !15384)
!15381 = distinct !DISubprogram(name: "__get_IPSR", scope: !6824, file: !6824, line: 1027, type: !6905, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15382)
!15382 = !{!15383}
!15383 = !DILocalVariable(name: "result", scope: !15381, file: !6824, line: 1029, type: !121)
!15384 = distinct !DILocation(line: 48, column: 10, scope: !15385, inlinedAt: !15386)
!15385 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7618, file: !7618, line: 46, type: !7619, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !461)
!15386 = distinct !DILocation(line: 946, column: 36, scope: !15365)
!15387 = !{i64 3584048}
!15388 = !DILocation(line: 0, scope: !15381, inlinedAt: !15384)
!15389 = !DILocation(line: 48, column: 9, scope: !15385, inlinedAt: !15386)
!15390 = !DILocation(line: 946, column: 2, scope: !15365)
!15391 = distinct !DISubprogram(name: "need_swap", scope: !2474, file: !2474, line: 953, type: !7619, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15392)
!15392 = !{!15393}
!15393 = !DILocalVariable(name: "new_thread", scope: !15391, file: !2474, line: 959, type: !2369)
!15394 = !DILocation(line: 962, column: 31, scope: !15391)
!15395 = !DILocation(line: 0, scope: !15391)
!15396 = !DILocation(line: 963, column: 23, scope: !15391)
!15397 = !DILocation(line: 963, column: 20, scope: !15391)
!15398 = !DILocation(line: 963, column: 2, scope: !15391)
!15399 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13849, file: !13849, line: 181, type: !6834, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15400)
!15400 = !{!15401, !15402}
!15401 = !DILocalVariable(name: "key", arg: 1, scope: !15399, file: !13849, line: 181, type: !32)
!15402 = !DILocalVariable(name: "ret", scope: !15399, file: !13849, line: 183, type: !103)
!15403 = !DILocation(line: 0, scope: !15399)
!15404 = !DILocation(line: 185, column: 8, scope: !15399)
!15405 = !DILocation(line: 186, column: 2, scope: !15399)
!15406 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2474, file: !2474, line: 665, type: !14695, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15407)
!15407 = !{!15408, !15409, !15411}
!15408 = !DILocalVariable(name: "thread", arg: 1, scope: !15406, file: !2474, line: 665, type: !2369)
!15409 = !DILocalVariable(name: "__i", scope: !15410, file: !2474, line: 671, type: !14729)
!15410 = distinct !DILexicalBlock(scope: !15406, file: !2474, line: 671, column: 2)
!15411 = !DILocalVariable(name: "__key", scope: !15410, file: !2474, line: 671, type: !14729)
!15412 = !DILocation(line: 0, scope: !15406)
!15413 = !DILocation(line: 669, column: 8, scope: !15406)
!15414 = !DILocation(line: 0, scope: !15410)
!15415 = !DILocation(line: 0, scope: !14737, inlinedAt: !15416)
!15416 = distinct !DILocation(line: 671, column: 2, scope: !15410)
!15417 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15418)
!15418 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15416)
!15419 = !DILocation(line: 0, scope: !14746, inlinedAt: !15418)
!15420 = !DILocation(line: 672, column: 7, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15422, file: !2474, line: 672, column: 7)
!15422 = distinct !DILexicalBlock(scope: !15423, file: !2474, line: 671, column: 26)
!15423 = distinct !DILexicalBlock(scope: !15410, file: !2474, line: 671, column: 2)
!15424 = !DILocation(line: 672, column: 7, scope: !15422)
!15425 = !DILocation(line: 0, scope: !14906, inlinedAt: !15426)
!15426 = distinct !DILocation(line: 673, column: 4, scope: !15427)
!15427 = distinct !DILexicalBlock(scope: !15421, file: !2474, line: 672, column: 35)
!15428 = !DILocation(line: 266, column: 15, scope: !14906, inlinedAt: !15426)
!15429 = !DILocation(line: 266, column: 28, scope: !14906, inlinedAt: !15426)
!15430 = !DILocation(line: 0, scope: !14914, inlinedAt: !15431)
!15431 = distinct !DILocation(line: 268, column: 3, scope: !14918, inlinedAt: !15426)
!15432 = !DILocation(line: 234, column: 2, scope: !14914, inlinedAt: !15431)
!15433 = !DILocation(line: 674, column: 3, scope: !15427)
!15434 = !DILocation(line: 675, column: 3, scope: !15422)
!15435 = !DILocation(line: 676, column: 26, scope: !15422)
!15436 = !DILocation(line: 676, column: 23, scope: !15422)
!15437 = !DILocation(line: 676, column: 3, scope: !15422)
!15438 = !DILocation(line: 0, scope: !14764, inlinedAt: !15439)
!15439 = distinct !DILocation(line: 671, column: 2, scope: !15423)
!15440 = !DILocation(line: 0, scope: !14772, inlinedAt: !15441)
!15441 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15439)
!15442 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15441)
!15443 = !DILocation(line: 679, column: 16, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15406, file: !2474, line: 679, column: 6)
!15445 = !DILocation(line: 679, column: 13, scope: !15444)
!15446 = !DILocation(line: 679, column: 6, scope: !15406)
!15447 = !DILocation(line: 680, column: 3, scope: !15448)
!15448 = distinct !DILexicalBlock(scope: !15444, file: !2474, line: 679, column: 26)
!15449 = !DILocation(line: 681, column: 2, scope: !15448)
!15450 = !DILocation(line: 684, column: 1, scope: !15406)
!15451 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14139, file: !14139, line: 52, type: !14713, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15452)
!15452 = !{!15453}
!15453 = !DILocalVariable(name: "thread", arg: 1, scope: !15451, file: !14139, line: 52, type: !2369)
!15454 = !DILocation(line: 0, scope: !15451)
!15455 = !DILocation(line: 54, column: 39, scope: !15451)
!15456 = !DILocation(line: 54, column: 9, scope: !15451)
!15457 = !DILocation(line: 54, column: 2, scope: !15451)
!15458 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13745, file: !13745, line: 141, type: !14695, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15459)
!15459 = !{!15460}
!15460 = !DILocalVariable(name: "thread", arg: 1, scope: !15458, file: !13745, line: 141, type: !2369)
!15461 = !DILocation(line: 0, scope: !15458)
!15462 = !DILocation(line: 143, column: 15, scope: !15458)
!15463 = !DILocation(line: 143, column: 28, scope: !15458)
!15464 = !DILocation(line: 146, column: 1, scope: !15458)
!15465 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13745, file: !13745, line: 73, type: !3244, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !461)
!15466 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15467)
!15467 = distinct !DILocation(line: 75, column: 30, scope: !15465)
!15468 = !DILocation(line: 0, scope: !14746, inlinedAt: !15467)
!15469 = !DILocation(line: 75, column: 9, scope: !15465)
!15470 = !DILocation(line: 76, column: 1, scope: !15465)
!15471 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2474, file: !2474, line: 977, type: !6915, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15472)
!15472 = !{!15473}
!15473 = !DILocalVariable(name: "key", arg: 1, scope: !15471, file: !2474, line: 977, type: !121)
!15474 = !DILocation(line: 0, scope: !15471)
!15475 = !DILocation(line: 979, column: 6, scope: !15476)
!15476 = distinct !DILexicalBlock(scope: !15471, file: !2474, line: 979, column: 6)
!15477 = !DILocation(line: 979, column: 6, scope: !15471)
!15478 = !DILocation(line: 980, column: 3, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15476, file: !2474, line: 979, column: 20)
!15480 = !DILocation(line: 981, column: 2, scope: !15479)
!15481 = !DILocation(line: 0, scope: !14772, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 982, column: 3, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15476, file: !2474, line: 981, column: 9)
!15484 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15482)
!15485 = !DILocation(line: 985, column: 1, scope: !15471)
!15486 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2474, file: !2474, line: 695, type: !14695, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15487)
!15487 = !{!15488, !15489}
!15488 = !DILocalVariable(name: "thread", arg: 1, scope: !15486, file: !2474, line: 695, type: !2369)
!15489 = !DILocalVariable(name: "key", scope: !15486, file: !2474, line: 699, type: !14729)
!15490 = !DILocation(line: 0, scope: !15486)
!15491 = !DILocation(line: 0, scope: !14737, inlinedAt: !15492)
!15492 = distinct !DILocation(line: 699, column: 25, scope: !15486)
!15493 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15494)
!15494 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15492)
!15495 = !DILocation(line: 0, scope: !14746, inlinedAt: !15494)
!15496 = !DILocation(line: 702, column: 7, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15486, file: !2474, line: 702, column: 6)
!15498 = !DILocation(line: 702, column: 6, scope: !15486)
!15499 = !DILocation(line: 0, scope: !14764, inlinedAt: !15500)
!15500 = distinct !DILocation(line: 703, column: 3, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15497, file: !2474, line: 702, column: 38)
!15502 = !DILocation(line: 0, scope: !14772, inlinedAt: !15503)
!15503 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15500)
!15504 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15503)
!15505 = !DILocation(line: 704, column: 3, scope: !15501)
!15506 = !DILocation(line: 707, column: 2, scope: !15486)
!15507 = !DILocation(line: 708, column: 2, scope: !15486)
!15508 = !DILocation(line: 710, column: 2, scope: !15486)
!15509 = !DILocation(line: 713, column: 1, scope: !15486)
!15510 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13745, file: !13745, line: 96, type: !14855, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15511)
!15511 = !{!15512}
!15512 = !DILocalVariable(name: "thread", arg: 1, scope: !15510, file: !13745, line: 96, type: !2369)
!15513 = !DILocation(line: 0, scope: !15510)
!15514 = !DILocation(line: 98, column: 23, scope: !15510)
!15515 = !DILocation(line: 98, column: 36, scope: !15510)
!15516 = !DILocation(line: 98, column: 57, scope: !15510)
!15517 = !DILocation(line: 98, column: 2, scope: !15510)
!15518 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13745, file: !13745, line: 148, type: !14695, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15519)
!15519 = !{!15520}
!15520 = !DILocalVariable(name: "thread", arg: 1, scope: !15518, file: !13745, line: 148, type: !2369)
!15521 = !DILocation(line: 0, scope: !15518)
!15522 = !DILocation(line: 150, column: 15, scope: !15518)
!15523 = !DILocation(line: 150, column: 28, scope: !15518)
!15524 = !DILocation(line: 153, column: 1, scope: !15518)
!15525 = distinct !DISubprogram(name: "z_pend_thread", scope: !2474, file: !2474, line: 770, type: !15526, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15532)
!15526 = !DISubroutineType(types: !15527)
!15527 = !{null, !2369, !2400, !15528}
!15528 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1709, line: 67, baseType: !15529)
!15529 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1709, line: 65, size: 64, elements: !15530)
!15530 = !{!15531}
!15531 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15529, file: !1709, line: 66, baseType: !1708, size: 64)
!15532 = !{!15533, !15534, !15535, !15536, !15538}
!15533 = !DILocalVariable(name: "thread", arg: 1, scope: !15525, file: !2474, line: 770, type: !2369)
!15534 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15525, file: !2474, line: 770, type: !2400)
!15535 = !DILocalVariable(name: "timeout", arg: 3, scope: !15525, file: !2474, line: 771, type: !15528)
!15536 = !DILocalVariable(name: "__i", scope: !15537, file: !2474, line: 774, type: !14729)
!15537 = distinct !DILexicalBlock(scope: !15525, file: !2474, line: 774, column: 2)
!15538 = !DILocalVariable(name: "__key", scope: !15537, file: !2474, line: 774, type: !14729)
!15539 = !DILocation(line: 0, scope: !15525)
!15540 = !DILocation(line: 0, scope: !15537)
!15541 = !DILocation(line: 0, scope: !14737, inlinedAt: !15542)
!15542 = distinct !DILocation(line: 774, column: 2, scope: !15537)
!15543 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15544)
!15544 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15542)
!15545 = !DILocation(line: 0, scope: !14746, inlinedAt: !15544)
!15546 = !DILocation(line: 775, column: 3, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15548, file: !2474, line: 774, column: 26)
!15548 = distinct !DILexicalBlock(scope: !15537, file: !2474, line: 774, column: 2)
!15549 = !DILocation(line: 0, scope: !14764, inlinedAt: !15550)
!15550 = distinct !DILocation(line: 774, column: 2, scope: !15548)
!15551 = !DILocation(line: 0, scope: !14772, inlinedAt: !15552)
!15552 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15550)
!15553 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15552)
!15554 = !DILocation(line: 777, column: 1, scope: !15525)
!15555 = distinct !DISubprogram(name: "pend_locked", scope: !2474, file: !2474, line: 760, type: !15526, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15556)
!15556 = !{!15557, !15558, !15559}
!15557 = !DILocalVariable(name: "thread", arg: 1, scope: !15555, file: !2474, line: 760, type: !2369)
!15558 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15555, file: !2474, line: 760, type: !2400)
!15559 = !DILocalVariable(name: "timeout", arg: 3, scope: !15555, file: !2474, line: 761, type: !15528)
!15560 = !DILocation(line: 0, scope: !15555)
!15561 = !DILocation(line: 766, column: 2, scope: !15555)
!15562 = !DILocation(line: 767, column: 2, scope: !15555)
!15563 = !DILocation(line: 768, column: 1, scope: !15555)
!15564 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2474, file: !2474, line: 740, type: !15565, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15567)
!15565 = !DISubroutineType(types: !15566)
!15566 = !{null, !2369, !2400}
!15567 = !{!15568, !15569}
!15568 = !DILocalVariable(name: "thread", arg: 1, scope: !15564, file: !2474, line: 740, type: !2369)
!15569 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15564, file: !2474, line: 740, type: !2400)
!15570 = !DILocation(line: 0, scope: !15564)
!15571 = !DILocation(line: 742, column: 2, scope: !15564)
!15572 = !DILocation(line: 743, column: 2, scope: !15564)
!15573 = !DILocation(line: 747, column: 13, scope: !15574)
!15574 = distinct !DILexicalBlock(scope: !15564, file: !2474, line: 747, column: 6)
!15575 = !DILocation(line: 747, column: 6, scope: !15564)
!15576 = !DILocation(line: 748, column: 16, scope: !15577)
!15577 = distinct !DILexicalBlock(scope: !15574, file: !2474, line: 747, column: 22)
!15578 = !DILocation(line: 748, column: 26, scope: !15577)
!15579 = !DILocation(line: 749, column: 28, scope: !15577)
!15580 = !DILocation(line: 0, scope: !14937, inlinedAt: !15581)
!15581 = distinct !DILocation(line: 749, column: 3, scope: !15577)
!15582 = !DILocation(line: 188, column: 2, scope: !14947, inlinedAt: !15581)
!15583 = !DILocation(line: 188, column: 2, scope: !14949, inlinedAt: !15581)
!15584 = !DILocation(line: 0, scope: !14947, inlinedAt: !15581)
!15585 = !DILocation(line: 189, column: 7, scope: !14952, inlinedAt: !15581)
!15586 = !DILocation(line: 189, column: 35, scope: !14952, inlinedAt: !15581)
!15587 = !DILocation(line: 189, column: 7, scope: !14953, inlinedAt: !15581)
!15588 = !DILocation(line: 191, column: 21, scope: !14957, inlinedAt: !15581)
!15589 = !DILocation(line: 190, column: 4, scope: !14957, inlinedAt: !15581)
!15590 = !DILocation(line: 192, column: 4, scope: !14957, inlinedAt: !15581)
!15591 = distinct !{!15591, !15582, !15592}
!15592 = !DILocation(line: 194, column: 2, scope: !14947, inlinedAt: !15581)
!15593 = !DILocation(line: 196, column: 37, scope: !14937, inlinedAt: !15581)
!15594 = !DILocation(line: 196, column: 2, scope: !14937, inlinedAt: !15581)
!15595 = !DILocation(line: 197, column: 1, scope: !14937, inlinedAt: !15581)
!15596 = !DILocation(line: 751, column: 1, scope: !15564)
!15597 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2474, file: !2474, line: 753, type: !15598, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15600)
!15598 = !DISubroutineType(types: !15599)
!15599 = !{null, !2369, !15528}
!15600 = !{!15601, !15602}
!15601 = !DILocalVariable(name: "thread", arg: 1, scope: !15597, file: !2474, line: 753, type: !2369)
!15602 = !DILocalVariable(name: "timeout", arg: 2, scope: !15597, file: !2474, line: 753, type: !15528)
!15603 = !DILocation(line: 0, scope: !15597)
!15604 = !DILocation(line: 755, column: 7, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15597, file: !2474, line: 755, column: 6)
!15606 = !DILocation(line: 755, column: 6, scope: !15597)
!15607 = !DILocation(line: 756, column: 3, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15605, file: !2474, line: 755, column: 41)
!15609 = !DILocation(line: 757, column: 2, scope: !15608)
!15610 = !DILocation(line: 758, column: 1, scope: !15597)
!15611 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14139, file: !14139, line: 47, type: !15598, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15612)
!15612 = !{!15613, !15614}
!15613 = !DILocalVariable(name: "thread", arg: 1, scope: !15611, file: !14139, line: 47, type: !2369)
!15614 = !DILocalVariable(name: "ticks", arg: 2, scope: !15611, file: !14139, line: 47, type: !15528)
!15615 = !DILocation(line: 0, scope: !15611)
!15616 = !DILocation(line: 49, column: 30, scope: !15611)
!15617 = !DILocation(line: 49, column: 2, scope: !15611)
!15618 = !DILocation(line: 50, column: 1, scope: !15611)
!15619 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2474, file: !2474, line: 795, type: !2426, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15620)
!15620 = !{!15621, !15622, !15623, !15625, !15626}
!15621 = !DILocalVariable(name: "timeout", arg: 1, scope: !15619, file: !2474, line: 795, type: !2428)
!15622 = !DILocalVariable(name: "thread", scope: !15619, file: !2474, line: 797, type: !2369)
!15623 = !DILocalVariable(name: "__i", scope: !15624, file: !2474, line: 800, type: !14729)
!15624 = distinct !DILexicalBlock(scope: !15619, file: !2474, line: 800, column: 2)
!15625 = !DILocalVariable(name: "__key", scope: !15624, file: !2474, line: 800, type: !14729)
!15626 = !DILocalVariable(name: "killed", scope: !15627, file: !2474, line: 801, type: !157)
!15627 = distinct !DILexicalBlock(scope: !15628, file: !2474, line: 800, column: 26)
!15628 = distinct !DILexicalBlock(scope: !15624, file: !2474, line: 800, column: 2)
!15629 = !DILocation(line: 0, scope: !15619)
!15630 = !DILocation(line: 797, column: 28, scope: !15619)
!15631 = !DILocation(line: 0, scope: !15624)
!15632 = !DILocation(line: 0, scope: !14737, inlinedAt: !15633)
!15633 = distinct !DILocation(line: 800, column: 2, scope: !15624)
!15634 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15635)
!15635 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15633)
!15636 = !DILocation(line: 0, scope: !14746, inlinedAt: !15635)
!15637 = !DILocation(line: 801, column: 27, scope: !15627)
!15638 = !DILocation(line: 801, column: 32, scope: !15627)
!15639 = !DILocation(line: 801, column: 61, scope: !15627)
!15640 = !DILocation(line: 0, scope: !15627)
!15641 = !DILocation(line: 804, column: 7, scope: !15627)
!15642 = !DILocation(line: 805, column: 21, scope: !15643)
!15643 = distinct !DILexicalBlock(scope: !15644, file: !2474, line: 805, column: 8)
!15644 = distinct !DILexicalBlock(scope: !15645, file: !2474, line: 804, column: 16)
!15645 = distinct !DILexicalBlock(scope: !15627, file: !2474, line: 804, column: 7)
!15646 = !DILocation(line: 805, column: 31, scope: !15643)
!15647 = !DILocation(line: 805, column: 8, scope: !15644)
!15648 = !DILocation(line: 806, column: 5, scope: !15649)
!15649 = distinct !DILexicalBlock(scope: !15643, file: !2474, line: 805, column: 40)
!15650 = !DILocation(line: 807, column: 4, scope: !15649)
!15651 = !DILocation(line: 808, column: 4, scope: !15644)
!15652 = !DILocation(line: 809, column: 4, scope: !15644)
!15653 = !DILocation(line: 810, column: 4, scope: !15644)
!15654 = !DILocation(line: 811, column: 3, scope: !15644)
!15655 = !DILocation(line: 0, scope: !14764, inlinedAt: !15656)
!15656 = distinct !DILocation(line: 800, column: 2, scope: !15628)
!15657 = !DILocation(line: 0, scope: !14772, inlinedAt: !15658)
!15658 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15656)
!15659 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15658)
!15660 = !DILocation(line: 813, column: 1, scope: !15619)
!15661 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2474, file: !2474, line: 779, type: !14695, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15662)
!15662 = !{!15663}
!15663 = !DILocalVariable(name: "thread", arg: 1, scope: !15661, file: !2474, line: 779, type: !2369)
!15664 = !DILocation(line: 0, scope: !15661)
!15665 = !DILocation(line: 781, column: 2, scope: !15661)
!15666 = !DILocation(line: 782, column: 2, scope: !15661)
!15667 = !DILocation(line: 783, column: 15, scope: !15661)
!15668 = !DILocation(line: 783, column: 25, scope: !15661)
!15669 = !DILocation(line: 784, column: 1, scope: !15661)
!15670 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13745, file: !13745, line: 165, type: !14695, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15671)
!15671 = !{!15672}
!15672 = !DILocalVariable(name: "thread", arg: 1, scope: !15670, file: !13745, line: 165, type: !2369)
!15673 = !DILocation(line: 0, scope: !15670)
!15674 = !DILocation(line: 167, column: 15, scope: !15670)
!15675 = !DILocation(line: 167, column: 28, scope: !15670)
!15676 = !DILocation(line: 168, column: 1, scope: !15670)
!15677 = distinct !DISubprogram(name: "unready_thread", scope: !2474, file: !2474, line: 731, type: !14695, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15678)
!15678 = !{!15679}
!15679 = !DILocalVariable(name: "thread", arg: 1, scope: !15677, file: !2474, line: 731, type: !2369)
!15680 = !DILocation(line: 0, scope: !15677)
!15681 = !DILocation(line: 733, column: 6, scope: !15682)
!15682 = distinct !DILexicalBlock(scope: !15677, file: !2474, line: 733, column: 6)
!15683 = !DILocation(line: 733, column: 6, scope: !15677)
!15684 = !DILocation(line: 0, scope: !14906, inlinedAt: !15685)
!15685 = distinct !DILocation(line: 734, column: 3, scope: !15686)
!15686 = distinct !DILexicalBlock(scope: !15682, file: !2474, line: 733, column: 34)
!15687 = !DILocation(line: 266, column: 15, scope: !14906, inlinedAt: !15685)
!15688 = !DILocation(line: 266, column: 28, scope: !14906, inlinedAt: !15685)
!15689 = !DILocation(line: 0, scope: !14914, inlinedAt: !15690)
!15690 = distinct !DILocation(line: 268, column: 3, scope: !14918, inlinedAt: !15685)
!15691 = !DILocation(line: 234, column: 2, scope: !14914, inlinedAt: !15690)
!15692 = !DILocation(line: 735, column: 2, scope: !15686)
!15693 = !DILocation(line: 736, column: 25, scope: !15677)
!15694 = !DILocation(line: 736, column: 22, scope: !15677)
!15695 = !DILocation(line: 736, column: 2, scope: !15677)
!15696 = !DILocation(line: 737, column: 1, scope: !15677)
!15697 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13745, file: !13745, line: 160, type: !14695, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15698)
!15698 = !{!15699}
!15699 = !DILocalVariable(name: "thread", arg: 1, scope: !15697, file: !13745, line: 160, type: !2369)
!15700 = !DILocation(line: 0, scope: !15697)
!15701 = !DILocation(line: 162, column: 15, scope: !15697)
!15702 = !DILocation(line: 162, column: 28, scope: !15697)
!15703 = !DILocation(line: 163, column: 1, scope: !15697)
!15704 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2474, file: !2474, line: 786, type: !14695, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15705)
!15705 = !{!15706, !15707, !15709}
!15706 = !DILocalVariable(name: "thread", arg: 1, scope: !15704, file: !2474, line: 786, type: !2369)
!15707 = !DILocalVariable(name: "__i", scope: !15708, file: !2474, line: 788, type: !14729)
!15708 = distinct !DILexicalBlock(scope: !15704, file: !2474, line: 788, column: 2)
!15709 = !DILocalVariable(name: "__key", scope: !15708, file: !2474, line: 788, type: !14729)
!15710 = !DILocation(line: 0, scope: !15704)
!15711 = !DILocation(line: 0, scope: !15708)
!15712 = !DILocation(line: 0, scope: !14737, inlinedAt: !15713)
!15713 = distinct !DILocation(line: 788, column: 2, scope: !15708)
!15714 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15715)
!15715 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15713)
!15716 = !DILocation(line: 0, scope: !14746, inlinedAt: !15715)
!15717 = !DILocation(line: 789, column: 3, scope: !15718)
!15718 = distinct !DILexicalBlock(scope: !15719, file: !2474, line: 788, column: 26)
!15719 = distinct !DILexicalBlock(scope: !15708, file: !2474, line: 788, column: 2)
!15720 = !DILocation(line: 0, scope: !14764, inlinedAt: !15721)
!15721 = distinct !DILocation(line: 788, column: 2, scope: !15719)
!15722 = !DILocation(line: 0, scope: !14772, inlinedAt: !15723)
!15723 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15721)
!15724 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15723)
!15725 = !DILocation(line: 791, column: 1, scope: !15704)
!15726 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2474, file: !2474, line: 816, type: !15727, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15729)
!15727 = !DISubroutineType(types: !15728)
!15728 = !{!103, !121, !2400, !15528}
!15729 = !{!15730, !15731, !15732, !15733, !15734, !15736}
!15730 = !DILocalVariable(name: "key", arg: 1, scope: !15726, file: !2474, line: 816, type: !121)
!15731 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15726, file: !2474, line: 816, type: !2400)
!15732 = !DILocalVariable(name: "timeout", arg: 3, scope: !15726, file: !2474, line: 816, type: !15528)
!15733 = !DILocalVariable(name: "ret", scope: !15726, file: !2474, line: 828, type: !103)
!15734 = !DILocalVariable(name: "__i", scope: !15735, file: !2474, line: 829, type: !14729)
!15735 = distinct !DILexicalBlock(scope: !15726, file: !2474, line: 829, column: 2)
!15736 = !DILocalVariable(name: "__key", scope: !15735, file: !2474, line: 829, type: !14729)
!15737 = !DILocation(line: 0, scope: !15726)
!15738 = !DILocation(line: 823, column: 14, scope: !15726)
!15739 = !DILocation(line: 823, column: 2, scope: !15726)
!15740 = !DILocation(line: 826, column: 20, scope: !15726)
!15741 = !DILocation(line: 826, column: 18, scope: !15726)
!15742 = !DILocation(line: 828, column: 12, scope: !15726)
!15743 = !DILocation(line: 0, scope: !15735)
!15744 = !DILocation(line: 0, scope: !14737, inlinedAt: !15745)
!15745 = distinct !DILocation(line: 829, column: 2, scope: !15735)
!15746 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15747)
!15747 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15745)
!15748 = !DILocation(line: 0, scope: !14746, inlinedAt: !15747)
!15749 = !DILocation(line: 830, column: 7, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !15751, file: !2474, line: 830, column: 7)
!15751 = distinct !DILexicalBlock(scope: !15752, file: !2474, line: 829, column: 26)
!15752 = distinct !DILexicalBlock(scope: !15735, file: !2474, line: 829, column: 2)
!15753 = !DILocation(line: 830, column: 26, scope: !15750)
!15754 = !DILocation(line: 830, column: 23, scope: !15750)
!15755 = !DILocation(line: 830, column: 7, scope: !15751)
!15756 = !DILocation(line: 831, column: 20, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15750, file: !2474, line: 830, column: 36)
!15758 = !DILocation(line: 832, column: 3, scope: !15757)
!15759 = !DILocation(line: 0, scope: !14764, inlinedAt: !15760)
!15760 = distinct !DILocation(line: 829, column: 2, scope: !15752)
!15761 = !DILocation(line: 0, scope: !14772, inlinedAt: !15762)
!15762 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15760)
!15763 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15762)
!15764 = !DILocation(line: 834, column: 2, scope: !15726)
!15765 = distinct !DISubprogram(name: "z_pend_curr", scope: !2474, file: !2474, line: 840, type: !15766, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15768)
!15766 = !DISubroutineType(types: !15767)
!15767 = !{!103, !14740, !14729, !2400, !15528}
!15768 = !{!15769, !15770, !15771, !15772}
!15769 = !DILocalVariable(name: "lock", arg: 1, scope: !15765, file: !2474, line: 840, type: !14740)
!15770 = !DILocalVariable(name: "key", arg: 2, scope: !15765, file: !2474, line: 840, type: !14729)
!15771 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15765, file: !2474, line: 841, type: !2400)
!15772 = !DILocalVariable(name: "timeout", arg: 4, scope: !15765, file: !2474, line: 841, type: !15528)
!15773 = !DILocation(line: 0, scope: !15765)
!15774 = !DILocation(line: 844, column: 20, scope: !15765)
!15775 = !DILocation(line: 844, column: 18, scope: !15765)
!15776 = !DILocation(line: 0, scope: !14737, inlinedAt: !15777)
!15777 = distinct !DILocation(line: 856, column: 9, scope: !15765)
!15778 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15779)
!15779 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15777)
!15780 = !DILocation(line: 0, scope: !14746, inlinedAt: !15779)
!15781 = !DILocation(line: 857, column: 14, scope: !15765)
!15782 = !DILocation(line: 857, column: 2, scope: !15765)
!15783 = !DILocation(line: 0, scope: !15348, inlinedAt: !15784)
!15784 = distinct !DILocation(line: 859, column: 9, scope: !15765)
!15785 = !DILocation(line: 196, column: 9, scope: !15348, inlinedAt: !15784)
!15786 = !DILocation(line: 859, column: 2, scope: !15765)
!15787 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2474, file: !2474, line: 862, type: !15788, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15790)
!15788 = !DISubroutineType(types: !15789)
!15789 = !{!2369, !2400}
!15790 = !{!15791, !15792, !15793, !15795}
!15791 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15787, file: !2474, line: 862, type: !2400)
!15792 = !DILocalVariable(name: "thread", scope: !15787, file: !2474, line: 864, type: !2369)
!15793 = !DILocalVariable(name: "__i", scope: !15794, file: !2474, line: 866, type: !14729)
!15794 = distinct !DILexicalBlock(scope: !15787, file: !2474, line: 866, column: 2)
!15795 = !DILocalVariable(name: "__key", scope: !15794, file: !2474, line: 866, type: !14729)
!15796 = !DILocation(line: 0, scope: !15787)
!15797 = !DILocation(line: 0, scope: !15794)
!15798 = !DILocation(line: 0, scope: !14737, inlinedAt: !15799)
!15799 = distinct !DILocation(line: 866, column: 2, scope: !15794)
!15800 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15801)
!15801 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15799)
!15802 = !DILocation(line: 0, scope: !14746, inlinedAt: !15801)
!15803 = !DILocation(line: 867, column: 12, scope: !15804)
!15804 = distinct !DILexicalBlock(scope: !15805, file: !2474, line: 866, column: 26)
!15805 = distinct !DILexicalBlock(scope: !15794, file: !2474, line: 866, column: 2)
!15806 = !DILocation(line: 869, column: 14, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15804, file: !2474, line: 869, column: 7)
!15808 = !DILocation(line: 869, column: 7, scope: !15804)
!15809 = !DILocation(line: 870, column: 4, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15807, file: !2474, line: 869, column: 23)
!15811 = !DILocation(line: 871, column: 3, scope: !15810)
!15812 = !DILocation(line: 0, scope: !14764, inlinedAt: !15813)
!15813 = distinct !DILocation(line: 866, column: 2, scope: !15805)
!15814 = !DILocation(line: 0, scope: !14772, inlinedAt: !15815)
!15815 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15813)
!15816 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15815)
!15817 = !DILocation(line: 874, column: 2, scope: !15787)
!15818 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2474, file: !2474, line: 877, type: !15788, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15819)
!15819 = !{!15820, !15821, !15822, !15824}
!15820 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15818, file: !2474, line: 877, type: !2400)
!15821 = !DILocalVariable(name: "thread", scope: !15818, file: !2474, line: 879, type: !2369)
!15822 = !DILocalVariable(name: "__i", scope: !15823, file: !2474, line: 881, type: !14729)
!15823 = distinct !DILexicalBlock(scope: !15818, file: !2474, line: 881, column: 2)
!15824 = !DILocalVariable(name: "__key", scope: !15823, file: !2474, line: 881, type: !14729)
!15825 = !DILocation(line: 0, scope: !15818)
!15826 = !DILocation(line: 0, scope: !15823)
!15827 = !DILocation(line: 0, scope: !14737, inlinedAt: !15828)
!15828 = distinct !DILocation(line: 881, column: 2, scope: !15823)
!15829 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15830)
!15830 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15828)
!15831 = !DILocation(line: 0, scope: !14746, inlinedAt: !15830)
!15832 = !DILocation(line: 882, column: 12, scope: !15833)
!15833 = distinct !DILexicalBlock(scope: !15834, file: !2474, line: 881, column: 26)
!15834 = distinct !DILexicalBlock(scope: !15823, file: !2474, line: 881, column: 2)
!15835 = !DILocation(line: 884, column: 14, scope: !15836)
!15836 = distinct !DILexicalBlock(scope: !15833, file: !2474, line: 884, column: 7)
!15837 = !DILocation(line: 884, column: 7, scope: !15833)
!15838 = !DILocation(line: 885, column: 4, scope: !15839)
!15839 = distinct !DILexicalBlock(scope: !15836, file: !2474, line: 884, column: 23)
!15840 = !DILocation(line: 886, column: 10, scope: !15839)
!15841 = !DILocation(line: 887, column: 3, scope: !15839)
!15842 = !DILocation(line: 0, scope: !14764, inlinedAt: !15843)
!15843 = distinct !DILocation(line: 881, column: 2, scope: !15834)
!15844 = !DILocation(line: 0, scope: !14772, inlinedAt: !15845)
!15845 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15843)
!15846 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15845)
!15847 = !DILocation(line: 890, column: 2, scope: !15818)
!15848 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2474, file: !2474, line: 893, type: !14695, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15849)
!15849 = !{!15850}
!15850 = !DILocalVariable(name: "thread", arg: 1, scope: !15848, file: !2474, line: 893, type: !2369)
!15851 = !DILocation(line: 0, scope: !15848)
!15852 = !DILocation(line: 0, scope: !15704, inlinedAt: !15853)
!15853 = distinct !DILocation(line: 895, column: 2, scope: !15848)
!15854 = !DILocation(line: 0, scope: !15708, inlinedAt: !15853)
!15855 = !DILocation(line: 0, scope: !14737, inlinedAt: !15856)
!15856 = distinct !DILocation(line: 788, column: 2, scope: !15708, inlinedAt: !15853)
!15857 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15858)
!15858 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15856)
!15859 = !DILocation(line: 0, scope: !14746, inlinedAt: !15858)
!15860 = !DILocation(line: 789, column: 3, scope: !15718, inlinedAt: !15853)
!15861 = !DILocation(line: 0, scope: !14764, inlinedAt: !15862)
!15862 = distinct !DILocation(line: 788, column: 2, scope: !15719, inlinedAt: !15853)
!15863 = !DILocation(line: 0, scope: !14772, inlinedAt: !15864)
!15864 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15862)
!15865 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15864)
!15866 = !DILocation(line: 896, column: 8, scope: !15848)
!15867 = !DILocation(line: 897, column: 1, scope: !15848)
!15868 = distinct !DISubprogram(name: "z_set_prio", scope: !2474, file: !2474, line: 902, type: !15057, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15869)
!15869 = !{!15870, !15871, !15872, !15873, !15875}
!15870 = !DILocalVariable(name: "thread", arg: 1, scope: !15868, file: !2474, line: 902, type: !2369)
!15871 = !DILocalVariable(name: "prio", arg: 2, scope: !15868, file: !2474, line: 902, type: !103)
!15872 = !DILocalVariable(name: "need_sched", scope: !15868, file: !2474, line: 904, type: !157)
!15873 = !DILocalVariable(name: "__i", scope: !15874, file: !2474, line: 906, type: !14729)
!15874 = distinct !DILexicalBlock(scope: !15868, file: !2474, line: 906, column: 2)
!15875 = !DILocalVariable(name: "__key", scope: !15874, file: !2474, line: 906, type: !14729)
!15876 = !DILocation(line: 0, scope: !15868)
!15877 = !DILocation(line: 0, scope: !15874)
!15878 = !DILocation(line: 0, scope: !14737, inlinedAt: !15879)
!15879 = distinct !DILocation(line: 906, column: 2, scope: !15874)
!15880 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15881)
!15881 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15879)
!15882 = !DILocation(line: 0, scope: !14746, inlinedAt: !15881)
!15883 = !DILocation(line: 907, column: 16, scope: !15884)
!15884 = distinct !DILexicalBlock(scope: !15885, file: !2474, line: 906, column: 26)
!15885 = distinct !DILexicalBlock(scope: !15874, file: !2474, line: 906, column: 2)
!15886 = !DILocation(line: 909, column: 7, scope: !15884)
!15887 = !DILocation(line: 0, scope: !14906, inlinedAt: !15888)
!15888 = distinct !DILocation(line: 912, column: 5, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15890, file: !2474, line: 911, column: 63)
!15890 = distinct !DILexicalBlock(scope: !15891, file: !2474, line: 911, column: 8)
!15891 = distinct !DILexicalBlock(scope: !15892, file: !2474, line: 909, column: 19)
!15892 = distinct !DILexicalBlock(scope: !15884, file: !2474, line: 909, column: 7)
!15893 = !DILocation(line: 266, column: 28, scope: !14906, inlinedAt: !15888)
!15894 = !DILocation(line: 0, scope: !14914, inlinedAt: !15895)
!15895 = distinct !DILocation(line: 268, column: 3, scope: !14918, inlinedAt: !15888)
!15896 = !DILocation(line: 234, column: 2, scope: !14914, inlinedAt: !15895)
!15897 = !DILocation(line: 913, column: 23, scope: !15889)
!15898 = !DILocation(line: 0, scope: !14923, inlinedAt: !15899)
!15899 = distinct !DILocation(line: 914, column: 5, scope: !15889)
!15900 = !DILocation(line: 252, column: 28, scope: !14923, inlinedAt: !15899)
!15901 = !DILocation(line: 0, scope: !14930, inlinedAt: !15902)
!15902 = distinct !DILocation(line: 254, column: 3, scope: !14934, inlinedAt: !15899)
!15903 = !DILocation(line: 0, scope: !14937, inlinedAt: !15904)
!15904 = distinct !DILocation(line: 229, column: 2, scope: !14930, inlinedAt: !15902)
!15905 = !DILocation(line: 188, column: 2, scope: !14947, inlinedAt: !15904)
!15906 = !DILocation(line: 188, column: 2, scope: !14949, inlinedAt: !15904)
!15907 = !DILocation(line: 0, scope: !14947, inlinedAt: !15904)
!15908 = !DILocation(line: 189, column: 7, scope: !14952, inlinedAt: !15904)
!15909 = !DILocation(line: 189, column: 35, scope: !14952, inlinedAt: !15904)
!15910 = !DILocation(line: 189, column: 7, scope: !14953, inlinedAt: !15904)
!15911 = !DILocation(line: 190, column: 4, scope: !14957, inlinedAt: !15904)
!15912 = !DILocation(line: 192, column: 4, scope: !14957, inlinedAt: !15904)
!15913 = distinct !{!15913, !15905, !15914}
!15914 = !DILocation(line: 194, column: 2, scope: !14947, inlinedAt: !15904)
!15915 = !DILocation(line: 196, column: 2, scope: !14937, inlinedAt: !15904)
!15916 = !DILocation(line: 197, column: 1, scope: !14937, inlinedAt: !15904)
!15917 = !DILocation(line: 918, column: 4, scope: !15891)
!15918 = !DILocation(line: 919, column: 3, scope: !15891)
!15919 = !DILocation(line: 920, column: 22, scope: !15920)
!15920 = distinct !DILexicalBlock(scope: !15892, file: !2474, line: 919, column: 10)
!15921 = !DILocation(line: 0, scope: !14764, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 906, column: 2, scope: !15885)
!15923 = !DILocation(line: 0, scope: !14772, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15922)
!15925 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15924)
!15926 = !DILocation(line: 926, column: 2, scope: !15868)
!15927 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2474, file: !2474, line: 929, type: !15928, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15930)
!15928 = !DISubroutineType(types: !15929)
!15929 = !{null, !2369, !103}
!15930 = !{!15931, !15932, !15933}
!15931 = !DILocalVariable(name: "thread", arg: 1, scope: !15927, file: !2474, line: 929, type: !2369)
!15932 = !DILocalVariable(name: "prio", arg: 2, scope: !15927, file: !2474, line: 929, type: !103)
!15933 = !DILocalVariable(name: "need_sched", scope: !15927, file: !2474, line: 931, type: !157)
!15934 = !DILocation(line: 0, scope: !15927)
!15935 = !DILocation(line: 931, column: 20, scope: !15927)
!15936 = !DILocation(line: 935, column: 17, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15927, file: !2474, line: 935, column: 6)
!15938 = !DILocation(line: 935, column: 20, scope: !15937)
!15939 = !DILocation(line: 935, column: 35, scope: !15937)
!15940 = !DILocation(line: 935, column: 48, scope: !15937)
!15941 = !DILocation(line: 935, column: 6, scope: !15927)
!15942 = !DILocation(line: 936, column: 3, scope: !15943)
!15943 = distinct !DILexicalBlock(scope: !15937, file: !2474, line: 935, column: 55)
!15944 = !DILocation(line: 937, column: 2, scope: !15943)
!15945 = !DILocation(line: 938, column: 1, scope: !15927)
!15946 = distinct !DISubprogram(name: "k_sched_lock", scope: !2474, file: !2474, line: 987, type: !3244, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15947)
!15947 = !{!15948, !15950}
!15948 = !DILocalVariable(name: "__i", scope: !15949, file: !2474, line: 989, type: !14729)
!15949 = distinct !DILexicalBlock(scope: !15946, file: !2474, line: 989, column: 2)
!15950 = !DILocalVariable(name: "__key", scope: !15949, file: !2474, line: 989, type: !14729)
!15951 = !DILocation(line: 0, scope: !15949)
!15952 = !DILocation(line: 0, scope: !14737, inlinedAt: !15953)
!15953 = distinct !DILocation(line: 989, column: 2, scope: !15949)
!15954 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15955)
!15955 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15953)
!15956 = !DILocation(line: 0, scope: !14746, inlinedAt: !15955)
!15957 = !DILocation(line: 992, column: 3, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15959, file: !2474, line: 989, column: 26)
!15959 = distinct !DILexicalBlock(scope: !15949, file: !2474, line: 989, column: 2)
!15960 = !DILocation(line: 0, scope: !14764, inlinedAt: !15961)
!15961 = distinct !DILocation(line: 989, column: 2, scope: !15959)
!15962 = !DILocation(line: 0, scope: !14772, inlinedAt: !15963)
!15963 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15961)
!15964 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15963)
!15965 = !DILocation(line: 994, column: 1, scope: !15946)
!15966 = distinct !DISubprogram(name: "z_sched_lock", scope: !13745, file: !13745, line: 251, type: !3244, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !461)
!15967 = !DILocation(line: 256, column: 4, scope: !15966)
!15968 = !DILocation(line: 256, column: 19, scope: !15966)
!15969 = !DILocation(line: 256, column: 2, scope: !15966)
!15970 = !DILocation(line: 258, column: 2, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15966, file: !13745, line: 258, column: 2)
!15972 = !{i64 2154966284}
!15973 = !DILocation(line: 259, column: 1, scope: !15966)
!15974 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2474, file: !2474, line: 996, type: !3244, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !15975)
!15975 = !{!15976, !15978}
!15976 = !DILocalVariable(name: "__i", scope: !15977, file: !2474, line: 998, type: !14729)
!15977 = distinct !DILexicalBlock(scope: !15974, file: !2474, line: 998, column: 2)
!15978 = !DILocalVariable(name: "__key", scope: !15977, file: !2474, line: 998, type: !14729)
!15979 = !DILocation(line: 0, scope: !15977)
!15980 = !DILocation(line: 0, scope: !14737, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 998, column: 2, scope: !15977)
!15982 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !15983)
!15983 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !15981)
!15984 = !DILocation(line: 0, scope: !14746, inlinedAt: !15983)
!15985 = !DILocation(line: 1002, column: 5, scope: !15986)
!15986 = distinct !DILexicalBlock(scope: !15987, file: !2474, line: 998, column: 26)
!15987 = distinct !DILexicalBlock(scope: !15977, file: !2474, line: 998, column: 2)
!15988 = !DILocation(line: 1002, column: 20, scope: !15986)
!15989 = !DILocation(line: 1002, column: 3, scope: !15986)
!15990 = !DILocation(line: 1003, column: 3, scope: !15986)
!15991 = !DILocation(line: 0, scope: !14764, inlinedAt: !15992)
!15992 = distinct !DILocation(line: 998, column: 2, scope: !15987)
!15993 = !DILocation(line: 0, scope: !14772, inlinedAt: !15994)
!15994 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !15992)
!15995 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !15994)
!15996 = !DILocation(line: 1011, column: 2, scope: !15974)
!15997 = !DILocation(line: 1012, column: 1, scope: !15974)
!15998 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2474, file: !2474, line: 1014, type: !15045, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !461)
!15999 = !DILocation(line: 1028, column: 25, scope: !15998)
!16000 = !DILocation(line: 1028, column: 2, scope: !15998)
!16001 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2474, file: !2474, line: 1155, type: !16002, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16004)
!16002 = !DISubroutineType(types: !16003)
!16003 = !{!157, !2398, !2398}
!16004 = !{!16005, !16006, !16007, !16008, !16009}
!16005 = !DILocalVariable(name: "a", arg: 1, scope: !16001, file: !2474, line: 1155, type: !2398)
!16006 = !DILocalVariable(name: "b", arg: 2, scope: !16001, file: !2474, line: 1155, type: !2398)
!16007 = !DILocalVariable(name: "thread_a", scope: !16001, file: !2474, line: 1157, type: !2369)
!16008 = !DILocalVariable(name: "thread_b", scope: !16001, file: !2474, line: 1157, type: !2369)
!16009 = !DILocalVariable(name: "cmp", scope: !16001, file: !2474, line: 1158, type: !332)
!16010 = !DILocation(line: 0, scope: !16001)
!16011 = !DILocation(line: 1160, column: 13, scope: !16001)
!16012 = !DILocation(line: 1161, column: 13, scope: !16001)
!16013 = !DILocation(line: 1163, column: 8, scope: !16001)
!16014 = !DILocation(line: 1165, column: 10, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !16001, file: !2474, line: 1165, column: 6)
!16016 = !DILocation(line: 1165, column: 6, scope: !16001)
!16017 = !DILocation(line: 1167, column: 17, scope: !16018)
!16018 = distinct !DILexicalBlock(scope: !16015, file: !2474, line: 1167, column: 13)
!16019 = !DILocation(line: 1167, column: 13, scope: !16015)
!16020 = !DILocation(line: 1170, column: 25, scope: !16021)
!16021 = distinct !DILexicalBlock(scope: !16018, file: !2474, line: 1169, column: 9)
!16022 = !DILocation(line: 1170, column: 52, scope: !16021)
!16023 = !DILocation(line: 1170, column: 35, scope: !16021)
!16024 = !DILocation(line: 1170, column: 3, scope: !16021)
!16025 = !DILocation(line: 0, scope: !16015)
!16026 = !DILocation(line: 1173, column: 1, scope: !16001)
!16027 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2474, file: !2474, line: 1175, type: !16028, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16043)
!16028 = !DISubroutineType(types: !16029)
!16029 = !{null, !16030, !2369}
!16030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16031, size: 32)
!16031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16032, line: 37, size: 128, elements: !16033)
!16032 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16033 = !{!16034, !16042}
!16034 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16031, file: !16032, line: 38, baseType: !16035, size: 96)
!16035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !380, line: 83, size: 96, elements: !16036)
!16036 = !{!16037, !16038, !16041}
!16037 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16035, file: !380, line: 84, baseType: !2398, size: 32)
!16038 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16035, file: !380, line: 85, baseType: !16039, size: 32, offset: 32)
!16039 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !380, line: 81, baseType: !16040)
!16040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16002, size: 32)
!16041 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16035, file: !380, line: 86, baseType: !103, size: 32, offset: 64)
!16042 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16031, file: !16032, line: 39, baseType: !103, size: 32, offset: 96)
!16043 = !{!16044, !16045, !16046, !16047, !16056}
!16044 = !DILocalVariable(name: "pq", arg: 1, scope: !16027, file: !2474, line: 1175, type: !16030)
!16045 = !DILocalVariable(name: "thread", arg: 2, scope: !16027, file: !2474, line: 1175, type: !2369)
!16046 = !DILocalVariable(name: "t", scope: !16027, file: !2474, line: 1177, type: !2369)
!16047 = !DILocalVariable(name: "__f", scope: !16048, file: !2474, line: 1190, type: !16051)
!16048 = distinct !DILexicalBlock(scope: !16049, file: !2474, line: 1190, column: 3)
!16049 = distinct !DILexicalBlock(scope: !16050, file: !2474, line: 1189, column: 27)
!16050 = distinct !DILexicalBlock(scope: !16027, file: !2474, line: 1189, column: 6)
!16051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !380, line: 155, size: 96, elements: !16052)
!16052 = !{!16053, !16054, !16055}
!16053 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16051, file: !380, line: 156, baseType: !2469, size: 32)
!16054 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16051, file: !380, line: 157, baseType: !261, size: 32, offset: 32)
!16055 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16051, file: !380, line: 158, baseType: !332, size: 32, offset: 64)
!16056 = !DILocalVariable(name: "n", scope: !16057, file: !2474, line: 1190, type: !2398)
!16057 = distinct !DILexicalBlock(scope: !16058, file: !2474, line: 1190, column: 3)
!16058 = distinct !DILexicalBlock(scope: !16048, file: !2474, line: 1190, column: 3)
!16059 = !DILocation(line: 0, scope: !16027)
!16060 = !DILocation(line: 1181, column: 31, scope: !16027)
!16061 = !DILocation(line: 1181, column: 45, scope: !16027)
!16062 = !DILocation(line: 1181, column: 15, scope: !16027)
!16063 = !DILocation(line: 1181, column: 25, scope: !16027)
!16064 = !DILocation(line: 1189, column: 11, scope: !16050)
!16065 = !DILocation(line: 1189, column: 7, scope: !16050)
!16066 = !DILocation(line: 1189, column: 6, scope: !16027)
!16067 = !DILocation(line: 1190, column: 3, scope: !16048)
!16068 = !DILocation(line: 1190, column: 3, scope: !16057)
!16069 = !DILocation(line: 0, scope: !16057)
!16070 = !DILocation(line: 1190, column: 3, scope: !16058)
!16071 = !DILocation(line: 1193, column: 2, scope: !16049)
!16072 = !DILocation(line: 1191, column: 42, scope: !16073)
!16073 = distinct !DILexicalBlock(scope: !16058, file: !2474, line: 1190, column: 54)
!16074 = !DILocation(line: 1191, column: 12, scope: !16073)
!16075 = !DILocation(line: 1191, column: 22, scope: !16073)
!16076 = distinct !{!16076, !16067, !16077}
!16077 = !DILocation(line: 1192, column: 3, scope: !16048)
!16078 = !DILocation(line: 1195, column: 17, scope: !16027)
!16079 = !DILocation(line: 1195, column: 37, scope: !16027)
!16080 = !DILocation(line: 1195, column: 2, scope: !16027)
!16081 = !DILocation(line: 1196, column: 1, scope: !16027)
!16082 = !DISubprogram(name: "z_rb_foreach_next", scope: !380, file: !380, line: 176, type: !16083, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16083 = !DISubroutineType(types: !16084)
!16084 = !{!2398, !16085, !16086}
!16085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16035, size: 32)
!16086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16051, size: 32)
!16087 = !DISubprogram(name: "rb_insert", scope: !380, file: !380, line: 105, type: !16088, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16088 = !DISubroutineType(types: !16089)
!16089 = !{null, !16085, !2398}
!16090 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2474, file: !2474, line: 1198, type: !16028, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16091)
!16091 = !{!16092, !16093}
!16092 = !DILocalVariable(name: "pq", arg: 1, scope: !16090, file: !2474, line: 1198, type: !16030)
!16093 = !DILocalVariable(name: "thread", arg: 2, scope: !16090, file: !2474, line: 1198, type: !2369)
!16094 = !DILocation(line: 0, scope: !16090)
!16095 = !DILocation(line: 1202, column: 17, scope: !16090)
!16096 = !DILocation(line: 1202, column: 37, scope: !16090)
!16097 = !DILocation(line: 1202, column: 2, scope: !16090)
!16098 = !DILocation(line: 1204, column: 16, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16090, file: !2474, line: 1204, column: 6)
!16100 = !DILocation(line: 1204, column: 7, scope: !16099)
!16101 = !DILocation(line: 1204, column: 6, scope: !16090)
!16102 = !DILocation(line: 1205, column: 7, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16099, file: !2474, line: 1204, column: 22)
!16104 = !DILocation(line: 1205, column: 22, scope: !16103)
!16105 = !DILocation(line: 1206, column: 2, scope: !16103)
!16106 = !DILocation(line: 1207, column: 1, scope: !16090)
!16107 = !DISubprogram(name: "rb_remove", scope: !380, file: !380, line: 110, type: !16088, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16108 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2474, file: !2474, line: 1209, type: !16109, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16111)
!16109 = !DISubroutineType(types: !16110)
!16110 = !{!2369, !16030}
!16111 = !{!16112, !16113, !16114}
!16112 = !DILocalVariable(name: "pq", arg: 1, scope: !16108, file: !2474, line: 1209, type: !16030)
!16113 = !DILocalVariable(name: "thread", scope: !16108, file: !2474, line: 1211, type: !2369)
!16114 = !DILocalVariable(name: "n", scope: !16108, file: !2474, line: 1212, type: !2398)
!16115 = !DILocation(line: 0, scope: !16108)
!16116 = !DILocation(line: 1212, column: 37, scope: !16108)
!16117 = !DILocation(line: 1212, column: 21, scope: !16108)
!16118 = !DILocation(line: 1217, column: 2, scope: !16108)
!16119 = distinct !DISubprogram(name: "rb_get_min", scope: !380, file: !380, line: 115, type: !16120, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16122)
!16120 = !DISubroutineType(types: !16121)
!16121 = !{!2398, !16085}
!16122 = !{!16123}
!16123 = !DILocalVariable(name: "tree", arg: 1, scope: !16119, file: !380, line: 115, type: !16085)
!16124 = !DILocation(line: 0, scope: !16119)
!16125 = !DILocation(line: 117, column: 9, scope: !16119)
!16126 = !DILocation(line: 117, column: 2, scope: !16119)
!16127 = !DISubprogram(name: "z_rb_get_minmax", scope: !380, file: !380, line: 100, type: !16128, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16128 = !DISubroutineType(types: !16129)
!16129 = !{!2398, !16085, !154}
!16130 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2474, file: !2474, line: 1246, type: !16131, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16141)
!16131 = !DISubroutineType(types: !16132)
!16132 = !{!2369, !16133}
!16133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16134, size: 32)
!16134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16032, line: 53, size: 2080, elements: !16135)
!16135 = !{!16136, !16140}
!16136 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16134, file: !16032, line: 54, baseType: !16137, size: 2048)
!16137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2405, size: 2048, elements: !16138)
!16138 = !{!16139}
!16139 = !DISubrange(count: 32)
!16140 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16134, file: !16032, line: 55, baseType: !32, size: 32, offset: 2048)
!16141 = !{!16142, !16143, !16144, !16145}
!16142 = !DILocalVariable(name: "pq", arg: 1, scope: !16130, file: !2474, line: 1246, type: !16133)
!16143 = !DILocalVariable(name: "thread", scope: !16130, file: !2474, line: 1252, type: !2369)
!16144 = !DILocalVariable(name: "l", scope: !16130, file: !2474, line: 1253, type: !14940)
!16145 = !DILocalVariable(name: "n", scope: !16130, file: !2474, line: 1254, type: !2470)
!16146 = !DILocation(line: 0, scope: !16130)
!16147 = !DILocation(line: 1248, column: 11, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16130, file: !2474, line: 1248, column: 6)
!16149 = !DILocation(line: 1248, column: 7, scope: !16148)
!16150 = !DILocation(line: 1248, column: 6, scope: !16130)
!16151 = !DILocation(line: 1253, column: 31, scope: !16130)
!16152 = !DILocation(line: 1253, column: 20, scope: !16130)
!16153 = !DILocation(line: 1254, column: 19, scope: !16130)
!16154 = !DILocation(line: 1260, column: 1, scope: !16130)
!16155 = distinct !DISubprogram(name: "z_unpend_all", scope: !2474, file: !2474, line: 1262, type: !16156, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16158)
!16156 = !DISubroutineType(types: !16157)
!16157 = !{!103, !2400}
!16158 = !{!16159, !16160, !16161}
!16159 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16155, file: !2474, line: 1262, type: !2400)
!16160 = !DILocalVariable(name: "need_sched", scope: !16155, file: !2474, line: 1264, type: !103)
!16161 = !DILocalVariable(name: "thread", scope: !16155, file: !2474, line: 1265, type: !2369)
!16162 = !DILocation(line: 0, scope: !16155)
!16163 = !DILocation(line: 1267, column: 19, scope: !16155)
!16164 = !DILocation(line: 1267, column: 41, scope: !16155)
!16165 = !DILocation(line: 1267, column: 2, scope: !16155)
!16166 = !DILocation(line: 1268, column: 3, scope: !16167)
!16167 = distinct !DILexicalBlock(scope: !16155, file: !2474, line: 1267, column: 50)
!16168 = !DILocation(line: 1269, column: 3, scope: !16167)
!16169 = distinct !{!16169, !16165, !16170}
!16170 = !DILocation(line: 1271, column: 2, scope: !16155)
!16171 = !DILocation(line: 1273, column: 2, scope: !16155)
!16172 = distinct !DISubprogram(name: "z_waitq_head", scope: !14071, file: !14071, line: 52, type: !15788, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16173)
!16173 = !{!16174}
!16174 = !DILocalVariable(name: "w", arg: 1, scope: !16172, file: !14071, line: 52, type: !2400)
!16175 = !DILocation(line: 0, scope: !16172)
!16176 = !DILocation(line: 54, column: 52, scope: !16172)
!16177 = !DILocation(line: 54, column: 28, scope: !16172)
!16178 = !DILocation(line: 54, column: 9, scope: !16172)
!16179 = !DILocation(line: 54, column: 2, scope: !16172)
!16180 = distinct !DISubprogram(name: "init_ready_q", scope: !2474, file: !2474, line: 1276, type: !16181, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16188)
!16181 = !DISubroutineType(types: !16182)
!16182 = !{null, !16183}
!16183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16184, size: 32)
!16184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !304, line: 83, size: 96, elements: !16185)
!16185 = !{!16186, !16187}
!16186 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16184, file: !304, line: 86, baseType: !2369, size: 32)
!16187 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16184, file: !304, line: 90, baseType: !2405, size: 64, offset: 32)
!16188 = !{!16189}
!16189 = !DILocalVariable(name: "rq", arg: 1, scope: !16180, file: !2474, line: 1276, type: !16183)
!16190 = !DILocation(line: 0, scope: !16180)
!16191 = !DILocation(line: 1289, column: 22, scope: !16180)
!16192 = !DILocation(line: 1289, column: 2, scope: !16180)
!16193 = !DILocation(line: 1291, column: 1, scope: !16180)
!16194 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !16195, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16197)
!16195 = !DISubroutineType(types: !16196)
!16196 = !{null, !14940}
!16197 = !{!16198}
!16198 = !DILocalVariable(name: "list", arg: 1, scope: !16194, file: !309, line: 197, type: !14940)
!16199 = !DILocation(line: 0, scope: !16194)
!16200 = !DILocation(line: 199, column: 8, scope: !16194)
!16201 = !DILocation(line: 199, column: 13, scope: !16194)
!16202 = !DILocation(line: 200, column: 8, scope: !16194)
!16203 = !DILocation(line: 200, column: 13, scope: !16194)
!16204 = !DILocation(line: 201, column: 1, scope: !16194)
!16205 = distinct !DISubprogram(name: "z_sched_init", scope: !2474, file: !2474, line: 1293, type: !3244, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !461)
!16206 = !DILocation(line: 1302, column: 2, scope: !16205)
!16207 = !DILocation(line: 1306, column: 2, scope: !16205)
!16208 = !DILocation(line: 1309, column: 1, scope: !16205)
!16209 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2474, file: !2474, line: 1311, type: !16210, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16213)
!16210 = !DISubroutineType(types: !16211)
!16211 = !{!103, !16212}
!16212 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !2369)
!16213 = !{!16214}
!16214 = !DILocalVariable(name: "thread", arg: 1, scope: !16209, file: !2474, line: 1311, type: !16212)
!16215 = !DILocation(line: 0, scope: !16209)
!16216 = !DILocation(line: 1313, column: 22, scope: !16209)
!16217 = !DILocation(line: 1313, column: 9, scope: !16209)
!16218 = !DILocation(line: 1313, column: 2, scope: !16209)
!16219 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2474, file: !2474, line: 1325, type: !16220, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16222)
!16220 = !DISubroutineType(types: !16221)
!16221 = !{null, !16212, !103}
!16222 = !{!16223, !16224, !16225}
!16223 = !DILocalVariable(name: "thread", arg: 1, scope: !16219, file: !2474, line: 1325, type: !16212)
!16224 = !DILocalVariable(name: "prio", arg: 2, scope: !16219, file: !2474, line: 1325, type: !103)
!16225 = !DILocalVariable(name: "th", scope: !16219, file: !2474, line: 1334, type: !2369)
!16226 = !DILocation(line: 0, scope: !16219)
!16227 = !DILocation(line: 1336, column: 2, scope: !16219)
!16228 = !DILocation(line: 1337, column: 1, scope: !16219)
!16229 = distinct !DISubprogram(name: "k_can_yield", scope: !2474, file: !2474, line: 1384, type: !7619, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !461)
!16230 = !DILocation(line: 1386, column: 11, scope: !16229)
!16231 = !DILocation(line: 1386, column: 29, scope: !16229)
!16232 = !DILocation(line: 1386, column: 32, scope: !16229)
!16233 = !DILocation(line: 1386, column: 46, scope: !16229)
!16234 = !DILocation(line: 1387, column: 28, scope: !16229)
!16235 = !DILocation(line: 1387, column: 4, scope: !16229)
!16236 = !DILocation(line: 1386, column: 2, scope: !16229)
!16237 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !300, file: !300, line: 989, type: !7619, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !461)
!16238 = !DILocation(line: 993, column: 10, scope: !16237)
!16239 = !DILocation(line: 993, column: 2, scope: !16237)
!16240 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2474, file: !2474, line: 1390, type: !3244, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16241)
!16241 = !{!16242}
!16242 = !DILocalVariable(name: "key", scope: !16240, file: !2474, line: 1396, type: !14729)
!16243 = !DILocation(line: 0, scope: !14737, inlinedAt: !16244)
!16244 = distinct !DILocation(line: 1396, column: 25, scope: !16240)
!16245 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !16246)
!16246 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !16244)
!16247 = !DILocation(line: 0, scope: !14746, inlinedAt: !16246)
!16248 = !DILocation(line: 0, scope: !16240)
!16249 = !DILocation(line: 1400, column: 18, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16251, file: !2474, line: 1399, column: 36)
!16251 = distinct !DILexicalBlock(scope: !16240, file: !2474, line: 1398, column: 6)
!16252 = !DILocation(line: 0, scope: !14906, inlinedAt: !16253)
!16253 = distinct !DILocation(line: 1400, column: 3, scope: !16250)
!16254 = !DILocation(line: 266, column: 15, scope: !14906, inlinedAt: !16253)
!16255 = !DILocation(line: 266, column: 28, scope: !14906, inlinedAt: !16253)
!16256 = !DILocation(line: 0, scope: !14914, inlinedAt: !16257)
!16257 = distinct !DILocation(line: 268, column: 3, scope: !14918, inlinedAt: !16253)
!16258 = !DILocation(line: 234, column: 2, scope: !14914, inlinedAt: !16257)
!16259 = !DILocation(line: 1402, column: 15, scope: !16240)
!16260 = !DILocation(line: 0, scope: !14923, inlinedAt: !16261)
!16261 = distinct !DILocation(line: 1402, column: 2, scope: !16240)
!16262 = !DILocation(line: 252, column: 15, scope: !14923, inlinedAt: !16261)
!16263 = !DILocation(line: 252, column: 28, scope: !14923, inlinedAt: !16261)
!16264 = !DILocation(line: 0, scope: !14930, inlinedAt: !16265)
!16265 = distinct !DILocation(line: 254, column: 3, scope: !14934, inlinedAt: !16261)
!16266 = !DILocation(line: 0, scope: !14937, inlinedAt: !16267)
!16267 = distinct !DILocation(line: 229, column: 2, scope: !14930, inlinedAt: !16265)
!16268 = !DILocation(line: 188, column: 2, scope: !14947, inlinedAt: !16267)
!16269 = !DILocation(line: 188, column: 2, scope: !14949, inlinedAt: !16267)
!16270 = !DILocation(line: 0, scope: !14947, inlinedAt: !16267)
!16271 = !DILocation(line: 189, column: 7, scope: !14952, inlinedAt: !16267)
!16272 = !DILocation(line: 189, column: 35, scope: !14952, inlinedAt: !16267)
!16273 = !DILocation(line: 189, column: 7, scope: !14953, inlinedAt: !16267)
!16274 = !DILocation(line: 191, column: 21, scope: !14957, inlinedAt: !16267)
!16275 = !DILocation(line: 190, column: 4, scope: !14957, inlinedAt: !16267)
!16276 = !DILocation(line: 192, column: 4, scope: !14957, inlinedAt: !16267)
!16277 = distinct !{!16277, !16268, !16278}
!16278 = !DILocation(line: 194, column: 2, scope: !14947, inlinedAt: !16267)
!16279 = !DILocation(line: 196, column: 37, scope: !14937, inlinedAt: !16267)
!16280 = !DILocation(line: 196, column: 2, scope: !14937, inlinedAt: !16267)
!16281 = !DILocation(line: 197, column: 1, scope: !14937, inlinedAt: !16267)
!16282 = !DILocation(line: 1403, column: 2, scope: !16240)
!16283 = !DILocation(line: 0, scope: !15348, inlinedAt: !16284)
!16284 = distinct !DILocation(line: 1404, column: 2, scope: !16240)
!16285 = !DILocation(line: 196, column: 9, scope: !15348, inlinedAt: !16284)
!16286 = !DILocation(line: 1405, column: 1, scope: !16240)
!16287 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2474, file: !2474, line: 1459, type: !16288, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16290)
!16288 = !DISubroutineType(types: !16289)
!16289 = !{!332, !15528}
!16290 = !{!16291, !16292, !16293}
!16291 = !DILocalVariable(name: "timeout", arg: 1, scope: !16287, file: !2474, line: 1459, type: !15528)
!16292 = !DILocalVariable(name: "ticks", scope: !16287, file: !2474, line: 1461, type: !1708)
!16293 = !DILocalVariable(name: "ret", scope: !16287, file: !2474, line: 1480, type: !332)
!16294 = !DILocation(line: 0, scope: !16287)
!16295 = !DILocation(line: 1468, column: 6, scope: !16296)
!16296 = distinct !DILexicalBlock(scope: !16287, file: !2474, line: 1468, column: 6)
!16297 = !DILocation(line: 1468, column: 6, scope: !16287)
!16298 = !DILocation(line: 1469, column: 20, scope: !16299)
!16299 = distinct !DILexicalBlock(scope: !16296, file: !2474, line: 1468, column: 40)
!16300 = !DILocation(line: 1469, column: 3, scope: !16299)
!16301 = !DILocation(line: 1473, column: 3, scope: !16299)
!16302 = !DILocation(line: 1478, column: 10, scope: !16287)
!16303 = !DILocation(line: 1480, column: 16, scope: !16287)
!16304 = !DILocation(line: 1485, column: 1, scope: !16287)
!16305 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3677, file: !3677, line: 310, type: !16306, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16308)
!16306 = !DISubroutineType(types: !16307)
!16307 = !{null, !16212}
!16308 = !{!16309}
!16309 = !DILocalVariable(name: "thread", arg: 1, scope: !16305, file: !3677, line: 310, type: !16212)
!16310 = !DILocation(line: 0, scope: !16305)
!16311 = !DILocation(line: 319, column: 2, scope: !16312)
!16312 = distinct !DILexicalBlock(scope: !16305, file: !3677, line: 319, column: 2)
!16313 = !{i64 2154884673}
!16314 = !DILocation(line: 320, column: 2, scope: !16305)
!16315 = !DILocation(line: 321, column: 1, scope: !16305)
!16316 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2474, file: !2474, line: 1415, type: !16317, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16319)
!16317 = !DISubroutineType(types: !16318)
!16318 = !{!332, !1708}
!16319 = !{!16320, !16321, !16322, !16323}
!16320 = !DILocalVariable(name: "ticks", arg: 1, scope: !16316, file: !2474, line: 1415, type: !1708)
!16321 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16316, file: !2474, line: 1418, type: !121)
!16322 = !DILocalVariable(name: "timeout", scope: !16316, file: !2474, line: 1430, type: !15528)
!16323 = !DILocalVariable(name: "key", scope: !16316, file: !2474, line: 1437, type: !14729)
!16324 = !DILocation(line: 0, scope: !16316)
!16325 = !DILocation(line: 1425, column: 12, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16316, file: !2474, line: 1425, column: 6)
!16327 = !DILocation(line: 1425, column: 6, scope: !16316)
!16328 = !DILocation(line: 1426, column: 3, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16326, file: !2474, line: 1425, column: 18)
!16330 = !DILocation(line: 1427, column: 3, scope: !16329)
!16331 = !DILocation(line: 1431, column: 24, scope: !16332)
!16332 = distinct !DILexicalBlock(scope: !16316, file: !2474, line: 1431, column: 6)
!16333 = !DILocation(line: 1431, column: 6, scope: !16316)
!16334 = !DILocation(line: 1432, column: 35, scope: !16335)
!16335 = distinct !DILexicalBlock(scope: !16332, file: !2474, line: 1431, column: 30)
!16336 = !DILocation(line: 1432, column: 27, scope: !16335)
!16337 = !DILocation(line: 1433, column: 2, scope: !16335)
!16338 = !DILocation(line: 1434, column: 27, scope: !16339)
!16339 = distinct !DILexicalBlock(scope: !16332, file: !2474, line: 1433, column: 9)
!16340 = !DILocation(line: 0, scope: !16332)
!16341 = !DILocation(line: 0, scope: !14737, inlinedAt: !16342)
!16342 = distinct !DILocation(line: 1437, column: 25, scope: !16316)
!16343 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !16344)
!16344 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !16342)
!16345 = !DILocation(line: 0, scope: !14746, inlinedAt: !16344)
!16346 = !DILocation(line: 1440, column: 20, scope: !16316)
!16347 = !DILocation(line: 1440, column: 18, scope: !16316)
!16348 = !DILocation(line: 1442, column: 2, scope: !16316)
!16349 = !DILocation(line: 1443, column: 23, scope: !16316)
!16350 = !DILocation(line: 1443, column: 2, scope: !16316)
!16351 = !DILocation(line: 1444, column: 29, scope: !16316)
!16352 = !DILocation(line: 1444, column: 2, scope: !16316)
!16353 = !DILocation(line: 0, scope: !15348, inlinedAt: !16354)
!16354 = distinct !DILocation(line: 1446, column: 8, scope: !16316)
!16355 = !DILocation(line: 196, column: 9, scope: !15348, inlinedAt: !16354)
!16356 = !DILocation(line: 1450, column: 10, scope: !16316)
!16357 = !DILocation(line: 1450, column: 45, scope: !16316)
!16358 = !DILocation(line: 1450, column: 43, scope: !16316)
!16359 = !DILocation(line: 1451, column: 6, scope: !16316)
!16360 = !DILocation(line: 1457, column: 1, scope: !16316)
!16361 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !6004, file: !6004, line: 1103, type: !6005, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16362)
!16362 = !{!16363}
!16363 = !DILocalVariable(name: "t", arg: 1, scope: !16361, file: !6004, line: 1103, type: !1605)
!16364 = !DILocation(line: 0, scope: !16361)
!16365 = !DILocation(line: 0, scope: !14784, inlinedAt: !16366)
!16366 = distinct !DILocation(line: 1106, column: 9, scope: !16361)
!16367 = !DILocation(line: 139, column: 13, scope: !16368, inlinedAt: !16366)
!16368 = distinct !DILexicalBlock(scope: !16369, file: !6004, line: 138, column: 10)
!16369 = distinct !DILexicalBlock(scope: !16370, file: !6004, line: 136, column: 7)
!16370 = distinct !DILexicalBlock(scope: !14805, file: !6004, line: 134, column: 17)
!16371 = !DILocation(line: 1106, column: 2, scope: !16361)
!16372 = distinct !DISubprogram(name: "k_yield", scope: !3677, file: !3677, line: 140, type: !3244, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !461)
!16373 = !DILocation(line: 148, column: 2, scope: !16374)
!16374 = distinct !DILexicalBlock(scope: !16372, file: !3677, line: 148, column: 2)
!16375 = !{i64 2154883993}
!16376 = !DILocation(line: 149, column: 2, scope: !16372)
!16377 = !DILocation(line: 150, column: 1, scope: !16372)
!16378 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2474, file: !2474, line: 1495, type: !16379, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16381)
!16379 = !DISubroutineType(types: !16380)
!16380 = !{!332, !103}
!16381 = !{!16382, !16383}
!16382 = !DILocalVariable(name: "us", arg: 1, scope: !16378, file: !2474, line: 1495, type: !103)
!16383 = !DILocalVariable(name: "ticks", scope: !16378, file: !2474, line: 1497, type: !332)
!16384 = !DILocation(line: 0, scope: !16378)
!16385 = !DILocation(line: 1501, column: 31, scope: !16378)
!16386 = !DILocation(line: 1501, column: 10, scope: !16378)
!16387 = !DILocation(line: 1502, column: 23, scope: !16378)
!16388 = !DILocation(line: 1502, column: 10, scope: !16378)
!16389 = !DILocation(line: 1506, column: 31, scope: !16378)
!16390 = !DILocation(line: 1506, column: 9, scope: !16378)
!16391 = !DILocation(line: 1506, column: 2, scope: !16378)
!16392 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !6004, file: !6004, line: 571, type: !6005, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16393)
!16393 = !{!16394}
!16394 = !DILocalVariable(name: "t", arg: 1, scope: !16392, file: !6004, line: 571, type: !1605)
!16395 = !DILocation(line: 0, scope: !16392)
!16396 = !DILocation(line: 0, scope: !14784, inlinedAt: !16397)
!16397 = distinct !DILocation(line: 574, column: 9, scope: !16392)
!16398 = !DILocation(line: 135, column: 5, scope: !16370, inlinedAt: !16397)
!16399 = !DILocation(line: 139, column: 13, scope: !16368, inlinedAt: !16397)
!16400 = !DILocation(line: 574, column: 2, scope: !16392)
!16401 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !6004, file: !6004, line: 1187, type: !6005, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16402)
!16402 = !{!16403}
!16403 = !DILocalVariable(name: "t", arg: 1, scope: !16401, file: !6004, line: 1187, type: !1605)
!16404 = !DILocation(line: 0, scope: !16401)
!16405 = !DILocation(line: 0, scope: !14784, inlinedAt: !16406)
!16406 = distinct !DILocation(line: 1190, column: 9, scope: !16401)
!16407 = !DILocation(line: 145, column: 13, scope: !16408, inlinedAt: !16406)
!16408 = distinct !DILexicalBlock(scope: !14802, file: !6004, line: 144, column: 10)
!16409 = !DILocation(line: 1190, column: 2, scope: !16401)
!16410 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2474, file: !2474, line: 1517, type: !16306, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16411)
!16411 = !{!16412}
!16412 = !DILocalVariable(name: "thread", arg: 1, scope: !16410, file: !2474, line: 1517, type: !16212)
!16413 = !DILocation(line: 0, scope: !16410)
!16414 = !DILocation(line: 1521, column: 6, scope: !16415)
!16415 = distinct !DILexicalBlock(scope: !16410, file: !2474, line: 1521, column: 6)
!16416 = !DILocation(line: 1521, column: 6, scope: !16410)
!16417 = !DILocation(line: 1525, column: 6, scope: !16418)
!16418 = distinct !DILexicalBlock(scope: !16410, file: !2474, line: 1525, column: 6)
!16419 = !DILocation(line: 1525, column: 37, scope: !16418)
!16420 = !DILocation(line: 1525, column: 6, scope: !16410)
!16421 = !DILocation(line: 1527, column: 20, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !16423, file: !2474, line: 1527, column: 7)
!16423 = distinct !DILexicalBlock(scope: !16418, file: !2474, line: 1525, column: 42)
!16424 = !DILocation(line: 1527, column: 33, scope: !16422)
!16425 = !DILocation(line: 1527, column: 7, scope: !16423)
!16426 = !DILocation(line: 1532, column: 2, scope: !16410)
!16427 = !DILocation(line: 1533, column: 2, scope: !16410)
!16428 = !DILocation(line: 1031, column: 3, scope: !15381, inlinedAt: !16429)
!16429 = distinct !DILocation(line: 48, column: 10, scope: !15385, inlinedAt: !16430)
!16430 = distinct !DILocation(line: 1537, column: 7, scope: !16431)
!16431 = distinct !DILexicalBlock(scope: !16410, file: !2474, line: 1537, column: 6)
!16432 = !DILocation(line: 0, scope: !15381, inlinedAt: !16429)
!16433 = !DILocation(line: 48, column: 9, scope: !15385, inlinedAt: !16430)
!16434 = !DILocation(line: 1537, column: 6, scope: !16410)
!16435 = !DILocation(line: 1538, column: 3, scope: !16436)
!16436 = distinct !DILexicalBlock(scope: !16431, file: !2474, line: 1537, column: 25)
!16437 = !DILocation(line: 1539, column: 2, scope: !16436)
!16438 = !DILocation(line: 1540, column: 1, scope: !16410)
!16439 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13745, file: !13745, line: 101, type: !14855, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16440)
!16440 = !{!16441}
!16441 = !DILocalVariable(name: "thread", arg: 1, scope: !16439, file: !13745, line: 101, type: !2369)
!16442 = !DILocation(line: 0, scope: !16439)
!16443 = !DILocation(line: 103, column: 23, scope: !16439)
!16444 = !DILocation(line: 103, column: 36, scope: !16439)
!16445 = !DILocation(line: 103, column: 55, scope: !16439)
!16446 = !DILocation(line: 103, column: 2, scope: !16439)
!16447 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2474, file: !2474, line: 1567, type: !16448, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16450)
!16448 = !DISubroutineType(types: !16449)
!16449 = !{!16212}
!16450 = !{!16451}
!16451 = !DILocalVariable(name: "ret", scope: !16447, file: !2474, line: 1577, type: !16212)
!16452 = !DILocation(line: 1577, column: 30, scope: !16447)
!16453 = !DILocation(line: 0, scope: !16447)
!16454 = !DILocation(line: 1582, column: 2, scope: !16447)
!16455 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2474, file: !2474, line: 1593, type: !6628, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !461)
!16456 = !DILocation(line: 1031, column: 3, scope: !15381, inlinedAt: !16457)
!16457 = distinct !DILocation(line: 48, column: 10, scope: !15385, inlinedAt: !16458)
!16458 = distinct !DILocation(line: 1595, column: 10, scope: !16455)
!16459 = !DILocation(line: 0, scope: !15381, inlinedAt: !16457)
!16460 = !DILocation(line: 48, column: 9, scope: !15385, inlinedAt: !16458)
!16461 = !DILocation(line: 1595, column: 27, scope: !16455)
!16462 = !DILocation(line: 1595, column: 41, scope: !16455)
!16463 = !DILocation(line: 1595, column: 30, scope: !16455)
!16464 = !DILocation(line: 1595, column: 2, scope: !16455)
!16465 = distinct !DISubprogram(name: "z_thread_abort", scope: !2474, file: !2474, line: 1725, type: !14695, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16466)
!16466 = !{!16467, !16468}
!16467 = !DILocalVariable(name: "thread", arg: 1, scope: !16465, file: !2474, line: 1725, type: !2369)
!16468 = !DILocalVariable(name: "key", scope: !16465, file: !2474, line: 1727, type: !14729)
!16469 = !DILocation(line: 0, scope: !16465)
!16470 = !DILocation(line: 0, scope: !14737, inlinedAt: !16471)
!16471 = distinct !DILocation(line: 1727, column: 25, scope: !16465)
!16472 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !16473)
!16473 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !16471)
!16474 = !DILocation(line: 0, scope: !14746, inlinedAt: !16473)
!16475 = !DILocation(line: 1729, column: 20, scope: !16476)
!16476 = distinct !DILexicalBlock(scope: !16465, file: !2474, line: 1729, column: 6)
!16477 = !DILocation(line: 1729, column: 33, scope: !16476)
!16478 = !DILocation(line: 1729, column: 48, scope: !16476)
!16479 = !DILocation(line: 1729, column: 6, scope: !16465)
!16480 = !DILocation(line: 0, scope: !14764, inlinedAt: !16481)
!16481 = distinct !DILocation(line: 1730, column: 3, scope: !16482)
!16482 = distinct !DILexicalBlock(scope: !16476, file: !2474, line: 1729, column: 54)
!16483 = !DILocation(line: 0, scope: !14772, inlinedAt: !16484)
!16484 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !16481)
!16485 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !16484)
!16486 = !DILocation(line: 1732, column: 3, scope: !16487)
!16487 = distinct !DILexicalBlock(scope: !16482, file: !2474, line: 1732, column: 3)
!16488 = !{i64 2155621403, i64 2155621419, i64 2155621445, i64 2155621473, i64 2155621493}
!16489 = !DILocation(line: 1733, column: 3, scope: !16482)
!16490 = !DILocation(line: 1736, column: 20, scope: !16491)
!16491 = distinct !DILexicalBlock(scope: !16465, file: !2474, line: 1736, column: 6)
!16492 = !DILocation(line: 1736, column: 33, scope: !16491)
!16493 = !DILocation(line: 1736, column: 49, scope: !16491)
!16494 = !DILocation(line: 1736, column: 6, scope: !16465)
!16495 = !DILocation(line: 0, scope: !14764, inlinedAt: !16496)
!16496 = distinct !DILocation(line: 1737, column: 3, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16491, file: !2474, line: 1736, column: 56)
!16498 = !DILocation(line: 0, scope: !14772, inlinedAt: !16499)
!16499 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !16496)
!16500 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !16499)
!16501 = !DILocation(line: 1738, column: 3, scope: !16497)
!16502 = !DILocation(line: 1775, column: 2, scope: !16465)
!16503 = !DILocation(line: 1776, column: 16, scope: !16504)
!16504 = distinct !DILexicalBlock(scope: !16465, file: !2474, line: 1776, column: 6)
!16505 = !DILocation(line: 1776, column: 13, scope: !16504)
!16506 = !DILocation(line: 1776, column: 25, scope: !16504)
!16507 = !DILocation(line: 1031, column: 3, scope: !15381, inlinedAt: !16508)
!16508 = distinct !DILocation(line: 48, column: 10, scope: !15385, inlinedAt: !16509)
!16509 = distinct !DILocation(line: 1776, column: 29, scope: !16504)
!16510 = !DILocation(line: 0, scope: !15381, inlinedAt: !16508)
!16511 = !DILocation(line: 48, column: 9, scope: !15385, inlinedAt: !16509)
!16512 = !DILocation(line: 1776, column: 6, scope: !16465)
!16513 = !DILocation(line: 0, scope: !15348, inlinedAt: !16514)
!16514 = distinct !DILocation(line: 1777, column: 3, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16504, file: !2474, line: 1776, column: 47)
!16516 = !DILocation(line: 196, column: 9, scope: !15348, inlinedAt: !16514)
!16517 = !DILocation(line: 1779, column: 2, scope: !16515)
!16518 = !DILocation(line: 0, scope: !14764, inlinedAt: !16519)
!16519 = distinct !DILocation(line: 1780, column: 2, scope: !16465)
!16520 = !DILocation(line: 0, scope: !14772, inlinedAt: !16521)
!16521 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !16519)
!16522 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !16521)
!16523 = !DILocation(line: 1781, column: 1, scope: !16465)
!16524 = distinct !DISubprogram(name: "end_thread", scope: !2474, file: !2474, line: 1690, type: !14695, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16525)
!16525 = !{!16526}
!16526 = !DILocalVariable(name: "thread", arg: 1, scope: !16524, file: !2474, line: 1690, type: !2369)
!16527 = !DILocation(line: 0, scope: !16524)
!16528 = !DILocation(line: 1695, column: 20, scope: !16529)
!16529 = distinct !DILexicalBlock(scope: !16524, file: !2474, line: 1695, column: 6)
!16530 = !DILocation(line: 1695, column: 33, scope: !16529)
!16531 = !DILocation(line: 1695, column: 49, scope: !16529)
!16532 = !DILocation(line: 1695, column: 6, scope: !16524)
!16533 = !DILocation(line: 1697, column: 29, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16529, file: !2474, line: 1695, column: 56)
!16535 = !DILocation(line: 1698, column: 7, scope: !16536)
!16536 = distinct !DILexicalBlock(scope: !16534, file: !2474, line: 1698, column: 7)
!16537 = !DILocation(line: 1698, column: 7, scope: !16534)
!16538 = !DILocation(line: 0, scope: !14906, inlinedAt: !16539)
!16539 = distinct !DILocation(line: 1699, column: 4, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16536, file: !2474, line: 1698, column: 35)
!16541 = !DILocation(line: 266, column: 28, scope: !14906, inlinedAt: !16539)
!16542 = !DILocation(line: 0, scope: !14914, inlinedAt: !16543)
!16543 = distinct !DILocation(line: 268, column: 3, scope: !14918, inlinedAt: !16539)
!16544 = !DILocation(line: 234, column: 2, scope: !14914, inlinedAt: !16543)
!16545 = !DILocation(line: 1700, column: 3, scope: !16540)
!16546 = !DILocation(line: 1701, column: 20, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16534, file: !2474, line: 1701, column: 7)
!16548 = !DILocation(line: 1701, column: 30, scope: !16547)
!16549 = !DILocation(line: 1701, column: 7, scope: !16534)
!16550 = !DILocation(line: 1702, column: 4, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16547, file: !2474, line: 1701, column: 39)
!16552 = !DILocation(line: 1703, column: 3, scope: !16551)
!16553 = !DILocation(line: 1704, column: 9, scope: !16534)
!16554 = !DILocation(line: 1705, column: 23, scope: !16534)
!16555 = !DILocation(line: 1705, column: 3, scope: !16534)
!16556 = !DILocation(line: 1706, column: 3, scope: !16534)
!16557 = !DILocation(line: 1722, column: 2, scope: !16534)
!16558 = !DILocation(line: 1723, column: 1, scope: !16524)
!16559 = distinct !DISubprogram(name: "unpend_all", scope: !2474, file: !2474, line: 1674, type: !16560, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16562)
!16560 = !DISubroutineType(types: !16561)
!16561 = !{null, !2400}
!16562 = !{!16563, !16564}
!16563 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16559, file: !2474, line: 1674, type: !2400)
!16564 = !DILocalVariable(name: "thread", scope: !16559, file: !2474, line: 1676, type: !2369)
!16565 = !DILocation(line: 0, scope: !16559)
!16566 = !DILocation(line: 1678, column: 19, scope: !16559)
!16567 = !DILocation(line: 1678, column: 41, scope: !16559)
!16568 = !DILocation(line: 1678, column: 2, scope: !16559)
!16569 = !DILocation(line: 1679, column: 3, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16559, file: !2474, line: 1678, column: 50)
!16571 = !DILocation(line: 1680, column: 9, scope: !16570)
!16572 = !DILocalVariable(name: "thread", arg: 1, scope: !16573, file: !13765, line: 65, type: !2369)
!16573 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13765, file: !13765, line: 65, type: !16574, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16576)
!16574 = !DISubroutineType(types: !16575)
!16575 = !{null, !2369, !32}
!16576 = !{!16572, !16577}
!16577 = !DILocalVariable(name: "value", arg: 2, scope: !16573, file: !13765, line: 65, type: !32)
!16578 = !DILocation(line: 0, scope: !16573, inlinedAt: !16579)
!16579 = distinct !DILocation(line: 1681, column: 3, scope: !16570)
!16580 = !DILocation(line: 67, column: 15, scope: !16573, inlinedAt: !16579)
!16581 = !DILocation(line: 67, column: 33, scope: !16573, inlinedAt: !16579)
!16582 = !DILocation(line: 1682, column: 3, scope: !16570)
!16583 = distinct !{!16583, !16568, !16584}
!16584 = !DILocation(line: 1683, column: 2, scope: !16559)
!16585 = !DILocation(line: 1684, column: 1, scope: !16559)
!16586 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2474, file: !2474, line: 1794, type: !16587, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16589)
!16587 = !DISubroutineType(types: !16588)
!16588 = !{!103, !2369, !15528}
!16589 = !{!16590, !16591, !16592, !16593}
!16590 = !DILocalVariable(name: "thread", arg: 1, scope: !16586, file: !2474, line: 1794, type: !2369)
!16591 = !DILocalVariable(name: "timeout", arg: 2, scope: !16586, file: !2474, line: 1794, type: !15528)
!16592 = !DILocalVariable(name: "key", scope: !16586, file: !2474, line: 1796, type: !14729)
!16593 = !DILocalVariable(name: "ret", scope: !16586, file: !2474, line: 1797, type: !103)
!16594 = !DILocation(line: 0, scope: !16586)
!16595 = !DILocation(line: 0, scope: !14737, inlinedAt: !16596)
!16596 = distinct !DILocation(line: 1796, column: 25, scope: !16586)
!16597 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !16598)
!16598 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !16596)
!16599 = !DILocation(line: 0, scope: !14746, inlinedAt: !16598)
!16600 = !DILocation(line: 1801, column: 20, scope: !16601)
!16601 = distinct !DILexicalBlock(scope: !16586, file: !2474, line: 1801, column: 6)
!16602 = !DILocation(line: 1801, column: 33, scope: !16601)
!16603 = !DILocation(line: 1801, column: 49, scope: !16601)
!16604 = !DILocation(line: 1801, column: 6, scope: !16586)
!16605 = !DILocation(line: 1803, column: 13, scope: !16606)
!16606 = distinct !DILexicalBlock(scope: !16601, file: !2474, line: 1803, column: 13)
!16607 = !DILocation(line: 1803, column: 13, scope: !16601)
!16608 = !DILocation(line: 1805, column: 24, scope: !16609)
!16609 = distinct !DILexicalBlock(scope: !16606, file: !2474, line: 1805, column: 13)
!16610 = !DILocation(line: 1805, column: 21, scope: !16609)
!16611 = !DILocation(line: 1805, column: 34, scope: !16609)
!16612 = !DILocation(line: 1806, column: 20, scope: !16609)
!16613 = !DILocation(line: 1806, column: 44, scope: !16609)
!16614 = !DILocation(line: 1806, column: 30, scope: !16609)
!16615 = !DILocation(line: 1805, column: 13, scope: !16606)
!16616 = !DILocation(line: 1810, column: 42, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16609, file: !2474, line: 1808, column: 9)
!16618 = !DILocation(line: 1810, column: 3, scope: !16617)
!16619 = !DILocation(line: 1811, column: 22, scope: !16617)
!16620 = !DILocation(line: 1811, column: 3, scope: !16617)
!16621 = !DILocation(line: 0, scope: !15348, inlinedAt: !16622)
!16622 = distinct !DILocation(line: 1814, column: 9, scope: !16617)
!16623 = !DILocation(line: 196, column: 9, scope: !15348, inlinedAt: !16622)
!16624 = !DILocation(line: 1817, column: 3, scope: !16617)
!16625 = !DILocation(line: 0, scope: !16601)
!16626 = !DILocation(line: 0, scope: !14764, inlinedAt: !16627)
!16627 = distinct !DILocation(line: 1822, column: 2, scope: !16586)
!16628 = !DILocation(line: 0, scope: !14772, inlinedAt: !16629)
!16629 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !16627)
!16630 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !16629)
!16631 = !DILocation(line: 1823, column: 2, scope: !16586)
!16632 = !DILocation(line: 1824, column: 1, scope: !16586)
!16633 = distinct !DISubprogram(name: "z_sched_wake", scope: !2474, file: !2474, line: 1882, type: !16634, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16636)
!16634 = !DISubroutineType(types: !16635)
!16635 = !{!157, !2400, !103, !102}
!16636 = !{!16637, !16638, !16639, !16640, !16641, !16642, !16644}
!16637 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16633, file: !2474, line: 1882, type: !2400)
!16638 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16633, file: !2474, line: 1882, type: !103)
!16639 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16633, file: !2474, line: 1882, type: !102)
!16640 = !DILocalVariable(name: "thread", scope: !16633, file: !2474, line: 1884, type: !2369)
!16641 = !DILocalVariable(name: "ret", scope: !16633, file: !2474, line: 1885, type: !157)
!16642 = !DILocalVariable(name: "__i", scope: !16643, file: !2474, line: 1887, type: !14729)
!16643 = distinct !DILexicalBlock(scope: !16633, file: !2474, line: 1887, column: 2)
!16644 = !DILocalVariable(name: "__key", scope: !16643, file: !2474, line: 1887, type: !14729)
!16645 = !DILocation(line: 0, scope: !16633)
!16646 = !DILocation(line: 0, scope: !16643)
!16647 = !DILocation(line: 0, scope: !14737, inlinedAt: !16648)
!16648 = distinct !DILocation(line: 1887, column: 2, scope: !16643)
!16649 = !DILocation(line: 55, column: 2, scope: !14746, inlinedAt: !16650)
!16650 = distinct !DILocation(line: 145, column: 10, scope: !14737, inlinedAt: !16648)
!16651 = !DILocation(line: 0, scope: !14746, inlinedAt: !16650)
!16652 = !DILocation(line: 1888, column: 12, scope: !16653)
!16653 = distinct !DILexicalBlock(scope: !16654, file: !2474, line: 1887, column: 26)
!16654 = distinct !DILexicalBlock(scope: !16643, file: !2474, line: 1887, column: 2)
!16655 = !DILocation(line: 1890, column: 14, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16653, file: !2474, line: 1890, column: 7)
!16657 = !DILocation(line: 1890, column: 7, scope: !16653)
!16658 = !DILocalVariable(name: "thread", arg: 1, scope: !16659, file: !16660, line: 134, type: !2369)
!16659 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16660, file: !16660, line: 134, type: !16661, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16663)
!16660 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16661 = !DISubroutineType(types: !16662)
!16662 = !{null, !2369, !32, !102}
!16663 = !{!16658, !16664, !16665}
!16664 = !DILocalVariable(name: "value", arg: 2, scope: !16659, file: !16660, line: 135, type: !32)
!16665 = !DILocalVariable(name: "data", arg: 3, scope: !16659, file: !16660, line: 136, type: !102)
!16666 = !DILocation(line: 0, scope: !16659, inlinedAt: !16667)
!16667 = distinct !DILocation(line: 1891, column: 4, scope: !16668)
!16668 = distinct !DILexicalBlock(scope: !16656, file: !2474, line: 1890, column: 23)
!16669 = !DILocation(line: 0, scope: !16573, inlinedAt: !16670)
!16670 = distinct !DILocation(line: 138, column: 2, scope: !16659, inlinedAt: !16667)
!16671 = !DILocation(line: 67, column: 15, scope: !16573, inlinedAt: !16670)
!16672 = !DILocation(line: 67, column: 33, scope: !16573, inlinedAt: !16670)
!16673 = !DILocation(line: 139, column: 15, scope: !16659, inlinedAt: !16667)
!16674 = !DILocation(line: 139, column: 25, scope: !16659, inlinedAt: !16667)
!16675 = !DILocation(line: 1894, column: 4, scope: !16668)
!16676 = !DILocation(line: 1895, column: 10, scope: !16668)
!16677 = !DILocation(line: 1896, column: 4, scope: !16668)
!16678 = !DILocation(line: 1898, column: 3, scope: !16668)
!16679 = !DILocation(line: 0, scope: !14764, inlinedAt: !16680)
!16680 = distinct !DILocation(line: 1887, column: 2, scope: !16654)
!16681 = !DILocation(line: 0, scope: !14772, inlinedAt: !16682)
!16682 = distinct !DILocation(line: 215, column: 2, scope: !14764, inlinedAt: !16680)
!16683 = !DILocation(line: 95, column: 2, scope: !14772, inlinedAt: !16682)
!16684 = !DILocation(line: 1901, column: 2, scope: !16633)
!16685 = distinct !DISubprogram(name: "z_sched_wait", scope: !2474, file: !2474, line: 1904, type: !16686, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !16689)
!16686 = !DISubroutineType(types: !16687)
!16687 = !{!103, !14740, !14729, !2400, !15528, !16688}
!16688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!16689 = !{!16690, !16691, !16692, !16693, !16694, !16695}
!16690 = !DILocalVariable(name: "lock", arg: 1, scope: !16685, file: !2474, line: 1904, type: !14740)
!16691 = !DILocalVariable(name: "key", arg: 2, scope: !16685, file: !2474, line: 1904, type: !14729)
!16692 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16685, file: !2474, line: 1905, type: !2400)
!16693 = !DILocalVariable(name: "timeout", arg: 4, scope: !16685, file: !2474, line: 1905, type: !15528)
!16694 = !DILocalVariable(name: "data", arg: 5, scope: !16685, file: !2474, line: 1905, type: !16688)
!16695 = !DILocalVariable(name: "ret", scope: !16685, file: !2474, line: 1907, type: !103)
!16696 = !DILocation(line: 0, scope: !16685)
!16697 = !DILocation(line: 1907, column: 12, scope: !16685)
!16698 = !DILocation(line: 1909, column: 11, scope: !16699)
!16699 = distinct !DILexicalBlock(scope: !16685, file: !2474, line: 1909, column: 6)
!16700 = !DILocation(line: 1909, column: 6, scope: !16685)
!16701 = !DILocation(line: 1910, column: 11, scope: !16702)
!16702 = distinct !DILexicalBlock(scope: !16699, file: !2474, line: 1909, column: 20)
!16703 = !DILocation(line: 1910, column: 26, scope: !16702)
!16704 = !DILocation(line: 1910, column: 9, scope: !16702)
!16705 = !DILocation(line: 1911, column: 2, scope: !16702)
!16706 = !DILocation(line: 1912, column: 2, scope: !16685)
!16707 = distinct !DISubprogram(name: "z_data_copy", scope: !16708, file: !16708, line: 22, type: !3244, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3227, retainedNodes: !461)
!16708 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16709 = !DILocation(line: 24, column: 2, scope: !16707)
!16710 = !DILocation(line: 27, column: 2, scope: !16707)
!16711 = !DILocation(line: 31, column: 2, scope: !16707)
!16712 = !DILocation(line: 71, column: 1, scope: !16707)
!16713 = distinct !DISubprogram(name: "z_add_timeout", scope: !2511, file: !2511, line: 88, type: !16714, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16720)
!16714 = !DISubroutineType(types: !16715)
!16715 = !{null, !2484, !2503, !16716}
!16716 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1709, line: 67, baseType: !16717)
!16717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1709, line: 65, size: 64, elements: !16718)
!16718 = !{!16719}
!16719 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16717, file: !1709, line: 66, baseType: !1708, size: 64)
!16720 = !{!16721, !16722, !16723, !16724, !16730, !16731, !16734, !16737}
!16721 = !DILocalVariable(name: "to", arg: 1, scope: !16713, file: !2511, line: 88, type: !2484)
!16722 = !DILocalVariable(name: "fn", arg: 2, scope: !16713, file: !2511, line: 88, type: !2503)
!16723 = !DILocalVariable(name: "timeout", arg: 3, scope: !16713, file: !2511, line: 89, type: !16716)
!16724 = !DILocalVariable(name: "__i", scope: !16725, file: !2511, line: 102, type: !16726)
!16725 = distinct !DILexicalBlock(scope: !16713, file: !2511, line: 102, column: 2)
!16726 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !16727)
!16727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !16728)
!16728 = !{!16729}
!16729 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16727, file: !460, line: 33, baseType: !103, size: 32)
!16730 = !DILocalVariable(name: "__key", scope: !16725, file: !2511, line: 102, type: !16726)
!16731 = !DILocalVariable(name: "t", scope: !16732, file: !2511, line: 103, type: !2484)
!16732 = distinct !DILexicalBlock(scope: !16733, file: !2511, line: 102, column: 24)
!16733 = distinct !DILexicalBlock(scope: !16725, file: !2511, line: 102, column: 2)
!16734 = !DILocalVariable(name: "ticks", scope: !16735, file: !2511, line: 107, type: !1708)
!16735 = distinct !DILexicalBlock(scope: !16736, file: !2511, line: 106, column: 39)
!16736 = distinct !DILexicalBlock(scope: !16732, file: !2511, line: 105, column: 7)
!16737 = !DILocalVariable(name: "next_time", scope: !16738, file: !2511, line: 137, type: !332)
!16738 = distinct !DILexicalBlock(scope: !16739, file: !2511, line: 127, column: 22)
!16739 = distinct !DILexicalBlock(scope: !16732, file: !2511, line: 127, column: 7)
!16740 = !DILocation(line: 0, scope: !16713)
!16741 = !DILocation(line: 91, column: 6, scope: !16742)
!16742 = distinct !DILexicalBlock(scope: !16713, file: !2511, line: 91, column: 6)
!16743 = !DILocation(line: 91, column: 6, scope: !16713)
!16744 = !DILocation(line: 100, column: 6, scope: !16713)
!16745 = !DILocation(line: 100, column: 9, scope: !16713)
!16746 = !DILocation(line: 0, scope: !16725)
!16747 = !DILocalVariable(name: "l", arg: 1, scope: !16748, file: !460, line: 136, type: !16751)
!16748 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !16749, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16752)
!16749 = !DISubroutineType(types: !16750)
!16750 = !{!16726, !16751}
!16751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 32)
!16752 = !{!16747, !16753}
!16753 = !DILocalVariable(name: "k", scope: !16748, file: !460, line: 139, type: !16726)
!16754 = !DILocation(line: 0, scope: !16748, inlinedAt: !16755)
!16755 = distinct !DILocation(line: 102, column: 2, scope: !16725)
!16756 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !16761)
!16757 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5804, file: !5804, line: 42, type: !5805, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16758)
!16758 = !{!16759, !16760}
!16759 = !DILocalVariable(name: "key", scope: !16757, file: !5804, line: 44, type: !32)
!16760 = !DILocalVariable(name: "tmp", scope: !16757, file: !5804, line: 53, type: !32)
!16761 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !16755)
!16762 = !{i64 2227977}
!16763 = !DILocation(line: 0, scope: !16757, inlinedAt: !16761)
!16764 = !DILocation(line: 106, column: 33, scope: !16736)
!16765 = !DILocation(line: 105, column: 7, scope: !16732)
!16766 = !DILocation(line: 107, column: 50, scope: !16735)
!16767 = !DILocation(line: 107, column: 48, scope: !16735)
!16768 = !DILocation(line: 0, scope: !16735)
!16769 = !DILocation(line: 109, column: 17, scope: !16735)
!16770 = !DILocation(line: 110, column: 3, scope: !16735)
!16771 = !DILocation(line: 111, column: 31, scope: !16772)
!16772 = distinct !DILexicalBlock(scope: !16736, file: !2511, line: 110, column: 10)
!16773 = !DILocation(line: 111, column: 37, scope: !16772)
!16774 = !DILocation(line: 111, column: 35, scope: !16772)
!16775 = !DILocation(line: 0, scope: !16736)
!16776 = !DILocation(line: 109, column: 8, scope: !16735)
!16777 = !DILocation(line: 109, column: 15, scope: !16735)
!16778 = !DILocation(line: 114, column: 12, scope: !16779)
!16779 = distinct !DILexicalBlock(scope: !16732, file: !2511, line: 114, column: 3)
!16780 = !DILocation(line: 0, scope: !16732)
!16781 = !DILocation(line: 114, column: 3, scope: !16779)
!16782 = !DILocation(line: 115, column: 24, scope: !16783)
!16783 = distinct !DILexicalBlock(scope: !16784, file: !2511, line: 115, column: 8)
!16784 = distinct !DILexicalBlock(scope: !16785, file: !2511, line: 114, column: 45)
!16785 = distinct !DILexicalBlock(scope: !16779, file: !2511, line: 114, column: 3)
!16786 = !DILocation(line: 115, column: 11, scope: !16783)
!16787 = !DILocation(line: 115, column: 18, scope: !16783)
!16788 = !DILocation(line: 115, column: 8, scope: !16784)
!16789 = !DILocation(line: 116, column: 15, scope: !16790)
!16790 = distinct !DILexicalBlock(scope: !16783, file: !2511, line: 115, column: 32)
!16791 = !DILocation(line: 117, column: 26, scope: !16790)
!16792 = !DILocation(line: 117, column: 37, scope: !16790)
!16793 = !DILocation(line: 117, column: 5, scope: !16790)
!16794 = !DILocation(line: 123, column: 7, scope: !16732)
!16795 = !DILocation(line: 120, column: 15, scope: !16784)
!16796 = !DILocation(line: 114, column: 36, scope: !16785)
!16797 = distinct !{!16797, !16781, !16798}
!16798 = !DILocation(line: 121, column: 3, scope: !16779)
!16799 = !DILocation(line: 124, column: 41, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16801, file: !2511, line: 123, column: 18)
!16801 = distinct !DILexicalBlock(scope: !16732, file: !2511, line: 123, column: 7)
!16802 = !DILocation(line: 124, column: 4, scope: !16800)
!16803 = !DILocation(line: 125, column: 3, scope: !16800)
!16804 = !DILocation(line: 127, column: 13, scope: !16739)
!16805 = !DILocation(line: 127, column: 10, scope: !16739)
!16806 = !DILocation(line: 127, column: 7, scope: !16732)
!16807 = !DILocation(line: 137, column: 24, scope: !16738)
!16808 = !DILocation(line: 0, scope: !16738)
!16809 = !DILocation(line: 139, column: 18, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16738, file: !2511, line: 139, column: 8)
!16811 = !DILocation(line: 139, column: 23, scope: !16810)
!16812 = !DILocation(line: 141, column: 5, scope: !16813)
!16813 = distinct !DILexicalBlock(scope: !16810, file: !2511, line: 140, column: 48)
!16814 = !DILocation(line: 142, column: 4, scope: !16813)
!16815 = !DILocalVariable(name: "key", arg: 2, scope: !16816, file: !460, line: 190, type: !16726)
!16816 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !16817, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16819)
!16817 = !DISubroutineType(types: !16818)
!16818 = !{null, !16751, !16726}
!16819 = !{!16820, !16815}
!16820 = !DILocalVariable(name: "l", arg: 1, scope: !16816, file: !460, line: 189, type: !16751)
!16821 = !DILocation(line: 0, scope: !16816, inlinedAt: !16822)
!16822 = distinct !DILocation(line: 102, column: 2, scope: !16733)
!16823 = !DILocalVariable(name: "key", arg: 1, scope: !16824, file: !5804, line: 84, type: !32)
!16824 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5804, file: !5804, line: 84, type: !5815, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16825)
!16825 = !{!16823}
!16826 = !DILocation(line: 0, scope: !16824, inlinedAt: !16827)
!16827 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !16822)
!16828 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !16827)
!16829 = !{i64 2228794}
!16830 = !DILocation(line: 148, column: 1, scope: !16713)
!16831 = distinct !DISubprogram(name: "elapsed", scope: !2511, file: !2511, line: 62, type: !16832, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !461)
!16832 = !DISubroutineType(types: !16833)
!16833 = !{!332}
!16834 = !DILocation(line: 64, column: 9, scope: !16831)
!16835 = !DILocation(line: 64, column: 28, scope: !16831)
!16836 = !DILocation(line: 64, column: 35, scope: !16831)
!16837 = !DILocation(line: 64, column: 2, scope: !16831)
!16838 = distinct !DISubprogram(name: "first", scope: !2511, file: !2511, line: 39, type: !16839, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16841)
!16839 = !DISubroutineType(types: !16840)
!16840 = !{!2484}
!16841 = !{!16842}
!16842 = !DILocalVariable(name: "t", scope: !16838, file: !2511, line: 41, type: !16843)
!16843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!16844 = !DILocation(line: 41, column: 19, scope: !16838)
!16845 = !DILocation(line: 0, scope: !16838)
!16846 = !DILocation(line: 43, column: 9, scope: !16838)
!16847 = !DILocation(line: 43, column: 2, scope: !16838)
!16848 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !309, file: !309, line: 443, type: !16849, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16851)
!16849 = !DISubroutineType(types: !16850)
!16850 = !{null, !16843, !16843}
!16851 = !{!16852, !16853, !16854}
!16852 = !DILocalVariable(name: "successor", arg: 1, scope: !16848, file: !309, line: 443, type: !16843)
!16853 = !DILocalVariable(name: "node", arg: 2, scope: !16848, file: !309, line: 443, type: !16843)
!16854 = !DILocalVariable(name: "prev", scope: !16848, file: !309, line: 445, type: !16855)
!16855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16843)
!16856 = !DILocation(line: 0, scope: !16848)
!16857 = !DILocation(line: 445, column: 39, scope: !16848)
!16858 = !DILocation(line: 447, column: 8, scope: !16848)
!16859 = !DILocation(line: 447, column: 13, scope: !16848)
!16860 = !DILocation(line: 448, column: 8, scope: !16848)
!16861 = !DILocation(line: 448, column: 13, scope: !16848)
!16862 = !DILocation(line: 449, column: 8, scope: !16848)
!16863 = !DILocation(line: 449, column: 13, scope: !16848)
!16864 = !DILocation(line: 450, column: 18, scope: !16848)
!16865 = !DILocation(line: 451, column: 1, scope: !16848)
!16866 = distinct !DISubprogram(name: "next", scope: !2511, file: !2511, line: 46, type: !16867, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16869)
!16867 = !DISubroutineType(types: !16868)
!16868 = !{!2484, !2484}
!16869 = !{!16870, !16871}
!16870 = !DILocalVariable(name: "t", arg: 1, scope: !16866, file: !2511, line: 46, type: !2484)
!16871 = !DILocalVariable(name: "n", scope: !16866, file: !2511, line: 48, type: !16843)
!16872 = !DILocation(line: 0, scope: !16866)
!16873 = !DILocation(line: 48, column: 58, scope: !16866)
!16874 = !DILocation(line: 48, column: 19, scope: !16866)
!16875 = !DILocation(line: 50, column: 9, scope: !16866)
!16876 = !DILocation(line: 50, column: 2, scope: !16866)
!16877 = distinct !DISubprogram(name: "sys_dlist_append", scope: !309, file: !309, line: 404, type: !16878, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16881)
!16878 = !DISubroutineType(types: !16879)
!16879 = !{null, !16880, !16843}
!16880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 32)
!16881 = !{!16882, !16883, !16884}
!16882 = !DILocalVariable(name: "list", arg: 1, scope: !16877, file: !309, line: 404, type: !16880)
!16883 = !DILocalVariable(name: "node", arg: 2, scope: !16877, file: !309, line: 404, type: !16843)
!16884 = !DILocalVariable(name: "tail", scope: !16877, file: !309, line: 406, type: !16855)
!16885 = !DILocation(line: 0, scope: !16877)
!16886 = !DILocation(line: 406, column: 34, scope: !16877)
!16887 = !DILocation(line: 408, column: 8, scope: !16877)
!16888 = !DILocation(line: 408, column: 13, scope: !16877)
!16889 = !DILocation(line: 409, column: 8, scope: !16877)
!16890 = !DILocation(line: 409, column: 13, scope: !16877)
!16891 = !DILocation(line: 411, column: 8, scope: !16877)
!16892 = !DILocation(line: 411, column: 13, scope: !16877)
!16893 = !DILocation(line: 412, column: 13, scope: !16877)
!16894 = !DILocation(line: 413, column: 1, scope: !16877)
!16895 = distinct !DISubprogram(name: "next_timeout", scope: !2511, file: !2511, line: 67, type: !16832, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16896)
!16896 = !{!16897, !16898, !16899}
!16897 = !DILocalVariable(name: "to", scope: !16895, file: !2511, line: 69, type: !2484)
!16898 = !DILocalVariable(name: "ticks_elapsed", scope: !16895, file: !2511, line: 70, type: !332)
!16899 = !DILocalVariable(name: "ret", scope: !16895, file: !2511, line: 71, type: !332)
!16900 = !DILocation(line: 69, column: 24, scope: !16895)
!16901 = !DILocation(line: 0, scope: !16895)
!16902 = !DILocation(line: 70, column: 26, scope: !16895)
!16903 = !DILocation(line: 73, column: 10, scope: !16904)
!16904 = distinct !DILexicalBlock(scope: !16895, file: !2511, line: 73, column: 6)
!16905 = !DILocation(line: 73, column: 19, scope: !16904)
!16906 = !DILocation(line: 74, column: 21, scope: !16904)
!16907 = !DILocation(line: 74, column: 30, scope: !16904)
!16908 = !DILocation(line: 74, column: 28, scope: !16904)
!16909 = !DILocation(line: 74, column: 45, scope: !16904)
!16910 = !DILocation(line: 73, column: 6, scope: !16895)
!16911 = !DILocation(line: 77, column: 9, scope: !16912)
!16912 = distinct !DILexicalBlock(scope: !16904, file: !2511, line: 76, column: 9)
!16913 = !DILocation(line: 0, scope: !16904)
!16914 = !DILocation(line: 81, column: 20, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16895, file: !2511, line: 81, column: 6)
!16916 = !DILocation(line: 81, column: 6, scope: !16915)
!16917 = !DILocation(line: 81, column: 32, scope: !16915)
!16918 = !DILocation(line: 85, column: 2, scope: !16895)
!16919 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !309, file: !309, line: 341, type: !16920, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16922)
!16920 = !DISubroutineType(types: !16921)
!16921 = !{!16843, !16880, !16843}
!16922 = !{!16923, !16924}
!16923 = !DILocalVariable(name: "list", arg: 1, scope: !16919, file: !309, line: 341, type: !16880)
!16924 = !DILocalVariable(name: "node", arg: 2, scope: !16919, file: !309, line: 342, type: !16843)
!16925 = !DILocation(line: 0, scope: !16919)
!16926 = !DILocation(line: 344, column: 15, scope: !16919)
!16927 = !DILocation(line: 344, column: 9, scope: !16919)
!16928 = !DILocation(line: 344, column: 26, scope: !16919)
!16929 = !DILocation(line: 344, column: 2, scope: !16919)
!16930 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !309, file: !309, line: 325, type: !16920, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16931)
!16931 = !{!16932, !16933}
!16932 = !DILocalVariable(name: "list", arg: 1, scope: !16930, file: !309, line: 325, type: !16880)
!16933 = !DILocalVariable(name: "node", arg: 2, scope: !16930, file: !309, line: 326, type: !16843)
!16934 = !DILocation(line: 0, scope: !16930)
!16935 = !DILocation(line: 328, column: 24, scope: !16930)
!16936 = !DILocation(line: 328, column: 15, scope: !16930)
!16937 = !DILocation(line: 328, column: 9, scope: !16930)
!16938 = !DILocation(line: 328, column: 45, scope: !16930)
!16939 = !DILocation(line: 328, column: 2, scope: !16930)
!16940 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !309, file: !309, line: 294, type: !16941, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16943)
!16941 = !DISubroutineType(types: !16942)
!16942 = !{!16843, !16880}
!16943 = !{!16944}
!16944 = !DILocalVariable(name: "list", arg: 1, scope: !16940, file: !309, line: 294, type: !16880)
!16945 = !DILocation(line: 0, scope: !16940)
!16946 = !DILocation(line: 296, column: 9, scope: !16940)
!16947 = !DILocation(line: 296, column: 2, scope: !16940)
!16948 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !309, file: !309, line: 266, type: !16949, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16951)
!16949 = !DISubroutineType(types: !16950)
!16950 = !{!157, !16880}
!16951 = !{!16952}
!16952 = !DILocalVariable(name: "list", arg: 1, scope: !16948, file: !309, line: 266, type: !16880)
!16953 = !DILocation(line: 0, scope: !16948)
!16954 = !DILocation(line: 268, column: 15, scope: !16948)
!16955 = !DILocation(line: 268, column: 20, scope: !16948)
!16956 = !DILocation(line: 268, column: 2, scope: !16948)
!16957 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2511, file: !2511, line: 150, type: !16958, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16960)
!16958 = !DISubroutineType(types: !16959)
!16959 = !{!103, !2484}
!16960 = !{!16961, !16962, !16963, !16965}
!16961 = !DILocalVariable(name: "to", arg: 1, scope: !16957, file: !2511, line: 150, type: !2484)
!16962 = !DILocalVariable(name: "ret", scope: !16957, file: !2511, line: 152, type: !103)
!16963 = !DILocalVariable(name: "__i", scope: !16964, file: !2511, line: 154, type: !16726)
!16964 = distinct !DILexicalBlock(scope: !16957, file: !2511, line: 154, column: 2)
!16965 = !DILocalVariable(name: "__key", scope: !16964, file: !2511, line: 154, type: !16726)
!16966 = !DILocation(line: 0, scope: !16957)
!16967 = !DILocation(line: 0, scope: !16964)
!16968 = !DILocation(line: 0, scope: !16748, inlinedAt: !16969)
!16969 = distinct !DILocation(line: 154, column: 2, scope: !16964)
!16970 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !16971)
!16971 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !16969)
!16972 = !DILocation(line: 0, scope: !16757, inlinedAt: !16971)
!16973 = !DILocation(line: 155, column: 7, scope: !16974)
!16974 = distinct !DILexicalBlock(scope: !16975, file: !2511, line: 155, column: 7)
!16975 = distinct !DILexicalBlock(scope: !16976, file: !2511, line: 154, column: 24)
!16976 = distinct !DILexicalBlock(scope: !16964, file: !2511, line: 154, column: 2)
!16977 = !DILocation(line: 155, column: 7, scope: !16975)
!16978 = !DILocation(line: 156, column: 4, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16974, file: !2511, line: 155, column: 39)
!16980 = !DILocation(line: 158, column: 3, scope: !16979)
!16981 = !DILocation(line: 0, scope: !16816, inlinedAt: !16982)
!16982 = distinct !DILocation(line: 154, column: 2, scope: !16976)
!16983 = !DILocation(line: 0, scope: !16824, inlinedAt: !16984)
!16984 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !16982)
!16985 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !16984)
!16986 = !DILocation(line: 161, column: 2, scope: !16957)
!16987 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !309, file: !309, line: 225, type: !16988, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16992)
!16988 = !DISubroutineType(types: !16989)
!16989 = !{!157, !16990}
!16990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16991, size: 32)
!16991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2488)
!16992 = !{!16993}
!16993 = !DILocalVariable(name: "node", arg: 1, scope: !16987, file: !309, line: 225, type: !16990)
!16994 = !DILocation(line: 0, scope: !16987)
!16995 = !DILocation(line: 227, column: 15, scope: !16987)
!16996 = !DILocation(line: 227, column: 20, scope: !16987)
!16997 = !DILocation(line: 227, column: 2, scope: !16987)
!16998 = distinct !DISubprogram(name: "remove_timeout", scope: !2511, file: !2511, line: 53, type: !2505, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !16999)
!16999 = !{!17000}
!17000 = !DILocalVariable(name: "t", arg: 1, scope: !16998, file: !2511, line: 53, type: !2484)
!17001 = !DILocation(line: 0, scope: !16998)
!17002 = !DILocation(line: 55, column: 6, scope: !17003)
!17003 = distinct !DILexicalBlock(scope: !16998, file: !2511, line: 55, column: 6)
!17004 = !DILocation(line: 55, column: 14, scope: !17003)
!17005 = !DILocation(line: 55, column: 6, scope: !16998)
!17006 = !DILocation(line: 56, column: 25, scope: !17007)
!17007 = distinct !DILexicalBlock(scope: !17003, file: !2511, line: 55, column: 23)
!17008 = !DILocation(line: 56, column: 12, scope: !17007)
!17009 = !DILocation(line: 56, column: 19, scope: !17007)
!17010 = !DILocation(line: 57, column: 2, scope: !17007)
!17011 = !DILocation(line: 59, column: 23, scope: !16998)
!17012 = !DILocation(line: 59, column: 2, scope: !16998)
!17013 = !DILocation(line: 60, column: 1, scope: !16998)
!17014 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !309, file: !309, line: 496, type: !17015, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !17017)
!17015 = !DISubroutineType(types: !17016)
!17016 = !{null, !16843}
!17017 = !{!17018, !17019, !17020}
!17018 = !DILocalVariable(name: "node", arg: 1, scope: !17014, file: !309, line: 496, type: !16843)
!17019 = !DILocalVariable(name: "prev", scope: !17014, file: !309, line: 498, type: !16855)
!17020 = !DILocalVariable(name: "next", scope: !17014, file: !309, line: 499, type: !16855)
!17021 = !DILocation(line: 0, scope: !17014)
!17022 = !DILocation(line: 498, column: 34, scope: !17014)
!17023 = !DILocation(line: 499, column: 34, scope: !17014)
!17024 = !DILocation(line: 501, column: 8, scope: !17014)
!17025 = !DILocation(line: 501, column: 13, scope: !17014)
!17026 = !DILocation(line: 502, column: 8, scope: !17014)
!17027 = !DILocation(line: 502, column: 13, scope: !17014)
!17028 = !DILocation(line: 503, column: 2, scope: !17014)
!17029 = !DILocation(line: 504, column: 1, scope: !17014)
!17030 = distinct !DISubprogram(name: "sys_dnode_init", scope: !309, file: !309, line: 211, type: !17015, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !17031)
!17031 = !{!17032}
!17032 = !DILocalVariable(name: "node", arg: 1, scope: !17030, file: !309, line: 211, type: !16843)
!17033 = !DILocation(line: 0, scope: !17030)
!17034 = !DILocation(line: 213, column: 8, scope: !17030)
!17035 = !DILocation(line: 213, column: 13, scope: !17030)
!17036 = !DILocation(line: 214, column: 8, scope: !17030)
!17037 = !DILocation(line: 214, column: 13, scope: !17030)
!17038 = !DILocation(line: 215, column: 1, scope: !17030)
!17039 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2511, file: !2511, line: 183, type: !17040, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !17044)
!17040 = !DISubroutineType(types: !17041)
!17041 = !{!1708, !17042}
!17042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17043, size: 32)
!17043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2485)
!17044 = !{!17045, !17046, !17047, !17049}
!17045 = !DILocalVariable(name: "timeout", arg: 1, scope: !17039, file: !2511, line: 183, type: !17042)
!17046 = !DILocalVariable(name: "ticks", scope: !17039, file: !2511, line: 185, type: !1708)
!17047 = !DILocalVariable(name: "__i", scope: !17048, file: !2511, line: 187, type: !16726)
!17048 = distinct !DILexicalBlock(scope: !17039, file: !2511, line: 187, column: 2)
!17049 = !DILocalVariable(name: "__key", scope: !17048, file: !2511, line: 187, type: !16726)
!17050 = !DILocation(line: 0, scope: !17039)
!17051 = !DILocation(line: 0, scope: !17048)
!17052 = !DILocation(line: 0, scope: !16748, inlinedAt: !17053)
!17053 = distinct !DILocation(line: 187, column: 2, scope: !17048)
!17054 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17055)
!17055 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17053)
!17056 = !DILocation(line: 0, scope: !16757, inlinedAt: !17055)
!17057 = !DILocation(line: 188, column: 11, scope: !17058)
!17058 = distinct !DILexicalBlock(scope: !17059, file: !2511, line: 187, column: 24)
!17059 = distinct !DILexicalBlock(scope: !17048, file: !2511, line: 187, column: 2)
!17060 = !DILocation(line: 0, scope: !16816, inlinedAt: !17061)
!17061 = distinct !DILocation(line: 187, column: 2, scope: !17059)
!17062 = !DILocation(line: 0, scope: !16824, inlinedAt: !17063)
!17063 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17061)
!17064 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17063)
!17065 = !DILocation(line: 191, column: 2, scope: !17039)
!17066 = distinct !DISubprogram(name: "timeout_rem", scope: !2511, file: !2511, line: 165, type: !17040, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !17067)
!17067 = !{!17068, !17069, !17070}
!17068 = !DILocalVariable(name: "timeout", arg: 1, scope: !17066, file: !2511, line: 165, type: !17042)
!17069 = !DILocalVariable(name: "ticks", scope: !17066, file: !2511, line: 167, type: !1708)
!17070 = !DILocalVariable(name: "t", scope: !17071, file: !2511, line: 173, type: !2484)
!17071 = distinct !DILexicalBlock(scope: !17066, file: !2511, line: 173, column: 2)
!17072 = !DILocation(line: 0, scope: !17066)
!17073 = !DILocation(line: 169, column: 6, scope: !17074)
!17074 = distinct !DILexicalBlock(scope: !17066, file: !2511, line: 169, column: 6)
!17075 = !DILocation(line: 169, column: 6, scope: !17066)
!17076 = !DILocation(line: 173, column: 28, scope: !17071)
!17077 = !DILocation(line: 0, scope: !17071)
!17078 = !DILocation(line: 173, column: 39, scope: !17079)
!17079 = distinct !DILexicalBlock(scope: !17071, file: !2511, line: 173, column: 2)
!17080 = !DILocation(line: 173, column: 2, scope: !17071)
!17081 = !DILocation(line: 174, column: 15, scope: !17082)
!17082 = distinct !DILexicalBlock(scope: !17079, file: !2511, line: 173, column: 61)
!17083 = !DILocation(line: 174, column: 9, scope: !17082)
!17084 = !DILocation(line: 175, column: 15, scope: !17085)
!17085 = distinct !DILexicalBlock(scope: !17082, file: !2511, line: 175, column: 7)
!17086 = !DILocation(line: 175, column: 7, scope: !17082)
!17087 = !DILocation(line: 173, column: 52, scope: !17079)
!17088 = distinct !{!17088, !17080, !17089}
!17089 = !DILocation(line: 178, column: 2, scope: !17071)
!17090 = !DILocation(line: 180, column: 17, scope: !17066)
!17091 = !DILocation(line: 180, column: 15, scope: !17066)
!17092 = !DILocation(line: 180, column: 2, scope: !17066)
!17093 = !DILocation(line: 181, column: 1, scope: !17066)
!17094 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14139, file: !14139, line: 35, type: !17095, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !17097)
!17095 = !DISubroutineType(types: !17096)
!17096 = !{!157, !17042}
!17097 = !{!17098}
!17098 = !DILocalVariable(name: "to", arg: 1, scope: !17094, file: !14139, line: 35, type: !17042)
!17099 = !DILocation(line: 0, scope: !17094)
!17100 = !DILocation(line: 37, column: 35, scope: !17094)
!17101 = !DILocation(line: 37, column: 10, scope: !17094)
!17102 = !DILocation(line: 37, column: 9, scope: !17094)
!17103 = !DILocation(line: 37, column: 2, scope: !17094)
!17104 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2511, file: !2511, line: 194, type: !17040, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !17105)
!17105 = !{!17106, !17107, !17108, !17110}
!17106 = !DILocalVariable(name: "timeout", arg: 1, scope: !17104, file: !2511, line: 194, type: !17042)
!17107 = !DILocalVariable(name: "ticks", scope: !17104, file: !2511, line: 196, type: !1708)
!17108 = !DILocalVariable(name: "__i", scope: !17109, file: !2511, line: 198, type: !16726)
!17109 = distinct !DILexicalBlock(scope: !17104, file: !2511, line: 198, column: 2)
!17110 = !DILocalVariable(name: "__key", scope: !17109, file: !2511, line: 198, type: !16726)
!17111 = !DILocation(line: 0, scope: !17104)
!17112 = !DILocation(line: 0, scope: !17109)
!17113 = !DILocation(line: 0, scope: !16748, inlinedAt: !17114)
!17114 = distinct !DILocation(line: 198, column: 2, scope: !17109)
!17115 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17116)
!17116 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17114)
!17117 = !DILocation(line: 0, scope: !16757, inlinedAt: !17116)
!17118 = !DILocation(line: 199, column: 11, scope: !17119)
!17119 = distinct !DILexicalBlock(scope: !17120, file: !2511, line: 198, column: 24)
!17120 = distinct !DILexicalBlock(scope: !17109, file: !2511, line: 198, column: 2)
!17121 = !DILocation(line: 199, column: 23, scope: !17119)
!17122 = !DILocation(line: 0, scope: !16816, inlinedAt: !17123)
!17123 = distinct !DILocation(line: 198, column: 2, scope: !17120)
!17124 = !DILocation(line: 0, scope: !16824, inlinedAt: !17125)
!17125 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17123)
!17126 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17125)
!17127 = !DILocation(line: 199, column: 21, scope: !17119)
!17128 = !DILocation(line: 202, column: 2, scope: !17104)
!17129 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2511, file: !2511, line: 205, type: !16832, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !17130)
!17130 = !{!17131, !17132, !17134}
!17131 = !DILocalVariable(name: "ret", scope: !17129, file: !2511, line: 207, type: !332)
!17132 = !DILocalVariable(name: "__i", scope: !17133, file: !2511, line: 209, type: !16726)
!17133 = distinct !DILexicalBlock(scope: !17129, file: !2511, line: 209, column: 2)
!17134 = !DILocalVariable(name: "__key", scope: !17133, file: !2511, line: 209, type: !16726)
!17135 = !DILocation(line: 0, scope: !17129)
!17136 = !DILocation(line: 0, scope: !17133)
!17137 = !DILocation(line: 0, scope: !16748, inlinedAt: !17138)
!17138 = distinct !DILocation(line: 209, column: 2, scope: !17133)
!17139 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17140)
!17140 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17138)
!17141 = !DILocation(line: 0, scope: !16757, inlinedAt: !17140)
!17142 = !DILocation(line: 210, column: 9, scope: !17143)
!17143 = distinct !DILexicalBlock(scope: !17144, file: !2511, line: 209, column: 24)
!17144 = distinct !DILexicalBlock(scope: !17133, file: !2511, line: 209, column: 2)
!17145 = !DILocation(line: 0, scope: !16816, inlinedAt: !17146)
!17146 = distinct !DILocation(line: 209, column: 2, scope: !17144)
!17147 = !DILocation(line: 0, scope: !16824, inlinedAt: !17148)
!17148 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17146)
!17149 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17148)
!17150 = !DILocation(line: 212, column: 2, scope: !17129)
!17151 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2511, file: !2511, line: 215, type: !11761, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !17152)
!17152 = !{!17153, !17154, !17155, !17157, !17158, !17161, !17162}
!17153 = !DILocalVariable(name: "ticks", arg: 1, scope: !17151, file: !2511, line: 215, type: !332)
!17154 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17151, file: !2511, line: 215, type: !157)
!17155 = !DILocalVariable(name: "__i", scope: !17156, file: !2511, line: 217, type: !16726)
!17156 = distinct !DILexicalBlock(scope: !17151, file: !2511, line: 217, column: 2)
!17157 = !DILocalVariable(name: "__key", scope: !17156, file: !2511, line: 217, type: !16726)
!17158 = !DILocalVariable(name: "next_to", scope: !17159, file: !2511, line: 218, type: !103)
!17159 = distinct !DILexicalBlock(scope: !17160, file: !2511, line: 217, column: 24)
!17160 = distinct !DILexicalBlock(scope: !17156, file: !2511, line: 217, column: 2)
!17161 = !DILocalVariable(name: "sooner", scope: !17159, file: !2511, line: 219, type: !157)
!17162 = !DILocalVariable(name: "imminent", scope: !17159, file: !2511, line: 221, type: !157)
!17163 = !DILocation(line: 0, scope: !17151)
!17164 = !DILocation(line: 0, scope: !17156)
!17165 = !DILocation(line: 0, scope: !16748, inlinedAt: !17166)
!17166 = distinct !DILocation(line: 217, column: 2, scope: !17156)
!17167 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17168)
!17168 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17166)
!17169 = !DILocation(line: 0, scope: !16757, inlinedAt: !17168)
!17170 = !DILocation(line: 218, column: 17, scope: !17159)
!17171 = !DILocation(line: 0, scope: !17159)
!17172 = !DILocation(line: 221, column: 27, scope: !17159)
!17173 = !DILocation(line: 233, column: 17, scope: !17174)
!17174 = distinct !DILexicalBlock(scope: !17159, file: !2511, line: 233, column: 7)
!17175 = !DILocation(line: 234, column: 26, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !17174, file: !2511, line: 233, column: 56)
!17177 = !DILocation(line: 234, column: 4, scope: !17176)
!17178 = !DILocation(line: 235, column: 3, scope: !17176)
!17179 = !DILocation(line: 0, scope: !16816, inlinedAt: !17180)
!17180 = distinct !DILocation(line: 217, column: 2, scope: !17160)
!17181 = !DILocation(line: 0, scope: !16824, inlinedAt: !17182)
!17182 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17180)
!17183 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17182)
!17184 = !DILocation(line: 237, column: 1, scope: !17151)
!17185 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2511, file: !2511, line: 239, type: !17186, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !17188)
!17186 = !DISubroutineType(types: !17187)
!17187 = !{null, !332}
!17188 = !{!17189, !17190, !17191, !17193}
!17189 = !DILocalVariable(name: "ticks", arg: 1, scope: !17185, file: !2511, line: 239, type: !332)
!17190 = !DILocalVariable(name: "key", scope: !17185, file: !2511, line: 245, type: !16726)
!17191 = !DILocalVariable(name: "t", scope: !17192, file: !2511, line: 262, type: !2484)
!17192 = distinct !DILexicalBlock(scope: !17185, file: !2511, line: 261, column: 67)
!17193 = !DILocalVariable(name: "dt", scope: !17192, file: !2511, line: 263, type: !103)
!17194 = !DILocation(line: 0, scope: !17185)
!17195 = !DILocation(line: 242, column: 2, scope: !17185)
!17196 = !DILocation(line: 0, scope: !16748, inlinedAt: !17197)
!17197 = distinct !DILocation(line: 245, column: 25, scope: !17185)
!17198 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17199)
!17199 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17197)
!17200 = !DILocation(line: 0, scope: !16757, inlinedAt: !17199)
!17201 = !DILocation(line: 261, column: 9, scope: !17185)
!17202 = !DILocation(line: 261, column: 17, scope: !17185)
!17203 = !DILocation(line: 261, column: 25, scope: !17185)
!17204 = !DILocation(line: 261, column: 37, scope: !17185)
!17205 = !DILocation(line: 261, column: 47, scope: !17185)
!17206 = !DILocation(line: 261, column: 44, scope: !17185)
!17207 = !DILocation(line: 261, column: 2, scope: !17185)
!17208 = !DILocation(line: 0, scope: !17192)
!17209 = !DILocation(line: 263, column: 12, scope: !17192)
!17210 = !DILocation(line: 265, column: 16, scope: !17192)
!17211 = !DILocation(line: 265, column: 13, scope: !17192)
!17212 = !DILocation(line: 266, column: 13, scope: !17192)
!17213 = !DILocation(line: 267, column: 3, scope: !17192)
!17214 = !DILocation(line: 0, scope: !16816, inlinedAt: !17215)
!17215 = distinct !DILocation(line: 269, column: 3, scope: !17192)
!17216 = !DILocation(line: 0, scope: !16824, inlinedAt: !17217)
!17217 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17215)
!17218 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17217)
!17219 = !DILocation(line: 270, column: 6, scope: !17192)
!17220 = !DILocation(line: 270, column: 3, scope: !17192)
!17221 = !DILocation(line: 0, scope: !16748, inlinedAt: !17222)
!17222 = distinct !DILocation(line: 271, column: 9, scope: !17192)
!17223 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17224)
!17224 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17222)
!17225 = !DILocation(line: 0, scope: !16757, inlinedAt: !17224)
!17226 = !DILocation(line: 272, column: 22, scope: !17192)
!17227 = distinct !{!17227, !17207, !17228}
!17228 = !DILocation(line: 273, column: 2, scope: !17185)
!17229 = !DILocation(line: 276, column: 19, scope: !17230)
!17230 = distinct !DILexicalBlock(scope: !17231, file: !2511, line: 275, column: 23)
!17231 = distinct !DILexicalBlock(scope: !17185, file: !2511, line: 275, column: 6)
!17232 = !DILocation(line: 277, column: 2, scope: !17230)
!17233 = !DILocation(line: 279, column: 15, scope: !17185)
!17234 = !DILocation(line: 279, column: 12, scope: !17185)
!17235 = !DILocation(line: 280, column: 21, scope: !17185)
!17236 = !DILocation(line: 282, column: 24, scope: !17185)
!17237 = !DILocation(line: 282, column: 2, scope: !17185)
!17238 = !DILocation(line: 0, scope: !16816, inlinedAt: !17239)
!17239 = distinct !DILocation(line: 284, column: 2, scope: !17185)
!17240 = !DILocation(line: 0, scope: !16824, inlinedAt: !17241)
!17241 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17239)
!17242 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17241)
!17243 = !DILocation(line: 285, column: 1, scope: !17185)
!17244 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2511, file: !2511, line: 287, type: !17245, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !17247)
!17245 = !DISubroutineType(types: !17246)
!17246 = !{!420}
!17247 = !{!17248, !17249, !17251}
!17248 = !DILocalVariable(name: "t", scope: !17244, file: !2511, line: 289, type: !1605)
!17249 = !DILocalVariable(name: "__i", scope: !17250, file: !2511, line: 291, type: !16726)
!17250 = distinct !DILexicalBlock(scope: !17244, file: !2511, line: 291, column: 2)
!17251 = !DILocalVariable(name: "__key", scope: !17250, file: !2511, line: 291, type: !16726)
!17252 = !DILocation(line: 0, scope: !17244)
!17253 = !DILocation(line: 0, scope: !17250)
!17254 = !DILocation(line: 0, scope: !16748, inlinedAt: !17255)
!17255 = distinct !DILocation(line: 291, column: 2, scope: !17250)
!17256 = !DILocation(line: 55, column: 2, scope: !16757, inlinedAt: !17257)
!17257 = distinct !DILocation(line: 145, column: 10, scope: !16748, inlinedAt: !17255)
!17258 = !DILocation(line: 0, scope: !16757, inlinedAt: !17257)
!17259 = !DILocation(line: 292, column: 7, scope: !17260)
!17260 = distinct !DILexicalBlock(scope: !17261, file: !2511, line: 291, column: 24)
!17261 = distinct !DILexicalBlock(scope: !17250, file: !2511, line: 291, column: 2)
!17262 = !DILocation(line: 292, column: 19, scope: !17260)
!17263 = !DILocation(line: 0, scope: !16816, inlinedAt: !17264)
!17264 = distinct !DILocation(line: 291, column: 2, scope: !17261)
!17265 = !DILocation(line: 0, scope: !16824, inlinedAt: !17266)
!17266 = distinct !DILocation(line: 215, column: 2, scope: !16816, inlinedAt: !17264)
!17267 = !DILocation(line: 95, column: 2, scope: !16824, inlinedAt: !17266)
!17268 = !DILocation(line: 292, column: 17, scope: !17260)
!17269 = !DILocation(line: 294, column: 2, scope: !17244)
!17270 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2511, file: !2511, line: 297, type: !6905, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !461)
!17271 = !DILocation(line: 300, column: 19, scope: !17270)
!17272 = !DILocation(line: 300, column: 9, scope: !17270)
!17273 = !DILocation(line: 300, column: 2, scope: !17270)
!17274 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2511, file: !2511, line: 306, type: !17245, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !461)
!17275 = !DILocation(line: 308, column: 9, scope: !17274)
!17276 = !DILocation(line: 308, column: 2, scope: !17274)
!17277 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2511, file: !2511, line: 319, type: !6915, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !17278)
!17278 = !{!17279, !17280, !17281, !17282}
!17279 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17277, file: !2511, line: 319, type: !121)
!17280 = !DILocalVariable(name: "start_cycles", scope: !17277, file: !2511, line: 328, type: !121)
!17281 = !DILocalVariable(name: "cycles_to_wait", scope: !17277, file: !2511, line: 331, type: !121)
!17282 = !DILocalVariable(name: "current_cycles", scope: !17283, file: !2511, line: 338, type: !121)
!17283 = distinct !DILexicalBlock(scope: !17284, file: !2511, line: 337, column: 11)
!17284 = distinct !DILexicalBlock(scope: !17285, file: !2511, line: 337, column: 2)
!17285 = distinct !DILexicalBlock(scope: !17277, file: !2511, line: 337, column: 2)
!17286 = !DILocation(line: 0, scope: !17277)
!17287 = !DILocation(line: 322, column: 19, scope: !17288)
!17288 = distinct !DILexicalBlock(scope: !17277, file: !2511, line: 322, column: 6)
!17289 = !DILocation(line: 322, column: 6, scope: !17277)
!17290 = !DILocation(line: 328, column: 26, scope: !17277)
!17291 = !DILocation(line: 333, column: 43, scope: !17277)
!17292 = !DILocation(line: 337, column: 2, scope: !17277)
!17293 = !DILocation(line: 338, column: 29, scope: !17283)
!17294 = !DILocation(line: 0, scope: !17283)
!17295 = !DILocation(line: 341, column: 23, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17283, file: !2511, line: 341, column: 7)
!17297 = !DILocation(line: 341, column: 39, scope: !17296)
!17298 = !DILocation(line: 349, column: 1, scope: !17277)
!17299 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !300, file: !300, line: 1675, type: !6905, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !461)
!17300 = !DILocation(line: 1677, column: 9, scope: !17299)
!17301 = !DILocation(line: 1677, column: 2, scope: !17299)
!17302 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17303, file: !17303, line: 24, type: !6905, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !461)
!17303 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17304 = !DILocation(line: 26, column: 9, scope: !17302)
!17305 = !DILocation(line: 26, column: 2, scope: !17302)
!17306 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2511, file: !2511, line: 364, type: !17307, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !17309)
!17307 = !DISubroutineType(types: !17308)
!17308 = !{!1605, !16716}
!17309 = !{!17310, !17311}
!17310 = !DILocalVariable(name: "timeout", arg: 1, scope: !17306, file: !2511, line: 364, type: !16716)
!17311 = !DILocalVariable(name: "dt", scope: !17306, file: !2511, line: 366, type: !1708)
!17312 = !DILocation(line: 0, scope: !17306)
!17313 = !DILocation(line: 368, column: 6, scope: !17306)
!17314 = !DILocation(line: 371, column: 10, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17316, file: !2511, line: 370, column: 47)
!17316 = distinct !DILexicalBlock(scope: !17317, file: !2511, line: 370, column: 13)
!17317 = distinct !DILexicalBlock(scope: !17306, file: !2511, line: 368, column: 6)
!17318 = !DILocation(line: 371, column: 3, scope: !17315)
!17319 = !DILocation(line: 376, column: 58, scope: !17320)
!17320 = distinct !DILexicalBlock(scope: !17321, file: !2511, line: 376, column: 7)
!17321 = distinct !DILexicalBlock(scope: !17316, file: !2511, line: 372, column: 9)
!17322 = !DILocation(line: 376, column: 7, scope: !17321)
!17323 = !DILocation(line: 376, column: 43, scope: !17320)
!17324 = !DILocation(line: 377, column: 4, scope: !17325)
!17325 = distinct !DILexicalBlock(scope: !17320, file: !2511, line: 376, column: 64)
!17326 = !DILocation(line: 379, column: 10, scope: !17321)
!17327 = !DILocation(line: 379, column: 33, scope: !17321)
!17328 = !DILocation(line: 379, column: 31, scope: !17321)
!17329 = !DILocation(line: 379, column: 3, scope: !17321)
!17330 = !DILocation(line: 0, scope: !17317)
!17331 = !DILocation(line: 381, column: 1, scope: !17306)
!17332 = distinct !DISubprogram(name: "boot_banner", scope: !17333, file: !17333, line: 26, type: !3244, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3230, retainedNodes: !461)
!17333 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17334 = !DILocation(line: 34, column: 2, scope: !17332)
!17335 = !DILocation(line: 36, column: 1, scope: !17332)
!17336 = distinct !DISubprogram(name: "statics_init", scope: !2539, file: !2539, line: 21, type: !2545, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !17337)
!17337 = !{!17338, !17339}
!17338 = !DILocalVariable(name: "unused", arg: 1, scope: !17336, file: !2539, line: 21, type: !2547)
!17339 = !DILocalVariable(name: "h", scope: !17340, file: !2539, line: 24, type: !17341)
!17340 = distinct !DILexicalBlock(scope: !17336, file: !2539, line: 24, column: 2)
!17341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17342, size: 32)
!17342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !17343)
!17343 = !{!17344, !17350, !17356}
!17344 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17342, file: !300, line: 5074, baseType: !17345, size: 96)
!17345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !17346)
!17346 = !{!17347, !17348, !17349}
!17347 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17345, file: !450, line: 57, baseType: !453, size: 32)
!17348 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17345, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!17349 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17345, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!17350 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17342, file: !300, line: 5075, baseType: !17351, size: 64, offset: 96)
!17351 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !17352)
!17352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !17353)
!17353 = !{!17354}
!17354 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17352, file: !304, line: 232, baseType: !17355, size: 64)
!17355 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2525)
!17356 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17342, file: !300, line: 5076, baseType: !17357, offset: 160)
!17357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!17358 = !DILocation(line: 0, scope: !17336)
!17359 = !DILocation(line: 0, scope: !17340)
!17360 = !DILocation(line: 24, column: 2, scope: !17340)
!17361 = !DILocation(line: 52, column: 2, scope: !17336)
!17362 = !DILocation(line: 49, column: 27, scope: !17363)
!17363 = distinct !DILexicalBlock(scope: !17364, file: !2539, line: 48, column: 3)
!17364 = distinct !DILexicalBlock(scope: !17365, file: !2539, line: 24, column: 36)
!17365 = distinct !DILexicalBlock(scope: !17340, file: !2539, line: 24, column: 2)
!17366 = !DILocation(line: 49, column: 45, scope: !17363)
!17367 = !DILocation(line: 49, column: 4, scope: !17363)
!17368 = !DILocation(line: 24, column: 2, scope: !17365)
!17369 = !DILocation(line: 24, column: 2, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17365, file: !2539, line: 24, column: 2)
!17371 = distinct !{!17371, !17360, !17372}
!17372 = !DILocation(line: 51, column: 2, scope: !17340)
!17373 = distinct !DISubprogram(name: "k_heap_init", scope: !2539, file: !2539, line: 13, type: !17374, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !17376)
!17374 = !DISubroutineType(types: !17375)
!17375 = !{null, !17341, !102, !344}
!17376 = !{!17377, !17378, !17379}
!17377 = !DILocalVariable(name: "h", arg: 1, scope: !17373, file: !2539, line: 13, type: !17341)
!17378 = !DILocalVariable(name: "mem", arg: 2, scope: !17373, file: !2539, line: 13, type: !102)
!17379 = !DILocalVariable(name: "bytes", arg: 3, scope: !17373, file: !2539, line: 13, type: !344)
!17380 = !DILocation(line: 0, scope: !17373)
!17381 = !DILocation(line: 15, column: 19, scope: !17373)
!17382 = !DILocation(line: 15, column: 2, scope: !17373)
!17383 = !DILocation(line: 16, column: 20, scope: !17373)
!17384 = !DILocation(line: 16, column: 2, scope: !17373)
!17385 = !DILocation(line: 19, column: 1, scope: !17373)
!17386 = distinct !DISubprogram(name: "z_waitq_init", scope: !14071, file: !14071, line: 47, type: !17387, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !17390)
!17387 = !DISubroutineType(types: !17388)
!17388 = !{null, !17389}
!17389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17351, size: 32)
!17390 = !{!17391}
!17391 = !DILocalVariable(name: "w", arg: 1, scope: !17386, file: !14071, line: 47, type: !17389)
!17392 = !DILocation(line: 0, scope: !17386)
!17393 = !DILocation(line: 49, column: 21, scope: !17386)
!17394 = !DILocation(line: 49, column: 2, scope: !17386)
!17395 = !DILocation(line: 50, column: 1, scope: !17386)
!17396 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !17397, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !17400)
!17397 = !DISubroutineType(types: !17398)
!17398 = !{null, !17399}
!17399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17355, size: 32)
!17400 = !{!17401}
!17401 = !DILocalVariable(name: "list", arg: 1, scope: !17396, file: !309, line: 197, type: !17399)
!17402 = !DILocation(line: 0, scope: !17396)
!17403 = !DILocation(line: 199, column: 8, scope: !17396)
!17404 = !DILocation(line: 199, column: 13, scope: !17396)
!17405 = !DILocation(line: 200, column: 8, scope: !17396)
!17406 = !DILocation(line: 200, column: 13, scope: !17396)
!17407 = !DILocation(line: 201, column: 1, scope: !17396)
!17408 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2539, file: !2539, line: 64, type: !17409, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !17415)
!17409 = !DISubroutineType(types: !17410)
!17410 = !{!102, !17341, !344, !344, !17411}
!17411 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1709, line: 67, baseType: !17412)
!17412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1709, line: 65, size: 64, elements: !17413)
!17413 = !{!17414}
!17414 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17412, file: !1709, line: 66, baseType: !1708, size: 64)
!17415 = !{!17416, !17417, !17418, !17419, !17420, !17421, !17422, !17423, !17428}
!17416 = !DILocalVariable(name: "h", arg: 1, scope: !17408, file: !2539, line: 64, type: !17341)
!17417 = !DILocalVariable(name: "align", arg: 2, scope: !17408, file: !2539, line: 64, type: !344)
!17418 = !DILocalVariable(name: "bytes", arg: 3, scope: !17408, file: !2539, line: 64, type: !344)
!17419 = !DILocalVariable(name: "timeout", arg: 4, scope: !17408, file: !2539, line: 65, type: !17411)
!17420 = !DILocalVariable(name: "now", scope: !17408, file: !2539, line: 67, type: !420)
!17421 = !DILocalVariable(name: "end", scope: !17408, file: !2539, line: 67, type: !420)
!17422 = !DILocalVariable(name: "ret", scope: !17408, file: !2539, line: 68, type: !102)
!17423 = !DILocalVariable(name: "key", scope: !17408, file: !2539, line: 72, type: !17424)
!17424 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !17425)
!17425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !17426)
!17426 = !{!17427}
!17427 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17425, file: !460, line: 33, baseType: !103, size: 32)
!17428 = !DILocalVariable(name: "blocked_alloc", scope: !17408, file: !2539, line: 78, type: !157)
!17429 = !DILocation(line: 0, scope: !17408)
!17430 = !DILocation(line: 67, column: 21, scope: !17408)
!17431 = !DILocation(line: 70, column: 8, scope: !17408)
!17432 = !DILocation(line: 72, column: 41, scope: !17408)
!17433 = !DILocalVariable(name: "l", arg: 1, scope: !17434, file: !460, line: 136, type: !17437)
!17434 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !17435, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !17438)
!17435 = !DISubroutineType(types: !17436)
!17436 = !{!17424, !17437}
!17437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17357, size: 32)
!17438 = !{!17433, !17439}
!17439 = !DILocalVariable(name: "k", scope: !17434, file: !460, line: 139, type: !17424)
!17440 = !DILocation(line: 0, scope: !17434, inlinedAt: !17441)
!17441 = distinct !DILocation(line: 72, column: 25, scope: !17408)
!17442 = !DILocation(line: 55, column: 2, scope: !17443, inlinedAt: !17447)
!17443 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5804, file: !5804, line: 42, type: !5805, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !17444)
!17444 = !{!17445, !17446}
!17445 = !DILocalVariable(name: "key", scope: !17443, file: !5804, line: 44, type: !32)
!17446 = !DILocalVariable(name: "tmp", scope: !17443, file: !5804, line: 53, type: !32)
!17447 = distinct !DILocation(line: 145, column: 10, scope: !17434, inlinedAt: !17441)
!17448 = !{i64 2223031}
!17449 = !DILocation(line: 0, scope: !17443, inlinedAt: !17447)
!17450 = !DILocation(line: 81, column: 9, scope: !17451)
!17451 = distinct !DILexicalBlock(scope: !17408, file: !2539, line: 80, column: 22)
!17452 = !DILocation(line: 83, column: 9, scope: !17451)
!17453 = !DILocation(line: 85, column: 12, scope: !17454)
!17454 = distinct !DILexicalBlock(scope: !17451, file: !2539, line: 84, column: 7)
!17455 = !DILocation(line: 85, column: 21, scope: !17454)
!17456 = !DILocation(line: 85, column: 30, scope: !17454)
!17457 = !DILocation(line: 85, column: 37, scope: !17454)
!17458 = !DILocation(line: 84, column: 7, scope: !17451)
!17459 = !DILocation(line: 99, column: 10, scope: !17451)
!17460 = !DILocation(line: 0, scope: !17434, inlinedAt: !17461)
!17461 = distinct !DILocation(line: 101, column: 9, scope: !17451)
!17462 = !DILocation(line: 55, column: 2, scope: !17443, inlinedAt: !17463)
!17463 = distinct !DILocation(line: 145, column: 10, scope: !17434, inlinedAt: !17461)
!17464 = !DILocation(line: 0, scope: !17443, inlinedAt: !17463)
!17465 = distinct !{!17465, !17466, !17467}
!17466 = !DILocation(line: 80, column: 2, scope: !17408)
!17467 = !DILocation(line: 102, column: 2, scope: !17408)
!17468 = !DILocalVariable(name: "key", arg: 2, scope: !17469, file: !460, line: 190, type: !17424)
!17469 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !17470, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !17472)
!17470 = !DISubroutineType(types: !17471)
!17471 = !{null, !17437, !17424}
!17472 = !{!17473, !17468}
!17473 = !DILocalVariable(name: "l", arg: 1, scope: !17469, file: !460, line: 189, type: !17437)
!17474 = !DILocation(line: 0, scope: !17469, inlinedAt: !17475)
!17475 = distinct !DILocation(line: 106, column: 2, scope: !17408)
!17476 = !DILocalVariable(name: "key", arg: 1, scope: !17477, file: !5804, line: 84, type: !32)
!17477 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5804, file: !5804, line: 84, type: !5815, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !17478)
!17478 = !{!17476}
!17479 = !DILocation(line: 0, scope: !17477, inlinedAt: !17480)
!17480 = distinct !DILocation(line: 215, column: 2, scope: !17469, inlinedAt: !17475)
!17481 = !DILocation(line: 95, column: 2, scope: !17477, inlinedAt: !17480)
!17482 = !{i64 2223848}
!17483 = !DILocation(line: 107, column: 2, scope: !17408)
!17484 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2539, file: !2539, line: 110, type: !17485, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !17487)
!17485 = !DISubroutineType(types: !17486)
!17486 = !{!102, !17341, !344, !17411}
!17487 = !{!17488, !17489, !17490, !17491}
!17488 = !DILocalVariable(name: "h", arg: 1, scope: !17484, file: !2539, line: 110, type: !17341)
!17489 = !DILocalVariable(name: "bytes", arg: 2, scope: !17484, file: !2539, line: 110, type: !344)
!17490 = !DILocalVariable(name: "timeout", arg: 3, scope: !17484, file: !2539, line: 110, type: !17411)
!17491 = !DILocalVariable(name: "ret", scope: !17484, file: !2539, line: 114, type: !102)
!17492 = !DILocation(line: 0, scope: !17484)
!17493 = !DILocation(line: 114, column: 14, scope: !17484)
!17494 = !DILocation(line: 118, column: 2, scope: !17484)
!17495 = distinct !DISubprogram(name: "k_heap_free", scope: !2539, file: !2539, line: 121, type: !17496, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !17498)
!17496 = !DISubroutineType(types: !17497)
!17497 = !{null, !17341, !102}
!17498 = !{!17499, !17500, !17501}
!17499 = !DILocalVariable(name: "h", arg: 1, scope: !17495, file: !2539, line: 121, type: !17341)
!17500 = !DILocalVariable(name: "mem", arg: 2, scope: !17495, file: !2539, line: 121, type: !102)
!17501 = !DILocalVariable(name: "key", scope: !17495, file: !2539, line: 123, type: !17424)
!17502 = !DILocation(line: 0, scope: !17495)
!17503 = !DILocation(line: 0, scope: !17434, inlinedAt: !17504)
!17504 = distinct !DILocation(line: 123, column: 25, scope: !17495)
!17505 = !DILocation(line: 55, column: 2, scope: !17443, inlinedAt: !17506)
!17506 = distinct !DILocation(line: 145, column: 10, scope: !17434, inlinedAt: !17504)
!17507 = !DILocation(line: 0, scope: !17443, inlinedAt: !17506)
!17508 = !DILocation(line: 125, column: 20, scope: !17495)
!17509 = !DILocation(line: 125, column: 2, scope: !17495)
!17510 = !DILocation(line: 128, column: 60, scope: !17511)
!17511 = distinct !DILexicalBlock(scope: !17495, file: !2539, line: 128, column: 6)
!17512 = !DILocation(line: 128, column: 43, scope: !17511)
!17513 = !DILocation(line: 128, column: 68, scope: !17511)
!17514 = !DILocation(line: 128, column: 6, scope: !17495)
!17515 = !DILocation(line: 123, column: 41, scope: !17495)
!17516 = !DILocation(line: 129, column: 3, scope: !17517)
!17517 = distinct !DILexicalBlock(scope: !17511, file: !2539, line: 128, column: 74)
!17518 = !DILocation(line: 130, column: 2, scope: !17517)
!17519 = !DILocation(line: 0, scope: !17469, inlinedAt: !17520)
!17520 = distinct !DILocation(line: 131, column: 3, scope: !17521)
!17521 = distinct !DILexicalBlock(scope: !17511, file: !2539, line: 130, column: 9)
!17522 = !DILocation(line: 0, scope: !17477, inlinedAt: !17523)
!17523 = distinct !DILocation(line: 215, column: 2, scope: !17469, inlinedAt: !17520)
!17524 = !DILocation(line: 95, column: 2, scope: !17477, inlinedAt: !17523)
!17525 = !DILocation(line: 133, column: 1, scope: !17495)
