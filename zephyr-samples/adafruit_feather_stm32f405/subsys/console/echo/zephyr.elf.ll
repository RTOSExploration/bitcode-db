; ModuleID = 'build/adafruit_feather_stm32f405/subsys/console/echo/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.tty_serial = type { %struct.device*, %struct.k_sem, i8*, i32, i16, i16, i32, %struct.k_sem, i8*, i32, i16, i16, i32 }
%struct.k_sem = type { %union.anon, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.k_spinlock = type {}
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232712 to i8*), void (i8*)* inttoptr (i32 134230287 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232712 to i8*), void (i8*)* inttoptr (i32 134230267 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232712 to i8*), void (i8*)* inttoptr (i32 134230257 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232712 to i8*), void (i8*)* inttoptr (i32 134230357 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232712 to i8*), void (i8*)* inttoptr (i32 134230347 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232712 to i8*), void (i8*)* inttoptr (i32 134230337 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232712 to i8*), void (i8*)* inttoptr (i32 134230327 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232712 to i8*), void (i8*)* inttoptr (i32 134230317 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232712 to i8*), void (i8*)* inttoptr (i32 134230307 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232952 to i8*), void (i8*)* inttoptr (i32 134231637 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232712 to i8*), void (i8*)* inttoptr (i32 134230297 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232712 to i8*), void (i8*)* inttoptr (i32 134230277 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [62 x i8] c"You should see another line with instructions below. If not,\0A\00", align 1
@.str.1 = private unnamed_addr constant [65 x i8] c"the (interrupt-driven) console device doesn't work as expected:\0A\00", align 1
@prompt = internal constant [50 x i8] c"Start typing characters to see them echoed back\0D\0A\00", align 1, !dbg !25
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !111
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [41 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !120
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !175
@console_serial = internal global %struct.tty_serial zeroinitializer, align 4, !dbg !204
@console_txbuf = internal global [512 x i8] zeroinitializer, align 1, !dbg !301
@console_rxbuf = internal global [64 x i8] zeroinitializer, align 1, !dbg !295
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !351
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !359
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !500
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !536
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.37, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !546
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !551
@.str.36 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.37 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !571
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !764
@.str.38 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !726
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !709
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !682
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !698
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !728
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !741
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !743
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !745
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !747
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !749
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !751
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !753
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !755
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !757
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !759
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !769
@.str.40 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !798
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !892
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !881
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@debug_hook_in = internal unnamed_addr global i32 (i8)* null, align 4, !dbg !933
@debug_hook_out = internal unnamed_addr global i32 (i8)* @debug_hook_out_nop, align 4, !dbg !1084
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1034
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1076
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1078
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1027
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1094
@esc_state = internal global i32 0, align 4, !dbg !1119
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1127
@end = internal unnamed_addr global i8 0, align 1, !dbg !1129
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1123
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1125
@.str.63 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.62 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !791
@.str.67 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1135
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1421
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1387
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1373
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1312
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !789
@.str.1.68 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1423
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1391
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1389
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1329
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !787
@.str.2.69 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1436
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1395
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1393
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1335
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !785
@.str.3.70 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1438
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1399
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1397
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1341
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !783
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1440
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1403
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1401
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1347
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !781
@.str.5.71 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1442
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1407
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1405
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1353
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !779
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1444
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1411
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1409
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1359
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !777
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1446
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1415
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1413
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1365
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !775
@.str.8 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1448
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1419
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1417
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1371
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !793
@.str.77 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1450
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1686
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1636
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1688
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1627
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1629
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1638
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1646
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1669
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1672
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 39, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1675
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !865
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1714
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1825
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1827
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1823
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1794
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1829
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1310
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.68, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1327
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.69, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1333
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.70, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1339
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1345
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.71, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1351
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1357
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1363
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1369
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1919
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1959
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1962
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1968
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1974
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2183
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2192
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2199
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2204
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.129 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.135, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.136, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.137, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.138, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.139, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.133, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.140, i32 0, i32 0)], align 4, !dbg !2230
@.str.134 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.135 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.136 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.137 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.138 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.139 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.133 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.140 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2342
@.str.8.132 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2355
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2378
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2486
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2489
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2491
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2197
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2194
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2493
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2529
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2061
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2527
@.str.210 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2532
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3254 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !3258, !srcloc !3259
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !3260, !srcloc !3261
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !3262, !srcloc !3263
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !3264, !srcloc !3265
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3266, !srcloc !3267
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !3268, !srcloc !3269
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !3270, !srcloc !3271
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !3272, !srcloc !3273
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !3274, !srcloc !3275
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !3276, !srcloc !3277
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !3278, !srcloc !3279
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !3280, !srcloc !3281
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !3282, !srcloc !3283
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !3284, !srcloc !3285
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !3286, !srcloc !3287
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !3288, !srcloc !3289
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !3290, !srcloc !3291
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !3292, !srcloc !3293
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3294, !srcloc !3295
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !3296, !srcloc !3297
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !3298, !srcloc !3299
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3300, !srcloc !3301
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !3302, !srcloc !3303
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3304, !srcloc !3305
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !3306, !srcloc !3307
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !3308, !srcloc !3309
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !3310, !srcloc !3311
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !3312, !srcloc !3315
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !3316, !srcloc !3317
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3318, !srcloc !3319
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3320, !srcloc !3321
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3322, !srcloc !3323
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3324, !srcloc !3325
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !3326, !srcloc !3327
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3362, !srcloc !3363
  ret void, !dbg !3364
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3367 {
  %1 = tail call i32 @console_init() #25, !dbg !3371
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i32 0, i32 0)) #25, !dbg !3372
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3373
  %2 = tail call i32 @console_write(i8* noundef null, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @prompt, i32 0, i32 0), i32 noundef 49) #25, !dbg !3374
  br label %3, !dbg !3375

3:                                                ; preds = %11, %0
  %4 = tail call i32 @console_getchar() #25, !dbg !3376
  %5 = trunc i32 %4 to i8, !dbg !3376
  call void @llvm.dbg.value(metadata i8 %5, metadata !3369, metadata !DIExpression()), !dbg !3377
  %6 = tail call i32 @console_putchar(i8 noundef zeroext %5) #25, !dbg !3378
  %7 = and i32 %4, 255, !dbg !3379
  %8 = icmp eq i32 %7, 13, !dbg !3381
  br i1 %8, label %9, label %11, !dbg !3382

9:                                                ; preds = %3
  %10 = tail call i32 @console_putchar(i8 noundef zeroext 10) #25, !dbg !3383
  br label %11, !dbg !3385

11:                                               ; preds = %9, %3
  br label %3, !dbg !3376, !llvm.loop !3386
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3390, metadata !DIExpression()), !dbg !3391
  ret i32 0, !dbg !3392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3393 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3397, metadata !DIExpression()), !dbg !3398
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3399
  ret void, !dbg !3400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3401 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3404
  ret i8* %1, !dbg !3405
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3406 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3418, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata i8* %0, metadata !3417, metadata !DIExpression()), !dbg !3427
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3428
  ret void, !dbg !3430
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3435, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.value(metadata i8* %1, metadata !3436, metadata !DIExpression()), !dbg !3437
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3438
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3438
  ret i32 %4, !dbg !3439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3440 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3452, metadata !DIExpression()), !dbg !3453
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3449, metadata !DIExpression()), !dbg !3453
  call void @llvm.dbg.value(metadata i8* %1, metadata !3450, metadata !DIExpression()), !dbg !3453
  call void @llvm.dbg.value(metadata i8* %2, metadata !3451, metadata !DIExpression()), !dbg !3453
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3454
  ret void, !dbg !3455
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3456 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3460, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %1, metadata !3461, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 0, metadata !3462, metadata !DIExpression()), !dbg !3463
  %3 = icmp eq i32 %1, 0, !dbg !3464
  br i1 %3, label %13, label %4, !dbg !3467

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3462, metadata !DIExpression()), !dbg !3463
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3468
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3470
  %8 = load i8, i8* %7, align 1, !dbg !3470
  %9 = zext i8 %8 to i32, !dbg !3470
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3468
  %11 = add nuw i32 %5, 1, !dbg !3471
  call void @llvm.dbg.value(metadata i32 %11, metadata !3462, metadata !DIExpression()), !dbg !3463
  %12 = icmp eq i32 %11, %1, !dbg !3464
  br i1 %12, label %13, label %4, !dbg !3467, !llvm.loop !3472

13:                                               ; preds = %4, %2
  ret void, !dbg !3474
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3475 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3479, metadata !DIExpression()), !dbg !3481
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3482
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3482
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3480, metadata !DIExpression()), !dbg !3483
  call void @llvm.va_start(i8* nonnull %3), !dbg !3484
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3485
  %5 = load i32, i32* %4, align 4, !dbg !3485
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3485
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3485
  call void @llvm.va_end(i8* nonnull %3), !dbg !3486
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3487
  ret void, !dbg !3487
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3488 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3492, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata i32 %1, metadata !3493, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata i8* %2, metadata !3494, metadata !DIExpression()), !dbg !3497
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3498
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3498
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3495, metadata !DIExpression()), !dbg !3499
  call void @llvm.va_start(i8* nonnull %5), !dbg !3500
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3501
  %7 = load i32, i32* %6, align 4, !dbg !3501
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3501
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3501
  call void @llvm.dbg.value(metadata i32 %9, metadata !3496, metadata !DIExpression()), !dbg !3497
  call void @llvm.va_end(i8* nonnull %5), !dbg !3502
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3503
  ret i32 %9, !dbg !3504
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3505 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3512, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata i8* %0, metadata !3509, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata i32 %1, metadata !3510, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata i8* %2, metadata !3511, metadata !DIExpression()), !dbg !3519
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3520
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3520
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3513, metadata !DIExpression()), !dbg !3521
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3522
  store i8* %0, i8** %7, align 4, !dbg !3522
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3522
  store i32 %1, i32* %8, align 4, !dbg !3522
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3522
  store i32 0, i32* %9, align 4, !dbg !3522
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3523
  %10 = load i32, i32* %9, align 4, !dbg !3524
  %11 = load i32, i32* %8, align 4, !dbg !3526
  %12 = icmp slt i32 %10, %11, !dbg !3527
  br i1 %12, label %13, label %15, !dbg !3528

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3529
  store i8 0, i8* %14, align 1, !dbg !3531
  br label %15, !dbg !3532

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3533
  ret i32 %10, !dbg !3534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3540, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3541, metadata !DIExpression()), !dbg !3542
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3543
  %4 = load i8*, i8** %3, align 4, !dbg !3543
  %5 = icmp eq i8* %4, null, !dbg !3545
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3546
  br i1 %5, label %12, label %8, !dbg !3547

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3548
  %10 = load i32, i32* %9, align 4, !dbg !3548
  %11 = icmp slt i32 %7, %10, !dbg !3549
  br i1 %11, label %15, label %12, !dbg !3550

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3551
  %14 = add nsw i32 %7, 1, !dbg !3553
  store i32 %14, i32* %13, align 4, !dbg !3553
  br label %25, !dbg !3554

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3555
  %17 = icmp eq i32 %7, %16, !dbg !3557
  br i1 %17, label %18, label %21, !dbg !3558

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3559
  store i32 %19, i32* %6, align 4, !dbg !3559
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3561
  store i8 0, i8* %20, align 1, !dbg !3562
  br label %25, !dbg !3563

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3564
  %23 = add nsw i32 %7, 1, !dbg !3566
  store i32 %23, i32* %6, align 4, !dbg !3566
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3567
  store i8 %22, i8* %24, align 1, !dbg !3568
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3569
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3570 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3580, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i8* %1, metadata !3581, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i8* %2, metadata !3582, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i8* %3, metadata !3583, metadata !DIExpression()), !dbg !3584
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3585
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3586
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3587
  unreachable, !dbg !3588
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3589 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3693
  ret %struct.k_thread* %1, !dbg !3694
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3695 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3700, metadata !DIExpression()), !dbg !3701
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3702, !srcloc !3704
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3705
  ret void, !dbg !3706
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3707 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3708, !srcloc !3710
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3711
  ret %struct.k_thread* %1, !dbg !3712
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3713 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3724, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.value(metadata i8* %1, metadata !3725, metadata !DIExpression()), !dbg !3728
  %3 = icmp eq i8* %1, null, !dbg !3729
  br i1 %3, label %8, label %4, !dbg !3731

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3732
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3732
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3726, metadata !DIExpression()), !dbg !3728
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3733, !range !3734
  call void @llvm.dbg.value(metadata i32 %7, metadata !3727, metadata !DIExpression()), !dbg !3728
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3735
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3736
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3738 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3742, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.value(metadata i8* %1, metadata !3743, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.value(metadata i8* %1, metadata !3744, metadata !DIExpression()), !dbg !3746
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3747
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3745, metadata !DIExpression()), !dbg !3746
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3748
  %5 = ptrtoint i8* %4 to i32, !dbg !3749
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3749
  %7 = sub i32 %5, %6, !dbg !3749
  %8 = lshr i32 %7, 3, !dbg !3750
  ret i32 %8, !dbg !3751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3752 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3756, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %1, metadata !3757, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i1 %2, metadata !3758, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3761
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3762
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3759, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3760, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3761
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3763
  %6 = bitcast i8* %5 to i16*, !dbg !3763
  %7 = load i16, i16* %6, align 2, !dbg !3763
  %8 = and i16 %7, -2, !dbg !3767
  %9 = zext i1 %2 to i16, !dbg !3767
  %10 = or i16 %8, %9, !dbg !3767
  store i16 %10, i16* %6, align 2, !dbg !3763
  ret void, !dbg !3768
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3769 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3773, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i32 %1, metadata !3774, metadata !DIExpression()), !dbg !3775
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3776
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3778
  br i1 %4, label %7, label %5, !dbg !3779

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3780
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3782
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3783
  br label %7, !dbg !3784

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3785, !range !3787
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3788
  br i1 %9, label %13, label %10, !dbg !3789

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3790
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3792, !range !3787
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3793
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3794
  call void @llvm.dbg.value(metadata i32 %12, metadata !3774, metadata !DIExpression()), !dbg !3775
  br label %13, !dbg !3795

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3774, metadata !DIExpression()), !dbg !3775
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3796
  ret void, !dbg !3797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3798 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3802, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i32 %1, metadata !3803, metadata !DIExpression()), !dbg !3804
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3805
  %4 = add i32 %3, %1, !dbg !3806
  ret i32 %4, !dbg !3807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3808 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3812, metadata !DIExpression()), !dbg !3814
  call void @llvm.dbg.value(metadata i32 %1, metadata !3813, metadata !DIExpression()), !dbg !3814
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3815
  %4 = and i32 %3, 1, !dbg !3816
  %5 = icmp ne i32 %4, 0, !dbg !3815
  ret i1 %5, !dbg !3817
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3818 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3820, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i32 %1, metadata !3821, metadata !DIExpression()), !dbg !3825
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3826, !range !3827
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3828
  call void @llvm.dbg.value(metadata i32 %4, metadata !3822, metadata !DIExpression()), !dbg !3829
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3830
  ret void, !dbg !3831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3832 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3836, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i32 %1, metadata !3837, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i32 %2, metadata !3838, metadata !DIExpression()), !dbg !3841
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3842
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3843
  %6 = add i32 %5, %4, !dbg !3844
  call void @llvm.dbg.value(metadata i32 %6, metadata !3839, metadata !DIExpression()), !dbg !3841
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3845
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3846
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3847
  ret void, !dbg !3848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3849 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3851, metadata !DIExpression()), !dbg !3853
  call void @llvm.dbg.value(metadata i32 %1, metadata !3852, metadata !DIExpression()), !dbg !3853
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3854
  %4 = sub i32 %1, %3, !dbg !3855
  ret i32 %4, !dbg !3856
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3857 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3859, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i32 %1, metadata !3860, metadata !DIExpression()), !dbg !3864
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3865, !range !3827
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %4, metadata !3861, metadata !DIExpression()), !dbg !3867
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3868
  ret void, !dbg !3869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3870 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3874, metadata !DIExpression()), !dbg !3876
  call void @llvm.dbg.value(metadata i32 %1, metadata !3875, metadata !DIExpression()), !dbg !3876
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3877
  %4 = lshr i32 %3, 1, !dbg !3878
  ret i32 %4, !dbg !3879
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3880 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3884, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.value(metadata i32 %1, metadata !3885, metadata !DIExpression()), !dbg !3887
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3888
  %4 = add i32 %1, 1, !dbg !3889
  %5 = sub i32 %4, %3, !dbg !3890
  call void @llvm.dbg.value(metadata i32 %5, metadata !3886, metadata !DIExpression()), !dbg !3887
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3891, !range !3892
  %7 = sub nsw i32 31, %6, !dbg !3893
  ret i32 %7, !dbg !3894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3895 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3899, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata i32 %1, metadata !3900, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata i32 %2, metadata !3901, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3902, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3908
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3909
  %5 = load i32, i32* %4, align 4, !dbg !3909
  %6 = icmp eq i32 %5, 0, !dbg !3910
  br i1 %6, label %7, label %12, !dbg !3911

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3912
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3914
  %10 = load i32, i32* %9, align 4, !dbg !3915
  %11 = or i32 %10, %8, !dbg !3915
  store i32 %11, i32* %9, align 4, !dbg !3915
  store i32 %1, i32* %4, align 4, !dbg !3916
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3917
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3918
  br label %14, !dbg !3919

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3904, metadata !DIExpression()), !dbg !3920
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3921, !range !3922
  call void @llvm.dbg.value(metadata i32 %13, metadata !3907, metadata !DIExpression()), !dbg !3920
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3923
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3924
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3925
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3926
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3928 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3930, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.value(metadata i32 %1, metadata !3931, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.value(metadata i32 %2, metadata !3932, metadata !DIExpression()), !dbg !3933
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3934
  ret void, !dbg !3935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3936 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3938, metadata !DIExpression()), !dbg !3941
  call void @llvm.dbg.value(metadata i32 %1, metadata !3939, metadata !DIExpression()), !dbg !3941
  call void @llvm.dbg.value(metadata i32 %2, metadata !3940, metadata !DIExpression()), !dbg !3941
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3942
  ret void, !dbg !3943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3944 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3946, metadata !DIExpression()), !dbg !3948
  call void @llvm.dbg.value(metadata i32 %1, metadata !3947, metadata !DIExpression()), !dbg !3948
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3949
  ret i32 %3, !dbg !3950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3951 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3955, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %1, metadata !3956, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %2, metadata !3957, metadata !DIExpression()), !dbg !3960
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3961
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3958, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3959, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3960
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3959, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3960
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3962
  call void @llvm.dbg.value(metadata i8* %5, metadata !3959, metadata !DIExpression()), !dbg !3960
  %6 = bitcast i8* %5 to i16*, !dbg !3963
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3966
  %8 = load i16, i16* %7, align 2, !dbg !3966
  %9 = zext i16 %8 to i32, !dbg !3966
  ret i32 %9, !dbg !3967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3968 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3972, metadata !DIExpression()), !dbg !3973
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3974
  ret %struct.chunk_unit_t* %2, !dbg !3975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3976 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3980, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.value(metadata i32 %1, metadata !3981, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.value(metadata i32 %2, metadata !3982, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.value(metadata i32 %3, metadata !3983, metadata !DIExpression()), !dbg !3986
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3987
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3984, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3985, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3986
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3988
  call void @llvm.dbg.value(metadata i8* %6, metadata !3985, metadata !DIExpression()), !dbg !3986
  %7 = trunc i32 %3 to i16, !dbg !3989
  %8 = bitcast i8* %6 to i16*, !dbg !3992
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3993
  store i16 %7, i16* %9, align 2, !dbg !3994
  ret void, !dbg !3995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3996 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4000, metadata !DIExpression()), !dbg !4001
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4002
  ret i32 %2, !dbg !4003
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4004 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4008, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i32 %1, metadata !4009, metadata !DIExpression()), !dbg !4010
  %3 = add i32 %1, 4, !dbg !4011
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4012
  ret i32 %4, !dbg !4013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !4014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4018, metadata !DIExpression()), !dbg !4019
  %2 = add i32 %0, 7, !dbg !4020
  %3 = lshr i32 %2, 3, !dbg !4021
  ret i32 %3, !dbg !4022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4023 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4027, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.value(metadata i32 %1, metadata !4028, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.value(metadata i32 %2, metadata !4029, metadata !DIExpression()), !dbg !4030
  %4 = shl i32 %2, 1, !dbg !4031
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4032
  ret void, !dbg !4033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4034 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4036, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i32 %1, metadata !4037, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i32 %2, metadata !4038, metadata !DIExpression()), !dbg !4039
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4040
  ret void, !dbg !4041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4042 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4044, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i32 %1, metadata !4045, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i32 %2, metadata !4046, metadata !DIExpression()), !dbg !4052
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4053
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4047, metadata !DIExpression()), !dbg !4052
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4054
  %6 = icmp eq i32 %5, %1, !dbg !4055
  br i1 %6, label %7, label %14, !dbg !4056

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4057
  %9 = xor i32 %8, -1, !dbg !4059
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4060
  %11 = load i32, i32* %10, align 4, !dbg !4061
  %12 = and i32 %11, %9, !dbg !4061
  store i32 %12, i32* %10, align 4, !dbg !4061
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4062
  store i32 0, i32* %13, align 4, !dbg !4063
  br label %17, !dbg !4064

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4065
  call void @llvm.dbg.value(metadata i32 %15, metadata !4048, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %5, metadata !4051, metadata !DIExpression()), !dbg !4066
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4067
  store i32 %5, i32* %16, align 4, !dbg !4068
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4069
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4070
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4072 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4074, metadata !DIExpression()), !dbg !4076
  call void @llvm.dbg.value(metadata i32 %1, metadata !4075, metadata !DIExpression()), !dbg !4076
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4077
  ret i32 %3, !dbg !4078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4079 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4083, metadata !DIExpression()), !dbg !4090
  call void @llvm.dbg.value(metadata i8* %1, metadata !4084, metadata !DIExpression()), !dbg !4090
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4091
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4091
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4085, metadata !DIExpression()), !dbg !4090
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4092
  call void @llvm.dbg.value(metadata i32 %5, metadata !4086, metadata !DIExpression()), !dbg !4090
  %6 = ptrtoint i8* %1 to i32, !dbg !4093
  call void @llvm.dbg.value(metadata i32 %6, metadata !4087, metadata !DIExpression()), !dbg !4090
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4094
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4094
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4095
  call void @llvm.dbg.value(metadata i32 %9, metadata !4088, metadata !DIExpression()), !dbg !4090
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4096
  %11 = shl i32 %10, 3, !dbg !4097
  call void @llvm.dbg.value(metadata i32 %11, metadata !4089, metadata !DIExpression()), !dbg !4090
  %12 = sub i32 %9, %6, !dbg !4098
  %13 = add i32 %12, %11, !dbg !4099
  ret i32 %13, !dbg !4100
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4101 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4105, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i32 %1, metadata !4106, metadata !DIExpression()), !dbg !4111
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4112
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4112
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4107, metadata !DIExpression()), !dbg !4111
  %5 = icmp eq i32 %1, 0, !dbg !4113
  br i1 %5, label %19, label %6, !dbg !4115

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4116
  br i1 %7, label %19, label %8, !dbg !4117

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4118, !range !3734
  call void @llvm.dbg.value(metadata i32 %9, metadata !4109, metadata !DIExpression()), !dbg !4111
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4119
  call void @llvm.dbg.value(metadata i32 %10, metadata !4110, metadata !DIExpression()), !dbg !4111
  %11 = icmp eq i32 %10, 0, !dbg !4120
  br i1 %11, label %19, label %12, !dbg !4122

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4123
  %14 = icmp ugt i32 %13, %9, !dbg !4125
  br i1 %14, label %15, label %17, !dbg !4126

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4127
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4129
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4130
  br label %17, !dbg !4131

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4132
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4133
  call void @llvm.dbg.value(metadata i8* %18, metadata !4108, metadata !DIExpression()), !dbg !4111
  br label %19, !dbg !4134

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4111
  ret i8* %20, !dbg !4135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4136 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4140, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.value(metadata i32 %1, metadata !4141, metadata !DIExpression()), !dbg !4142
  %3 = lshr i32 %1, 3, !dbg !4143
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4144
  %5 = load i32, i32* %4, align 4, !dbg !4144
  %6 = icmp uge i32 %3, %5, !dbg !4145
  ret i1 %6, !dbg !4146
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4147 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4151, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata i32 %1, metadata !4152, metadata !DIExpression()), !dbg !4166
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4167
  call void @llvm.dbg.value(metadata i32 %3, metadata !4153, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4154, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4166
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4168
  %5 = load i32, i32* %4, align 4, !dbg !4168
  %6 = icmp eq i32 %5, 0, !dbg !4169
  br i1 %6, label %19, label %7, !dbg !4170

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4171
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4172
  call void @llvm.dbg.value(metadata i32 %9, metadata !4158, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i32 %8, metadata !4159, metadata !DIExpression()), !dbg !4173
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4174
  %11 = icmp ult i32 %10, %1, !dbg !4176
  br i1 %11, label %13, label %12, !dbg !4177

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4178
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4180
  store i32 %14, i32* %4, align 4, !dbg !4181
  %15 = add nsw i32 %9, -1, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %15, metadata !4158, metadata !DIExpression()), !dbg !4172
  %16 = icmp eq i32 %15, 0, !dbg !4182
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4183
  br i1 %18, label %19, label %7, !dbg !4183, !llvm.loop !4184

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4187
  %21 = load i32, i32* %20, align 4, !dbg !4187
  %22 = add nsw i32 %3, 1, !dbg !4188
  %23 = shl nsw i32 -1, %22, !dbg !4188
  %24 = and i32 %21, %23, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %24, metadata !4161, metadata !DIExpression()), !dbg !4166
  %25 = icmp eq i32 %24, 0, !dbg !4190
  br i1 %25, label %30, label %26, !dbg !4191

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4192, !range !3892
  call void @llvm.dbg.value(metadata i32 %27, metadata !4162, metadata !DIExpression()), !dbg !4193
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4194
  %29 = load i32, i32* %28, align 4, !dbg !4194
  call void @llvm.dbg.value(metadata i32 %29, metadata !4165, metadata !DIExpression()), !dbg !4193
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4195
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4166
  ret i32 %31, !dbg !4196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4197 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4199, metadata !DIExpression()), !dbg !4205
  call void @llvm.dbg.value(metadata i32 %1, metadata !4200, metadata !DIExpression()), !dbg !4205
  call void @llvm.dbg.value(metadata i32 %2, metadata !4201, metadata !DIExpression()), !dbg !4205
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %4, metadata !4202, metadata !DIExpression()), !dbg !4205
  %5 = sub i32 %2, %1, !dbg !4207
  call void @llvm.dbg.value(metadata i32 %5, metadata !4203, metadata !DIExpression()), !dbg !4205
  %6 = sub i32 %4, %5, !dbg !4208
  call void @llvm.dbg.value(metadata i32 %6, metadata !4204, metadata !DIExpression()), !dbg !4205
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4209
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4210
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4211
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4212
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4213
  ret void, !dbg !4214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4215 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4219, metadata !DIExpression()), !dbg !4223
  call void @llvm.dbg.value(metadata i32 %1, metadata !4220, metadata !DIExpression()), !dbg !4223
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4224
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4221, metadata !DIExpression()), !dbg !4223
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4225
  call void @llvm.dbg.value(metadata i8* %4, metadata !4222, metadata !DIExpression()), !dbg !4223
  ret i8* %4, !dbg !4226
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4227 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4231, metadata !DIExpression()), !dbg !4243
  call void @llvm.dbg.value(metadata i32 %1, metadata !4232, metadata !DIExpression()), !dbg !4243
  call void @llvm.dbg.value(metadata i32 %2, metadata !4233, metadata !DIExpression()), !dbg !4243
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4244
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4244
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4234, metadata !DIExpression()), !dbg !4243
  %6 = sub i32 0, %1, !dbg !4245
  %7 = and i32 %6, %1, !dbg !4246
  call void @llvm.dbg.value(metadata i32 %7, metadata !4236, metadata !DIExpression()), !dbg !4243
  %8 = icmp eq i32 %7, %1, !dbg !4247
  br i1 %8, label %13, label %9, !dbg !4249

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4250
  call void @llvm.dbg.value(metadata i32 %10, metadata !4232, metadata !DIExpression()), !dbg !4243
  %11 = icmp ult i32 %7, 4, !dbg !4252
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4252
  br label %17, !dbg !4252

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4253
  br i1 %14, label %15, label %17, !dbg !4256

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4257
  br label %57, !dbg !4259

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4243
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4260
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4232, metadata !DIExpression()), !dbg !4243
  call void @llvm.dbg.value(metadata i32 %19, metadata !4235, metadata !DIExpression()), !dbg !4243
  call void @llvm.dbg.value(metadata i32 %18, metadata !4236, metadata !DIExpression()), !dbg !4243
  %21 = icmp eq i32 %2, 0, !dbg !4261
  br i1 %21, label %57, label %22, !dbg !4263

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4264
  br i1 %23, label %57, label %24, !dbg !4265

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4266
  %26 = add i32 %25, %20, !dbg !4267
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4268, !range !3734
  call void @llvm.dbg.value(metadata i32 %27, metadata !4237, metadata !DIExpression()), !dbg !4243
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4269
  call void @llvm.dbg.value(metadata i32 %28, metadata !4238, metadata !DIExpression()), !dbg !4243
  %29 = icmp eq i32 %28, 0, !dbg !4270
  br i1 %29, label %57, label %30, !dbg !4272

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4273
  call void @llvm.dbg.value(metadata i8* %31, metadata !4239, metadata !DIExpression()), !dbg !4243
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4274
  %33 = ptrtoint i8* %32 to i32, !dbg !4274
  %34 = add i32 %20, -1, !dbg !4274
  %35 = add i32 %34, %33, !dbg !4274
  %36 = sub i32 0, %20, !dbg !4274
  %37 = and i32 %35, %36, !dbg !4274
  %38 = inttoptr i32 %37 to i8*, !dbg !4275
  %39 = sub i32 0, %18, !dbg !4276
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4276
  call void @llvm.dbg.value(metadata i8* %40, metadata !4239, metadata !DIExpression()), !dbg !4243
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4277
  %42 = ptrtoint i8* %41 to i32, !dbg !4277
  %43 = add i32 %42, 7, !dbg !4277
  %44 = and i32 %43, -8, !dbg !4277
  call void @llvm.dbg.value(metadata i32 %44, metadata !4240, metadata !DIExpression()), !dbg !4243
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4278
  call void @llvm.dbg.value(metadata i32 %45, metadata !4241, metadata !DIExpression()), !dbg !4243
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4279
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4280
  %48 = sub i32 %44, %47, !dbg !4280
  %49 = ashr exact i32 %48, 3, !dbg !4280
  call void @llvm.dbg.value(metadata i32 %49, metadata !4242, metadata !DIExpression()), !dbg !4243
  %50 = icmp ugt i32 %45, %28, !dbg !4281
  br i1 %50, label %51, label %52, !dbg !4283

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4284
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4286
  br label %52, !dbg !4287

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4288
  %54 = icmp ugt i32 %53, %49, !dbg !4290
  br i1 %54, label %55, label %56, !dbg !4291

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4292
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4294
  br label %56, !dbg !4295

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4296
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4243
  ret i8* %58, !dbg !4297
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4298 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4302, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata i8* %1, metadata !4303, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata i32 %2, metadata !4304, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata i32 %3, metadata !4305, metadata !DIExpression()), !dbg !4321
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4322
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4322
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4306, metadata !DIExpression()), !dbg !4321
  %7 = icmp eq i8* %1, null, !dbg !4323
  br i1 %7, label %8, label %10, !dbg !4325

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4326
  br label %59, !dbg !4328

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4329
  br i1 %11, label %12, label %13, !dbg !4331

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4332
  br label %59, !dbg !4334

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4335
  br i1 %14, label %59, label %15, !dbg !4337

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4338, !range !3734
  call void @llvm.dbg.value(metadata i32 %16, metadata !4307, metadata !DIExpression()), !dbg !4321
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4339
  call void @llvm.dbg.value(metadata i32 %17, metadata !4308, metadata !DIExpression()), !dbg !4321
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4340
  %19 = ptrtoint i8* %1 to i32, !dbg !4341
  %20 = ptrtoint i8* %18 to i32, !dbg !4341
  %21 = sub i32 %19, %20, !dbg !4341
  call void @llvm.dbg.value(metadata i32 %21, metadata !4309, metadata !DIExpression()), !dbg !4321
  %22 = add i32 %21, %3, !dbg !4342
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4343
  call void @llvm.dbg.value(metadata i32 %23, metadata !4310, metadata !DIExpression()), !dbg !4321
  %24 = icmp eq i32 %2, 0, !dbg !4344
  br i1 %24, label %29, label %25, !dbg !4345

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4346
  %27 = and i32 %26, %19, !dbg !4347
  %28 = icmp eq i32 %27, 0, !dbg !4347
  br i1 %28, label %29, label %49, !dbg !4348

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4349
  %31 = icmp eq i32 %23, %30, !dbg !4350
  br i1 %31, label %59, label %32, !dbg !4351

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4352
  br i1 %33, label %34, label %36, !dbg !4353

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4354
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4356
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4357
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4358
  br label %59, !dbg !4359

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4360
  br i1 %37, label %49, label %38, !dbg !4361

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4362
  %40 = add i32 %39, %30, !dbg !4363
  %41 = icmp ult i32 %40, %23, !dbg !4364
  br i1 %41, label %49, label %42, !dbg !4365

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4366
  call void @llvm.dbg.value(metadata i32 %43, metadata !4311, metadata !DIExpression()), !dbg !4367
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4368
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4369
  %45 = icmp ult i32 %43, %44, !dbg !4371
  br i1 %45, label %46, label %48, !dbg !4372

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4373
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4375
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4376
  br label %48, !dbg !4377

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4378
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4379
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4380
  call void @llvm.dbg.value(metadata i8* %50, metadata !4317, metadata !DIExpression()), !dbg !4321
  %51 = icmp eq i8* %50, null, !dbg !4381
  br i1 %51, label %59, label %52, !dbg !4382

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4383, !range !3827
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4384
  %55 = sub i32 %54, %21, !dbg !4385
  call void @llvm.dbg.value(metadata i32 %55, metadata !4318, metadata !DIExpression()), !dbg !4386
  %56 = icmp ult i32 %55, %3, !dbg !4387
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4387
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #25, !dbg !4388
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4389
  br label %59, !dbg !4390

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4321
  ret i8* %60, !dbg !4391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4392 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4396, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.value(metadata i32 %1, metadata !4397, metadata !DIExpression()), !dbg !4398
  %3 = shl i32 %1, 3, !dbg !4399
  %4 = add i32 %3, -4, !dbg !4400
  ret i32 %4, !dbg !4401
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4402 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4406, metadata !DIExpression()), !dbg !4417
  call void @llvm.dbg.value(metadata i8* %1, metadata !4407, metadata !DIExpression()), !dbg !4417
  call void @llvm.dbg.value(metadata i32 %2, metadata !4408, metadata !DIExpression()), !dbg !4417
  %4 = add i32 %2, -4, !dbg !4418
  call void @llvm.dbg.value(metadata i32 %4, metadata !4408, metadata !DIExpression()), !dbg !4417
  %5 = ptrtoint i8* %1 to i32, !dbg !4419
  %6 = add i32 %5, 7, !dbg !4419
  %7 = and i32 %6, -8, !dbg !4419
  call void @llvm.dbg.value(metadata i32 %7, metadata !4409, metadata !DIExpression()), !dbg !4417
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4420
  %9 = ptrtoint i8* %8 to i32, !dbg !4420
  %10 = and i32 %9, -8, !dbg !4420
  call void @llvm.dbg.value(metadata i32 %10, metadata !4410, metadata !DIExpression()), !dbg !4417
  %11 = sub i32 %10, %7, !dbg !4421
  %12 = lshr exact i32 %11, 3, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %12, metadata !4411, metadata !DIExpression()), !dbg !4417
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4423
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4412, metadata !DIExpression()), !dbg !4417
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4424
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4425
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4426
  store i32 %12, i32* %15, align 8, !dbg !4427
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4428
  store i32 0, i32* %16, align 4, !dbg !4429
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4430
  call void @llvm.dbg.value(metadata i32 %17, metadata !4413, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4417
  %18 = shl i32 %17, 2, !dbg !4431
  %19 = add i32 %18, 20, !dbg !4432
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4433
  call void @llvm.dbg.value(metadata i32 %20, metadata !4414, metadata !DIExpression()), !dbg !4417
  call void @llvm.dbg.value(metadata i32 0, metadata !4415, metadata !DIExpression()), !dbg !4434
  %21 = icmp slt i32 %17, 0, !dbg !4435
  br i1 %21, label %22, label %24, !dbg !4437

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4438
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4439
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4440
  %23 = sub i32 %12, %20, !dbg !4441
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4442
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4443
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4444
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4445
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4446
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4447
  ret void, !dbg !4448

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4415, metadata !DIExpression()), !dbg !4434
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4449
  store i32 0, i32* %26, align 4, !dbg !4451
  %27 = add nuw i32 %25, 1, !dbg !4452
  call void @llvm.dbg.value(metadata i32 %27, metadata !4415, metadata !DIExpression()), !dbg !4434
  %28 = icmp eq i32 %25, %17, !dbg !4435
  br i1 %28, label %22, label %24, !dbg !4437, !llvm.loop !4453
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4455 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4468, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4465, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i8* %1, metadata !4466, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i8* %2, metadata !4467, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %4, metadata !4469, metadata !DIExpression()), !dbg !4596
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4597
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4597
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4470, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 0, metadata !4474, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i1 undef, metadata !4476, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4596
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4599

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4599

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4600
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4468, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i8* %30, metadata !4467, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %29, metadata !4474, metadata !DIExpression()), !dbg !4596
  %31 = load i8, i8* %30, align 1, !dbg !4601
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4599

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4601
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4602
  call void @llvm.dbg.value(metadata i8* %34, metadata !4467, metadata !DIExpression()), !dbg !4596
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4602
  call void @llvm.dbg.value(metadata i32 %35, metadata !4478, metadata !DIExpression()), !dbg !4603
  %36 = icmp slt i32 %35, 0, !dbg !4604
  %37 = add i32 %29, 1, !dbg !4602
  call void @llvm.dbg.value(metadata i32 undef, metadata !4474, metadata !DIExpression()), !dbg !4596
  br i1 %36, label %365, label %28, !llvm.loop !4606

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4608
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4483, metadata !DIExpression()), !dbg !4609
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4609
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4528, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4531, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i8* %30, metadata !4534, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i32 -1, metadata !4535, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i32 -1, metadata !4536, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i8* null, metadata !4537, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i8* %14, metadata !4538, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i8 0, metadata !4539, metadata !DIExpression()), !dbg !4610
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4611
  call void @llvm.dbg.value(metadata i8* %39, metadata !4467, metadata !DIExpression()), !dbg !4596
  %40 = load i24, i24* %15, align 8, !dbg !4612
  %41 = and i24 %40, 256, !dbg !4612
  %42 = icmp eq i24 %41, 0, !dbg !4612
  br i1 %42, label %51, label %43, !dbg !4614

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4615
  call void @llvm.dbg.value(metadata i8* %44, metadata !4468, metadata !DIExpression()), !dbg !4596
  %45 = bitcast i8* %27 to i32*, !dbg !4615
  %46 = load i32, i32* %45, align 4, !dbg !4615
  call void @llvm.dbg.value(metadata i32 %46, metadata !4535, metadata !DIExpression()), !dbg !4610
  %47 = icmp slt i32 %46, 0, !dbg !4617
  br i1 %47, label %48, label %56, !dbg !4619

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4620
  store i24 %49, i24* %15, align 8, !dbg !4620
  %50 = sub nsw i32 0, %46, !dbg !4622
  call void @llvm.dbg.value(metadata i32 %50, metadata !4535, metadata !DIExpression()), !dbg !4610
  br label %56, !dbg !4623

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4624
  %53 = icmp eq i24 %52, 0, !dbg !4624
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4626
  br label %56, !dbg !4626

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4627
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4610
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4468, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %58, metadata !4535, metadata !DIExpression()), !dbg !4610
  %60 = and i24 %57, 1024, !dbg !4627
  %61 = icmp eq i24 %60, 0, !dbg !4627
  br i1 %61, label %69, label %62, !dbg !4628

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4629
  call void @llvm.dbg.value(metadata i8* %63, metadata !4468, metadata !DIExpression()), !dbg !4596
  %64 = bitcast i8* %59 to i32*, !dbg !4629
  %65 = load i32, i32* %64, align 4, !dbg !4629
  call void @llvm.dbg.value(metadata i32 %65, metadata !4540, metadata !DIExpression()), !dbg !4630
  %66 = icmp slt i32 %65, 0, !dbg !4631
  br i1 %66, label %67, label %74, !dbg !4633

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4634
  store i24 %68, i24* %15, align 8, !dbg !4634
  br label %74, !dbg !4636

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4637
  %71 = icmp eq i24 %70, 0, !dbg !4637
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4639
  br label %74, !dbg !4639

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4640
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4610
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4610
  call void @llvm.dbg.value(metadata i8* %77, metadata !4468, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %76, metadata !4536, metadata !DIExpression()), !dbg !4610
  store i32 0, i32* %16, align 4, !dbg !4641
  store i32 0, i32* %17, align 8, !dbg !4642
  %78 = lshr i24 %75, 16, !dbg !4640
  call void @llvm.dbg.value(metadata i24 %78, metadata !4543, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4610
  %79 = lshr i24 %75, 11, !dbg !4643
  %80 = and i24 %79, 15, !dbg !4643
  %81 = zext i24 %80 to i32, !dbg !4643
  call void @llvm.dbg.value(metadata i32 %81, metadata !4544, metadata !DIExpression()), !dbg !4610
  %82 = trunc i24 %78 to i3, !dbg !4644
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4644

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4645

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4648
  call void @llvm.dbg.value(metadata i8* %85, metadata !4468, metadata !DIExpression()), !dbg !4596
  %86 = bitcast i8* %77 to i32*, !dbg !4648
  %87 = load i32, i32* %86, align 4, !dbg !4648
  %88 = sext i32 %87 to i64, !dbg !4648
  store i64 %88, i64* %20, align 8, !dbg !4650
  br label %115, !dbg !4651

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4652
  call void @llvm.dbg.value(metadata i8* %90, metadata !4468, metadata !DIExpression()), !dbg !4596
  %91 = bitcast i8* %77 to i32*, !dbg !4652
  %92 = load i32, i32* %91, align 4, !dbg !4652
  %93 = sext i32 %92 to i64, !dbg !4652
  store i64 %93, i64* %20, align 8, !dbg !4655
  br label %115, !dbg !4656

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4657
  %96 = add i32 %95, 7, !dbg !4657
  %97 = and i32 %96, -8, !dbg !4657
  %98 = inttoptr i32 %97 to i8*, !dbg !4657
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4657
  call void @llvm.dbg.value(metadata i8* %99, metadata !4468, metadata !DIExpression()), !dbg !4596
  %100 = inttoptr i32 %97 to i64*, !dbg !4657
  %101 = load i64, i64* %100, align 8, !dbg !4657
  store i64 %101, i64* %20, align 8, !dbg !4658
  br label %115, !dbg !4659

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4660
  %104 = add i32 %103, 7, !dbg !4660
  %105 = and i32 %104, -8, !dbg !4660
  %106 = inttoptr i32 %105 to i8*, !dbg !4660
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4660
  call void @llvm.dbg.value(metadata i8* %107, metadata !4468, metadata !DIExpression()), !dbg !4596
  %108 = inttoptr i32 %105 to i64*, !dbg !4660
  %109 = load i64, i64* %108, align 8, !dbg !4660
  store i64 %109, i64* %20, align 8, !dbg !4661
  br label %115, !dbg !4662

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4663
  call void @llvm.dbg.value(metadata i8* %111, metadata !4468, metadata !DIExpression()), !dbg !4596
  %112 = bitcast i8* %77 to i32*, !dbg !4663
  %113 = load i32, i32* %112, align 4, !dbg !4663
  %114 = sext i32 %113 to i64, !dbg !4664
  store i64 %114, i64* %20, align 8, !dbg !4665
  br label %115, !dbg !4666

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4667
  call void @llvm.dbg.value(metadata i8* %117, metadata !4468, metadata !DIExpression()), !dbg !4596
  %118 = trunc i24 %79 to i4, !dbg !4668
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4668

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4669
  %121 = ashr exact i64 %120, 56, !dbg !4669
  store i64 %121, i64* %20, align 8, !dbg !4672
  br label %177, !dbg !4673

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4674
  %124 = ashr exact i64 %123, 48, !dbg !4674
  store i64 %124, i64* %20, align 8, !dbg !4677
  br label %177, !dbg !4678

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4679

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4682
  call void @llvm.dbg.value(metadata i8* %127, metadata !4468, metadata !DIExpression()), !dbg !4596
  %128 = bitcast i8* %77 to i32*, !dbg !4682
  %129 = load i32, i32* %128, align 4, !dbg !4682
  %130 = zext i32 %129 to i64, !dbg !4682
  store i64 %130, i64* %20, align 8, !dbg !4684
  br label %157, !dbg !4685

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4686
  call void @llvm.dbg.value(metadata i8* %132, metadata !4468, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i8* %132, metadata !4468, metadata !DIExpression()), !dbg !4596
  %133 = bitcast i8* %77 to i32*, !dbg !4686
  %134 = load i32, i32* %133, align 4, !dbg !4686
  %135 = zext i32 %134 to i64, !dbg !4686
  store i64 %135, i64* %20, align 8, !dbg !4686
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4688
  %138 = add i32 %137, 7, !dbg !4688
  %139 = and i32 %138, -8, !dbg !4688
  %140 = inttoptr i32 %139 to i8*, !dbg !4688
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4688
  call void @llvm.dbg.value(metadata i8* %141, metadata !4468, metadata !DIExpression()), !dbg !4596
  %142 = inttoptr i32 %139 to i64*, !dbg !4688
  %143 = load i64, i64* %142, align 8, !dbg !4688
  store i64 %143, i64* %20, align 8, !dbg !4689
  br label %157, !dbg !4690

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4691
  %146 = add i32 %145, 7, !dbg !4691
  %147 = and i32 %146, -8, !dbg !4691
  %148 = inttoptr i32 %147 to i8*, !dbg !4691
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4691
  call void @llvm.dbg.value(metadata i8* %149, metadata !4468, metadata !DIExpression()), !dbg !4596
  %150 = inttoptr i32 %147 to i64*, !dbg !4691
  %151 = load i64, i64* %150, align 8, !dbg !4691
  store i64 %151, i64* %20, align 8, !dbg !4692
  br label %157, !dbg !4693

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4694
  call void @llvm.dbg.value(metadata i8* %153, metadata !4468, metadata !DIExpression()), !dbg !4596
  %154 = bitcast i8* %77 to i32*, !dbg !4694
  %155 = load i32, i32* %154, align 4, !dbg !4694
  %156 = zext i32 %155 to i64, !dbg !4695
  store i64 %156, i64* %20, align 8, !dbg !4696
  br label %157, !dbg !4697

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4698
  call void @llvm.dbg.value(metadata i8* %159, metadata !4468, metadata !DIExpression()), !dbg !4596
  %160 = trunc i24 %79 to i4, !dbg !4699
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4699

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4700
  store i64 %162, i64* %20, align 8, !dbg !4703
  br label %177, !dbg !4704

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4705
  store i64 %164, i64* %20, align 8, !dbg !4708
  br label %177, !dbg !4709

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4710
  %167 = add i32 %166, 7, !dbg !4710
  %168 = and i32 %167, -8, !dbg !4710
  %169 = inttoptr i32 %168 to i8*, !dbg !4710
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4710
  call void @llvm.dbg.value(metadata i8* %170, metadata !4468, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i8* %170, metadata !4468, metadata !DIExpression()), !dbg !4596
  %171 = inttoptr i32 %168 to double*, !dbg !4710
  %172 = load double, double* %171, align 8, !dbg !4710
  store double %172, double* %19, align 8, !dbg !4710
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4714
  call void @llvm.dbg.value(metadata i8* %174, metadata !4468, metadata !DIExpression()), !dbg !4596
  %175 = bitcast i8* %77 to i8**, !dbg !4714
  %176 = load i8*, i8** %175, align 4, !dbg !4714
  store i8* %176, i8** %18, align 8, !dbg !4717
  br label %177, !dbg !4718

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4610
  call void @llvm.dbg.value(metadata i8* %178, metadata !4468, metadata !DIExpression()), !dbg !4596
  %179 = and i24 %75, 3, !dbg !4719
  %180 = icmp eq i24 %179, 0, !dbg !4719
  br i1 %180, label %185, label %181, !dbg !4719

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4720
  call void @llvm.dbg.value(metadata i32 %182, metadata !4545, metadata !DIExpression()), !dbg !4721
  %183 = icmp slt i32 %182, 0, !dbg !4722
  %184 = add i32 %182, %29, !dbg !4720
  call void @llvm.dbg.value(metadata i32 undef, metadata !4474, metadata !DIExpression()), !dbg !4596
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4724
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4725

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4726
  call void @llvm.dbg.value(metadata i32 %188, metadata !4549, metadata !DIExpression()), !dbg !4727
  %189 = icmp slt i32 %188, 0, !dbg !4728
  %190 = add i32 %29, 1, !dbg !4726
  call void @llvm.dbg.value(metadata i32 undef, metadata !4474, metadata !DIExpression()), !dbg !4596
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4730
  call void @llvm.dbg.value(metadata i8* %192, metadata !4537, metadata !DIExpression()), !dbg !4610
  %193 = icmp sgt i32 %76, -1, !dbg !4731
  br i1 %193, label %194, label %196, !dbg !4733

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4734
  call void @llvm.dbg.value(metadata i32 %195, metadata !4552, metadata !DIExpression()), !dbg !4736
  br label %241, !dbg !4737

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4738
  call void @llvm.dbg.value(metadata i32 %197, metadata !4552, metadata !DIExpression()), !dbg !4736
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4537, metadata !DIExpression()), !dbg !4610
  %199 = load i64, i64* %20, align 8, !dbg !4740
  %200 = trunc i64 %199 to i8, !dbg !4741
  store i8 %200, i8* %10, align 1, !dbg !4742
  call void @llvm.dbg.value(metadata i8* %23, metadata !4538, metadata !DIExpression()), !dbg !4610
  br label %245, !dbg !4743

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4744
  %203 = icmp eq i24 %202, 0, !dbg !4744
  %204 = trunc i24 %75 to i8, !dbg !4746
  %205 = shl i8 %204, 1, !dbg !4746
  %206 = and i8 %205, 32, !dbg !4746
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4746
  call void @llvm.dbg.value(metadata i8 %207, metadata !4539, metadata !DIExpression()), !dbg !4610
  %208 = load i64, i64* %20, align 8, !dbg !4747
  call void @llvm.dbg.value(metadata i64 %208, metadata !4475, metadata !DIExpression()), !dbg !4596
  %209 = icmp slt i64 %208, 0, !dbg !4748
  br i1 %209, label %210, label %212, !dbg !4750

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4539, metadata !DIExpression()), !dbg !4610
  %211 = sub nsw i64 0, %208, !dbg !4751
  store i64 %211, i64* %20, align 8, !dbg !4753
  br label %212, !dbg !4754

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4610
  call void @llvm.dbg.value(metadata i8 %213, metadata !4539, metadata !DIExpression()), !dbg !4610
  %214 = load i64, i64* %20, align 8, !dbg !4755
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4756
  call void @llvm.dbg.value(metadata i8* %215, metadata !4537, metadata !DIExpression()), !dbg !4610
  br label %216, !dbg !4757

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4758
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4759
  call void @llvm.dbg.value(metadata i8* %218, metadata !4537, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i8 %217, metadata !4539, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.label(metadata !4595), !dbg !4760
  %219 = icmp sgt i32 %76, -1, !dbg !4761
  br i1 %219, label %222, label %220, !dbg !4762

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4763
  br label %245, !dbg !4762

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4765
  %224 = sub i32 %22, %223, !dbg !4765
  call void @llvm.dbg.value(metadata i32 %224, metadata !4554, metadata !DIExpression()), !dbg !4766
  %225 = load i24, i24* %15, align 8, !dbg !4767
  %226 = and i24 %225, -65, !dbg !4767
  store i24 %226, i24* %15, align 8, !dbg !4767
  %227 = icmp ugt i32 %76, %224, !dbg !4768
  br i1 %227, label %228, label %245, !dbg !4770

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4771
  store i32 %229, i32* %16, align 4, !dbg !4773
  br label %245, !dbg !4774

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4775
  %232 = icmp eq i8* %231, null, !dbg !4777
  br i1 %232, label %245, label %233, !dbg !4778

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4779
  %235 = zext i32 %234 to i64, !dbg !4779
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4781
  call void @llvm.dbg.value(metadata i8* %236, metadata !4537, metadata !DIExpression()), !dbg !4610
  %237 = load i24, i24* %15, align 8, !dbg !4782
  %238 = or i24 %237, 1048576, !dbg !4782
  store i24 %238, i24* %15, align 8, !dbg !4782
  store i8 120, i8* %21, align 1, !dbg !4783
  br label %216, !dbg !4784

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4785
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4788
  br label %363, !dbg !4789

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4790
  call void @llvm.dbg.value(metadata i32 %242, metadata !4552, metadata !DIExpression()), !dbg !4736
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4791
  call void @llvm.dbg.value(metadata i32 -1, metadata !4536, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i32 %29, metadata !4474, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i8* %192, metadata !4537, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i8* %243, metadata !4538, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i8 0, metadata !4539, metadata !DIExpression()), !dbg !4610
  %244 = icmp eq i8* %192, null, !dbg !4792
  br i1 %244, label %363, label %245, !dbg !4794, !llvm.loop !4606

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4763
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4557, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4610
  call void @llvm.dbg.value(metadata i32 0, metadata !4558, metadata !DIExpression()), !dbg !4610
  %250 = zext i8 %249 to i32, !dbg !4795
  %251 = icmp eq i8 %249, 0, !dbg !4797
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4557, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4610
  call void @llvm.dbg.value(metadata i32 undef, metadata !4557, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4557, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4610
  call void @llvm.dbg.value(metadata i32 undef, metadata !4557, metadata !DIExpression()), !dbg !4610
  %252 = icmp sgt i32 %58, 0, !dbg !4798
  br i1 %252, label %253, label %302, !dbg !4799

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4763
  %255 = icmp eq i24 %254, 0, !dbg !4763
  %256 = ptrtoint i8* %248 to i32, !dbg !4800
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4557, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4610
  %257 = ptrtoint i8* %247 to i32, !dbg !4800
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4557, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4610
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4557, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4610
  %258 = xor i1 %251, true, !dbg !4801
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4557, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4610
  %259 = sext i1 %258 to i32, !dbg !4801
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4557, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4610
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4557, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4610
  %260 = lshr i24 %246, 19, !dbg !4802
  %261 = and i24 %260, 1, !dbg !4802
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4802
  %263 = zext i24 %262 to i32, !dbg !4802
  %264 = add i32 %257, %259, !dbg !4802
  %265 = add i32 %256, %263, !dbg !4802
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4557, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4610
  %266 = and i24 %246, 4194304, !dbg !4803
  %267 = icmp eq i24 %266, 0, !dbg !4803
  %268 = load i32, i32* %16, align 4, !dbg !4805
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4557, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4610
  call void @llvm.dbg.value(metadata i32 undef, metadata !4557, metadata !DIExpression()), !dbg !4610
  %269 = load i32, i32* %17, align 8, !dbg !4806
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4806
  call void @llvm.dbg.value(metadata i32 undef, metadata !4557, metadata !DIExpression()), !dbg !4610
  %271 = add i32 %264, %58, !dbg !4806
  %272 = add i32 %265, %268, !dbg !4806
  %273 = add i32 %272, %270, !dbg !4807
  %274 = sub i32 %271, %273, !dbg !4807
  call void @llvm.dbg.value(metadata i32 %274, metadata !4535, metadata !DIExpression()), !dbg !4610
  %275 = and i24 %246, 4, !dbg !4808
  %276 = icmp eq i24 %275, 0, !dbg !4808
  br i1 %276, label %277, label %302, !dbg !4809

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4559, metadata !DIExpression()), !dbg !4810
  %278 = and i24 %246, 64, !dbg !4811
  %279 = icmp eq i24 %278, 0, !dbg !4811
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4812
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4812
  %282 = select i1 %279, i32 32, i32 48, !dbg !4812
  br i1 %280, label %287, label %283, !dbg !4812

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4813
  call void @llvm.dbg.value(metadata i32 %284, metadata !4564, metadata !DIExpression()), !dbg !4814
  %285 = icmp slt i32 %284, 0, !dbg !4815
  %286 = add i32 %29, 1, !dbg !4813
  call void @llvm.dbg.value(metadata i32 undef, metadata !4474, metadata !DIExpression()), !dbg !4596
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4610
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4600
  call void @llvm.dbg.value(metadata i32 %290, metadata !4474, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i8 undef, metadata !4559, metadata !DIExpression()), !dbg !4810
  call void @llvm.dbg.value(metadata i8 %288, metadata !4539, metadata !DIExpression()), !dbg !4610
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4817
  %292 = add i32 %291, -1, !dbg !4817
  br label %293, !dbg !4817

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4818
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4600
  call void @llvm.dbg.value(metadata i32 %295, metadata !4474, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %294, metadata !4535, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i32 %294, metadata !4535, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4610
  %296 = icmp sgt i32 %294, 0, !dbg !4819
  br i1 %296, label %297, label %302, !dbg !4817

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4820
  call void @llvm.dbg.value(metadata i32 %298, metadata !4535, metadata !DIExpression()), !dbg !4610
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4821
  call void @llvm.dbg.value(metadata i32 %299, metadata !4570, metadata !DIExpression()), !dbg !4822
  %300 = icmp slt i32 %299, 0, !dbg !4823
  %301 = add i32 %295, 1, !dbg !4821
  call void @llvm.dbg.value(metadata i32 undef, metadata !4474, metadata !DIExpression()), !dbg !4596
  br i1 %300, label %361, label %293, !llvm.loop !4825

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4610
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4610
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4600
  call void @llvm.dbg.value(metadata i32 %305, metadata !4474, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %304, metadata !4535, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i8 %303, metadata !4539, metadata !DIExpression()), !dbg !4610
  %306 = icmp eq i8 %303, 0, !dbg !4827
  br i1 %306, label %312, label %307, !dbg !4828

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4829
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4830
  call void @llvm.dbg.value(metadata i32 %309, metadata !4573, metadata !DIExpression()), !dbg !4831
  %310 = icmp slt i32 %309, 0, !dbg !4832
  %311 = add i32 %305, 1, !dbg !4830
  call void @llvm.dbg.value(metadata i32 undef, metadata !4474, metadata !DIExpression()), !dbg !4596
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4600
  call void @llvm.dbg.value(metadata i32 %313, metadata !4474, metadata !DIExpression()), !dbg !4596
  %314 = lshr i24 %246, 20, !dbg !4834
  %315 = lshr i24 %246, 19, !dbg !4835
  %316 = or i24 %314, %315, !dbg !4836
  %317 = and i24 %316, 1, !dbg !4836
  %318 = icmp eq i24 %317, 0, !dbg !4836
  br i1 %318, label %323, label %319, !dbg !4837

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4838
  call void @llvm.dbg.value(metadata i32 %320, metadata !4577, metadata !DIExpression()), !dbg !4839
  %321 = icmp slt i32 %320, 0, !dbg !4840
  %322 = add i32 %313, 1, !dbg !4838
  call void @llvm.dbg.value(metadata i32 undef, metadata !4474, metadata !DIExpression()), !dbg !4596
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4600
  call void @llvm.dbg.value(metadata i32 %324, metadata !4474, metadata !DIExpression()), !dbg !4596
  %325 = and i24 %246, 1048576, !dbg !4842
  %326 = icmp eq i24 %325, 0, !dbg !4842
  br i1 %326, label %333, label %327, !dbg !4843

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4844
  %329 = zext i8 %328 to i32, !dbg !4844
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4844
  call void @llvm.dbg.value(metadata i32 %330, metadata !4583, metadata !DIExpression()), !dbg !4845
  %331 = icmp slt i32 %330, 0, !dbg !4846
  %332 = add i32 %324, 1, !dbg !4844
  call void @llvm.dbg.value(metadata i32 undef, metadata !4474, metadata !DIExpression()), !dbg !4596
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4600
  call void @llvm.dbg.value(metadata i32 %334, metadata !4474, metadata !DIExpression()), !dbg !4596
  %335 = load i32, i32* %16, align 4, !dbg !4848
  call void @llvm.dbg.value(metadata i32 %335, metadata !4558, metadata !DIExpression()), !dbg !4610
  br label %336, !dbg !4849

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4850
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4600
  call void @llvm.dbg.value(metadata i32 %338, metadata !4474, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %337, metadata !4558, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4610
  %339 = icmp sgt i32 %337, 0, !dbg !4851
  br i1 %339, label %340, label %345, !dbg !4849

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4852
  call void @llvm.dbg.value(metadata i32 %341, metadata !4558, metadata !DIExpression()), !dbg !4610
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4853
  call void @llvm.dbg.value(metadata i32 %342, metadata !4587, metadata !DIExpression()), !dbg !4854
  %343 = icmp slt i32 %342, 0, !dbg !4855
  %344 = add i32 %338, 1, !dbg !4853
  call void @llvm.dbg.value(metadata i32 undef, metadata !4474, metadata !DIExpression()), !dbg !4596
  br i1 %343, label %361, label %336, !llvm.loop !4857

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %346, metadata !4590, metadata !DIExpression()), !dbg !4860
  %347 = icmp slt i32 %346, 0, !dbg !4861
  call void @llvm.dbg.value(metadata i32 undef, metadata !4474, metadata !DIExpression()), !dbg !4596
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %349, metadata !4474, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %304, metadata !4535, metadata !DIExpression()), !dbg !4610
  %350 = icmp sgt i32 %304, 0, !dbg !4863
  br i1 %350, label %351, label %363, !dbg !4864

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4864
  %353 = add i32 %352, %338, !dbg !4864
  br label %354, !dbg !4864

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4474, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %355, metadata !4535, metadata !DIExpression()), !dbg !4610
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4865
  call void @llvm.dbg.value(metadata i32 %356, metadata !4592, metadata !DIExpression()), !dbg !4866
  %357 = icmp slt i32 %356, 0, !dbg !4867
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4869
  call void @llvm.dbg.value(metadata i32 undef, metadata !4474, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %359, metadata !4535, metadata !DIExpression()), !dbg !4610
  %360 = icmp sgt i32 %355, 1, !dbg !4863
  br i1 %360, label %354, label %363, !dbg !4864, !llvm.loop !4870

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4474, metadata !DIExpression()), !dbg !4596
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4607
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4600
  call void @llvm.dbg.value(metadata i32 %364, metadata !4474, metadata !DIExpression()), !dbg !4596
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4607
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4596
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4872
  ret i32 %366, !dbg !4872
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4873 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4877, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.value(metadata i8* %1, metadata !4878, metadata !DIExpression()), !dbg !4879
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4880
  store i24 0, i24* %3, align 4, !dbg !4880
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4880
  store i8 0, i8* %4, align 1, !dbg !4880
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4880
  store i32 0, i32* %5, align 4, !dbg !4880
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4880
  store i32 0, i32* %6, align 4, !dbg !4880
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4881
  call void @llvm.dbg.value(metadata i8* %7, metadata !4878, metadata !DIExpression()), !dbg !4879
  %8 = load i8, i8* %7, align 1, !dbg !4882
  %9 = icmp eq i8 %8, 37, !dbg !4884
  br i1 %9, label %10, label %12, !dbg !4885

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4886
  call void @llvm.dbg.value(metadata i8* %11, metadata !4878, metadata !DIExpression()), !dbg !4879
  store i8 37, i8* %4, align 1, !dbg !4888
  br label %18, !dbg !4889

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4890
  call void @llvm.dbg.value(metadata i8* %13, metadata !4878, metadata !DIExpression()), !dbg !4879
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4891
  call void @llvm.dbg.value(metadata i8* %14, metadata !4878, metadata !DIExpression()), !dbg !4879
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4892
  call void @llvm.dbg.value(metadata i8* %15, metadata !4878, metadata !DIExpression()), !dbg !4879
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4893
  call void @llvm.dbg.value(metadata i8* %16, metadata !4878, metadata !DIExpression()), !dbg !4879
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4894
  call void @llvm.dbg.value(metadata i8* %17, metadata !4878, metadata !DIExpression()), !dbg !4879
  br label %18, !dbg !4895

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4879
  ret i8* %19, !dbg !4896
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4897 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4901, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i8* %1, metadata !4902, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i8* %2, metadata !4903, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i8* %3, metadata !4904, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i32 0, metadata !4905, metadata !DIExpression()), !dbg !4908
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4909

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4910
  call void @llvm.dbg.value(metadata i32 %9, metadata !4905, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i8* %8, metadata !4903, metadata !DIExpression()), !dbg !4908
  %10 = icmp ult i8* %8, %3, !dbg !4911
  br i1 %10, label %11, label %13, !dbg !4912

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4913
  br label %17, !dbg !4912

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4914

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4915
  %16 = icmp eq i8 %15, 0, !dbg !4914
  br i1 %16, label %24, label %17, !dbg !4909

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4913
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4916
  call void @llvm.dbg.value(metadata i8* %19, metadata !4903, metadata !DIExpression()), !dbg !4908
  %20 = zext i8 %18 to i32, !dbg !4917
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4918
  call void @llvm.dbg.value(metadata i32 %21, metadata !4906, metadata !DIExpression()), !dbg !4919
  %22 = icmp slt i32 %21, 0, !dbg !4920
  %23 = add i32 %9, 1, !dbg !4922
  call void @llvm.dbg.value(metadata i32 undef, metadata !4905, metadata !DIExpression()), !dbg !4908
  br i1 %22, label %24, label %7, !llvm.loop !4923

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4908
  ret i32 %25, !dbg !4925
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4926 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4930, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4931, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.value(metadata i8* %2, metadata !4932, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.value(metadata i8* %3, metadata !4933, metadata !DIExpression()), !dbg !4940
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4941
  %6 = load i8, i8* %5, align 1, !dbg !4941
  %7 = zext i8 %6 to i32, !dbg !4942
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !4943
  %9 = icmp eq i32 %8, 0, !dbg !4943
  call void @llvm.dbg.value(metadata i1 %9, metadata !4934, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4940
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !4944
  call void @llvm.dbg.value(metadata i32 %10, metadata !4935, metadata !DIExpression()), !dbg !4940
  %11 = ptrtoint i8* %3 to i32, !dbg !4945
  %12 = ptrtoint i8* %2 to i32, !dbg !4945
  %13 = sub i32 %11, %12, !dbg !4945
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4946
  call void @llvm.dbg.value(metadata i8* %14, metadata !4937, metadata !DIExpression()), !dbg !4940
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4947

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4940
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4930, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.value(metadata i8* %18, metadata !4937, metadata !DIExpression()), !dbg !4940
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4948
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4949
  call void @llvm.dbg.value(metadata i32 %25, metadata !4938, metadata !DIExpression()), !dbg !4950
  %26 = icmp ult i32 %25, 10, !dbg !4951
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4952
  %28 = add i32 %27, %25, !dbg !4950
  %29 = trunc i32 %28 to i8, !dbg !4952
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4953
  call void @llvm.dbg.value(metadata i8* %30, metadata !4937, metadata !DIExpression()), !dbg !4940
  store i8 %29, i8* %30, align 1, !dbg !4954
  call void @llvm.dbg.value(metadata i64 %22, metadata !4930, metadata !DIExpression()), !dbg !4940
  %31 = icmp uge i64 %19, %15, !dbg !4955
  %32 = icmp ugt i8* %30, %2, !dbg !4956
  %33 = and i1 %31, %32, !dbg !4956
  br i1 %33, label %17, label %34, !dbg !4957, !llvm.loop !4958

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4960
  %36 = load i24, i24* %35, align 4, !dbg !4960
  %37 = and i24 %36, 32, !dbg !4960
  %38 = icmp eq i24 %37, 0, !dbg !4960
  br i1 %38, label %44, label %39, !dbg !4962

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4963

40:                                               ; preds = %39
  br label %41, !dbg !4965

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4969
  store i24 %43, i24* %35, align 4, !dbg !4969
  br label %44, !dbg !4970

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4970
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4971 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4977, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %1, metadata !4978, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i32 %2, metadata !4979, metadata !DIExpression()), !dbg !4980
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4981
  %5 = load i24, i24* %4, align 4, !dbg !4981
  %6 = lshr i24 %5, 11, !dbg !4981
  %7 = and i24 %6, 15, !dbg !4981
  %8 = zext i24 %7 to i32, !dbg !4981
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4982

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4983
  store i32 %2, i32* %10, align 4, !dbg !4985
  br label %28, !dbg !4986

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4987
  store i8 %12, i8* %1, align 1, !dbg !4988
  br label %28, !dbg !4989

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4990
  %15 = bitcast i8* %1 to i16*, !dbg !4991
  store i16 %14, i16* %15, align 2, !dbg !4992
  br label %28, !dbg !4993

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4994
  store i32 %2, i32* %17, align 4, !dbg !4995
  br label %28, !dbg !4996

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4997
  %20 = bitcast i8* %1 to i64*, !dbg !4998
  store i64 %19, i64* %20, align 8, !dbg !4999
  br label %28, !dbg !5000

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5001
  %23 = bitcast i8* %1 to i64*, !dbg !5002
  store i64 %22, i64* %23, align 8, !dbg !5003
  br label %28, !dbg !5004

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5005
  store i32 %2, i32* %25, align 4, !dbg !5006
  br label %28, !dbg !5007

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5008
  store i32 %2, i32* %27, align 4, !dbg !5009
  br label %28, !dbg !5010

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5011
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5012 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5015, metadata !DIExpression()), !dbg !5016
  %2 = add i32 %0, -65, !dbg !5017
  %3 = icmp ult i32 %2, 26, !dbg !5018
  %4 = zext i1 %3 to i32, !dbg !5018
  ret i32 %4, !dbg !5019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5020 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5024, metadata !DIExpression()), !dbg !5025
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5026

2:                                                ; preds = %1
  br label %4, !dbg !5027

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5029

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5030
  ret i32 %5, !dbg !5031
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5032 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5034, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8* %1, metadata !5035, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8 1, metadata !5036, metadata !DIExpression()), !dbg !5037
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5038

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5036, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8* %5, metadata !5035, metadata !DIExpression()), !dbg !5037
  %6 = load i8, i8* %5, align 1, !dbg !5039
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5041

7:                                                ; preds = %4
  br label %11, !dbg !5042

8:                                                ; preds = %4
  br label %11, !dbg !5044

9:                                                ; preds = %4
  br label %11, !dbg !5045

10:                                               ; preds = %4
  br label %11, !dbg !5046

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5047
  %14 = or i24 %13, %12, !dbg !5047
  store i24 %14, i24* %3, align 4, !dbg !5047
  call void @llvm.dbg.value(metadata i8 poison, metadata !5036, metadata !DIExpression()), !dbg !5037
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5035, metadata !DIExpression()), !dbg !5037
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5036, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8* %15, metadata !5035, metadata !DIExpression()), !dbg !5037
  %17 = load i24, i24* %3, align 4, !dbg !5048
  %18 = and i24 %17, 68, !dbg !5050
  %19 = icmp eq i24 %18, 68, !dbg !5050
  br i1 %19, label %20, label %22, !dbg !5050

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5051
  store i24 %21, i24* %3, align 4, !dbg !5051
  br label %22, !dbg !5053

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5054
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5055 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5057, metadata !DIExpression()), !dbg !5061
  call void @llvm.dbg.value(metadata i8* %1, metadata !5058, metadata !DIExpression()), !dbg !5061
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5062
  %5 = load i24, i24* %4, align 4, !dbg !5063
  %6 = or i24 %5, 128, !dbg !5063
  store i24 %6, i24* %4, align 4, !dbg !5063
  call void @llvm.dbg.value(metadata i8* %1, metadata !5058, metadata !DIExpression()), !dbg !5061
  %7 = load i8, i8* %1, align 1, !dbg !5064
  %8 = icmp eq i8 %7, 42, !dbg !5066
  br i1 %8, label %9, label %12, !dbg !5067

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5068
  store i24 %10, i24* %4, align 4, !dbg !5068
  call void @llvm.dbg.value(metadata i8* %1, metadata !5058, metadata !DIExpression()), !dbg !5061
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5070
  call void @llvm.dbg.value(metadata i8* %11, metadata !5058, metadata !DIExpression()), !dbg !5061
  store i8* %11, i8** %3, align 4, !dbg !5070
  br label %29, !dbg !5071

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5059, metadata !DIExpression()), !dbg !5061
  call void @llvm.dbg.value(metadata i8** %3, metadata !5058, metadata !DIExpression(DW_OP_deref)), !dbg !5061
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5072
  call void @llvm.dbg.value(metadata i32 %13, metadata !5060, metadata !DIExpression()), !dbg !5061
  %14 = load i8*, i8** %3, align 4, !dbg !5073
  call void @llvm.dbg.value(metadata i8* %14, metadata !5058, metadata !DIExpression()), !dbg !5061
  %15 = icmp eq i8* %14, %1, !dbg !5075
  br i1 %15, label %29, label %16, !dbg !5076

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5077
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5079
  store i32 %13, i32* %18, align 4, !dbg !5080
  %19 = lshr i32 %13, 31, !dbg !5081
  %20 = lshr i24 %17, 1, !dbg !5082
  %21 = and i24 %20, 1, !dbg !5082
  %22 = zext i24 %21 to i32, !dbg !5082
  %23 = or i32 %19, %22, !dbg !5082
  %24 = trunc i32 %23 to i24, !dbg !5082
  %25 = shl nuw nsw i24 %24, 1, !dbg !5082
  %26 = and i24 %17, -131, !dbg !5082
  %27 = or i24 %26, 128, !dbg !5082
  %28 = or i24 %25, %27, !dbg !5082
  store i24 %28, i24* %4, align 4, !dbg !5082
  br label %29, !dbg !5083

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5061
  ret i8* %30, !dbg !5084
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5085 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5087, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i8* %1, metadata !5088, metadata !DIExpression()), !dbg !5090
  %4 = load i8, i8* %1, align 1, !dbg !5091
  %5 = icmp eq i8 %4, 46, !dbg !5092
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5093
  %7 = load i24, i24* %6, align 4, !dbg !5094
  %8 = select i1 %5, i24 512, i24 0, !dbg !5094
  %9 = and i24 %7, -513, !dbg !5094
  %10 = or i24 %9, %8, !dbg !5094
  store i24 %10, i24* %6, align 4, !dbg !5094
  br i1 %5, label %11, label %32, !dbg !5095

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5088, metadata !DIExpression()), !dbg !5090
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5096
  call void @llvm.dbg.value(metadata i8* %12, metadata !5088, metadata !DIExpression()), !dbg !5090
  store i8* %12, i8** %3, align 4, !dbg !5096
  %13 = load i8, i8* %12, align 1, !dbg !5097
  %14 = icmp eq i8 %13, 42, !dbg !5099
  br i1 %14, label %15, label %18, !dbg !5100

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5101
  store i24 %16, i24* %6, align 4, !dbg !5101
  call void @llvm.dbg.value(metadata i8* %12, metadata !5088, metadata !DIExpression()), !dbg !5090
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5103
  call void @llvm.dbg.value(metadata i8* %17, metadata !5088, metadata !DIExpression()), !dbg !5090
  store i8* %17, i8** %3, align 4, !dbg !5103
  br label %32, !dbg !5104

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5088, metadata !DIExpression(DW_OP_deref)), !dbg !5090
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5105
  call void @llvm.dbg.value(metadata i32 %19, metadata !5089, metadata !DIExpression()), !dbg !5090
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5106
  store i32 %19, i32* %20, align 4, !dbg !5107
  %21 = lshr i32 %19, 31, !dbg !5108
  %22 = load i24, i24* %6, align 4, !dbg !5109
  %23 = lshr i24 %22, 1, !dbg !5109
  %24 = and i24 %23, 1, !dbg !5109
  %25 = zext i24 %24 to i32, !dbg !5109
  %26 = or i32 %21, %25, !dbg !5109
  %27 = trunc i32 %26 to i24, !dbg !5109
  %28 = shl nuw nsw i24 %27, 1, !dbg !5109
  %29 = and i24 %22, -3, !dbg !5109
  %30 = or i24 %28, %29, !dbg !5109
  store i24 %30, i24* %6, align 4, !dbg !5109
  %31 = load i8*, i8** %3, align 4, !dbg !5110
  call void @llvm.dbg.value(metadata i8* %31, metadata !5088, metadata !DIExpression()), !dbg !5090
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5090
  ret i8* %33, !dbg !5111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5112 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5114, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata i8* %1, metadata !5115, metadata !DIExpression()), !dbg !5116
  %3 = load i8, i8* %1, align 1, !dbg !5117
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5118

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5119
  call void @llvm.dbg.value(metadata i8* %5, metadata !5115, metadata !DIExpression()), !dbg !5116
  %6 = load i8, i8* %5, align 1, !dbg !5122
  %7 = icmp eq i8 %6, 104, !dbg !5123
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5124
  %9 = load i24, i24* %8, align 4, !dbg !5124
  %10 = and i24 %9, -30721, !dbg !5124
  br i1 %7, label %11, label %14, !dbg !5125

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5126
  store i24 %12, i24* %8, align 4, !dbg !5126
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5128
  call void @llvm.dbg.value(metadata i8* %13, metadata !5115, metadata !DIExpression()), !dbg !5116
  br label %56, !dbg !5129

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5130
  store i24 %15, i24* %8, align 4, !dbg !5130
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5132
  call void @llvm.dbg.value(metadata i8* %17, metadata !5115, metadata !DIExpression()), !dbg !5116
  %18 = load i8, i8* %17, align 1, !dbg !5134
  %19 = icmp eq i8 %18, 108, !dbg !5135
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5136
  %21 = load i24, i24* %20, align 4, !dbg !5136
  %22 = and i24 %21, -30721, !dbg !5136
  br i1 %19, label %23, label %26, !dbg !5137

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5138
  store i24 %24, i24* %20, align 4, !dbg !5138
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5140
  call void @llvm.dbg.value(metadata i8* %25, metadata !5115, metadata !DIExpression()), !dbg !5116
  br label %56, !dbg !5141

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5142
  store i24 %27, i24* %20, align 4, !dbg !5142
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5144
  %30 = load i24, i24* %29, align 4, !dbg !5145
  %31 = and i24 %30, -30721, !dbg !5145
  %32 = or i24 %31, 10240, !dbg !5145
  store i24 %32, i24* %29, align 4, !dbg !5145
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5146
  call void @llvm.dbg.value(metadata i8* %33, metadata !5115, metadata !DIExpression()), !dbg !5116
  br label %56, !dbg !5147

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5148
  %36 = load i24, i24* %35, align 4, !dbg !5149
  %37 = and i24 %36, -30721, !dbg !5149
  %38 = or i24 %37, 12288, !dbg !5149
  store i24 %38, i24* %35, align 4, !dbg !5149
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5150
  call void @llvm.dbg.value(metadata i8* %39, metadata !5115, metadata !DIExpression()), !dbg !5116
  br label %56, !dbg !5151

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5152
  %42 = load i24, i24* %41, align 4, !dbg !5153
  %43 = and i24 %42, -30721, !dbg !5153
  %44 = or i24 %43, 14336, !dbg !5153
  store i24 %44, i24* %41, align 4, !dbg !5153
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5154
  call void @llvm.dbg.value(metadata i8* %45, metadata !5115, metadata !DIExpression()), !dbg !5116
  br label %56, !dbg !5155

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5156
  %48 = load i24, i24* %47, align 4, !dbg !5157
  %49 = and i24 %48, -30723, !dbg !5157
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5158
  call void @llvm.dbg.value(metadata i8* %50, metadata !5115, metadata !DIExpression()), !dbg !5116
  %51 = or i24 %49, 16386, !dbg !5159
  store i24 %51, i24* %47, align 4, !dbg !5159
  br label %56, !dbg !5160

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5161
  %54 = load i24, i24* %53, align 4, !dbg !5162
  %55 = and i24 %54, -30721, !dbg !5162
  store i24 %55, i24* %53, align 4, !dbg !5162
  br label %56, !dbg !5163

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5115, metadata !DIExpression()), !dbg !5116
  ret i8* %57, !dbg !5164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5165 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5167, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i8* %1, metadata !5168, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i8 0, metadata !5169, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i8* %1, metadata !5168, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5172
  %3 = load i8, i8* %1, align 1, !dbg !5173
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5174
  store i8 %3, i8* %4, align 1, !dbg !5175
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5176

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5177

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5178
  %9 = load i24, i24* %8, align 4, !dbg !5178
  %10 = and i24 %9, -458753, !dbg !5178
  %11 = or i24 %10, %7, !dbg !5178
  call void @llvm.dbg.label(metadata !5170), !dbg !5179
  %12 = and i24 %9, 30720, !dbg !5180
  %13 = icmp eq i24 %12, 16384, !dbg !5180
  %14 = zext i1 %13 to i24, !dbg !5182
  %15 = or i24 %11, %14, !dbg !5182
  %16 = icmp eq i8 %3, 99, !dbg !5183
  br i1 %16, label %17, label %43, !dbg !5185

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5186
  %19 = icmp ne i24 %18, 0, !dbg !5186
  call void @llvm.dbg.value(metadata i1 %19, metadata !5169, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5172
  br label %43, !dbg !5188

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5189
  %22 = load i24, i24* %21, align 4, !dbg !5190
  %23 = and i24 %22, -458753, !dbg !5190
  %24 = or i24 %23, 262144, !dbg !5190
  call void @llvm.dbg.value(metadata i8 1, metadata !5169, metadata !DIExpression()), !dbg !5172
  br label %43, !dbg !5191

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5194
  %27 = load i24, i24* %26, align 4, !dbg !5195
  %28 = and i24 %27, -458753, !dbg !5195
  %29 = or i24 %28, 196608, !dbg !5195
  %30 = and i24 %27, 30720, !dbg !5196
  %31 = icmp eq i24 %30, 16384, !dbg !5196
  br label %43, !dbg !5198

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5199
  %34 = load i24, i24* %33, align 4, !dbg !5200
  %35 = and i24 %34, -458753, !dbg !5200
  %36 = or i24 %35, 196608, !dbg !5200
  %37 = and i24 %34, 30720, !dbg !5201
  %38 = icmp ne i24 %37, 0, !dbg !5201
  br label %43, !dbg !5203

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5204
  %41 = load i24, i24* %40, align 4, !dbg !5205
  %42 = or i24 %41, 1, !dbg !5205
  br label %43, !dbg !5206

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5207
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5208
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5209
  call void @llvm.dbg.value(metadata i8* %48, metadata !5168, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i8 poison, metadata !5169, metadata !DIExpression()), !dbg !5172
  %49 = lshr i24 %44, 1, !dbg !5207
  %50 = and i24 %49, 1, !dbg !5207
  %51 = zext i24 %50 to i32, !dbg !5207
  %52 = or i32 %51, %47, !dbg !5207
  %53 = trunc i32 %52 to i24, !dbg !5207
  %54 = shl nuw nsw i24 %53, 1, !dbg !5207
  %55 = and i24 %44, -3, !dbg !5207
  %56 = or i24 %54, %55, !dbg !5207
  store i24 %56, i24* %46, align 4, !dbg !5207
  ret i8* %48, !dbg !5210
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5211 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5216, metadata !DIExpression()), !dbg !5219
  %2 = load i8*, i8** %0, align 4, !dbg !5220
  call void @llvm.dbg.value(metadata i8* %2, metadata !5217, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.value(metadata i32 0, metadata !5218, metadata !DIExpression()), !dbg !5219
  %3 = load i8, i8* %2, align 1, !dbg !5221
  %4 = zext i8 %3 to i32, !dbg !5222
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5223
  %6 = icmp eq i32 %5, 0, !dbg !5224
  br i1 %6, label %19, label %7, !dbg !5224

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5218, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.value(metadata i8* %10, metadata !5217, metadata !DIExpression()), !dbg !5219
  %11 = mul i32 %9, 10, !dbg !5225
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5227
  call void @llvm.dbg.value(metadata i8* %12, metadata !5217, metadata !DIExpression()), !dbg !5219
  %13 = add i32 %11, -48, !dbg !5228
  %14 = add i32 %13, %8, !dbg !5229
  call void @llvm.dbg.value(metadata i32 %14, metadata !5218, metadata !DIExpression()), !dbg !5219
  %15 = load i8, i8* %12, align 1, !dbg !5221
  %16 = zext i8 %15 to i32, !dbg !5222
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5223
  %18 = icmp eq i32 %17, 0, !dbg !5224
  br i1 %18, label %19, label %7, !dbg !5224, !llvm.loop !5230

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5219
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5219
  store i8* %20, i8** %0, align 4, !dbg !5232
  ret i32 %21, !dbg !5233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5236, metadata !DIExpression()), !dbg !5237
  %2 = add i32 %0, -48, !dbg !5238
  %3 = icmp ult i32 %2, 10, !dbg !5239
  %4 = zext i1 %3 to i32, !dbg !5239
  ret i32 %4, !dbg !5240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5241 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5243, !srcloc !5244
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5245, !srcloc !5246
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #24, !dbg !5247, !srcloc !5248
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5249, !srcloc !5250
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5251, !srcloc !5252
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5253, !srcloc !5254
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5255, !srcloc !5256
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5257, !srcloc !5258
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5259, !srcloc !5260
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5261, !srcloc !5262
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5263, !srcloc !5264
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5265, !srcloc !5266
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5267, !srcloc !5268
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5269, !srcloc !5270
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5271, !srcloc !5272
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5273, !srcloc !5274
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5275, !srcloc !5276
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5277, !srcloc !5278
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5279, !srcloc !5280
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5281, !srcloc !5282
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5283, !srcloc !5284
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5285, !srcloc !5286
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5287, !srcloc !5288
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5289, !srcloc !5290
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5291, !srcloc !5292
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5293, !srcloc !5294
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #24, !dbg !5295, !srcloc !5296
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5297, !srcloc !5298
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5299, !srcloc !5300
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5301, !srcloc !5302
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5303, !srcloc !5304
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5305, !srcloc !5306
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #24, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #24, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #24, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #24, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #24, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #24, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #24, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #24, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #24, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS\0A\09.equ\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,1\0A\09.type\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,%object", ""() #24, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #24, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR\0A\09.equ\09CONFIG_CONSOLE_GETCHAR,1\0A\09.type\09CONFIG_CONSOLE_GETCHAR,%object", ""() #24, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,64\0A\09.type\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,%object", ""() #24, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,512\0A\09.type\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,%object", ""() #24, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !5811, !srcloc !5812
  ret void, !dbg !5813
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5814 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5816, metadata !DIExpression()), !dbg !5818
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !5819
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !5820
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5821, !srcloc !5830
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5821
  call void @llvm.dbg.value(metadata i32 %3, metadata !5827, metadata !DIExpression()) #24, !dbg !5831
  call void @llvm.dbg.value(metadata i32 undef, metadata !5828, metadata !DIExpression()) #24, !dbg !5831
  call void @llvm.dbg.value(metadata i32 %3, metadata !5817, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i32 %3, metadata !5832, metadata !DIExpression()) #24, !dbg !5837
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !5839, !srcloc !5840
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5841
  ret i32 0, !dbg !5842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5843 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5845
  %2 = or i32 %1, 512, !dbg !5845
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5845
  ret void, !dbg !5846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5847 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5848
  %2 = or i32 %1, 1024, !dbg !5848
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5848
  ret void, !dbg !5849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5852, metadata !DIExpression()), !dbg !5853
  ret i32 0, !dbg !5854
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_write(%struct.tty_serial* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5855 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5901, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i8* %1, metadata !5902, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 %2, metadata !5903, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i8* %1, metadata !5904, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 0, metadata !5905, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 0, metadata !5906, metadata !DIExpression()), !dbg !5907
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5908
  %5 = load i32, i32* %4, align 4, !dbg !5908
  %6 = icmp eq i32 %5, 0, !dbg !5910
  %7 = icmp eq i32 %2, 0, !dbg !5907
  br i1 %6, label %9, label %8, !dbg !5911

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !5905, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i8* %1, metadata !5904, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 %2, metadata !5903, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 %2, metadata !5903, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5907
  br i1 %7, label %37, label %20, !dbg !5912

9:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !5904, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 %2, metadata !5903, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 %2, metadata !5903, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5907
  br i1 %7, label %37, label %10, !dbg !5913

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %12, !dbg !5913

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %1, %10 ], [ %17, %12 ]
  %14 = phi i32 [ %2, %10 ], [ %15, %12 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !5904, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 %14, metadata !5903, metadata !DIExpression()), !dbg !5907
  %15 = add i32 %14, -1, !dbg !5915
  call void @llvm.dbg.value(metadata i32 %15, metadata !5903, metadata !DIExpression()), !dbg !5907
  %16 = load %struct.device*, %struct.device** %11, align 4, !dbg !5916
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5918
  call void @llvm.dbg.value(metadata i8* %17, metadata !5904, metadata !DIExpression()), !dbg !5907
  %18 = load i8, i8* %13, align 1, !dbg !5919
  tail call fastcc void @uart_poll_out(%struct.device* noundef %16, i8 noundef zeroext %18) #26, !dbg !5920
  call void @llvm.dbg.value(metadata i32 %15, metadata !5903, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5907
  %19 = icmp eq i32 %15, 0, !dbg !5913
  br i1 %19, label %37, label %12, !dbg !5913, !llvm.loop !5921

20:                                               ; preds = %8, %33
  %21 = phi i32 [ %24, %33 ], [ %2, %8 ]
  %22 = phi i32 [ %35, %33 ], [ 0, %8 ]
  %23 = phi i8* [ %34, %33 ], [ %1, %8 ]
  %24 = add i32 %21, -1, !dbg !5923
  call void @llvm.dbg.value(metadata i32 %22, metadata !5905, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i8* %23, metadata !5904, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i8* %23, metadata !5904, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5907
  %25 = load i8, i8* %23, align 1, !dbg !5924
  %26 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %25) #26, !dbg !5926
  call void @llvm.dbg.value(metadata i32 %26, metadata !5906, metadata !DIExpression()), !dbg !5907
  %27 = icmp slt i32 %26, 0, !dbg !5927
  br i1 %27, label %28, label %33, !dbg !5929

28:                                               ; preds = %20
  %29 = icmp eq i32 %22, 0, !dbg !5930
  br i1 %29, label %30, label %37, !dbg !5933

30:                                               ; preds = %28
  %31 = sub nsw i32 0, %26, !dbg !5934
  %32 = tail call fastcc i32* @z_errno() #26, !dbg !5936
  store i32 %31, i32* %32, align 4, !dbg !5937
  br label %37, !dbg !5938

33:                                               ; preds = %20
  %34 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5939
  call void @llvm.dbg.value(metadata i8* %34, metadata !5904, metadata !DIExpression()), !dbg !5907
  %35 = add nuw i32 %22, 1, !dbg !5940
  call void @llvm.dbg.value(metadata i32 %35, metadata !5905, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 %24, metadata !5903, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 %24, metadata !5903, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5907
  %36 = icmp eq i32 %24, 0, !dbg !5912
  br i1 %36, label %37, label %20, !dbg !5912, !llvm.loop !5941

37:                                               ; preds = %33, %12, %8, %9, %28, %30
  %38 = phi i32 [ %26, %30 ], [ %22, %28 ], [ 0, %9 ], [ 0, %8 ], [ %2, %12 ], [ %2, %33 ], !dbg !5907
  ret i32 %38, !dbg !5943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5944 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5947, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata i8 %1, metadata !5948, metadata !DIExpression()), !dbg !5949
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5950, !srcloc !5952
  tail call fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) #26, !dbg !5953
  ret void, !dbg !5954
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5955 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5959, metadata !DIExpression()), !dbg !5964
  call void @llvm.dbg.value(metadata i8 %1, metadata !5960, metadata !DIExpression()), !dbg !5964
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !5965
  %4 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !5966
  br i1 %4, label %14, label %5, !dbg !5966

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !5967
  %7 = load i32, i32* %6, align 4, !dbg !5967
  %8 = icmp eq i32 %7, -1, !dbg !5967
  br i1 %8, label %14, label %9, !dbg !5967

9:                                                ; preds = %5
  %10 = icmp sgt i32 %7, 0, !dbg !5967
  %11 = select i1 %10, i32 %7, i32 0, !dbg !5967
  %12 = zext i32 %11 to i64, !dbg !5967
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %12) #26, !dbg !5967
  br label %14, !dbg !5967

14:                                               ; preds = %5, %2, %9
  %15 = phi i64 [ %13, %9 ], [ 0, %2 ], [ -1, %5 ], !dbg !5964
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !5968
  %17 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %3, [1 x i64] %16) #26, !dbg !5968
  call void @llvm.dbg.value(metadata i32 %17, metadata !5963, metadata !DIExpression()), !dbg !5964
  %18 = icmp slt i32 %17, 0, !dbg !5969
  br i1 %18, label %42, label %19, !dbg !5971

19:                                               ; preds = %14
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5972, !srcloc !5978
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !5972
  call void @llvm.dbg.value(metadata i32 %21, metadata !5975, metadata !DIExpression()) #24, !dbg !5979
  call void @llvm.dbg.value(metadata i32 undef, metadata !5976, metadata !DIExpression()) #24, !dbg !5979
  call void @llvm.dbg.value(metadata i32 %21, metadata !5961, metadata !DIExpression()), !dbg !5964
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !5980
  %23 = load i16, i16* %22, align 2, !dbg !5980
  %24 = zext i16 %23 to i32, !dbg !5981
  %25 = add nuw nsw i32 %24, 1, !dbg !5982
  call void @llvm.dbg.value(metadata i32 %25, metadata !5962, metadata !DIExpression()), !dbg !5964
  %26 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5983
  %27 = load i32, i32* %26, align 4, !dbg !5983
  %28 = icmp ult i32 %25, %27, !dbg !5985
  %29 = select i1 %28, i32 %25, i32 0, !dbg !5986
  call void @llvm.dbg.value(metadata i32 %29, metadata !5962, metadata !DIExpression()), !dbg !5964
  %30 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !5987
  %31 = load i16, i16* %30, align 4, !dbg !5987
  %32 = zext i16 %31 to i32, !dbg !5989
  %33 = icmp eq i32 %29, %32, !dbg !5990
  br i1 %33, label %34, label %35, !dbg !5991

34:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 %21, metadata !5992, metadata !DIExpression()) #24, !dbg !5995
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5998, !srcloc !5999
  br label %42, !dbg !6000

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6001
  %37 = load i8*, i8** %36, align 4, !dbg !6001
  %38 = getelementptr inbounds i8, i8* %37, i32 %24, !dbg !6002
  store i8 %1, i8* %38, align 1, !dbg !6003
  %39 = trunc i32 %29 to i16, !dbg !6004
  store i16 %39, i16* %22, align 2, !dbg !6005
  call void @llvm.dbg.value(metadata i32 %21, metadata !5992, metadata !DIExpression()) #24, !dbg !6006
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !6008, !srcloc !5999
  %40 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6009
  %41 = load %struct.device*, %struct.device** %40, align 4, !dbg !6009
  tail call fastcc void @uart_irq_tx_enable(%struct.device* noundef %41) #26, !dbg !6010
  br label %42, !dbg !6011

42:                                               ; preds = %14, %35, %34
  %43 = phi i32 [ -28, %34 ], [ 0, %35 ], [ %17, %14 ], !dbg !5964
  ret i32 %43, !dbg !6012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32* @z_errno() unnamed_addr #1 !dbg !6013 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6017, !srcloc !6019
  %1 = tail call i32* @z_impl_z_errno() #25, !dbg !6020
  ret i32* %1, !dbg !6021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !6022 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6027, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.value(metadata i64 %0, metadata !6029, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.value(metadata i32 1000, metadata !6034, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.value(metadata i32 10000, metadata !6035, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.value(metadata i8 1, metadata !6036, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.value(metadata i8 0, metadata !6037, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.value(metadata i8 1, metadata !6038, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.value(metadata i8 0, metadata !6039, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.value(metadata i8 1, metadata !6040, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.value(metadata i8 0, metadata !6041, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.value(metadata i64 0, metadata !6042, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.value(metadata i64 0, metadata !6042, metadata !DIExpression()), !dbg !6046
  %2 = mul i64 %0, 10, !dbg !6048
  ret i64 %2, !dbg !6054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !6055 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6065, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6064, metadata !DIExpression()), !dbg !6066
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6067, !srcloc !6069
  %3 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) #25, !dbg !6070
  ret i32 %3, !dbg !6071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6072 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6074, metadata !DIExpression()), !dbg !6075
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6076, !srcloc !6078
  tail call fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) #26, !dbg !6079
  ret void, !dbg !6080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6081 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6083, metadata !DIExpression()), !dbg !6085
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6086
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6086
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6086
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6084, metadata !DIExpression()), !dbg !6085
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 7, !dbg !6087
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6087
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6089
  br i1 %7, label %9, label %8, !dbg !6090

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6091
  br label %9, !dbg !6093

9:                                                ; preds = %8, %1
  ret void, !dbg !6094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6097, metadata !DIExpression()), !dbg !6100
  call void @llvm.dbg.value(metadata i8 %1, metadata !6098, metadata !DIExpression()), !dbg !6100
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6101
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6101
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6101
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6099, metadata !DIExpression()), !dbg !6100
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 1, !dbg !6102
  %7 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %6, align 4, !dbg !6102
  tail call void %7(%struct.device* noundef %0, i8 noundef zeroext %1) #25, !dbg !6103
  ret void, !dbg !6104
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_read(%struct.tty_serial* noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6105 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6109, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i8* %1, metadata !6110, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i32 %2, metadata !6111, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i8* %1, metadata !6112, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i32 0, metadata !6113, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i32 0, metadata !6114, metadata !DIExpression()), !dbg !6115
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6116
  %5 = load i32, i32* %4, align 4, !dbg !6116
  %6 = icmp eq i32 %5, 0, !dbg !6118
  br i1 %6, label %9, label %7, !dbg !6119

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !6113, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i8* %1, metadata !6112, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i32 %2, metadata !6111, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i32 %2, metadata !6111, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6115
  %8 = icmp eq i32 %2, 0, !dbg !6120
  br i1 %8, label %28, label %11, !dbg !6120

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @tty_read_unbuf(%struct.tty_serial* noundef nonnull %0, i8* noundef %1, i32 noundef %2) #26, !dbg !6121
  br label %28, !dbg !6123

11:                                               ; preds = %7, %23
  %12 = phi i32 [ %15, %23 ], [ %2, %7 ]
  %13 = phi i32 [ %26, %23 ], [ 0, %7 ]
  %14 = phi i8* [ %25, %23 ], [ %1, %7 ]
  %15 = add i32 %12, -1, !dbg !6124
  call void @llvm.dbg.value(metadata i32 %13, metadata !6113, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i8* %14, metadata !6112, metadata !DIExpression()), !dbg !6115
  %16 = tail call fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) #26, !dbg !6125
  call void @llvm.dbg.value(metadata i32 %16, metadata !6114, metadata !DIExpression()), !dbg !6115
  %17 = icmp slt i32 %16, 0, !dbg !6127
  br i1 %17, label %18, label %23, !dbg !6129

18:                                               ; preds = %11
  %19 = icmp eq i32 %13, 0, !dbg !6130
  br i1 %19, label %20, label %28, !dbg !6133

20:                                               ; preds = %18
  %21 = sub nsw i32 0, %16, !dbg !6134
  %22 = tail call fastcc i32* @z_errno() #26, !dbg !6136
  store i32 %21, i32* %22, align 4, !dbg !6137
  br label %28, !dbg !6138

23:                                               ; preds = %11
  %24 = trunc i32 %16 to i8, !dbg !6139
  %25 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6140
  call void @llvm.dbg.value(metadata i8* %25, metadata !6112, metadata !DIExpression()), !dbg !6115
  store i8 %24, i8* %14, align 1, !dbg !6141
  %26 = add nuw i32 %13, 1, !dbg !6142
  call void @llvm.dbg.value(metadata i32 %26, metadata !6113, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i32 %15, metadata !6111, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i32 %15, metadata !6111, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6115
  %27 = icmp eq i32 %15, 0, !dbg !6120
  br i1 %27, label %28, label %11, !dbg !6120, !llvm.loop !6143

28:                                               ; preds = %23, %7, %18, %20, %9
  %29 = phi i32 [ %10, %9 ], [ %16, %20 ], [ %13, %18 ], [ 0, %7 ], [ %2, %23 ], !dbg !6115
  ret i32 %29, !dbg !6145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_read_unbuf(%struct.tty_serial* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #1 !dbg !6146 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6148, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i8* %1, metadata !6149, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 %2, metadata !6150, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i8* %1, metadata !6151, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 0, metadata !6152, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 0, metadata !6153, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 undef, metadata !6154, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 0, metadata !6152, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i8* %1, metadata !6151, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 %2, metadata !6150, metadata !DIExpression()), !dbg !6157
  %5 = icmp eq i32 %2, 0, !dbg !6158
  br i1 %5, label %48, label %6, !dbg !6158

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6159
  %8 = load i32, i32* %7, align 4, !dbg !6159
  call void @llvm.dbg.value(metadata i32 %8, metadata !6154, metadata !DIExpression()), !dbg !6157
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %10, !dbg !6158

10:                                               ; preds = %6, %46
  %11 = phi i32 [ %8, %6 ], [ %39, %46 ]
  %12 = phi i32 [ 0, %6 ], [ %31, %46 ]
  %13 = phi i8* [ %1, %6 ], [ %32, %46 ]
  %14 = phi i32 [ %2, %6 ], [ %33, %46 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6154, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 %12, metadata !6152, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i8* %13, metadata !6151, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 %14, metadata !6150, metadata !DIExpression()), !dbg !6157
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6160
  %15 = load %struct.device*, %struct.device** %9, align 4, !dbg !6161
  call void @llvm.dbg.value(metadata i8* %4, metadata !6155, metadata !DIExpression(DW_OP_deref)), !dbg !6162
  %16 = call fastcc i32 @uart_poll_in(%struct.device* noundef %15, i8* noundef nonnull %4) #26, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %16, metadata !6153, metadata !DIExpression()), !dbg !6157
  %17 = icmp slt i32 %16, -1, !dbg !6164
  br i1 %17, label %18, label %22, !dbg !6166

18:                                               ; preds = %10
  %19 = icmp eq i32 %12, 0, !dbg !6167
  br i1 %19, label %20, label %44, !dbg !6170

20:                                               ; preds = %18
  %21 = call fastcc i32* @z_errno() #26, !dbg !6171
  store i32 %16, i32* %21, align 4, !dbg !6173
  call void @llvm.dbg.value(metadata i32 %39, metadata !6154, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 undef, metadata !6152, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i8* %32, metadata !6151, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 %33, metadata !6150, metadata !DIExpression()), !dbg !6157
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6174
  br label %48

22:                                               ; preds = %10
  %23 = icmp eq i32 %16, 0, !dbg !6175
  br i1 %23, label %24, label %30, !dbg !6177

24:                                               ; preds = %22
  %25 = load i8, i8* %4, align 1, !dbg !6178
  call void @llvm.dbg.value(metadata i8 %25, metadata !6155, metadata !DIExpression()), !dbg !6162
  %26 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6180
  call void @llvm.dbg.value(metadata i8* %26, metadata !6151, metadata !DIExpression()), !dbg !6157
  store i8 %25, i8* %13, align 1, !dbg !6181
  %27 = add i32 %12, 1, !dbg !6182
  call void @llvm.dbg.value(metadata i32 %27, metadata !6152, metadata !DIExpression()), !dbg !6157
  %28 = add i32 %14, -1, !dbg !6183
  call void @llvm.dbg.value(metadata i32 %28, metadata !6150, metadata !DIExpression()), !dbg !6157
  %29 = icmp eq i32 %28, 0, !dbg !6184
  br i1 %29, label %44, label %30, !dbg !6186

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %27, %24 ], [ %12, %22 ]
  %32 = phi i8* [ %26, %24 ], [ %13, %22 ]
  %33 = phi i32 [ %28, %24 ], [ %14, %22 ]
  %34 = icmp eq i32 %11, -1, !dbg !6187
  br i1 %34, label %38, label %35, !dbg !6188

35:                                               ; preds = %30
  %36 = add i32 %11, -1, !dbg !6189
  call void @llvm.dbg.value(metadata i32 %36, metadata !6154, metadata !DIExpression()), !dbg !6157
  %37 = icmp eq i32 %11, 0, !dbg !6190
  br i1 %37, label %44, label %38, !dbg !6191

38:                                               ; preds = %35, %30
  %39 = phi i32 [ %36, %35 ], [ -1, %30 ], !dbg !6157
  call void @llvm.dbg.value(metadata i32 %39, metadata !6154, metadata !DIExpression()), !dbg !6157
  %40 = icmp eq i32 %16, -1, !dbg !6192
  br i1 %40, label %41, label %46, !dbg !6194

41:                                               ; preds = %38
  %42 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1) #26, !dbg !6195
  %43 = insertvalue [1 x i64] poison, i64 %42, 0, !dbg !6197
  call fastcc void @k_sleep([1 x i64] %43) #26, !dbg !6197
  br label %46, !dbg !6198

44:                                               ; preds = %35, %24, %18
  %45 = phi i32 [ %12, %18 ], [ %31, %35 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !6154, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 undef, metadata !6152, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i8* %32, metadata !6151, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 %33, metadata !6150, metadata !DIExpression()), !dbg !6157
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6174
  br label %48

46:                                               ; preds = %38, %41
  call void @llvm.dbg.value(metadata i32 %39, metadata !6154, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 %31, metadata !6152, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i8* %32, metadata !6151, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i32 %33, metadata !6150, metadata !DIExpression()), !dbg !6157
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6174
  %47 = icmp eq i32 %33, 0, !dbg !6158
  br i1 %47, label %48, label %10, !dbg !6158

48:                                               ; preds = %46, %3, %44, %20
  %49 = phi i32 [ -1, %20 ], [ %45, %44 ], [ 0, %3 ], [ %31, %46 ], !dbg !6157
  ret i32 %49, !dbg !6199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) unnamed_addr #1 !dbg !6200 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6204, metadata !DIExpression()), !dbg !6208
  %2 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6209
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6210
  %4 = load i32, i32* %3, align 4, !dbg !6210
  %5 = icmp eq i32 %4, -1, !dbg !6210
  br i1 %5, label %11, label %6, !dbg !6210

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0, !dbg !6210
  %8 = select i1 %7, i32 %4, i32 0, !dbg !6210
  %9 = zext i32 %8 to i64, !dbg !6210
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %9) #26, !dbg !6210
  br label %11, !dbg !6210

11:                                               ; preds = %1, %6
  %12 = phi i64 [ %10, %6 ], [ -1, %1 ], !dbg !6210
  %13 = insertvalue [1 x i64] poison, i64 %12, 0, !dbg !6211
  %14 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %2, [1 x i64] %13) #26, !dbg !6211
  call void @llvm.dbg.value(metadata i32 %14, metadata !6207, metadata !DIExpression()), !dbg !6208
  %15 = icmp slt i32 %14, 0, !dbg !6212
  br i1 %15, label %33, label %16, !dbg !6214

16:                                               ; preds = %11
  %17 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6215, !srcloc !5978
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !6215
  call void @llvm.dbg.value(metadata i32 %18, metadata !5975, metadata !DIExpression()) #24, !dbg !6217
  call void @llvm.dbg.value(metadata i32 undef, metadata !5976, metadata !DIExpression()) #24, !dbg !6217
  call void @llvm.dbg.value(metadata i32 %18, metadata !6205, metadata !DIExpression()), !dbg !6208
  %19 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6218
  %20 = load i8*, i8** %19, align 4, !dbg !6218
  %21 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6219
  %22 = load i16, i16* %21, align 4, !dbg !6220
  %23 = add i16 %22, 1, !dbg !6220
  store i16 %23, i16* %21, align 4, !dbg !6220
  %24 = zext i16 %22 to i32, !dbg !6221
  %25 = getelementptr inbounds i8, i8* %20, i32 %24, !dbg !6221
  %26 = load i8, i8* %25, align 1, !dbg !6221
  call void @llvm.dbg.value(metadata i8 %26, metadata !6206, metadata !DIExpression()), !dbg !6208
  %27 = zext i16 %23 to i32, !dbg !6222
  %28 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6224
  %29 = load i32, i32* %28, align 4, !dbg !6224
  %30 = icmp ugt i32 %29, %27, !dbg !6225
  %31 = select i1 %30, i16 %23, i16 0, !dbg !6226
  store i16 %31, i16* %21, align 4, !dbg !6208
  call void @llvm.dbg.value(metadata i32 %18, metadata !5992, metadata !DIExpression()) #24, !dbg !6227
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !6229, !srcloc !5999
  %32 = zext i8 %26 to i32, !dbg !6230
  br label %33, !dbg !6231

33:                                               ; preds = %11, %16
  %34 = phi i32 [ %32, %16 ], [ %14, %11 ], !dbg !6208
  ret i32 %34, !dbg !6232
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6233 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6235, metadata !DIExpression()), !dbg !6237
  call void @llvm.dbg.value(metadata i8* %1, metadata !6236, metadata !DIExpression()), !dbg !6237
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6238, !srcloc !6240
  %3 = tail call fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !6241
  ret i32 %3, !dbg !6242
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !6243 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6247, metadata !DIExpression()), !dbg !6248
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6249, !srcloc !6251
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !6252
  ret void, !dbg !6253
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6254 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6256, metadata !DIExpression()), !dbg !6259
  call void @llvm.dbg.value(metadata i8* %1, metadata !6257, metadata !DIExpression()), !dbg !6259
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6260
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6260
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6260
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6258, metadata !DIExpression()), !dbg !6259
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 0, !dbg !6261
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !6261
  %8 = icmp eq i32 (%struct.device*, i8*)* %7, null, !dbg !6263
  br i1 %8, label %11, label %9, !dbg !6264

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1) #25, !dbg !6265
  br label %11, !dbg !6266

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6259
  ret i32 %12, !dbg !6267
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_init(%struct.tty_serial* noundef %0, %struct.device* noundef %1) local_unnamed_addr #1 !dbg !6268 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6272, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !6273, metadata !DIExpression()), !dbg !6274
  %3 = icmp eq %struct.device* %1, null, !dbg !6275
  br i1 %3, label %17, label %4, !dbg !6277

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6278
  store %struct.device* %1, %struct.device** %5, align 4, !dbg !6279
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6280
  store i8* null, i8** %6, align 4, !dbg !6281
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6282
  store i32 0, i32* %7, align 4, !dbg !6283
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6284
  store i8* null, i8** %8, align 4, !dbg !6285
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6286
  store i32 0, i32* %9, align 4, !dbg !6287
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !6288
  store i16 0, i16* %10, align 2, !dbg !6289
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !6290
  store i16 0, i16* %11, align 4, !dbg !6291
  %12 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6292
  store i16 0, i16* %12, align 2, !dbg !6293
  %13 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6294
  store i16 0, i16* %13, align 4, !dbg !6295
  %14 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6296
  store i32 -1, i32* %14, align 4, !dbg !6297
  %15 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !6298
  store i32 -1, i32* %15, align 4, !dbg !6299
  %16 = bitcast %struct.tty_serial* %0 to i8*, !dbg !6300
  tail call fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef nonnull %1, i8* noundef %16) #26, !dbg !6301
  br label %17, !dbg !6302

17:                                               ; preds = %2, %4
  %18 = phi i32 [ 0, %4 ], [ -19, %2 ], !dbg !6274
  ret i32 %18, !dbg !6303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6304 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6306, metadata !DIExpression()), !dbg !6310
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @tty_uart_isr, metadata !6307, metadata !DIExpression()), !dbg !6310
  call void @llvm.dbg.value(metadata i8* %1, metadata !6308, metadata !DIExpression()), !dbg !6310
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6311
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6311
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6311
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6309, metadata !DIExpression()), !dbg !6310
  %6 = icmp eq %struct.uart_driver_api* %5, null, !dbg !6312
  br i1 %6, label %12, label %7, !dbg !6314

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 18, !dbg !6315
  %9 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %8, align 4, !dbg !6315
  %10 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %9, null, !dbg !6316
  br i1 %10, label %12, label %11, !dbg !6317

11:                                               ; preds = %7
  tail call void %9(%struct.device* noundef nonnull %0, void (%struct.device*, i8*)* noundef nonnull @tty_uart_isr, i8* noundef %1) #25, !dbg !6318
  br label %12, !dbg !6320

12:                                               ; preds = %11, %7, %2
  ret void, !dbg !6321
}

; Function Attrs: noinline nounwind optsize
define internal void @tty_uart_isr(%struct.device* noundef %0, i8* noundef %1) #1 !dbg !6322 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6324, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8* %1, metadata !6325, metadata !DIExpression()), !dbg !6330
  %4 = bitcast i8* %1 to %struct.tty_serial*, !dbg !6331
  call void @llvm.dbg.value(metadata %struct.tty_serial* %4, metadata !6326, metadata !DIExpression()), !dbg !6330
  tail call fastcc void @uart_irq_update(%struct.device* noundef %0) #26, !dbg !6332
  %5 = tail call fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) #26, !dbg !6333
  %6 = icmp eq i32 %5, 0, !dbg !6333
  br i1 %6, label %15, label %7, !dbg !6334

7:                                                ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6335
  call void @llvm.dbg.value(metadata i8* %3, metadata !6327, metadata !DIExpression(DW_OP_deref)), !dbg !6336
  %8 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6337
  %9 = icmp eq i32 %8, 0, !dbg !6340
  br i1 %9, label %14, label %10, !dbg !6341

10:                                               ; preds = %7, %10
  %11 = load i8, i8* %3, align 1, !dbg !6342
  call void @llvm.dbg.value(metadata i8 %11, metadata !6327, metadata !DIExpression()), !dbg !6336
  call fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %4, i8 noundef zeroext %11) #26, !dbg !6343
  call void @llvm.dbg.value(metadata i8* %3, metadata !6327, metadata !DIExpression(DW_OP_deref)), !dbg !6336
  %12 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6337
  %13 = icmp eq i32 %12, 0, !dbg !6340
  br i1 %13, label %14, label %10, !dbg !6341, !llvm.loop !6344

14:                                               ; preds = %10, %7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6347
  br label %15, !dbg !6348

15:                                               ; preds = %14, %2
  %16 = call fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) #26, !dbg !6349
  %17 = icmp eq i32 %16, 0, !dbg !6349
  br i1 %17, label %44, label %18, !dbg !6351

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %1, i32 60, !dbg !6352
  %20 = bitcast i8* %19 to i16*, !dbg !6352
  %21 = load i16, i16* %20, align 4, !dbg !6352
  %22 = getelementptr inbounds i8, i8* %1, i32 62, !dbg !6355
  %23 = bitcast i8* %22 to i16*, !dbg !6355
  %24 = load i16, i16* %23, align 2, !dbg !6355
  %25 = icmp eq i16 %21, %24, !dbg !6356
  br i1 %25, label %26, label %27, !dbg !6357

26:                                               ; preds = %18
  call fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6358
  br label %44, !dbg !6360

27:                                               ; preds = %18
  %28 = zext i16 %21 to i32, !dbg !6361
  %29 = getelementptr inbounds i8, i8* %1, i32 52, !dbg !6362
  %30 = bitcast i8* %29 to i8**, !dbg !6362
  %31 = load i8*, i8** %30, align 4, !dbg !6362
  %32 = add i16 %21, 1, !dbg !6364
  store i16 %32, i16* %20, align 4, !dbg !6364
  %33 = getelementptr inbounds i8, i8* %31, i32 %28, !dbg !6365
  call fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %33) #26, !dbg !6366
  %34 = load i16, i16* %20, align 4, !dbg !6367
  %35 = zext i16 %34 to i32, !dbg !6369
  %36 = getelementptr inbounds i8, i8* %1, i32 56, !dbg !6370
  %37 = bitcast i8* %36 to i32*, !dbg !6370
  %38 = load i32, i32* %37, align 4, !dbg !6370
  %39 = icmp ugt i32 %38, %35, !dbg !6371
  br i1 %39, label %41, label %40, !dbg !6372

40:                                               ; preds = %27
  store i16 0, i16* %20, align 4, !dbg !6373
  br label %41, !dbg !6375

41:                                               ; preds = %40, %27
  %42 = getelementptr inbounds i8, i8* %1, i32 36, !dbg !6376
  %43 = bitcast i8* %42 to %struct.k_sem*, !dbg !6376
  call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %43) #26, !dbg !6377
  br label %44

44:                                               ; preds = %26, %41, %15
  ret void, !dbg !6378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6379 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6381, metadata !DIExpression()), !dbg !6382
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6383, !srcloc !6385
  tail call fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) #26, !dbg !6386
  ret void, !dbg !6387
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6388 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6390, metadata !DIExpression()), !dbg !6392
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6393
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6393
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6393
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6391, metadata !DIExpression()), !dbg !6392
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 13, !dbg !6394
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6394
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6396
  br i1 %7, label %10, label %8, !dbg !6397

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6398
  br label %10, !dbg !6399

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6392
  ret i32 %11, !dbg !6400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6401 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6403, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.value(metadata i8* %1, metadata !6404, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.value(metadata i32 1, metadata !6405, metadata !DIExpression()), !dbg !6407
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6408
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6408
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6408
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6406, metadata !DIExpression()), !dbg !6407
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 6, !dbg !6409
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6409
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6411
  br i1 %8, label %11, label %9, !dbg !6412

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6413
  br label %11, !dbg !6414

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6407
  ret i32 %12, !dbg !6415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6416 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6418, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i8 %1, metadata !6419, metadata !DIExpression()), !dbg !6421
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6422
  %4 = load i16, i16* %3, align 2, !dbg !6422
  %5 = zext i16 %4 to i32, !dbg !6423
  %6 = add nuw nsw i32 %5, 1, !dbg !6424
  call void @llvm.dbg.value(metadata i32 %6, metadata !6420, metadata !DIExpression()), !dbg !6421
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6425
  %8 = load i32, i32* %7, align 4, !dbg !6425
  %9 = icmp ult i32 %6, %8, !dbg !6427
  %10 = select i1 %9, i32 %6, i32 0, !dbg !6428
  call void @llvm.dbg.value(metadata i32 %10, metadata !6420, metadata !DIExpression()), !dbg !6421
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6429
  %12 = load i16, i16* %11, align 4, !dbg !6429
  %13 = zext i16 %12 to i32, !dbg !6431
  %14 = icmp eq i32 %10, %13, !dbg !6432
  br i1 %14, label %15, label %17, !dbg !6433

15:                                               ; preds = %2
  %16 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef nonnull %0, i8 noundef zeroext 126) #26, !dbg !6434
  br label %23, !dbg !6436

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6437
  %19 = load i8*, i8** %18, align 4, !dbg !6437
  %20 = getelementptr inbounds i8, i8* %19, i32 %5, !dbg !6438
  store i8 %1, i8* %20, align 1, !dbg !6439
  %21 = trunc i32 %10 to i16, !dbg !6440
  store i16 %21, i16* %3, align 2, !dbg !6441
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6442
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %22) #26, !dbg !6443
  br label %23, !dbg !6444

23:                                               ; preds = %17, %15
  ret void, !dbg !6445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6448, metadata !DIExpression()), !dbg !6450
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6451
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6451
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6451
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6449, metadata !DIExpression()), !dbg !6450
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 9, !dbg !6452
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6452
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6454
  br i1 %7, label %10, label %8, !dbg !6455

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6456
  br label %10, !dbg !6457

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6450
  ret i32 %11, !dbg !6458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6459 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6461, metadata !DIExpression()), !dbg !6462
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6463, !srcloc !6465
  tail call fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6466
  ret void, !dbg !6467
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6468 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6470, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.value(metadata i8* %1, metadata !6471, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.value(metadata i32 1, metadata !6472, metadata !DIExpression()), !dbg !6474
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6475
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6475
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6475
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6473, metadata !DIExpression()), !dbg !6474
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 5, !dbg !6476
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6476
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6478
  br i1 %8, label %11, label %9, !dbg !6479

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6480
  br label %11, !dbg !6481

11:                                               ; preds = %2, %9
  ret void, !dbg !6482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_give(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !6483 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6487, metadata !DIExpression()), !dbg !6488
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6489, !srcloc !6491
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #25, !dbg !6492
  ret void, !dbg !6493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6494 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6496, metadata !DIExpression()), !dbg !6498
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6499
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6499
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6499
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6497, metadata !DIExpression()), !dbg !6498
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 8, !dbg !6500
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6500
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6502
  br i1 %7, label %9, label %8, !dbg !6503

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6504
  br label %9, !dbg !6506

9:                                                ; preds = %8, %1
  ret void, !dbg !6507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6508 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6510, metadata !DIExpression()), !dbg !6512
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6513
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6513
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6513
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6511, metadata !DIExpression()), !dbg !6512
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 17, !dbg !6514
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6514
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6516
  br i1 %7, label %10, label %8, !dbg !6517

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6518
  br label %10, !dbg !6519

10:                                               ; preds = %1, %8
  ret void, !dbg !6520
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_rx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6521 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6525, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata i8* %1, metadata !6526, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata i32 %2, metadata !6527, metadata !DIExpression()), !dbg !6528
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6529
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6529
  tail call fastcc void @uart_irq_rx_disable(%struct.device* noundef %5) #26, !dbg !6530
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6531
  store i8* %1, i8** %6, align 4, !dbg !6532
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6533
  store i32 %2, i32* %7, align 4, !dbg !6534
  %8 = icmp eq i32 %2, 0, !dbg !6535
  br i1 %8, label %12, label %9, !dbg !6537

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6538
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %10, i32 noundef 0) #26, !dbg !6540
  %11 = load %struct.device*, %struct.device** %4, align 4, !dbg !6541
  tail call fastcc void @uart_irq_rx_enable(%struct.device* noundef %11) #26, !dbg !6542
  br label %12, !dbg !6543

12:                                               ; preds = %9, %3
  ret i32 0, !dbg !6544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6545 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6547, metadata !DIExpression()), !dbg !6548
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6549, !srcloc !6551
  tail call fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) #26, !dbg !6552
  ret void, !dbg !6553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !6554 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6558, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i32 %1, metadata !6559, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i32 -1, metadata !6560, metadata !DIExpression()), !dbg !6561
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6562, !srcloc !6564
  %3 = tail call i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef -1) #25, !dbg !6565
  ret void, !dbg !6566
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6567 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6569, metadata !DIExpression()), !dbg !6570
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6571, !srcloc !6573
  tail call fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) #26, !dbg !6574
  ret void, !dbg !6575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6576 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6578, metadata !DIExpression()), !dbg !6580
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6581
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6581
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6581
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6579, metadata !DIExpression()), !dbg !6580
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 10, !dbg !6582
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6582
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6584
  br i1 %7, label %9, label %8, !dbg !6585

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6586
  br label %9, !dbg !6588

9:                                                ; preds = %8, %1
  ret void, !dbg !6589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6590 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6592, metadata !DIExpression()), !dbg !6594
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6595
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6595
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6595
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6593, metadata !DIExpression()), !dbg !6594
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 11, !dbg !6596
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6596
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6598
  br i1 %7, label %9, label %8, !dbg !6599

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6600
  br label %9, !dbg !6602

9:                                                ; preds = %8, %1
  ret void, !dbg !6603
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_tx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6604 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6606, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i8* %1, metadata !6607, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i32 %2, metadata !6608, metadata !DIExpression()), !dbg !6609
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6610
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6610
  tail call fastcc void @uart_irq_tx_disable(%struct.device* noundef %5) #26, !dbg !6611
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6612
  store i8* %1, i8** %6, align 4, !dbg !6613
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6614
  store i32 %2, i32* %7, align 4, !dbg !6615
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !6616
  %9 = add i32 %2, -1, !dbg !6617
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %8, i32 noundef %9) #26, !dbg !6618
  ret i32 0, !dbg !6619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_write(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6620 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6624, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.value(metadata i8* %1, metadata !6625, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.value(metadata i32 %2, metadata !6626, metadata !DIExpression()), !dbg !6627
  %4 = tail call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6628
  ret i32 %4, !dbg !6629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_read(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6630 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6634, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata i8* %1, metadata !6635, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata i32 %2, metadata !6636, metadata !DIExpression()), !dbg !6637
  %4 = tail call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6638
  ret i32 %4, !dbg !6639
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_putchar(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !6640 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !6642, metadata !DIExpression()), !dbg !6643
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.value(metadata i8* %2, metadata !6642, metadata !DIExpression(DW_OP_deref)), !dbg !6643
  %3 = call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %2, i32 noundef 1) #25, !dbg !6644
  ret i32 %3, !dbg !6645
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_getchar() local_unnamed_addr #1 !dbg !6646 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6652
  call void @llvm.dbg.value(metadata i8* %1, metadata !6650, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  %2 = call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %1, i32 noundef 1) #25, !dbg !6654
  call void @llvm.dbg.value(metadata i32 %2, metadata !6651, metadata !DIExpression()), !dbg !6653
  %3 = icmp slt i32 %2, 0, !dbg !6655
  %4 = load i8, i8* %1, align 1, !dbg !6657
  %5 = zext i8 %4 to i32, !dbg !6657
  %6 = select i1 %3, i32 %2, i32 %5, !dbg !6657
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6658
  ret i32 %6, !dbg !6658
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_init() local_unnamed_addr #1 !dbg !6659 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6661, metadata !DIExpression()), !dbg !6666
  %1 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !6667
  br i1 %1, label %2, label %13, !dbg !6669

2:                                                ; preds = %0
  %3 = tail call i32 @tty_init(%struct.tty_serial* noundef nonnull @console_serial, %struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !6670
  call void @llvm.dbg.value(metadata i32 %3, metadata !6662, metadata !DIExpression()), !dbg !6666
  %4 = icmp eq i32 %3, 0, !dbg !6671
  br i1 %4, label %5, label %13, !dbg !6673

5:                                                ; preds = %2
  %6 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6674
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %6, metadata !6663, metadata !DIExpression()), !dbg !6675
  %7 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %6, i32 0, i32 18, !dbg !6676
  %8 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %7, align 4, !dbg !6676
  %9 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %8, null, !dbg !6678
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @tty_set_tx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([512 x i8], [512 x i8]* @console_txbuf, i32 0, i32 0), i32 noundef 512) #25, !dbg !6679
  %12 = tail call i32 @tty_set_rx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @console_rxbuf, i32 0, i32 0), i32 noundef 64) #25, !dbg !6680
  br label %13, !dbg !6681

13:                                               ; preds = %2, %0, %5, %10
  %14 = phi i32 [ 0, %10 ], [ -134, %5 ], [ -19, %0 ], [ %3, %2 ]
  ret i32 %14, !dbg !6682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !6683 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6688, metadata !DIExpression()), !dbg !6689
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6690, !srcloc !6692
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !6693
  ret i1 %1, !dbg !6694
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !6695 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6697, metadata !DIExpression()), !dbg !6698
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !6699
  ret i1 %1, !dbg !6700
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6750, metadata !DIExpression()), !dbg !6752
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6751, metadata !DIExpression()), !dbg !6752
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6753
  ret void, !dbg !6754
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6755 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6772, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6773, metadata !DIExpression()), !dbg !6775
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6776
  %4 = load i32, i32* %3, align 4, !dbg !6776
  call void @llvm.dbg.value(metadata i32 %4, metadata !6774, metadata !DIExpression()), !dbg !6775
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6777
  ret void, !dbg !6778
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6779 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6783, metadata !DIExpression()), !dbg !6786
  call void @llvm.dbg.value(metadata i8* %0, metadata !6784, metadata !DIExpression()), !dbg !6786
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6787
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6787
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6785, metadata !DIExpression()), !dbg !6788
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6788
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6789
  %5 = bitcast i8* %4 to i32*, !dbg !6789
  %6 = load i32, i32* %5, align 4, !dbg !6789
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6790
  store i32 %6, i32* %7, align 4, !dbg !6791
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6792
  unreachable, !dbg !6793
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6797, metadata !DIExpression()), !dbg !6798
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6799
  ret void, !dbg !6800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6805, metadata !DIExpression()), !dbg !6806
  %2 = icmp sgt i32 %0, -1, !dbg !6807
  br i1 %2, label %3, label %8, !dbg !6809

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6810, !srcloc !6812
  %4 = and i32 %0, 31, !dbg !6813
  %5 = shl nuw i32 1, %4, !dbg !6814
  %6 = lshr i32 %0, 5, !dbg !6815
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6816
  store volatile i32 %5, i32* %7, align 4, !dbg !6817
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6818, !srcloc !6819
  br label %8, !dbg !6820

8:                                                ; preds = %3, %1
  ret void, !dbg !6821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6824, metadata !DIExpression()), !dbg !6825
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6826
  ret void, !dbg !6827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6830, metadata !DIExpression()), !dbg !6831
  %2 = icmp sgt i32 %0, -1, !dbg !6832
  br i1 %2, label %3, label %8, !dbg !6834

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6835
  %5 = shl nuw i32 1, %4, !dbg !6837
  %6 = lshr i32 %0, 5, !dbg !6838
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6839
  store volatile i32 %5, i32* %7, align 4, !dbg !6840
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6841, !srcloc !6845
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6846, !srcloc !6849
  br label %8, !dbg !6850

8:                                                ; preds = %3, %1
  ret void, !dbg !6851
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6856, metadata !DIExpression()), !dbg !6857
  %2 = lshr i32 %0, 5, !dbg !6858
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6859
  %4 = load volatile i32, i32* %3, align 4, !dbg !6859
  %5 = and i32 %0, 31, !dbg !6860
  %6 = shl nuw i32 1, %5, !dbg !6860
  %7 = and i32 %4, %6, !dbg !6861
  ret i32 %7, !dbg !6862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6863 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6867, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata i32 %1, metadata !6868, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata i32 %2, metadata !6869, metadata !DIExpression()), !dbg !6870
  %4 = add i32 %1, 1, !dbg !6871
  call void @llvm.dbg.value(metadata i32 %4, metadata !6868, metadata !DIExpression()), !dbg !6870
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6874
  ret void, !dbg !6875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6880, metadata !DIExpression()), !dbg !6882
  call void @llvm.dbg.value(metadata i32 %1, metadata !6881, metadata !DIExpression()), !dbg !6882
  %3 = trunc i32 %1 to i8, !dbg !6883
  %4 = shl i8 %3, 4, !dbg !6883
  %5 = and i32 %0, 15, !dbg !6885
  %6 = add nsw i32 %5, -4, !dbg !6885
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6885
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6885
  %9 = icmp slt i32 %0, 0, !dbg !6885
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6885
  store volatile i8 %4, i8* %10, align 1, !dbg !6883
  ret void, !dbg !6886
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6887 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6889, metadata !DIExpression()), !dbg !6890
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6891
  ret void, !dbg !6892
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6893 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6895
  tail call void @z_arm_int_exit() #25, !dbg !6896
  ret void, !dbg !6897
}

; Function Attrs: optsize
declare !dbg !6898 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6899 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6901 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6903
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6904
  tail call void @z_bss_zero() #25, !dbg !6905
  tail call void @z_data_copy() #25, !dbg !6906
  tail call void @z_arm_interrupt_init() #25, !dbg !6907
  tail call void @z_cstart() #28, !dbg !6908
  unreachable, !dbg !6908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6909 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6910
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6911, !srcloc !6914
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6915, !srcloc !6918
  ret void, !dbg !6919
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6920 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6921
  %2 = and i32 %1, -15728641, !dbg !6921
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6921
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !6922, !srcloc !6929
  call void @llvm.dbg.value(metadata i32 %3, metadata !6927, metadata !DIExpression()) #24, !dbg !6930
  %4 = and i32 %3, -5, !dbg !6931
  call void @llvm.dbg.value(metadata i32 %4, metadata !6932, metadata !DIExpression()) #24, !dbg !6937
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !6939, !srcloc !6940
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6941, !srcloc !6918
  ret void, !dbg !6943
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6944 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6947, metadata !DIExpression()), !dbg !6948
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6949
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6950
  store i32 %0, i32* %3, align 4, !dbg !6951
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6952
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6953
  store i32 %4, i32* %5, align 4, !dbg !6954
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6955
  %7 = or i32 %6, 268435456, !dbg !6955
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6955
  call void @llvm.dbg.value(metadata i32 0, metadata !6956, metadata !DIExpression()) #24, !dbg !6959
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6961, !srcloc !6962
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6963
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6964
  %10 = load i32, i32* %9, align 4, !dbg !6964
  ret i32 %10, !dbg !6965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6966 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7076, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7077, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata i8* %2, metadata !7078, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7079, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata i8* %4, metadata !7080, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata i8* %5, metadata !7081, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata i8* %6, metadata !7082, metadata !DIExpression()), !dbg !7084
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7085
  call void @llvm.dbg.value(metadata i8* %8, metadata !7083, metadata !DIExpression()), !dbg !7084
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7086
  %10 = bitcast i8* %9 to i32*, !dbg !7086
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7087
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7088
  %12 = bitcast i8* %8 to i32*, !dbg !7089
  store i32 %11, i32* %12, align 4, !dbg !7090
  %13 = ptrtoint i8* %4 to i32, !dbg !7091
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7092
  %15 = bitcast i8* %14 to i32*, !dbg !7092
  store i32 %13, i32* %15, align 4, !dbg !7093
  %16 = ptrtoint i8* %5 to i32, !dbg !7094
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7095
  %18 = bitcast i8* %17 to i32*, !dbg !7095
  store i32 %16, i32* %18, align 4, !dbg !7096
  %19 = ptrtoint i8* %6 to i32, !dbg !7097
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7098
  %21 = bitcast i8* %20 to i32*, !dbg !7098
  store i32 %19, i32* %21, align 4, !dbg !7099
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7100
  %23 = bitcast i8* %22 to i32*, !dbg !7100
  store i32 16777216, i32* %23, align 4, !dbg !7101
  %24 = ptrtoint i8* %8 to i32, !dbg !7102
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7103
  store i32 %24, i32* %25, align 8, !dbg !7104
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7105
  store i32 0, i32* %26, align 4, !dbg !7106
  ret void, !dbg !7107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !7108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7113, metadata !DIExpression()), !dbg !7119
  call void @llvm.dbg.value(metadata i32 %1, metadata !7114, metadata !DIExpression()), !dbg !7119
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7120
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7115, metadata !DIExpression()), !dbg !7119
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7121
  br i1 %4, label %19, label %5, !dbg !7123

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7118, metadata !DIExpression()), !dbg !7119
  %6 = icmp eq i32 %0, -22, !dbg !7124
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7124
  %8 = load i32, i32* %7, align 4, !dbg !7124
  br i1 %6, label %16, label %9, !dbg !7126

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7124
  %11 = icmp ule i32 %10, %0, !dbg !7124
  %12 = icmp ugt i32 %8, %0, !dbg !7124
  %13 = and i1 %12, %11, !dbg !7124
  %14 = icmp ugt i32 %8, %1, !dbg !7124
  %15 = and i1 %14, %13, !dbg !7124
  br i1 %15, label %18, label %19, !dbg !7124

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7124
  br i1 %17, label %18, label %19, !dbg !7126

18:                                               ; preds = %9, %16
  br label %19, !dbg !7127

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7119
  ret i32 %20, !dbg !7129
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7130 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7134, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata i8* %1, metadata !7135, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7136, metadata !DIExpression()), !dbg !7137
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7138
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7139
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !7140, !srcloc !7141
  unreachable, !dbg !7142
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7143 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7161, metadata !DIExpression()), !dbg !7171
  call void @llvm.dbg.value(metadata i32 %1, metadata !7162, metadata !DIExpression()), !dbg !7171
  call void @llvm.dbg.value(metadata i32 %2, metadata !7163, metadata !DIExpression()), !dbg !7171
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7164, metadata !DIExpression()), !dbg !7171
  call void @llvm.dbg.value(metadata i32 0, metadata !7165, metadata !DIExpression()), !dbg !7171
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7172
  %9 = and i32 %8, 511, !dbg !7173
  call void @llvm.dbg.value(metadata i32 %9, metadata !7166, metadata !DIExpression()), !dbg !7171
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7174
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7174
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7175
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7175
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7170, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.value(metadata i32 0, metadata !7177, metadata !DIExpression()) #24, !dbg !7180
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7182, !srcloc !7183
  call void @llvm.dbg.value(metadata i8* %6, metadata !7168, metadata !DIExpression(DW_OP_deref)), !dbg !7171
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7184
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7169, metadata !DIExpression()), !dbg !7171
  call void @llvm.dbg.value(metadata i8* %5, metadata !7167, metadata !DIExpression(DW_OP_deref)), !dbg !7171
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7185
  call void @llvm.dbg.value(metadata i32 %12, metadata !7165, metadata !DIExpression()), !dbg !7171
  %13 = load i8, i8* %5, align 1, !dbg !7186, !range !7188
  call void @llvm.dbg.value(metadata i8 %13, metadata !7167, metadata !DIExpression()), !dbg !7171
  %14 = icmp eq i8 %13, 0, !dbg !7186
  br i1 %14, label %15, label %32, !dbg !7189

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7190
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7191
  %18 = load i8, i8* %6, align 1, !dbg !7192, !range !7188
  call void @llvm.dbg.value(metadata i8 %18, metadata !7168, metadata !DIExpression()), !dbg !7171
  %19 = icmp eq i8 %18, 0, !dbg !7192
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7194
  %21 = load i32, i32* %20, align 4, !dbg !7194
  br i1 %19, label %27, label %22, !dbg !7195

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7196
  %24 = icmp eq i32 %23, 0, !dbg !7199
  br i1 %24, label %25, label %31, !dbg !7200

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7201
  br label %29, !dbg !7203

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7204
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7194
  br label %31, !dbg !7206

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7206
  br label %32, !dbg !7207

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7207
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7207
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7207
  ret void, !dbg !7207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !7208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7213, metadata !DIExpression()), !dbg !7219
  call void @llvm.dbg.value(metadata i32 %1, metadata !7214, metadata !DIExpression()), !dbg !7219
  call void @llvm.dbg.value(metadata i32 %2, metadata !7215, metadata !DIExpression()), !dbg !7219
  call void @llvm.dbg.value(metadata i8* %3, metadata !7216, metadata !DIExpression()), !dbg !7219
  call void @llvm.dbg.value(metadata i8 0, metadata !7217, metadata !DIExpression()), !dbg !7219
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7218, metadata !DIExpression()), !dbg !7219
  store i8 0, i8* %3, align 1, !dbg !7220
  %5 = icmp ult i32 %2, -16777216, !dbg !7221
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !7223
  br i1 %8, label %16, label %9, !dbg !7223

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !7224
  %11 = icmp eq i32 %10, 0, !dbg !7224
  br i1 %11, label %12, label %13, !dbg !7226

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !7218, metadata !DIExpression()), !dbg !7219
  store i8 1, i8* %3, align 1, !dbg !7229
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !7219
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !7218, metadata !DIExpression()), !dbg !7219
  br label %16, !dbg !7232

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !7219
  ret %struct.__esf* %17, !dbg !7233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7234 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7238, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.value(metadata i32 %1, metadata !7239, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.value(metadata i8* %2, metadata !7240, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.value(metadata i32 0, metadata !7241, metadata !DIExpression()), !dbg !7242
  store i8 0, i8* %2, align 1, !dbg !7243
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7244

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7245
  call void @llvm.dbg.value(metadata i32 %5, metadata !7241, metadata !DIExpression()), !dbg !7242
  br label %11, !dbg !7247

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7248
  call void @llvm.dbg.value(metadata i32 %7, metadata !7241, metadata !DIExpression()), !dbg !7242
  br label %11, !dbg !7249

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7250
  call void @llvm.dbg.value(metadata i32 0, metadata !7241, metadata !DIExpression()), !dbg !7242
  br label %11, !dbg !7251

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7252
  call void @llvm.dbg.value(metadata i32 0, metadata !7241, metadata !DIExpression()), !dbg !7242
  br label %11, !dbg !7253

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7254
  br label %11, !dbg !7255

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !7256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7257 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7261, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.value(metadata i8* %1, metadata !7262, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.value(metadata i32 0, metadata !7263, metadata !DIExpression()), !dbg !7264
  store i8 0, i8* %1, align 1, !dbg !7265
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7266
  %4 = and i32 %3, 2, !dbg !7268
  %5 = icmp eq i32 %4, 0, !dbg !7269
  br i1 %5, label %6, label %33, !dbg !7270

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7271
  %8 = icmp sgt i32 %7, -1, !dbg !7273
  br i1 %8, label %9, label %33, !dbg !7274

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7275
  %11 = and i32 %10, 1073741824, !dbg !7277
  %12 = icmp eq i32 %11, 0, !dbg !7278
  br i1 %12, label %33, label %13, !dbg !7279

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7280
  br i1 %14, label %15, label %18, !dbg !7283

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7284
  %17 = load i32, i32* %16, align 4, !dbg !7284
  call void @llvm.dbg.value(metadata i32 %17, metadata !7263, metadata !DIExpression()), !dbg !7264
  br label %33, !dbg !7286

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7287
  %20 = and i32 %19, 255, !dbg !7289
  %21 = icmp eq i32 %20, 0, !dbg !7290
  br i1 %21, label %24, label %22, !dbg !7291

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7292
  call void @llvm.dbg.value(metadata i32 %23, metadata !7263, metadata !DIExpression()), !dbg !7264
  br label %33, !dbg !7294

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7295
  %26 = and i32 %25, 65280, !dbg !7297
  %27 = icmp eq i32 %26, 0, !dbg !7298
  br i1 %27, label %29, label %28, !dbg !7299

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7300
  call void @llvm.dbg.value(metadata i32 0, metadata !7263, metadata !DIExpression()), !dbg !7264
  br label %33, !dbg !7302

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7303
  %31 = icmp ult i32 %30, 65536, !dbg !7305
  br i1 %31, label %33, label %32, !dbg !7306

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !7307
  call void @llvm.dbg.value(metadata i32 0, metadata !7263, metadata !DIExpression()), !dbg !7264
  br label %33, !dbg !7309

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !7264
  call void @llvm.dbg.value(metadata i32 %34, metadata !7263, metadata !DIExpression()), !dbg !7264
  ret i32 %34, !dbg !7310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7311 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7313, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.value(metadata i32 %1, metadata !7314, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.value(metadata i8* %2, metadata !7315, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.value(metadata i32 0, metadata !7316, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.value(metadata i32 -22, metadata !7317, metadata !DIExpression()), !dbg !7326
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7327
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7329
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7331
  %7 = and i32 %6, 2, !dbg !7332
  %8 = icmp eq i32 %7, 0, !dbg !7333
  br i1 %8, label %19, label %9, !dbg !7334

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7335
  call void @llvm.dbg.value(metadata i32 %10, metadata !7318, metadata !DIExpression()), !dbg !7336
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7337
  %12 = and i32 %11, 128, !dbg !7339
  %13 = icmp eq i32 %12, 0, !dbg !7340
  br i1 %13, label %19, label %14, !dbg !7341

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !7317, metadata !DIExpression()), !dbg !7326
  %15 = icmp eq i32 %1, 0, !dbg !7342
  br i1 %15, label %19, label %16, !dbg !7345

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7346
  %18 = and i32 %17, -129, !dbg !7346
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7346
  br label %19, !dbg !7348

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !7326
  call void @llvm.dbg.value(metadata i32 %20, metadata !7317, metadata !DIExpression()), !dbg !7326
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7349
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7351
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7353
  %24 = and i32 %23, 16, !dbg !7354
  %25 = icmp eq i32 %24, 0, !dbg !7354
  br i1 %25, label %26, label %30, !dbg !7355

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7356
  %28 = and i32 %27, 2, !dbg !7357
  %29 = icmp eq i32 %28, 0, !dbg !7357
  br i1 %29, label %39, label %30, !dbg !7358

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7359
  %32 = and i32 %31, 2048, !dbg !7360
  %33 = icmp eq i32 %32, 0, !dbg !7360
  br i1 %33, label %39, label %34, !dbg !7361

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !7362
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !7363
  call void @llvm.dbg.value(metadata i32 %36, metadata !7321, metadata !DIExpression()), !dbg !7364
  %37 = icmp eq i32 %36, 0, !dbg !7365
  br i1 %37, label %39, label %38, !dbg !7367

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !7368, metadata !DIExpression()) #24, !dbg !7371
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !7374, !srcloc !7375
  call void @llvm.dbg.value(metadata i32 2, metadata !7316, metadata !DIExpression()), !dbg !7326
  br label %39, !dbg !7376

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !7326
  call void @llvm.dbg.value(metadata i32 %40, metadata !7316, metadata !DIExpression()), !dbg !7326
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7377
  %42 = and i32 %41, 32, !dbg !7379
  %43 = icmp eq i32 %42, 0, !dbg !7380
  br i1 %43, label %47, label %44, !dbg !7381

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7382
  %46 = and i32 %45, -8193, !dbg !7382
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7382
  br label %47, !dbg !7384

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7385
  %49 = or i32 %48, 255, !dbg !7385
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7385
  store i8 0, i8* %2, align 1, !dbg !7386
  ret i32 %40, !dbg !7387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !7388 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7392, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.value(metadata i32 %0, metadata !7393, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.value(metadata i8* %1, metadata !7394, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.value(metadata i32 0, metadata !7395, metadata !DIExpression()), !dbg !7399
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7400
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7402
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7404
  %6 = and i32 %5, 512, !dbg !7405
  %7 = icmp eq i32 %6, 0, !dbg !7405
  br i1 %7, label %18, label %8, !dbg !7406

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7407
  call void @llvm.dbg.value(metadata i32 %9, metadata !7396, metadata !DIExpression()), !dbg !7408
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7409
  %11 = and i32 %10, 32768, !dbg !7411
  %12 = icmp ne i32 %11, 0, !dbg !7412
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7413
  br i1 %14, label %15, label %18, !dbg !7413

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7414
  %17 = and i32 %16, -32769, !dbg !7414
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7414
  br label %18, !dbg !7418

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7419
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7421
  %21 = and i32 %20, 256, !dbg !7423
  %22 = icmp eq i32 %21, 0, !dbg !7424
  br i1 %22, label %23, label %25, !dbg !7425

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7426
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7428
  %27 = or i32 %26, 65280, !dbg !7428
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7428
  store i8 0, i8* %1, align 1, !dbg !7429
  ret void, !dbg !7430
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !7431 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7437, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i32 0, metadata !7438, metadata !DIExpression()), !dbg !7439
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7440
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7442
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7444
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7446
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7448
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7450
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7452
  %8 = or i32 %7, -65536, !dbg !7452
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7452
  ret void, !dbg !7453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !7454 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7458, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i8* %0, metadata !7459, metadata !DIExpression()), !dbg !7460
  store i8 0, i8* %0, align 1, !dbg !7461
  ret void, !dbg !7462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7463 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7467, metadata !DIExpression()), !dbg !7470
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7471
  %3 = load i32, i32* %2, align 4, !dbg !7471
  %4 = inttoptr i32 %3 to i16*, !dbg !7472
  call void @llvm.dbg.value(metadata i16* %4, metadata !7468, metadata !DIExpression()), !dbg !7470
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7473
  %6 = or i32 %5, 256, !dbg !7473
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7473
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7474, !srcloc !7477
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7478, !srcloc !7481
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7482
  %8 = load i16, i16* %7, align 2, !dbg !7483
  call void @llvm.dbg.value(metadata i16 %8, metadata !7469, metadata !DIExpression()), !dbg !7470
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7484
  %10 = and i32 %9, -257, !dbg !7484
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7484
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7485, !srcloc !7477
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7487, !srcloc !7481
  %11 = icmp eq i16 %8, -8446, !dbg !7489
  ret i1 %11, !dbg !7491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7492 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7493
  %2 = or i32 %1, 16, !dbg !7493
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7493
  ret void, !dbg !7494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7495 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7498, metadata !DIExpression()), !dbg !7499
  br label %1, !dbg !7500

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7498, metadata !DIExpression()), !dbg !7499
  tail call fastcc void @__NVIC_SetPriority.19(i32 noundef %2) #26, !dbg !7502
  %3 = add nuw nsw i32 %2, 1, !dbg !7505
  call void @llvm.dbg.value(metadata i32 %3, metadata !7498, metadata !DIExpression()), !dbg !7499
  %4 = icmp eq i32 %3, 82, !dbg !7506
  br i1 %4, label %5, label %1, !dbg !7500, !llvm.loop !7507

5:                                                ; preds = %1
  ret void, !dbg !7509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.19(i32 noundef %0) unnamed_addr #15 !dbg !7510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7512, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i32 1, metadata !7513, metadata !DIExpression()), !dbg !7514
  %2 = and i32 %0, 15, !dbg !7515
  %3 = add nsw i32 %2, -4, !dbg !7515
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7515
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7515
  %6 = icmp slt i32 %0, 0, !dbg !7515
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7515
  store volatile i8 16, i8* %7, align 1, !dbg !7516
  ret void, !dbg !7518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7519 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7625, metadata !DIExpression()), !dbg !7626
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7627
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7629
  br i1 %3, label %4, label %12, !dbg !7630

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7631, !srcloc !7643
  call void @llvm.dbg.value(metadata i32 %5, metadata !7634, metadata !DIExpression()) #24, !dbg !7644
  %6 = icmp eq i32 %5, 0, !dbg !7645
  br i1 %6, label %12, label %7, !dbg !7646

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7647
  %9 = or i32 %8, 268435456, !dbg !7647
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7647
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7649
  %11 = and i32 %10, -32769, !dbg !7649
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7649
  br label %12, !dbg !7650

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7651
  ret void, !dbg !7652
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7653 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7654
  ret void, !dbg !7655
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !361 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !480, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.value(metadata i8 0, metadata !481, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.value(metadata i32 64, metadata !483, metadata !DIExpression()), !dbg !7656
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7657
  %3 = load i32, i32* %2, align 4, !dbg !7657
  %4 = add i32 %3, -64, !dbg !7659
  call void @llvm.dbg.value(metadata i32 %4, metadata !482, metadata !DIExpression()), !dbg !7656
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7660
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7661
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7662
  call void @llvm.dbg.value(metadata i8 1, metadata !481, metadata !DIExpression()), !dbg !7656
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7663
  ret void, !dbg !7664
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7665 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7666
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7667, !srcloc !7670
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7671, !srcloc !7674
  ret void, !dbg !7675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7676 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7677, !srcloc !7680
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7681
  ret void, !dbg !7682
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7683 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7698, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.value(metadata i8 %1, metadata !7699, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.value(metadata i32 %2, metadata !7700, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.value(metadata i32 %3, metadata !7701, metadata !DIExpression()), !dbg !7702
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7703
  ret void, !dbg !7705
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7706 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7711, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata i8 %1, metadata !7712, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata i32 undef, metadata !7713, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata i32 undef, metadata !7714, metadata !DIExpression()), !dbg !7716
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7717
  call void @llvm.dbg.value(metadata i8 %3, metadata !7715, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7716
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7718
  call void @llvm.dbg.value(metadata i32 %4, metadata !7715, metadata !DIExpression()), !dbg !7716
  %5 = trunc i32 %4 to i8, !dbg !7719
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7720
  ret void, !dbg !7721
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7722 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7726, metadata !DIExpression()), !dbg !7732
  call void @llvm.dbg.value(metadata i8 %1, metadata !7727, metadata !DIExpression()), !dbg !7732
  call void @llvm.dbg.value(metadata i8 %2, metadata !7728, metadata !DIExpression()), !dbg !7732
  call void @llvm.dbg.value(metadata i1 %3, metadata !7729, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7732
  %5 = zext i8 %2 to i32, !dbg !7733
  call void @llvm.dbg.value(metadata i32 %5, metadata !7731, metadata !DIExpression()), !dbg !7732
  call void @llvm.dbg.value(metadata i32 0, metadata !7730, metadata !DIExpression()), !dbg !7732
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7731, metadata !DIExpression()), !dbg !7732
  call void @llvm.dbg.value(metadata i32 0, metadata !7730, metadata !DIExpression()), !dbg !7732
  %7 = icmp eq i8 %1, 0, !dbg !7734
  br i1 %7, label %29, label %8, !dbg !7737

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7731, metadata !DIExpression()), !dbg !7732
  call void @llvm.dbg.value(metadata i32 %10, metadata !7730, metadata !DIExpression()), !dbg !7732
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7738
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7741
  %13 = load i32, i32* %12, align 4, !dbg !7741
  %14 = icmp eq i32 %13, 0, !dbg !7742
  br i1 %14, label %25, label %15, !dbg !7743

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7744

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7746
  %18 = icmp eq i32 %17, 0, !dbg !7746
  br i1 %18, label %29, label %19, !dbg !7747

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7748
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7749
  call void @llvm.dbg.value(metadata i32 %21, metadata !7731, metadata !DIExpression()), !dbg !7732
  %22 = icmp eq i32 %21, -22, !dbg !7750
  br i1 %22, label %29, label %23, !dbg !7752

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7753
  call void @llvm.dbg.value(metadata i32 %24, metadata !7731, metadata !DIExpression()), !dbg !7732
  br label %25, !dbg !7754

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7732
  call void @llvm.dbg.value(metadata i32 %26, metadata !7731, metadata !DIExpression()), !dbg !7732
  %27 = add nuw nsw i32 %10, 1, !dbg !7755
  call void @llvm.dbg.value(metadata i32 %27, metadata !7730, metadata !DIExpression()), !dbg !7732
  %28 = icmp eq i32 %27, %6, !dbg !7734
  br i1 %28, label %29, label %8, !dbg !7737, !llvm.loop !7756

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7732
  ret i32 %30, !dbg !7758
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7759 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7763, metadata !DIExpression()), !dbg !7765
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7766
  %3 = load i32, i32* %2, align 4, !dbg !7766
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7767, !range !3892
  %5 = icmp ult i32 %4, 2, !dbg !7767
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7768
  br i1 %7, label %8, label %15, !dbg !7768

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7769
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7770
  %11 = load i32, i32* %10, align 4, !dbg !7770
  %12 = and i32 %11, %9, !dbg !7771
  %13 = icmp eq i32 %12, 0, !dbg !7772
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7764, metadata !DIExpression()), !dbg !7765
  ret i32 %16, !dbg !7773
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7774 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7778, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7779, metadata !DIExpression()), !dbg !7781
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7782
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7782
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7780, metadata !DIExpression()), !dbg !7783
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7784
  %6 = load i32, i32* %5, align 4, !dbg !7784
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7785
  store i32 %6, i32* %7, align 4, !dbg !7786
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7787
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7788
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7789
  %11 = load i32, i32* %10, align 4, !dbg !7789
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7790
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7791
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7792
  ret i32 %12, !dbg !7793
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7794 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7801, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7802, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i32 undef, metadata !7803, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i32 %2, metadata !7804, metadata !DIExpression()), !dbg !7805
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7806
  %5 = load i32, i32* %4, align 4, !dbg !7806
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7807
  %7 = or i32 %6, %5, !dbg !7808
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7809
  store i32 %7, i32* %8, align 4, !dbg !7810
  ret void, !dbg !7811
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7812 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7816, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7817, metadata !DIExpression()), !dbg !7818
  %3 = zext i8 %0 to i32, !dbg !7819
  %4 = icmp ugt i8 %0, 7, !dbg !7821
  br i1 %4, label %6, label %5, !dbg !7822

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7823
  br label %6, !dbg !7824

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7818
  ret i32 %7, !dbg !7825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7830, metadata !DIExpression()), !dbg !7832
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7831, metadata !DIExpression()), !dbg !7832
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7833
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7834
  %4 = load i32, i32* %3, align 4, !dbg !7834
  %5 = and i32 %4, -32, !dbg !7835
  %6 = or i32 %5, %0, !dbg !7836
  %7 = or i32 %6, 16, !dbg !7836
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7837
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7838
  %9 = load i32, i32* %8, align 4, !dbg !7838
  %10 = or i32 %9, 1, !dbg !7839
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7840
  ret void, !dbg !7841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7845, metadata !DIExpression()), !dbg !7846
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7847
  ret void, !dbg !7848
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7849 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7853, metadata !DIExpression()), !dbg !7854
  %2 = icmp ult i32 %0, 33, !dbg !7855
  br i1 %2, label %11, label %3, !dbg !7857

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7858
  br i1 %4, label %11, label %5, !dbg !7860

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7861
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7862, !range !3892
  %8 = mul nsw i32 %7, -2, !dbg !7863
  %9 = add nsw i32 %8, 62, !dbg !7863
  %10 = and i32 %9, 62, !dbg !7864
  br label %11, !dbg !7865

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7854
  ret i32 %12, !dbg !7866
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7867 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7871, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i8 %1, metadata !7872, metadata !DIExpression()), !dbg !7873
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7874
  ret void, !dbg !7876
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7877 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7881, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i8 %1, metadata !7882, metadata !DIExpression()), !dbg !7888
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7889
  call void @llvm.dbg.value(metadata i8 %3, metadata !7883, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7888
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7890
  call void @llvm.dbg.value(metadata i32 %4, metadata !7883, metadata !DIExpression()), !dbg !7888
  %5 = icmp ne i32 %4, -22, !dbg !7891
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7892
  call void @llvm.dbg.value(metadata i32 %4, metadata !7884, metadata !DIExpression()), !dbg !7893
  br i1 %7, label %8, label %12, !dbg !7892

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7884, metadata !DIExpression()), !dbg !7893
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7894
  %10 = add i32 %9, 1, !dbg !7897
  call void @llvm.dbg.value(metadata i32 %10, metadata !7884, metadata !DIExpression()), !dbg !7893
  %11 = icmp eq i32 %10, 8, !dbg !7898
  br i1 %11, label %12, label %8, !dbg !7899, !llvm.loop !7900

12:                                               ; preds = %8, %2
  ret void, !dbg !7902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7906, metadata !DIExpression()), !dbg !7907
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7908
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7909
  ret void, !dbg !7910
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7911 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7914
  %2 = icmp ugt i32 %1, 8, !dbg !7916
  br i1 %2, label %14, label %3, !dbg !7917

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7918
  call void @llvm.dbg.value(metadata i32 0, metadata !7913, metadata !DIExpression()), !dbg !7919
  %4 = icmp eq i32 %1, 0, !dbg !7920
  br i1 %4, label %12, label %5, !dbg !7923

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7923

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7913, metadata !DIExpression()), !dbg !7919
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7924
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7926
  %10 = add nuw i32 %8, 1, !dbg !7927
  call void @llvm.dbg.value(metadata i32 %10, metadata !7913, metadata !DIExpression()), !dbg !7919
  %11 = icmp eq i32 %10, %1, !dbg !7920
  br i1 %11, label %12, label %7, !dbg !7923, !llvm.loop !7928

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7930
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7931
  tail call void @arm_core_mpu_enable() #26, !dbg !7932
  br label %14, !dbg !7933

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7919
  ret i32 %15, !dbg !7934
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7935 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7942, metadata !DIExpression()), !dbg !7945
  call void @llvm.dbg.value(metadata i8* %1, metadata !7943, metadata !DIExpression()), !dbg !7945
  call void @llvm.dbg.value(metadata i8* %0, metadata !7944, metadata !DIExpression()), !dbg !7945
  %3 = load i8, i8* %1, align 1, !dbg !7946
  %4 = icmp eq i8 %3, 0, !dbg !7947
  br i1 %4, label %13, label %5, !dbg !7948

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7942, metadata !DIExpression()), !dbg !7945
  call void @llvm.dbg.value(metadata i8* %8, metadata !7943, metadata !DIExpression()), !dbg !7945
  store i8 %6, i8* %7, align 1, !dbg !7949
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7951
  call void @llvm.dbg.value(metadata i8* %9, metadata !7942, metadata !DIExpression()), !dbg !7945
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7952
  call void @llvm.dbg.value(metadata i8* %10, metadata !7943, metadata !DIExpression()), !dbg !7945
  %11 = load i8, i8* %10, align 1, !dbg !7946
  %12 = icmp eq i8 %11, 0, !dbg !7947
  br i1 %12, label %13, label %5, !dbg !7948, !llvm.loop !7953

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7955
  ret i8* %0, !dbg !7956
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7957 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7961, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata i8* %1, metadata !7962, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata i32 %2, metadata !7963, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata i8* %0, metadata !7964, metadata !DIExpression()), !dbg !7965
  %4 = icmp eq i32 %2, 0, !dbg !7966
  br i1 %4, label %22, label %5, !dbg !7967

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7961, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata i32 %7, metadata !7963, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata i8* %8, metadata !7962, metadata !DIExpression()), !dbg !7965
  %9 = load i8, i8* %8, align 1, !dbg !7968
  %10 = icmp eq i8 %9, 0, !dbg !7969
  br i1 %10, label %16, label %11, !dbg !7970

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7971
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7973
  call void @llvm.dbg.value(metadata i8* %12, metadata !7962, metadata !DIExpression()), !dbg !7965
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7974
  call void @llvm.dbg.value(metadata i8* %13, metadata !7961, metadata !DIExpression()), !dbg !7965
  %14 = add i32 %7, -1, !dbg !7975
  call void @llvm.dbg.value(metadata i32 %14, metadata !7963, metadata !DIExpression()), !dbg !7965
  %15 = icmp eq i32 %14, 0, !dbg !7966
  br i1 %15, label %22, label %5, !dbg !7967, !llvm.loop !7976

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7961, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata i32 %18, metadata !7963, metadata !DIExpression()), !dbg !7965
  store i8 0, i8* %17, align 1, !dbg !7978
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7980
  call void @llvm.dbg.value(metadata i8* %19, metadata !7961, metadata !DIExpression()), !dbg !7965
  %20 = add i32 %18, -1, !dbg !7981
  call void @llvm.dbg.value(metadata i32 %20, metadata !7963, metadata !DIExpression()), !dbg !7965
  %21 = icmp eq i32 %20, 0, !dbg !7982
  br i1 %21, label %22, label %16, !dbg !7983, !llvm.loop !7984

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7986
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7987 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7991, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.value(metadata i32 %1, metadata !7992, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.value(metadata i32 %1, metadata !7993, metadata !DIExpression()), !dbg !7994
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7995

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7991, metadata !DIExpression()), !dbg !7994
  %6 = load i8, i8* %5, align 1, !dbg !7996
  %7 = icmp eq i8 %6, %3, !dbg !7997
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7998
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7999
  call void @llvm.dbg.value(metadata i8* %10, metadata !7991, metadata !DIExpression()), !dbg !7994
  br i1 %9, label %11, label %4, !dbg !7998, !llvm.loop !8001

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8003
  ret i8* %12, !dbg !8004
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8005 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8007, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i32 %1, metadata !8008, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i8* null, metadata !8009, metadata !DIExpression()), !dbg !8010
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8011

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8010
  call void @llvm.dbg.value(metadata i8* %6, metadata !8009, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i8* %5, metadata !8007, metadata !DIExpression()), !dbg !8010
  %7 = load i8, i8* %5, align 1, !dbg !8012
  %8 = icmp eq i8 %7, %3, !dbg !8015
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8016
  call void @llvm.dbg.value(metadata i8* %9, metadata !8009, metadata !DIExpression()), !dbg !8010
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8017
  call void @llvm.dbg.value(metadata i8* %10, metadata !8007, metadata !DIExpression()), !dbg !8010
  %11 = icmp eq i8 %7, 0, !dbg !8018
  br i1 %11, label %12, label %4, !dbg !8018, !llvm.loop !8019

12:                                               ; preds = %4
  ret i8* %9, !dbg !8021
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !8022 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8026, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i32 0, metadata !8027, metadata !DIExpression()), !dbg !8028
  %2 = load i8, i8* %0, align 1, !dbg !8029
  %3 = icmp eq i8 %2, 0, !dbg !8030
  br i1 %3, label %11, label %4, !dbg !8031

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8027, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i8* %6, metadata !8026, metadata !DIExpression()), !dbg !8028
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8032
  call void @llvm.dbg.value(metadata i8* %7, metadata !8026, metadata !DIExpression()), !dbg !8028
  %8 = add i32 %5, 1, !dbg !8034
  call void @llvm.dbg.value(metadata i32 %8, metadata !8027, metadata !DIExpression()), !dbg !8028
  %9 = load i8, i8* %7, align 1, !dbg !8029
  %10 = icmp eq i8 %9, 0, !dbg !8030
  br i1 %10, label %11, label %4, !dbg !8031, !llvm.loop !8035

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8028
  ret i32 %12, !dbg !8037
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8038 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8042, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i32 %1, metadata !8043, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i32 0, metadata !8044, metadata !DIExpression()), !dbg !8045
  %3 = load i8, i8* %0, align 1, !dbg !8046
  %4 = icmp ne i8 %3, 0, !dbg !8047
  %5 = icmp ne i32 %1, 0, !dbg !8048
  %6 = and i1 %4, %5, !dbg !8048
  br i1 %6, label %7, label %16, !dbg !8049

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8044, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i8* %9, metadata !8042, metadata !DIExpression()), !dbg !8045
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8050
  call void @llvm.dbg.value(metadata i8* %10, metadata !8042, metadata !DIExpression()), !dbg !8045
  %11 = add nuw i32 %8, 1, !dbg !8052
  call void @llvm.dbg.value(metadata i32 %11, metadata !8044, metadata !DIExpression()), !dbg !8045
  %12 = load i8, i8* %10, align 1, !dbg !8046
  %13 = icmp ne i8 %12, 0, !dbg !8047
  %14 = icmp ult i32 %11, %1, !dbg !8048
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8048
  br i1 %15, label %7, label %16, !dbg !8049, !llvm.loop !8053

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8045
  ret i32 %17, !dbg !8055
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !8056 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8060, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i8* %1, metadata !8061, metadata !DIExpression()), !dbg !8062
  %3 = load i8, i8* %0, align 1, !dbg !8063
  %4 = load i8, i8* %1, align 1, !dbg !8064
  %5 = icmp ne i8 %3, %4, !dbg !8065
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8066
  br i1 %7, label %18, label %8, !dbg !8066

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8061, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i8* %10, metadata !8060, metadata !DIExpression()), !dbg !8062
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8067
  call void @llvm.dbg.value(metadata i8* %11, metadata !8060, metadata !DIExpression()), !dbg !8062
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8069
  call void @llvm.dbg.value(metadata i8* %12, metadata !8061, metadata !DIExpression()), !dbg !8062
  %13 = load i8, i8* %11, align 1, !dbg !8063
  %14 = load i8, i8* %12, align 1, !dbg !8064
  %15 = icmp ne i8 %13, %14, !dbg !8065
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8066
  br i1 %17, label %18, label %8, !dbg !8066, !llvm.loop !8070

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8063
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8064
  %21 = zext i8 %19 to i32, !dbg !8073
  %22 = zext i8 %20 to i32, !dbg !8074
  %23 = sub nsw i32 %21, %22, !dbg !8075
  ret i32 %23, !dbg !8076
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8077 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8081, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i8* %1, metadata !8082, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i32 %2, metadata !8083, metadata !DIExpression()), !dbg !8084
  %4 = icmp eq i32 %2, 0, !dbg !8085
  br i1 %4, label %23, label %5, !dbg !8085

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8083, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i8* %7, metadata !8082, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i8* %8, metadata !8081, metadata !DIExpression()), !dbg !8084
  %9 = load i8, i8* %8, align 1, !dbg !8086
  %10 = load i8, i8* %7, align 1, !dbg !8087
  %11 = icmp ne i8 %9, %10, !dbg !8088
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8089
  br i1 %13, label %19, label %14, !dbg !8089

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8090
  call void @llvm.dbg.value(metadata i8* %15, metadata !8081, metadata !DIExpression()), !dbg !8084
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8092
  call void @llvm.dbg.value(metadata i8* %16, metadata !8082, metadata !DIExpression()), !dbg !8084
  %17 = add i32 %6, -1, !dbg !8093
  call void @llvm.dbg.value(metadata i32 %17, metadata !8083, metadata !DIExpression()), !dbg !8084
  %18 = icmp eq i32 %17, 0, !dbg !8085
  br i1 %18, label %23, label %5, !dbg !8085, !llvm.loop !8094

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8097
  %21 = zext i8 %10 to i32, !dbg !8098
  %22 = sub nsw i32 %20, %21, !dbg !8099
  br label %23, !dbg !8100

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8100
  ret i32 %24, !dbg !8101
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8102 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8107, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i8* %1, metadata !8108, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i8** %2, metadata !8109, metadata !DIExpression()), !dbg !8112
  %4 = icmp eq i8* %0, null, !dbg !8113
  br i1 %4, label %5, label %7, !dbg !8113

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8114
  br label %7, !dbg !8113

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8113
  call void @llvm.dbg.value(metadata i8* %8, metadata !8110, metadata !DIExpression()), !dbg !8112
  %9 = load i8, i8* %8, align 1, !dbg !8115
  %10 = icmp eq i8 %9, 0, !dbg !8115
  br i1 %10, label %33, label %11, !dbg !8116

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8110, metadata !DIExpression()), !dbg !8112
  %14 = zext i8 %12 to i32, !dbg !8115
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8117
  %16 = icmp eq i8* %15, null, !dbg !8116
  br i1 %16, label %21, label %17, !dbg !8118

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8119
  call void @llvm.dbg.value(metadata i8* %18, metadata !8110, metadata !DIExpression()), !dbg !8112
  %19 = load i8, i8* %18, align 1, !dbg !8115
  %20 = icmp eq i8 %19, 0, !dbg !8115
  br i1 %20, label %33, label %11, !dbg !8116, !llvm.loop !8121

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8111, metadata !DIExpression()), !dbg !8112
  %24 = zext i8 %22 to i32, !dbg !8123
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8124
  %26 = icmp eq i8* %25, null, !dbg !8125
  br i1 %26, label %27, label %31, !dbg !8126

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8127
  call void @llvm.dbg.value(metadata i8* %28, metadata !8111, metadata !DIExpression()), !dbg !8112
  %29 = load i8, i8* %28, align 1, !dbg !8123
  %30 = icmp eq i8 %29, 0, !dbg !8123
  br i1 %30, label %33, label %21, !dbg !8129, !llvm.loop !8130

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8132
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8135
  br label %33, !dbg !8136

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8112
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8112
  store i8* %34, i8** %2, align 4, !dbg !8112
  ret i8* %35, !dbg !8137
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8138 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8140, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i8* %1, metadata !8141, metadata !DIExpression()), !dbg !8142
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8143
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8144
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8145
  ret i8* %0, !dbg !8146
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8147 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8149, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i8* %1, metadata !8150, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i32 %2, metadata !8151, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i8* %0, metadata !8152, metadata !DIExpression()), !dbg !8154
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8155
  call void @llvm.dbg.value(metadata i32 %4, metadata !8153, metadata !DIExpression()), !dbg !8154
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8156
  call void @llvm.dbg.value(metadata i8* %5, metadata !8149, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i8* %1, metadata !8150, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i32 %2, metadata !8151, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i32 %2, metadata !8151, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8154
  %6 = icmp eq i32 %2, 0, !dbg !8157
  br i1 %6, label %18, label %7, !dbg !8158

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8159
  call void @llvm.dbg.value(metadata i8* %9, metadata !8149, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i8* %10, metadata !8150, metadata !DIExpression()), !dbg !8154
  %12 = load i8, i8* %10, align 1, !dbg !8160
  %13 = icmp eq i8 %12, 0, !dbg !8161
  br i1 %13, label %18, label %14, !dbg !8162

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8163
  call void @llvm.dbg.value(metadata i8* %15, metadata !8150, metadata !DIExpression()), !dbg !8154
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8165
  call void @llvm.dbg.value(metadata i8* %16, metadata !8149, metadata !DIExpression()), !dbg !8154
  store i8 %12, i8* %9, align 1, !dbg !8166
  call void @llvm.dbg.value(metadata i32 %11, metadata !8151, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i32 %11, metadata !8151, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8154
  %17 = icmp eq i32 %11, 0, !dbg !8157
  br i1 %17, label %18, label %7, !dbg !8158, !llvm.loop !8167

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8154
  store i8 0, i8* %19, align 1, !dbg !8169
  ret i8* %0, !dbg !8170
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8171 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8175, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i8* %1, metadata !8176, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i32 %2, metadata !8177, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i8* %0, metadata !8178, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i8* %1, metadata !8179, metadata !DIExpression()), !dbg !8180
  %4 = icmp eq i32 %2, 0, !dbg !8181
  br i1 %4, label %31, label %5, !dbg !8183

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8179, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i8* %0, metadata !8178, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i32 %2, metadata !8177, metadata !DIExpression()), !dbg !8180
  %6 = add i32 %2, -1, !dbg !8184
  call void @llvm.dbg.value(metadata i32 %6, metadata !8177, metadata !DIExpression()), !dbg !8180
  %7 = icmp eq i32 %6, 0, !dbg !8185
  br i1 %7, label %23, label %8, !dbg !8186

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8187
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8187
  br label %11, !dbg !8187

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8179, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i8* %14, metadata !8178, metadata !DIExpression()), !dbg !8180
  %15 = load i8, i8* %14, align 1, !dbg !8188
  %16 = load i8, i8* %13, align 1, !dbg !8189
  %17 = icmp eq i8 %15, %16, !dbg !8190
  br i1 %17, label %18, label %23, !dbg !8187

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8191
  call void @llvm.dbg.value(metadata i8* %19, metadata !8178, metadata !DIExpression()), !dbg !8180
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8193
  call void @llvm.dbg.value(metadata i8* %20, metadata !8179, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i32 %12, metadata !8177, metadata !DIExpression()), !dbg !8180
  %21 = add i32 %12, -1, !dbg !8184
  call void @llvm.dbg.value(metadata i32 %21, metadata !8177, metadata !DIExpression()), !dbg !8180
  %22 = icmp eq i32 %21, 0, !dbg !8185
  br i1 %22, label %23, label %11, !dbg !8186, !llvm.loop !8194

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8180
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8180
  %26 = load i8, i8* %24, align 1, !dbg !8196
  %27 = zext i8 %26 to i32, !dbg !8196
  %28 = load i8, i8* %25, align 1, !dbg !8197
  %29 = zext i8 %28 to i32, !dbg !8197
  %30 = sub nsw i32 %27, %29, !dbg !8198
  br label %31, !dbg !8199

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8180
  ret i32 %32, !dbg !8200
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8201 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8205, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i8* %1, metadata !8206, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32 %2, metadata !8207, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i8* %0, metadata !8208, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i8* %1, metadata !8209, metadata !DIExpression()), !dbg !8210
  %4 = ptrtoint i8* %0 to i32, !dbg !8211
  %5 = ptrtoint i8* %1 to i32, !dbg !8211
  %6 = sub i32 %4, %5, !dbg !8211
  %7 = icmp ult i32 %6, %2, !dbg !8213
  br i1 %7, label %10, label %8, !dbg !8214

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8209, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i8* %0, metadata !8208, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32 %2, metadata !8207, metadata !DIExpression()), !dbg !8210
  %9 = icmp eq i32 %2, 0, !dbg !8215
  br i1 %9, label %26, label %17, !dbg !8217

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8207, metadata !DIExpression()), !dbg !8210
  %12 = add i32 %11, -1, !dbg !8218
  call void @llvm.dbg.value(metadata i32 %12, metadata !8207, metadata !DIExpression()), !dbg !8210
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8221
  %14 = load i8, i8* %13, align 1, !dbg !8221
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8222
  store i8 %14, i8* %15, align 1, !dbg !8223
  %16 = icmp eq i32 %12, 0, !dbg !8224
  br i1 %16, label %26, label %10, !dbg !8225, !llvm.loop !8226

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8209, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i8* %19, metadata !8208, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32 %20, metadata !8207, metadata !DIExpression()), !dbg !8210
  %21 = load i8, i8* %18, align 1, !dbg !8228
  store i8 %21, i8* %19, align 1, !dbg !8230
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8231
  call void @llvm.dbg.value(metadata i8* %22, metadata !8208, metadata !DIExpression()), !dbg !8210
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8232
  call void @llvm.dbg.value(metadata i8* %23, metadata !8209, metadata !DIExpression()), !dbg !8210
  %24 = add i32 %20, -1, !dbg !8233
  call void @llvm.dbg.value(metadata i32 %24, metadata !8207, metadata !DIExpression()), !dbg !8210
  %25 = icmp eq i32 %24, 0, !dbg !8215
  br i1 %25, label %26, label %17, !dbg !8217, !llvm.loop !8234

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8236
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8237 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8243, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata i8* %1, metadata !8244, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata i32 %2, metadata !8245, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata i8* %0, metadata !8246, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata i8* %1, metadata !8247, metadata !DIExpression()), !dbg !8248
  %4 = icmp eq i32 %2, 0, !dbg !8249
  br i1 %4, label %14, label %5, !dbg !8250

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8247, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata i8* %7, metadata !8246, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata i32 %8, metadata !8245, metadata !DIExpression()), !dbg !8248
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8251
  call void @llvm.dbg.value(metadata i8* %9, metadata !8247, metadata !DIExpression()), !dbg !8248
  %10 = load i8, i8* %6, align 1, !dbg !8253
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8254
  call void @llvm.dbg.value(metadata i8* %11, metadata !8246, metadata !DIExpression()), !dbg !8248
  store i8 %10, i8* %7, align 1, !dbg !8255
  %12 = add i32 %8, -1, !dbg !8256
  call void @llvm.dbg.value(metadata i32 %12, metadata !8245, metadata !DIExpression()), !dbg !8248
  %13 = icmp eq i32 %12, 0, !dbg !8249
  br i1 %13, label %14, label %5, !dbg !8250, !llvm.loop !8257

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8259
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8260 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8264, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i32 %1, metadata !8265, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i32 %2, metadata !8266, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i8* %0, metadata !8267, metadata !DIExpression()), !dbg !8269
  %4 = trunc i32 %1 to i8, !dbg !8270
  call void @llvm.dbg.value(metadata i8 %4, metadata !8268, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i32 %2, metadata !8266, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i8* %0, metadata !8267, metadata !DIExpression()), !dbg !8269
  %5 = icmp eq i32 %2, 0, !dbg !8271
  br i1 %5, label %12, label %6, !dbg !8272

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8266, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i8* %8, metadata !8267, metadata !DIExpression()), !dbg !8269
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8273
  call void @llvm.dbg.value(metadata i8* %9, metadata !8267, metadata !DIExpression()), !dbg !8269
  store i8 %4, i8* %8, align 1, !dbg !8275
  %10 = add i32 %7, -1, !dbg !8276
  call void @llvm.dbg.value(metadata i32 %10, metadata !8266, metadata !DIExpression()), !dbg !8269
  %11 = icmp eq i32 %10, 0, !dbg !8271
  br i1 %11, label %12, label %6, !dbg !8272, !llvm.loop !8277

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8279
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8280 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8284, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i32 %1, metadata !8285, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i32 %2, metadata !8286, metadata !DIExpression()), !dbg !8290
  %4 = icmp eq i32 %2, 0, !dbg !8291
  br i1 %4, label %17, label %5, !dbg !8292

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8293

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8294
  call void @llvm.dbg.value(metadata i8* %9, metadata !8287, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %8, metadata !8286, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i8* %9, metadata !8287, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8294
  %10 = load i8, i8* %9, align 1, !dbg !8295
  %11 = icmp eq i8 %10, %6, !dbg !8298
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8299
  call void @llvm.dbg.value(metadata i8* %12, metadata !8287, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %13, metadata !8286, metadata !DIExpression()), !dbg !8290
  br i1 %15, label %16, label %7, !dbg !8299, !llvm.loop !8300

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8302

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8290
  ret i8* %19, !dbg !8303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !8304 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8306, metadata !DIExpression()), !dbg !8307
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8308
  ret void, !dbg !8309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !8310 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8312, metadata !DIExpression()), !dbg !8313
  ret i32 -1, !dbg !8314
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8319, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.value(metadata i32* %1, metadata !8320, metadata !DIExpression()), !dbg !8321
  %3 = ptrtoint i32* %1 to i32, !dbg !8322
  %4 = and i32 %3, -2, !dbg !8322
  %5 = icmp eq i32 %4, 2, !dbg !8322
  br i1 %5, label %6, label %9, !dbg !8322

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8323
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8323
  br label %9, !dbg !8324

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8324
  ret i32 %10, !dbg !8325
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8328, metadata !DIExpression()), !dbg !8330
  call void @llvm.dbg.value(metadata i32* %1, metadata !8329, metadata !DIExpression()), !dbg !8330
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8331
  ret i32 %3, !dbg !8332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8336, metadata !DIExpression()), !dbg !8338
  call void @llvm.dbg.value(metadata i32* %1, metadata !8337, metadata !DIExpression()), !dbg !8338
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8339, !srcloc !8341
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8342
  ret i32 %3, !dbg !8343
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8344 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8349, metadata !DIExpression()), !dbg !8353
  call void @llvm.dbg.value(metadata i32* %1, metadata !8350, metadata !DIExpression()), !dbg !8353
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8354
  call void @llvm.dbg.value(metadata i32 %3, metadata !8351, metadata !DIExpression()), !dbg !8353
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !8355
  call void @llvm.dbg.value(metadata i32 %4, metadata !8352, metadata !DIExpression()), !dbg !8353
  %5 = icmp ne i32 %3, %4, !dbg !8356
  %6 = sext i1 %5 to i32, !dbg !8357
  ret i32 %6, !dbg !8358
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8359 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8363, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i32 %1, metadata !8364, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i32 %2, metadata !8365, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i32* %3, metadata !8366, metadata !DIExpression()), !dbg !8367
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8368
  ret i32 %5, !dbg !8369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8370 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8372, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32 %1, metadata !8373, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32 %2, metadata !8374, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata i32* %3, metadata !8375, metadata !DIExpression()), !dbg !8376
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8377, !srcloc !8379
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8380
  ret i32 %5, !dbg !8381
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8382 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8384, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 %1, metadata !8385, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 %2, metadata !8386, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32* %3, metadata !8387, metadata !DIExpression()), !dbg !8392
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8393
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8395
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8395
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8395
  br i1 %11, label %33, label %12, !dbg !8395

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8392
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8392
  call void @llvm.dbg.value(metadata i8* %14, metadata !8390, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 %13, metadata !8388, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 %1, metadata !8389, metadata !DIExpression()), !dbg !8392
  br label %15, !dbg !8396

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8398
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8392
  call void @llvm.dbg.value(metadata i8* %17, metadata !8390, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 %16, metadata !8389, metadata !DIExpression()), !dbg !8392
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8399
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8402
  call void @llvm.dbg.value(metadata i8* %19, metadata !8390, metadata !DIExpression()), !dbg !8392
  %20 = load i8, i8* %17, align 1, !dbg !8403
  %21 = zext i8 %20 to i32, !dbg !8404
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8399
  %23 = icmp eq i32 %22, -1, !dbg !8405
  br i1 %23, label %30, label %24, !dbg !8406

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8407
  call void @llvm.dbg.value(metadata i32 %25, metadata !8389, metadata !DIExpression()), !dbg !8392
  %26 = icmp eq i32 %25, 0, !dbg !8408
  br i1 %26, label %27, label %15, !dbg !8409, !llvm.loop !8410

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8412
  call void @llvm.dbg.value(metadata i32 %28, metadata !8388, metadata !DIExpression()), !dbg !8392
  %29 = icmp eq i32 %28, 0, !dbg !8413
  br i1 %29, label %30, label %12, !dbg !8414, !llvm.loop !8415

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8392
  call void @llvm.dbg.value(metadata i32 %31, metadata !8388, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.label(metadata !8391), !dbg !8418
  %32 = sub i32 %2, %31, !dbg !8419
  br label %33, !dbg !8420

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8392
  ret i32 %34, !dbg !8421
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8422 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8426, metadata !DIExpression()), !dbg !8427
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8428
  %3 = icmp eq i32 %2, -1, !dbg !8430
  br i1 %3, label %8, label %4, !dbg !8431

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8432
  %6 = icmp eq i32 %5, -1, !dbg !8433
  %7 = sext i1 %6 to i32, !dbg !8432
  br label %8, !dbg !8434

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8427
  ret i32 %9, !dbg !8435
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8436 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8438, metadata !DIExpression()), !dbg !8439
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8440
  ret void, !dbg !8441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8446, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.value(metadata i32 %1, metadata !8447, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8448, metadata !DIExpression()), !dbg !8452
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8453
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8453
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8453
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8449, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.value(metadata i32 %0, metadata !8451, metadata !DIExpression()), !dbg !8452
  %7 = icmp slt i32 %0, %1, !dbg !8454
  br i1 %7, label %8, label %22, !dbg !8457

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8451, metadata !DIExpression()), !dbg !8452
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8458
  %11 = icmp eq i32 %10, 0, !dbg !8458
  br i1 %11, label %19, label %12, !dbg !8461

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8462
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8464
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8464
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8466
  br i1 %15, label %19, label %16, !dbg !8467

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8468
  %18 = load i8*, i8** %17, align 4, !dbg !8468
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8469
  br label %19, !dbg !8470

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8471
  call void @llvm.dbg.value(metadata i32 %20, metadata !8451, metadata !DIExpression()), !dbg !8452
  %21 = icmp eq i32 %20, %1, !dbg !8454
  br i1 %21, label %22, label %8, !dbg !8457, !llvm.loop !8472

22:                                               ; preds = %19, %3
  ret void, !dbg !8474
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8477, metadata !DIExpression()), !dbg !8478
  %2 = shl nuw i32 1, %0, !dbg !8479
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8482
  ret i32 %3, !dbg !8483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8488, metadata !DIExpression()), !dbg !8489
  %2 = shl nuw i32 1, %0, !dbg !8490
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8493
  ret void, !dbg !8494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8498, metadata !DIExpression()), !dbg !8499
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8500
  ret void, !dbg !8501
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8504, metadata !DIExpression()), !dbg !8505
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8506
  %3 = and i32 %2, %0, !dbg !8506
  %4 = icmp eq i32 %3, %0, !dbg !8507
  %5 = zext i1 %4 to i32, !dbg !8507
  ret i32 %5, !dbg !8508
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8509 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8511, metadata !DIExpression()), !dbg !8512
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8513
  ret void, !dbg !8514
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8515 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8517, metadata !DIExpression()), !dbg !8518
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8519
  ret void, !dbg !8520
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8521 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8523, metadata !DIExpression()), !dbg !8524
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8525
  ret void, !dbg !8526
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8527 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8529, metadata !DIExpression()), !dbg !8530
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8531
  ret void, !dbg !8532
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8533 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8535, metadata !DIExpression()), !dbg !8536
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8537
  ret void, !dbg !8538
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8539 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8541, metadata !DIExpression()), !dbg !8542
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8543
  ret void, !dbg !8544
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8545 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8547, metadata !DIExpression()), !dbg !8548
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8549
  ret void, !dbg !8550
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8551 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8553, metadata !DIExpression()), !dbg !8554
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8555
  ret void, !dbg !8556
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8557 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8559, metadata !DIExpression()), !dbg !8560
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8561
  ret void, !dbg !8562
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8563 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8565, metadata !DIExpression()), !dbg !8566
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8567
  ret void, !dbg !8568
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8569 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8571, metadata !DIExpression()), !dbg !8572
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8573
  ret i32 0, !dbg !8574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !730 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !734, metadata !DIExpression()), !dbg !8575
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8576
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8578
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8580
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8582
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8584
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8586
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8588
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8590
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8592
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8594
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8596
  ret void, !dbg !8598
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8601, metadata !DIExpression()), !dbg !8603
  call void @llvm.dbg.value(metadata i32 0, metadata !8602, metadata !DIExpression()), !dbg !8603
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8604
  %3 = load i32, i32* %2, align 4, !dbg !8604
  call void @llvm.dbg.value(metadata i32 %3, metadata !8602, metadata !DIExpression()), !dbg !8603
  %4 = shl nuw i32 1, %0, !dbg !8605
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8606
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8607
  ret void, !dbg !8608
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8611, metadata !DIExpression()), !dbg !8612
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8613
  %3 = or i32 %2, %0, !dbg !8613
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8613
  ret void, !dbg !8614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8617, metadata !DIExpression()), !dbg !8618
  %2 = icmp slt i32 %0, 32, !dbg !8619
  br i1 %2, label %3, label %5, !dbg !8621

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8622
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8624
  br label %5, !dbg !8625

5:                                                ; preds = %1, %3
  ret void, !dbg !8626
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8629, metadata !DIExpression()), !dbg !8630
  %2 = xor i32 %0, -1, !dbg !8631
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8631
  %4 = and i32 %3, %2, !dbg !8631
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8631
  ret void, !dbg !8632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8637, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i32 %1, metadata !8638, metadata !DIExpression()), !dbg !8639
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8640

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8641
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8643
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8644
  br label %11, !dbg !8645

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8646
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8647
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8648
  br label %11, !dbg !8649

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8650
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8651
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8652
  br label %11, !dbg !8653

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8654
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8655
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8656
  br label %11, !dbg !8657

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8658
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8661, metadata !DIExpression()), !dbg !8662
  %2 = xor i32 %0, -1, !dbg !8663
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8663
  %4 = and i32 %3, %2, !dbg !8663
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8663
  ret void, !dbg !8664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8667, metadata !DIExpression()), !dbg !8668
  %2 = xor i32 %0, -1, !dbg !8669
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8669
  %4 = and i32 %3, %2, !dbg !8669
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8669
  ret void, !dbg !8670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8671 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8673, metadata !DIExpression()), !dbg !8674
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8675
  %3 = or i32 %2, %0, !dbg !8675
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8675
  ret void, !dbg !8676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8679, metadata !DIExpression()), !dbg !8680
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8681
  %3 = or i32 %2, %0, !dbg !8681
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8681
  ret void, !dbg !8682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !8683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8687, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8688, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata i8* %2, metadata !8689, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !8690, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8692, metadata !DIExpression()), !dbg !8693
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8694
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8694
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8696
  br i1 %6, label %7, label %9, !dbg !8697

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8698
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8699
  store i8* %2, i8** %8, align 4, !dbg !8700
  br label %9, !dbg !8701

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8693
  ret i32 %10, !dbg !8702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8705, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !8706, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8707, metadata !DIExpression()), !dbg !8708
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8709
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8710
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8711
  store i8* null, i8** %3, align 4, !dbg !8712
  ret void, !dbg !8713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8714 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8716, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata i8* %1, metadata !8717, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata i8* %1, metadata !8718, metadata !DIExpression()), !dbg !8721
  %3 = bitcast i8* %1 to i32*, !dbg !8722
  %4 = load i32, i32* %3, align 4, !dbg !8722
  %5 = add i32 %4, -169, !dbg !8722
  %6 = icmp ult i32 %5, -121, !dbg !8722
  br i1 %6, label %15, label %7, !dbg !8724

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8725
  %9 = inttoptr i32 %8 to i32*, !dbg !8726
  call void @llvm.dbg.value(metadata i32* %9, metadata !8719, metadata !DIExpression()), !dbg !8721
  %10 = load volatile i32, i32* %9, align 4, !dbg !8727
  call void @llvm.dbg.value(metadata i32 %10, metadata !8720, metadata !DIExpression()), !dbg !8721
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8728
  %12 = bitcast i8* %11 to i32*, !dbg !8728
  %13 = load i32, i32* %12, align 4, !dbg !8728
  %14 = or i32 %13, %10, !dbg !8729
  call void @llvm.dbg.value(metadata i32 %14, metadata !8720, metadata !DIExpression()), !dbg !8721
  store volatile i32 %14, i32* %9, align 4, !dbg !8730
  br label %15, !dbg !8731

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8721
  ret i32 %16, !dbg !8732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8733 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8735, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata i8* %1, metadata !8736, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.value(metadata i8* %1, metadata !8737, metadata !DIExpression()), !dbg !8740
  %3 = bitcast i8* %1 to i32*, !dbg !8741
  %4 = load i32, i32* %3, align 4, !dbg !8741
  %5 = add i32 %4, -169, !dbg !8741
  %6 = icmp ult i32 %5, -121, !dbg !8741
  br i1 %6, label %16, label %7, !dbg !8743

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8744
  %9 = inttoptr i32 %8 to i32*, !dbg !8745
  call void @llvm.dbg.value(metadata i32* %9, metadata !8738, metadata !DIExpression()), !dbg !8740
  %10 = load volatile i32, i32* %9, align 4, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %10, metadata !8739, metadata !DIExpression()), !dbg !8740
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8747
  %12 = bitcast i8* %11 to i32*, !dbg !8747
  %13 = load i32, i32* %12, align 4, !dbg !8747
  %14 = xor i32 %13, -1, !dbg !8748
  %15 = and i32 %10, %14, !dbg !8749
  call void @llvm.dbg.value(metadata i32 %15, metadata !8739, metadata !DIExpression()), !dbg !8740
  store volatile i32 %15, i32* %9, align 4, !dbg !8750
  br label %16, !dbg !8751

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8740
  ret i32 %17, !dbg !8752
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8753 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8755, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i8* %1, metadata !8756, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i32* %2, metadata !8757, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i8* %1, metadata !8758, metadata !DIExpression()), !dbg !8763
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8764
  call void @llvm.dbg.value(metadata i32 %4, metadata !8759, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i32 undef, metadata !8760, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i32 undef, metadata !8761, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i32 %4, metadata !8762, metadata !DIExpression()), !dbg !8763
  %5 = bitcast i8* %1 to i32*, !dbg !8765
  %6 = load i32, i32* %5, align 4, !dbg !8765
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8766

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #26, !dbg !8767
  call void @llvm.dbg.value(metadata i32 %8, metadata !8760, metadata !DIExpression()), !dbg !8763
  br label %19, !dbg !8768

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8770
  call void @llvm.dbg.value(metadata i32 %10, metadata !8761, metadata !DIExpression()), !dbg !8763
  br label %19, !dbg !8771

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8772
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !8773
  br label %19, !dbg !8774

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8775
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #26, !dbg !8776
  br label %19, !dbg !8777

17:                                               ; preds = %3
  br label %19, !dbg !8778

18:                                               ; preds = %3
  br label %19, !dbg !8779

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8780
  br label %21, !dbg !8781

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8763
  ret i32 %22, !dbg !8781
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8782 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8784, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i8* %1, metadata !8785, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i8* %2, metadata !8786, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i8* %1, metadata !8787, metadata !DIExpression()), !dbg !8792
  %4 = bitcast i8* %1 to i32*, !dbg !8793
  %5 = load i32, i32* %4, align 4, !dbg !8793
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8794
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()), !dbg !8792
  %7 = icmp slt i32 %6, 0, !dbg !8795
  br i1 %7, label %22, label %8, !dbg !8797

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8787, metadata !DIExpression()), !dbg !8792
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8798
  %10 = bitcast i8* %9 to i32*, !dbg !8798
  %11 = load i32, i32* %10, align 4, !dbg !8798
  %12 = lshr i32 %11, 16, !dbg !8798
  %13 = and i32 %12, 7, !dbg !8798
  %14 = lshr i32 %11, 8, !dbg !8799
  %15 = and i32 %14, 31, !dbg !8799
  %16 = shl i32 %13, %15, !dbg !8800
  call void @llvm.dbg.value(metadata i32 %16, metadata !8790, metadata !DIExpression()), !dbg !8792
  %17 = and i32 %11, 255, !dbg !8801
  %18 = or i32 %17, 1073887232, !dbg !8802
  %19 = inttoptr i32 %18 to i32*, !dbg !8803
  call void @llvm.dbg.value(metadata i32* %19, metadata !8788, metadata !DIExpression()), !dbg !8792
  %20 = load volatile i32, i32* %19, align 4, !dbg !8804
  call void @llvm.dbg.value(metadata i32 %20, metadata !8789, metadata !DIExpression()), !dbg !8792
  %21 = or i32 %16, %20, !dbg !8805
  call void @llvm.dbg.value(metadata i32 %21, metadata !8789, metadata !DIExpression()), !dbg !8792
  store volatile i32 %21, i32* %19, align 4, !dbg !8806
  br label %22, !dbg !8807

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8792
  ret i32 %23, !dbg !8808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8813, metadata !DIExpression()), !dbg !8815
  call void @llvm.dbg.value(metadata i32 0, metadata !8814, metadata !DIExpression()), !dbg !8815
  %2 = add i32 %0, -1, !dbg !8816
  %3 = icmp ult i32 %2, 6, !dbg !8816
  br i1 %3, label %4, label %7, !dbg !8816

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8816
  %6 = load i32, i32* %5, align 4, !dbg !8816
  call void @llvm.dbg.value(metadata i32 %6, metadata !8814, metadata !DIExpression()), !dbg !8815
  br label %7, !dbg !8817

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8815
  ret i32 %8, !dbg !8818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8823, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.value(metadata i32 %1, metadata !8824, metadata !DIExpression()), !dbg !8825
  %3 = udiv i32 %0, %1, !dbg !8826
  ret i32 %3, !dbg !8827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8832, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 12, metadata !8833, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 336, metadata !8834, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 %1, metadata !8835, metadata !DIExpression()), !dbg !8836
  %3 = mul i32 %0, 336, !dbg !8837
  %4 = mul nsw i32 %1, 12, !dbg !8838
  %5 = udiv i32 %3, %4, !dbg !8839
  ret i32 %5, !dbg !8840
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8841 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8843, metadata !DIExpression()), !dbg !8846
  tail call void @config_enable_default_clocks() #25, !dbg !8847
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8848
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8848
  %4 = lshr i32 %3, 4, !dbg !8848
  %5 = and i32 %4, 15, !dbg !8848
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8848
  %7 = load i8, i8* %6, align 1, !dbg !8848
  %8 = zext i8 %7 to i32, !dbg !8848
  %9 = lshr i32 %2, %8, !dbg !8848
  call void @llvm.dbg.value(metadata i32 %9, metadata !8844, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !8845, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8846
  %10 = icmp ult i32 %9, 168000000, !dbg !8849
  br i1 %10, label %11, label %13, !dbg !8851

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !8852
  br label %13, !dbg !8854

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8855
  tail call fastcc void @set_up_plls() #26, !dbg !8856
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8857
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8860
  br label %14, !dbg !8861

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8862
  %16 = icmp eq i32 %15, 8, !dbg !8863
  br i1 %16, label %17, label %14, !dbg !8861, !llvm.loop !8864

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !8866
  br i1 %18, label %19, label %21, !dbg !8868

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !8869
  br label %21, !dbg !8871

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !8872
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8873
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8874
  ret i32 0, !dbg !8875
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8876 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8878
  %2 = and i32 %1, 240, !dbg !8878
  ret i32 %2, !dbg !8879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8880 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8881
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8886
  br label %1, !dbg !8887

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8888
  %3 = icmp eq i32 %2, 1, !dbg !8889
  br i1 %3, label %4, label %1, !dbg !8887, !llvm.loop !8890

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8892
  br label %5, !dbg !8895

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8896
  %7 = icmp eq i32 %6, 1, !dbg !8897
  br i1 %7, label %8, label %5, !dbg !8895, !llvm.loop !8898

8:                                                ; preds = %5
  ret void, !dbg !8900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8901 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8902
  %2 = icmp eq i32 %1, 8, !dbg !8904
  br i1 %2, label %3, label %4, !dbg !8905

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8906
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8908
  br label %4, !dbg !8909

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8910
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8911
  %6 = and i32 %5, -196609, !dbg !8911
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8911
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8912
  %8 = and i32 %7, -251658241, !dbg !8912
  %9 = or i32 %8, 117440512, !dbg !8912
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8912
  tail call void @config_pll_sysclock() #25, !dbg !8913
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8914
  br label %10, !dbg !8915

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8916
  %12 = icmp eq i32 %11, 1, !dbg !8917
  br i1 %12, label %13, label %10, !dbg !8915, !llvm.loop !8918

13:                                               ; preds = %10
  ret void, !dbg !8920
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8921 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8923, metadata !DIExpression()), !dbg !8924
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8925
  %2 = and i32 %1, -241, !dbg !8925
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8925
  ret void, !dbg !8926
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8929, metadata !DIExpression()), !dbg !8930
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8931
  %3 = and i32 %2, -4, !dbg !8931
  %4 = or i32 %3, %0, !dbg !8931
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8931
  ret void, !dbg !8932
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8933 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8934
  %2 = and i32 %1, 12, !dbg !8934
  ret i32 %2, !dbg !8935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8936 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !8938, metadata !DIExpression()), !dbg !8939
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8940
  %2 = and i32 %1, -7169, !dbg !8940
  %3 = or i32 %2, 5120, !dbg !8940
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8940
  ret void, !dbg !8941
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8942 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8944, metadata !DIExpression()), !dbg !8945
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8946
  %2 = and i32 %1, -57345, !dbg !8946
  %3 = or i32 %2, 32768, !dbg !8946
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8946
  ret void, !dbg !8947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8948 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8949
  %2 = icmp eq i32 %1, 1, !dbg !8951
  br i1 %2, label %7, label %3, !dbg !8952

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8953
  br label %4, !dbg !8955

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8956
  %6 = icmp eq i32 %5, 1, !dbg !8957
  br i1 %6, label %7, label %4, !dbg !8955, !llvm.loop !8958

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8960
  br label %8, !dbg !8961

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8962
  %10 = icmp eq i32 %9, 0, !dbg !8963
  br i1 %10, label %11, label %8, !dbg !8961, !llvm.loop !8964

11:                                               ; preds = %8
  ret void, !dbg !8966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8967 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8968
  %2 = and i32 %1, -16777217, !dbg !8968
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8968
  ret void, !dbg !8969
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8970 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8971
  %2 = or i32 %1, 16777216, !dbg !8971
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8971
  ret void, !dbg !8972
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8973 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8974
  %2 = lshr i32 %1, 25, !dbg !8975
  %3 = and i32 %2, 1, !dbg !8975
  ret i32 %3, !dbg !8976
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8977 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8978
  %2 = lshr i32 %1, 1, !dbg !8979
  %3 = and i32 %2, 1, !dbg !8979
  ret i32 %3, !dbg !8980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8981 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8982
  %2 = or i32 %1, 1, !dbg !8982
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8982
  ret void, !dbg !8983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8984 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8985
  %2 = and i32 %1, -262145, !dbg !8985
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8985
  ret void, !dbg !8986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8987 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8988
  %2 = or i32 %1, 65536, !dbg !8988
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8988
  ret void, !dbg !8989
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8990 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8991
  %2 = lshr i32 %1, 17, !dbg !8992
  %3 = and i32 %2, 1, !dbg !8992
  ret i32 %3, !dbg !8993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8994 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8995
  %2 = or i32 %1, 1, !dbg !8995
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8995
  ret void, !dbg !8996
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8997 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8998
  %2 = lshr i32 %1, 1, !dbg !8999
  %3 = and i32 %2, 1, !dbg !8999
  ret i32 %3, !dbg !9000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !9001 {
  ret i32 12000000, !dbg !9003
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !9007 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !9008
  ret void, !dbg !9009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !9010 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9014, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i32 12, metadata !9015, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i32 336, metadata !9016, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i32 0, metadata !9017, metadata !DIExpression()), !dbg !9018
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9019
  %2 = and i32 %1, -4227072, !dbg !9019
  %3 = or i32 %2, 4215820, !dbg !9019
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9019
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9020
  %5 = and i32 %4, -196609, !dbg !9020
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9020
  ret void, !dbg !9021
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !9022 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !9023
  ret void, !dbg !9024
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !9025 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9028, metadata !DIExpression()), !dbg !9030
  %2 = bitcast i32* %1 to i8*, !dbg !9031
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9031
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9029, metadata !DIExpression()), !dbg !9032
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9033
  %4 = or i32 %3, 268435456, !dbg !9033
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9033
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9034
  %6 = and i32 %5, 268435456, !dbg !9034
  store volatile i32 %6, i32* %1, align 4, !dbg !9035
  %7 = load volatile i32, i32* %1, align 4, !dbg !9036
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9037
  ret void, !dbg !9037
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9038 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9040, metadata !DIExpression()), !dbg !9041
  %2 = tail call fastcc zeroext i1 @device_is_ready.49() #26, !dbg !9042
  br i1 %2, label %3, label %4, !dbg !9044

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !9045
  br label %4, !dbg !9046

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9041
  ret i32 %5, !dbg !9047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.49() unnamed_addr #1 !dbg !9048 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9052, metadata !DIExpression()), !dbg !9053
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9054, !srcloc !9056
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.52() #26, !dbg !9057
  ret i1 %1, !dbg !9058
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9059 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9060
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9061
  ret void, !dbg !9062
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9065, metadata !DIExpression()), !dbg !9067
  %2 = load i32 (i8)*, i32 (i8)** @debug_hook_out, align 4, !dbg !9068
  %3 = trunc i32 %0 to i8, !dbg !9068
  %4 = tail call i32 %2(i8 noundef zeroext %3) #25, !dbg !9068
  %5 = icmp eq i32 %4, 1, !dbg !9068
  call void @llvm.dbg.value(metadata i1 %5, metadata !9066, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9067
  br i1 %5, label %10, label %6, !dbg !9069

6:                                                ; preds = %1
  %7 = icmp eq i32 %0, 10, !dbg !9070
  br i1 %7, label %8, label %9, !dbg !9072

8:                                                ; preds = %6
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 13) #26, !dbg !9073
  br label %9, !dbg !9075

9:                                                ; preds = %8, %6
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %3) #26, !dbg !9076
  br label %10, !dbg !9077

10:                                               ; preds = %1, %9
  ret i32 %0, !dbg !9078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.50(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9079 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9081, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i8 %0, metadata !9082, metadata !DIExpression()), !dbg !9083
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9084, !srcloc !9086
  tail call fastcc void @z_impl_uart_poll_out.51(i8 noundef zeroext %0) #26, !dbg !9087
  ret void, !dbg !9088
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.51(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9089 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9091, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.value(metadata i8 %0, metadata !9092, metadata !DIExpression()), !dbg !9094
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9095
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9093, metadata !DIExpression()), !dbg !9094
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9096
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9096
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !9097
  ret void, !dbg !9098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @debug_hook_out_nop(i8 noundef zeroext %0) #11 !dbg !9099 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9101, metadata !DIExpression()), !dbg !9102
  ret i32 0, !dbg !9103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.52() unnamed_addr #1 !dbg !9104 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9106, metadata !DIExpression()), !dbg !9107
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9108
  ret i1 %1, !dbg !9109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_in_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9110 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9114, metadata !DIExpression()), !dbg !9115
  store i32 (i8)* %0, i32 (i8)** @debug_hook_in, align 4, !dbg !9116
  ret void, !dbg !9117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_out_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9118 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9122, metadata !DIExpression()), !dbg !9123
  store i32 (i8)* %0, i32 (i8)** @debug_hook_out, align 4, !dbg !9124
  ret void, !dbg !9125
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !9126 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9130, metadata !DIExpression()), !dbg !9133
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9131, metadata !DIExpression()), !dbg !9133
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9132, metadata !DIExpression()), !dbg !9133
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !9134
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !9135
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9136
  tail call fastcc void @console_input_init() #26, !dbg !9137
  ret void, !dbg !9138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !9139 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9142
  tail call fastcc void @uart_irq_rx_disable.53() #26, !dbg !9143
  tail call fastcc void @uart_irq_tx_disable.54() #26, !dbg !9144
  tail call fastcc void @uart_irq_callback_set() #26, !dbg !9145
  %2 = call fastcc i32 @uart_irq_rx_ready.55() #26, !dbg !9146
  %3 = icmp eq i32 %2, 0, !dbg !9147
  br i1 %3, label %8, label %4, !dbg !9147

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !9141, metadata !DIExpression(DW_OP_deref)), !dbg !9148
  %5 = call fastcc i32 @uart_fifo_read.56(i8* noundef nonnull %1) #26, !dbg !9149
  %6 = call fastcc i32 @uart_irq_rx_ready.55() #26, !dbg !9146
  %7 = icmp eq i32 %6, 0, !dbg !9147
  br i1 %7, label %8, label %4, !dbg !9147, !llvm.loop !9151

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable.57() #26, !dbg !9153
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9154
  ret void, !dbg !9154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable.53() unnamed_addr #1 !dbg !9155 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9157, metadata !DIExpression()), !dbg !9158
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9159, !srcloc !9161
  tail call fastcc void @z_impl_uart_irq_rx_disable.66() #26, !dbg !9162
  ret void, !dbg !9163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable.54() unnamed_addr #1 !dbg !9164 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9166, metadata !DIExpression()), !dbg !9167
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9168, !srcloc !9170
  tail call fastcc void @z_impl_uart_irq_tx_disable.65() #26, !dbg !9171
  ret void, !dbg !9172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !9173 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9177, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9178, metadata !DIExpression()), !dbg !9179
  tail call fastcc void @uart_irq_callback_user_data_set.59() #26, !dbg !9180
  ret void, !dbg !9181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready.55() unnamed_addr #1 !dbg !9182 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9184, metadata !DIExpression()), !dbg !9186
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9187
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9185, metadata !DIExpression()), !dbg !9186
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !9188
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9188
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9190
  br i1 %4, label %7, label %5, !dbg !9191

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9192
  br label %7, !dbg !9193

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9186
  ret i32 %8, !dbg !9194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read.56(i8* noundef %0) unnamed_addr #1 !dbg !9195 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9197, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i8* %0, metadata !9198, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i32 1, metadata !9199, metadata !DIExpression()), !dbg !9201
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9202
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9200, metadata !DIExpression()), !dbg !9201
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !9203
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !9203
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !9205
  br i1 %5, label %8, label %6, !dbg !9206

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8* noundef %0, i32 noundef 1) #25, !dbg !9207
  br label %8, !dbg !9208

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !9201
  ret i32 %9, !dbg !9209
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable.57() unnamed_addr #1 !dbg !9210 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9212, metadata !DIExpression()), !dbg !9213
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9214, !srcloc !9216
  tail call fastcc void @z_impl_uart_irq_rx_enable.58() #26, !dbg !9217
  ret void, !dbg !9218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable.58() unnamed_addr #1 !dbg !9219 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9221, metadata !DIExpression()), !dbg !9223
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9224
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9222, metadata !DIExpression()), !dbg !9223
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !9225
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9225
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9227
  br i1 %4, label %6, label %5, !dbg !9228

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9229
  br label %6, !dbg !9231

6:                                                ; preds = %5, %0
  ret void, !dbg !9232
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1096 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1098, metadata !DIExpression()), !dbg !9233
  call void @llvm.dbg.value(metadata i8* %1, metadata !1099, metadata !DIExpression()), !dbg !9233
  %4 = call fastcc i32 @uart_irq_update.60() #26, !dbg !9234
  %5 = icmp eq i32 %4, 0, !dbg !9234
  br i1 %5, label %96, label %6, !dbg !9235

6:                                                ; preds = %2, %93
  %7 = call fastcc i32 @uart_irq_is_pending() #26, !dbg !9236
  %8 = icmp eq i32 %7, 0, !dbg !9235
  br i1 %8, label %96, label %9, !dbg !9237

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9238
  %10 = call fastcc i32 @uart_irq_rx_ready.55() #26, !dbg !9239
  %11 = icmp eq i32 %10, 0, !dbg !9239
  br i1 %11, label %93, label %12, !dbg !9241, !llvm.loop !9242

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1100, metadata !DIExpression(DW_OP_deref)), !dbg !9244
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #26, !dbg !9245
  call void @llvm.dbg.value(metadata i32 %13, metadata !1102, metadata !DIExpression()), !dbg !9244
  %14 = icmp slt i32 %13, 0, !dbg !9246
  br i1 %14, label %92, label %15, !dbg !9248

15:                                               ; preds = %12
  %16 = load i32 (i8)*, i32 (i8)** @debug_hook_in, align 4, !dbg !9249
  %17 = icmp eq i32 (i8)* %16, null, !dbg !9251
  br i1 %17, label %22, label %18, !dbg !9252

18:                                               ; preds = %15
  %19 = load i8, i8* %3, align 1, !dbg !9253
  call void @llvm.dbg.value(metadata i8 %19, metadata !1100, metadata !DIExpression()), !dbg !9244
  %20 = call i32 %16(i8 noundef zeroext %19) #25, !dbg !9254
  %21 = icmp eq i32 %20, 0, !dbg !9255
  br i1 %21, label %22, label %92, !dbg !9256

22:                                               ; preds = %18, %15
  %23 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9257
  %24 = icmp eq %struct.console_input* %23, null, !dbg !9257
  br i1 %24, label %25, label %30, !dbg !9258

25:                                               ; preds = %22
  %26 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !9259
  %27 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %26, i32 0, i32 0, !dbg !9259
  %28 = call fastcc i8* @k_queue_get(%struct.k_queue* noundef %27) #26, !dbg !9259
  call void @llvm.dbg.value(metadata i8* %28, metadata !1103, metadata !DIExpression()), !dbg !9260
  store i8* %28, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9261
  %29 = icmp eq i8* %28, null, !dbg !9262
  br i1 %29, label %92, label %30, !dbg !9264

30:                                               ; preds = %25, %22
  %31 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #26, !dbg !9265
  br i1 %31, label %32, label %36, !dbg !9267

32:                                               ; preds = %30
  %33 = load i8, i8* %3, align 1, !dbg !9268
  call void @llvm.dbg.value(metadata i8 %33, metadata !1100, metadata !DIExpression()), !dbg !9244
  %34 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9270
  %35 = getelementptr inbounds %struct.console_input, %struct.console_input* %34, i32 0, i32 2, i32 0, !dbg !9270
  call fastcc void @handle_ansi(i8 noundef zeroext %33, i8* noundef nonnull %35) #26, !dbg !9271
  br label %93, !dbg !9272, !llvm.loop !9242

36:                                               ; preds = %30
  %37 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #26, !dbg !9273
  %38 = load i8, i8* %3, align 1, !dbg !9244
  call void @llvm.dbg.value(metadata i8 %38, metadata !1100, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata i8 %38, metadata !1100, metadata !DIExpression()), !dbg !9244
  br i1 %37, label %39, label %42, !dbg !9275

39:                                               ; preds = %36
  %40 = icmp eq i8 %38, 91, !dbg !9276
  br i1 %40, label %41, label %93, !dbg !9279, !llvm.loop !9242

41:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 1) #26, !dbg !9280
  call fastcc void @atomic_set_bit(i32 noundef 2) #26, !dbg !9282
  br label %93, !dbg !9283, !llvm.loop !9242

42:                                               ; preds = %36
  %43 = zext i8 %38 to i32, !dbg !9284
  %44 = call fastcc i32 @isprint(i32 noundef %43) #26, !dbg !9286
  %45 = icmp eq i32 %44, 0, !dbg !9286
  br i1 %45, label %46, label %81, !dbg !9287

46:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i8 undef, metadata !1100, metadata !DIExpression()), !dbg !9244
  switch i8 %38, label %93 [
    i8 8, label %47
    i8 127, label %47
    i8 27, label %56
    i8 13, label %57
    i8 9, label %68
  ], !dbg !9288, !llvm.loop !9242

47:                                               ; preds = %46, %46
  %48 = load i8, i8* @cur, align 1, !dbg !9290
  %49 = icmp eq i8 %48, 0, !dbg !9293
  br i1 %49, label %93, label %50, !dbg !9294, !llvm.loop !9242

50:                                               ; preds = %47
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9295
  %52 = add i8 %48, -1, !dbg !9297
  store i8 %52, i8* @cur, align 1, !dbg !9297
  %53 = zext i8 %52 to i32, !dbg !9295
  %54 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %53, !dbg !9295
  %55 = load i8, i8* @end, align 1, !dbg !9298
  call fastcc void @del_char(i8* noundef nonnull %54, i8 noundef zeroext %55) #26, !dbg !9299
  br label %93, !dbg !9300, !llvm.loop !9242

56:                                               ; preds = %46
  call fastcc void @atomic_set_bit(i32 noundef 0) #26, !dbg !9301
  br label %93, !dbg !9302, !llvm.loop !9242

57:                                               ; preds = %46
  %58 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9303
  %59 = load i8, i8* @cur, align 1, !dbg !9304
  %60 = zext i8 %59 to i32, !dbg !9304
  %61 = load i8, i8* @end, align 1, !dbg !9305
  %62 = zext i8 %61 to i32, !dbg !9305
  %63 = add nuw nsw i32 %62, %60, !dbg !9306
  %64 = getelementptr inbounds %struct.console_input, %struct.console_input* %58, i32 0, i32 2, i32 %63, !dbg !9303
  store i8 0, i8* %64, align 1, !dbg !9307
  call fastcc void @uart_poll_out.50(i8 noundef zeroext 13) #26, !dbg !9308
  call fastcc void @uart_poll_out.50(i8 noundef zeroext 10) #26, !dbg !9309
  store i8 0, i8* @cur, align 1, !dbg !9310
  store i8 0, i8* @end, align 1, !dbg !9311
  %65 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !9312
  %66 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %65, i32 0, i32 0, !dbg !9312
  %67 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9312
  call void @k_queue_append(%struct.k_queue* noundef %66, i8* noundef %67) #25, !dbg !9312
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9314
  br label %93, !dbg !9315, !llvm.loop !9242

68:                                               ; preds = %46
  %69 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9316
  %70 = icmp eq i8 (i8*, i8)* %69, null, !dbg !9316
  %71 = load i8, i8* @end, align 1
  %72 = icmp ne i8 %71, 0
  %73 = select i1 %70, i1 true, i1 %72, !dbg !9318
  br i1 %73, label %93, label %74, !dbg !9318, !llvm.loop !9242

74:                                               ; preds = %68
  %75 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9319
  %76 = getelementptr inbounds %struct.console_input, %struct.console_input* %75, i32 0, i32 2, i32 0, !dbg !9319
  %77 = load i8, i8* @cur, align 1, !dbg !9321
  %78 = call zeroext i8 %69(i8* noundef nonnull %76, i8 noundef zeroext %77) #25, !dbg !9322
  %79 = load i8, i8* @cur, align 1, !dbg !9323
  %80 = add i8 %79, %78, !dbg !9323
  store i8 %80, i8* @cur, align 1, !dbg !9323
  br label %93, !dbg !9324, !llvm.loop !9242

81:                                               ; preds = %42
  %82 = load i8, i8* @cur, align 1, !dbg !9325
  %83 = zext i8 %82 to i32, !dbg !9325
  %84 = load i8, i8* @end, align 1, !dbg !9327
  %85 = zext i8 %84 to i32, !dbg !9327
  %86 = add nuw nsw i32 %85, %83, !dbg !9328
  %87 = icmp ult i32 %86, 127, !dbg !9329
  br i1 %87, label %88, label %93, !dbg !9330

88:                                               ; preds = %81
  %89 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9331
  %90 = add i8 %82, 1, !dbg !9333
  store i8 %90, i8* @cur, align 1, !dbg !9333
  %91 = getelementptr inbounds %struct.console_input, %struct.console_input* %89, i32 0, i32 2, i32 %83, !dbg !9331
  call void @llvm.dbg.value(metadata i8 %38, metadata !1100, metadata !DIExpression()), !dbg !9244
  call fastcc void @insert_char(i8* noundef nonnull %91, i8 noundef zeroext %38, i8 noundef zeroext %84) #26, !dbg !9334
  br label %93, !dbg !9335

92:                                               ; preds = %12, %18, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9243
  br label %96

93:                                               ; preds = %81, %88, %56, %57, %50, %47, %74, %68, %46, %39, %41, %9, %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9243
  %94 = call fastcc i32 @uart_irq_update.60() #26, !dbg !9234
  %95 = icmp eq i32 %94, 0, !dbg !9234
  br i1 %95, label %96, label %6, !dbg !9235

96:                                               ; preds = %6, %93, %2, %92
  ret void, !dbg !9336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set.59() unnamed_addr #1 !dbg !9337 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9339, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9340, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i8* null, metadata !9341, metadata !DIExpression()), !dbg !9343
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9344
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9342, metadata !DIExpression()), !dbg !9343
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !9345
  br i1 %2, label %8, label %3, !dbg !9347

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !9348
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !9348
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !9349
  br i1 %6, label %8, label %7, !dbg !9350

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_45, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #25, !dbg !9351
  br label %8, !dbg !9353

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !9354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update.60() unnamed_addr #1 !dbg !9355 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9357, metadata !DIExpression()), !dbg !9358
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9359, !srcloc !9361
  %1 = tail call fastcc i32 @z_impl_uart_irq_update.64() #26, !dbg !9362
  ret i32 %1, !dbg !9363
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !9364 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9366, metadata !DIExpression()), !dbg !9367
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9368, !srcloc !9370
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #26, !dbg !9371
  ret i32 %1, !dbg !9372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !9373 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9377, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.value(metadata i8* %0, metadata !9378, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.value(metadata i32 1, metadata !9379, metadata !DIExpression()), !dbg !9381
  %2 = tail call fastcc i32 @uart_fifo_read.56(i8* noundef %0) #26, !dbg !9382
  call void @llvm.dbg.value(metadata i32 %2, metadata !9380, metadata !DIExpression()), !dbg !9381
  %3 = icmp slt i32 %2, 0, !dbg !9383
  br i1 %3, label %4, label %5, !dbg !9385

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable.53() #26, !dbg !9386
  br label %5, !dbg !9388

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !9381
  ret i32 %6, !dbg !9389
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !9390 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9400, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !9399, metadata !DIExpression()), !dbg !9401
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9402, !srcloc !9404
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #25, !dbg !9405
  ret i8* %2, !dbg !9406
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !9407 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9413, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata i32 %0, metadata !9414, metadata !DIExpression()), !dbg !9417
  %2 = tail call fastcc i32 @atomic_get() #26, !dbg !9418
  call void @llvm.dbg.value(metadata i32 %2, metadata !9415, metadata !DIExpression()), !dbg !9417
  %3 = and i32 %0, 31, !dbg !9419
  %4 = shl nuw i32 1, %3, !dbg !9420
  %5 = and i32 %2, %4, !dbg !9420
  %6 = icmp ne i32 %5, 0, !dbg !9420
  ret i1 %6, !dbg !9421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !9422 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9426, metadata !DIExpression()), !dbg !9429
  call void @llvm.dbg.value(metadata i8* %1, metadata !9427, metadata !DIExpression()), !dbg !9429
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #26, !dbg !9430
  br i1 %3, label %4, label %11, !dbg !9432

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !9433
  %6 = tail call fastcc i32 @isdigit.61(i32 noundef %5) #26, !dbg !9436
  %7 = icmp eq i32 %6, 0, !dbg !9436
  br i1 %7, label %8, label %9, !dbg !9437

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !9438
  br label %34, !dbg !9440

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #26, !dbg !9441
  %10 = add nsw i32 %5, -48, !dbg !9442
  store i32 %10, i32* @ansi_val, align 4, !dbg !9443
  store i32 0, i32* @ansi_val_2, align 4, !dbg !9444
  br label %81, !dbg !9445

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #26, !dbg !9446
  br i1 %12, label %13, label %34, !dbg !9448

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !9449
  %15 = tail call fastcc i32 @isdigit.61(i32 noundef %14) #26, !dbg !9452
  %16 = icmp eq i32 %15, 0, !dbg !9452
  br i1 %16, label %29, label %17, !dbg !9453

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #26, !dbg !9454
  br i1 %18, label %19, label %24, !dbg !9457

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !9458
  %21 = mul i32 %20, 10, !dbg !9458
  %22 = add nsw i32 %14, -48, !dbg !9460
  %23 = add i32 %22, %21, !dbg !9461
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !9461
  br label %81, !dbg !9462

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !9463
  %26 = mul i32 %25, 10, !dbg !9463
  %27 = add nsw i32 %14, -48, !dbg !9465
  %28 = add i32 %27, %26, !dbg !9466
  store i32 %28, i32* @ansi_val, align 4, !dbg !9466
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !9467
  br i1 %30, label %31, label %33, !dbg !9469

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #26, !dbg !9470
  br i1 %32, label %33, label %81, !dbg !9471

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #26, !dbg !9472
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #26, !dbg !9473
  br label %34, !dbg !9474

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !9428), !dbg !9475
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !9476

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !9477
  %37 = load i8, i8* @cur, align 1, !dbg !9480
  %38 = zext i8 %37 to i32, !dbg !9480
  %39 = icmp ugt i32 %36, %38, !dbg !9481
  br i1 %39, label %80, label %40, !dbg !9482

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !9483
  %42 = trunc i32 %36 to i8, !dbg !9483
  %43 = add i8 %41, %42, !dbg !9483
  store i8 %43, i8* @end, align 1, !dbg !9483
  %44 = sub i8 %37, %42, !dbg !9484
  store i8 %44, i8* @cur, align 1, !dbg !9484
  tail call fastcc void @cursor_backward(i32 noundef %36) #26, !dbg !9485
  br label %80, !dbg !9486

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !9487
  %47 = load i8, i8* @end, align 1, !dbg !9489
  %48 = zext i8 %47 to i32, !dbg !9489
  %49 = icmp ugt i32 %46, %48, !dbg !9490
  br i1 %49, label %80, label %50, !dbg !9491

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !9492
  %52 = sub i8 %47, %51, !dbg !9492
  store i8 %52, i8* @end, align 1, !dbg !9492
  %53 = load i8, i8* @cur, align 1, !dbg !9493
  %54 = add i8 %53, %51, !dbg !9493
  store i8 %54, i8* @cur, align 1, !dbg !9493
  tail call fastcc void @cursor_forward(i32 noundef %46) #26, !dbg !9494
  br label %80, !dbg !9495

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !9496
  %57 = icmp eq i8 %56, 0, !dbg !9496
  br i1 %57, label %80, label %58, !dbg !9498

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !9499
  tail call fastcc void @cursor_backward(i32 noundef %59) #26, !dbg !9500
  %60 = load i8, i8* @cur, align 1, !dbg !9501
  %61 = load i8, i8* @end, align 1, !dbg !9502
  %62 = add i8 %61, %60, !dbg !9502
  store i8 %62, i8* @end, align 1, !dbg !9502
  store i8 0, i8* @cur, align 1, !dbg !9503
  br label %80, !dbg !9504

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !9505
  %65 = icmp eq i8 %64, 0, !dbg !9505
  br i1 %65, label %80, label %66, !dbg !9507

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !9508
  tail call fastcc void @cursor_forward(i32 noundef %67) #26, !dbg !9509
  %68 = load i8, i8* @end, align 1, !dbg !9510
  %69 = load i8, i8* @cur, align 1, !dbg !9511
  %70 = add i8 %69, %68, !dbg !9511
  store i8 %70, i8* @cur, align 1, !dbg !9511
  store i8 0, i8* @end, align 1, !dbg !9512
  br label %80, !dbg !9513

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !9514
  %73 = icmp eq i8 %72, 0, !dbg !9514
  br i1 %73, label %80, label %74, !dbg !9516

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #26, !dbg !9517
  %75 = load i8, i8* @cur, align 1, !dbg !9518
  %76 = zext i8 %75 to i32, !dbg !9519
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !9519
  %78 = load i8, i8* @end, align 1, !dbg !9520
  %79 = add i8 %78, -1, !dbg !9520
  store i8 %79, i8* @end, align 1, !dbg !9520
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #26, !dbg !9521
  br label %80, !dbg !9522

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #26, !dbg !9523
  br label %81, !dbg !9524

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !9524
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9525 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9530, metadata !DIExpression()), !dbg !9534
  call void @llvm.dbg.value(metadata i32 %0, metadata !9531, metadata !DIExpression()), !dbg !9534
  %2 = and i32 %0, 31, !dbg !9535
  %3 = shl nuw i32 1, %2, !dbg !9535
  call void @llvm.dbg.value(metadata i32 %3, metadata !9532, metadata !DIExpression()), !dbg !9534
  %4 = xor i32 %3, -1, !dbg !9536
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9537
  call void @llvm.dbg.value(metadata i32 %5, metadata !9533, metadata !DIExpression()), !dbg !9534
  %6 = and i32 %5, %3, !dbg !9538
  %7 = icmp ne i32 %6, 0, !dbg !9539
  ret i1 %7, !dbg !9540
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !9541 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9545, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.value(metadata i32 %0, metadata !9546, metadata !DIExpression()), !dbg !9548
  %2 = and i32 %0, 31, !dbg !9549
  %3 = shl nuw i32 1, %2, !dbg !9549
  call void @llvm.dbg.value(metadata i32 %3, metadata !9547, metadata !DIExpression()), !dbg !9548
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #26, !dbg !9550
  ret void, !dbg !9551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !9552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9554, metadata !DIExpression()), !dbg !9555
  %2 = add i32 %0, -32, !dbg !9556
  %3 = icmp ult i32 %2, 95, !dbg !9556
  %4 = zext i1 %3 to i32, !dbg !9556
  ret i32 %4, !dbg !9557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9558 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9562, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.value(metadata i8 %1, metadata !9563, metadata !DIExpression()), !dbg !9564
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 8) #26, !dbg !9565
  %3 = icmp eq i8 %1, 0, !dbg !9566
  br i1 %3, label %4, label %5, !dbg !9568

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 32) #26, !dbg !9569
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 8) #26, !dbg !9571
  br label %14, !dbg !9572

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #26, !dbg !9573
  call void @llvm.dbg.value(metadata i8 %1, metadata !9563, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.value(metadata i8* %0, metadata !9562, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.value(metadata i8 %1, metadata !9563, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9564
  br label %6, !dbg !9574

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !9563, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.value(metadata i8* %8, metadata !9562, metadata !DIExpression()), !dbg !9564
  %9 = add i8 %7, -1, !dbg !9575
  call void @llvm.dbg.value(metadata i8 %9, metadata !9563, metadata !DIExpression()), !dbg !9564
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9576
  %11 = load i8, i8* %10, align 1, !dbg !9578
  store i8 %11, i8* %8, align 1, !dbg !9579
  call void @llvm.dbg.value(metadata i8* %10, metadata !9562, metadata !DIExpression()), !dbg !9564
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %11) #26, !dbg !9580
  call void @llvm.dbg.value(metadata i8 %9, metadata !9563, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9564
  %12 = icmp eq i8 %9, 0, !dbg !9581
  br i1 %12, label %13, label %6, !dbg !9574, !llvm.loop !9582

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 32) #26, !dbg !9584
  tail call fastcc void @cursor_restore() #26, !dbg !9585
  br label %14, !dbg !9586

14:                                               ; preds = %13, %4
  ret void, !dbg !9586
}

; Function Attrs: optsize
declare !dbg !9587 dso_local void @k_queue_append(%struct.k_queue* noundef, i8* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !9590 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9594, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %1, metadata !9595, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %2, metadata !9596, metadata !DIExpression()), !dbg !9598
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %1) #26, !dbg !9599
  %4 = icmp eq i8 %2, 0, !dbg !9600
  br i1 %4, label %5, label %6, !dbg !9602

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !9603
  br label %17, !dbg !9605

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !9606
  call void @llvm.dbg.value(metadata i8 %7, metadata !9597, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8* %0, metadata !9594, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9598
  store i8 %1, i8* %0, align 1, !dbg !9607
  tail call fastcc void @cursor_save() #26, !dbg !9608
  call void @llvm.dbg.value(metadata i8 %7, metadata !9597, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %2, metadata !9596, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8* %0, metadata !9594, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %2, metadata !9596, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9598
  br label %8, !dbg !9609

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9598
  call void @llvm.dbg.value(metadata i8 %10, metadata !9597, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %11, metadata !9596, metadata !DIExpression()), !dbg !9598
  %13 = add i8 %11, -1, !dbg !9610
  call void @llvm.dbg.value(metadata i8 %13, metadata !9596, metadata !DIExpression()), !dbg !9598
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %10) #26, !dbg !9611
  %14 = load i8, i8* %12, align 1, !dbg !9613
  call void @llvm.dbg.value(metadata i8 %14, metadata !9595, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8* %12, metadata !9594, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9598
  store i8 %10, i8* %12, align 1, !dbg !9614
  call void @llvm.dbg.value(metadata i8 %14, metadata !9597, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8* %12, metadata !9594, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %13, metadata !9596, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9598
  %15 = icmp eq i8 %13, 0, !dbg !9615
  br i1 %15, label %16, label %8, !dbg !9609, !llvm.loop !9616

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #26, !dbg !9618
  br label %17, !dbg !9619

17:                                               ; preds = %16, %5
  ret void, !dbg !9619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !9620 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0)) #25, !dbg !9621
  ret void, !dbg !9622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !9623 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !9624
  ret void, !dbg !9625
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !9626 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9631, metadata !DIExpression()), !dbg !9633
  call void @llvm.dbg.value(metadata i32 %0, metadata !9632, metadata !DIExpression()), !dbg !9633
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9634
  ret i32 %2, !dbg !9635
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !9636 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9638, metadata !DIExpression()), !dbg !9640
  call void @llvm.dbg.value(metadata i32 %0, metadata !9639, metadata !DIExpression()), !dbg !9640
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9641
  ret i32 %2, !dbg !9642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.61(i32 noundef %0) unnamed_addr #11 !dbg !9643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9645, metadata !DIExpression()), !dbg !9646
  %2 = add i32 %0, -48, !dbg !9647
  %3 = icmp ult i32 %2, 10, !dbg !9648
  %4 = zext i1 %3 to i32, !dbg !9648
  ret i32 %4, !dbg !9649
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !9650 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9652, metadata !DIExpression()), !dbg !9656
  call void @llvm.dbg.value(metadata i32 4, metadata !9653, metadata !DIExpression()), !dbg !9656
  call void @llvm.dbg.value(metadata i32 16, metadata !9654, metadata !DIExpression()), !dbg !9656
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #26, !dbg !9657
  call void @llvm.dbg.value(metadata i32 %1, metadata !9655, metadata !DIExpression()), !dbg !9656
  %2 = and i32 %1, 16, !dbg !9658
  %3 = icmp ne i32 %2, 0, !dbg !9659
  ret i1 %3, !dbg !9660
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9661 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9663, metadata !DIExpression()), !dbg !9666
  call void @llvm.dbg.value(metadata i32 %0, metadata !9664, metadata !DIExpression()), !dbg !9666
  %2 = and i32 %0, 31, !dbg !9667
  %3 = shl nuw i32 1, %2, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %3, metadata !9665, metadata !DIExpression()), !dbg !9666
  %4 = xor i32 %3, -1, !dbg !9668
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9669
  ret void, !dbg !9670
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !9671 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9673, metadata !DIExpression()), !dbg !9674
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 noundef %0) #25, !dbg !9675
  ret void, !dbg !9676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !9677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9679, metadata !DIExpression()), !dbg !9680
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.62, i32 0, i32 0), i32 noundef %0) #25, !dbg !9681
  ret void, !dbg !9682
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !9683 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9687, metadata !DIExpression()), !dbg !9688
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !9689
  ret i32 %1, !dbg !9690
}

; Function Attrs: optsize
declare !dbg !9691 dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef, [1 x i64]) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !9692 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9694, metadata !DIExpression()), !dbg !9696
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9697
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9695, metadata !DIExpression()), !dbg !9696
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !9698
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9698
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9700
  br i1 %4, label %7, label %5, !dbg !9701

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9702
  br label %7, !dbg !9703

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9696
  ret i32 %8, !dbg !9704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update.64() unnamed_addr #1 !dbg !9705 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9707, metadata !DIExpression()), !dbg !9709
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9710
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9708, metadata !DIExpression()), !dbg !9709
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !9711
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9711
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9713
  br i1 %4, label %7, label %5, !dbg !9714

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9715
  br label %7, !dbg !9716

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9709
  ret i32 %8, !dbg !9717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable.65() unnamed_addr #1 !dbg !9718 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9720, metadata !DIExpression()), !dbg !9722
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9723
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9721, metadata !DIExpression()), !dbg !9722
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !9724
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9724
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9726
  br i1 %4, label %6, label %5, !dbg !9727

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9728
  br label %6, !dbg !9730

6:                                                ; preds = %5, %0
  ret void, !dbg !9731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable.66() unnamed_addr #1 !dbg !9732 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9734, metadata !DIExpression()), !dbg !9736
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9737
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9735, metadata !DIExpression()), !dbg !9736
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !9738
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9738
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9740
  br i1 %4, label %6, label %5, !dbg !9741

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9742
  br label %6, !dbg !9744

6:                                                ; preds = %5, %0
  ret void, !dbg !9745
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9746 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9748, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata i8 %1, metadata !9749, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata i32 %2, metadata !9750, metadata !DIExpression()), !dbg !9753
  %5 = bitcast i32* %4 to i8*, !dbg !9754
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9754
  call void @llvm.dbg.value(metadata i32* %4, metadata !9752, metadata !DIExpression(DW_OP_deref)), !dbg !9753
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !9755
  call void @llvm.dbg.value(metadata i32 %6, metadata !9751, metadata !DIExpression()), !dbg !9753
  %7 = icmp eq i32 %6, 0, !dbg !9756
  br i1 %7, label %8, label %31, !dbg !9758

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9751, metadata !DIExpression()), !dbg !9753
  %9 = and i32 %2, 131072, !dbg !9759
  %10 = icmp eq i32 %9, 0, !dbg !9761
  br i1 %10, label %28, label %11, !dbg !9762

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9763
  %13 = icmp eq i32 %12, 0, !dbg !9766
  br i1 %13, label %18, label %14, !dbg !9767

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9768
  %16 = shl nuw i32 1, %15, !dbg !9768
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !9770
  br label %25, !dbg !9771

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9772
  %20 = icmp eq i32 %19, 0, !dbg !9774
  %21 = zext i8 %1 to i32, !dbg !9753
  br i1 %20, label %25, label %22, !dbg !9775

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9776
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !9778
  br label %25, !dbg !9779

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9780
  %27 = load i32, i32* %4, align 4, !dbg !9781
  call void @llvm.dbg.value(metadata i32 %30, metadata !9752, metadata !DIExpression()), !dbg !9753
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !9782
  br label %31, !dbg !9783

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9780
  %30 = load i32, i32* %4, align 4, !dbg !9781
  call void @llvm.dbg.value(metadata i32 %30, metadata !9752, metadata !DIExpression()), !dbg !9753
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !9782
  call void @llvm.dbg.value(metadata i32 0, metadata !9751, metadata !DIExpression()), !dbg !9753
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9784
  ret i32 %6, !dbg !9784
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !9785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9789, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.value(metadata i32* %1, metadata !9790, metadata !DIExpression()), !dbg !9794
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9795
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9795
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9795
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9791, metadata !DIExpression()), !dbg !9794
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9796
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9796
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9796
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9793, metadata !DIExpression()), !dbg !9794
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !9797
  store i32 %9, i32* %1, align 4, !dbg !9798
  ret i32 0, !dbg !9799
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9800 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9802, metadata !DIExpression()), !dbg !9808
  call void @llvm.dbg.value(metadata i32 %1, metadata !9803, metadata !DIExpression()), !dbg !9808
  call void @llvm.dbg.value(metadata i32 %2, metadata !9804, metadata !DIExpression()), !dbg !9808
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9809
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9809
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9809
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9805, metadata !DIExpression()), !dbg !9808
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9810
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9810
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9810
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9806, metadata !DIExpression()), !dbg !9808
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !9811
  call void @llvm.dbg.value(metadata i32 %10, metadata !9807, metadata !DIExpression()), !dbg !9808
  %11 = xor i32 %1, -1, !dbg !9812
  %12 = and i32 %10, %11, !dbg !9813
  %13 = and i32 %2, %1, !dbg !9814
  %14 = or i32 %12, %13, !dbg !9815
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !9816
  ret i32 0, !dbg !9817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9818 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9820, metadata !DIExpression()), !dbg !9824
  call void @llvm.dbg.value(metadata i32 %1, metadata !9821, metadata !DIExpression()), !dbg !9824
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9825
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9825
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9825
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9822, metadata !DIExpression()), !dbg !9824
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9826
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9826
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9826
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9823, metadata !DIExpression()), !dbg !9824
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9827
  store volatile i32 %1, i32* %9, align 4, !dbg !9827
  ret i32 0, !dbg !9828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9829 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9831, metadata !DIExpression()), !dbg !9835
  call void @llvm.dbg.value(metadata i32 %1, metadata !9832, metadata !DIExpression()), !dbg !9835
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9836
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9836
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9836
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9833, metadata !DIExpression()), !dbg !9835
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9837
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9837
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9837
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9834, metadata !DIExpression()), !dbg !9835
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !9838
  ret i32 0, !dbg !9839
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9840 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9842, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i32 %1, metadata !9843, metadata !DIExpression()), !dbg !9846
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9847
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9847
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9847
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9844, metadata !DIExpression()), !dbg !9846
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9848
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9848
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9848
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9845, metadata !DIExpression()), !dbg !9846
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9849
  %10 = load volatile i32, i32* %9, align 4, !dbg !9849
  %11 = xor i32 %10, %1, !dbg !9849
  store volatile i32 %11, i32* %9, align 4, !dbg !9849
  ret i32 0, !dbg !9850
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9851 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9853, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i8 %1, metadata !9854, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 %2, metadata !9855, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 %3, metadata !9856, metadata !DIExpression()), !dbg !9863
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9864
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9864
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9864
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9857, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i8* undef, metadata !9858, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 0, metadata !9860, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 0, metadata !9861, metadata !DIExpression()), !dbg !9863
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9865

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9866
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !9870
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9871
  %12 = load i32, i32* %11, align 4, !dbg !9871
  %13 = icmp eq i32 %10, %12, !dbg !9872
  br i1 %13, label %14, label %29, !dbg !9873

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9874
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9876
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9877
  br label %29, !dbg !9878

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9879
  %17 = load i8*, i8** %16, align 4, !dbg !9879
  call void @llvm.dbg.value(metadata i8* %17, metadata !9858, metadata !DIExpression()), !dbg !9863
  %18 = zext i8 %1 to i32, !dbg !9880
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9882
  %20 = icmp eq i32 %19, 0, !dbg !9883
  br i1 %20, label %21, label %29, !dbg !9884

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9885
  %23 = load i32, i32* %22, align 4, !dbg !9885
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !9886
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9887

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9860, metadata !DIExpression()), !dbg !9863
  br label %27, !dbg !9888

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9860, metadata !DIExpression()), !dbg !9863
  br label %27, !dbg !9890

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9860, metadata !DIExpression()), !dbg !9863
  br label %27, !dbg !9891

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9863
  call void @llvm.dbg.value(metadata i32 %28, metadata !9860, metadata !DIExpression()), !dbg !9863
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9892
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9893
  br label %29, !dbg !9893

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9863
  call void @llvm.dbg.value(metadata i32 %30, metadata !9861, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.label(metadata !9862), !dbg !9894
  ret i32 %30, !dbg !9895
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !9896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9898, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9899, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i1 %2, metadata !9900, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9902
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9903
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9903
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9903
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9901, metadata !DIExpression()), !dbg !9902
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9904
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !9905
  ret i32 %8, !dbg !9906
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !9907 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9913, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9914, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata i1 %2, metadata !9915, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9916
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !9917
  br i1 %4, label %10, label %5, !dbg !9919

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9920
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !9923
  %8 = or i1 %7, %2, !dbg !9924
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9924
  br i1 %2, label %11, label %13, !dbg !9924

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9925

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9926
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !9929
  br label %13, !dbg !9930

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9916
  ret i32 %14, !dbg !9931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9932 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9936, metadata !DIExpression()), !dbg !9937
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9938
  %3 = icmp eq %struct._snode* %2, null, !dbg !9938
  ret i1 %3, !dbg !9938
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9939 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9943, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9944, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9945, metadata !DIExpression()), !dbg !9947
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9948
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9946, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9945, metadata !DIExpression()), !dbg !9947
  %4 = icmp eq %struct._snode* %3, null, !dbg !9950
  br i1 %4, label %15, label %5, !dbg !9948

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9946, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9945, metadata !DIExpression()), !dbg !9947
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9952
  br i1 %6, label %9, label %11, !dbg !9955

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9946, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9945, metadata !DIExpression()), !dbg !9947
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9952
  br i1 %8, label %9, label %11, !dbg !9955, !llvm.loop !9956

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !9957
  br label %15, !dbg !9957

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9946, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9945, metadata !DIExpression()), !dbg !9947
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !9950
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9946, metadata !DIExpression()), !dbg !9947
  %14 = icmp eq %struct._snode* %13, null, !dbg !9950
  br i1 %14, label %15, label %7, !dbg !9948, !llvm.loop !9956

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9960 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9964, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9965, metadata !DIExpression()), !dbg !9966
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9967
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !9967
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !9967
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9968
  %5 = icmp eq %struct._snode* %4, null, !dbg !9968
  br i1 %5, label %6, label %8, !dbg !9967

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9970
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !9970
  br label %8, !dbg !9970

8:                                                ; preds = %6, %2
  ret void, !dbg !9967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9972 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9976, metadata !DIExpression()), !dbg !9977
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9978
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9978
  ret %struct._snode* %3, !dbg !9979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9980 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9984, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9985, metadata !DIExpression()), !dbg !9986
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9987
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9988
  ret void, !dbg !9989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9990 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9992, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9993, metadata !DIExpression()), !dbg !9994
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9995
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9996
  ret void, !dbg !9997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9998 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10000, metadata !DIExpression()), !dbg !10001
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10002
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10002
  ret %struct._snode* %3, !dbg !10003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !10004 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10006, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10007, metadata !DIExpression()), !dbg !10008
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10009
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10010
  ret void, !dbg !10011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !10012 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10016, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10017, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10018, metadata !DIExpression()), !dbg !10019
  %4 = icmp eq %struct._snode* %1, null, !dbg !10020
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !10022
  br i1 %4, label %6, label %11, !dbg !10023

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !10024
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10026
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10026
  br i1 %8, label %9, label %15, !dbg !10024

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10028
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !10028
  br label %15, !dbg !10028

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !10030
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10032
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10032
  br i1 %13, label %14, label %15, !dbg !10030

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !10034
  br label %15, !dbg !10034

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !10023
  ret void, !dbg !10023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !10036 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10040, metadata !DIExpression()), !dbg !10041
  %2 = icmp eq %struct._snode* %0, null, !dbg !10042
  br i1 %2, label %5, label %3, !dbg !10042

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !10042
  br label %5, !dbg !10042

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10042
  ret %struct._snode* %6, !dbg !10042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10043 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10045, metadata !DIExpression()), !dbg !10046
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !10047
  ret %struct._snode* %2, !dbg !10047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10048 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10050, metadata !DIExpression()), !dbg !10051
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10052
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10052
  ret %struct._snode* %3, !dbg !10053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10056, metadata !DIExpression()), !dbg !10059
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10060, !range !10061
  call void @llvm.dbg.value(metadata i32 %2, metadata !10057, metadata !DIExpression()), !dbg !10059
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10062
  call void @llvm.dbg.value(metadata i32 %3, metadata !10058, metadata !DIExpression()), !dbg !10059
  ret i32 %3, !dbg !10063
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10066, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.value(metadata i8* %1, metadata !10067, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.value(metadata i8* %1, metadata !10068, metadata !DIExpression()), !dbg !10069
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10070
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10070
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10071
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10071
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10071
  %8 = shl nuw i32 1, %0, !dbg !10072
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10073
  ret void, !dbg !10074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10075 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10079, metadata !DIExpression()), !dbg !10085
  call void @llvm.dbg.value(metadata i32 %1, metadata !10080, metadata !DIExpression()), !dbg !10085
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10081, metadata !DIExpression()), !dbg !10085
  %4 = bitcast i64* %3 to i8*, !dbg !10086
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10086
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10083, metadata !DIExpression()), !dbg !10085
  store i64 70368744177732, i64* %3, align 8, !dbg !10087
  call void @llvm.dbg.value(metadata i64* %3, metadata !10083, metadata !DIExpression(DW_OP_deref)), !dbg !10085
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10088
  call void @llvm.dbg.value(metadata i32 %5, metadata !10084, metadata !DIExpression()), !dbg !10085
  %6 = icmp eq i32 %5, 0, !dbg !10089
  br i1 %6, label %7, label %8, !dbg !10091

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10092
  br label %8, !dbg !10093

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10094
  ret void, !dbg !10094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10095 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10097, metadata !DIExpression()), !dbg !10100
  call void @llvm.dbg.value(metadata i8* %0, metadata !10098, metadata !DIExpression()), !dbg !10100
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10101
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10099, metadata !DIExpression()), !dbg !10100
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10102
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10102
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !10103
  ret i32 %5, !dbg !10104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10107, metadata !DIExpression()), !dbg !10110
  call void @llvm.dbg.value(metadata i32 %1, metadata !10108, metadata !DIExpression()), !dbg !10110
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10111
  call void @llvm.dbg.value(metadata i32 %3, metadata !10109, metadata !DIExpression()), !dbg !10110
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10112
  ret void, !dbg !10113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !10114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10118, metadata !DIExpression()), !dbg !10119
  %2 = sdiv i32 %0, 4, !dbg !10120
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10121
  %6 = add nsw i32 %5, 16, !dbg !10122
  %7 = shl i32 15, %6, !dbg !10123
  %8 = or i32 %7, %2, !dbg !10124
  ret i32 %8, !dbg !10125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10130, metadata !DIExpression()), !dbg !10132
  call void @llvm.dbg.value(metadata i32 %1, metadata !10131, metadata !DIExpression()), !dbg !10132
  %3 = and i32 %1, 255, !dbg !10133
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10133
  %5 = load volatile i32, i32* %4, align 4, !dbg !10133
  %6 = lshr i32 %1, 16, !dbg !10133
  %7 = xor i32 %6, -1, !dbg !10133
  %8 = and i32 %5, %7, !dbg !10133
  call void @llvm.dbg.value(metadata i32 %6, metadata !10134, metadata !DIExpression()) #24, !dbg !10138
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10140, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %9, metadata !10137, metadata !DIExpression()) #24, !dbg !10138
  call void @llvm.dbg.value(metadata i32 %9, metadata !10142, metadata !DIExpression()) #24, !dbg !10147
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !10149, !range !3892
  %11 = shl i32 %0, %10, !dbg !10133
  %12 = or i32 %11, %8, !dbg !10133
  store volatile i32 %12, i32* %4, align 4, !dbg !10133
  ret void, !dbg !10150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10151 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10155, metadata !DIExpression()), !dbg !10160
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10156, metadata !DIExpression()), !dbg !10160
  call void @llvm.dbg.value(metadata i32 %2, metadata !10157, metadata !DIExpression()), !dbg !10160
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10161
  %5 = icmp eq %struct._snode* %4, null, !dbg !10161
  br i1 %5, label %21, label %6, !dbg !10161

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10163
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10159, metadata !DIExpression()), !dbg !10160
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10158, metadata !DIExpression()), !dbg !10160
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10164
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10164
  %11 = load i32, i32* %10, align 4, !dbg !10164
  %12 = and i32 %11, %2, !dbg !10168
  %13 = icmp eq i32 %12, 0, !dbg !10168
  br i1 %13, label %19, label %14, !dbg !10169

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10158, metadata !DIExpression()), !dbg !10160
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10170
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10170
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10170
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10172
  br label %19, !dbg !10173

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10158, metadata !DIExpression()), !dbg !10160
  %20 = icmp eq %struct._snode* %8, null, !dbg !10174
  br i1 %20, label %21, label %6, !dbg !10174

21:                                               ; preds = %19, %3
  ret void, !dbg !10175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10178, metadata !DIExpression()), !dbg !10179
  %2 = and i32 %0, 255, !dbg !10180
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10180
  %4 = load volatile i32, i32* %3, align 4, !dbg !10180
  %5 = lshr i32 %0, 16, !dbg !10180
  %6 = and i32 %4, %5, !dbg !10180
  call void @llvm.dbg.value(metadata i32 %5, metadata !10134, metadata !DIExpression()) #24, !dbg !10181
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !10183, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %7, metadata !10137, metadata !DIExpression()) #24, !dbg !10181
  call void @llvm.dbg.value(metadata i32 %7, metadata !10142, metadata !DIExpression()) #24, !dbg !10184
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10186, !range !3892
  %9 = lshr i32 %6, %8, !dbg !10187
  ret i32 %9, !dbg !10188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10189 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10194, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.value(metadata i32 %1, metadata !10195, metadata !DIExpression()), !dbg !10196
  %3 = shl i32 %1, 16, !dbg !10197
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10197
  store volatile i32 %3, i32* %4, align 4, !dbg !10197
  ret void, !dbg !10198
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10199 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10203, metadata !DIExpression()), !dbg !10204
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10205
  %3 = load volatile i32, i32* %2, align 4, !dbg !10205
  ret i32 %3, !dbg !10206
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10207 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10209, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.value(metadata i32 %1, metadata !10210, metadata !DIExpression()), !dbg !10211
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10212
  store volatile i32 %1, i32* %3, align 4, !dbg !10212
  ret void, !dbg !10213
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10214 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10216, metadata !DIExpression()), !dbg !10217
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10218
  %3 = load volatile i32, i32* %2, align 4, !dbg !10218
  ret i32 %3, !dbg !10219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !10220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10224, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.value(metadata i32* %1, metadata !10225, metadata !DIExpression()), !dbg !10226
  %3 = and i32 %0, 131072, !dbg !10227
  %4 = icmp eq i32 %3, 0, !dbg !10229
  br i1 %4, label %22, label %5, !dbg !10230

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10231
  %6 = and i32 %0, 2, !dbg !10233
  %7 = icmp eq i32 %6, 0, !dbg !10235
  br i1 %7, label %11, label %8, !dbg !10236

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10237
  %10 = icmp eq i32 %9, 0, !dbg !10237
  br i1 %10, label %33, label %11, !dbg !10240

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10241
  store i32 %12, i32* %1, align 4, !dbg !10241
  %13 = and i32 %0, 16, !dbg !10242
  %14 = icmp eq i32 %13, 0, !dbg !10244
  br i1 %14, label %17, label %15, !dbg !10245

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10246
  br label %31, !dbg !10248

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10249
  %19 = icmp eq i32 %18, 0, !dbg !10251
  br i1 %19, label %33, label %20, !dbg !10252

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10253
  br label %31, !dbg !10255

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10256
  %24 = icmp eq i32 %23, 0, !dbg !10258
  br i1 %24, label %31, label %25, !dbg !10259

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10260
  %27 = icmp eq i32 %26, 0, !dbg !10263
  br i1 %27, label %28, label %31, !dbg !10264

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10265
  br label %33, !dbg !10266

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10226
  ret i32 %34, !dbg !10266
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10267 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10271, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %1, metadata !10272, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %2, metadata !10273, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %3, metadata !10274, metadata !DIExpression()), !dbg !10282
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10283
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10283
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10283
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10275, metadata !DIExpression()), !dbg !10282
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10284
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10284
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10284
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10276, metadata !DIExpression()), !dbg !10282
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10285
  call void @llvm.dbg.value(metadata i32 %11, metadata !10277, metadata !DIExpression()), !dbg !10282
  %12 = and i32 %2, 48, !dbg !10286
  call void @llvm.dbg.value(metadata i32 %12, metadata !10278, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %2, metadata !10279, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %2, metadata !10280, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %2, metadata !10281, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10282
  %13 = lshr i32 %2, 6, !dbg !10287
  %14 = and i32 %13, 1, !dbg !10287
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10288
  %15 = lshr i32 %2, 7, !dbg !10289
  %16 = and i32 %15, 3, !dbg !10289
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10290
  %17 = lshr i32 %2, 9, !dbg !10291
  %18 = and i32 %17, 3, !dbg !10291
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10292
  %19 = icmp eq i32 %12, 32, !dbg !10293
  br i1 %19, label %20, label %24, !dbg !10295

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10296
  br i1 %21, label %22, label %23, !dbg !10299

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10300
  br label %24, !dbg !10302

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10303
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10305
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10306
  ret void, !dbg !10307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !10308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10310, metadata !DIExpression()), !dbg !10312
  %2 = shl nuw i32 1, %0, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %2, metadata !10311, metadata !DIExpression()), !dbg !10312
  ret i32 %2, !dbg !10314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10315 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10319, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.value(metadata i32 %1, metadata !10320, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.value(metadata i32 %2, metadata !10321, metadata !DIExpression()), !dbg !10322
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10323
  %5 = load volatile i32, i32* %4, align 4, !dbg !10323
  %6 = xor i32 %1, -1, !dbg !10323
  %7 = and i32 %5, %6, !dbg !10323
  %8 = mul i32 %2, %1, !dbg !10323
  %9 = or i32 %7, %8, !dbg !10323
  store volatile i32 %9, i32* %4, align 4, !dbg !10323
  ret void, !dbg !10324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10325 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10327, metadata !DIExpression()), !dbg !10330
  call void @llvm.dbg.value(metadata i32 %1, metadata !10328, metadata !DIExpression()), !dbg !10330
  call void @llvm.dbg.value(metadata i32 %2, metadata !10329, metadata !DIExpression()), !dbg !10330
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10331
  %5 = load volatile i32, i32* %4, align 4, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10332
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10334, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10332
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10335
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10337, !range !3892
  %8 = shl nuw nsw i32 %7, 1, !dbg !10331
  %9 = shl i32 3, %8, !dbg !10331
  %10 = xor i32 %9, -1, !dbg !10331
  %11 = and i32 %5, %10, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10338
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10338
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10340
  %12 = shl i32 %2, %8, !dbg !10331
  %13 = or i32 %11, %12, !dbg !10331
  store volatile i32 %13, i32* %4, align 4, !dbg !10331
  ret void, !dbg !10342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10343 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10345, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.value(metadata i32 %1, metadata !10346, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.value(metadata i32 %2, metadata !10347, metadata !DIExpression()), !dbg !10348
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10349
  %5 = load volatile i32, i32* %4, align 4, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10350
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10352, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10350
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10353
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10355, !range !3892
  %8 = shl nuw nsw i32 %7, 1, !dbg !10349
  %9 = shl i32 3, %8, !dbg !10349
  %10 = xor i32 %9, -1, !dbg !10349
  %11 = and i32 %5, %10, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10356
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10356
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10358
  %12 = shl i32 %2, %8, !dbg !10349
  %13 = or i32 %11, %12, !dbg !10349
  store volatile i32 %13, i32* %4, align 4, !dbg !10349
  ret void, !dbg !10360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10361 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10363, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.value(metadata i32 %1, metadata !10364, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.value(metadata i32 %2, metadata !10365, metadata !DIExpression()), !dbg !10366
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10367
  %5 = load volatile i32, i32* %4, align 4, !dbg !10367
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10368
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10370, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10368
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10371
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10373, !range !3892
  %8 = shl nuw nsw i32 %7, 2, !dbg !10367
  %9 = shl i32 15, %8, !dbg !10367
  %10 = xor i32 %9, -1, !dbg !10367
  %11 = and i32 %5, %10, !dbg !10367
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10374
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10374
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10376
  %12 = shl i32 %2, %8, !dbg !10367
  %13 = or i32 %11, %12, !dbg !10367
  store volatile i32 %13, i32* %4, align 4, !dbg !10367
  ret void, !dbg !10378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10379 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10381, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i32 %1, metadata !10382, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i32 %2, metadata !10383, metadata !DIExpression()), !dbg !10384
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10385
  %5 = load volatile i32, i32* %4, align 4, !dbg !10385
  %6 = lshr i32 %1, 8, !dbg !10385
  call void @llvm.dbg.value(metadata i32 %6, metadata !10134, metadata !DIExpression()) #24, !dbg !10386
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10388, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %7, metadata !10137, metadata !DIExpression()) #24, !dbg !10386
  call void @llvm.dbg.value(metadata i32 %7, metadata !10142, metadata !DIExpression()) #24, !dbg !10389
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10391, !range !3892
  %9 = shl nuw nsw i32 %8, 2, !dbg !10385
  %10 = shl i32 15, %9, !dbg !10385
  %11 = xor i32 %10, -1, !dbg !10385
  %12 = and i32 %5, %11, !dbg !10385
  call void @llvm.dbg.value(metadata i32 %6, metadata !10134, metadata !DIExpression()) #24, !dbg !10392
  call void @llvm.dbg.value(metadata i32 %7, metadata !10137, metadata !DIExpression()) #24, !dbg !10392
  call void @llvm.dbg.value(metadata i32 %7, metadata !10142, metadata !DIExpression()) #24, !dbg !10394
  %13 = shl i32 %2, %9, !dbg !10385
  %14 = or i32 %12, %13, !dbg !10385
  store volatile i32 %14, i32* %4, align 4, !dbg !10385
  ret void, !dbg !10396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10397 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10399, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %1, metadata !10400, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %2, metadata !10401, metadata !DIExpression()), !dbg !10402
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10403
  %5 = load volatile i32, i32* %4, align 4, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10404
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10406, !srcloc !10141
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10404
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10407
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10409, !range !3892
  %8 = shl nuw nsw i32 %7, 1, !dbg !10403
  %9 = shl i32 3, %8, !dbg !10403
  %10 = xor i32 %9, -1, !dbg !10403
  %11 = and i32 %5, %10, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %1, metadata !10134, metadata !DIExpression()) #24, !dbg !10410
  call void @llvm.dbg.value(metadata i32 %6, metadata !10137, metadata !DIExpression()) #24, !dbg !10410
  call void @llvm.dbg.value(metadata i32 %6, metadata !10142, metadata !DIExpression()) #24, !dbg !10412
  %12 = shl i32 %2, %8, !dbg !10403
  %13 = or i32 %11, %12, !dbg !10403
  store volatile i32 %13, i32* %4, align 4, !dbg !10403
  ret void, !dbg !10414
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10415 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10417, metadata !DIExpression()), !dbg !10420
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10421
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10421
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10421
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10418, metadata !DIExpression()), !dbg !10420
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10422
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10423
  %6 = tail call fastcc zeroext i1 @device_is_ready.73() #26, !dbg !10424
  br i1 %6, label %7, label %11, !dbg !10426

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %8, metadata !10419, metadata !DIExpression()), !dbg !10420
  %9 = icmp slt i32 %8, 0, !dbg !10428
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10430
  br label %11, !dbg !10430

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10420
  ret i32 %12, !dbg !10431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.73() unnamed_addr #1 !dbg !10432 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10436, metadata !DIExpression()), !dbg !10437
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10438, !srcloc !10440
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.74() #26, !dbg !10441
  ret i1 %1, !dbg !10442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10443 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10447, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i8 1, metadata !10448, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10449, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i32 0, metadata !10450, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10451, metadata !DIExpression()), !dbg !10452
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10453
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10453
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10453
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10449, metadata !DIExpression()), !dbg !10452
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10454
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10457
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10458
  call void @llvm.dbg.value(metadata i32 %7, metadata !10450, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i32 %7, metadata !10450, metadata !DIExpression()), !dbg !10452
  ret i32 %7, !dbg !10459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.74() unnamed_addr #1 !dbg !10460 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10462, metadata !DIExpression()), !dbg !10463
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !10464
  ret i1 %1, !dbg !10465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10466 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10470, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i32 %1, metadata !10471, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i32 %2, metadata !10472, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i32 %3, metadata !10473, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i32 0, metadata !10474, metadata !DIExpression()), !dbg !10478
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10479
  %5 = icmp eq i32 %3, 17, !dbg !10480
  br i1 %5, label %6, label %14, !dbg !10481

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10482
  call void @llvm.dbg.value(metadata i32 %7, metadata !10475, metadata !DIExpression()), !dbg !10483
  %8 = icmp eq i32 %7, 0, !dbg !10484
  %9 = shl nuw i32 1, %1, !dbg !10486
  br i1 %8, label %12, label %10, !dbg !10487

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10488
  br label %14, !dbg !10490

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10491
  br label %14, !dbg !10494

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10495
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !10496 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10498, metadata !DIExpression()), !dbg !10502
  call void @llvm.dbg.value(metadata i8* %1, metadata !10499, metadata !DIExpression()), !dbg !10502
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10503
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10503
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10503
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10500, metadata !DIExpression()), !dbg !10502
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10504
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10504
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !10506
  %9 = icmp eq i32 %8, 0, !dbg !10506
  br i1 %9, label %12, label %10, !dbg !10507

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10508
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !10510
  br label %12, !dbg !10511

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10512
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10514
  %15 = icmp eq i32 %14, 0, !dbg !10514
  br i1 %15, label %19, label %16, !dbg !10515

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10516
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !10517
  store i8 %18, i8* %1, align 1, !dbg !10518
  br label %19, !dbg !10519

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10502
  ret i32 %20, !dbg !10520
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10521 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10523, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.value(metadata i8 %1, metadata !10524, metadata !DIExpression()), !dbg !10527
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10528
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10528
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10528
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10525, metadata !DIExpression()), !dbg !10527
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10529

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10530
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10533
  %10 = icmp eq i32 %9, 0, !dbg !10533
  br i1 %10, label %18, label %11, !dbg !10534

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10535, !srcloc !10542
  call void @llvm.dbg.value(metadata i32 undef, metadata !10538, metadata !DIExpression()) #24, !dbg !10543
  call void @llvm.dbg.value(metadata i32 undef, metadata !10539, metadata !DIExpression()) #24, !dbg !10543
  call void @llvm.dbg.value(metadata i32 undef, metadata !10526, metadata !DIExpression()), !dbg !10527
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10544
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10546
  %15 = icmp eq i32 %14, 0, !dbg !10546
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10535
  br i1 %15, label %17, label %19, !dbg !10547

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10538, metadata !DIExpression()) #24, !dbg !10543
  call void @llvm.dbg.value(metadata i32 %16, metadata !10526, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.value(metadata i32 undef, metadata !10548, metadata !DIExpression()) #24, !dbg !10551
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !10553, !srcloc !10554
  br label %18, !dbg !10555

18:                                               ; preds = %17, %7
  br label %7, !dbg !10530, !llvm.loop !10556

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10535
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10558
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !10559
  call void @llvm.dbg.value(metadata i32 %20, metadata !10548, metadata !DIExpression()) #24, !dbg !10560
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !10562, !srcloc !10554
  ret void, !dbg !10563
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !10564 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10566, metadata !DIExpression()), !dbg !10569
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10570
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10570
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10570
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10567, metadata !DIExpression()), !dbg !10569
  call void @llvm.dbg.value(metadata i32 0, metadata !10568, metadata !DIExpression()), !dbg !10569
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10571
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10571
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10573
  %8 = icmp ne i32 %7, 0, !dbg !10573
  %9 = zext i1 %8 to i32, !dbg !10574
  call void @llvm.dbg.value(metadata i32 %9, metadata !10568, metadata !DIExpression()), !dbg !10569
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10575
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10577
  %12 = icmp eq i32 %11, 0, !dbg !10577
  %13 = or i32 %9, 2, !dbg !10578
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10578
  call void @llvm.dbg.value(metadata i32 %14, metadata !10568, metadata !DIExpression()), !dbg !10569
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10579
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !10581
  %17 = icmp eq i32 %16, 0, !dbg !10581
  %18 = or i32 %14, 4, !dbg !10582
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10582
  call void @llvm.dbg.value(metadata i32 %19, metadata !10568, metadata !DIExpression()), !dbg !10569
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10583
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !10585
  %22 = icmp eq i32 %21, 0, !dbg !10585
  %23 = or i32 %19, 8, !dbg !10586
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10586
  call void @llvm.dbg.value(metadata i32 %24, metadata !10568, metadata !DIExpression()), !dbg !10569
  %25 = and i32 %24, 8, !dbg !10587
  %26 = icmp eq i32 %25, 0, !dbg !10587
  br i1 %26, label %29, label %27, !dbg !10589

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10590
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !10592
  br label %29, !dbg !10593

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10594
  %31 = icmp eq i32 %30, 0, !dbg !10594
  br i1 %31, label %34, label %32, !dbg !10596

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10597
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !10599
  br label %34, !dbg !10600

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10601
  %36 = icmp eq i32 %35, 0, !dbg !10601
  br i1 %36, label %39, label %37, !dbg !10603

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10604
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !10606
  br label %39, !dbg !10607

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10608
  %41 = icmp eq i32 %40, 0, !dbg !10608
  br i1 %41, label %44, label %42, !dbg !10610

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10611
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !10613
  br label %44, !dbg !10614

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10615
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !10616
  ret i32 %24, !dbg !10617
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10618 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10620, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10621, metadata !DIExpression()), !dbg !10629
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10630
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10630
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10630
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10622, metadata !DIExpression()), !dbg !10629
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10631
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10631
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10631
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10623, metadata !DIExpression()), !dbg !10629
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10632
  %10 = load i8, i8* %9, align 4, !dbg !10632
  %11 = zext i8 %10 to i32, !dbg !10633
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !10634
  call void @llvm.dbg.value(metadata i32 %12, metadata !10625, metadata !DIExpression()), !dbg !10629
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10635
  %14 = load i8, i8* %13, align 1, !dbg !10635
  %15 = zext i8 %14 to i32, !dbg !10636
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !10637
  call void @llvm.dbg.value(metadata i32 %16, metadata !10626, metadata !DIExpression()), !dbg !10629
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10638
  %18 = load i8, i8* %17, align 2, !dbg !10638
  %19 = zext i8 %18 to i32, !dbg !10639
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !10640
  call void @llvm.dbg.value(metadata i32 %20, metadata !10627, metadata !DIExpression()), !dbg !10629
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10641
  %22 = load i8, i8* %21, align 1, !dbg !10641
  %23 = zext i8 %22 to i32, !dbg !10642
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !10643
  call void @llvm.dbg.value(metadata i32 %24, metadata !10628, metadata !DIExpression()), !dbg !10629
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10644

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10646
  br i1 %26, label %69, label %27, !dbg !10648

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10649

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10650
  br i1 %29, label %65, label %30, !dbg !10650

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10652
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10629
  br i1 %31, label %38, label %34, !dbg !10654

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10655
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !10655

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10658
  br i1 %37, label %38, label %69, !dbg !10659

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10660
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !10661
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !10662
  %41 = icmp eq i32 %12, %40, !dbg !10664
  br i1 %41, label %43, label %42, !dbg !10665

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !10666
  br label %43, !dbg !10668

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !10669
  %45 = icmp eq i32 %16, %44, !dbg !10671
  br i1 %45, label %47, label %46, !dbg !10672

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !10673
  br label %47, !dbg !10675

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !10676
  %49 = icmp eq i32 %20, %48, !dbg !10678
  br i1 %49, label %51, label %50, !dbg !10679

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !10680
  br label %51, !dbg !10682

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !10683
  %53 = icmp eq i32 %24, %52, !dbg !10685
  br i1 %53, label %55, label %54, !dbg !10686

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !10687
  br label %55, !dbg !10689

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10690
  %57 = load i32, i32* %56, align 4, !dbg !10690
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10692
  %59 = load i32, i32* %58, align 4, !dbg !10692
  %60 = icmp eq i32 %57, %59, !dbg !10693
  br i1 %60, label %63, label %61, !dbg !10694

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !10695
  %62 = load i32, i32* %56, align 4, !dbg !10697
  store i32 %62, i32* %58, align 4, !dbg !10698
  br label %63, !dbg !10699

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10700
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !10701
  br label %69, !dbg !10702

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10650
  %67 = and i8 %66, 1, !dbg !10650
  %68 = icmp eq i8 %67, 0, !dbg !10650
  br i1 %68, label %30, label %69, !dbg !10650

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10629
  ret i32 %70, !dbg !10703
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !10704 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10706, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10707, metadata !DIExpression()), !dbg !10709
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10710
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10710
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10710
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10708, metadata !DIExpression()), !dbg !10709
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10711
  %7 = load i32, i32* %6, align 4, !dbg !10711
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10712
  store i32 %7, i32* %8, align 4, !dbg !10713
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10714, !range !10715
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !10716
  %11 = trunc i32 %10 to i8, !dbg !10716
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10717
  store i8 %11, i8* %12, align 4, !dbg !10718
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !10719, !range !10720
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !10721
  %15 = trunc i32 %14 to i8, !dbg !10721
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10722
  store i8 %15, i8* %16, align 1, !dbg !10723
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !10724
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10725, !range !10715
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !10726
  %20 = trunc i32 %19 to i8, !dbg !10726
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10727
  store i8 %20, i8* %21, align 2, !dbg !10728
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !10729, !range !10730
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !10731
  %24 = trunc i32 %23 to i8, !dbg !10731
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10732
  store i8 %24, i8* %25, align 1, !dbg !10733
  ret i32 0, !dbg !10734
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !10735 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10737, metadata !DIExpression()), !dbg !10743
  call void @llvm.dbg.value(metadata i8* %1, metadata !10738, metadata !DIExpression()), !dbg !10743
  call void @llvm.dbg.value(metadata i32 %2, metadata !10739, metadata !DIExpression()), !dbg !10743
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10744
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10744
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10744
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10740, metadata !DIExpression()), !dbg !10743
  call void @llvm.dbg.value(metadata i8 0, metadata !10741, metadata !DIExpression()), !dbg !10743
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10745
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10745
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10747
  %10 = icmp eq i32 %9, 0, !dbg !10747
  br i1 %10, label %30, label %11, !dbg !10748

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10749, !srcloc !10542
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !10749
  call void @llvm.dbg.value(metadata i32 %13, metadata !10538, metadata !DIExpression()) #24, !dbg !10751
  call void @llvm.dbg.value(metadata i32 undef, metadata !10539, metadata !DIExpression()) #24, !dbg !10751
  call void @llvm.dbg.value(metadata i32 %13, metadata !10742, metadata !DIExpression()), !dbg !10743
  call void @llvm.dbg.value(metadata i8 0, metadata !10741, metadata !DIExpression()), !dbg !10743
  %14 = icmp sgt i32 %2, 0, !dbg !10752
  br i1 %14, label %15, label %28, !dbg !10753

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !10741, metadata !DIExpression()), !dbg !10743
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10754
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !10755
  %20 = icmp eq i32 %19, 0, !dbg !10753
  br i1 %20, label %28, label %21, !dbg !10756

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10757
  %23 = add i8 %17, 1, !dbg !10759
  call void @llvm.dbg.value(metadata i8 %23, metadata !10741, metadata !DIExpression()), !dbg !10743
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !10760
  %25 = load i8, i8* %24, align 1, !dbg !10760
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !10761
  %26 = zext i8 %23 to i32, !dbg !10762
  %27 = icmp slt i32 %26, %2, !dbg !10752
  br i1 %27, label %15, label %28, !dbg !10753, !llvm.loop !10763

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !10762
  call void @llvm.dbg.value(metadata i32 %13, metadata !10548, metadata !DIExpression()) #24, !dbg !10765
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !10767, !srcloc !10554
  br label %30, !dbg !10768

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !10743
  ret i32 %31, !dbg !10769
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !10770 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10772, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata i8* %1, metadata !10773, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata i32 %2, metadata !10774, metadata !DIExpression()), !dbg !10777
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10778
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10778
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10778
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10775, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata i8 0, metadata !10776, metadata !DIExpression()), !dbg !10777
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10779
  call void @llvm.dbg.value(metadata i8 0, metadata !10776, metadata !DIExpression()), !dbg !10777
  %8 = icmp sgt i32 %2, 0, !dbg !10780
  br i1 %8, label %9, label %28, !dbg !10781

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !10776, metadata !DIExpression()), !dbg !10777
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10779
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10782
  %14 = icmp eq i32 %13, 0, !dbg !10781
  br i1 %14, label %28, label %15, !dbg !10783

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10784
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !10786
  %18 = add i8 %11, 1, !dbg !10787
  call void @llvm.dbg.value(metadata i8 %18, metadata !10776, metadata !DIExpression()), !dbg !10777
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !10788
  store i8 %17, i8* %19, align 1, !dbg !10789
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10790
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !10792
  %22 = icmp eq i32 %21, 0, !dbg !10792
  br i1 %22, label %25, label %23, !dbg !10793

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10794
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !10796
  br label %25, !dbg !10797

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !10776, metadata !DIExpression()), !dbg !10777
  %26 = zext i8 %18 to i32, !dbg !10798
  %27 = icmp slt i32 %26, %2, !dbg !10780
  br i1 %27, label %9, label %28, !dbg !10781, !llvm.loop !10799

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !10798
  ret i32 %29, !dbg !10801
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10802 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10804, metadata !DIExpression()), !dbg !10806
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10807
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10807
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10807
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10805, metadata !DIExpression()), !dbg !10806
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10808
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10808
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10809
  ret void, !dbg !10810
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10811 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10813, metadata !DIExpression()), !dbg !10815
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10816
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10816
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10816
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10814, metadata !DIExpression()), !dbg !10815
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10817
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10817
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10818
  ret void, !dbg !10819
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10820 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10822, metadata !DIExpression()), !dbg !10824
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10825
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10825
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10825
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10823, metadata !DIExpression()), !dbg !10824
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10826
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10826
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10827
  %8 = icmp eq i32 %7, 0, !dbg !10827
  br i1 %8, label %14, label %9, !dbg !10828

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10829
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !10830
  %12 = icmp ne i32 %11, 0, !dbg !10828
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !10831
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10834, metadata !DIExpression()), !dbg !10836
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10837
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10837
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10837
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10835, metadata !DIExpression()), !dbg !10836
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10838
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10838
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10839
  ret void, !dbg !10840
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10841 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10843, metadata !DIExpression()), !dbg !10845
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10846
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10846
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10846
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10844, metadata !DIExpression()), !dbg !10845
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10847
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10847
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10848
  ret void, !dbg !10849
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !10850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10852, metadata !DIExpression()), !dbg !10854
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10855
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10855
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10855
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10853, metadata !DIExpression()), !dbg !10854
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10856
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10856
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10857
  ret i32 %7, !dbg !10858
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10859 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10861, metadata !DIExpression()), !dbg !10863
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10864
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10864
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10864
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10862, metadata !DIExpression()), !dbg !10863
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10865
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10865
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10866
  ret i32 %7, !dbg !10867
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10868 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10870, metadata !DIExpression()), !dbg !10872
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10873
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10873
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10873
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10871, metadata !DIExpression()), !dbg !10872
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10874
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10874
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10875
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10876
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10876
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !10876

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10878
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10880
  br label %11, !dbg !10881

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10880
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10882
  ret void, !dbg !10883
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10884 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10886, metadata !DIExpression()), !dbg !10888
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10889
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10889
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10889
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10887, metadata !DIExpression()), !dbg !10888
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10890
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10890
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10891
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10892
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10892
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !10892

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10894
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10896
  br label %11, !dbg !10897

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10896
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10898
  ret void, !dbg !10899
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !10900 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10902, metadata !DIExpression()), !dbg !10904
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10905
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10905
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10905
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10903, metadata !DIExpression()), !dbg !10904
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10906
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10906
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10907
  %8 = icmp eq i32 %7, 0, !dbg !10907
  br i1 %8, label %13, label %9, !dbg !10908

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10909
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10910
  %12 = icmp eq i32 %11, 0, !dbg !10910
  br i1 %12, label %13, label %22, !dbg !10911

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10912
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !10913
  %16 = icmp eq i32 %15, 0, !dbg !10913
  br i1 %16, label %22, label %17, !dbg !10914

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10915
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !10916
  %20 = icmp ne i32 %19, 0, !dbg !10914
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !10917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !10918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10920, metadata !DIExpression()), !dbg !10921
  ret i32 1, !dbg !10922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10923 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10925, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10926, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.value(metadata i8* %2, metadata !10927, metadata !DIExpression()), !dbg !10929
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10930
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10930
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10930
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10928, metadata !DIExpression()), !dbg !10929
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10931
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10932
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10933
  store i8* %2, i8** %8, align 4, !dbg !10934
  ret void, !dbg !10935
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10936 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10941, metadata !DIExpression()), !dbg !10942
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10943
  %3 = load volatile i32, i32* %2, align 4, !dbg !10943
  %4 = lshr i32 %3, 5, !dbg !10944
  %5 = and i32 %4, 1, !dbg !10944
  ret i32 %5, !dbg !10945
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10946 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10948, metadata !DIExpression()), !dbg !10949
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10950
  %3 = load volatile i32, i32* %2, align 4, !dbg !10950
  %4 = lshr i32 %3, 5, !dbg !10951
  %5 = and i32 %4, 1, !dbg !10951
  ret i32 %5, !dbg !10952
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10953 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10955, metadata !DIExpression()), !dbg !10956
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10957
  %3 = load volatile i32, i32* %2, align 4, !dbg !10957
  %4 = lshr i32 %3, 6, !dbg !10958
  %5 = and i32 %4, 1, !dbg !10958
  ret i32 %5, !dbg !10959
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10960 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10962, metadata !DIExpression()), !dbg !10963
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10964
  %3 = load volatile i32, i32* %2, align 4, !dbg !10964
  %4 = lshr i32 %3, 6, !dbg !10965
  %5 = and i32 %4, 1, !dbg !10965
  ret i32 %5, !dbg !10966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10967 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10971, metadata !DIExpression()), !dbg !10974
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10975

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !10982
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10985, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !10982
  %5 = and i32 %4, -2, !dbg !10987
  call void @llvm.dbg.value(metadata i32 %5, metadata !10972, metadata !DIExpression()), !dbg !10988
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !10996
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !10996
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10998, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !10996
  %7 = icmp eq i32 %6, 0, !dbg !10975
  br i1 %7, label %8, label %3, !dbg !10987, !llvm.loop !11000

8:                                                ; preds = %3
  ret void, !dbg !11001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11002 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11004, metadata !DIExpression()), !dbg !11005
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11006
  %3 = load volatile i32, i32* %2, align 4, !dbg !11006
  %4 = and i32 %3, -65, !dbg !11006
  store volatile i32 %4, i32* %2, align 4, !dbg !11006
  ret void, !dbg !11007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11008 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11010, metadata !DIExpression()), !dbg !11013
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11014

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11015
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11018, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11015
  %5 = and i32 %4, -257, !dbg !11019
  call void @llvm.dbg.value(metadata i32 %5, metadata !11011, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11021
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11021
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11023, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11021
  %7 = icmp eq i32 %6, 0, !dbg !11014
  br i1 %7, label %8, label %3, !dbg !11019, !llvm.loop !11024

8:                                                ; preds = %3
  ret void, !dbg !11025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11026 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11028, metadata !DIExpression()), !dbg !11031
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !11032

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11033
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11036, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11033
  %5 = or i32 %4, 1, !dbg !11037
  call void @llvm.dbg.value(metadata i32 %5, metadata !11029, metadata !DIExpression()), !dbg !11038
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11039
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11039
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11041, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11039
  %7 = icmp eq i32 %6, 0, !dbg !11032
  br i1 %7, label %8, label %3, !dbg !11037, !llvm.loop !11042

8:                                                ; preds = %3
  ret void, !dbg !11043
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11044 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11046, metadata !DIExpression()), !dbg !11047
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11048
  %3 = load volatile i32, i32* %2, align 4, !dbg !11048
  %4 = or i32 %3, 64, !dbg !11048
  store volatile i32 %4, i32* %2, align 4, !dbg !11048
  ret void, !dbg !11049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11050 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11052, metadata !DIExpression()), !dbg !11055
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11056

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11057
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11060, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11057
  %5 = or i32 %4, 256, !dbg !11061
  call void @llvm.dbg.value(metadata i32 %5, metadata !11053, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11063
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11063
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11065, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11063
  %7 = icmp eq i32 %6, 0, !dbg !11056
  br i1 %7, label %8, label %3, !dbg !11061, !llvm.loop !11066

8:                                                ; preds = %3
  ret void, !dbg !11067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11068 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11070, metadata !DIExpression()), !dbg !11073
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11074

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11075
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11078, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11075
  %5 = and i32 %4, -33, !dbg !11079
  call void @llvm.dbg.value(metadata i32 %5, metadata !11071, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11081
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11081
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11083, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11081
  %7 = icmp eq i32 %6, 0, !dbg !11074
  br i1 %7, label %8, label %3, !dbg !11079, !llvm.loop !11084

8:                                                ; preds = %3
  ret void, !dbg !11085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11086 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11088, metadata !DIExpression()), !dbg !11091
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11092

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11093
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11096, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11093
  %5 = or i32 %4, 32, !dbg !11097
  call void @llvm.dbg.value(metadata i32 %5, metadata !11089, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11099
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11099
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11101, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11099
  %7 = icmp eq i32 %6, 0, !dbg !11092
  br i1 %7, label %8, label %3, !dbg !11097, !llvm.loop !11102

8:                                                ; preds = %3
  ret void, !dbg !11103
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11104 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11106, metadata !DIExpression()), !dbg !11107
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11108
  %3 = load volatile i32, i32* %2, align 4, !dbg !11108
  %4 = lshr i32 %3, 7, !dbg !11109
  %5 = and i32 %4, 1, !dbg !11109
  ret i32 %5, !dbg !11110
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11111 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11113, metadata !DIExpression()), !dbg !11116
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11117

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11118
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11121, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11118
  %5 = and i32 %4, -65, !dbg !11122
  call void @llvm.dbg.value(metadata i32 %5, metadata !11114, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11124
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11124
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11126, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11124
  %7 = icmp eq i32 %6, 0, !dbg !11117
  br i1 %7, label %8, label %3, !dbg !11122, !llvm.loop !11127

8:                                                ; preds = %3
  ret void, !dbg !11128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11129 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11131, metadata !DIExpression()), !dbg !11134
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11135

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11136
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11139, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11136
  %5 = or i32 %4, 64, !dbg !11140
  call void @llvm.dbg.value(metadata i32 %5, metadata !11132, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11142
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11142
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11144, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11142
  %7 = icmp eq i32 %6, 0, !dbg !11135
  br i1 %7, label %8, label %3, !dbg !11140, !llvm.loop !11145

8:                                                ; preds = %3
  ret void, !dbg !11146
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11147 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11151, metadata !DIExpression()), !dbg !11152
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11153
  %3 = load volatile i32, i32* %2, align 4, !dbg !11153
  %4 = trunc i32 %3 to i8, !dbg !11154
  ret i8 %4, !dbg !11155
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11156 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11158, metadata !DIExpression()), !dbg !11159
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11160
  %3 = load volatile i32, i32* %2, align 4, !dbg !11160
  %4 = lshr i32 %3, 3, !dbg !11161
  %5 = and i32 %4, 1, !dbg !11161
  ret i32 %5, !dbg !11162
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11163 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11165, metadata !DIExpression()), !dbg !11167
  %3 = bitcast i32* %2 to i8*, !dbg !11168
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11168
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11166, metadata !DIExpression()), !dbg !11169
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11170
  %5 = load volatile i32, i32* %4, align 4, !dbg !11170
  store volatile i32 %5, i32* %2, align 4, !dbg !11171
  %6 = load volatile i32, i32* %2, align 4, !dbg !11172
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11173
  %8 = load volatile i32, i32* %7, align 4, !dbg !11173
  store volatile i32 %8, i32* %2, align 4, !dbg !11174
  %9 = load volatile i32, i32* %2, align 4, !dbg !11175
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11176
  ret void, !dbg !11176
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11177 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11181, metadata !DIExpression()), !dbg !11183
  call void @llvm.dbg.value(metadata i8 %1, metadata !11182, metadata !DIExpression()), !dbg !11183
  %3 = zext i8 %1 to i32, !dbg !11184
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11185
  store volatile i32 %3, i32* %4, align 4, !dbg !11186
  ret void, !dbg !11187
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11188 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11192, metadata !DIExpression()), !dbg !11194
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11195
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11195
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11195
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11193, metadata !DIExpression()), !dbg !11194
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11196
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11196
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11197
  ret i32 %7, !dbg !11198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !11199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11203, metadata !DIExpression()), !dbg !11204
  %2 = icmp eq i32 %0, 1024, !dbg !11205
  %3 = select i1 %2, i32 2, i32 0, !dbg !11205
  %4 = icmp eq i32 %0, 1536, !dbg !11205
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11205
  ret i32 %5, !dbg !11206
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11207 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11209, metadata !DIExpression()), !dbg !11211
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11212
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11212
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11212
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11210, metadata !DIExpression()), !dbg !11211
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11213
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11213
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11214
  ret i32 %7, !dbg !11215
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !11216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11220, metadata !DIExpression()), !dbg !11221
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11222
  %3 = icmp ult i32 %2, 4, !dbg !11222
  br i1 %3, label %4, label %7, !dbg !11222

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11222
  %6 = load i32, i32* %5, align 4, !dbg !11222
  br label %7, !dbg !11222

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11223
  ret i32 %8, !dbg !11225
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11226 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11228, metadata !DIExpression()), !dbg !11230
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11231
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11231
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11231
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11229, metadata !DIExpression()), !dbg !11230
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11232
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11232
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11233
  ret i32 %7, !dbg !11234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11239, metadata !DIExpression()), !dbg !11241
  call void @llvm.dbg.value(metadata i32 %1, metadata !11240, metadata !DIExpression()), !dbg !11241
  %3 = icmp eq i32 %0, 4096, !dbg !11242
  %4 = icmp eq i32 %1, 0, !dbg !11242
  %5 = select i1 %4, i32 4, i32 3, !dbg !11242
  %6 = select i1 %4, i32 3, i32 2, !dbg !11242
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11242
  ret i32 %7, !dbg !11243
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11244 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11246, metadata !DIExpression()), !dbg !11248
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11249
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11249
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11249
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11247, metadata !DIExpression()), !dbg !11248
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11250
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11250
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11251
  ret i32 %7, !dbg !11252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11257, metadata !DIExpression()), !dbg !11258
  %2 = icmp eq i32 %0, 768, !dbg !11259
  %3 = zext i1 %2 to i32, !dbg !11258
  ret i32 %3, !dbg !11261
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11262 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11264, metadata !DIExpression()), !dbg !11265
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11266
  %3 = load volatile i32, i32* %2, align 4, !dbg !11266
  %4 = and i32 %3, 768, !dbg !11266
  ret i32 %4, !dbg !11267
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11268 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11270, metadata !DIExpression()), !dbg !11271
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11272
  %3 = load volatile i32, i32* %2, align 4, !dbg !11272
  %4 = and i32 %3, 4096, !dbg !11272
  ret i32 %4, !dbg !11273
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11274 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11276, metadata !DIExpression()), !dbg !11277
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11278
  %3 = load volatile i32, i32* %2, align 4, !dbg !11278
  %4 = and i32 %3, 12288, !dbg !11278
  ret i32 %4, !dbg !11279
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11280 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11282, metadata !DIExpression()), !dbg !11283
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11284
  %3 = load volatile i32, i32* %2, align 4, !dbg !11284
  %4 = and i32 %3, 1536, !dbg !11284
  ret i32 %4, !dbg !11285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !11286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11290, metadata !DIExpression()), !dbg !11291
  %2 = icmp eq i32 %0, 2, !dbg !11292
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11292
  %4 = icmp eq i32 %0, 1, !dbg !11292
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11292
  ret i32 %5, !dbg !11293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11298, metadata !DIExpression()), !dbg !11299
  %2 = icmp ult i32 %0, 3, !dbg !11300
  br i1 %2, label %3, label %6, !dbg !11300

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11300
  %5 = load i32, i32* %4, align 4, !dbg !11300
  br label %6, !dbg !11300

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11301
  ret i32 %7, !dbg !11303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11308, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i32 %1, metadata !11309, metadata !DIExpression()), !dbg !11310
  %3 = icmp eq i32 %0, 4, !dbg !11311
  %4 = icmp eq i32 %1, 0, !dbg !11311
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11311
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11311
  ret i32 %6, !dbg !11312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11317, metadata !DIExpression()), !dbg !11318
  %2 = icmp eq i32 %0, 1, !dbg !11319
  %3 = select i1 %2, i32 768, i32 0, !dbg !11318
  ret i32 %3, !dbg !11321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11322 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11324, metadata !DIExpression()), !dbg !11325
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11326
  %3 = load volatile i32, i32* %2, align 4, !dbg !11326
  %4 = and i32 %3, -8193, !dbg !11326
  store volatile i32 %4, i32* %2, align 4, !dbg !11326
  ret void, !dbg !11327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11328 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11332, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32 %1, metadata !11333, metadata !DIExpression()), !dbg !11335
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11336
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11336
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11336
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11334, metadata !DIExpression()), !dbg !11335
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11337
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11337
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11338
  ret void, !dbg !11339
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11340 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11342, metadata !DIExpression()), !dbg !11345
  call void @llvm.dbg.value(metadata i32 %1, metadata !11343, metadata !DIExpression()), !dbg !11345
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11346
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11346
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11346
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11344, metadata !DIExpression()), !dbg !11345
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11347
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11347
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11348
  ret void, !dbg !11349
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11350 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11352, metadata !DIExpression()), !dbg !11355
  call void @llvm.dbg.value(metadata i32 %1, metadata !11353, metadata !DIExpression()), !dbg !11355
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11356
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11356
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11356
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11354, metadata !DIExpression()), !dbg !11355
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11357
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11357
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11358
  ret void, !dbg !11359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11360 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11362, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.value(metadata i32 %1, metadata !11363, metadata !DIExpression()), !dbg !11365
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11366
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11366
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11366
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11364, metadata !DIExpression()), !dbg !11365
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11367
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11367
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11368
  ret void, !dbg !11369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11370 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11372, metadata !DIExpression()), !dbg !11377
  call void @llvm.dbg.value(metadata i32 %1, metadata !11373, metadata !DIExpression()), !dbg !11377
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11378
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11378
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11378
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11374, metadata !DIExpression()), !dbg !11377
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11379
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11379
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11379
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11375, metadata !DIExpression()), !dbg !11377
  %10 = bitcast i32* %3 to i8*, !dbg !11380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11380
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11381
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11381
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11385
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11385
  %15 = load i8*, i8** %14, align 4, !dbg !11385
  call void @llvm.dbg.value(metadata i32* %3, metadata !11376, metadata !DIExpression(DW_OP_deref)), !dbg !11377
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11386
  %17 = icmp slt i32 %16, 0, !dbg !11387
  br i1 %17, label %23, label %18, !dbg !11388

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11389
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11389
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !11390
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11391
  %22 = load i32, i32* %3, align 4, !dbg !11392
  call void @llvm.dbg.value(metadata i32 %22, metadata !11376, metadata !DIExpression()), !dbg !11377
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !11393
  br label %23, !dbg !11394

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11394
  ret void, !dbg !11394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11395 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11397, metadata !DIExpression()), !dbg !11398
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11399
  %3 = load volatile i32, i32* %2, align 4, !dbg !11399
  %4 = or i32 %3, 8192, !dbg !11399
  store volatile i32 %4, i32* %2, align 4, !dbg !11399
  ret void, !dbg !11400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11401 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11403, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i8* %1, metadata !11404, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i32* %2, metadata !11405, metadata !DIExpression()), !dbg !11407
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11408
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11408
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11408
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11406, metadata !DIExpression()), !dbg !11407
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11409
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11409
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11411
  br i1 %9, label %12, label %10, !dbg !11412

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11413
  br label %12, !dbg !11414

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11407
  ret i32 %13, !dbg !11415
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11416 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11420, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i32 0, metadata !11421, metadata !DIExpression()), !dbg !11422
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11423
  %3 = load volatile i32, i32* %2, align 4, !dbg !11423
  %4 = and i32 %3, -32769, !dbg !11423
  store volatile i32 %4, i32* %2, align 4, !dbg !11423
  ret void, !dbg !11424
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11425 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11429, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.value(metadata i32 %1, metadata !11430, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.value(metadata i32 0, metadata !11431, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.value(metadata i32 %2, metadata !11432, metadata !DIExpression()), !dbg !11433
  %4 = zext i32 %1 to i64, !dbg !11434
  %5 = mul nuw nsw i64 %4, 25, !dbg !11434
  %6 = zext i32 %2 to i64, !dbg !11434
  %7 = shl nuw nsw i64 %6, 2, !dbg !11434
  %8 = udiv i64 %5, %7, !dbg !11434
  %9 = trunc i64 %8 to i32, !dbg !11434
  %10 = udiv i32 %9, 100, !dbg !11434
  %11 = shl nuw nsw i32 %10, 4, !dbg !11434
  %12 = mul i32 %10, -100, !dbg !11434
  %13 = add i32 %12, %9, !dbg !11434
  %14 = shl i32 %13, 4, !dbg !11434
  %15 = add i32 %14, 50, !dbg !11434
  %16 = udiv i32 %15, 100, !dbg !11434
  %17 = and i32 %16, 240, !dbg !11434
  %18 = add nuw nsw i32 %17, %11, !dbg !11434
  %19 = and i32 %16, 15, !dbg !11434
  %20 = and i32 %18, 65520, !dbg !11437
  %21 = or i32 %20, %19, !dbg !11437
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11438
  store volatile i32 %21, i32* %22, align 4, !dbg !11439
  ret void, !dbg !11440
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11441 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11443, metadata !DIExpression()), !dbg !11445
  call void @llvm.dbg.value(metadata i32 %1, metadata !11444, metadata !DIExpression()), !dbg !11445
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11446
  %4 = load volatile i32, i32* %3, align 4, !dbg !11446
  %5 = and i32 %4, -769, !dbg !11446
  %6 = or i32 %5, %1, !dbg !11446
  store volatile i32 %6, i32* %3, align 4, !dbg !11446
  ret void, !dbg !11447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11448 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11450, metadata !DIExpression()), !dbg !11452
  call void @llvm.dbg.value(metadata i32 %1, metadata !11451, metadata !DIExpression()), !dbg !11452
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11453
  %4 = load volatile i32, i32* %3, align 4, !dbg !11453
  %5 = and i32 %4, -4097, !dbg !11453
  %6 = or i32 %5, %1, !dbg !11453
  store volatile i32 %6, i32* %3, align 4, !dbg !11453
  ret void, !dbg !11454
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11455 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11457, metadata !DIExpression()), !dbg !11459
  call void @llvm.dbg.value(metadata i32 %1, metadata !11458, metadata !DIExpression()), !dbg !11459
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11460
  %4 = load volatile i32, i32* %3, align 4, !dbg !11460
  %5 = and i32 %4, -12289, !dbg !11460
  %6 = or i32 %5, %1, !dbg !11460
  store volatile i32 %6, i32* %3, align 4, !dbg !11460
  ret void, !dbg !11461
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11462 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11464, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.value(metadata i32 %1, metadata !11465, metadata !DIExpression()), !dbg !11466
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11467
  %4 = load volatile i32, i32* %3, align 4, !dbg !11467
  %5 = and i32 %4, -1537, !dbg !11467
  %6 = or i32 %5, %1, !dbg !11467
  store volatile i32 %6, i32* %3, align 4, !dbg !11467
  ret void, !dbg !11468
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11469 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11471, metadata !DIExpression()), !dbg !11472
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11473
  %3 = load volatile i32, i32* %2, align 4, !dbg !11473
  %4 = and i32 %3, 1, !dbg !11473
  ret i32 %4, !dbg !11474
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11475 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11477, metadata !DIExpression()), !dbg !11478
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11479
  %3 = load volatile i32, i32* %2, align 4, !dbg !11479
  %4 = lshr i32 %3, 1, !dbg !11480
  %5 = and i32 %4, 1, !dbg !11480
  ret i32 %5, !dbg !11481
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11482 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11484, metadata !DIExpression()), !dbg !11485
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11486
  %3 = load volatile i32, i32* %2, align 4, !dbg !11486
  %4 = lshr i32 %3, 8, !dbg !11487
  %5 = and i32 %4, 1, !dbg !11487
  ret i32 %5, !dbg !11488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11489 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11491, metadata !DIExpression()), !dbg !11492
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11493
  store volatile i32 -257, i32* %2, align 4, !dbg !11493
  ret void, !dbg !11494
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11495 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11497, metadata !DIExpression()), !dbg !11499
  %3 = bitcast i32* %2 to i8*, !dbg !11500
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11500
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11498, metadata !DIExpression()), !dbg !11501
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11502
  %5 = load volatile i32, i32* %4, align 4, !dbg !11502
  store volatile i32 %5, i32* %2, align 4, !dbg !11503
  %6 = load volatile i32, i32* %2, align 4, !dbg !11504
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11505
  %8 = load volatile i32, i32* %7, align 4, !dbg !11505
  store volatile i32 %8, i32* %2, align 4, !dbg !11506
  %9 = load volatile i32, i32* %2, align 4, !dbg !11507
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11508
  ret void, !dbg !11508
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11509 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11511, metadata !DIExpression()), !dbg !11513
  %3 = bitcast i32* %2 to i8*, !dbg !11514
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11514
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11512, metadata !DIExpression()), !dbg !11515
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11516
  %5 = load volatile i32, i32* %4, align 4, !dbg !11516
  store volatile i32 %5, i32* %2, align 4, !dbg !11517
  %6 = load volatile i32, i32* %2, align 4, !dbg !11518
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11519
  %8 = load volatile i32, i32* %7, align 4, !dbg !11519
  store volatile i32 %8, i32* %2, align 4, !dbg !11520
  %9 = load volatile i32, i32* %2, align 4, !dbg !11521
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11522
  ret void, !dbg !11522
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11523 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11525, metadata !DIExpression()), !dbg !11527
  %3 = bitcast i32* %2 to i8*, !dbg !11528
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11528
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11526, metadata !DIExpression()), !dbg !11529
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11530
  %5 = load volatile i32, i32* %4, align 4, !dbg !11530
  store volatile i32 %5, i32* %2, align 4, !dbg !11531
  %6 = load volatile i32, i32* %2, align 4, !dbg !11532
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11533
  %8 = load volatile i32, i32* %7, align 4, !dbg !11533
  store volatile i32 %8, i32* %2, align 4, !dbg !11534
  %9 = load volatile i32, i32* %2, align 4, !dbg !11535
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11536
  ret void, !dbg !11536
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1677 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1679, metadata !DIExpression()), !dbg !11537
  tail call void @z_arm_irq_priority_set(i32 noundef 39, i32 noundef 0, i32 noundef 0) #25, !dbg !11538
  tail call void @arch_irq_enable(i32 noundef 39) #25, !dbg !11540
  ret void, !dbg !11540
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !11541 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11543, metadata !DIExpression()), !dbg !11545
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11546
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11546
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11546
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11544, metadata !DIExpression()), !dbg !11545
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !11547
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !11547
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !11549
  br i1 %7, label %11, label %8, !dbg !11550

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !11551
  %10 = load i8*, i8** %9, align 4, !dbg !11551
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !11553
  br label %11, !dbg !11554

11:                                               ; preds = %8, %1
  ret void, !dbg !11555
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !11556 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11558, metadata !DIExpression()), !dbg !11564
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11565
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11565
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11565
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11559, metadata !DIExpression()), !dbg !11564
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11566
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11566
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11566
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11560, metadata !DIExpression()), !dbg !11564
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11567
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11568
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11568
  %10 = tail call fastcc zeroext i1 @device_is_ready.79(%struct.device* noundef %9) #26, !dbg !11570
  br i1 %10, label %11, label %51, !dbg !11571

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !11572
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11573
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11573
  %15 = load i8*, i8** %14, align 4, !dbg !11573
  %16 = tail call fastcc i32 @clock_control_on.80(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !11574
  call void @llvm.dbg.value(metadata i32 %16, metadata !11563, metadata !DIExpression()), !dbg !11564
  %17 = icmp eq i32 %16, 0, !dbg !11575
  br i1 %17, label %18, label %51, !dbg !11577

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11578
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !11578
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !11579
  call void @llvm.dbg.value(metadata i32 %21, metadata !11563, metadata !DIExpression()), !dbg !11564
  %22 = icmp slt i32 %21, 0, !dbg !11580
  br i1 %22, label %51, label %23, !dbg !11582

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11583
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11583
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !11584
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11585
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !11586
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11587
  %28 = load i32, i32* %27, align 4, !dbg !11587
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !11589

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !11561, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.value(metadata i32 4096, metadata !11562, metadata !DIExpression()), !dbg !11564
  br label %31, !dbg !11590

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !11561, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.value(metadata i32 0, metadata !11562, metadata !DIExpression()), !dbg !11564
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !11593
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !11593
  call void @llvm.dbg.value(metadata i32 %33, metadata !11562, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.value(metadata i32 %32, metadata !11561, metadata !DIExpression()), !dbg !11564
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11594
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !11595
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11596
  %36 = load i8, i8* %35, align 4, !dbg !11596, !range !7188
  %37 = icmp eq i8 %36, 0, !dbg !11596
  br i1 %37, label %39, label %38, !dbg !11598

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11599
  br label %39, !dbg !11601

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11602
  %41 = load i32, i32* %40, align 4, !dbg !11602
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !11603
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11604
  %43 = load i8, i8* %42, align 4, !dbg !11604, !range !7188
  %44 = icmp eq i8 %43, 0, !dbg !11604
  br i1 %44, label %47, label %45, !dbg !11606

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11607
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !11609
  br label %47, !dbg !11610

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11611
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !11612
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !11613
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !11613
  tail call void %50(%struct.device* noundef nonnull %0) #25, !dbg !11614
  br label %51, !dbg !11615

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !11564
  ret i32 %52, !dbg !11616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11619, metadata !DIExpression()), !dbg !11623
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11624
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11624
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11624
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11620, metadata !DIExpression()), !dbg !11623
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11621, metadata !DIExpression()), !dbg !11623
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11625
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11626
  ret void, !dbg !11627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.79(%struct.device* noundef %0) unnamed_addr #1 !dbg !11628 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11632, metadata !DIExpression()), !dbg !11633
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11634, !srcloc !11636
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.81(%struct.device* noundef %0) #26, !dbg !11637
  ret i1 %2, !dbg !11638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.80(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11639 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11641, metadata !DIExpression()), !dbg !11644
  call void @llvm.dbg.value(metadata i8* %1, metadata !11642, metadata !DIExpression()), !dbg !11644
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11645
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11645
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11645
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11643, metadata !DIExpression()), !dbg !11644
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11646
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11646
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11647
  ret i32 %8, !dbg !11648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11649 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11653, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.value(metadata i8 0, metadata !11654, metadata !DIExpression()), !dbg !11657
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11658
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11658
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11656, metadata !DIExpression(DW_OP_deref)), !dbg !11657
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11659
  call void @llvm.dbg.value(metadata i32 %4, metadata !11655, metadata !DIExpression()), !dbg !11657
  %5 = icmp slt i32 %4, 0, !dbg !11660
  br i1 %5, label %9, label %6, !dbg !11662

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11663
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11656, metadata !DIExpression()), !dbg !11657
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11664
  br label %9, !dbg !11665

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11657
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11666
  ret i32 %10, !dbg !11666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11667 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11669, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 12, metadata !11670, metadata !DIExpression()), !dbg !11673
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11674

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10976, metadata !DIExpression()) #24, !dbg !11675
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11678, !srcloc !10986
  call void @llvm.dbg.value(metadata i32 %4, metadata !10981, metadata !DIExpression()) #24, !dbg !11675
  %5 = or i32 %4, 12, !dbg !11679
  call void @llvm.dbg.value(metadata i32 %5, metadata !11671, metadata !DIExpression()), !dbg !11680
  call void @llvm.dbg.value(metadata i32 %5, metadata !10989, metadata !DIExpression()) #24, !dbg !11681
  call void @llvm.dbg.value(metadata i32* %2, metadata !10994, metadata !DIExpression()) #24, !dbg !11681
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11683, !srcloc !10999
  call void @llvm.dbg.value(metadata i32 %6, metadata !10995, metadata !DIExpression()) #24, !dbg !11681
  %7 = icmp eq i32 %6, 0, !dbg !11674
  br i1 %7, label %8, label %3, !dbg !11679, !llvm.loop !11684

8:                                                ; preds = %3
  ret void, !dbg !11685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11686 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11688, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.value(metadata i32 %1, metadata !11689, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.value(metadata i32 %2, metadata !11690, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.value(metadata i32 0, metadata !11691, metadata !DIExpression()), !dbg !11692
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11693
  %5 = load volatile i32, i32* %4, align 4, !dbg !11693
  %6 = and i32 %5, -5633, !dbg !11693
  %7 = or i32 %2, %1, !dbg !11693
  %8 = or i32 %7, %6, !dbg !11693
  store volatile i32 %8, i32* %4, align 4, !dbg !11693
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11694
  %10 = load volatile i32, i32* %9, align 4, !dbg !11694
  %11 = and i32 %10, -12289, !dbg !11694
  store volatile i32 %11, i32* %9, align 4, !dbg !11694
  ret void, !dbg !11695
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11696 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11698, metadata !DIExpression()), !dbg !11699
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11700
  %3 = load volatile i32, i32* %2, align 4, !dbg !11700
  %4 = or i32 %3, 8, !dbg !11700
  store volatile i32 %4, i32* %2, align 4, !dbg !11700
  ret void, !dbg !11701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11702 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11706, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11707, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata i32 0, metadata !11708, metadata !DIExpression()), !dbg !11709
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11710
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11710
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11711
  %5 = load i8, i8* %4, align 4, !dbg !11711
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11712
  ret i32 %6, !dbg !11713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.81(%struct.device* noundef %0) unnamed_addr #1 !dbg !11714 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11716, metadata !DIExpression()), !dbg !11717
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11718
  ret i1 %2, !dbg !11719
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11720 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11722, metadata !DIExpression()), !dbg !11723
  tail call fastcc void @__NVIC_SetPriority.83() #26, !dbg !11724
  store i32 16799, i32* @last_load, align 4, !dbg !11725
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11726
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11727
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11728
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11729
  %3 = or i32 %2, 7, !dbg !11729
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11729
  ret i32 0, !dbg !11730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.83() unnamed_addr #15 !dbg !11731 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11733, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i32 1, metadata !11734, metadata !DIExpression()), !dbg !11735
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11736
  ret void, !dbg !11739
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11740 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11742, metadata !DIExpression()), !dbg !11744
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11745
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11746
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11747
  %5 = add i32 %4, %3, !dbg !11747
  store i32 %5, i32* @cycle_count, align 4, !dbg !11747
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11748
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11749
  %7 = sub i32 %5, %6, !dbg !11752
  %8 = udiv i32 %7, 16800, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %8, metadata !11743, metadata !DIExpression()), !dbg !11744
  %9 = mul nuw i32 %8, 16800, !dbg !11754
  %10 = add i32 %9, %6, !dbg !11755
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11755
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11756
  tail call void @z_arm_int_exit() #25, !dbg !11757
  ret void, !dbg !11758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11759 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11764
  call void @llvm.dbg.value(metadata i32 %1, metadata !11761, metadata !DIExpression()), !dbg !11765
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11766
  call void @llvm.dbg.value(metadata i32 %2, metadata !11762, metadata !DIExpression()), !dbg !11765
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11767
  call void @llvm.dbg.value(metadata i32 %3, metadata !11763, metadata !DIExpression()), !dbg !11765
  %4 = and i32 %2, 65536, !dbg !11768
  %5 = icmp ne i32 %4, 0, !dbg !11768
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11770
  %8 = load i32, i32* @last_load, align 4, !dbg !11765
  br i1 %7, label %9, label %13, !dbg !11770

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11771
  %11 = add i32 %10, %8, !dbg !11771
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11771
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11773
  br label %13, !dbg !11774

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11775
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11776
  %16 = add i32 %14, %15, !dbg !11777
  ret i32 %16, !dbg !11778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11783, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.value(metadata i1 %1, metadata !11784, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11796
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11797
  br i1 %4, label %5, label %8, !dbg !11797

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11799
  %7 = and i32 %6, -2, !dbg !11799
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11799
  store i32 -16777216, i32* @last_load, align 4, !dbg !11801
  br label %54, !dbg !11802

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11803
  call void @llvm.dbg.value(metadata i32 %9, metadata !11788, metadata !DIExpression()), !dbg !11796
  br i1 %3, label %18, label %10, !dbg !11804

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11804
  call void @llvm.dbg.value(metadata i32 undef, metadata !11783, metadata !DIExpression()), !dbg !11796
  %12 = icmp slt i32 %11, 1, !dbg !11805
  br i1 %12, label %18, label %13, !dbg !11805

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !11805
  %15 = select i1 %14, i32 %11, i32 997, !dbg !11805
  %16 = mul nuw nsw i32 %15, 16800, !dbg !11805
  %17 = add nuw nsw i32 %16, 16799, !dbg !11805
  br label %18, !dbg !11805

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11783, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11806, metadata !DIExpression()) #24, !dbg !11813
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11815, !srcloc !11821
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11815
  call void @llvm.dbg.value(metadata i32 %21, metadata !11818, metadata !DIExpression()) #24, !dbg !11822
  call void @llvm.dbg.value(metadata i32 undef, metadata !11819, metadata !DIExpression()) #24, !dbg !11822
  call void @llvm.dbg.value(metadata i32 %21, metadata !11812, metadata !DIExpression()) #24, !dbg !11813
  call void @llvm.dbg.value(metadata i32 %21, metadata !11789, metadata !DIExpression()), !dbg !11796
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11823
  call void @llvm.dbg.value(metadata i32 %22, metadata !11794, metadata !DIExpression()), !dbg !11796
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11824
  call void @llvm.dbg.value(metadata i32 %23, metadata !11786, metadata !DIExpression()), !dbg !11796
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11825
  %25 = add i32 %24, %22, !dbg !11825
  store i32 %25, i32* @cycle_count, align 4, !dbg !11825
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11826
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11827
  %27 = sub i32 %25, %26, !dbg !11828
  call void @llvm.dbg.value(metadata i32 %27, metadata !11795, metadata !DIExpression()), !dbg !11796
  %28 = icmp slt i32 %27, 0, !dbg !11829
  br i1 %28, label %38, label %29, !dbg !11831

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11785, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.value(metadata i32 undef, metadata !11785, metadata !DIExpression()), !dbg !11796
  %30 = add nuw i32 %19, %27, !dbg !11832
  %31 = urem i32 %30, 16800, !dbg !11834
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11785, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11796
  %32 = sub nuw nsw i32 %19, %31, !dbg !11835
  call void @llvm.dbg.value(metadata i32 %32, metadata !11785, metadata !DIExpression()), !dbg !11796
  %33 = icmp ugt i32 %32, 1050, !dbg !11836
  br i1 %33, label %34, label %36, !dbg !11836

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11785, metadata !DIExpression()), !dbg !11796
  %35 = icmp ugt i32 %32, 16749600, !dbg !11837
  br i1 %35, label %38, label %36, !dbg !11839

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11840
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11841
  call void @llvm.dbg.value(metadata i32 %40, metadata !11787, metadata !DIExpression()), !dbg !11796
  %41 = add nsw i32 %39, -1, !dbg !11842
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11843
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11844
  %42 = icmp ult i32 %23, %40, !dbg !11845
  br i1 %42, label %43, label %48, !dbg !11847

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11848
  %45 = add i32 %23, %9, !dbg !11850
  %46 = sub i32 %45, %40, !dbg !11851
  %47 = add i32 %46, %44, !dbg !11848
  br label %52, !dbg !11852

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11853
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11855
  %51 = add i32 %49, %50, !dbg !11855
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11856
  store i32 %53, i32* @cycle_count, align 4, !dbg !11856
  call void @llvm.dbg.value(metadata i32 %21, metadata !11857, metadata !DIExpression()) #24, !dbg !11863
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11862, metadata !DIExpression()) #24, !dbg !11863
  call void @llvm.dbg.value(metadata i32 %21, metadata !11865, metadata !DIExpression()) #24, !dbg !11868
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !11870, !srcloc !11871
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11872
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11873 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11806, metadata !DIExpression()) #24, !dbg !11877
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11879, !srcloc !11821
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11879
  call void @llvm.dbg.value(metadata i32 %2, metadata !11818, metadata !DIExpression()) #24, !dbg !11881
  call void @llvm.dbg.value(metadata i32 undef, metadata !11819, metadata !DIExpression()) #24, !dbg !11881
  call void @llvm.dbg.value(metadata i32 %2, metadata !11812, metadata !DIExpression()) #24, !dbg !11877
  call void @llvm.dbg.value(metadata i32 %2, metadata !11875, metadata !DIExpression()), !dbg !11882
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11883
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11884
  %5 = add i32 %4, %3, !dbg !11885
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11886
  %7 = sub i32 %5, %6, !dbg !11887
  call void @llvm.dbg.value(metadata i32 %7, metadata !11876, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata i32 %2, metadata !11857, metadata !DIExpression()) #24, !dbg !11888
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11862, metadata !DIExpression()) #24, !dbg !11888
  call void @llvm.dbg.value(metadata i32 %2, metadata !11865, metadata !DIExpression()) #24, !dbg !11890
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11892, !srcloc !11871
  %8 = udiv i32 %7, 16800, !dbg !11893
  ret i32 %8, !dbg !11894
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11895 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11806, metadata !DIExpression()) #24, !dbg !11899
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11901, !srcloc !11821
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %2, metadata !11818, metadata !DIExpression()) #24, !dbg !11903
  call void @llvm.dbg.value(metadata i32 undef, metadata !11819, metadata !DIExpression()) #24, !dbg !11903
  call void @llvm.dbg.value(metadata i32 %2, metadata !11812, metadata !DIExpression()) #24, !dbg !11899
  call void @llvm.dbg.value(metadata i32 %2, metadata !11897, metadata !DIExpression()), !dbg !11904
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11905
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11906
  %5 = add i32 %4, %3, !dbg !11907
  call void @llvm.dbg.value(metadata i32 %5, metadata !11898, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.value(metadata i32 %2, metadata !11857, metadata !DIExpression()) #24, !dbg !11908
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11862, metadata !DIExpression()) #24, !dbg !11908
  call void @llvm.dbg.value(metadata i32 %2, metadata !11865, metadata !DIExpression()) #24, !dbg !11910
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11912, !srcloc !11871
  ret i32 %5, !dbg !11913
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11914 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11915
  %2 = icmp eq i32 %1, -16777216, !dbg !11917
  br i1 %2, label %3, label %6, !dbg !11918

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11919
  %5 = or i32 %4, 1, !dbg !11919
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11919
  br label %6, !dbg !11921

6:                                                ; preds = %3, %0
  ret void, !dbg !11922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11923 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11924
  %2 = and i32 %1, -2, !dbg !11924
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11924
  ret void, !dbg !11925
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11926 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11952, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata i8 %1, metadata !11953, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11954, metadata !DIExpression()), !dbg !11955
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11956
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11956
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11955
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11957
  %8 = load i8, i8* %6, align 4, !dbg !11958
  %9 = zext i8 %8 to i32, !dbg !11959
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11959
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11960
  br i1 %11, label %18, label %24, !dbg !11961

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11955
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11957
  %14 = load i8, i8* %6, align 4, !dbg !11958
  %15 = zext i8 %14 to i32, !dbg !11959
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11959
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11960
  br i1 %17, label %18, label %24, !dbg !11961, !llvm.loop !11962

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11964
  %21 = load i8, i8* %20, align 1, !dbg !11964
  %22 = icmp eq i8 %21, %1, !dbg !11967
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11968
  br i1 %22, label %24, label %12, !dbg !11969

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11955
  ret i32 %25, !dbg !11970
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11971 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11982, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.value(metadata i8 %1, metadata !11983, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.value(metadata i32 %2, metadata !11984, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.value(metadata i32 0, metadata !11987, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.value(metadata i32 0, metadata !11988, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.value(metadata i8 0, metadata !11989, metadata !DIExpression()), !dbg !11999
  %4 = icmp eq i8 %1, 0, !dbg !12000
  br i1 %4, label %35, label %5, !dbg !12001

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12000
  br label %9, !dbg !12001

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11989, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata i32 %29, metadata !11987, metadata !DIExpression()), !dbg !11998
  %8 = icmp eq i32 %34, %6, !dbg !12000
  br i1 %8, label %35, label %9, !dbg !12001, !llvm.loop !12002

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11989, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata i32 %11, metadata !11987, metadata !DIExpression()), !dbg !11998
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12004
  %13 = load i32, i32* %12, align 4, !dbg !12004
  call void @llvm.dbg.value(metadata i32 %13, metadata !11986, metadata !DIExpression()), !dbg !11998
  %14 = and i32 %13, 31, !dbg !12005
  %15 = icmp ult i32 %14, 16, !dbg !12006
  br i1 %15, label %16, label %20, !dbg !12007

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12008
  %18 = load i32, i32* %17, align 4, !dbg !12008
  %19 = or i32 %18, 32, !dbg !12010
  call void @llvm.dbg.value(metadata i32 %19, metadata !11987, metadata !DIExpression()), !dbg !11998
  br label %28, !dbg !12011

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12012

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12013
  %23 = load i32, i32* %22, align 4, !dbg !12013
  call void @llvm.dbg.value(metadata i32 %23, metadata !11991, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12014
  %24 = lshr i32 %23, 7, !dbg !12015
  %25 = and i32 %24, 16, !dbg !12015
  %26 = or i32 %25, %23, !dbg !12015
  call void @llvm.dbg.value(metadata i32 %26, metadata !11987, metadata !DIExpression()), !dbg !11998
  br label %28, !dbg !12016

27:                                               ; preds = %20
  br label %28, !dbg !12017

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11998
  call void @llvm.dbg.value(metadata i32 %29, metadata !11987, metadata !DIExpression()), !dbg !11998
  %30 = lshr i32 %13, 5, !dbg !12017
  %31 = and i32 %30, 255, !dbg !12017
  call void @llvm.dbg.value(metadata i32 %31, metadata !11985, metadata !DIExpression()), !dbg !11998
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !12018
  call void @llvm.dbg.value(metadata i32 %32, metadata !11988, metadata !DIExpression()), !dbg !11998
  %33 = icmp slt i32 %32, 0, !dbg !12019
  %34 = add nuw nsw i32 %10, 1, !dbg !12021
  call void @llvm.dbg.value(metadata i32 %34, metadata !11989, metadata !DIExpression()), !dbg !11999
  br i1 %33, label %35, label %7, !dbg !12022

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12028, metadata !DIExpression()), !dbg !12032
  call void @llvm.dbg.value(metadata i32 %1, metadata !12029, metadata !DIExpression()), !dbg !12032
  call void @llvm.dbg.value(metadata i32 %2, metadata !12030, metadata !DIExpression()), !dbg !12032
  %4 = icmp ugt i32 %0, 175, !dbg !12033
  br i1 %4, label %16, label %5, !dbg !12035

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12036
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12037
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12037
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12031, metadata !DIExpression()), !dbg !12032
  %9 = add nsw i32 %6, -9, !dbg !12038
  %10 = icmp ult i32 %9, 2, !dbg !12038
  br i1 %10, label %16, label %11, !dbg !12040

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.88(%struct.device* noundef %8) #26, !dbg !12041
  br i1 %12, label %13, label %16, !dbg !12042

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12043
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !12044
  br label %16, !dbg !12045

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12032
  ret i32 %17, !dbg !12046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.88(%struct.device* noundef %0) unnamed_addr #1 !dbg !12047 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12051, metadata !DIExpression()), !dbg !12052
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12053, !srcloc !12055
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.89(%struct.device* noundef %0) #26, !dbg !12056
  ret i1 %2, !dbg !12057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.89(%struct.device* noundef %0) unnamed_addr #1 !dbg !12058 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12060, metadata !DIExpression()), !dbg !12061
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12062
  ret i1 %2, !dbg !12063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !12064 {
  ret void, !dbg !12065
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !12066 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12068, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 0, metadata !12069, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 2, metadata !12070, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 0, metadata !12071, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 2, metadata !12072, metadata !DIExpression()), !dbg !12073
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12074
  %2 = and i32 %1, 12, !dbg !12075
  call void @llvm.dbg.value(metadata i32 %2, metadata !12068, metadata !DIExpression()), !dbg !12073
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12076

3:                                                ; preds = %0
  br label %21, !dbg !12077

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12079
  call void @llvm.dbg.value(metadata i32 %5, metadata !12071, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12073
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12080
  %7 = and i32 %6, 63, !dbg !12081
  call void @llvm.dbg.value(metadata i32 %7, metadata !12072, metadata !DIExpression()), !dbg !12073
  %8 = and i32 %5, 4194304, !dbg !12082
  %9 = icmp eq i32 %8, 0, !dbg !12082
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !12084
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12084
  %13 = lshr i32 %12, 6, !dbg !12084
  %14 = and i32 %13, 511, !dbg !12084
  %15 = mul i32 %14, %11, !dbg !12084
  call void @llvm.dbg.value(metadata i32 %15, metadata !12069, metadata !DIExpression()), !dbg !12073
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12085
  %17 = lshr i32 %16, 15, !dbg !12086
  %18 = and i32 %17, 6, !dbg !12086
  %19 = add nuw nsw i32 %18, 2, !dbg !12086
  call void @llvm.dbg.value(metadata i32 %19, metadata !12070, metadata !DIExpression()), !dbg !12073
  %20 = udiv i32 %15, %19, !dbg !12087
  br label %21, !dbg !12088

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12089
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12090
  %24 = lshr i32 %23, 4, !dbg !12091
  %25 = and i32 %24, 15, !dbg !12091
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12092
  %27 = load i8, i8* %26, align 1, !dbg !12092
  %28 = zext i8 %27 to i32, !dbg !12092
  call void @llvm.dbg.value(metadata i32 %28, metadata !12068, metadata !DIExpression()), !dbg !12073
  %29 = lshr i32 %22, %28, !dbg !12093
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12093
  ret void, !dbg !12094
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12095 {
  ret i32 0, !dbg !12100
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12101 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12127, metadata !DIExpression()), !dbg !12138
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12139
  br i1 %3, label %311, label %4, !dbg !12141

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12142
  %6 = load i32, i32* %5, align 4, !dbg !12142
  %7 = and i32 %6, 1, !dbg !12144
  %8 = icmp eq i32 %7, 0, !dbg !12145
  br i1 %8, label %66, label %9, !dbg !12146

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12147
  %11 = and i32 %10, 12, !dbg !12147
  %12 = icmp eq i32 %11, 4, !dbg !12150
  br i1 %12, label %21, label %13, !dbg !12151

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12152
  %15 = and i32 %14, 12, !dbg !12152
  %16 = icmp eq i32 %15, 8, !dbg !12153
  br i1 %16, label %17, label %29, !dbg !12154

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12155
  %19 = and i32 %18, 4194304, !dbg !12156
  %20 = icmp eq i32 %19, 0, !dbg !12157
  br i1 %20, label %29, label %21, !dbg !12158

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12159
  %23 = and i32 %22, 131072, !dbg !12159
  %24 = icmp eq i32 %23, 0, !dbg !12159
  br i1 %24, label %66, label %25, !dbg !12162

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12163
  %27 = load i32, i32* %26, align 4, !dbg !12163
  %28 = icmp eq i32 %27, 0, !dbg !12164
  br i1 %28, label %311, label %66, !dbg !12165

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12166
  %31 = load i32, i32* %30, align 4, !dbg !12166
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12170

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12171
  %34 = or i32 %33, 65536, !dbg !12171
  br label %45, !dbg !12171

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12173
  %37 = or i32 %36, 262144, !dbg !12173
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12173
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12173
  %39 = or i32 %38, 65536, !dbg !12173
  br label %45, !dbg !12173

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12176
  %42 = and i32 %41, -65537, !dbg !12176
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12176
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12176
  %44 = and i32 %43, -262145, !dbg !12176
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12178
  %47 = load i32, i32* %30, align 4, !dbg !12179
  %48 = icmp eq i32 %47, 0, !dbg !12181
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !12182
  call void @llvm.dbg.value(metadata i32 %49, metadata !12128, metadata !DIExpression()), !dbg !12138
  call void @llvm.dbg.value(metadata i32 %49, metadata !12128, metadata !DIExpression()), !dbg !12138
  br i1 %48, label %58, label %50, !dbg !12183

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12184
  %52 = and i32 %51, 131072, !dbg !12186
  %53 = icmp eq i32 %52, 0, !dbg !12186
  br i1 %53, label %54, label %66, !dbg !12187

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !12188
  %56 = sub i32 %55, %49, !dbg !12191
  %57 = icmp ugt i32 %56, 100, !dbg !12192
  br i1 %57, label %311, label %50, !dbg !12193, !llvm.loop !12194

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12196
  %60 = and i32 %59, 131072, !dbg !12196
  %61 = icmp eq i32 %60, 0, !dbg !12196
  br i1 %61, label %66, label %62, !dbg !12198

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12199
  %64 = sub i32 %63, %49, !dbg !12202
  %65 = icmp ugt i32 %64, 100, !dbg !12203
  br i1 %65, label %311, label %58, !dbg !12204, !llvm.loop !12205

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12207
  %68 = and i32 %67, 2, !dbg !12209
  %69 = icmp eq i32 %68, 0, !dbg !12210
  br i1 %69, label %121, label %70, !dbg !12211

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12212
  %72 = and i32 %71, 12, !dbg !12212
  %73 = icmp eq i32 %72, 0, !dbg !12215
  br i1 %73, label %82, label %74, !dbg !12216

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12217
  %76 = and i32 %75, 12, !dbg !12217
  %77 = icmp eq i32 %76, 8, !dbg !12218
  br i1 %77, label %78, label %90, !dbg !12219

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12220
  %80 = and i32 %79, 4194304, !dbg !12221
  %81 = icmp eq i32 %80, 0, !dbg !12222
  br i1 %81, label %82, label %90, !dbg !12223

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12224
  %84 = and i32 %83, 2, !dbg !12224
  %85 = icmp eq i32 %84, 0, !dbg !12224
  br i1 %85, label %114, label %86, !dbg !12227

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12228
  %88 = load i32, i32* %87, align 4, !dbg !12228
  %89 = icmp eq i32 %88, 1, !dbg !12229
  br i1 %89, label %114, label %311, !dbg !12230

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12231
  %92 = load i32, i32* %91, align 4, !dbg !12231
  %93 = icmp eq i32 %92, 0, !dbg !12234
  br i1 %93, label %104, label %94, !dbg !12235

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12236
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12238
  call void @llvm.dbg.value(metadata i32 %95, metadata !12128, metadata !DIExpression()), !dbg !12138
  br label %96, !dbg !12239

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12240
  %98 = and i32 %97, 2, !dbg !12241
  %99 = icmp eq i32 %98, 0, !dbg !12241
  br i1 %99, label %100, label %114, !dbg !12239

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12242
  %102 = sub i32 %101, %95, !dbg !12245
  %103 = icmp ugt i32 %102, 2, !dbg !12246
  br i1 %103, label %311, label %96, !dbg !12247, !llvm.loop !12248

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12250
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12252
  call void @llvm.dbg.value(metadata i32 %105, metadata !12128, metadata !DIExpression()), !dbg !12138
  br label %106, !dbg !12253

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12254
  %108 = and i32 %107, 2, !dbg !12254
  %109 = icmp eq i32 %108, 0, !dbg !12254
  br i1 %109, label %121, label %110, !dbg !12253

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12255
  %112 = sub i32 %111, %105, !dbg !12258
  %113 = icmp ugt i32 %112, 2, !dbg !12259
  br i1 %113, label %311, label %106, !dbg !12260, !llvm.loop !12261

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12263
  %116 = and i32 %115, -249, !dbg !12263
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12263
  %118 = load i32, i32* %117, align 4, !dbg !12263
  %119 = shl i32 %118, 3, !dbg !12263
  %120 = or i32 %119, %116, !dbg !12263
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12263
  br label %121, !dbg !12264

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12264
  %123 = and i32 %122, 8, !dbg !12266
  %124 = icmp eq i32 %123, 0, !dbg !12267
  br i1 %124, label %149, label %125, !dbg !12268

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12269
  %127 = load i32, i32* %126, align 4, !dbg !12269
  %128 = icmp eq i32 %127, 0, !dbg !12272
  br i1 %128, label %139, label %129, !dbg !12273

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12274
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12276
  call void @llvm.dbg.value(metadata i32 %130, metadata !12128, metadata !DIExpression()), !dbg !12138
  br label %131, !dbg !12277

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12278
  %133 = and i32 %132, 2, !dbg !12279
  %134 = icmp eq i32 %133, 0, !dbg !12279
  br i1 %134, label %135, label %149, !dbg !12277

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12280
  %137 = sub i32 %136, %130, !dbg !12283
  %138 = icmp ugt i32 %137, 2, !dbg !12284
  br i1 %138, label %311, label %131, !dbg !12285, !llvm.loop !12286

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12288
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12290
  call void @llvm.dbg.value(metadata i32 %140, metadata !12128, metadata !DIExpression()), !dbg !12138
  br label %141, !dbg !12291

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12292
  %143 = and i32 %142, 2, !dbg !12292
  %144 = icmp eq i32 %143, 0, !dbg !12292
  br i1 %144, label %149, label %145, !dbg !12291

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12293
  %147 = sub i32 %146, %140, !dbg !12296
  %148 = icmp ugt i32 %147, 2, !dbg !12297
  br i1 %148, label %311, label %141, !dbg !12298, !llvm.loop !12299

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12301
  %151 = and i32 %150, 4, !dbg !12302
  %152 = icmp eq i32 %151, 0, !dbg !12303
  br i1 %152, label %221, label %153, !dbg !12304

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12130, metadata !DIExpression()), !dbg !12305
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12306
  %155 = and i32 %154, 268435456, !dbg !12306
  %156 = icmp eq i32 %155, 0, !dbg !12306
  br i1 %156, label %157, label %164, !dbg !12307

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12308
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12308
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12134, metadata !DIExpression()), !dbg !12308
  store volatile i32 0, i32* %2, align 4, !dbg !12308
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12308
  %160 = or i32 %159, 268435456, !dbg !12308
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12308
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12308
  %162 = and i32 %161, 268435456, !dbg !12308
  store volatile i32 %162, i32* %2, align 4, !dbg !12308
  %163 = load volatile i32, i32* %2, align 4, !dbg !12308
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12309
  call void @llvm.dbg.value(metadata i32 1, metadata !12130, metadata !DIExpression()), !dbg !12305
  br label %164, !dbg !12310

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12130, metadata !DIExpression()), !dbg !12305
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12311
  %166 = and i32 %165, 256, !dbg !12311
  %167 = icmp eq i32 %166, 0, !dbg !12311
  br i1 %167, label %168, label %180, !dbg !12313

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12314
  %170 = or i32 %169, 256, !dbg !12314
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12314
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12316
  call void @llvm.dbg.value(metadata i32 %171, metadata !12128, metadata !DIExpression()), !dbg !12138
  br label %172, !dbg !12317

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12318
  %174 = and i32 %173, 256, !dbg !12318
  %175 = icmp eq i32 %174, 0, !dbg !12318
  br i1 %175, label %176, label %180, !dbg !12317

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12319
  %178 = sub i32 %177, %171, !dbg !12322
  %179 = icmp ugt i32 %178, 2, !dbg !12323
  br i1 %179, label %311, label %172, !dbg !12324, !llvm.loop !12325

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12327
  %182 = load i32, i32* %181, align 4, !dbg !12327
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12330

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12331
  %185 = or i32 %184, 1, !dbg !12331
  br label %196, !dbg !12331

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12333
  %188 = or i32 %187, 4, !dbg !12333
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12333
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12333
  %190 = or i32 %189, 1, !dbg !12333
  br label %196, !dbg !12333

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12336
  %193 = and i32 %192, -2, !dbg !12336
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12336
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12336
  %195 = and i32 %194, -5, !dbg !12336
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12338
  %198 = load i32, i32* %181, align 4, !dbg !12339
  %199 = icmp eq i32 %198, 0, !dbg !12341
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12342
  call void @llvm.dbg.value(metadata i32 %200, metadata !12128, metadata !DIExpression()), !dbg !12138
  call void @llvm.dbg.value(metadata i32 %200, metadata !12128, metadata !DIExpression()), !dbg !12138
  br i1 %199, label %209, label %201, !dbg !12343

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12344
  %203 = and i32 %202, 2, !dbg !12346
  %204 = icmp eq i32 %203, 0, !dbg !12346
  br i1 %204, label %205, label %217, !dbg !12347

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12348
  %207 = sub i32 %206, %200, !dbg !12351
  %208 = icmp ugt i32 %207, 5000, !dbg !12352
  br i1 %208, label %311, label %201, !dbg !12353, !llvm.loop !12354

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12356
  %211 = and i32 %210, 2, !dbg !12356
  %212 = icmp eq i32 %211, 0, !dbg !12356
  br i1 %212, label %217, label %213, !dbg !12358

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12359
  %215 = sub i32 %214, %200, !dbg !12362
  %216 = icmp ugt i32 %215, 5000, !dbg !12363
  br i1 %216, label %311, label %209, !dbg !12364, !llvm.loop !12365

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12367

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12368
  %220 = and i32 %219, -268435457, !dbg !12368
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12368
  br label %221, !dbg !12371

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12372
  %223 = load i32, i32* %222, align 4, !dbg !12372
  %224 = icmp eq i32 %223, 0, !dbg !12374
  br i1 %224, label %310, label %225, !dbg !12375

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12376
  %227 = and i32 %226, 12, !dbg !12376
  %228 = icmp eq i32 %227, 8, !dbg !12379
  br i1 %228, label %277, label %229, !dbg !12380

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12381
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12384
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12384
  call void @llvm.dbg.value(metadata i32 %231, metadata !12128, metadata !DIExpression()), !dbg !12138
  call void @llvm.dbg.value(metadata i32 %231, metadata !12128, metadata !DIExpression()), !dbg !12138
  br i1 %230, label %232, label %269, !dbg !12385

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12386
  %234 = and i32 %233, 33554432, !dbg !12386
  %235 = icmp eq i32 %234, 0, !dbg !12386
  br i1 %235, label %240, label %236, !dbg !12388

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12389
  %238 = sub i32 %237, %231, !dbg !12392
  %239 = icmp ugt i32 %238, 2, !dbg !12393
  br i1 %239, label %311, label %232, !dbg !12394, !llvm.loop !12395

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12397
  %242 = load i32, i32* %241, align 4, !dbg !12397
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12397
  %244 = load i32, i32* %243, align 4, !dbg !12397
  %245 = or i32 %244, %242, !dbg !12397
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12397
  %247 = load i32, i32* %246, align 4, !dbg !12397
  %248 = shl i32 %247, 6, !dbg !12397
  %249 = or i32 %245, %248, !dbg !12397
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12397
  %251 = load i32, i32* %250, align 4, !dbg !12397
  %252 = shl i32 %251, 15, !dbg !12397
  %253 = add i32 %252, -65536, !dbg !12397
  %254 = and i32 %253, -65536, !dbg !12397
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12397
  %256 = load i32, i32* %255, align 4, !dbg !12397
  %257 = shl i32 %256, 24, !dbg !12397
  %258 = or i32 %249, %257, !dbg !12397
  %259 = or i32 %258, %254, !dbg !12397
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12397
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12398
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12399
  call void @llvm.dbg.value(metadata i32 %260, metadata !12128, metadata !DIExpression()), !dbg !12138
  br label %261, !dbg !12400

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12401
  %263 = and i32 %262, 33554432, !dbg !12402
  %264 = icmp eq i32 %263, 0, !dbg !12402
  br i1 %264, label %265, label %310, !dbg !12400

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12403
  %267 = sub i32 %266, %260, !dbg !12406
  %268 = icmp ugt i32 %267, 2, !dbg !12407
  br i1 %268, label %311, label %261, !dbg !12408, !llvm.loop !12409

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12411
  %271 = and i32 %270, 33554432, !dbg !12411
  %272 = icmp eq i32 %271, 0, !dbg !12411
  br i1 %272, label %310, label %273, !dbg !12413

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12414
  %275 = sub i32 %274, %231, !dbg !12417
  %276 = icmp ugt i32 %275, 2, !dbg !12418
  br i1 %276, label %311, label %269, !dbg !12419, !llvm.loop !12420

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12422
  br i1 %278, label %311, label %279, !dbg !12425

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12426
  call void @llvm.dbg.value(metadata i32 %280, metadata !12129, metadata !DIExpression()), !dbg !12138
  %281 = and i32 %280, 4194304, !dbg !12428
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12430
  %283 = load i32, i32* %282, align 4, !dbg !12430
  %284 = icmp eq i32 %281, %283, !dbg !12431
  br i1 %284, label %285, label %311, !dbg !12432

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12433
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12434
  %288 = load i32, i32* %287, align 4, !dbg !12434
  %289 = icmp eq i32 %286, %288, !dbg !12435
  br i1 %289, label %290, label %311, !dbg !12436

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12437
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12438
  %293 = load i32, i32* %292, align 4, !dbg !12438
  %294 = shl i32 %293, 6, !dbg !12439
  %295 = icmp eq i32 %291, %294, !dbg !12440
  br i1 %295, label %296, label %311, !dbg !12441

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12442
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12443
  %299 = load i32, i32* %298, align 4, !dbg !12443
  %300 = shl i32 %299, 15, !dbg !12444
  %301 = add i32 %300, -65536, !dbg !12444
  %302 = and i32 %301, -65536, !dbg !12444
  %303 = icmp eq i32 %297, %302, !dbg !12445
  br i1 %303, label %304, label %311, !dbg !12446

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12447
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12448
  %307 = load i32, i32* %306, align 4, !dbg !12448
  %308 = shl i32 %307, 24, !dbg !12449
  %309 = icmp eq i32 %305, %308, !dbg !12450
  br i1 %309, label %310, label %311, !dbg !12451

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12452

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12138
  ret i32 %312, !dbg !12453
}

; Function Attrs: optsize
declare !dbg !12454 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12456 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12469, metadata !DIExpression()), !dbg !12472
  call void @llvm.dbg.value(metadata i32 %1, metadata !12470, metadata !DIExpression()), !dbg !12472
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12473
  br i1 %3, label %115, label %4, !dbg !12475

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12476
  %6 = and i32 %5, 7, !dbg !12476
  %7 = icmp ult i32 %6, %1, !dbg !12478
  br i1 %7, label %8, label %13, !dbg !12479

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12480
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12480
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12482
  %11 = and i32 %10, 7, !dbg !12482
  %12 = icmp eq i32 %11, %1, !dbg !12484
  br i1 %12, label %13, label %115, !dbg !12485

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12486
  %15 = load i32, i32* %14, align 4, !dbg !12486
  %16 = and i32 %15, 2, !dbg !12488
  %17 = icmp eq i32 %16, 0, !dbg !12489
  br i1 %17, label %39, label %18, !dbg !12490

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12491
  %20 = icmp eq i32 %19, 0, !dbg !12494
  br i1 %20, label %25, label %21, !dbg !12495

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12496
  %23 = or i32 %22, 7168, !dbg !12496
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12496
  %24 = load i32, i32* %14, align 4, !dbg !12498
  br label %25, !dbg !12500

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12498
  %27 = and i32 %26, 8, !dbg !12501
  %28 = icmp eq i32 %27, 0, !dbg !12502
  br i1 %28, label %32, label %29, !dbg !12503

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12504
  %31 = or i32 %30, 57344, !dbg !12504
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12504
  br label %32, !dbg !12506

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12507
  %34 = and i32 %33, -241, !dbg !12507
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12507
  %36 = load i32, i32* %35, align 4, !dbg !12507
  %37 = or i32 %34, %36, !dbg !12507
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12507
  %38 = load i32, i32* %14, align 4, !dbg !12508
  br label %39, !dbg !12510

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12508
  %41 = and i32 %40, 1, !dbg !12511
  %42 = icmp eq i32 %41, 0, !dbg !12512
  br i1 %42, label %73, label %43, !dbg !12513

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12514
  %45 = load i32, i32* %44, align 4, !dbg !12514
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12517

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12518
  %48 = and i32 %47, 131072, !dbg !12521
  %49 = icmp eq i32 %48, 0, !dbg !12521
  br i1 %49, label %115, label %58, !dbg !12522

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12523
  %52 = and i32 %51, 33554432, !dbg !12527
  %53 = icmp eq i32 %52, 0, !dbg !12527
  br i1 %53, label %115, label %58, !dbg !12528

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12529
  %56 = and i32 %55, 2, !dbg !12532
  %57 = icmp eq i32 %56, 0, !dbg !12532
  br i1 %57, label %115, label %58, !dbg !12533

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12534
  %60 = and i32 %59, -4, !dbg !12534
  %61 = or i32 %60, %45, !dbg !12534
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12534
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12535
  call void @llvm.dbg.value(metadata i32 %62, metadata !12471, metadata !DIExpression()), !dbg !12472
  br label %63, !dbg !12536

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12537
  %65 = and i32 %64, 12, !dbg !12537
  %66 = load i32, i32* %44, align 4, !dbg !12538
  %67 = shl i32 %66, 2, !dbg !12539
  %68 = icmp eq i32 %65, %67, !dbg !12540
  br i1 %68, label %73, label %69, !dbg !12536

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12541
  %71 = sub i32 %70, %62, !dbg !12544
  %72 = icmp ugt i32 %71, 5000, !dbg !12545
  br i1 %72, label %115, label %63, !dbg !12546, !llvm.loop !12547

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12549
  %75 = and i32 %74, 7, !dbg !12549
  %76 = icmp ugt i32 %75, %1, !dbg !12551
  br i1 %76, label %77, label %82, !dbg !12552

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12553
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12553
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12555
  %80 = and i32 %79, 7, !dbg !12555
  %81 = icmp eq i32 %80, %1, !dbg !12557
  br i1 %81, label %82, label %115, !dbg !12558

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12559
  %84 = and i32 %83, 4, !dbg !12561
  %85 = icmp eq i32 %84, 0, !dbg !12562
  br i1 %85, label %93, label %86, !dbg !12563

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12564
  %88 = and i32 %87, -7169, !dbg !12564
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12564
  %90 = load i32, i32* %89, align 4, !dbg !12564
  %91 = or i32 %88, %90, !dbg !12564
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12564
  %92 = load i32, i32* %14, align 4, !dbg !12566
  br label %93, !dbg !12568

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12566
  %95 = and i32 %94, 8, !dbg !12569
  %96 = icmp eq i32 %95, 0, !dbg !12570
  br i1 %96, label %104, label %97, !dbg !12571

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12572
  %99 = and i32 %98, -57345, !dbg !12572
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12572
  %101 = load i32, i32* %100, align 4, !dbg !12572
  %102 = shl i32 %101, 3, !dbg !12572
  %103 = or i32 %102, %99, !dbg !12572
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12572
  br label %104, !dbg !12574

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !12575
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12576
  %107 = lshr i32 %106, 4, !dbg !12577
  %108 = and i32 %107, 15, !dbg !12577
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12578
  %110 = load i8, i8* %109, align 1, !dbg !12578
  %111 = zext i8 %110 to i32, !dbg !12578
  %112 = lshr i32 %105, %111, !dbg !12579
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12580
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12581
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12582
  br label %115, !dbg !12583

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12472
  ret i32 %116, !dbg !12584
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12585 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12587, metadata !DIExpression()), !dbg !12591
  call void @llvm.dbg.value(metadata i32 0, metadata !12588, metadata !DIExpression()), !dbg !12591
  call void @llvm.dbg.value(metadata i32 0, metadata !12589, metadata !DIExpression()), !dbg !12591
  call void @llvm.dbg.value(metadata i32 0, metadata !12590, metadata !DIExpression()), !dbg !12591
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12592
  %2 = and i32 %1, 12, !dbg !12593
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12594

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !12590, metadata !DIExpression()), !dbg !12591
  br label %24, !dbg !12595

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12598
  %6 = and i32 %5, 63, !dbg !12600
  call void @llvm.dbg.value(metadata i32 %6, metadata !12587, metadata !DIExpression()), !dbg !12591
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12601
  %8 = and i32 %7, 4194304, !dbg !12601
  %9 = icmp eq i32 %8, 0, !dbg !12603
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12604
  %11 = lshr i32 %10, 6, !dbg !12604
  %12 = and i32 %11, 511, !dbg !12604
  %13 = zext i32 %12 to i64, !dbg !12604
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !12604
  %16 = zext i32 %6 to i64, !dbg !12604
  %17 = udiv i64 %15, %16, !dbg !12604
  %18 = trunc i64 %17 to i32, !dbg !12604
  call void @llvm.dbg.value(metadata i32 %18, metadata !12588, metadata !DIExpression()), !dbg !12591
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12605
  %20 = lshr i32 %19, 15, !dbg !12606
  %21 = and i32 %20, 6, !dbg !12606
  %22 = add nuw nsw i32 %21, 2, !dbg !12606
  call void @llvm.dbg.value(metadata i32 %22, metadata !12589, metadata !DIExpression()), !dbg !12591
  %23 = udiv i32 %18, %22, !dbg !12607
  call void @llvm.dbg.value(metadata i32 %23, metadata !12590, metadata !DIExpression()), !dbg !12591
  br label %24, !dbg !12608

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !12609
  call void @llvm.dbg.value(metadata i32 %25, metadata !12590, metadata !DIExpression()), !dbg !12591
  ret i32 %25, !dbg !12610
}

; Function Attrs: optsize
declare !dbg !12611 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12614 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12618, metadata !DIExpression()), !dbg !12638
  call void @llvm.dbg.value(metadata i32 %1, metadata !12619, metadata !DIExpression()), !dbg !12638
  call void @llvm.dbg.value(metadata i32 %2, metadata !12620, metadata !DIExpression()), !dbg !12638
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !12639
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #24, !dbg !12639
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !12621, metadata !DIExpression()), !dbg !12640
  %8 = icmp eq i32 %0, 0, !dbg !12641
  br i1 %8, label %9, label %23, !dbg !12642

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12643
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12643
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12631, metadata !DIExpression()), !dbg !12643
  store volatile i32 0, i32* %5, align 4, !dbg !12643
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12643
  %12 = or i32 %11, 1, !dbg !12643
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12643
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12643
  %14 = and i32 %13, 1, !dbg !12643
  store volatile i32 %14, i32* %5, align 4, !dbg !12643
  %15 = load volatile i32, i32* %5, align 4, !dbg !12643
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12644
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12645
  store i32 256, i32* %16, align 4, !dbg !12646
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12647
  store i32 2, i32* %17, align 4, !dbg !12648
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12649
  store i32 3, i32* %18, align 4, !dbg !12650
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12651
  store i32 0, i32* %19, align 4, !dbg !12652
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12653
  store i32 0, i32* %20, align 4, !dbg !12654
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !12655
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12656
  %22 = and i32 %21, -123731969, !dbg !12656
  br label %38, !dbg !12657

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12658
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12658
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12635, metadata !DIExpression()), !dbg !12658
  store volatile i32 0, i32* %6, align 4, !dbg !12658
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12658
  %26 = or i32 %25, 4, !dbg !12658
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12658
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12658
  %28 = and i32 %27, 4, !dbg !12658
  store volatile i32 %28, i32* %6, align 4, !dbg !12658
  %29 = load volatile i32, i32* %6, align 4, !dbg !12658
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12659
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12660
  store i32 512, i32* %30, align 4, !dbg !12661
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12662
  store i32 2, i32* %31, align 4, !dbg !12663
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12664
  store i32 3, i32* %32, align 4, !dbg !12665
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12666
  store i32 0, i32* %33, align 4, !dbg !12667
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12668
  store i32 0, i32* %34, align 4, !dbg !12669
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !12670
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12671
  %36 = and i32 %35, 134217727, !dbg !12671
  %37 = shl i32 %2, 3, !dbg !12671
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12672
  %42 = or i32 %41, %40, !dbg !12672
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12672
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #24, !dbg !12673
  ret void, !dbg !12673
}

; Function Attrs: optsize
declare !dbg !12674 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !12678 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12679
  ret void, !dbg !12680
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !12681 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12682
  ret void, !dbg !12683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !12684 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12685
  ret i32 %1, !dbg !12686
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !12687 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12688
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12689
  %3 = lshr i32 %2, 10, !dbg !12690
  %4 = and i32 %3, 7, !dbg !12690
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12691
  %6 = load i8, i8* %5, align 1, !dbg !12691
  %7 = zext i8 %6 to i32, !dbg !12691
  %8 = lshr i32 %1, %7, !dbg !12692
  ret i32 %8, !dbg !12693
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !12694 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12695
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12696
  %3 = lshr i32 %2, 13, !dbg !12697
  %4 = and i32 %3, 7, !dbg !12697
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12698
  %6 = load i8, i8* %5, align 1, !dbg !12698
  %7 = zext i8 %6 to i32, !dbg !12698
  %8 = lshr i32 %1, %7, !dbg !12699
  ret i32 %8, !dbg !12700
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12701 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12705, metadata !DIExpression()), !dbg !12706
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12707
  store i32 15, i32* %2, align 4, !dbg !12708
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12709
  %4 = and i32 %3, 262144, !dbg !12711
  %5 = icmp eq i32 %4, 0, !dbg !12712
  br i1 %5, label %8, label %6, !dbg !12713

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12714
  store i32 327680, i32* %7, align 4, !dbg !12716
  br label %15, !dbg !12717

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12718
  %10 = and i32 %9, 65536, !dbg !12720
  %11 = icmp eq i32 %10, 0, !dbg !12721
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12722
  br i1 %11, label %14, label %13, !dbg !12723

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12724
  br label %15, !dbg !12726

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12727
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12729
  %17 = and i32 %16, 1, !dbg !12731
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12732
  store i32 %17, i32* %18, align 4, !dbg !12734
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12735
  %20 = lshr i32 %19, 3, !dbg !12736
  %21 = and i32 %20, 31, !dbg !12736
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12737
  store i32 %21, i32* %22, align 4, !dbg !12738
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12739
  %24 = and i32 %23, 4, !dbg !12741
  %25 = icmp eq i32 %24, 0, !dbg !12742
  br i1 %25, label %28, label %26, !dbg !12743

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12744
  store i32 5, i32* %27, align 4, !dbg !12746
  br label %35, !dbg !12747

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12748
  %30 = and i32 %29, 1, !dbg !12750
  %31 = icmp eq i32 %30, 0, !dbg !12751
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12752
  br i1 %31, label %34, label %33, !dbg !12753

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12754
  br label %35, !dbg !12756

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12757
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12759
  %37 = and i32 %36, 1, !dbg !12761
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12762
  store i32 %37, i32* %38, align 4, !dbg !12764
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12765
  %40 = and i32 %39, 16777216, !dbg !12767
  %41 = icmp eq i32 %40, 0, !dbg !12768
  %42 = select i1 %41, i32 1, i32 2, !dbg !12769
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12770
  store i32 %42, i32* %43, align 4, !dbg !12772
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12773
  %45 = and i32 %44, 4194304, !dbg !12774
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12775
  store i32 %45, i32* %46, align 4, !dbg !12776
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12777
  %48 = and i32 %47, 63, !dbg !12778
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12779
  store i32 %48, i32* %49, align 4, !dbg !12780
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12781
  %51 = lshr i32 %50, 6, !dbg !12782
  %52 = and i32 %51, 511, !dbg !12782
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12783
  store i32 %52, i32* %53, align 4, !dbg !12784
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12785
  %55 = shl i32 %54, 1, !dbg !12786
  %56 = and i32 %55, 393216, !dbg !12786
  %57 = add nuw nsw i32 %56, 131072, !dbg !12786
  %58 = lshr exact i32 %57, 16, !dbg !12787
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12788
  store i32 %58, i32* %59, align 4, !dbg !12789
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12790
  %61 = lshr i32 %60, 24, !dbg !12791
  %62 = and i32 %61, 15, !dbg !12791
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12792
  store i32 %62, i32* %63, align 4, !dbg !12793
  ret void, !dbg !12794
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !12795 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12799, metadata !DIExpression()), !dbg !12801
  call void @llvm.dbg.value(metadata i32* %1, metadata !12800, metadata !DIExpression()), !dbg !12801
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12802
  store i32 15, i32* %3, align 4, !dbg !12803
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12804
  %5 = and i32 %4, 3, !dbg !12805
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12806
  store i32 %5, i32* %6, align 4, !dbg !12807
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12808
  %8 = and i32 %7, 240, !dbg !12809
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12810
  store i32 %8, i32* %9, align 4, !dbg !12811
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12812
  %11 = and i32 %10, 7168, !dbg !12813
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12814
  store i32 %11, i32* %12, align 4, !dbg !12815
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12816
  %14 = lshr i32 %13, 3, !dbg !12817
  %15 = and i32 %14, 7168, !dbg !12817
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12818
  store i32 %15, i32* %16, align 4, !dbg !12819
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12820
  %18 = and i32 %17, 7, !dbg !12821
  store i32 %18, i32* %1, align 4, !dbg !12822
  ret void, !dbg !12823
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12824 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12825
  %2 = and i32 %1, 128, !dbg !12825
  %3 = icmp eq i32 %2, 0, !dbg !12825
  br i1 %3, label %5, label %4, !dbg !12827

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !12828
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12830
  br label %5, !dbg !12831

5:                                                ; preds = %4, %0
  ret void, !dbg !12832
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12833 {
  ret void, !dbg !12834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !12835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12838, metadata !DIExpression()), !dbg !12839
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12840
  ret void, !dbg !12841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !12842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12845, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.value(metadata i32 1000, metadata !12846, metadata !DIExpression()), !dbg !12847
  %2 = udiv i32 %0, 1000, !dbg !12848
  %3 = add nsw i32 %2, -1, !dbg !12849
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12850
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12851
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12852
  ret void, !dbg !12853
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !12854 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12856, metadata !DIExpression()), !dbg !12858
  %3 = bitcast i32* %2 to i8*, !dbg !12859
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12859
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12857, metadata !DIExpression()), !dbg !12860
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12861
  store volatile i32 %4, i32* %2, align 4, !dbg !12860
  %5 = load volatile i32, i32* %2, align 4, !dbg !12862
  %6 = icmp eq i32 %0, -1, !dbg !12863
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12856, metadata !DIExpression()), !dbg !12858
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12858
  call void @llvm.dbg.value(metadata i32 %8, metadata !12856, metadata !DIExpression()), !dbg !12858
  br label %9, !dbg !12865

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12856, metadata !DIExpression()), !dbg !12858
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12866
  call void @llvm.dbg.value(metadata i32 undef, metadata !12856, metadata !DIExpression()), !dbg !12858
  %12 = shl i32 %11, 15, !dbg !12858
  %13 = ashr i32 %12, 31, !dbg !12858
  %14 = add i32 %13, %10, !dbg !12858
  call void @llvm.dbg.value(metadata i32 %14, metadata !12856, metadata !DIExpression()), !dbg !12858
  %15 = icmp eq i32 %14, 0, !dbg !12865
  br i1 %15, label %16, label %9, !dbg !12865

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12869
  ret void, !dbg !12869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !12870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12872, metadata !DIExpression()), !dbg !12873
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12874
  ret void, !dbg !12875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12881, metadata !DIExpression()), !dbg !12886
  call void @llvm.dbg.value(metadata i32 0, metadata !12884, metadata !DIExpression()), !dbg !12886
  call void @llvm.dbg.value(metadata i32 0, metadata !12885, metadata !DIExpression()), !dbg !12886
  %2 = icmp eq i32 %0, 0, !dbg !12887
  br i1 %2, label %52, label %3, !dbg !12889

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12890
  %5 = icmp eq i32 %4, 16384, !dbg !12893
  br i1 %5, label %6, label %21, !dbg !12894

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12895
  %8 = select i1 %7, i32 0, i32 5, !dbg !12898
  call void @llvm.dbg.value(metadata i32 %8, metadata !12884, metadata !DIExpression()), !dbg !12886
  %9 = add i32 %0, -120000001, !dbg !12899
  %10 = icmp ult i32 %9, 30000000, !dbg !12899
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12899
  call void @llvm.dbg.value(metadata i32 %11, metadata !12884, metadata !DIExpression()), !dbg !12886
  %12 = icmp ult i32 %9, -30000000, !dbg !12901
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12901
  call void @llvm.dbg.value(metadata i32 %13, metadata !12884, metadata !DIExpression()), !dbg !12886
  %14 = icmp ugt i32 %0, 60000000, !dbg !12903
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12905
  br i1 %16, label %21, label %17, !dbg !12905

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12906
  %19 = and i1 %18, %15, !dbg !12909
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12909
  br label %21, !dbg !12909

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12886
  call void @llvm.dbg.value(metadata i32 %22, metadata !12884, metadata !DIExpression()), !dbg !12886
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12910
  %24 = icmp eq i32 %23, 0, !dbg !12912
  br i1 %24, label %25, label %41, !dbg !12913

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !12914
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12917
  %29 = select i1 %28, i32 4, i32 %22, !dbg !12917
  call void @llvm.dbg.value(metadata i32 %29, metadata !12884, metadata !DIExpression()), !dbg !12886
  %30 = icmp ugt i32 %0, 90000000, !dbg !12918
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12920
  %33 = select i1 %32, i32 3, i32 %29, !dbg !12920
  call void @llvm.dbg.value(metadata i32 %33, metadata !12884, metadata !DIExpression()), !dbg !12886
  %34 = icmp ugt i32 %0, 60000000, !dbg !12921
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12923
  br i1 %36, label %41, label %37, !dbg !12923

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !12924
  %39 = and i1 %38, %35, !dbg !12927
  %40 = select i1 %39, i32 1, i32 %33, !dbg !12927
  br label %41, !dbg !12927

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !12928
  call void @llvm.dbg.value(metadata i32 %42, metadata !12884, metadata !DIExpression()), !dbg !12886
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #26, !dbg !12929
  call void @llvm.dbg.value(metadata i32 2, metadata !12882, metadata !DIExpression()), !dbg !12886
  br label %43, !dbg !12930

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !12928
  call void @llvm.dbg.value(metadata i32 %44, metadata !12882, metadata !DIExpression()), !dbg !12886
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !12931
  call void @llvm.dbg.value(metadata i32 %45, metadata !12883, metadata !DIExpression()), !dbg !12886
  %46 = add nsw i32 %44, -1, !dbg !12933
  call void @llvm.dbg.value(metadata i32 %46, metadata !12882, metadata !DIExpression()), !dbg !12886
  %47 = icmp ne i32 %45, %42, !dbg !12934
  %48 = icmp ne i32 %46, 0, !dbg !12935
  %49 = select i1 %47, i1 %48, i1 false, !dbg !12935
  br i1 %49, label %43, label %50, !dbg !12936, !llvm.loop !12937

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !12939
  call void @llvm.dbg.value(metadata i32 %53, metadata !12885, metadata !DIExpression()), !dbg !12886
  ret i32 %53, !dbg !12940
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12941 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12943
  %2 = and i32 %1, 16384, !dbg !12943
  ret i32 %2, !dbg !12944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12947, metadata !DIExpression()), !dbg !12948
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12949
  %3 = and i32 %2, -8, !dbg !12949
  %4 = or i32 %3, %0, !dbg !12949
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12949
  ret void, !dbg !12950
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12951 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12952
  %2 = and i32 %1, 7, !dbg !12952
  ret i32 %2, !dbg !12953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12954 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12972, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12973, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata i32 0, metadata !12974, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata i32 0, metadata !12975, metadata !DIExpression()), !dbg !12976
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !12977
  %4 = icmp eq i32 %3, 0, !dbg !12979
  br i1 %4, label %5, label %21, !dbg !12980

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !12981
  call void @llvm.dbg.value(metadata i32 %6, metadata !12975, metadata !DIExpression()), !dbg !12976
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.98() #26, !dbg !12983
  %8 = icmp eq i32 %7, 1, !dbg !12985
  br i1 %8, label %13, label %9, !dbg !12986

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.99() #26, !dbg !12987
  br label %10, !dbg !12989

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.98() #26, !dbg !12990
  %12 = icmp eq i32 %11, 1, !dbg !12991
  br i1 %12, label %13, label %10, !dbg !12989, !llvm.loop !12992

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12994
  %15 = load i32, i32* %14, align 4, !dbg !12994
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12995
  %17 = load i32, i32* %16, align 4, !dbg !12995
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12996
  %19 = load i32, i32* %18, align 4, !dbg !12996
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.100(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !12997
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !12998
  call void @llvm.dbg.value(metadata i32 %20, metadata !12974, metadata !DIExpression()), !dbg !12976
  br label %21, !dbg !12999

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13000
  call void @llvm.dbg.value(metadata i32 %22, metadata !12974, metadata !DIExpression()), !dbg !12976
  ret i32 %22, !dbg !13001
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !13002 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13006, metadata !DIExpression()), !dbg !13007
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.102() #26, !dbg !13008
  %2 = icmp ne i32 %1, 0, !dbg !13010
  call void @llvm.dbg.value(metadata i1 %2, metadata !13006, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13007
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !13011
  %4 = icmp ne i32 %3, 0, !dbg !13013
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13014
  %6 = zext i1 %5 to i32, !dbg !13014
  call void @llvm.dbg.value(metadata i32 %6, metadata !13006, metadata !DIExpression()), !dbg !13007
  ret i32 %6, !dbg !13015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !13016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13020, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13021, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i32 0, metadata !13022, metadata !DIExpression()), !dbg !13023
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13024
  %4 = load i32, i32* %3, align 4, !dbg !13024
  %5 = and i32 %4, 63, !dbg !13025
  %6 = udiv i32 %0, %5, !dbg !13026
  call void @llvm.dbg.value(metadata i32 %6, metadata !13022, metadata !DIExpression()), !dbg !13023
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13027
  %8 = load i32, i32* %7, align 4, !dbg !13027
  %9 = and i32 %8, 511, !dbg !13028
  %10 = mul i32 %9, %6, !dbg !13029
  call void @llvm.dbg.value(metadata i32 %10, metadata !13022, metadata !DIExpression()), !dbg !13023
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13030
  %12 = load i32, i32* %11, align 4, !dbg !13030
  %13 = lshr i32 %12, 15, !dbg !13031
  %14 = and i32 %13, 131070, !dbg !13031
  %15 = add nuw nsw i32 %14, 2, !dbg !13031
  %16 = udiv i32 %10, %15, !dbg !13032
  call void @llvm.dbg.value(metadata i32 %16, metadata !13022, metadata !DIExpression()), !dbg !13023
  ret i32 %16, !dbg !13033
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.98() unnamed_addr #16 !dbg !13034 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13035
  %2 = lshr i32 %1, 1, !dbg !13036
  %3 = and i32 %2, 1, !dbg !13036
  ret i32 %3, !dbg !13037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.99() unnamed_addr #15 !dbg !13038 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13039
  %2 = or i32 %1, 1, !dbg !13039
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13039
  ret void, !dbg !13040
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.100(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !13041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13043, metadata !DIExpression()), !dbg !13047
  call void @llvm.dbg.value(metadata i32 %1, metadata !13044, metadata !DIExpression()), !dbg !13047
  call void @llvm.dbg.value(metadata i32 %2, metadata !13045, metadata !DIExpression()), !dbg !13047
  call void @llvm.dbg.value(metadata i32 %3, metadata !13046, metadata !DIExpression()), !dbg !13047
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13048
  %6 = and i32 %5, -4227072, !dbg !13048
  %7 = or i32 %1, %0, !dbg !13048
  %8 = shl i32 %2, 6, !dbg !13048
  %9 = or i32 %7, %8, !dbg !13048
  %10 = or i32 %9, %6, !dbg !13048
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13048
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13049
  %12 = and i32 %11, -196609, !dbg !13049
  %13 = or i32 %12, %3, !dbg !13049
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13049
  ret void, !dbg !13050
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !13051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13055, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13056, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata i32 0, metadata !13057, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata i32 0, metadata !13058, metadata !DIExpression()), !dbg !13059
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13060
  %4 = load i32, i32* %3, align 4, !dbg !13060
  %5 = lshr i32 %4, 4, !dbg !13060
  %6 = and i32 %5, 15, !dbg !13060
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13060
  %8 = load i8, i8* %7, align 1, !dbg !13060
  %9 = zext i8 %8 to i32, !dbg !13060
  %10 = lshr i32 %0, %9, !dbg !13060
  call void @llvm.dbg.value(metadata i32 %10, metadata !13058, metadata !DIExpression()), !dbg !13059
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13061
  %12 = icmp ult i32 %11, %10, !dbg !13063
  br i1 %12, label %13, label %16, !dbg !13064

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13065
  call void @llvm.dbg.value(metadata i32 %14, metadata !13057, metadata !DIExpression()), !dbg !13059
  %15 = icmp eq i32 %14, 0, !dbg !13067
  br i1 %15, label %16, label %30, !dbg !13069

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.101() #26, !dbg !13070
  br label %17, !dbg !13072

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.102() #26, !dbg !13073
  %19 = icmp eq i32 %18, 1, !dbg !13074
  br i1 %19, label %20, label %17, !dbg !13072, !llvm.loop !13075

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13077
  tail call fastcc void @LL_RCC_SetAHBPrescaler.103(i32 noundef %21) #26, !dbg !13078
  tail call fastcc void @LL_RCC_SetSysClkSource.104() #26, !dbg !13079
  br label %22, !dbg !13080

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.105() #26, !dbg !13081
  %24 = icmp eq i32 %23, 8, !dbg !13082
  br i1 %24, label %25, label %22, !dbg !13080, !llvm.loop !13083

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13085
  %27 = load i32, i32* %26, align 4, !dbg !13085
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.106(i32 noundef %27) #26, !dbg !13086
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13087
  %29 = load i32, i32* %28, align 4, !dbg !13087
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.107(i32 noundef %29) #26, !dbg !13088
  br label %30, !dbg !13089

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13090
  %33 = icmp ugt i32 %32, %10, !dbg !13092
  br i1 %33, label %34, label %36, !dbg !13093

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13094
  call void @llvm.dbg.value(metadata i32 %35, metadata !13057, metadata !DIExpression()), !dbg !13059
  br label %36, !dbg !13096

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13059
  call void @llvm.dbg.value(metadata i32 %37, metadata !13057, metadata !DIExpression()), !dbg !13059
  %38 = icmp eq i32 %37, 0, !dbg !13097
  br i1 %38, label %39, label %40, !dbg !13099

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13100
  br label %40, !dbg !13102

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13103
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.101() unnamed_addr #15 !dbg !13104 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13105
  %2 = or i32 %1, 16777216, !dbg !13105
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13105
  ret void, !dbg !13106
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.102() unnamed_addr #16 !dbg !13107 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13108
  %2 = lshr i32 %1, 25, !dbg !13109
  %3 = and i32 %2, 1, !dbg !13109
  ret i32 %3, !dbg !13110
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.103(i32 noundef %0) unnamed_addr #15 !dbg !13111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13113, metadata !DIExpression()), !dbg !13114
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13115
  %3 = and i32 %2, -241, !dbg !13115
  %4 = or i32 %3, %0, !dbg !13115
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13115
  ret void, !dbg !13116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.104() unnamed_addr #15 !dbg !13117 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13119, metadata !DIExpression()), !dbg !13120
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13121
  %2 = and i32 %1, -4, !dbg !13121
  %3 = or i32 %2, 2, !dbg !13121
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13121
  ret void, !dbg !13122
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.105() unnamed_addr #16 !dbg !13123 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13124
  %2 = and i32 %1, 12, !dbg !13124
  ret i32 %2, !dbg !13125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.106(i32 noundef %0) unnamed_addr #15 !dbg !13126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13128, metadata !DIExpression()), !dbg !13129
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13130
  %3 = and i32 %2, -7169, !dbg !13130
  %4 = or i32 %3, %0, !dbg !13130
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13130
  ret void, !dbg !13131
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.107(i32 noundef %0) unnamed_addr #15 !dbg !13132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13134, metadata !DIExpression()), !dbg !13135
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13136
  %3 = and i32 %2, -57345, !dbg !13136
  %4 = or i32 %3, %0, !dbg !13136
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13136
  ret void, !dbg !13137
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !13138 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13139
  %2 = lshr i32 %1, 27, !dbg !13140
  %3 = and i32 %2, 1, !dbg !13140
  ret i32 %3, !dbg !13141
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13146, metadata !DIExpression()), !dbg !13152
  call void @llvm.dbg.value(metadata i32 %1, metadata !13147, metadata !DIExpression()), !dbg !13152
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13148, metadata !DIExpression()), !dbg !13152
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13149, metadata !DIExpression()), !dbg !13152
  call void @llvm.dbg.value(metadata i32 0, metadata !13150, metadata !DIExpression()), !dbg !13152
  call void @llvm.dbg.value(metadata i32 0, metadata !13151, metadata !DIExpression()), !dbg !13152
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13153
  %6 = icmp eq i32 %5, 0, !dbg !13155
  br i1 %6, label %7, label %27, !dbg !13156

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !13157
  call void @llvm.dbg.value(metadata i32 %8, metadata !13151, metadata !DIExpression()), !dbg !13152
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.108() #26, !dbg !13159
  %10 = icmp eq i32 %9, 1, !dbg !13161
  br i1 %10, label %19, label %11, !dbg !13162

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13163
  br i1 %12, label %13, label %14, !dbg !13166

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13167
  br label %15, !dbg !13169

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.109() #26, !dbg !13170
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.110() #26, !dbg !13172
  br label %16, !dbg !13173

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.108() #26, !dbg !13174
  %18 = icmp eq i32 %17, 1, !dbg !13175
  br i1 %18, label %19, label %16, !dbg !13173, !llvm.loop !13176

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13178
  %21 = load i32, i32* %20, align 4, !dbg !13178
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13179
  %23 = load i32, i32* %22, align 4, !dbg !13179
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13180
  %25 = load i32, i32* %24, align 4, !dbg !13180
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.100(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !13181
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13182
  call void @llvm.dbg.value(metadata i32 %26, metadata !13150, metadata !DIExpression()), !dbg !13152
  br label %27, !dbg !13183

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13184
  call void @llvm.dbg.value(metadata i32 %28, metadata !13150, metadata !DIExpression()), !dbg !13152
  ret i32 %28, !dbg !13185
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.108() unnamed_addr #16 !dbg !13186 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13187
  %2 = lshr i32 %1, 17, !dbg !13188
  %3 = and i32 %2, 1, !dbg !13188
  ret i32 %3, !dbg !13189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13190 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13191
  %2 = or i32 %1, 262144, !dbg !13191
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13191
  ret void, !dbg !13192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.109() unnamed_addr #15 !dbg !13193 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13194
  %2 = and i32 %1, -262145, !dbg !13194
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13194
  ret void, !dbg !13195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.110() unnamed_addr #15 !dbg !13196 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13197
  %2 = or i32 %1, 65536, !dbg !13197
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13197
  ret void, !dbg !13198
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13199 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13202, metadata !DIExpression()), !dbg !13218
  call void @llvm.dbg.value(metadata i32 undef, metadata !13202, metadata !DIExpression()), !dbg !13218
  call void @llvm.dbg.value(metadata i32 undef, metadata !13202, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13218
  ret void, !dbg !13219
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13220 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13224, metadata !DIExpression()), !dbg !13226
  %2 = icmp eq i8* %0, null, !dbg !13227
  br i1 %2, label %29, label %3, !dbg !13229

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13230
  %5 = icmp eq i8 %4, 0, !dbg !13231
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13232
  br i1 %6, label %29, label %8, !dbg !13232

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13225, metadata !DIExpression()), !dbg !13226
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13233

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13225, metadata !DIExpression()), !dbg !13226
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13235
  br i1 %10, label %11, label %15, !dbg !13240

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13241
  %13 = load i8*, i8** %12, align 4, !dbg !13241
  %14 = icmp eq i8* %13, %0, !dbg !13242
  br i1 %14, label %29, label %15, !dbg !13243

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13244
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13225, metadata !DIExpression()), !dbg !13226
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13245
  br i1 %17, label %7, label %8, !dbg !13246, !llvm.loop !13247

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13225, metadata !DIExpression()), !dbg !13226
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13249
  br i1 %20, label %21, label %26, !dbg !13253

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13254
  %23 = load i8*, i8** %22, align 4, !dbg !13254
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13255
  %25 = icmp eq i32 %24, 0, !dbg !13256
  br i1 %25, label %29, label %26, !dbg !13257

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13258
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13225, metadata !DIExpression()), !dbg !13226
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13259
  br i1 %28, label %29, label %18, !dbg !13233, !llvm.loop !13260

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13226
  ret %struct.device* %30, !dbg !13262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !13263 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13267, metadata !DIExpression()), !dbg !13268
  %2 = icmp eq %struct.device* %0, null, !dbg !13269
  br i1 %2, label %14, label %3, !dbg !13271

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13272
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13272
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13273
  %7 = load i8, i8* %6, align 1, !dbg !13273
  %8 = and i8 %7, 1, !dbg !13273
  %9 = icmp eq i8 %8, 0, !dbg !13273
  br i1 %9, label %14, label %10, !dbg !13274

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13275
  %12 = load i8, i8* %11, align 1, !dbg !13275
  %13 = icmp eq i8 %12, 0, !dbg !13276
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13268
  ret i1 %15, !dbg !13277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !13278 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13283, metadata !DIExpression()), !dbg !13284
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13285
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13286
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13287 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13295, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13296, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.value(metadata i8* %2, metadata !13297, metadata !DIExpression()), !dbg !13300
  %5 = bitcast i32* %4 to i8*, !dbg !13301
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13301
  call void @llvm.dbg.value(metadata i32 0, metadata !13298, metadata !DIExpression()), !dbg !13300
  store i32 0, i32* %4, align 4, !dbg !13302
  call void @llvm.dbg.value(metadata i32* %4, metadata !13298, metadata !DIExpression(DW_OP_deref)), !dbg !13300
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13303
  call void @llvm.dbg.value(metadata i16* %6, metadata !13299, metadata !DIExpression()), !dbg !13300
  %7 = load i32, i32* %4, align 4, !dbg !13304
  call void @llvm.dbg.value(metadata i32 %7, metadata !13298, metadata !DIExpression()), !dbg !13300
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13305
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13306
  ret i32 %8, !dbg !13307
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13308 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13312, metadata !DIExpression()), !dbg !13318
  call void @llvm.dbg.value(metadata i32* %1, metadata !13313, metadata !DIExpression()), !dbg !13318
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13319
  %4 = load i16*, i16** %3, align 4, !dbg !13319
  call void @llvm.dbg.value(metadata i16* %4, metadata !13314, metadata !DIExpression()), !dbg !13318
  %5 = icmp eq i16* %4, null, !dbg !13320
  br i1 %5, label %14, label %6, !dbg !13321

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13322
  call void @llvm.dbg.value(metadata i32 %7, metadata !13315, metadata !DIExpression()), !dbg !13322
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13323
  %9 = load i16, i16* %8, align 2, !dbg !13323
  %10 = add i16 %9, -32767, !dbg !13324
  %11 = icmp ult i16 %10, 2, !dbg !13324
  %12 = add i32 %7, 1, !dbg !13325
  call void @llvm.dbg.value(metadata i32 %12, metadata !13315, metadata !DIExpression()), !dbg !13322
  br i1 %11, label %13, label %6, !dbg !13324, !llvm.loop !13327

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13330
  br label %14, !dbg !13331

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13333 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13337, metadata !DIExpression()), !dbg !13348
  call void @llvm.dbg.value(metadata i32 %1, metadata !13338, metadata !DIExpression()), !dbg !13348
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13339, metadata !DIExpression()), !dbg !13348
  call void @llvm.dbg.value(metadata i8* %3, metadata !13340, metadata !DIExpression()), !dbg !13348
  call void @llvm.dbg.value(metadata i32 0, metadata !13341, metadata !DIExpression()), !dbg !13349
  %5 = icmp eq i32 %1, 0, !dbg !13350
  br i1 %5, label %16, label %8, !dbg !13351

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13341, metadata !DIExpression()), !dbg !13349
  %7 = icmp eq i32 %15, %1, !dbg !13350
  br i1 %7, label %16, label %8, !dbg !13351, !llvm.loop !13352

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13341, metadata !DIExpression()), !dbg !13349
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13354
  %11 = load i16, i16* %10, align 2, !dbg !13354
  call void @llvm.dbg.value(metadata i16 %11, metadata !13343, metadata !DIExpression()), !dbg !13355
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !13356
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13346, metadata !DIExpression()), !dbg !13355
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13357
  call void @llvm.dbg.value(metadata i32 %13, metadata !13347, metadata !DIExpression()), !dbg !13355
  %14 = icmp slt i32 %13, 0, !dbg !13358
  %15 = add nuw i32 %9, 1, !dbg !13360
  call void @llvm.dbg.value(metadata i32 %15, metadata !13341, metadata !DIExpression()), !dbg !13349
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !13362 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13366, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13367, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13368, metadata !DIExpression()), !dbg !13369
  %2 = sext i16 %0 to i32, !dbg !13370
  %3 = icmp slt i16 %0, 1, !dbg !13372
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13373
  %6 = add nsw i32 %2, -1, !dbg !13373
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13373
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13373
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13367, metadata !DIExpression()), !dbg !13369
  ret %struct.device* %8, !dbg !13374
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13375 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13377, metadata !DIExpression()), !dbg !13382
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13378, metadata !DIExpression()), !dbg !13382
  call void @llvm.dbg.value(metadata i8* %2, metadata !13379, metadata !DIExpression()), !dbg !13382
  %5 = bitcast i32* %4 to i8*, !dbg !13383
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13383
  call void @llvm.dbg.value(metadata i32 0, metadata !13380, metadata !DIExpression()), !dbg !13382
  store i32 0, i32* %4, align 4, !dbg !13384
  call void @llvm.dbg.value(metadata i32* %4, metadata !13380, metadata !DIExpression(DW_OP_deref)), !dbg !13382
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13385
  call void @llvm.dbg.value(metadata i16* %6, metadata !13381, metadata !DIExpression()), !dbg !13382
  %7 = load i32, i32* %4, align 4, !dbg !13386
  call void @llvm.dbg.value(metadata i32 %7, metadata !13380, metadata !DIExpression()), !dbg !13382
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13387
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13388
  ret i32 %8, !dbg !13389
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13390 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13392, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata i32* %1, metadata !13393, metadata !DIExpression()), !dbg !13397
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13398
  %4 = load i16*, i16** %3, align 4, !dbg !13398
  call void @llvm.dbg.value(metadata i16* %4, metadata !13394, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata i32 0, metadata !13395, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata i32 0, metadata !13396, metadata !DIExpression()), !dbg !13397
  %5 = icmp eq i16* %4, null, !dbg !13399
  br i1 %5, label %22, label %6, !dbg !13401

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13395, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata i16* %8, metadata !13394, metadata !DIExpression()), !dbg !13397
  %9 = load i16, i16* %8, align 2, !dbg !13402
  %10 = icmp eq i16 %9, -32768, !dbg !13406
  call void @llvm.dbg.value(metadata i32 undef, metadata !13395, metadata !DIExpression()), !dbg !13397
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13407
  call void @llvm.dbg.value(metadata i16* %11, metadata !13394, metadata !DIExpression()), !dbg !13397
  %12 = zext i1 %10 to i32, !dbg !13408
  %13 = add i32 %7, %12, !dbg !13408
  call void @llvm.dbg.value(metadata i32 %13, metadata !13395, metadata !DIExpression()), !dbg !13397
  %14 = icmp eq i32 %13, 2, !dbg !13409
  br i1 %14, label %15, label %6, !dbg !13410

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13397
  call void @llvm.dbg.value(metadata i32 %16, metadata !13396, metadata !DIExpression()), !dbg !13397
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13411
  %18 = load i16, i16* %17, align 2, !dbg !13411
  %19 = icmp eq i16 %18, 32767, !dbg !13412
  %20 = add i32 %16, 1, !dbg !13413
  call void @llvm.dbg.value(metadata i32 %20, metadata !13396, metadata !DIExpression()), !dbg !13397
  br i1 %19, label %21, label %15, !dbg !13415, !llvm.loop !13416

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13418
  br label %22, !dbg !13419

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13420
  call void @llvm.dbg.value(metadata i16* %23, metadata !13394, metadata !DIExpression()), !dbg !13397
  ret i16* %23, !dbg !13421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !13422 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13423
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13424
  ret i32* %2, !dbg !13425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !13426 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13574, metadata !DIExpression()), !dbg !13577
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13575, metadata !DIExpression()), !dbg !13577
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13576, metadata !DIExpression()), !dbg !13577
  ret void, !dbg !13578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13583, metadata !DIExpression()), !dbg !13585
  call void @llvm.dbg.value(metadata i32 %1, metadata !13584, metadata !DIExpression()), !dbg !13585
  ret void, !dbg !13586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13587 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13591, metadata !DIExpression()), !dbg !13593
  call void @llvm.dbg.value(metadata i32 %1, metadata !13592, metadata !DIExpression()), !dbg !13593
  ret void, !dbg !13594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13599, metadata !DIExpression()), !dbg !13601
  call void @llvm.dbg.value(metadata i8* %1, metadata !13600, metadata !DIExpression()), !dbg !13601
  ret i32 -134, !dbg !13602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13607, metadata !DIExpression()), !dbg !13609
  call void @llvm.dbg.value(metadata i8* %1, metadata !13608, metadata !DIExpression()), !dbg !13609
  ret i32 -134, !dbg !13610
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13614, metadata !DIExpression()), !dbg !13615
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13616, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #24, !dbg !13623
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #24, !dbg !13623
  br label %3, !dbg !13624

3:                                                ; preds = %3, %1
  br label %3, !dbg !13625, !llvm.loop !13628
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13635, metadata !DIExpression()), !dbg !13637
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13636, metadata !DIExpression()), !dbg !13637
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13638
  unreachable, !dbg !13638
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13639 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13641, metadata !DIExpression()), !dbg !13642
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13643
  unreachable, !dbg !13643
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13646, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13647, metadata !DIExpression()), !dbg !13650
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13651, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #24, !dbg !13653
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #24, !dbg !13653
  call void @llvm.dbg.value(metadata i32 undef, metadata !13648, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13649, metadata !DIExpression()), !dbg !13650
  %4 = icmp eq %struct.__esf* %1, null, !dbg !13654
  br i1 %4, label %6, label %5, !dbg !13656

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !13657
  br label %7, !dbg !13658

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !13657
  br label %7, !dbg !13661

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !13651
  call void @llvm.dbg.value(metadata i32 %8, metadata !13619, metadata !DIExpression()) #24, !dbg !13653
  call void @llvm.dbg.value(metadata i32 %8, metadata !13648, metadata !DIExpression()), !dbg !13650
  %9 = tail call fastcc %struct.k_thread* @k_current_get.119() #27, !dbg !13663
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13649, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.value(metadata i32 undef, metadata !13664, metadata !DIExpression()) #24, !dbg !13667
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !13669, !srcloc !13670
  tail call fastcc void @k_thread_abort.120(%struct.k_thread* noundef %9) #26, !dbg !13671
  ret void, !dbg !13674
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.119() unnamed_addr #9 !dbg !13675 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.121() #27, !dbg !13679
  ret %struct.k_thread* %1, !dbg !13680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.120(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13681 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13685, metadata !DIExpression()), !dbg !13686
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13687, !srcloc !13689
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13690
  ret void, !dbg !13691
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.121() unnamed_addr #9 !dbg !13692 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13693, !srcloc !13695
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13696
  ret %struct.k_thread* %1, !dbg !13697
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13698 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13702, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i32 %1, metadata !13703, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i32 %2, metadata !13704, metadata !DIExpression()), !dbg !13705
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13706
  ret void, !dbg !13707
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13708 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13712, metadata !DIExpression()), !dbg !13715
  call void @llvm.dbg.value(metadata i8* %1, metadata !13713, metadata !DIExpression()), !dbg !13715
  call void @llvm.dbg.value(metadata i32 %2, metadata !13714, metadata !DIExpression()), !dbg !13715
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13716
  ret void, !dbg !13717
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13718 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13719
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #26, !dbg !13720
  ret void, !dbg !13721
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13724, metadata !DIExpression()), !dbg !13725
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13726
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13727
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13728
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13729
  %4 = trunc i32 %0 to i8, !dbg !13730
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13731
  store i8 %4, i8* %5, align 4, !dbg !13732
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13733
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13734
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13735
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13736
  store i8* %8, i8** %9, align 4, !dbg !13737
  ret void, !dbg !13738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13741, metadata !DIExpression()), !dbg !13747
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13748
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13742, metadata !DIExpression()), !dbg !13747
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13749
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13743, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i8* null, metadata !13746, metadata !DIExpression()), !dbg !13747
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13750
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13751
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !13752
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13753
  ret void, !dbg !13754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13755 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13759, metadata !DIExpression()), !dbg !13760
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13761
  ret i8* %2, !dbg !13762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13763 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13768, metadata !DIExpression()), !dbg !13769
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13770
  %3 = load i8, i8* %2, align 1, !dbg !13771
  %4 = and i8 %3, -5, !dbg !13771
  store i8 %4, i8* %2, align 1, !dbg !13771
  ret void, !dbg !13772
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !13773 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13776
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13777
  %3 = ptrtoint i8* %2 to i32, !dbg !13786
  %4 = add i32 %3, 2048, !dbg !13787
  call void @llvm.dbg.value(metadata i32 %4, metadata !13781, metadata !DIExpression()) #24, !dbg !13788
  call void @llvm.dbg.value(metadata i32 %4, metadata !13789, metadata !DIExpression()) #24, !dbg !13792
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !13794, !srcloc !13795
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13796
  %6 = or i32 %5, 512, !dbg !13796
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13796
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -2, i32 noundef 255) #25, !dbg !13797
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -5, i32 noundef 0) #25, !dbg !13800
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -12, i32 noundef 0) #25, !dbg !13801
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -11, i32 noundef 0) #25, !dbg !13802
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -10, i32 noundef 0) #25, !dbg !13803
  tail call fastcc void @__NVIC_SetPriority.128(i32 noundef -4, i32 noundef 0) #25, !dbg !13804
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13805
  %8 = or i32 %7, 458752, !dbg !13805
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13805
  tail call void @z_arm_fault_init() #25, !dbg !13806
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13807
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13808
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13811
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13812
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13813
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13814
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !13814
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13775, metadata !DIExpression()), !dbg !13815
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !13816
  call void @z_device_state_init() #25, !dbg !13817
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !13818
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !13819
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !13820
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !13821
  unreachable, !dbg !13821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2210, metadata !DIExpression()), !dbg !13822
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13823
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13823
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2211, metadata !DIExpression()), !dbg !13822
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2211, metadata !DIExpression()), !dbg !13822
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13824
  br i1 %7, label %8, label %35, !dbg !13825

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2211, metadata !DIExpression()), !dbg !13822
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13826
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13826
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2221, metadata !DIExpression()), !dbg !13827
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13828
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13828
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13829
  call void @llvm.dbg.value(metadata i32 %14, metadata !2225, metadata !DIExpression()), !dbg !13827
  %15 = icmp eq %struct.device* %11, null, !dbg !13830
  br i1 %15, label %32, label %16, !dbg !13832

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13833
  br i1 %17, label %26, label %18, !dbg !13836

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13837
  call void @llvm.dbg.value(metadata i32 %19, metadata !2225, metadata !DIExpression()), !dbg !13827
  %20 = icmp ult i32 %19, 255, !dbg !13839
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13839
  call void @llvm.dbg.value(metadata i32 %21, metadata !2225, metadata !DIExpression()), !dbg !13827
  %22 = trunc i32 %21 to i8, !dbg !13840
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13841
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13841
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13842
  store i8 %22, i8* %25, align 1, !dbg !13843
  br label %26, !dbg !13844

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13845
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13845
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13846
  %30 = load i8, i8* %29, align 1, !dbg !13847
  %31 = or i8 %30, 1, !dbg !13847
  store i8 %31, i8* %29, align 1, !dbg !13847
  br label %32, !dbg !13848

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13849
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2211, metadata !DIExpression()), !dbg !13822
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13824
  br i1 %34, label %8, label %35, !dbg !13825, !llvm.loop !13850

35:                                               ; preds = %32, %1
  ret void, !dbg !13852
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.128(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13855, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i32 %1, metadata !13856, metadata !DIExpression()), !dbg !13857
  %3 = trunc i32 %1 to i8, !dbg !13858
  %4 = shl i8 %3, 4, !dbg !13858
  %5 = and i32 %0, 15, !dbg !13861
  %6 = add nsw i32 %5, -4, !dbg !13862
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13863
  store volatile i8 %4, i8* %7, align 1, !dbg !13864
  ret void, !dbg !13865
}

; Function Attrs: optsize
declare !dbg !13866 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !13867 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13870, metadata !DIExpression()), !dbg !13871
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13872
  store i8 1, i8* %2, align 1, !dbg !13873
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13874
  store i8 1, i8* %3, align 4, !dbg !13875
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13876
  store i32 0, i32* %4, align 4, !dbg !13877
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13878
  store i32 0, i32* %5, align 4, !dbg !13879
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13880
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13881
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13882
  ret void, !dbg !13883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13884 {
  tail call void @z_sched_init() #25, !dbg !13889
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13890
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0)) #25, !dbg !13891
  call void @llvm.dbg.value(metadata i8* %1, metadata !13888, metadata !DIExpression()), !dbg !13892
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13893
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13894
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !13895
  ret i8* %1, !dbg !13896
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !13897 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13901, metadata !DIExpression()), !dbg !13902
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13903
  unreachable, !dbg !13904
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13905 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13907, metadata !DIExpression()), !dbg !13910
  call void @llvm.dbg.value(metadata i8* %1, metadata !13908, metadata !DIExpression()), !dbg !13910
  call void @llvm.dbg.value(metadata i8* %2, metadata !13909, metadata !DIExpression()), !dbg !13910
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13911
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !13912
  tail call void @boot_banner() #25, !dbg !13913
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !13914
  tail call void @z_init_static_threads() #25, !dbg !13915
  tail call void @main() #25, !dbg !13916
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13917
  %5 = and i8 %4, -2, !dbg !13917
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13917
  ret void, !dbg !13918
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13919 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13929, metadata !DIExpression()), !dbg !13931
  call void @llvm.dbg.value(metadata i8* %1, metadata !13930, metadata !DIExpression()), !dbg !13931
  ret void, !dbg !13932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13933 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13935, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata i8* %1, metadata !13936, metadata !DIExpression()), !dbg !13937
  ret void, !dbg !13938
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13939 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13940, !srcloc !13947
  call void @llvm.dbg.value(metadata i32 %1, metadata !13943, metadata !DIExpression()) #24, !dbg !13948
  %2 = icmp ne i32 %1, 0, !dbg !13949
  ret i1 %2, !dbg !13950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13951 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13952
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13953
  %3 = load i8, i8* %2, align 4, !dbg !13954
  %4 = or i8 %3, 1, !dbg !13954
  store i8 %4, i8* %2, align 4, !dbg !13954
  ret void, !dbg !13955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13956 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13957
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13958
  %3 = load i8, i8* %2, align 4, !dbg !13959
  %4 = and i8 %3, -2, !dbg !13959
  store i8 %4, i8* %2, align 4, !dbg !13959
  ret void, !dbg !13960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13961 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13962
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13963
  %3 = load i8, i8* %2, align 4, !dbg !13963
  %4 = and i8 %3, 1, !dbg !13964
  %5 = icmp ne i8 %4, 0, !dbg !13965
  ret i1 %5, !dbg !13966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13967 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13971, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i8* %1, metadata !13972, metadata !DIExpression()), !dbg !13973
  ret i32 -88, !dbg !13974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13975 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13979, metadata !DIExpression()), !dbg !13980
  ret i8* null, !dbg !13981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13982 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13986, metadata !DIExpression()), !dbg !13989
  call void @llvm.dbg.value(metadata i8* %1, metadata !13987, metadata !DIExpression()), !dbg !13989
  call void @llvm.dbg.value(metadata i32 %2, metadata !13988, metadata !DIExpression()), !dbg !13989
  ret i32 -88, !dbg !13990
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2232 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2346, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.value(metadata i8* %1, metadata !2347, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.value(metadata i32 %2, metadata !2348, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.value(metadata i32 0, metadata !2349, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.value(metadata i8 undef, metadata !2351, metadata !DIExpression()), !dbg !13991
  %4 = icmp eq i8* %1, null, !dbg !13992
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13994
  br i1 %6, label %46, label %7, !dbg !13994

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13995
  %9 = load i8, i8* %8, align 1, !dbg !13995
  call void @llvm.dbg.value(metadata i8 %9, metadata !2351, metadata !DIExpression()), !dbg !13991
  %10 = add i32 %2, -1, !dbg !13996
  call void @llvm.dbg.value(metadata i32 %10, metadata !2348, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.value(metadata i8 0, metadata !2352, metadata !DIExpression()), !dbg !13997
  call void @llvm.dbg.value(metadata i8 %9, metadata !2351, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.value(metadata i32 0, metadata !2349, metadata !DIExpression()), !dbg !13991
  %11 = icmp eq i8 %9, 0, !dbg !13998
  br i1 %11, label %12, label %15, !dbg !14000

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14001
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14002
  store i8 0, i8* %14, align 1, !dbg !14003
  br label %46, !dbg !14004

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2352, metadata !DIExpression()), !dbg !13997
  call void @llvm.dbg.value(metadata i8 %17, metadata !2351, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.value(metadata i32 %18, metadata !2349, metadata !DIExpression()), !dbg !13991
  %19 = zext i8 %17 to i32, !dbg !14005
  %20 = zext i8 %16 to i32, !dbg !14006
  %21 = shl nuw i32 1, %20, !dbg !14006
  call void @llvm.dbg.value(metadata i32 %21, metadata !2350, metadata !DIExpression()), !dbg !13991
  %22 = and i32 %21, %19, !dbg !14008
  %23 = icmp eq i32 %22, 0, !dbg !14010
  br i1 %23, label %42, label %24, !dbg !14011

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14012
  %26 = sub i32 %10, %18, !dbg !14013
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14014
  %28 = load i8*, i8** %27, align 4, !dbg !14014
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14015
  %30 = load i32, i32* %29, align 4, !dbg !14015
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !14016
  %32 = add i32 %31, %18, !dbg !14017
  call void @llvm.dbg.value(metadata i32 %32, metadata !2349, metadata !DIExpression()), !dbg !13991
  %33 = trunc i32 %21 to i8, !dbg !14018
  %34 = xor i8 %33, -1, !dbg !14018
  %35 = and i8 %17, %34, !dbg !14018
  call void @llvm.dbg.value(metadata i8 %35, metadata !2351, metadata !DIExpression()), !dbg !13991
  %36 = icmp eq i8 %35, 0, !dbg !14019
  br i1 %36, label %12, label %37, !dbg !14021

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14022
  %39 = sub i32 %10, %32, !dbg !14024
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.132, i32 0, i32 0), i32 noundef 1) #26, !dbg !14025
  %41 = add i32 %40, %32, !dbg !14026
  call void @llvm.dbg.value(metadata i32 %41, metadata !2349, metadata !DIExpression()), !dbg !13991
  br label %42, !dbg !14027

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13991
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13991
  call void @llvm.dbg.value(metadata i8 %44, metadata !2351, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.value(metadata i32 %43, metadata !2349, metadata !DIExpression()), !dbg !13991
  %45 = add i8 %16, 1, !dbg !14028
  call void @llvm.dbg.value(metadata i8 %45, metadata !2352, metadata !DIExpression()), !dbg !13997
  br label %15, !dbg !14000

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.133, i32 0, i32 0), %3 ], !dbg !13991
  ret i8* %47, !dbg !14029
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14030 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14034, metadata !DIExpression()), !dbg !14039
  call void @llvm.dbg.value(metadata i32 %1, metadata !14035, metadata !DIExpression()), !dbg !14039
  call void @llvm.dbg.value(metadata i8* %2, metadata !14036, metadata !DIExpression()), !dbg !14039
  call void @llvm.dbg.value(metadata i32 %3, metadata !14037, metadata !DIExpression()), !dbg !14039
  %5 = icmp ult i32 %1, %3, !dbg !14040
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14040
  call void @llvm.dbg.value(metadata i32 %6, metadata !14038, metadata !DIExpression()), !dbg !14039
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14041
  ret i32 %6, !dbg !14042
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14043 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14047, metadata !DIExpression()), !dbg !14048
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14049
  ret void, !dbg !14050
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14051 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14060, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14061, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i32 %2, metadata !14062, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14063, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i8* %4, metadata !14064, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i8* %5, metadata !14065, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i8* %6, metadata !14066, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i32 %7, metadata !14067, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i32 %8, metadata !14068, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i8* undef, metadata !14069, metadata !DIExpression()), !dbg !14071
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14072
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !14073
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14074
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14075
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14076
  call void @llvm.dbg.value(metadata i8* %13, metadata !14070, metadata !DIExpression()), !dbg !14071
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14077
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14078
  store i8* null, i8** %14, align 4, !dbg !14079
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14080
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14080
  br i1 %16, label %20, label %17, !dbg !14082

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14083
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14083
  br label %20, !dbg !14084

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14071
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14085
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14087
  ret i8* %13, !dbg !14088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !14089 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14094, metadata !DIExpression()), !dbg !14095
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14096
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14097
  ret void, !dbg !14098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !14099 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14104, metadata !DIExpression()), !dbg !14108
  call void @llvm.dbg.value(metadata i32 %1, metadata !14105, metadata !DIExpression()), !dbg !14108
  call void @llvm.dbg.value(metadata i32 %2, metadata !14106, metadata !DIExpression()), !dbg !14108
  call void @llvm.dbg.value(metadata i32 %3, metadata !14107, metadata !DIExpression()), !dbg !14108
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14109
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14110
  %6 = trunc i32 %3 to i8, !dbg !14111
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14112
  store i8 %6, i8* %7, align 4, !dbg !14113
  %8 = trunc i32 %2 to i8, !dbg !14114
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14115
  store i8 %8, i8* %9, align 1, !dbg !14116
  %10 = trunc i32 %1 to i8, !dbg !14117
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14118
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14118
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14118
  store i8 %10, i8* %13, align 2, !dbg !14119
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14120
  store i8 0, i8* %14, align 1, !dbg !14121
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14122
  ret void, !dbg !14123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !14124 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14128, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14129, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.value(metadata i32 %2, metadata !14130, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.value(metadata i32 0, metadata !14135, metadata !DIExpression()), !dbg !14136
  %4 = add i32 %2, 7, !dbg !14137
  %5 = and i32 %4, -8, !dbg !14137
  %6 = add i32 %5, 64, !dbg !14137
  call void @llvm.dbg.value(metadata i32 %6, metadata !14131, metadata !DIExpression()), !dbg !14136
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.143(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14139
  call void @llvm.dbg.value(metadata i8* %7, metadata !14134, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.value(metadata i32 %5, metadata !14132, metadata !DIExpression()), !dbg !14136
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14140
  call void @llvm.dbg.value(metadata i8* %8, metadata !14133, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.value(metadata i32 0, metadata !14135, metadata !DIExpression()), !dbg !14136
  %9 = ptrtoint i8* %7 to i32, !dbg !14141
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14142
  store i32 %9, i32* %10, align 4, !dbg !14143
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14144
  store i32 %5, i32* %11, align 4, !dbg !14145
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14146
  store i32 0, i32* %12, align 4, !dbg !14147
  call void @llvm.dbg.value(metadata i8* %8, metadata !14133, metadata !DIExpression()), !dbg !14136
  ret i8* %8, !dbg !14148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.143(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !14149 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14153, metadata !DIExpression()), !dbg !14154
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14155
  ret i8* %2, !dbg !14156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14157 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14162, metadata !DIExpression()), !dbg !14163
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14164
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14165
  ret void, !dbg !14166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14167 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14169, metadata !DIExpression()), !dbg !14170
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14171
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14172
  ret void, !dbg !14173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14174 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14178, metadata !DIExpression()), !dbg !14179
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14180
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14181
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14182
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14183
  ret void, !dbg !14184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14185 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14190, metadata !DIExpression()), !dbg !14191
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14192
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14193
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14194
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14195
  ret void, !dbg !14196
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14197 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14214, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14205, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14206, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata i32 %2, metadata !14207, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14208, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata i8* %4, metadata !14209, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata i8* %5, metadata !14210, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata i8* %6, metadata !14211, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata i32 %7, metadata !14212, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata i32 %8, metadata !14213, metadata !DIExpression()), !dbg !14215
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14216
  %13 = icmp eq i64 %11, -1, !dbg !14217
  br i1 %13, label %15, label %14, !dbg !14219

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14220
  br label %15, !dbg !14222

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14224 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14229, metadata !DIExpression()), !dbg !14230
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()), !dbg !14230
  %4 = icmp eq i64 %3, 0, !dbg !14231
  br i1 %4, label %5, label %6, !dbg !14233

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14234
  br label %7, !dbg !14236

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14237
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14240 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14244, metadata !DIExpression()), !dbg !14245
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14246, !srcloc !14248
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14249
  ret void, !dbg !14250
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14251 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14254, metadata !DIExpression()), !dbg !14255
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14253, metadata !DIExpression()), !dbg !14255
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14256
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14257
  ret void, !dbg !14258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14259 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14261, metadata !DIExpression()), !dbg !14281
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14282

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14283
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14279, metadata !DIExpression()), !dbg !14284
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14285

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14261, metadata !DIExpression()), !dbg !14281
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14286
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14286
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14289
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14289
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14290
  %9 = load i32, i32* %8, align 4, !dbg !14290
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14291
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14291
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14292
  %13 = load i8*, i8** %12, align 4, !dbg !14292
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14293
  %15 = load i8*, i8** %14, align 4, !dbg !14293
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14294
  %17 = load i8*, i8** %16, align 4, !dbg !14294
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14295
  %19 = load i32, i32* %18, align 4, !dbg !14295
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14296
  %21 = load i32, i32* %20, align 4, !dbg !14296
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14297
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14298
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14299
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14300
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14300
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14301
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14261, metadata !DIExpression()), !dbg !14281
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14302
  br i1 %27, label %2, label %1, !dbg !14282, !llvm.loop !14304

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14283
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14279, metadata !DIExpression()), !dbg !14284
  br label %29, !dbg !14285

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14306
  ret void, !dbg !14307

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14279, metadata !DIExpression()), !dbg !14284
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14308
  %33 = load i32, i32* %32, align 4, !dbg !14308
  %34 = icmp eq i32 %33, -1, !dbg !14312
  br i1 %34, label %43, label %35, !dbg !14313

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14314
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14314
  %38 = icmp sgt i32 %33, 0, !dbg !14316
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14316
  %40 = zext i32 %39 to i64, !dbg !14316
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.146(i64 noundef %40) #26, !dbg !14316
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14317
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14317
  br label %43, !dbg !14318

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14319
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14279, metadata !DIExpression()), !dbg !14284
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14320
  br i1 %45, label %30, label %29, !dbg !14285, !llvm.loop !14322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.146(i64 noundef %0) unnamed_addr #11 !dbg !14324 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14326, metadata !DIExpression()), !dbg !14327
  call void @llvm.dbg.value(metadata i64 %0, metadata !14328, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i32 1000, metadata !14331, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i32 10000, metadata !14332, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i8 1, metadata !14333, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i8 0, metadata !14334, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i8 1, metadata !14335, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i8 0, metadata !14336, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i8 1, metadata !14337, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i8 0, metadata !14338, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i64 0, metadata !14339, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i64 0, metadata !14339, metadata !DIExpression()), !dbg !14343
  %2 = mul i64 %0, 10, !dbg !14345
  ret i64 %2, !dbg !14351
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14352 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14354, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata i8* %1, metadata !14355, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata i8* %2, metadata !14356, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata i8* %3, metadata !14357, metadata !DIExpression()), !dbg !14358
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14359
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14360
  %7 = load i8, i8* %6, align 4, !dbg !14361
  %8 = or i8 %7, 4, !dbg !14361
  store i8 %8, i8* %6, align 4, !dbg !14361
  tail call void @z_thread_essential_clear() #26, !dbg !14362
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !14363
  unreachable, !dbg !14363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !14364 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14368, metadata !DIExpression()), !dbg !14369
  ret i32 -134, !dbg !14370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !14371 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14375, metadata !DIExpression()), !dbg !14377
  call void @llvm.dbg.value(metadata i32 %1, metadata !14376, metadata !DIExpression()), !dbg !14377
  ret i32 -134, !dbg !14378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !14379 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14386, metadata !DIExpression()), !dbg !14388
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14387, metadata !DIExpression()), !dbg !14388
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14389
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14391
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14388
  ret i32 %6, !dbg !14392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !14393 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14397, metadata !DIExpression()), !dbg !14398
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14399
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14398
  ret i32 %3, !dbg !14401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14402 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14404
  ret void, !dbg !14405
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14406 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14408, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i8* %1, metadata !14409, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i8* %2, metadata !14410, metadata !DIExpression()), !dbg !14411
  br label %4, !dbg !14412

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14413, !srcloc !14420
  call void @llvm.dbg.value(metadata i32 undef, metadata !14416, metadata !DIExpression()) #24, !dbg !14421
  call void @llvm.dbg.value(metadata i32 undef, metadata !14417, metadata !DIExpression()) #24, !dbg !14421
  tail call fastcc void @k_cpu_idle() #26, !dbg !14422
  br label %4, !dbg !14412, !llvm.loop !14423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14425 {
  tail call void @arch_cpu_idle() #25, !dbg !14426
  ret void, !dbg !14427
}

; Function Attrs: optsize
declare !dbg !14428 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14429 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14444, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata i32 %1, metadata !14445, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata i32 %2, metadata !14446, metadata !DIExpression()), !dbg !14447
  %4 = icmp eq i32 %2, 0, !dbg !14448
  %5 = icmp ugt i32 %1, %2, !dbg !14448
  %6 = or i1 %4, %5, !dbg !14448
  br i1 %6, label %11, label %7, !dbg !14448

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14450
  store i32 %1, i32* %8, align 4, !dbg !14451
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14452
  store i32 %2, i32* %9, align 4, !dbg !14453
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14454
  tail call fastcc void @z_waitq_init.151(%union.anon* noundef %10) #26, !dbg !14455
  br label %11, !dbg !14456

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !14447
  ret i32 %12, !dbg !14457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.151(%union.anon* noundef %0) unnamed_addr #4 !dbg !14458 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14463, metadata !DIExpression()), !dbg !14464
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14465
  tail call fastcc void @sys_dlist_init.152(%struct._dnode* noundef %2) #26, !dbg !14466
  ret void, !dbg !14467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.152(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14468 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14473, metadata !DIExpression()), !dbg !14474
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14475
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14476
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14477
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14478
  ret void, !dbg !14479
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14480 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14484, metadata !DIExpression()), !dbg !14570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14571, metadata !DIExpression()) #24, !dbg !14578
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14580, !srcloc !14586
  call void @llvm.dbg.value(metadata i32 undef, metadata !14583, metadata !DIExpression()) #24, !dbg !14587
  call void @llvm.dbg.value(metadata i32 undef, metadata !14584, metadata !DIExpression()) #24, !dbg !14587
  call void @llvm.dbg.value(metadata i32 undef, metadata !14577, metadata !DIExpression()) #24, !dbg !14578
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()), !dbg !14570
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14588
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14589
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14490, metadata !DIExpression()), !dbg !14570
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14590
  br i1 %5, label %8, label %6, !dbg !14592

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14593, metadata !DIExpression()), !dbg !14599
  call void @llvm.dbg.value(metadata i32 0, metadata !14598, metadata !DIExpression()), !dbg !14599
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 7, i32 1, !dbg !14602
  store i32 0, i32* %7, align 4, !dbg !14603
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %4) #25, !dbg !14604
  br label %16, !dbg !14605

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14606
  %10 = load i32, i32* %9, align 4, !dbg !14606
  %11 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14608
  %12 = load i32, i32* %11, align 4, !dbg !14608
  %13 = icmp ne i32 %10, %12, !dbg !14609
  %14 = zext i1 %13 to i32, !dbg !14610
  %15 = add i32 %10, %14, !dbg !14611
  store i32 %15, i32* %9, align 4, !dbg !14611
  br label %16

16:                                               ; preds = %8, %6
  %17 = extractvalue { i32, i32 } %2, 0, !dbg !14580
  call void @llvm.dbg.value(metadata i32 %17, metadata !14583, metadata !DIExpression()) #24, !dbg !14587
  call void @llvm.dbg.value(metadata i32 %17, metadata !14577, metadata !DIExpression()) #24, !dbg !14578
  call void @llvm.dbg.value(metadata i32 %17, metadata !14485, metadata !DIExpression()), !dbg !14570
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !14612
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %18) #25, !dbg !14612
  ret void, !dbg !14613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14614 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14623, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14622, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.value(metadata i32 0, metadata !14624, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14571, metadata !DIExpression()) #24, !dbg !14628
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14630, !srcloc !14586
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14630
  call void @llvm.dbg.value(metadata i32 %4, metadata !14583, metadata !DIExpression()) #24, !dbg !14632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14584, metadata !DIExpression()) #24, !dbg !14632
  call void @llvm.dbg.value(metadata i32 %4, metadata !14577, metadata !DIExpression()) #24, !dbg !14628
  call void @llvm.dbg.value(metadata i32 %4, metadata !14625, metadata !DIExpression()), !dbg !14627
  %5 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14633
  %6 = load i32, i32* %5, align 4, !dbg !14633
  %7 = icmp eq i32 %6, 0, !dbg !14633
  br i1 %7, label %10, label %8, !dbg !14635, !prof !14636

8:                                                ; preds = %2
  %9 = add i32 %6, -1, !dbg !14637
  store i32 %9, i32* %5, align 4, !dbg !14637
  call void @llvm.dbg.value(metadata i32 %4, metadata !14639, metadata !DIExpression()) #24, !dbg !14645
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14644, metadata !DIExpression()) #24, !dbg !14645
  call void @llvm.dbg.value(metadata i32 %4, metadata !14647, metadata !DIExpression()) #24, !dbg !14650
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14652, !srcloc !14653
  call void @llvm.dbg.value(metadata i32 0, metadata !14624, metadata !DIExpression()), !dbg !14627
  br label %18, !dbg !14654

10:                                               ; preds = %2
  %11 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14623, metadata !DIExpression()), !dbg !14627
  %12 = icmp eq i64 %11, 0, !dbg !14655
  br i1 %12, label %13, label %14, !dbg !14657

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %4, metadata !14639, metadata !DIExpression()) #24, !dbg !14658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14644, metadata !DIExpression()) #24, !dbg !14658
  call void @llvm.dbg.value(metadata i32 %4, metadata !14647, metadata !DIExpression()) #24, !dbg !14661
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14663, !srcloc !14653
  call void @llvm.dbg.value(metadata i32 -16, metadata !14624, metadata !DIExpression()), !dbg !14627
  br label %18, !dbg !14664

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14665
  %16 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !14666
  %17 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %16, %union.anon* noundef %15, [1 x i64] %1) #25, !dbg !14666
  call void @llvm.dbg.value(metadata i32 %17, metadata !14624, metadata !DIExpression()), !dbg !14627
  br label %18, !dbg !14667

18:                                               ; preds = %8, %13, %14
  %19 = phi i32 [ 0, %8 ], [ -16, %13 ], [ %17, %14 ], !dbg !14627
  call void @llvm.dbg.value(metadata i32 %19, metadata !14624, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.label(metadata !14626), !dbg !14668
  ret i32 %19, !dbg !14669
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14670 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14672, metadata !DIExpression()), !dbg !14675
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14571, metadata !DIExpression()) #24, !dbg !14676
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14678, !srcloc !14586
  call void @llvm.dbg.value(metadata i32 undef, metadata !14583, metadata !DIExpression()) #24, !dbg !14680
  call void @llvm.dbg.value(metadata i32 undef, metadata !14584, metadata !DIExpression()) #24, !dbg !14680
  call void @llvm.dbg.value(metadata i32 undef, metadata !14577, metadata !DIExpression()) #24, !dbg !14676
  call void @llvm.dbg.value(metadata i32 undef, metadata !14674, metadata !DIExpression()), !dbg !14675
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14681
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14673, metadata !DIExpression()), !dbg !14675
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14683
  br i1 %5, label %11, label %6, !dbg !14685

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14593, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata i32 -11, metadata !14598, metadata !DIExpression()), !dbg !14686
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !14688
  store i32 -11, i32* %8, align 4, !dbg !14689
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #25, !dbg !14690
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14681
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14673, metadata !DIExpression()), !dbg !14675
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14683
  br i1 %10, label %11, label %6, !dbg !14685, !llvm.loop !14691

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !14678
  call void @llvm.dbg.value(metadata i32 %12, metadata !14583, metadata !DIExpression()) #24, !dbg !14680
  call void @llvm.dbg.value(metadata i32 %12, metadata !14577, metadata !DIExpression()) #24, !dbg !14676
  call void @llvm.dbg.value(metadata i32 %12, metadata !14674, metadata !DIExpression()), !dbg !14675
  %13 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14694
  store i32 0, i32* %13, align 4, !dbg !14695
  %14 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14696
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %14) #25, !dbg !14696
  ret void, !dbg !14697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14698 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14702, metadata !DIExpression()), !dbg !14706
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14703, metadata !DIExpression()), !dbg !14706
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14707
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14707
  %5 = load i8, i8* %4, align 2, !dbg !14707
  call void @llvm.dbg.value(metadata i8 %5, metadata !14704, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14706
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14708
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14708
  %8 = load i8, i8* %7, align 2, !dbg !14708
  call void @llvm.dbg.value(metadata i8 %8, metadata !14705, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14706
  %9 = icmp eq i8 %8, %5, !dbg !14709
  %10 = sext i8 %5 to i32, !dbg !14711
  %11 = sext i8 %8 to i32, !dbg !14711
  %12 = sub nsw i32 %11, %10, !dbg !14711
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14711
  ret i32 %13, !dbg !14712
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14713 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14717, metadata !DIExpression()), !dbg !14718
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !14719
  %3 = icmp eq i32 %2, 0, !dbg !14721
  br i1 %3, label %8, label %4, !dbg !14722

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14723
  %6 = add i32 %5, %2, !dbg !14725
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14726
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !14727
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14728
  br label %8, !dbg !14729

8:                                                ; preds = %4, %1
  ret void, !dbg !14730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14731 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14735, metadata !DIExpression()), !dbg !14737
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14738
  call void @llvm.dbg.value(metadata i32 %1, metadata !14736, metadata !DIExpression()), !dbg !14737
  ret i32 %1, !dbg !14739
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14744, metadata !DIExpression()), !dbg !14753
  call void @llvm.dbg.value(metadata i32 %1, metadata !14745, metadata !DIExpression()), !dbg !14753
  call void @llvm.dbg.value(metadata i32 0, metadata !14746, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !14762
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14764, !srcloc !14770
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14764
  call void @llvm.dbg.value(metadata i32 %4, metadata !14767, metadata !DIExpression()) #24, !dbg !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !14771
  call void @llvm.dbg.value(metadata i32 %4, metadata !14761, metadata !DIExpression()) #24, !dbg !14762
  call void @llvm.dbg.value(metadata i32 %4, metadata !14752, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i32 undef, metadata !14746, metadata !DIExpression()), !dbg !14754
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14772
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !14775
  %6 = icmp sgt i32 %0, 0, !dbg !14776
  %7 = icmp sgt i32 %5, 2, !dbg !14778
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14778
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14778
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14779
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14780
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14781
  call void @llvm.dbg.value(metadata i32 %4, metadata !14782, metadata !DIExpression()) #24, !dbg !14788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !14788
  call void @llvm.dbg.value(metadata i32 %4, metadata !14790, metadata !DIExpression()) #24, !dbg !14793
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14795, !srcloc !14796
  call void @llvm.dbg.value(metadata i32 1, metadata !14746, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i32 undef, metadata !14746, metadata !DIExpression()), !dbg !14754
  ret void, !dbg !14797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14800, metadata !DIExpression()), !dbg !14801
  call void @llvm.dbg.value(metadata i32 %0, metadata !14802, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14817
  call void @llvm.dbg.value(metadata i32 1000, metadata !14805, metadata !DIExpression()), !dbg !14817
  call void @llvm.dbg.value(metadata i32 10000, metadata !14806, metadata !DIExpression()), !dbg !14817
  call void @llvm.dbg.value(metadata i8 1, metadata !14807, metadata !DIExpression()), !dbg !14817
  call void @llvm.dbg.value(metadata i1 true, metadata !14808, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14817
  call void @llvm.dbg.value(metadata i1 true, metadata !14809, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14817
  call void @llvm.dbg.value(metadata i8 0, metadata !14810, metadata !DIExpression()), !dbg !14817
  call void @llvm.dbg.value(metadata i1 true, metadata !14811, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14817
  call void @llvm.dbg.value(metadata i1 false, metadata !14812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14817
  call void @llvm.dbg.value(metadata i64 0, metadata !14813, metadata !DIExpression()), !dbg !14817
  call void @llvm.dbg.value(metadata i64 0, metadata !14813, metadata !DIExpression()), !dbg !14817
  %2 = mul i32 %0, 10, !dbg !14819
  ret i32 %2, !dbg !14825
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14828, metadata !DIExpression()), !dbg !14830
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !14831
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14833, !srcloc !14770
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14833
  call void @llvm.dbg.value(metadata i32 %3, metadata !14767, metadata !DIExpression()) #24, !dbg !14835
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !14835
  call void @llvm.dbg.value(metadata i32 %3, metadata !14761, metadata !DIExpression()) #24, !dbg !14831
  call void @llvm.dbg.value(metadata i32 %3, metadata !14829, metadata !DIExpression()), !dbg !14830
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14836
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14838
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14839
  br i1 %6, label %7, label %8, !dbg !14840

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14841
  call void @llvm.dbg.value(metadata i32 %3, metadata !14782, metadata !DIExpression()) #24, !dbg !14843
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !14843
  call void @llvm.dbg.value(metadata i32 %3, metadata !14790, metadata !DIExpression()) #24, !dbg !14845
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14847, !srcloc !14796
  br label %24, !dbg !14848

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14849
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !14850
  %10 = icmp eq i32 %9, 0, !dbg !14850
  br i1 %10, label %21, label %11, !dbg !14852

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !14853
  br i1 %12, label %13, label %21, !dbg !14854

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14855
  %15 = icmp sgt i32 %14, %0, !dbg !14858
  br i1 %15, label %19, label %16, !dbg !14859

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14860
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !14860
  call void @llvm.dbg.value(metadata i32 %18, metadata !14829, metadata !DIExpression()), !dbg !14830
  br label %22, !dbg !14862

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14863
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14863
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14865
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14830
  call void @llvm.dbg.value(metadata i32 %23, metadata !14829, metadata !DIExpression()), !dbg !14830
  call void @llvm.dbg.value(metadata i32 %23, metadata !14782, metadata !DIExpression()) #24, !dbg !14867
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !14867
  call void @llvm.dbg.value(metadata i32 %23, metadata !14790, metadata !DIExpression()) #24, !dbg !14869
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !14871, !srcloc !14796
  br label %24, !dbg !14872

24:                                               ; preds = %22, %7
  ret void, !dbg !14872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14873 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14877, metadata !DIExpression()), !dbg !14879
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !14880
  %3 = icmp eq i32 %2, 0, !dbg !14880
  br i1 %3, label %16, label %4, !dbg !14881

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14882
  br i1 %5, label %16, label %6, !dbg !14883

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14884
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14884
  %9 = load i8, i8* %8, align 2, !dbg !14884
  %10 = sext i8 %9 to i32, !dbg !14885
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14886
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !14887
  br i1 %12, label %16, label %13, !dbg !14888

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !14889
  %15 = xor i1 %14, true, !dbg !14890
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14879
  call void @llvm.dbg.value(metadata i1 %17, metadata !14878, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14879
  ret i1 %17, !dbg !14891
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14892 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14896, metadata !DIExpression()), !dbg !14898
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14899
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14897, metadata !DIExpression()), !dbg !14898
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !14900
  br i1 %3, label %5, label %4, !dbg !14902

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !14903
  br label %5, !dbg !14905

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14896, metadata !DIExpression()), !dbg !14898
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14906
  ret i32 %6, !dbg !14907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14908 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14910, metadata !DIExpression()), !dbg !14912
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14913
  %3 = load i8, i8* %2, align 1, !dbg !14913
  call void @llvm.dbg.value(metadata i8 %3, metadata !14911, metadata !DIExpression()), !dbg !14912
  %4 = and i8 %3, 31, !dbg !14914
  %5 = icmp ne i8 %4, 0, !dbg !14915
  ret i1 %5, !dbg !14916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14917 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14919, metadata !DIExpression()), !dbg !14920
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14921
  br i1 %2, label %3, label %7, !dbg !14923

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #24, !dbg !14927
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14930
  %5 = load i8, i8* %4, align 1, !dbg !14931
  %6 = and i8 %5, 127, !dbg !14931
  store i8 %6, i8* %4, align 1, !dbg !14931
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14932, metadata !DIExpression()) #24, !dbg !14935
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14939
  br label %7, !dbg !14940

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14941, metadata !DIExpression()) #24, !dbg !14944
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14946
  %9 = load i8, i8* %8, align 1, !dbg !14947
  %10 = or i8 %9, -128, !dbg !14947
  store i8 %10, i8* %8, align 1, !dbg !14947
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14948, metadata !DIExpression()) #24, !dbg !14951
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14955, metadata !DIExpression()) #24, !dbg !14963
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14961, metadata !DIExpression()) #24, !dbg !14963
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14965
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14962, metadata !DIExpression()) #24, !dbg !14963
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14967
  br i1 %12, label %23, label %13, !dbg !14965

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14962, metadata !DIExpression()) #24, !dbg !14963
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14969
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14962, metadata !DIExpression()) #24, !dbg !14963
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !14970
  %17 = icmp sgt i32 %16, 0, !dbg !14973
  br i1 %17, label %18, label %20, !dbg !14974

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14975
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !14977
  br label %25, !dbg !14978

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !14967
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14962, metadata !DIExpression()) #24, !dbg !14963
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14967
  br i1 %22, label %23, label %13, !dbg !14965, !llvm.loop !14979

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14981
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !14982
  br label %25, !dbg !14983

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14984
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14985
  %28 = zext i1 %27 to i32, !dbg !14985
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !14986
  ret void, !dbg !14987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14988 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14990, metadata !DIExpression()), !dbg !14991
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !14992
  ret i1 %2, !dbg !14993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !14994 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14996, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14997, metadata !DIExpression()), !dbg !14998
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14999
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15000
  ret void, !dbg !15001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !15002 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15006, metadata !DIExpression()), !dbg !15007
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !15008
  br i1 %2, label %6, label %3, !dbg !15008

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15009
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15009
  br label %6, !dbg !15008

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15008
  ret %struct._dnode* %7, !dbg !15010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15011 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15015, metadata !DIExpression()), !dbg !15019
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15016, metadata !DIExpression()), !dbg !15019
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15020
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15020
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15017, metadata !DIExpression()), !dbg !15019
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15021
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15022
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15023
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15024
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15025
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15026
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15027
  ret void, !dbg !15028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15029 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15033, metadata !DIExpression()), !dbg !15035
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15034, metadata !DIExpression()), !dbg !15035
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15036
  br i1 %3, label %6, label %4, !dbg !15037

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15038
  br label %6, !dbg !15037

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15037
  ret %struct._dnode* %7, !dbg !15039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15040 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15044, metadata !DIExpression()), !dbg !15047
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15045, metadata !DIExpression()), !dbg !15047
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15048
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15048
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15046, metadata !DIExpression()), !dbg !15047
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15049
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15050
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15051
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15052
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15053
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15054
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15055
  ret void, !dbg !15056
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15059, metadata !DIExpression()), !dbg !15061
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15062
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15069, metadata !DIExpression()) #24, !dbg !15071
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15072
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15073
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15073
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15060, metadata !DIExpression()), !dbg !15061
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15074, metadata !DIExpression()) #24, !dbg !15080
  call void @llvm.dbg.value(metadata i32 %0, metadata !15079, metadata !DIExpression()) #24, !dbg !15080
  %6 = icmp eq i32 %0, 0, !dbg !15083
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15085
  br i1 %6, label %8, label %15, !dbg !15086

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15087
  br i1 %9, label %15, label %10, !dbg !15089

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15090
  br i1 %11, label %15, label %12, !dbg !15092

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15093
  %14 = icmp eq i32 %13, 0, !dbg !15093
  br i1 %14, label %18, label %15, !dbg !15095

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15096
  br i1 %16, label %18, label %17, !dbg !15099

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15100
  br label %18, !dbg !15102

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15085
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15085
  ret void, !dbg !15103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !15104 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15108, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15109, metadata !DIExpression()), !dbg !15111
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !15112
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15110, metadata !DIExpression()), !dbg !15111
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15109, metadata !DIExpression()), !dbg !15111
  ret %struct.k_thread* %3, !dbg !15113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15114 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15116, metadata !DIExpression()), !dbg !15117
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15118
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15119
  %4 = xor i1 %3, true, !dbg !15120
  ret i1 %4, !dbg !15121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15122 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15124, metadata !DIExpression()), !dbg !15125
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15126
  %3 = load i16, i16* %2, align 2, !dbg !15126
  %4 = icmp ult i16 %3, 128, !dbg !15127
  %5 = zext i1 %4 to i32, !dbg !15127
  ret i32 %5, !dbg !15128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15129 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15135, metadata !DIExpression()), !dbg !15136
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15137
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15138
  %4 = xor i1 %3, true, !dbg !15139
  ret i1 %4, !dbg !15140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15141 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15147, metadata !DIExpression()), !dbg !15148
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15149
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15149
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15150
  ret i1 %4, !dbg !15151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15152 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15154, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15155, metadata !DIExpression()), !dbg !15156
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15157
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15157
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15158
  br i1 %5, label %9, label %6, !dbg !15159

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15160
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15160
  br label %9, !dbg !15159

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15159
  ret %struct._dnode* %10, !dbg !15161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15162 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15166, metadata !DIExpression()), !dbg !15167
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15168
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15168
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15169
  ret i1 %4, !dbg !15170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !15171 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15175, metadata !DIExpression()), !dbg !15178
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15179
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15179
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15176, metadata !DIExpression()), !dbg !15178
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15180
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15180
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15177, metadata !DIExpression()), !dbg !15178
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15181
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15182
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15183
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15184
  tail call fastcc void @sys_dnode_init.157(%struct._dnode* noundef %0) #26, !dbg !15185
  ret void, !dbg !15186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.157(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15187 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15189, metadata !DIExpression()), !dbg !15190
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15191
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15192
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15193
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15194
  ret void, !dbg !15195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15196 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15200, metadata !DIExpression()), !dbg !15202
  call void @llvm.dbg.value(metadata i32 128, metadata !15201, metadata !DIExpression()), !dbg !15202
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15203
  %3 = load i8, i8* %2, align 1, !dbg !15203
  %4 = icmp slt i8 %3, 0, !dbg !15204
  ret i1 %4, !dbg !15205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15210, metadata !DIExpression()), !dbg !15212
  call void @llvm.dbg.value(metadata i32 %1, metadata !15211, metadata !DIExpression()), !dbg !15212
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15213
  ret i1 %3, !dbg !15214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !15215 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15217, metadata !DIExpression()), !dbg !15218
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15219
  ret i1 %2, !dbg !15220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15223, metadata !DIExpression()), !dbg !15225
  call void @llvm.dbg.value(metadata i32 %1, metadata !15224, metadata !DIExpression()), !dbg !15225
  %3 = icmp slt i32 %0, %1, !dbg !15226
  ret i1 %3, !dbg !15227
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15228 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15230, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i32 0, metadata !15231, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15236
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15238, !srcloc !14770
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15238
  call void @llvm.dbg.value(metadata i32 %3, metadata !14767, metadata !DIExpression()) #24, !dbg !15240
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15240
  call void @llvm.dbg.value(metadata i32 %3, metadata !14761, metadata !DIExpression()) #24, !dbg !15236
  call void @llvm.dbg.value(metadata i32 %3, metadata !15233, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata i32 undef, metadata !15231, metadata !DIExpression()), !dbg !15235
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15241
  call void @llvm.dbg.value(metadata i32 %3, metadata !14782, metadata !DIExpression()) #24, !dbg !15246
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15246
  call void @llvm.dbg.value(metadata i32 %3, metadata !14790, metadata !DIExpression()) #24, !dbg !15248
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15250, !srcloc !14796
  call void @llvm.dbg.value(metadata i32 1, metadata !15231, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata i32 undef, metadata !15231, metadata !DIExpression()), !dbg !15235
  ret void, !dbg !15251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15252 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15254, metadata !DIExpression()), !dbg !15255
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15256
  br i1 %2, label %24, label %3, !dbg !15258

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15259
  br i1 %4, label %5, label %24, !dbg !15260

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14941, metadata !DIExpression()) #24, !dbg !15261
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15264
  %7 = load i8, i8* %6, align 1, !dbg !15265
  %8 = or i8 %7, -128, !dbg !15265
  store i8 %8, i8* %6, align 1, !dbg !15265
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14948, metadata !DIExpression()) #24, !dbg !15266
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14955, metadata !DIExpression()) #24, !dbg !15268
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14961, metadata !DIExpression()) #24, !dbg !15268
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15270
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14962, metadata !DIExpression()) #24, !dbg !15268
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15271
  br i1 %10, label %21, label %11, !dbg !15270

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14962, metadata !DIExpression()) #24, !dbg !15268
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15272
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14962, metadata !DIExpression()) #24, !dbg !15268
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15273
  %15 = icmp sgt i32 %14, 0, !dbg !15274
  br i1 %15, label %16, label %18, !dbg !15275

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15276
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15277
  br label %23, !dbg !15278

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15271
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14962, metadata !DIExpression()) #24, !dbg !15268
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15271
  br i1 %20, label %21, label %11, !dbg !15270, !llvm.loop !15279

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15281
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15282
  br label %23, !dbg !15283

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15284
  br label %24, !dbg !15285

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15287 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15289, metadata !DIExpression()), !dbg !15290
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15291
  br i1 %2, label %6, label %3, !dbg !15292

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15293
  %5 = xor i1 %4, true, !dbg !15292
  br label %6, !dbg !15292

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15294
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15295 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15297, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata i32 0, metadata !15298, metadata !DIExpression()), !dbg !15302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15303
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15305, !srcloc !14770
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15305
  call void @llvm.dbg.value(metadata i32 %3, metadata !14767, metadata !DIExpression()) #24, !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15307
  call void @llvm.dbg.value(metadata i32 %3, metadata !14761, metadata !DIExpression()) #24, !dbg !15303
  call void @llvm.dbg.value(metadata i32 %3, metadata !15300, metadata !DIExpression()), !dbg !15302
  call void @llvm.dbg.value(metadata i32 undef, metadata !15298, metadata !DIExpression()), !dbg !15302
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %3, metadata !14782, metadata !DIExpression()) #24, !dbg !15311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15311
  call void @llvm.dbg.value(metadata i32 %3, metadata !14790, metadata !DIExpression()) #24, !dbg !15313
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15315, !srcloc !14796
  call void @llvm.dbg.value(metadata i32 1, metadata !15298, metadata !DIExpression()), !dbg !15302
  call void @llvm.dbg.value(metadata i32 undef, metadata !15298, metadata !DIExpression()), !dbg !15302
  ret void, !dbg !15316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15317 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15319, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15322
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15324, !srcloc !14770
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15324
  call void @llvm.dbg.value(metadata i32 %3, metadata !14767, metadata !DIExpression()) #24, !dbg !15326
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15326
  call void @llvm.dbg.value(metadata i32 %3, metadata !14761, metadata !DIExpression()) #24, !dbg !15322
  call void @llvm.dbg.value(metadata i32 %3, metadata !15320, metadata !DIExpression()), !dbg !15321
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !15327
  br i1 %4, label %5, label %6, !dbg !15329

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14782, metadata !DIExpression()) #24, !dbg !15330
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15330
  call void @llvm.dbg.value(metadata i32 %3, metadata !14790, metadata !DIExpression()) #24, !dbg !15333
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15335, !srcloc !14796
  br label %8, !dbg !15336

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.162(%struct.k_thread* noundef %0) #26, !dbg !15337
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15338
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15339
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15339
  br label %8, !dbg !15340

8:                                                ; preds = %6, %5
  ret void, !dbg !15340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15341 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15343, metadata !DIExpression()), !dbg !15344
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15345
  %3 = load i8, i8* %2, align 1, !dbg !15345
  %4 = and i8 %3, 4, !dbg !15346
  %5 = icmp eq i8 %4, 0, !dbg !15347
  ret i1 %5, !dbg !15348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.162(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15351, metadata !DIExpression()), !dbg !15352
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15353
  %3 = load i8, i8* %2, align 1, !dbg !15354
  %4 = and i8 %3, -5, !dbg !15354
  store i8 %4, i8* %2, align 1, !dbg !15354
  ret void, !dbg !15355
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15356 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15359, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15358, metadata !DIExpression()), !dbg !15360
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !15361
  br i1 %4, label %5, label %9, !dbg !15363

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !15364
  br i1 %6, label %7, label %9, !dbg !15365

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15366, metadata !DIExpression()) #24, !dbg !15372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15371, metadata !DIExpression()) #24, !dbg !15372
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15375
  br label %10, !dbg !15376

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14782, metadata !DIExpression()) #24, !dbg !15377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15377
  call void @llvm.dbg.value(metadata i32 %3, metadata !14790, metadata !DIExpression()) #24, !dbg !15380
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15382, !srcloc !14796
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15388, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata i32 %0, metadata !15390, metadata !DIExpression()), !dbg !15395
  %2 = icmp eq i32 %0, 0, !dbg !15397
  br i1 %2, label %3, label %6, !dbg !15398

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15399, !srcloc !15406
  call void @llvm.dbg.value(metadata i32 %4, metadata !15402, metadata !DIExpression()) #24, !dbg !15407
  %5 = icmp eq i32 %4, 0, !dbg !15408
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15389
  ret i1 %7, !dbg !15409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !15410 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15413
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15412, metadata !DIExpression()), !dbg !15414
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15415
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15416
  ret i1 %3, !dbg !15417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15420, metadata !DIExpression()), !dbg !15422
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15423
  call void @llvm.dbg.value(metadata i32 %2, metadata !15421, metadata !DIExpression()), !dbg !15422
  ret i32 %2, !dbg !15424
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15425 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15427, metadata !DIExpression()), !dbg !15431
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15432
  call void @llvm.dbg.value(metadata i32 0, metadata !15428, metadata !DIExpression()), !dbg !15433
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15434
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15436, !srcloc !14770
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15436
  call void @llvm.dbg.value(metadata i32 %4, metadata !14767, metadata !DIExpression()) #24, !dbg !15438
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15438
  call void @llvm.dbg.value(metadata i32 %4, metadata !14761, metadata !DIExpression()) #24, !dbg !15434
  call void @llvm.dbg.value(metadata i32 %4, metadata !15430, metadata !DIExpression()), !dbg !15433
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()), !dbg !15433
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15439
  br i1 %5, label %6, label %10, !dbg !15443

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #24, !dbg !15444
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15447
  %8 = load i8, i8* %7, align 1, !dbg !15448
  %9 = and i8 %8, 127, !dbg !15448
  store i8 %9, i8* %7, align 1, !dbg !15448
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14932, metadata !DIExpression()) #24, !dbg !15449
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15451
  br label %10, !dbg !15452

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !15453
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15454
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15455
  %13 = zext i1 %12 to i32, !dbg !15455
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !15456
  call void @llvm.dbg.value(metadata i32 %4, metadata !14782, metadata !DIExpression()) #24, !dbg !15457
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15457
  call void @llvm.dbg.value(metadata i32 %4, metadata !14790, metadata !DIExpression()) #24, !dbg !15459
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15461, !srcloc !14796
  call void @llvm.dbg.value(metadata i32 1, metadata !15428, metadata !DIExpression()), !dbg !15433
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()), !dbg !15433
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15462
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15464
  br i1 %15, label %16, label %17, !dbg !15465

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15466
  br label %17, !dbg !15468

17:                                               ; preds = %16, %10
  ret void, !dbg !15469
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15472, metadata !DIExpression()), !dbg !15473
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15474
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15475
  ret i32 %3, !dbg !15476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15477 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15479, metadata !DIExpression()), !dbg !15480
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15481
  %3 = load i8, i8* %2, align 1, !dbg !15482
  %4 = or i8 %3, 16, !dbg !15482
  store i8 %4, i8* %2, align 1, !dbg !15482
  ret void, !dbg !15483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15484 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15485, !srcloc !14770
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15485
  call void @llvm.dbg.value(metadata i32 %2, metadata !14767, metadata !DIExpression()) #24, !dbg !15487
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15487
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !15488
  ret void, !dbg !15489
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15492, metadata !DIExpression()), !dbg !15493
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !15494
  br i1 %2, label %3, label %5, !dbg !15496

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15497
  br label %6, !dbg !15499

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14790, metadata !DIExpression()) #24, !dbg !15500
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !15503, !srcloc !14796
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15504
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15505 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15507, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15510
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15512, !srcloc !14770
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15512
  call void @llvm.dbg.value(metadata i32 %3, metadata !14767, metadata !DIExpression()) #24, !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15514
  call void @llvm.dbg.value(metadata i32 %3, metadata !14761, metadata !DIExpression()) #24, !dbg !15510
  call void @llvm.dbg.value(metadata i32 %3, metadata !15508, metadata !DIExpression()), !dbg !15509
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !15515
  br i1 %4, label %6, label %5, !dbg !15517

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14782, metadata !DIExpression()) #24, !dbg !15518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15518
  call void @llvm.dbg.value(metadata i32 %3, metadata !14790, metadata !DIExpression()) #24, !dbg !15521
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15523, !srcloc !14796
  br label %8, !dbg !15524

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15525
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15526
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15527
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15527
  br label %8, !dbg !15528

8:                                                ; preds = %6, %5
  ret void, !dbg !15528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15529 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15531, metadata !DIExpression()), !dbg !15532
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15533
  %3 = load i8, i8* %2, align 1, !dbg !15533
  %4 = and i8 %3, 16, !dbg !15534
  %5 = icmp ne i8 %4, 0, !dbg !15535
  ret i1 %5, !dbg !15536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15537 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15539, metadata !DIExpression()), !dbg !15540
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15541
  %3 = load i8, i8* %2, align 1, !dbg !15542
  %4 = and i8 %3, -17, !dbg !15542
  store i8 %4, i8* %2, align 1, !dbg !15542
  ret void, !dbg !15543
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15544 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15554, metadata !DIExpression()), !dbg !15558
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15552, metadata !DIExpression()), !dbg !15558
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15553, metadata !DIExpression()), !dbg !15558
  call void @llvm.dbg.value(metadata i32 0, metadata !15555, metadata !DIExpression()), !dbg !15559
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15560
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15562, !srcloc !14770
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15562
  call void @llvm.dbg.value(metadata i32 %5, metadata !14767, metadata !DIExpression()) #24, !dbg !15564
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15564
  call void @llvm.dbg.value(metadata i32 %5, metadata !14761, metadata !DIExpression()) #24, !dbg !15560
  call void @llvm.dbg.value(metadata i32 %5, metadata !15557, metadata !DIExpression()), !dbg !15559
  call void @llvm.dbg.value(metadata i32 undef, metadata !15555, metadata !DIExpression()), !dbg !15559
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15565
  call void @llvm.dbg.value(metadata i32 %5, metadata !14782, metadata !DIExpression()) #24, !dbg !15568
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15568
  call void @llvm.dbg.value(metadata i32 %5, metadata !14790, metadata !DIExpression()) #24, !dbg !15570
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !15572, !srcloc !14796
  call void @llvm.dbg.value(metadata i32 1, metadata !15555, metadata !DIExpression()), !dbg !15559
  call void @llvm.dbg.value(metadata i32 undef, metadata !15555, metadata !DIExpression()), !dbg !15559
  ret void, !dbg !15573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15574 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15578, metadata !DIExpression()), !dbg !15579
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15576, metadata !DIExpression()), !dbg !15579
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15577, metadata !DIExpression()), !dbg !15579
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !15580
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !15581
  ret void, !dbg !15582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15587, metadata !DIExpression()), !dbg !15589
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15588, metadata !DIExpression()), !dbg !15589
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !15590
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !15591
  %3 = icmp eq %union.anon* %1, null, !dbg !15592
  br i1 %3, label %21, label %4, !dbg !15594

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15595
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15597
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15598
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14955, metadata !DIExpression()) #24, !dbg !15599
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14961, metadata !DIExpression()) #24, !dbg !15599
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15601
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14962, metadata !DIExpression()) #24, !dbg !15599
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15602
  br i1 %8, label %19, label %9, !dbg !15601

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14962, metadata !DIExpression()) #24, !dbg !15599
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15603
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14962, metadata !DIExpression()) #24, !dbg !15599
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15604
  %13 = icmp sgt i32 %12, 0, !dbg !15605
  br i1 %13, label %14, label %16, !dbg !15606

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15607
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15608
  br label %21, !dbg !15609

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15602
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14962, metadata !DIExpression()) #24, !dbg !15599
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15602
  br i1 %18, label %19, label %9, !dbg !15601, !llvm.loop !15610

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15612
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15613
  br label %21, !dbg !15614

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15616 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15621, metadata !DIExpression()), !dbg !15622
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15620, metadata !DIExpression()), !dbg !15622
  %4 = icmp eq i64 %3, -1, !dbg !15623
  br i1 %4, label %6, label %5, !dbg !15625

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.165(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15626
  br label %6, !dbg !15628

6:                                                ; preds = %5, %2
  ret void, !dbg !15629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.165(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15630 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15633, metadata !DIExpression()), !dbg !15634
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15632, metadata !DIExpression()), !dbg !15634
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15635
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15636
  ret void, !dbg !15637
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15638 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15640, metadata !DIExpression()), !dbg !15648
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15649
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15649
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15641, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.value(metadata i32 0, metadata !15642, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15651
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15653, !srcloc !14770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14767, metadata !DIExpression()) #24, !dbg !15655
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15655
  call void @llvm.dbg.value(metadata i32 undef, metadata !14761, metadata !DIExpression()) #24, !dbg !15651
  call void @llvm.dbg.value(metadata i32 undef, metadata !15644, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata i32 undef, metadata !15642, metadata !DIExpression()), !dbg !15650
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15656
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15657
  %7 = load i8, i8* %6, align 1, !dbg !15657
  %8 = and i8 %7, 40, !dbg !15658
  %9 = icmp eq i8 %8, 0, !dbg !15658
  call void @llvm.dbg.value(metadata i1 %9, metadata !15645, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15659
  br i1 %9, label %10, label %17, !dbg !15660

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15661
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15661
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15661
  %14 = icmp eq %union.anon* %13, null, !dbg !15665
  br i1 %14, label %16, label %15, !dbg !15666

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !15667
  br label %16, !dbg !15669

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.162(%struct.k_thread* noundef nonnull %3) #26, !dbg !15670
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !15671
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !15672
  br label %17, !dbg !15673

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15653
  call void @llvm.dbg.value(metadata i32 %18, metadata !14767, metadata !DIExpression()) #24, !dbg !15655
  call void @llvm.dbg.value(metadata i32 %18, metadata !14761, metadata !DIExpression()) #24, !dbg !15651
  call void @llvm.dbg.value(metadata i32 %18, metadata !15644, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata i32 undef, metadata !14782, metadata !DIExpression()) #24, !dbg !15674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14790, metadata !DIExpression()) #24, !dbg !15676
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !15678, !srcloc !14796
  call void @llvm.dbg.value(metadata i32 1, metadata !15642, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata i32 undef, metadata !15642, metadata !DIExpression()), !dbg !15650
  ret void, !dbg !15679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15680 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15682, metadata !DIExpression()), !dbg !15683
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15684
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !15685
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15686
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15687
  ret void, !dbg !15688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15689 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15691, metadata !DIExpression()), !dbg !15692
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15693
  %3 = load i8, i8* %2, align 1, !dbg !15694
  %4 = and i8 %3, -3, !dbg !15694
  store i8 %4, i8* %2, align 1, !dbg !15694
  ret void, !dbg !15695
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15696 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15698, metadata !DIExpression()), !dbg !15699
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15700
  br i1 %2, label %3, label %7, !dbg !15702

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #24, !dbg !15703
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15706
  %5 = load i8, i8* %4, align 1, !dbg !15707
  %6 = and i8 %5, 127, !dbg !15707
  store i8 %6, i8* %4, align 1, !dbg !15707
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14932, metadata !DIExpression()) #24, !dbg !15708
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15710
  br label %7, !dbg !15711

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15712
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15713
  %10 = zext i1 %9 to i32, !dbg !15713
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !15714
  ret void, !dbg !15715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15716 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15718, metadata !DIExpression()), !dbg !15719
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15720
  %3 = load i8, i8* %2, align 1, !dbg !15721
  %4 = or i8 %3, 2, !dbg !15721
  store i8 %4, i8* %2, align 1, !dbg !15721
  ret void, !dbg !15722
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15723 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15725, metadata !DIExpression()), !dbg !15729
  call void @llvm.dbg.value(metadata i32 0, metadata !15726, metadata !DIExpression()), !dbg !15730
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15731
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15733, !srcloc !14770
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15733
  call void @llvm.dbg.value(metadata i32 %3, metadata !14767, metadata !DIExpression()) #24, !dbg !15735
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15735
  call void @llvm.dbg.value(metadata i32 %3, metadata !14761, metadata !DIExpression()) #24, !dbg !15731
  call void @llvm.dbg.value(metadata i32 %3, metadata !15728, metadata !DIExpression()), !dbg !15730
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()), !dbg !15730
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15736
  call void @llvm.dbg.value(metadata i32 %3, metadata !14782, metadata !DIExpression()) #24, !dbg !15739
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15739
  call void @llvm.dbg.value(metadata i32 %3, metadata !14790, metadata !DIExpression()) #24, !dbg !15741
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15743, !srcloc !14796
  call void @llvm.dbg.value(metadata i32 1, metadata !15726, metadata !DIExpression()), !dbg !15730
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()), !dbg !15730
  ret void, !dbg !15744
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15745 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15751, metadata !DIExpression()), !dbg !15756
  call void @llvm.dbg.value(metadata i32 %0, metadata !15749, metadata !DIExpression()), !dbg !15756
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15750, metadata !DIExpression()), !dbg !15756
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15757
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15758
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15759
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15760
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15761
  call void @llvm.dbg.value(metadata i32 %6, metadata !15752, metadata !DIExpression()), !dbg !15756
  call void @llvm.dbg.value(metadata i32 0, metadata !15753, metadata !DIExpression()), !dbg !15762
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15763
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15765, !srcloc !14770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14767, metadata !DIExpression()) #24, !dbg !15767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14761, metadata !DIExpression()) #24, !dbg !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15755, metadata !DIExpression()), !dbg !15762
  call void @llvm.dbg.value(metadata i32 undef, metadata !15753, metadata !DIExpression()), !dbg !15762
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15768
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15772
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15773
  br i1 %10, label %11, label %12, !dbg !15774

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15775
  br label %12, !dbg !15777

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15765
  call void @llvm.dbg.value(metadata i32 %13, metadata !14767, metadata !DIExpression()) #24, !dbg !15767
  call void @llvm.dbg.value(metadata i32 %13, metadata !14761, metadata !DIExpression()) #24, !dbg !15763
  call void @llvm.dbg.value(metadata i32 %13, metadata !15755, metadata !DIExpression()), !dbg !15762
  call void @llvm.dbg.value(metadata i32 undef, metadata !14782, metadata !DIExpression()) #24, !dbg !15778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !14790, metadata !DIExpression()) #24, !dbg !15780
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !15782, !srcloc !14796
  call void @llvm.dbg.value(metadata i32 1, metadata !15753, metadata !DIExpression()), !dbg !15762
  call void @llvm.dbg.value(metadata i32 undef, metadata !15753, metadata !DIExpression()), !dbg !15762
  ret i32 %6, !dbg !15783
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15784 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15789, metadata !DIExpression()), !dbg !15792
  call void @llvm.dbg.value(metadata i64 undef, metadata !15791, metadata !DIExpression()), !dbg !15792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15788, metadata !DIExpression()), !dbg !15792
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15790, metadata !DIExpression()), !dbg !15792
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15793
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15794
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15795
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15797, !srcloc !14770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14767, metadata !DIExpression()) #24, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14761, metadata !DIExpression()) #24, !dbg !15795
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15800
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !15801
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15366, metadata !DIExpression()) #24, !dbg !15802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15371, metadata !DIExpression()) #24, !dbg !15802
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15804
  ret i32 %9, !dbg !15805
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15806 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15810, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15811, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.value(metadata i32 0, metadata !15812, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15817
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15819, !srcloc !14770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14767, metadata !DIExpression()) #24, !dbg !15821
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15821
  call void @llvm.dbg.value(metadata i32 undef, metadata !14761, metadata !DIExpression()) #24, !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !15814, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15811, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()), !dbg !15816
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15822
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15811, metadata !DIExpression()), !dbg !15815
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15825
  br i1 %5, label %7, label %6, !dbg !15827

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15828
  br label %7, !dbg !15830

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15819
  call void @llvm.dbg.value(metadata i32 %8, metadata !14767, metadata !DIExpression()) #24, !dbg !15821
  call void @llvm.dbg.value(metadata i32 %8, metadata !14761, metadata !DIExpression()) #24, !dbg !15817
  call void @llvm.dbg.value(metadata i32 %8, metadata !15814, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !14782, metadata !DIExpression()) #24, !dbg !15831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15831
  call void @llvm.dbg.value(metadata i32 undef, metadata !14790, metadata !DIExpression()) #24, !dbg !15833
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15835, !srcloc !14796
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15811, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()), !dbg !15816
  ret %struct.k_thread* %4, !dbg !15836
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15837 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15839, metadata !DIExpression()), !dbg !15844
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15840, metadata !DIExpression()), !dbg !15844
  call void @llvm.dbg.value(metadata i32 0, metadata !15841, metadata !DIExpression()), !dbg !15845
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15846
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15848, !srcloc !14770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14767, metadata !DIExpression()) #24, !dbg !15850
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15850
  call void @llvm.dbg.value(metadata i32 undef, metadata !14761, metadata !DIExpression()) #24, !dbg !15846
  call void @llvm.dbg.value(metadata i32 undef, metadata !15843, metadata !DIExpression()), !dbg !15845
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15840, metadata !DIExpression()), !dbg !15844
  call void @llvm.dbg.value(metadata i32 undef, metadata !15841, metadata !DIExpression()), !dbg !15845
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15851
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15840, metadata !DIExpression()), !dbg !15844
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15854
  br i1 %5, label %8, label %6, !dbg !15856

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15857
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15859
  br label %8, !dbg !15860

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15848
  call void @llvm.dbg.value(metadata i32 %9, metadata !14767, metadata !DIExpression()) #24, !dbg !15850
  call void @llvm.dbg.value(metadata i32 %9, metadata !14761, metadata !DIExpression()) #24, !dbg !15846
  call void @llvm.dbg.value(metadata i32 %9, metadata !15843, metadata !DIExpression()), !dbg !15845
  call void @llvm.dbg.value(metadata i32 undef, metadata !14782, metadata !DIExpression()) #24, !dbg !15861
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15861
  call void @llvm.dbg.value(metadata i32 undef, metadata !14790, metadata !DIExpression()) #24, !dbg !15863
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15865, !srcloc !14796
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15840, metadata !DIExpression()), !dbg !15844
  call void @llvm.dbg.value(metadata i32 undef, metadata !15841, metadata !DIExpression()), !dbg !15845
  ret %struct.k_thread* %4, !dbg !15866
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15867 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15869, metadata !DIExpression()), !dbg !15870
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15725, metadata !DIExpression()) #24, !dbg !15871
  call void @llvm.dbg.value(metadata i32 0, metadata !15726, metadata !DIExpression()) #24, !dbg !15873
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15874
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15876, !srcloc !14770
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15876
  call void @llvm.dbg.value(metadata i32 %3, metadata !14767, metadata !DIExpression()) #24, !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15878
  call void @llvm.dbg.value(metadata i32 %3, metadata !14761, metadata !DIExpression()) #24, !dbg !15874
  call void @llvm.dbg.value(metadata i32 %3, metadata !15728, metadata !DIExpression()) #24, !dbg !15873
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()) #24, !dbg !15873
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15879
  call void @llvm.dbg.value(metadata i32 %3, metadata !14782, metadata !DIExpression()) #24, !dbg !15880
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15880
  call void @llvm.dbg.value(metadata i32 %3, metadata !14790, metadata !DIExpression()) #24, !dbg !15882
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15884, !srcloc !14796
  call void @llvm.dbg.value(metadata i32 1, metadata !15726, metadata !DIExpression()) #24, !dbg !15873
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()) #24, !dbg !15873
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15885
  ret void, !dbg !15886
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15887 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15889, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata i32 %1, metadata !15890, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata i8 0, metadata !15891, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata i32 0, metadata !15892, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15897
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15899, !srcloc !14770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14767, metadata !DIExpression()) #24, !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14761, metadata !DIExpression()) #24, !dbg !15897
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i8 poison, metadata !15891, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata i32 undef, metadata !15892, metadata !DIExpression()), !dbg !15896
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15902
  call void @llvm.dbg.value(metadata i1 %6, metadata !15891, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15895
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15905

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #24, !dbg !15906
  %11 = load i8, i8* %4, align 1, !dbg !15912
  %12 = and i8 %11, 127, !dbg !15912
  store i8 %12, i8* %4, align 1, !dbg !15912
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14932, metadata !DIExpression()) #24, !dbg !15913
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15915
  store i8 %9, i8* %8, align 2, !dbg !15916
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14941, metadata !DIExpression()) #24, !dbg !15917
  %13 = load i8, i8* %4, align 1, !dbg !15919
  %14 = or i8 %13, -128, !dbg !15919
  store i8 %14, i8* %4, align 1, !dbg !15919
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14948, metadata !DIExpression()) #24, !dbg !15920
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14955, metadata !DIExpression()) #24, !dbg !15922
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14961, metadata !DIExpression()) #24, !dbg !15922
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15924
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14962, metadata !DIExpression()) #24, !dbg !15922
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15925
  br i1 %16, label %26, label %17, !dbg !15924

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14962, metadata !DIExpression()) #24, !dbg !15922
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15926
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14962, metadata !DIExpression()) #24, !dbg !15922
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !15927
  %21 = icmp sgt i32 %20, 0, !dbg !15928
  br i1 %21, label %22, label %23, !dbg !15929

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !15930
  br label %27, !dbg !15931

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !15925
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14962, metadata !DIExpression()) #24, !dbg !15922
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15925
  br i1 %25, label %26, label %17, !dbg !15924, !llvm.loop !15932

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !15934
  br label %27, !dbg !15935

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15936
  br label %29, !dbg !15937

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15938
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15899
  call void @llvm.dbg.value(metadata i32 %30, metadata !14767, metadata !DIExpression()) #24, !dbg !15901
  call void @llvm.dbg.value(metadata i32 %30, metadata !14761, metadata !DIExpression()) #24, !dbg !15897
  call void @llvm.dbg.value(metadata i32 %30, metadata !15894, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i32 undef, metadata !14782, metadata !DIExpression()) #24, !dbg !15940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15940
  call void @llvm.dbg.value(metadata i32 undef, metadata !14790, metadata !DIExpression()) #24, !dbg !15942
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !15944, !srcloc !14796
  call void @llvm.dbg.value(metadata i8 poison, metadata !15891, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata i32 undef, metadata !15892, metadata !DIExpression()), !dbg !15896
  ret i1 %6, !dbg !15945
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15946 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15950, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata i32 %1, metadata !15951, metadata !DIExpression()), !dbg !15953
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15954
  call void @llvm.dbg.value(metadata i1 %3, metadata !15952, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15953
  br i1 %3, label %4, label %12, !dbg !15955

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15957
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15958
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15958
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15958
  %9 = load i8, i8* %8, align 1, !dbg !15958
  %10 = icmp eq i8 %9, 0, !dbg !15959
  br i1 %10, label %11, label %12, !dbg !15960

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15961
  br label %12, !dbg !15963

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15964
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15965 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15967, metadata !DIExpression()), !dbg !15970
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15971
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15973, !srcloc !14770
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15973
  call void @llvm.dbg.value(metadata i32 %2, metadata !14767, metadata !DIExpression()) #24, !dbg !15975
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !15975
  call void @llvm.dbg.value(metadata i32 %2, metadata !14761, metadata !DIExpression()) #24, !dbg !15971
  call void @llvm.dbg.value(metadata i32 %2, metadata !15969, metadata !DIExpression()), !dbg !15970
  call void @llvm.dbg.value(metadata i32 undef, metadata !15967, metadata !DIExpression()), !dbg !15970
  tail call fastcc void @z_sched_lock() #26, !dbg !15976
  call void @llvm.dbg.value(metadata i32 %2, metadata !14782, metadata !DIExpression()) #24, !dbg !15979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15979
  call void @llvm.dbg.value(metadata i32 %2, metadata !14790, metadata !DIExpression()) #24, !dbg !15981
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15983, !srcloc !14796
  call void @llvm.dbg.value(metadata i32 1, metadata !15967, metadata !DIExpression()), !dbg !15970
  call void @llvm.dbg.value(metadata i32 undef, metadata !15967, metadata !DIExpression()), !dbg !15970
  ret void, !dbg !15984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15985 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15986
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15987
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15987
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15987
  %5 = load i8, i8* %4, align 1, !dbg !15988
  %6 = add i8 %5, -1, !dbg !15988
  store i8 %6, i8* %4, align 1, !dbg !15988
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15989, !srcloc !15991
  ret void, !dbg !15992
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15993 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15995, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !15999
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16001, !srcloc !14770
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16001
  call void @llvm.dbg.value(metadata i32 %2, metadata !14767, metadata !DIExpression()) #24, !dbg !16003
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !16003
  call void @llvm.dbg.value(metadata i32 %2, metadata !14761, metadata !DIExpression()) #24, !dbg !15999
  call void @llvm.dbg.value(metadata i32 %2, metadata !15997, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i32 undef, metadata !15995, metadata !DIExpression()), !dbg !15998
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16004
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16007
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16007
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16007
  %7 = load i8, i8* %6, align 1, !dbg !16008
  %8 = add i8 %7, 1, !dbg !16008
  store i8 %8, i8* %6, align 1, !dbg !16008
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16009
  call void @llvm.dbg.value(metadata i32 %2, metadata !14782, metadata !DIExpression()) #24, !dbg !16010
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !16010
  call void @llvm.dbg.value(metadata i32 %2, metadata !14790, metadata !DIExpression()) #24, !dbg !16012
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !16014, !srcloc !14796
  call void @llvm.dbg.value(metadata i32 1, metadata !15995, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i32 undef, metadata !15995, metadata !DIExpression()), !dbg !15998
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16015
  ret void, !dbg !16016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !16017 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16018
  ret %struct.k_thread* %1, !dbg !16019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !16020 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16024, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16025, metadata !DIExpression()), !dbg !16029
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16030
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16026, metadata !DIExpression()), !dbg !16029
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16031
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16027, metadata !DIExpression()), !dbg !16029
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16032
  call void @llvm.dbg.value(metadata i32 %5, metadata !16028, metadata !DIExpression()), !dbg !16029
  %6 = icmp sgt i32 %5, 0, !dbg !16033
  br i1 %6, label %17, label %7, !dbg !16035

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16036
  br i1 %8, label %17, label %9, !dbg !16038

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16039
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16039
  %12 = load i32, i32* %11, align 8, !dbg !16039
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16041
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16041
  %15 = load i32, i32* %14, align 8, !dbg !16041
  %16 = icmp ult i32 %12, %15, !dbg !16042
  br label %17, !dbg !16043

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16044
  ret i1 %18, !dbg !16045
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16046 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16063, metadata !DIExpression()), !dbg !16078
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16064, metadata !DIExpression()), !dbg !16078
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16079
  %5 = load i32, i32* %4, align 4, !dbg !16080
  %6 = add nsw i32 %5, 1, !dbg !16080
  store i32 %6, i32* %4, align 4, !dbg !16080
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16081
  store i32 %5, i32* %7, align 8, !dbg !16082
  %8 = load i32, i32* %4, align 4, !dbg !16083
  %9 = icmp eq i32 %8, 0, !dbg !16084
  br i1 %9, label %10, label %32, !dbg !16085

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16086
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16086
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16066, metadata !DIExpression()), !dbg !16086
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16086
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16086
  %14 = load i32, i32* %13, align 4, !dbg !16086
  %15 = shl i32 %14, 2, !dbg !16086
  %16 = alloca i8, i32 %15, align 8, !dbg !16086
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16086
  store i8* %16, i8** %17, align 4, !dbg !16086
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16086
  %19 = alloca i8, i32 %14, align 8, !dbg !16086
  store i8* %19, i8** %18, align 4, !dbg !16086
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16086
  store i32 -1, i32* %20, align 4, !dbg !16086
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16087
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16075, metadata !DIExpression()), !dbg !16088
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16065, metadata !DIExpression()), !dbg !16078
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16089
  br i1 %22, label %23, label %24, !dbg !16086

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16089
  br label %32, !dbg !16090

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16065, metadata !DIExpression()), !dbg !16078
  %26 = load i32, i32* %4, align 4, !dbg !16091
  %27 = add nsw i32 %26, 1, !dbg !16091
  store i32 %27, i32* %4, align 4, !dbg !16091
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16093
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16093
  store i32 %26, i32* %29, align 8, !dbg !16094
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16087
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16075, metadata !DIExpression()), !dbg !16088
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16065, metadata !DIExpression()), !dbg !16078
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16089
  br i1 %31, label %23, label %24, !dbg !16086, !llvm.loop !16095

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16097
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16098
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16099
  ret void, !dbg !16100
}

; Function Attrs: optsize
declare !dbg !16101 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16106 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16109 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16111, metadata !DIExpression()), !dbg !16113
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16112, metadata !DIExpression()), !dbg !16113
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16114
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16115
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16116
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16117
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16117
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16119
  br i1 %7, label %8, label %10, !dbg !16120

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16121
  store i32 0, i32* %9, align 4, !dbg !16123
  br label %10, !dbg !16124

10:                                               ; preds = %8, %2
  ret void, !dbg !16125
}

; Function Attrs: optsize
declare !dbg !16126 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16127 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16131, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16132, metadata !DIExpression()), !dbg !16134
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16135
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16136
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16133, metadata !DIExpression()), !dbg !16134
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16132, metadata !DIExpression()), !dbg !16134
  ret %struct.k_thread* %4, !dbg !16137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16138 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16142, metadata !DIExpression()), !dbg !16143
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16144
  ret %struct.rbnode* %2, !dbg !16145
}

; Function Attrs: optsize
declare !dbg !16146 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16149 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16161, metadata !DIExpression()), !dbg !16165
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16166
  %3 = load i32, i32* %2, align 4, !dbg !16166
  %4 = icmp eq i32 %3, 0, !dbg !16168
  br i1 %4, label %10, label %5, !dbg !16169

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16162, metadata !DIExpression()), !dbg !16165
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16170, !range !3892
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16171
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16163, metadata !DIExpression()), !dbg !16165
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !16172
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16164, metadata !DIExpression()), !dbg !16165
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16162, metadata !DIExpression()), !dbg !16165
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16165
  ret %struct.k_thread* %11, !dbg !16173
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16174 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16178, metadata !DIExpression()), !dbg !16181
  call void @llvm.dbg.value(metadata i32 0, metadata !16179, metadata !DIExpression()), !dbg !16181
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16182
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16180, metadata !DIExpression()), !dbg !16181
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16183
  br i1 %3, label %8, label %4, !dbg !16184

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16185
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16187
  call void @llvm.dbg.value(metadata i32 1, metadata !16179, metadata !DIExpression()), !dbg !16181
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16182
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16180, metadata !DIExpression()), !dbg !16181
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16183
  br i1 %7, label %8, label %4, !dbg !16184, !llvm.loop !16188

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16181
  ret i32 %9, !dbg !16190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !16191 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16193, metadata !DIExpression()), !dbg !16194
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16195
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !16196
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16197
  ret %struct.k_thread* %4, !dbg !16198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !16199 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16208, metadata !DIExpression()), !dbg !16209
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16210
  tail call fastcc void @sys_dlist_init.176(%struct._dnode* noundef nonnull %2) #26, !dbg !16211
  ret void, !dbg !16212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.176(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16213 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16217, metadata !DIExpression()), !dbg !16218
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16219
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16220
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16221
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16222
  ret void, !dbg !16223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16224 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16225
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16226
  ret void, !dbg !16227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !16228 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16233, metadata !DIExpression()), !dbg !16234
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16235
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16235
  %4 = load i8, i8* %3, align 2, !dbg !16235
  %5 = sext i8 %4 to i32, !dbg !16236
  ret i32 %5, !dbg !16237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16238 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16242, metadata !DIExpression()), !dbg !16245
  call void @llvm.dbg.value(metadata i32 %1, metadata !16243, metadata !DIExpression()), !dbg !16245
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16244, metadata !DIExpression()), !dbg !16245
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16246
  ret void, !dbg !16247
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16248 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16249
  br i1 %1, label %8, label %2, !dbg !16250

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16251
  br i1 %3, label %8, label %4, !dbg !16252

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16253
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16254
  %7 = xor i1 %6, true, !dbg !16252
  br label %8, !dbg !16252

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !16256 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16257, !range !7188
  %2 = icmp eq i8 %1, 0, !dbg !16257
  ret i1 %2, !dbg !16258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16259 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !16262
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16264, !srcloc !14770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14767, metadata !DIExpression()) #24, !dbg !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !14761, metadata !DIExpression()) #24, !dbg !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !16261, metadata !DIExpression()), !dbg !16267
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16268
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14924, metadata !DIExpression()) #24, !dbg !16271
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16273
  %4 = load i8, i8* %3, align 1, !dbg !16274
  %5 = and i8 %4, 127, !dbg !16274
  store i8 %5, i8* %3, align 1, !dbg !16274
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14932, metadata !DIExpression()) #24, !dbg !16275
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16277
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16278
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14941, metadata !DIExpression()) #24, !dbg !16279
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16281
  %8 = load i8, i8* %7, align 1, !dbg !16282
  %9 = or i8 %8, -128, !dbg !16282
  store i8 %9, i8* %7, align 1, !dbg !16282
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14948, metadata !DIExpression()) #24, !dbg !16283
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14955, metadata !DIExpression()) #24, !dbg !16285
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14961, metadata !DIExpression()) #24, !dbg !16285
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16287
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14962, metadata !DIExpression()) #24, !dbg !16285
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16288
  br i1 %11, label %22, label %12, !dbg !16287

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14962, metadata !DIExpression()) #24, !dbg !16285
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16289
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14962, metadata !DIExpression()) #24, !dbg !16285
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16290
  %16 = icmp sgt i32 %15, 0, !dbg !16291
  br i1 %16, label %17, label %19, !dbg !16292

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16293
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16294
  br label %24, !dbg !16295

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16288
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14962, metadata !DIExpression()) #24, !dbg !16285
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16288
  br i1 %21, label %22, label %12, !dbg !16287, !llvm.loop !16296

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16298
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16299
  br label %24, !dbg !16300

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16264
  call void @llvm.dbg.value(metadata i32 %25, metadata !14767, metadata !DIExpression()) #24, !dbg !16266
  call void @llvm.dbg.value(metadata i32 %25, metadata !14761, metadata !DIExpression()) #24, !dbg !16262
  call void @llvm.dbg.value(metadata i32 %25, metadata !16261, metadata !DIExpression()), !dbg !16267
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16301
  call void @llvm.dbg.value(metadata i32 undef, metadata !15366, metadata !DIExpression()) #24, !dbg !16302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15371, metadata !DIExpression()) #24, !dbg !16302
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16304
  ret void, !dbg !16305
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16306 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16310, metadata !DIExpression()), !dbg !16313
  %3 = icmp eq i64 %2, -1, !dbg !16314
  br i1 %3, label %4, label %6, !dbg !16316

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16317
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !16319
  br label %11, !dbg !16320

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16311, metadata !DIExpression()), !dbg !16313
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !16321
  %8 = sext i32 %7 to i64, !dbg !16321
  call void @llvm.dbg.value(metadata i64 %8, metadata !16311, metadata !DIExpression()), !dbg !16313
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !16322
  %10 = trunc i64 %9 to i32, !dbg !16322
  call void @llvm.dbg.value(metadata i32 %10, metadata !16312, metadata !DIExpression()), !dbg !16313
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16313
  ret i32 %12, !dbg !16323
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16324 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16328, metadata !DIExpression()), !dbg !16329
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16330, !srcloc !16332
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !16333
  ret void, !dbg !16334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16335 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16339, metadata !DIExpression()), !dbg !16343
  %2 = icmp eq i64 %0, 0, !dbg !16344
  br i1 %2, label %3, label %4, !dbg !16346

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !16347
  br label %29, !dbg !16349

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16341, metadata !DIExpression()), !dbg !16343
  %5 = icmp sgt i64 %0, -3, !dbg !16350
  br i1 %5, label %6, label %10, !dbg !16352

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16353
  %8 = trunc i64 %0 to i32, !dbg !16355
  %9 = add i32 %7, %8, !dbg !16355
  call void @llvm.dbg.value(metadata i32 %9, metadata !16340, metadata !DIExpression()), !dbg !16343
  br label %13, !dbg !16356

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16357
  %12 = sub i32 -2, %11, !dbg !16357
  call void @llvm.dbg.value(metadata i32 %12, metadata !16340, metadata !DIExpression()), !dbg !16343
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16359
  call void @llvm.dbg.value(metadata i32 %14, metadata !16340, metadata !DIExpression()), !dbg !16343
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !16360
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16362, !srcloc !14770
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16362
  call void @llvm.dbg.value(metadata i32 %16, metadata !14767, metadata !DIExpression()) #24, !dbg !16364
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !16364
  call void @llvm.dbg.value(metadata i32 %16, metadata !14761, metadata !DIExpression()) #24, !dbg !16360
  call void @llvm.dbg.value(metadata i32 %16, metadata !16342, metadata !DIExpression()), !dbg !16343
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16365
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16366
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !16367
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16368
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16369
  tail call fastcc void @z_add_thread_timeout.165(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !16369
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16370
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !16371
  call void @llvm.dbg.value(metadata i32 %16, metadata !15366, metadata !DIExpression()) #24, !dbg !16372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15371, metadata !DIExpression()) #24, !dbg !16372
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16374
  %22 = zext i32 %14 to i64, !dbg !16375
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16376
  %24 = zext i32 %23 to i64, !dbg !16376
  %25 = sub nsw i64 %22, %24, !dbg !16377
  call void @llvm.dbg.value(metadata i64 %25, metadata !16339, metadata !DIExpression()), !dbg !16343
  %26 = icmp sgt i64 %25, 0, !dbg !16378
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16378
  %28 = trunc i64 %27 to i32, !dbg !16378
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16343
  ret i32 %30, !dbg !16379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16380 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16382, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i64 %0, metadata !14802, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i32 10000, metadata !14805, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i32 1000, metadata !14806, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i8 1, metadata !14807, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i1 false, metadata !14808, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16384
  call void @llvm.dbg.value(metadata i1 false, metadata !14809, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16384
  call void @llvm.dbg.value(metadata i8 0, metadata !14810, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i1 false, metadata !14811, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16384
  call void @llvm.dbg.value(metadata i1 true, metadata !14812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16384
  call void @llvm.dbg.value(metadata i64 0, metadata !14813, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i64 0, metadata !14813, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i64 %0, metadata !14802, metadata !DIExpression()), !dbg !16384
  %2 = udiv i64 %0, 10, !dbg !16386
  ret i64 %2, !dbg !16390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16391 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16392, !srcloc !16394
  tail call void @z_impl_k_yield() #26, !dbg !16395
  ret void, !dbg !16396
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16401, metadata !DIExpression()), !dbg !16403
  %2 = sext i32 %0 to i64, !dbg !16404
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !16405
  call void @llvm.dbg.value(metadata i64 %3, metadata !16402, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16403
  %4 = shl i64 %3, 32, !dbg !16406
  %5 = ashr exact i64 %4, 32, !dbg !16406
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !16407
  call void @llvm.dbg.value(metadata i32 %6, metadata !16402, metadata !DIExpression()), !dbg !16403
  %7 = sext i32 %6 to i64, !dbg !16408
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !16409
  %9 = trunc i64 %8 to i32, !dbg !16409
  ret i32 %9, !dbg !16410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !16411 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16413, metadata !DIExpression()), !dbg !16414
  call void @llvm.dbg.value(metadata i64 %0, metadata !14802, metadata !DIExpression()), !dbg !16415
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14805, metadata !DIExpression()), !dbg !16415
  call void @llvm.dbg.value(metadata i32 10000, metadata !14806, metadata !DIExpression()), !dbg !16415
  call void @llvm.dbg.value(metadata i8 1, metadata !14807, metadata !DIExpression()), !dbg !16415
  call void @llvm.dbg.value(metadata i1 false, metadata !14808, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16415
  call void @llvm.dbg.value(metadata i1 true, metadata !14809, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16415
  call void @llvm.dbg.value(metadata i8 0, metadata !14810, metadata !DIExpression()), !dbg !16415
  call void @llvm.dbg.value(metadata i1 false, metadata !14811, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16415
  call void @llvm.dbg.value(metadata i1 true, metadata !14812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16415
  call void @llvm.dbg.value(metadata i64 0, metadata !14813, metadata !DIExpression()), !dbg !16415
  call void @llvm.dbg.value(metadata i64 0, metadata !14813, metadata !DIExpression()), !dbg !16415
  %2 = add i64 %0, 99, !dbg !16417
  call void @llvm.dbg.value(metadata i64 %2, metadata !14802, metadata !DIExpression()), !dbg !16415
  %3 = udiv i64 %2, 100, !dbg !16418
  ret i64 %3, !dbg !16419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16420 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16422, metadata !DIExpression()), !dbg !16423
  call void @llvm.dbg.value(metadata i64 %0, metadata !14802, metadata !DIExpression()), !dbg !16424
  call void @llvm.dbg.value(metadata i32 10000, metadata !14805, metadata !DIExpression()), !dbg !16424
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14806, metadata !DIExpression()), !dbg !16424
  call void @llvm.dbg.value(metadata i8 1, metadata !14807, metadata !DIExpression()), !dbg !16424
  call void @llvm.dbg.value(metadata i1 false, metadata !14808, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16424
  call void @llvm.dbg.value(metadata i1 false, metadata !14809, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16424
  call void @llvm.dbg.value(metadata i8 0, metadata !14810, metadata !DIExpression()), !dbg !16424
  call void @llvm.dbg.value(metadata i1 true, metadata !14811, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16424
  call void @llvm.dbg.value(metadata i1 false, metadata !14812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16424
  call void @llvm.dbg.value(metadata i64 0, metadata !14813, metadata !DIExpression()), !dbg !16424
  call void @llvm.dbg.value(metadata i64 0, metadata !14813, metadata !DIExpression()), !dbg !16424
  %2 = mul i64 %0, 100, !dbg !16426
  ret i64 %2, !dbg !16428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16429 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16431, metadata !DIExpression()), !dbg !16432
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !16433
  br i1 %2, label %14, label %3, !dbg !16435

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16436
  %5 = icmp slt i32 %4, 0, !dbg !16438
  br i1 %5, label %6, label %10, !dbg !16439

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16440
  %8 = load i8, i8* %7, align 1, !dbg !16440
  %9 = icmp eq i8 %8, 16, !dbg !16443
  br i1 %9, label %10, label %14, !dbg !16444

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16445
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16446
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16447, !srcloc !15406
  call void @llvm.dbg.value(metadata i32 %11, metadata !15402, metadata !DIExpression()) #24, !dbg !16451
  %12 = icmp eq i32 %11, 0, !dbg !16452
  br i1 %12, label %13, label %14, !dbg !16453

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16454
  br label %14, !dbg !16456

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16458 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16460, metadata !DIExpression()), !dbg !16461
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16462
  %3 = load i8, i8* %2, align 1, !dbg !16462
  %4 = and i8 %3, 2, !dbg !16463
  %5 = icmp ne i8 %4, 0, !dbg !16464
  ret i1 %5, !dbg !16465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16466 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16471
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16470, metadata !DIExpression()), !dbg !16472
  ret %struct.k_thread* %1, !dbg !16473
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16474 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16475, !srcloc !15406
  call void @llvm.dbg.value(metadata i32 %1, metadata !15402, metadata !DIExpression()) #24, !dbg !16478
  %2 = icmp eq i32 %1, 0, !dbg !16479
  br i1 %2, label %3, label %8, !dbg !16480

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16481
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !16482
  %6 = icmp ne i32 %5, 0, !dbg !16480
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16483
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16484 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16486, metadata !DIExpression()), !dbg !16488
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !16489
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16491, !srcloc !14770
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16491
  call void @llvm.dbg.value(metadata i32 %3, metadata !14767, metadata !DIExpression()) #24, !dbg !16493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !16493
  call void @llvm.dbg.value(metadata i32 %3, metadata !14761, metadata !DIExpression()) #24, !dbg !16489
  call void @llvm.dbg.value(metadata i32 %3, metadata !16487, metadata !DIExpression()), !dbg !16488
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16494
  %5 = load i8, i8* %4, align 4, !dbg !16494
  %6 = and i8 %5, 1, !dbg !16496
  %7 = icmp eq i8 %6, 0, !dbg !16497
  br i1 %7, label %9, label %8, !dbg !16498

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14782, metadata !DIExpression()) #24, !dbg !16499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !16499
  call void @llvm.dbg.value(metadata i32 %3, metadata !14790, metadata !DIExpression()) #24, !dbg !16502
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16504, !srcloc !14796
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !16505, !srcloc !16507
  br label %24, !dbg !16508

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16509
  %11 = load i8, i8* %10, align 1, !dbg !16509
  %12 = and i8 %11, 8, !dbg !16511
  %13 = icmp eq i8 %12, 0, !dbg !16512
  br i1 %13, label %15, label %14, !dbg !16513

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14782, metadata !DIExpression()) #24, !dbg !16514
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !16514
  call void @llvm.dbg.value(metadata i32 %3, metadata !14790, metadata !DIExpression()) #24, !dbg !16517
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16519, !srcloc !14796
  br label %24, !dbg !16520

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !16521
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16522
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16524
  br i1 %17, label %18, label %23, !dbg !16525

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16526, !srcloc !15406
  call void @llvm.dbg.value(metadata i32 %19, metadata !15402, metadata !DIExpression()) #24, !dbg !16529
  %20 = icmp eq i32 %19, 0, !dbg !16530
  br i1 %20, label %21, label %23, !dbg !16531

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15366, metadata !DIExpression()) #24, !dbg !16532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15371, metadata !DIExpression()) #24, !dbg !16532
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16535
  br label %23, !dbg !16536

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14782, metadata !DIExpression()) #24, !dbg !16537
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !16537
  call void @llvm.dbg.value(metadata i32 %3, metadata !14790, metadata !DIExpression()) #24, !dbg !16539
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16541, !srcloc !14796
  br label %24, !dbg !16542

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16542
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16543 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16545, metadata !DIExpression()), !dbg !16546
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16547
  %3 = load i8, i8* %2, align 1, !dbg !16547
  %4 = and i8 %3, 8, !dbg !16549
  %5 = icmp eq i8 %4, 0, !dbg !16550
  br i1 %5, label %6, label %20, !dbg !16551

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16552
  %8 = or i8 %7, 8, !dbg !16552
  store i8 %8, i8* %2, align 1, !dbg !16552
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16554
  br i1 %9, label %10, label %12, !dbg !16556

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #24, !dbg !16557
  %11 = and i8 %8, 95, !dbg !16560
  store i8 %11, i8* %2, align 1, !dbg !16560
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14932, metadata !DIExpression()) #24, !dbg !16561
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16563
  br label %12, !dbg !16564

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16565
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16565
  %15 = icmp eq %union.anon* %14, null, !dbg !16567
  br i1 %15, label %17, label %16, !dbg !16568

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16569
  br label %17, !dbg !16571

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16572
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16573
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !16574
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16575
  br label %20, !dbg !16576

20:                                               ; preds = %17, %1
  ret void, !dbg !16577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16578 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16582, metadata !DIExpression()), !dbg !16584
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16585
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16583, metadata !DIExpression()), !dbg !16584
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16586
  br i1 %3, label %10, label %4, !dbg !16587

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16588
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16590
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16591, metadata !DIExpression()), !dbg !16597
  call void @llvm.dbg.value(metadata i32 0, metadata !16596, metadata !DIExpression()), !dbg !16597
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16599
  store i32 0, i32* %7, align 4, !dbg !16600
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16601
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16585
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16583, metadata !DIExpression()), !dbg !16584
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16586
  br i1 %9, label %10, label %4, !dbg !16587, !llvm.loop !16602

10:                                               ; preds = %4, %1
  ret void, !dbg !16604
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16605 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16610, metadata !DIExpression()), !dbg !16613
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16609, metadata !DIExpression()), !dbg !16613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !16614
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16616, !srcloc !14770
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16616
  call void @llvm.dbg.value(metadata i32 %4, metadata !14767, metadata !DIExpression()) #24, !dbg !16618
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !16618
  call void @llvm.dbg.value(metadata i32 %4, metadata !14761, metadata !DIExpression()) #24, !dbg !16614
  call void @llvm.dbg.value(metadata i32 %4, metadata !16611, metadata !DIExpression()), !dbg !16613
  call void @llvm.dbg.value(metadata i32 0, metadata !16612, metadata !DIExpression()), !dbg !16613
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16619
  %6 = load i8, i8* %5, align 1, !dbg !16619
  %7 = and i8 %6, 8, !dbg !16621
  %8 = icmp eq i8 %7, 0, !dbg !16622
  br i1 %8, label %9, label %24, !dbg !16623

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16610, metadata !DIExpression()), !dbg !16613
  %11 = icmp eq i64 %10, 0, !dbg !16624
  br i1 %11, label %24, label %12, !dbg !16626

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16627
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16629
  br i1 %14, label %24, label %15, !dbg !16630

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16631
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16631
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16632
  %19 = icmp eq %union.anon* %17, %18, !dbg !16633
  br i1 %19, label %24, label %20, !dbg !16634

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16635
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !16637
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16638
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !16639
  call void @llvm.dbg.value(metadata i32 %4, metadata !15366, metadata !DIExpression()) #24, !dbg !16640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15371, metadata !DIExpression()) #24, !dbg !16640
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16642
  call void @llvm.dbg.value(metadata i32 %23, metadata !16612, metadata !DIExpression()), !dbg !16613
  br label %26, !dbg !16643

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16644
  call void @llvm.dbg.value(metadata i32 %25, metadata !16612, metadata !DIExpression()), !dbg !16613
  call void @llvm.dbg.value(metadata i32 %4, metadata !14782, metadata !DIExpression()) #24, !dbg !16645
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !16645
  call void @llvm.dbg.value(metadata i32 %4, metadata !14790, metadata !DIExpression()) #24, !dbg !16647
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !16649, !srcloc !14796
  br label %26, !dbg !16650

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16613
  ret i32 %27, !dbg !16651
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16652 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16656, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i32 %1, metadata !16657, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i8* %2, metadata !16658, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i8 0, metadata !16660, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i32 0, metadata !16661, metadata !DIExpression()), !dbg !16665
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14755, metadata !DIExpression()) #24, !dbg !16666
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16668, !srcloc !14770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14767, metadata !DIExpression()) #24, !dbg !16670
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()) #24, !dbg !16670
  call void @llvm.dbg.value(metadata i32 undef, metadata !14761, metadata !DIExpression()) #24, !dbg !16666
  call void @llvm.dbg.value(metadata i32 undef, metadata !16663, metadata !DIExpression()), !dbg !16665
  call void @llvm.dbg.value(metadata i8 poison, metadata !16660, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i32 undef, metadata !16661, metadata !DIExpression()), !dbg !16665
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !16671
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16659, metadata !DIExpression()), !dbg !16664
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16674
  br i1 %7, label %12, label %8, !dbg !16676

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16677, metadata !DIExpression()), !dbg !16685
  call void @llvm.dbg.value(metadata i32 %1, metadata !16683, metadata !DIExpression()), !dbg !16685
  call void @llvm.dbg.value(metadata i8* %2, metadata !16684, metadata !DIExpression()), !dbg !16685
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16591, metadata !DIExpression()), !dbg !16688
  call void @llvm.dbg.value(metadata i32 %1, metadata !16596, metadata !DIExpression()), !dbg !16688
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16690
  store i32 %1, i32* %9, align 4, !dbg !16691
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16692
  store i8* %2, i8** %10, align 4, !dbg !16693
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16694
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16695
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !16696
  call void @llvm.dbg.value(metadata i8 1, metadata !16660, metadata !DIExpression()), !dbg !16664
  br label %12, !dbg !16697

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16668
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16668
  call void @llvm.dbg.value(metadata i32 %14, metadata !14767, metadata !DIExpression()) #24, !dbg !16670
  call void @llvm.dbg.value(metadata i32 %14, metadata !14761, metadata !DIExpression()) #24, !dbg !16666
  call void @llvm.dbg.value(metadata i32 %14, metadata !16663, metadata !DIExpression()), !dbg !16665
  call void @llvm.dbg.value(metadata i8 poison, metadata !16660, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i32 undef, metadata !14782, metadata !DIExpression()) #24, !dbg !16698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14787, metadata !DIExpression()) #24, !dbg !16698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14790, metadata !DIExpression()) #24, !dbg !16700
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !16702, !srcloc !14796
  call void @llvm.dbg.value(metadata i32 undef, metadata !16661, metadata !DIExpression()), !dbg !16665
  ret i1 %13, !dbg !16703
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16704 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16710, metadata !DIExpression()), !dbg !16715
  call void @llvm.dbg.value(metadata i64 undef, metadata !16712, metadata !DIExpression()), !dbg !16715
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16709, metadata !DIExpression()), !dbg !16715
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16711, metadata !DIExpression()), !dbg !16715
  call void @llvm.dbg.value(metadata i8** %4, metadata !16713, metadata !DIExpression()), !dbg !16715
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16716
  call void @llvm.dbg.value(metadata i32 %6, metadata !16714, metadata !DIExpression()), !dbg !16715
  %7 = icmp eq i8** %4, null, !dbg !16717
  br i1 %7, label %12, label %8, !dbg !16719

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16720
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16722
  %11 = load i8*, i8** %10, align 4, !dbg !16722
  store i8* %11, i8** %4, align 4, !dbg !16723
  br label %12, !dbg !16724

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16725
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16726 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16728
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16729
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #25, !dbg !16730
  ret void, !dbg !16731
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16732 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16742, metadata !DIExpression()), !dbg !16759
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16740, metadata !DIExpression()), !dbg !16759
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16741, metadata !DIExpression()), !dbg !16759
  %5 = icmp eq i64 %4, -1, !dbg !16760
  br i1 %5, label %55, label %6, !dbg !16762

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16763
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16764
  call void @llvm.dbg.value(metadata i32 0, metadata !16743, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16766, metadata !DIExpression()) #24, !dbg !16773
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16775, !srcloc !16781
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16775
  call void @llvm.dbg.value(metadata i32 %9, metadata !16778, metadata !DIExpression()) #24, !dbg !16782
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()) #24, !dbg !16782
  call void @llvm.dbg.value(metadata i32 %9, metadata !16772, metadata !DIExpression()) #24, !dbg !16773
  call void @llvm.dbg.value(metadata i32 %9, metadata !16749, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata i32 undef, metadata !16743, metadata !DIExpression()), !dbg !16765
  %10 = icmp slt i64 %4, -1, !dbg !16783
  br i1 %10, label %11, label %17, !dbg !16784

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16785
  %13 = add i64 %4, %12, !dbg !16786
  %14 = sub i64 -2, %13, !dbg !16786
  call void @llvm.dbg.value(metadata i64 %14, metadata !16753, metadata !DIExpression()), !dbg !16787
  %15 = icmp sgt i64 %14, 1, !dbg !16788
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16788
  br label %22, !dbg !16789

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16790
  %19 = tail call fastcc i32 @elapsed.189() #26, !dbg !16792
  %20 = sext i32 %19 to i64, !dbg !16792
  %21 = add nsw i64 %18, %20, !dbg !16793
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16794
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16795
  store i64 %23, i64* %24, align 8, !dbg !16796
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !16797
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16750, metadata !DIExpression()), !dbg !16799
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16800
  br i1 %26, label %42, label %27, !dbg !16800

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16801
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16750, metadata !DIExpression()), !dbg !16799
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16805
  %31 = load i64, i64* %30, align 8, !dbg !16805
  %32 = icmp slt i64 %28, %31, !dbg !16806
  br i1 %32, label %33, label %38, !dbg !16807

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16805
  %35 = sub nsw i64 %31, %28, !dbg !16808
  store i64 %35, i64* %34, align 8, !dbg !16808
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16810
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16811
  tail call fastcc void @sys_dlist_insert.190(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !16812
  br label %44, !dbg !16813

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16814
  store i64 %39, i64* %24, align 8, !dbg !16814
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !16815
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16750, metadata !DIExpression()), !dbg !16799
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16800
  br i1 %41, label %42, label %27, !dbg !16800, !llvm.loop !16816

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16818
  tail call fastcc void @sys_dlist_append.191(%struct._dnode* noundef %43) #26, !dbg !16821
  br label %44, !dbg !16822

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !16823
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16824
  br i1 %46, label %47, label %54, !dbg !16825

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !16826
  call void @llvm.dbg.value(metadata i32 %48, metadata !16756, metadata !DIExpression()), !dbg !16827
  %49 = icmp ne i32 %48, 0, !dbg !16828
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16830
  br i1 %52, label %54, label %53, !dbg !16830

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16831
  br label %54, !dbg !16833

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16834, metadata !DIExpression()) #24, !dbg !16840
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16839, metadata !DIExpression()) #24, !dbg !16840
  call void @llvm.dbg.value(metadata i32 %9, metadata !16842, metadata !DIExpression()) #24, !dbg !16845
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !16847, !srcloc !16848
  call void @llvm.dbg.value(metadata i32 undef, metadata !16743, metadata !DIExpression()), !dbg !16765
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16849
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.189() unnamed_addr #1 !dbg !16850 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16853
  %2 = icmp eq i32 %1, 0, !dbg !16854
  br i1 %2, label %3, label %5, !dbg !16853

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16855
  br label %5, !dbg !16853

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16853
  ret i32 %6, !dbg !16856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16857 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.194() #26, !dbg !16863
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16861, metadata !DIExpression()), !dbg !16864
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16865
  ret %struct._timeout* %2, !dbg !16866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.190(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16867 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16871, metadata !DIExpression()), !dbg !16875
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16872, metadata !DIExpression()), !dbg !16875
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16876
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16876
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16873, metadata !DIExpression()), !dbg !16875
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16877
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16878
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16879
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16880
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16881
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16882
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16883
  ret void, !dbg !16884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16885 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16889, metadata !DIExpression()), !dbg !16891
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16892
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.192(%struct._dnode* noundef %2) #26, !dbg !16893
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16890, metadata !DIExpression()), !dbg !16891
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16894
  ret %struct._timeout* %4, !dbg !16895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.191(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16896 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16901, metadata !DIExpression()), !dbg !16904
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16902, metadata !DIExpression()), !dbg !16904
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16905
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16903, metadata !DIExpression()), !dbg !16904
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16906
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16907
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16908
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16909
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16910
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16911
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16912
  ret void, !dbg !16913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16914 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !16919
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16916, metadata !DIExpression()), !dbg !16920
  %2 = tail call fastcc i32 @elapsed.189() #26, !dbg !16921
  call void @llvm.dbg.value(metadata i32 %2, metadata !16917, metadata !DIExpression()), !dbg !16920
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16922
  br i1 %3, label %14, label %4, !dbg !16924

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16925
  %6 = load i64, i64* %5, align 8, !dbg !16925
  %7 = sext i32 %2 to i64, !dbg !16926
  %8 = sub nsw i64 %6, %7, !dbg !16927
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16928
  br i1 %9, label %14, label %10, !dbg !16929

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16930
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16930
  %13 = trunc i64 %12 to i32, !dbg !16930
  call void @llvm.dbg.value(metadata i32 %13, metadata !16918, metadata !DIExpression()), !dbg !16920
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16932
  call void @llvm.dbg.value(metadata i32 %15, metadata !16918, metadata !DIExpression()), !dbg !16920
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16933
  %17 = icmp ne i32 %16, 0, !dbg !16935
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16936
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16936
  call void @llvm.dbg.value(metadata i32 %20, metadata !16918, metadata !DIExpression()), !dbg !16920
  ret i32 %20, !dbg !16937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.192(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16938 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16942, metadata !DIExpression()), !dbg !16944
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16943, metadata !DIExpression()), !dbg !16944
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16945
  br i1 %2, label %5, label %3, !dbg !16946

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.193(%struct._dnode* noundef nonnull %0) #26, !dbg !16947
  br label %5, !dbg !16946

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16946
  ret %struct._dnode* %6, !dbg !16948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.193(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16949 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16951, metadata !DIExpression()), !dbg !16953
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16952, metadata !DIExpression()), !dbg !16953
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16954
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16955
  br i1 %3, label %7, label %4, !dbg !16956

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16957
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16957
  br label %7, !dbg !16956

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16956
  ret %struct._dnode* %8, !dbg !16958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.194() unnamed_addr #5 !dbg !16959 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16963, metadata !DIExpression()), !dbg !16964
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.195() #26, !dbg !16965
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16965
  ret %struct._dnode* %3, !dbg !16966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.195() unnamed_addr #5 !dbg !16967 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16971, metadata !DIExpression()), !dbg !16972
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16973
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16974
  ret i1 %2, !dbg !16975
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16976 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16980, metadata !DIExpression()), !dbg !16985
  call void @llvm.dbg.value(metadata i32 -22, metadata !16981, metadata !DIExpression()), !dbg !16985
  call void @llvm.dbg.value(metadata i32 0, metadata !16982, metadata !DIExpression()), !dbg !16986
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16766, metadata !DIExpression()) #24, !dbg !16987
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16989, !srcloc !16781
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()) #24, !dbg !16991
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()) #24, !dbg !16991
  call void @llvm.dbg.value(metadata i32 undef, metadata !16772, metadata !DIExpression()) #24, !dbg !16987
  call void @llvm.dbg.value(metadata i32 undef, metadata !16984, metadata !DIExpression()), !dbg !16986
  call void @llvm.dbg.value(metadata i32 -22, metadata !16981, metadata !DIExpression()), !dbg !16985
  call void @llvm.dbg.value(metadata i32 undef, metadata !16982, metadata !DIExpression()), !dbg !16986
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16981, metadata !DIExpression()), !dbg !16985
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.198(%struct._dnode* noundef %3) #26, !dbg !16992
  br i1 %4, label %5, label %6, !dbg !16996

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !16997
  call void @llvm.dbg.value(metadata i32 0, metadata !16981, metadata !DIExpression()), !dbg !16985
  br label %6, !dbg !16999

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16985
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16989
  call void @llvm.dbg.value(metadata i32 %8, metadata !16778, metadata !DIExpression()) #24, !dbg !16991
  call void @llvm.dbg.value(metadata i32 %8, metadata !16772, metadata !DIExpression()) #24, !dbg !16987
  call void @llvm.dbg.value(metadata i32 %8, metadata !16984, metadata !DIExpression()), !dbg !16986
  call void @llvm.dbg.value(metadata i32 %7, metadata !16981, metadata !DIExpression()), !dbg !16985
  call void @llvm.dbg.value(metadata i32 undef, metadata !16834, metadata !DIExpression()) #24, !dbg !17000
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16839, metadata !DIExpression()) #24, !dbg !17000
  call void @llvm.dbg.value(metadata i32 undef, metadata !16842, metadata !DIExpression()) #24, !dbg !17002
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !17004, !srcloc !16848
  call void @llvm.dbg.value(metadata i32 undef, metadata !16982, metadata !DIExpression()), !dbg !16986
  ret i32 %7, !dbg !17005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.198(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17006 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17012, metadata !DIExpression()), !dbg !17013
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17014
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17014
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17015
  ret i1 %4, !dbg !17016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !17017 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17019, metadata !DIExpression()), !dbg !17020
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17021
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17023
  br i1 %3, label %10, label %4, !dbg !17024

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17025
  %6 = load i64, i64* %5, align 8, !dbg !17025
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17027
  %8 = load i64, i64* %7, align 8, !dbg !17028
  %9 = add nsw i64 %8, %6, !dbg !17028
  store i64 %9, i64* %7, align 8, !dbg !17028
  br label %10, !dbg !17029

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17030
  tail call fastcc void @sys_dlist_remove.199(%struct._dnode* noundef %11) #26, !dbg !17031
  ret void, !dbg !17032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.199(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !17033 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17037, metadata !DIExpression()), !dbg !17040
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17041
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17041
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17038, metadata !DIExpression()), !dbg !17040
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17042
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17042
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17039, metadata !DIExpression()), !dbg !17040
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17043
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17044
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17045
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17046
  tail call fastcc void @sys_dnode_init.200(%struct._dnode* noundef %0) #26, !dbg !17047
  ret void, !dbg !17048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.200(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !17049 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17051, metadata !DIExpression()), !dbg !17052
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17053
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17054
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17055
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17056
  ret void, !dbg !17057
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17058 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17064, metadata !DIExpression()), !dbg !17069
  call void @llvm.dbg.value(metadata i64 0, metadata !17065, metadata !DIExpression()), !dbg !17069
  call void @llvm.dbg.value(metadata i32 0, metadata !17066, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16766, metadata !DIExpression()) #24, !dbg !17071
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17073, !srcloc !16781
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17073
  call void @llvm.dbg.value(metadata i32 %3, metadata !16778, metadata !DIExpression()) #24, !dbg !17075
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()) #24, !dbg !17075
  call void @llvm.dbg.value(metadata i32 %3, metadata !16772, metadata !DIExpression()) #24, !dbg !17071
  call void @llvm.dbg.value(metadata i32 %3, metadata !17068, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.value(metadata i64 0, metadata !17065, metadata !DIExpression()), !dbg !17069
  call void @llvm.dbg.value(metadata i32 undef, metadata !17066, metadata !DIExpression()), !dbg !17070
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17076
  call void @llvm.dbg.value(metadata i64 %4, metadata !17065, metadata !DIExpression()), !dbg !17069
  call void @llvm.dbg.value(metadata i32 %3, metadata !16834, metadata !DIExpression()) #24, !dbg !17079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16839, metadata !DIExpression()) #24, !dbg !17079
  call void @llvm.dbg.value(metadata i32 %3, metadata !16842, metadata !DIExpression()) #24, !dbg !17081
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17083, !srcloc !16848
  call void @llvm.dbg.value(metadata i32 undef, metadata !17066, metadata !DIExpression()), !dbg !17070
  ret i64 %4, !dbg !17084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17085 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17087, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i64 0, metadata !17088, metadata !DIExpression()), !dbg !17091
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.201(%struct._timeout* noundef %0) #26, !dbg !17092
  br i1 %2, label %21, label %3, !dbg !17094

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17095
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17089, metadata !DIExpression()), !dbg !17096
  call void @llvm.dbg.value(metadata i64 0, metadata !17088, metadata !DIExpression()), !dbg !17091
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17097
  br i1 %5, label %16, label %6, !dbg !17099

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17089, metadata !DIExpression()), !dbg !17096
  call void @llvm.dbg.value(metadata i64 %8, metadata !17088, metadata !DIExpression()), !dbg !17091
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17100
  %10 = load i64, i64* %9, align 8, !dbg !17100
  %11 = add nsw i64 %10, %8, !dbg !17102
  call void @llvm.dbg.value(metadata i64 %11, metadata !17088, metadata !DIExpression()), !dbg !17091
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17103
  br i1 %12, label %16, label %13, !dbg !17105

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17106
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17089, metadata !DIExpression()), !dbg !17096
  call void @llvm.dbg.value(metadata i64 %11, metadata !17088, metadata !DIExpression()), !dbg !17091
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17097
  br i1 %15, label %16, label %6, !dbg !17099, !llvm.loop !17107

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17091
  call void @llvm.dbg.value(metadata i64 %17, metadata !17088, metadata !DIExpression()), !dbg !17091
  %18 = tail call fastcc i32 @elapsed.189() #26, !dbg !17109
  %19 = sext i32 %18 to i64, !dbg !17109
  %20 = sub nsw i64 %17, %19, !dbg !17110
  br label %21, !dbg !17111

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17091
  ret i64 %22, !dbg !17112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.201(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17113 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17117, metadata !DIExpression()), !dbg !17118
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17119
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.198(%struct._dnode* noundef %2) #26, !dbg !17120
  %4 = xor i1 %3, true, !dbg !17121
  ret i1 %4, !dbg !17122
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17123 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17125, metadata !DIExpression()), !dbg !17130
  call void @llvm.dbg.value(metadata i64 0, metadata !17126, metadata !DIExpression()), !dbg !17130
  call void @llvm.dbg.value(metadata i32 0, metadata !17127, metadata !DIExpression()), !dbg !17131
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16766, metadata !DIExpression()) #24, !dbg !17132
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17134, !srcloc !16781
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17134
  call void @llvm.dbg.value(metadata i32 %3, metadata !16778, metadata !DIExpression()) #24, !dbg !17136
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()) #24, !dbg !17136
  call void @llvm.dbg.value(metadata i32 %3, metadata !16772, metadata !DIExpression()) #24, !dbg !17132
  call void @llvm.dbg.value(metadata i32 %3, metadata !17129, metadata !DIExpression()), !dbg !17131
  call void @llvm.dbg.value(metadata i64 0, metadata !17126, metadata !DIExpression()), !dbg !17130
  call void @llvm.dbg.value(metadata i32 undef, metadata !17127, metadata !DIExpression()), !dbg !17131
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17137
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17140
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17126, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17130
  call void @llvm.dbg.value(metadata i32 %3, metadata !16834, metadata !DIExpression()) #24, !dbg !17141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16839, metadata !DIExpression()) #24, !dbg !17141
  call void @llvm.dbg.value(metadata i32 %3, metadata !16842, metadata !DIExpression()) #24, !dbg !17143
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17145, !srcloc !16848
  call void @llvm.dbg.value(metadata i32 undef, metadata !17127, metadata !DIExpression()), !dbg !17131
  %6 = add i64 %5, %4, !dbg !17146
  ret i64 %6, !dbg !17147
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17148 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17150, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i32 0, metadata !17151, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16766, metadata !DIExpression()) #24, !dbg !17156
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17158, !srcloc !16781
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17158
  call void @llvm.dbg.value(metadata i32 %2, metadata !16778, metadata !DIExpression()) #24, !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()) #24, !dbg !17160
  call void @llvm.dbg.value(metadata i32 %2, metadata !16772, metadata !DIExpression()) #24, !dbg !17156
  call void @llvm.dbg.value(metadata i32 %2, metadata !17153, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i32 -1, metadata !17150, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()), !dbg !17155
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17161
  call void @llvm.dbg.value(metadata i32 %3, metadata !17150, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i32 %2, metadata !16834, metadata !DIExpression()) #24, !dbg !17164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16839, metadata !DIExpression()) #24, !dbg !17164
  call void @llvm.dbg.value(metadata i32 %2, metadata !16842, metadata !DIExpression()) #24, !dbg !17166
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17168, !srcloc !16848
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()), !dbg !17155
  ret i32 %3, !dbg !17169
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17170 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17172, metadata !DIExpression()), !dbg !17182
  call void @llvm.dbg.value(metadata i1 %1, metadata !17173, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17182
  call void @llvm.dbg.value(metadata i32 0, metadata !17174, metadata !DIExpression()), !dbg !17183
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16766, metadata !DIExpression()) #24, !dbg !17184
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17186, !srcloc !16781
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()) #24, !dbg !17188
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()) #24, !dbg !17188
  call void @llvm.dbg.value(metadata i32 undef, metadata !16772, metadata !DIExpression()) #24, !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !17176, metadata !DIExpression()), !dbg !17183
  call void @llvm.dbg.value(metadata i32 undef, metadata !17174, metadata !DIExpression()), !dbg !17183
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17189
  call void @llvm.dbg.value(metadata i32 %4, metadata !17177, metadata !DIExpression()), !dbg !17190
  call void @llvm.dbg.value(metadata i1 undef, metadata !17180, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17190
  %5 = icmp slt i32 %4, 2, !dbg !17191
  call void @llvm.dbg.value(metadata i1 %5, metadata !17181, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17190
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17192
  call void @llvm.dbg.value(metadata i1 %6, metadata !17180, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17190
  br i1 %7, label %11, label %8, !dbg !17192

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17194
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17194
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17196
  br label %11, !dbg !17197

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17186
  call void @llvm.dbg.value(metadata i32 %12, metadata !16778, metadata !DIExpression()) #24, !dbg !17188
  call void @llvm.dbg.value(metadata i32 %12, metadata !16772, metadata !DIExpression()) #24, !dbg !17184
  call void @llvm.dbg.value(metadata i32 %12, metadata !17176, metadata !DIExpression()), !dbg !17183
  call void @llvm.dbg.value(metadata i32 undef, metadata !16834, metadata !DIExpression()) #24, !dbg !17198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16839, metadata !DIExpression()) #24, !dbg !17198
  call void @llvm.dbg.value(metadata i32 undef, metadata !16842, metadata !DIExpression()) #24, !dbg !17200
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !17202, !srcloc !16848
  call void @llvm.dbg.value(metadata i32 1, metadata !17174, metadata !DIExpression()), !dbg !17183
  call void @llvm.dbg.value(metadata i32 undef, metadata !17174, metadata !DIExpression()), !dbg !17183
  ret void, !dbg !17203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17208, metadata !DIExpression()), !dbg !17213
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16766, metadata !DIExpression()) #24, !dbg !17215
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17217, !srcloc !16781
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()) #24, !dbg !17219
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()) #24, !dbg !17219
  call void @llvm.dbg.value(metadata i32 undef, metadata !16772, metadata !DIExpression()) #24, !dbg !17215
  call void @llvm.dbg.value(metadata i32 undef, metadata !17209, metadata !DIExpression()), !dbg !17213
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17213
  call void @llvm.dbg.value(metadata i32 undef, metadata !17209, metadata !DIExpression()), !dbg !17213
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17220
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17221
  br i1 %4, label %28, label %5, !dbg !17222

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17223
  %10 = load i64, i64* %9, align 8, !dbg !17223
  %11 = sext i32 %8 to i64, !dbg !17224
  %12 = icmp sgt i64 %10, %11, !dbg !17225
  br i1 %12, label %26, label %13, !dbg !17226

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17213
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17210, metadata !DIExpression()), !dbg !17227
  %15 = trunc i64 %10 to i32, !dbg !17228
  call void @llvm.dbg.value(metadata i32 %15, metadata !17212, metadata !DIExpression()), !dbg !17227
  %16 = sext i32 %15 to i64, !dbg !17229
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17230
  %18 = add i64 %17, %16, !dbg !17230
  store i64 %18, i64* @curr_tick, align 8, !dbg !17230
  store i64 0, i64* %9, align 8, !dbg !17231
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17232
  call void @llvm.dbg.value(metadata i32 %14, metadata !16834, metadata !DIExpression()) #24, !dbg !17233
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16839, metadata !DIExpression()) #24, !dbg !17233
  call void @llvm.dbg.value(metadata i32 %14, metadata !16842, metadata !DIExpression()) #24, !dbg !17235
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !17237, !srcloc !16848
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17238
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17238
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17239
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16766, metadata !DIExpression()) #24, !dbg !17240
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17242, !srcloc !16781
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()) #24, !dbg !17244
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()) #24, !dbg !17244
  call void @llvm.dbg.value(metadata i32 undef, metadata !16772, metadata !DIExpression()) #24, !dbg !17240
  call void @llvm.dbg.value(metadata i32 undef, metadata !17209, metadata !DIExpression()), !dbg !17213
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17245
  %23 = sub nsw i32 %22, %15, !dbg !17245
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17213
  call void @llvm.dbg.value(metadata i32 undef, metadata !17209, metadata !DIExpression()), !dbg !17213
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17220
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17221
  br i1 %25, label %28, label %5, !dbg !17222, !llvm.loop !17246

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17248
  store i64 %27, i64* %9, align 8, !dbg !17248
  br label %32, !dbg !17251

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17213
  %31 = sext i32 %30 to i64, !dbg !17252
  br label %32, !dbg !17252

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17252
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17213
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17253
  %37 = add i64 %36, %33, !dbg !17253
  store i64 %37, i64* @curr_tick, align 8, !dbg !17253
  store i32 0, i32* @announce_remaining, align 4, !dbg !17254
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17255
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17256
  call void @llvm.dbg.value(metadata i32 %35, metadata !16834, metadata !DIExpression()) #24, !dbg !17257
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16839, metadata !DIExpression()) #24, !dbg !17257
  call void @llvm.dbg.value(metadata i32 %35, metadata !16842, metadata !DIExpression()) #24, !dbg !17259
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !17261, !srcloc !16848
  ret void, !dbg !17262
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17263 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17267, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.value(metadata i32 0, metadata !17268, metadata !DIExpression()), !dbg !17272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16766, metadata !DIExpression()) #24, !dbg !17273
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17275, !srcloc !16781
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17275
  call void @llvm.dbg.value(metadata i32 %2, metadata !16778, metadata !DIExpression()) #24, !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()) #24, !dbg !17277
  call void @llvm.dbg.value(metadata i32 %2, metadata !16772, metadata !DIExpression()) #24, !dbg !17273
  call void @llvm.dbg.value(metadata i32 %2, metadata !17270, metadata !DIExpression()), !dbg !17272
  call void @llvm.dbg.value(metadata i64 0, metadata !17267, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.value(metadata i32 undef, metadata !17268, metadata !DIExpression()), !dbg !17272
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17278
  %4 = tail call fastcc i32 @elapsed.189() #26, !dbg !17281
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17267, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17271
  call void @llvm.dbg.value(metadata i32 %2, metadata !16834, metadata !DIExpression()) #24, !dbg !17282
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16839, metadata !DIExpression()) #24, !dbg !17282
  call void @llvm.dbg.value(metadata i32 %2, metadata !16842, metadata !DIExpression()) #24, !dbg !17284
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17286, !srcloc !16848
  call void @llvm.dbg.value(metadata i32 undef, metadata !17268, metadata !DIExpression()), !dbg !17272
  %5 = sext i32 %4 to i64, !dbg !17281
  %6 = add i64 %3, %5, !dbg !17287
  ret i64 %6, !dbg !17288
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17289 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17290
  %2 = trunc i64 %1 to i32, !dbg !17291
  ret i32 %2, !dbg !17292
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17293 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17294
  ret i64 %1, !dbg !17295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17298, metadata !DIExpression()), !dbg !17305
  %2 = icmp eq i32 %0, 0, !dbg !17306
  br i1 %2, label %10, label %3, !dbg !17308

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17309
  call void @llvm.dbg.value(metadata i32 %4, metadata !17299, metadata !DIExpression()), !dbg !17305
  %5 = mul i32 %0, 168, !dbg !17310
  call void @llvm.dbg.value(metadata i32 %5, metadata !17300, metadata !DIExpression()), !dbg !17305
  br label %6, !dbg !17311

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17312
  call void @llvm.dbg.value(metadata i32 %7, metadata !17301, metadata !DIExpression()), !dbg !17313
  %8 = sub i32 %7, %4, !dbg !17314
  %9 = icmp ult i32 %8, %5, !dbg !17316
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17318 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17319
  ret i32 %1, !dbg !17320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17321 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17323
  ret i32 %1, !dbg !17324
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17325 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17329, metadata !DIExpression()), !dbg !17331
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17332

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17333
  br label %14, !dbg !17337

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17330, metadata !DIExpression()), !dbg !17331
  %6 = icmp slt i64 %2, -1, !dbg !17338
  br i1 %6, label %7, label %9, !dbg !17341

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17342
  br label %14, !dbg !17343

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17345
  %11 = icmp ugt i64 %2, 1, !dbg !17346
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17346
  %13 = add nsw i64 %10, %12, !dbg !17347
  br label %14, !dbg !17348

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17349
  ret i64 %15, !dbg !17350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17351 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.210, i32 0, i32 0)) #25, !dbg !17353
  ret void, !dbg !17354
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17355 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17357, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17358, metadata !DIExpression()), !dbg !17378
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17379

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17380

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17358, metadata !DIExpression()), !dbg !17378
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17381
  %6 = load i8*, i8** %5, align 4, !dbg !17381
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17385
  %8 = load i32, i32* %7, align 4, !dbg !17385
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !17386
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17387
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17358, metadata !DIExpression()), !dbg !17378
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17388
  br i1 %10, label %3, label %2, !dbg !17379, !llvm.loop !17390
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17392 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17396, metadata !DIExpression()), !dbg !17399
  call void @llvm.dbg.value(metadata i8* %1, metadata !17397, metadata !DIExpression()), !dbg !17399
  call void @llvm.dbg.value(metadata i32 %2, metadata !17398, metadata !DIExpression()), !dbg !17399
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17400
  tail call fastcc void @z_waitq_init.212(%union.anon* noundef nonnull %4) #26, !dbg !17401
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17402
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !17403
  ret void, !dbg !17404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.212(%union.anon* noundef %0) unnamed_addr #4 !dbg !17405 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17410, metadata !DIExpression()), !dbg !17411
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17412
  tail call fastcc void @sys_dlist_init.213(%struct._dnode* noundef %2) #26, !dbg !17413
  ret void, !dbg !17414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.213(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17415 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17420, metadata !DIExpression()), !dbg !17421
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17422
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17423
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17424
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17425
  ret void, !dbg !17426
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17427 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17438, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17435, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata i32 %1, metadata !17436, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata i32 %2, metadata !17437, metadata !DIExpression()), !dbg !17448
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !17449
  call void @llvm.dbg.value(metadata i64 %6, metadata !17440, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata i8* null, metadata !17441, metadata !DIExpression()), !dbg !17448
  %7 = icmp eq i64 %5, -1, !dbg !17450
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17450
  call void @llvm.dbg.value(metadata i64 %8, metadata !17440, metadata !DIExpression()), !dbg !17448
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17451
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17452, metadata !DIExpression()) #24, !dbg !17459
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17461, !srcloc !17467
  call void @llvm.dbg.value(metadata i32 undef, metadata !17464, metadata !DIExpression()) #24, !dbg !17468
  call void @llvm.dbg.value(metadata i32 undef, metadata !17465, metadata !DIExpression()) #24, !dbg !17468
  call void @llvm.dbg.value(metadata i32 undef, metadata !17458, metadata !DIExpression()) #24, !dbg !17459
  call void @llvm.dbg.value(metadata i32 undef, metadata !17442, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata i8 0, metadata !17447, metadata !DIExpression()), !dbg !17448
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17441, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata i8 0, metadata !17447, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata i32 undef, metadata !17442, metadata !DIExpression()), !dbg !17448
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17469
  call void @llvm.dbg.value(metadata i8* %12, metadata !17441, metadata !DIExpression()), !dbg !17448
  %13 = tail call i64 @sys_clock_tick_get() #25, !dbg !17471
  call void @llvm.dbg.value(metadata i64 %13, metadata !17439, metadata !DIExpression()), !dbg !17448
  %14 = icmp eq i8* %12, null, !dbg !17472
  br i1 %14, label %15, label %31, !dbg !17474

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17442, metadata !DIExpression()), !dbg !17448
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17474

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17447, metadata !DIExpression()), !dbg !17448
  %20 = sub nsw i64 %8, %18, !dbg !17475
  %21 = icmp slt i64 %20, 1, !dbg !17476
  br i1 %21, label %31, label %22, !dbg !17477

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17448
  call void @llvm.dbg.value(metadata i8 undef, metadata !17447, metadata !DIExpression()), !dbg !17448
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17478
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17478
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #25, !dbg !17478
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17452, metadata !DIExpression()) #24, !dbg !17479
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17481, !srcloc !17467
  call void @llvm.dbg.value(metadata i32 undef, metadata !17464, metadata !DIExpression()) #24, !dbg !17483
  call void @llvm.dbg.value(metadata i32 undef, metadata !17465, metadata !DIExpression()) #24, !dbg !17483
  call void @llvm.dbg.value(metadata i32 undef, metadata !17458, metadata !DIExpression()) #24, !dbg !17479
  call void @llvm.dbg.value(metadata i32 undef, metadata !17442, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata i8* null, metadata !17441, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata i32 undef, metadata !17442, metadata !DIExpression()), !dbg !17448
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17469
  call void @llvm.dbg.value(metadata i8* %28, metadata !17441, metadata !DIExpression()), !dbg !17448
  %29 = tail call i64 @sys_clock_tick_get() #25, !dbg !17471
  call void @llvm.dbg.value(metadata i64 %29, metadata !17439, metadata !DIExpression()), !dbg !17448
  %30 = icmp eq i8* %28, null, !dbg !17472
  br i1 %30, label %17, label %31, !dbg !17474, !llvm.loop !17484

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17469
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17448
  call void @llvm.dbg.value(metadata i8* %33, metadata !17441, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata i32 %34, metadata !17487, metadata !DIExpression()) #24, !dbg !17493
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17492, metadata !DIExpression()) #24, !dbg !17493
  call void @llvm.dbg.value(metadata i32 %34, metadata !17495, metadata !DIExpression()) #24, !dbg !17498
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #24, !dbg !17500, !srcloc !17501
  ret i8* %33, !dbg !17502
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17503 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17509, metadata !DIExpression()), !dbg !17511
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17507, metadata !DIExpression()), !dbg !17511
  call void @llvm.dbg.value(metadata i32 %1, metadata !17508, metadata !DIExpression()), !dbg !17511
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !17512
  call void @llvm.dbg.value(metadata i8* %4, metadata !17510, metadata !DIExpression()), !dbg !17511
  ret i8* %4, !dbg !17513
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17514 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17518, metadata !DIExpression()), !dbg !17521
  call void @llvm.dbg.value(metadata i8* %1, metadata !17519, metadata !DIExpression()), !dbg !17521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17452, metadata !DIExpression()) #24, !dbg !17522
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17524, !srcloc !17467
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17524
  call void @llvm.dbg.value(metadata i32 %4, metadata !17464, metadata !DIExpression()) #24, !dbg !17526
  call void @llvm.dbg.value(metadata i32 undef, metadata !17465, metadata !DIExpression()) #24, !dbg !17526
  call void @llvm.dbg.value(metadata i32 %4, metadata !17458, metadata !DIExpression()) #24, !dbg !17522
  call void @llvm.dbg.value(metadata i32 %4, metadata !17520, metadata !DIExpression()), !dbg !17521
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17527
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #25, !dbg !17528
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17529
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #25, !dbg !17531
  %8 = icmp eq i32 %7, 0, !dbg !17532
  br i1 %8, label %12, label %9, !dbg !17533

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17534
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17535
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #25, !dbg !17535
  br label %13, !dbg !17537

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17487, metadata !DIExpression()) #24, !dbg !17538
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17492, metadata !DIExpression()) #24, !dbg !17538
  call void @llvm.dbg.value(metadata i32 %4, metadata !17495, metadata !DIExpression()) #24, !dbg !17541
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !17543, !srcloc !17501
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17544
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!766, !2, !2565, !27, !113, !2567, !2569, !2602, !2639, !122, !177, !2641, !206, !2723, !2734, !2780, !2782, !2810, !2838, !2881, !2952, !2997, !353, !502, !3025, !538, !548, !573, !800, !3030, !935, !1137, !1452, !1716, !3067, !1831, !1921, !3069, !3153, !3216, !1970, !3219, !1976, !2337, !3237, !2357, !2380, !3239, !2495, !3242, !2534}
!llvm.ident = !{!3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244, !3244}
!llvm.module.flags = !{!3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "prompt", scope: !27, file: !105, line: 9, type: !106, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/echo/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/samples/subsys/console/echo/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 400, elements: !109)
!107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!108 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!109 = !{!110}
!110 = !DISubrange(count: 50)
!111 = !DIGlobalVariableExpression(var: !112, expr: !DIExpression())
!112 = distinct !DIGlobalVariable(name: "_char_out", scope: !113, file: !116, line: 54, type: !117, isLocal: false, isDefinition: true)
!113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !115, splitDebugInlining: false, nameTableKind: None)
!114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!115 = !{!111}
!116 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!118 = !DISubroutineType(types: !119)
!119 = !{!103, !103}
!120 = !DIGlobalVariableExpression(var: !121, expr: !DIExpression())
!121 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !122, file: !140, line: 56, type: !141, isLocal: true, isDefinition: true, align: 32)
!122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !123, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !124, globals: !139, splitDebugInlining: false, nameTableKind: None)
!123 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !127, line: 369, baseType: !128)
!127 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 360, size: 224, elements: !129)
!129 = !{!130, !133, !134, !135, !136, !137, !138}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !128, file: !127, line: 362, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !132)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !128, file: !127, line: 363, baseType: !131, size: 32, offset: 32)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !128, file: !127, line: 364, baseType: !131, size: 32, offset: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !128, file: !127, line: 365, baseType: !131, size: 32, offset: 96)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !128, file: !127, line: 366, baseType: !131, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !128, file: !127, line: 367, baseType: !131, size: 32, offset: 160)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !128, file: !127, line: 368, baseType: !131, size: 32, offset: 192)
!139 = !{!120}
!140 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !{!145, !174}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !142, file: !143, line: 60, baseType: !146, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DISubroutineType(types: !148)
!148 = !{!103, !149}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !153)
!152 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!153 = !{!154, !156, !157, !158, !167, !168}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !151, file: !152, line: 380, baseType: !155, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !151, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !151, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !151, file: !152, line: 386, baseType: !159, size: 32, offset: 96)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !161)
!161 = !{!162, !165}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !160, file: !152, line: 359, baseType: !163, size: 8)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !164)
!164 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !160, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!166 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !151, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !151, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !171)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !152, line: 43, baseType: !172)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !173)
!173 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !142, file: !143, line: 65, baseType: !149, size: 32, offset: 32)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !177, file: !180, line: 71, type: !181, isLocal: true, isDefinition: true, align: 32)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !179, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!179 = !{!175}
!180 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !182)
!182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !183)
!183 = !{!184, !203}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !182, file: !143, line: 60, baseType: !185, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!186 = !DISubroutineType(types: !187)
!187 = !{!103, !188}
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !190)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !191)
!191 = !{!192, !193, !194, !195, !201, !202}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !190, file: !152, line: 380, baseType: !155, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !190, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !190, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !190, file: !152, line: 386, baseType: !196, size: 32, offset: 96)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !198)
!198 = !{!199, !200}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !197, file: !152, line: 359, baseType: !163, size: 8)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !197, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !190, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !190, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !182, file: !143, line: 65, baseType: !188, size: 32, offset: 32)
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "console_serial", scope: !206, file: !297, line: 13, type: !306, isLocal: true, isDefinition: true)
!206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !207, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !208, globals: !294, splitDebugInlining: false, nameTableKind: None)
!207 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!208 = !{!209, !102, !103}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !213)
!212 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !{!214, !234, !238, !242, !255, !260, !266, !272, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !211, file: !212, line: 365, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 32)
!216 = !DISubroutineType(types: !217)
!217 = !{!103, !218, !233}
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !220)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !221)
!221 = !{!222, !223, !224, !225, !231, !232}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !220, file: !152, line: 380, baseType: !155, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !220, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !220, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !220, file: !152, line: 386, baseType: !226, size: 32, offset: 96)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !228)
!228 = !{!229, !230}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !227, file: !152, line: 359, baseType: !163, size: 8)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !227, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !220, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !220, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !211, file: !212, line: 366, baseType: !235, size: 32, offset: 32)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = !DISubroutineType(types: !237)
!237 = !{null, !218, !164}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !211, file: !212, line: 374, baseType: !239, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!240 = !DISubroutineType(types: !241)
!241 = !{!103, !218}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !211, file: !212, line: 377, baseType: !243, size: 32, offset: 96)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DISubroutineType(types: !245)
!245 = !{!103, !218, !246}
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !248)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !249)
!249 = !{!250, !251, !252, !253, !254}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !248, file: !212, line: 123, baseType: !132, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !248, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !248, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !248, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !248, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !211, file: !212, line: 379, baseType: !256, size: 32, offset: 128)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 32)
!257 = !DISubroutineType(types: !258)
!258 = !{!103, !218, !259}
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !211, file: !212, line: 384, baseType: !261, size: 32, offset: 160)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = !DISubroutineType(types: !263)
!263 = !{!103, !218, !264, !103}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !163)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !211, file: !212, line: 393, baseType: !267, size: 32, offset: 192)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = !DISubroutineType(types: !269)
!269 = !{!103, !218, !270, !271}
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !211, file: !212, line: 402, baseType: !273, size: 32, offset: 224)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DISubroutineType(types: !275)
!275 = !{null, !218}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !211, file: !212, line: 405, baseType: !273, size: 32, offset: 256)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !211, file: !212, line: 408, baseType: !239, size: 32, offset: 288)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !211, file: !212, line: 411, baseType: !273, size: 32, offset: 320)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !211, file: !212, line: 414, baseType: !273, size: 32, offset: 352)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !211, file: !212, line: 417, baseType: !239, size: 32, offset: 384)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !211, file: !212, line: 420, baseType: !239, size: 32, offset: 416)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !211, file: !212, line: 423, baseType: !273, size: 32, offset: 448)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !211, file: !212, line: 426, baseType: !273, size: 32, offset: 480)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !211, file: !212, line: 429, baseType: !239, size: 32, offset: 512)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !211, file: !212, line: 432, baseType: !239, size: 32, offset: 544)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !211, file: !212, line: 435, baseType: !287, size: 32, offset: 576)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{null, !218, !290, !102}
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32)
!292 = !DISubroutineType(types: !293)
!293 = !{null, !218, !102}
!294 = !{!204, !295, !301}
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "console_rxbuf", scope: !206, file: !297, line: 15, type: !298, isLocal: true, isDefinition: true)
!297 = !DIFile(filename: "zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 512, elements: !299)
!299 = !{!300}
!300 = !DISubrange(count: 64)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "console_txbuf", scope: !206, file: !297, line: 16, type: !303, isLocal: true, isDefinition: true)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 4096, elements: !304)
!304 = !{!305}
!305 = !DISubrange(count: 512)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !307, line: 18, size: 544, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/console/tty.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !310, !337, !338, !339, !342, !343, !345, !346, !347, !348, !349, !350}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !306, file: !307, line: 19, baseType: !218, size: 32)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !306, file: !307, line: 21, baseType: !311, size: 128, offset: 32)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !312, line: 2909, size: 128, elements: !313)
!312 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = !{!314, !335, !336}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !311, file: !312, line: 2910, baseType: !315, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !318)
!318 = !{!319}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !317, file: !316, line: 232, baseType: !320, size: 64)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !323)
!323 = !{!324, !330}
!324 = !DIDerivedType(tag: DW_TAG_member, scope: !322, file: !321, line: 38, baseType: !325, size: 32)
!325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !322, file: !321, line: 38, size: 32, elements: !326)
!326 = !{!327, !329}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !325, file: !321, line: 39, baseType: !328, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !325, file: !321, line: 40, baseType: !328, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, scope: !322, file: !321, line: 42, baseType: !331, size: 32, offset: 32)
!331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !322, file: !321, line: 42, size: 32, elements: !332)
!332 = !{!333, !334}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !331, file: !321, line: 43, baseType: !328, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !331, file: !321, line: 44, baseType: !328, size: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !311, file: !312, line: 2911, baseType: !32, size: 32, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !311, file: !312, line: 2912, baseType: !32, size: 32, offset: 96)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !306, file: !307, line: 22, baseType: !270, size: 32, offset: 160)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !306, file: !307, line: 23, baseType: !132, size: 32, offset: 192)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !306, file: !307, line: 24, baseType: !340, size: 16, offset: 224)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !341)
!341 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !306, file: !307, line: 24, baseType: !340, size: 16, offset: 240)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !306, file: !307, line: 25, baseType: !344, size: 32, offset: 256)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !306, file: !307, line: 27, baseType: !311, size: 128, offset: 288)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !306, file: !307, line: 28, baseType: !270, size: 32, offset: 416)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !306, file: !307, line: 29, baseType: !132, size: 32, offset: 448)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !306, file: !307, line: 30, baseType: !340, size: 16, offset: 480)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !306, file: !307, line: 30, baseType: !340, size: 16, offset: 496)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !306, file: !307, line: 31, baseType: !344, size: 32, offset: 512)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "static_regions", scope: !353, file: !362, line: 62, type: !498, isLocal: true, isDefinition: true)
!353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !355, globals: !358, splitDebugInlining: false, nameTableKind: None)
!354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!355 = !{!356, !103, !132, !102}
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !357, line: 214, baseType: !32)
!357 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!358 = !{!359, !351}
!359 = !DIGlobalVariableExpression(var: !360, expr: !DIExpression())
!360 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !361, file: !362, line: 198, type: !484, isLocal: true, isDefinition: true)
!361 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !362, file: !362, line: 175, type: !363, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !353, retainedNodes: !479)
!362 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!363 = !DISubroutineType(types: !364)
!364 = !{null, !365}
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !368)
!367 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!368 = !{!369, !434, !447, !448, !449, !450, !456, !474}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !366, file: !367, line: 247, baseType: !370, size: 384)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !371)
!371 = !{!372, !399, !406, !407, !408, !419, !420, !421}
!372 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !367, line: 60, baseType: !373, size: 64)
!373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 60, size: 64, elements: !374)
!374 = !{!375, !390}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !373, file: !367, line: 61, baseType: !376, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !377)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !378)
!378 = !{!379, !385}
!379 = !DIDerivedType(tag: DW_TAG_member, scope: !377, file: !321, line: 38, baseType: !380, size: 32)
!380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !377, file: !321, line: 38, size: 32, elements: !381)
!381 = !{!382, !384}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !380, file: !321, line: 39, baseType: !383, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !380, file: !321, line: 40, baseType: !383, size: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, scope: !377, file: !321, line: 42, baseType: !386, size: 32, offset: 32)
!386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !377, file: !321, line: 42, size: 32, elements: !387)
!387 = !{!388, !389}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !386, file: !321, line: 43, baseType: !383, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !386, file: !321, line: 44, baseType: !383, size: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !373, file: !367, line: 62, baseType: !391, size: 64)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !393)
!392 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!394}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !391, file: !392, line: 50, baseType: !395, size: 64)
!395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 64, elements: !397)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!397 = !{!398}
!398 = !DISubrange(count: 2)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !370, file: !367, line: 68, baseType: !400, size: 32, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !402, file: !316, line: 232, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !377)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !370, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !370, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!408 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !367, line: 90, baseType: !409, size: 16, offset: 112)
!409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 90, size: 16, elements: !410)
!410 = !{!411, !418}
!411 = !DIDerivedType(tag: DW_TAG_member, scope: !409, file: !367, line: 91, baseType: !412, size: 16)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !409, file: !367, line: 91, size: 16, elements: !413)
!413 = !{!414, !417}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !412, file: !367, line: 96, baseType: !415, size: 8)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !416)
!416 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !412, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !409, file: !367, line: 100, baseType: !340, size: 16)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !370, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !370, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !370, file: !367, line: 131, baseType: !422, size: 192, offset: 192)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !423)
!423 = !{!424, !425, !431}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !422, file: !316, line: 245, baseType: !376, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !422, file: !316, line: 246, baseType: !426, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !427)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 32)
!428 = !DISubroutineType(types: !429)
!429 = !{null, !430}
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !422, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !433)
!433 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !366, file: !367, line: 250, baseType: !435, size: 288, offset: 384)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !437)
!436 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!437 = !{!438, !439, !440, !441, !442, !443, !444, !445, !446}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !435, file: !436, line: 26, baseType: !132, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !435, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !435, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !435, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !435, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !435, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !435, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !435, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !435, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !366, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !366, file: !367, line: 256, baseType: !401, size: 64, offset: 704)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !366, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !366, file: !367, line: 300, baseType: !451, size: 96, offset: 800)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !452)
!452 = !{!453, !454, !455}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !451, file: !367, line: 153, baseType: !22, size: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !451, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !451, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !366, file: !367, line: 325, baseType: !457, size: 32, offset: 896)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 32)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !459)
!459 = !{!460, !469, !470}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !458, file: !312, line: 5074, baseType: !461, size: 96)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !463)
!462 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!463 = !{!464, !467, !468}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !461, file: !462, line: 57, baseType: !465, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 32)
!466 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !462, line: 57, flags: DIFlagFwdDecl)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !461, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !461, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !458, file: !312, line: 5075, baseType: !401, size: 64, offset: 96)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !458, file: !312, line: 5076, baseType: !471, offset: 160)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !366, file: !367, line: 343, baseType: !475, size: 64, offset: 928)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !476)
!476 = !{!477, !478}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !475, file: !436, line: 63, baseType: !132, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !475, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!479 = !{!480, !481, !482, !483}
!480 = !DILocalVariable(name: "thread", arg: 1, scope: !361, file: !362, line: 175, type: !365)
!481 = !DILocalVariable(name: "region_num", scope: !361, file: !362, line: 200, type: !163)
!482 = !DILocalVariable(name: "guard_start", scope: !361, file: !362, line: 265, type: !22)
!483 = !DILocalVariable(name: "guard_size", scope: !361, file: !362, line: 266, type: !356)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 96, elements: !496)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !486, line: 52, size: 96, elements: !487)
!486 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!487 = !{!488, !489, !490}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !485, file: !486, line: 53, baseType: !22, size: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !485, file: !486, line: 54, baseType: !356, size: 32, offset: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !485, file: !486, line: 55, baseType: !491, size: 32, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !492, line: 151, baseType: !493)
!492 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !492, line: 149, size: 32, elements: !494)
!494 = !{!495}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !493, file: !492, line: 150, baseType: !132, size: 32)
!496 = !{!497}
!497 = !DISubrange(count: 1)
!498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 96, elements: !496)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !485)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !502, file: !535, line: 39, type: !163, isLocal: true, isDefinition: true)
!502 = distinct !DICompileUnit(language: DW_LANG_C99, file: !503, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !504, globals: !534, splitDebugInlining: false, nameTableKind: None)
!503 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!504 = !{!505, !102, !103, !522, !163}
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !507, line: 1226, baseType: !508)
!507 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 1213, size: 352, elements: !509)
!509 = !{!510, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !508, file: !507, line: 1215, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !508, file: !507, line: 1216, baseType: !131, size: 32, offset: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !508, file: !507, line: 1217, baseType: !131, size: 32, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !508, file: !507, line: 1218, baseType: !131, size: 32, offset: 96)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !508, file: !507, line: 1219, baseType: !131, size: 32, offset: 128)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !508, file: !507, line: 1220, baseType: !131, size: 32, offset: 160)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !508, file: !507, line: 1221, baseType: !131, size: 32, offset: 192)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !508, file: !507, line: 1222, baseType: !131, size: 32, offset: 224)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !508, file: !507, line: 1223, baseType: !131, size: 32, offset: 256)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !508, file: !507, line: 1224, baseType: !131, size: 32, offset: 288)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !508, file: !507, line: 1225, baseType: !131, size: 32, offset: 320)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !525, line: 27, size: 96, elements: !526)
!525 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!526 = !{!527, !528, !529}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !524, file: !525, line: 29, baseType: !132, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !524, file: !525, line: 31, baseType: !155, size: 32, offset: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !524, file: !525, line: 37, baseType: !530, size: 32, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !492, line: 146, baseType: !531)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !492, line: 141, size: 32, elements: !532)
!532 = !{!533}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !531, file: !492, line: 143, baseType: !132, size: 32)
!534 = !{!500}
!535 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !538, file: !545, line: 21, type: !117, isLocal: true, isDefinition: true)
!538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !540, globals: !544, splitDebugInlining: false, nameTableKind: None)
!539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!540 = !{!541, !103, !102}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !543, line: 22, baseType: !103)
!543 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !{!536}
!545 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !548, file: !553, line: 13, type: !570, isLocal: true, isDefinition: true)
!548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !549, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !550, splitDebugInlining: false, nameTableKind: None)
!549 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!550 = !{!551, !546}
!551 = !DIGlobalVariableExpression(var: !552, expr: !DIExpression())
!552 = distinct !DIGlobalVariable(name: "mpu_config", scope: !548, file: !553, line: 37, type: !554, isLocal: false, isDefinition: true)
!553 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !525, line: 41, size: 64, elements: !556)
!556 = !{!557, !558}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !555, file: !525, line: 43, baseType: !132, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !555, file: !525, line: 45, baseType: !559, size: 32, offset: 32)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !561)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !525, line: 27, size: 96, elements: !562)
!562 = !{!563, !564, !565}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !561, file: !525, line: 29, baseType: !132, size: 32)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !561, file: !525, line: 31, baseType: !155, size: 32, offset: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !561, file: !525, line: 37, baseType: !566, size: 32, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !492, line: 146, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !492, line: 141, size: 32, elements: !568)
!568 = !{!569}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !567, file: !492, line: 143, baseType: !132, size: 32)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !560, size: 192, elements: !397)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !573, file: !678, line: 72, type: !761, isLocal: true, isDefinition: true)
!573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !574, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !575, retainedTypes: !664, globals: !675, splitDebugInlining: false, nameTableKind: None)
!574 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!575 = !{!30, !576}
!576 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !127, line: 65, baseType: !103, size: 32, elements: !577)
!577 = !{!578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663}
!578 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!579 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!580 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!581 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!582 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!583 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!584 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!585 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!586 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!587 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!588 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!589 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!590 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!591 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!592 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!593 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!594 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!595 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!596 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!597 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!598 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!599 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!600 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!601 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!602 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!603 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!604 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!605 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!606 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!607 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!608 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!609 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!610 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!611 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!612 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!613 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!614 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!615 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!616 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!617 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!618 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!619 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!620 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!621 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!622 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!623 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!624 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!625 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!626 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!627 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!628 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!629 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!630 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!631 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!632 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!633 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!634 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!635 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!636 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!637 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!638 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!639 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!640 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!641 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!642 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!643 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!644 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!645 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!646 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!647 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!648 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!649 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!650 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!651 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!652 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!653 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!654 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!655 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!656 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!657 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!658 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!659 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!660 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!661 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!662 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!663 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!664 = !{!356, !103, !102, !665}
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !127, line: 354, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 346, size: 192, elements: !668)
!668 = !{!669, !670, !671, !672, !673, !674}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !667, file: !127, line: 348, baseType: !131, size: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !667, file: !127, line: 349, baseType: !131, size: 32, offset: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !667, file: !127, line: 350, baseType: !131, size: 32, offset: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !667, file: !127, line: 351, baseType: !131, size: 32, offset: 96)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !667, file: !127, line: 352, baseType: !131, size: 32, offset: 128)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !667, file: !127, line: 353, baseType: !131, size: 32, offset: 160)
!675 = !{!676, !682, !698, !709, !726, !571, !728, !741, !743, !745, !747, !749, !751, !753, !755, !757, !759}
!676 = !DIGlobalVariableExpression(var: !677, expr: !DIExpression())
!677 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !573, file: !678, line: 424, type: !679, isLocal: false, isDefinition: true, align: 16)
!678 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 64, elements: !680)
!680 = !{!681}
!681 = !DISubrange(count: 4)
!682 = !DIGlobalVariableExpression(var: !683, expr: !DIExpression())
!683 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !573, file: !678, line: 424, type: !684, isLocal: false, isDefinition: true, align: 32)
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !686)
!686 = !{!687, !688, !689, !690, !696, !697}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !685, file: !152, line: 380, baseType: !155, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !685, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !685, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !685, file: !152, line: 386, baseType: !691, size: 32, offset: 96)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 32)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !693)
!693 = !{!694, !695}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !692, file: !152, line: 359, baseType: !163, size: 8)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !692, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !685, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !685, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!698 = !DIGlobalVariableExpression(var: !699, expr: !DIExpression())
!699 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !573, file: !678, line: 424, type: !700, isLocal: true, isDefinition: true, align: 32)
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !702)
!702 = !{!703, !708}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !701, file: !143, line: 60, baseType: !704, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 32)
!705 = !DISubroutineType(types: !706)
!706 = !{!103, !707}
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 32)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !701, file: !143, line: 65, baseType: !707, size: 32, offset: 32)
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "exti_data", scope: !573, file: !678, line: 423, type: !711, isLocal: true, isDefinition: true)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !678, line: 107, size: 1472, elements: !712)
!712 = !{!713}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !711, file: !678, line: 109, baseType: !714, size: 1472)
!714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !715, size: 1472, elements: !724)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !678, line: 101, size: 64, elements: !716)
!716 = !{!717, !723}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !715, file: !678, line: 102, baseType: !718, size: 32)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !719, line: 63, baseType: !720)
!719 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 32)
!721 = !DISubroutineType(types: !722)
!722 = !{null, !103, !102}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !715, file: !678, line: 103, baseType: !102, size: 32, offset: 32)
!724 = !{!725}
!725 = !DISubrange(count: 23)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !573, file: !678, line: 424, type: !692, isLocal: true, isDefinition: true, align: 8)
!728 = !DIGlobalVariableExpression(var: !729, expr: !DIExpression())
!729 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !730, file: !678, line: 493, type: !735, isLocal: true, isDefinition: true, align: 32)
!730 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !678, file: !678, line: 460, type: !731, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !733)
!731 = !DISubroutineType(types: !732)
!732 = !{null, !707}
!733 = !{!734}
!734 = !DILocalVariable(name: "dev", arg: 1, scope: !730, file: !678, line: 460, type: !707)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !736)
!736 = !{!737, !738, !739, !740}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !735, file: !10, line: 55, baseType: !344, size: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !735, file: !10, line: 57, baseType: !344, size: 32, offset: 32)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !735, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !735, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!741 = !DIGlobalVariableExpression(var: !742, expr: !DIExpression())
!742 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !730, file: !678, line: 497, type: !735, isLocal: true, isDefinition: true, align: 32)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !730, file: !678, line: 507, type: !735, isLocal: true, isDefinition: true, align: 32)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !730, file: !678, line: 512, type: !735, isLocal: true, isDefinition: true, align: 32)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !730, file: !678, line: 516, type: !735, isLocal: true, isDefinition: true, align: 32)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !730, file: !678, line: 523, type: !735, isLocal: true, isDefinition: true, align: 32)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !730, file: !678, line: 527, type: !735, isLocal: true, isDefinition: true, align: 32)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !730, file: !678, line: 581, type: !735, isLocal: true, isDefinition: true, align: 32)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !730, file: !678, line: 586, type: !735, isLocal: true, isDefinition: true, align: 32)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !730, file: !678, line: 591, type: !735, isLocal: true, isDefinition: true, align: 32)
!759 = !DIGlobalVariableExpression(var: !760, expr: !DIExpression())
!760 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !730, file: !678, line: 595, type: !735, isLocal: true, isDefinition: true, align: 32)
!761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 736, elements: !724)
!762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !763)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !127, line: 155, baseType: !576)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !766, file: !771, line: 23, type: !795, isLocal: false, isDefinition: true, align: 16)
!766 = distinct !DICompileUnit(language: DW_LANG_C99, file: !767, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !768, splitDebugInlining: false, nameTableKind: None)
!767 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!768 = !{!769, !764, !775, !777, !779, !781, !783, !785, !787, !789, !791, !793}
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !766, file: !771, line: 18, type: !772, isLocal: false, isDefinition: true, align: 16)
!771 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 208, elements: !773)
!773 = !{!774}
!774 = !DISubrange(count: 13)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !766, file: !771, line: 30, type: !679, isLocal: false, isDefinition: true, align: 16)
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !766, file: !771, line: 37, type: !679, isLocal: false, isDefinition: true, align: 16)
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !766, file: !771, line: 44, type: !679, isLocal: false, isDefinition: true, align: 16)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !766, file: !771, line: 51, type: !679, isLocal: false, isDefinition: true, align: 16)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !766, file: !771, line: 58, type: !679, isLocal: false, isDefinition: true, align: 16)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !766, file: !771, line: 65, type: !679, isLocal: false, isDefinition: true, align: 16)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !766, file: !771, line: 72, type: !679, isLocal: false, isDefinition: true, align: 16)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !766, file: !771, line: 79, type: !679, isLocal: false, isDefinition: true, align: 16)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !766, file: !771, line: 86, type: !679, isLocal: false, isDefinition: true, align: 16)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !766, file: !771, line: 93, type: !679, isLocal: false, isDefinition: true, align: 16)
!795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 48, elements: !796)
!796 = !{!797}
!797 = !DISubrange(count: 3)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !800, file: !861, line: 398, type: !894, isLocal: true, isDefinition: true)
!800 = distinct !DICompileUnit(language: DW_LANG_C99, file: !801, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !802, retainedTypes: !815, globals: !858, splitDebugInlining: false, nameTableKind: None)
!801 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!802 = !{!803, !30, !808}
!803 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !804, line: 197, baseType: !32, size: 32, elements: !805)
!804 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!805 = !{!806, !807}
!806 = !DIEnumerator(name: "SUCCESS", value: 0)
!807 = !DIEnumerator(name: "ERROR", value: 1)
!808 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !809, line: 44, baseType: !32, size: 32, elements: !810)
!809 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!810 = !{!811, !812, !813, !814}
!811 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!812 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!813 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!814 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!815 = !{!102, !103, !132, !816, !851, !857}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 532, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 500, size: 1088, elements: !819)
!819 = !{!820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !818, file: !127, line: 502, baseType: !131, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !818, file: !127, line: 503, baseType: !131, size: 32, offset: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !818, file: !127, line: 504, baseType: !131, size: 32, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !818, file: !127, line: 505, baseType: !131, size: 32, offset: 96)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !818, file: !127, line: 506, baseType: !131, size: 32, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !818, file: !127, line: 507, baseType: !131, size: 32, offset: 160)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !818, file: !127, line: 508, baseType: !131, size: 32, offset: 192)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !818, file: !127, line: 509, baseType: !132, size: 32, offset: 224)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !818, file: !127, line: 510, baseType: !131, size: 32, offset: 256)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !818, file: !127, line: 511, baseType: !131, size: 32, offset: 288)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !818, file: !127, line: 512, baseType: !831, size: 64, offset: 320)
!831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 64, elements: !397)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !818, file: !127, line: 513, baseType: !131, size: 32, offset: 384)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !818, file: !127, line: 514, baseType: !131, size: 32, offset: 416)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !818, file: !127, line: 515, baseType: !131, size: 32, offset: 448)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !818, file: !127, line: 516, baseType: !132, size: 32, offset: 480)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !818, file: !127, line: 517, baseType: !131, size: 32, offset: 512)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !818, file: !127, line: 518, baseType: !131, size: 32, offset: 544)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !818, file: !127, line: 519, baseType: !831, size: 64, offset: 576)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !818, file: !127, line: 520, baseType: !131, size: 32, offset: 640)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !818, file: !127, line: 521, baseType: !131, size: 32, offset: 672)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !818, file: !127, line: 522, baseType: !131, size: 32, offset: 704)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !818, file: !127, line: 523, baseType: !132, size: 32, offset: 736)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !818, file: !127, line: 524, baseType: !131, size: 32, offset: 768)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !818, file: !127, line: 525, baseType: !131, size: 32, offset: 800)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !818, file: !127, line: 526, baseType: !831, size: 64, offset: 832)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !818, file: !127, line: 527, baseType: !131, size: 32, offset: 896)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !818, file: !127, line: 528, baseType: !131, size: 32, offset: 928)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !818, file: !127, line: 529, baseType: !831, size: 64, offset: 960)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !818, file: !127, line: 530, baseType: !131, size: 32, offset: 1024)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !818, file: !127, line: 531, baseType: !131, size: 32, offset: 1056)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 32)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !853, line: 343, size: 64, elements: !854)
!853 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!854 = !{!855, !856}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !852, file: !853, line: 344, baseType: !132, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !852, file: !853, line: 345, baseType: !132, size: 32, offset: 32)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!858 = !{!859, !865, !881, !892, !798}
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !800, file: !861, line: 752, type: !862, isLocal: false, isDefinition: true, align: 16)
!861 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 928, elements: !863)
!863 = !{!864}
!864 = !DISubrange(count: 58)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !800, file: !861, line: 752, type: !867, isLocal: false, isDefinition: true, align: 32)
!867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !869)
!869 = !{!870, !871, !872, !873, !879, !880}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !868, file: !152, line: 380, baseType: !155, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !868, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !868, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !868, file: !152, line: 386, baseType: !874, size: 32, offset: 96)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 32)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !876)
!876 = !{!877, !878}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !875, file: !152, line: 359, baseType: !163, size: 8)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !875, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !868, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !868, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !800, file: !861, line: 752, type: !883, isLocal: true, isDefinition: true, align: 32)
!883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !884)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !885)
!885 = !{!886, !891}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !884, file: !143, line: 60, baseType: !887, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!888 = !DISubroutineType(types: !889)
!889 = !{!103, !890}
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !884, file: !143, line: 65, baseType: !890, size: 32, offset: 32)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !800, file: !861, line: 752, type: !875, isLocal: true, isDefinition: true, align: 8)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !809, line: 100, size: 224, elements: !895)
!895 = !{!896, !902, !903, !912, !917, !922, !928}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !894, file: !809, line: 101, baseType: !897, size: 32)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !809, line: 76, baseType: !898)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!899 = !DISubroutineType(types: !900)
!900 = !{!103, !890, !901}
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !809, line: 56, baseType: !102)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !894, file: !809, line: 102, baseType: !897, size: 32, offset: 32)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !894, file: !809, line: 103, baseType: !904, size: 32, offset: 64)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !809, line: 83, baseType: !905)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DISubroutineType(types: !907)
!907 = !{!103, !890, !901, !908, !102}
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !809, line: 72, baseType: !909)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!910 = !DISubroutineType(types: !911)
!911 = !{null, !890, !901, !102}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !894, file: !809, line: 104, baseType: !913, size: 32, offset: 96)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !809, line: 79, baseType: !914)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{!103, !890, !901, !857}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !894, file: !809, line: 105, baseType: !918, size: 32, offset: 128)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !809, line: 88, baseType: !919)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{!808, !890, !901}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !894, file: !809, line: 106, baseType: !923, size: 32, offset: 160)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !809, line: 92, baseType: !924)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 32)
!925 = !DISubroutineType(types: !926)
!926 = !{!103, !890, !901, !927}
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !809, line: 64, baseType: !102)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !894, file: !809, line: 107, baseType: !929, size: 32, offset: 192)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !809, line: 96, baseType: !930)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = !DISubroutineType(types: !932)
!932 = !{!103, !890, !901, !102}
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "debug_hook_in", scope: !935, file: !939, line: 43, type: !1131, isLocal: true, isDefinition: true)
!935 = distinct !DICompileUnit(language: DW_LANG_C99, file: !936, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !937, retainedTypes: !946, globals: !1026, splitDebugInlining: false, nameTableKind: None)
!936 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!937 = !{!30, !938}
!938 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !939, line: 214, baseType: !32, size: 32, elements: !940)
!939 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!940 = !{!941, !942, !943, !944, !945}
!941 = !DIEnumerator(name: "ESC_ESC", value: 0)
!942 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!943 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!944 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!945 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!946 = !{!102, !103, !947, !32, !24}
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !950)
!950 = !{!951, !970, !974, !978, !991, !996, !1000, !1004, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !949, file: !212, line: 365, baseType: !952, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DISubroutineType(types: !954)
!954 = !{!103, !955, !233}
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !957)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !958)
!958 = !{!959, !960, !961, !962, !968, !969}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !957, file: !152, line: 380, baseType: !155, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !957, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !957, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !957, file: !152, line: 386, baseType: !963, size: 32, offset: 96)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !965)
!965 = !{!966, !967}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !964, file: !152, line: 359, baseType: !163, size: 8)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !964, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !957, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !957, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !949, file: !212, line: 366, baseType: !971, size: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!972 = !DISubroutineType(types: !973)
!973 = !{null, !955, !164}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !949, file: !212, line: 374, baseType: !975, size: 32, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DISubroutineType(types: !977)
!977 = !{!103, !955}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !949, file: !212, line: 377, baseType: !979, size: 32, offset: 96)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 32)
!980 = !DISubroutineType(types: !981)
!981 = !{!103, !955, !982}
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !985)
!985 = !{!986, !987, !988, !989, !990}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !984, file: !212, line: 123, baseType: !132, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !984, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !984, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !984, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !984, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !949, file: !212, line: 379, baseType: !992, size: 32, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 32)
!993 = !DISubroutineType(types: !994)
!994 = !{!103, !955, !995}
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !949, file: !212, line: 384, baseType: !997, size: 32, offset: 160)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DISubroutineType(types: !999)
!999 = !{!103, !955, !264, !103}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !949, file: !212, line: 393, baseType: !1001, size: 32, offset: 192)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!103, !955, !270, !271}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !949, file: !212, line: 402, baseType: !1005, size: 32, offset: 224)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !955}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !949, file: !212, line: 405, baseType: !1005, size: 32, offset: 256)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !949, file: !212, line: 408, baseType: !975, size: 32, offset: 288)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !949, file: !212, line: 411, baseType: !1005, size: 32, offset: 320)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !949, file: !212, line: 414, baseType: !1005, size: 32, offset: 352)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !949, file: !212, line: 417, baseType: !975, size: 32, offset: 384)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !949, file: !212, line: 420, baseType: !975, size: 32, offset: 416)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !949, file: !212, line: 423, baseType: !1005, size: 32, offset: 448)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !949, file: !212, line: 426, baseType: !1005, size: 32, offset: 480)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !949, file: !212, line: 429, baseType: !975, size: 32, offset: 512)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !949, file: !212, line: 432, baseType: !975, size: 32, offset: 544)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !949, file: !212, line: 435, baseType: !1019, size: 32, offset: 576)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{null, !955, !1022, !102}
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !1023)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{null, !955, !102}
!1026 = !{!1027, !933, !1034, !1076, !1078, !1084, !1091, !1094, !1119, !1123, !1125, !1127, !1129}
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !935, file: !939, line: 603, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1031)
!1031 = !{!1032, !1033}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1030, file: !143, line: 60, baseType: !975, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1030, file: !143, line: 65, baseType: !955, size: 32, offset: 32)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "avail_queue", scope: !935, file: !939, line: 108, type: !1036, isLocal: true, isDefinition: true)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !312, line: 2208, size: 128, elements: !1038)
!1038 = !{!1039}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1037, file: !312, line: 2209, baseType: !1040, size: 128)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !312, line: 1709, size: 128, elements: !1041)
!1041 = !{!1042, !1055, !1057}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1040, file: !312, line: 1710, baseType: !1043, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !1044, line: 46, baseType: !1045)
!1044 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !1044, line: 41, size: 64, elements: !1046)
!1046 = !{!1047, !1054}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1045, file: !1044, line: 42, baseType: !1048, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !1044, line: 39, baseType: !1050)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !1044, line: 35, size: 32, elements: !1051)
!1051 = !{!1052}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1050, file: !1044, line: 36, baseType: !1053, size: 32)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !1044, line: 32, baseType: !132)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1045, file: !1044, line: 43, baseType: !1048, size: 32, offset: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1040, file: !312, line: 1711, baseType: !1056, offset: 64)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1040, file: !312, line: 1712, baseType: !1058, size: 64, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !1060)
!1060 = !{!1061}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1059, file: !316, line: 232, baseType: !1062, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !1064)
!1064 = !{!1065, !1071}
!1065 = !DIDerivedType(tag: DW_TAG_member, scope: !1063, file: !321, line: 38, baseType: !1066, size: 32)
!1066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1063, file: !321, line: 38, size: 32, elements: !1067)
!1067 = !{!1068, !1070}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1066, file: !321, line: 39, baseType: !1069, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1066, file: !321, line: 40, baseType: !1069, size: 32)
!1071 = !DIDerivedType(tag: DW_TAG_member, scope: !1063, file: !321, line: 42, baseType: !1072, size: 32, offset: 32)
!1072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1063, file: !321, line: 42, size: 32, elements: !1073)
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1072, file: !321, line: 43, baseType: !1069, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1072, file: !321, line: 44, baseType: !1069, size: 32)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "lines_queue", scope: !935, file: !939, line: 109, type: !1036, isLocal: true, isDefinition: true)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "completion_cb", scope: !935, file: !939, line: 110, type: !1080, isLocal: true, isDefinition: true)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!163, !1083, !163}
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "debug_hook_out", scope: !935, file: !939, line: 54, type: !1086, isLocal: true, isDefinition: true)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_out_debug_hook_t", file: !1088, line: 40, baseType: !1089)
!1088 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/uart_console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!103, !108}
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !935, file: !939, line: 38, type: !1093, isLocal: true, isDefinition: true)
!1093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "cmd", scope: !1096, file: !939, line: 435, type: !1107, isLocal: true, isDefinition: true)
!1096 = distinct !DISubprogram(name: "uart_console_isr", scope: !939, file: !939, line: 428, type: !1024, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !1097)
!1097 = !{!1098, !1099, !1100, !1102, !1103}
!1098 = !DILocalVariable(name: "unused", arg: 1, scope: !1096, file: !939, line: 428, type: !955)
!1099 = !DILocalVariable(name: "user_data", arg: 2, scope: !1096, file: !939, line: 428, type: !102)
!1100 = !DILocalVariable(name: "byte", scope: !1101, file: !939, line: 436, type: !163)
!1101 = distinct !DILexicalBlock(scope: !1096, file: !939, line: 434, column: 48)
!1102 = !DILocalVariable(name: "rx", scope: !1101, file: !939, line: 437, type: !103)
!1103 = !DILocalVariable(name: "ret", scope: !1104, file: !939, line: 461, type: !102)
!1104 = distinct !DILexicalBlock(scope: !1105, file: !939, line: 461, column: 10)
!1105 = distinct !DILexicalBlock(scope: !1106, file: !939, line: 460, column: 13)
!1106 = distinct !DILexicalBlock(scope: !1101, file: !939, line: 460, column: 7)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !1109, line: 21, size: 1088, elements: !1110)
!1109 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1110 = !{!1111, !1114, !1115}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1108, file: !1109, line: 23, baseType: !1112, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !1113)
!1113 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1108, file: !1109, line: 25, baseType: !163, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1108, file: !1109, line: 27, baseType: !1116, size: 1024, offset: 40)
!1116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1024, elements: !1117)
!1117 = !{!1118}
!1118 = !DISubrange(count: 128)
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(name: "esc_state", scope: !935, file: !939, line: 228, type: !1121, isLocal: true, isDefinition: true)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1122, line: 22, baseType: !1113)
!1122 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "ansi_val", scope: !935, file: !939, line: 229, type: !32, isLocal: true, isDefinition: true)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !935, file: !939, line: 229, type: !32, isLocal: true, isDefinition: true)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "cur", scope: !935, file: !939, line: 230, type: !163, isLocal: true, isDefinition: true)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "end", scope: !935, file: !939, line: 230, type: !163, isLocal: true, isDefinition: true)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_in_debug_hook_t", file: !1088, line: 45, baseType: !1132)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!103, !163}
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1137, file: !1306, line: 762, type: !1425, isLocal: true, isDefinition: true)
!1137 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1138, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1139, retainedTypes: !1157, globals: !1303, splitDebugInlining: false, nameTableKind: None)
!1138 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!1139 = !{!30, !1140, !1146, !1151, !808}
!1140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1141, line: 506, baseType: !32, size: 32, elements: !1142)
!1141 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1142 = !{!1143, !1144, !1145}
!1143 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1144 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1145 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1141, line: 512, baseType: !32, size: 32, elements: !1147)
!1147 = !{!1148, !1149, !1150}
!1148 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1149 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1150 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1151 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !719, line: 43, baseType: !32, size: 32, elements: !1152)
!1152 = !{!1153, !1154, !1155, !1156}
!1153 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1154 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1155 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1156 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1157 = !{!102, !103, !1158, !1228, !1233, !1193, !1146, !1140, !1238, !1239, !132, !1253, !1208, !1083, !1263, !1264}
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1141, line: 523, size: 288, elements: !1161)
!1161 = !{!1162, !1183, !1189, !1194, !1198, !1199, !1200, !1204, !1224}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1160, file: !1141, line: 524, baseType: !1163, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!103, !1166, !1181, !1182}
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1168)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1179, !1180}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1168, file: !152, line: 380, baseType: !155, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1168, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1168, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1168, file: !152, line: 386, baseType: !1174, size: 32, offset: 96)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 32)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1176)
!1176 = !{!1177, !1178}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1175, file: !152, line: 359, baseType: !163, size: 8)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1175, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1168, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1168, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1141, line: 237, baseType: !163)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1141, line: 257, baseType: !132)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1160, file: !1141, line: 530, baseType: !1184, size: 32, offset: 32)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!103, !1166, !1187}
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1141, line: 229, baseType: !132)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1160, file: !1141, line: 532, baseType: !1190, size: 32, offset: 64)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!103, !1166, !1193, !1188}
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1141, line: 216, baseType: !132)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1160, file: !1141, line: 535, baseType: !1195, size: 32, offset: 96)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!103, !1166, !1193}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1160, file: !1141, line: 537, baseType: !1195, size: 32, offset: 128)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1160, file: !1141, line: 539, baseType: !1195, size: 32, offset: 160)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1160, file: !1141, line: 541, baseType: !1201, size: 32, offset: 192)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!103, !1166, !1181, !1140, !1146}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1160, file: !1141, line: 544, baseType: !1205, size: 32, offset: 224)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!103, !1166, !1208, !166}
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1141, line: 478, size: 96, elements: !1210)
!1210 = !{!1211, !1218, !1223}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1209, file: !1141, line: 482, baseType: !1212, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1213, line: 33, baseType: !1214)
!1213 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1213, line: 29, size: 32, elements: !1215)
!1215 = !{!1216}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1214, file: !1213, line: 30, baseType: !1217, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1209, file: !1141, line: 485, baseType: !1219, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1141, line: 464, baseType: !1220)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{null, !1166, !1208, !1193}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1209, file: !1141, line: 493, baseType: !1193, size: 32, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1160, file: !1141, line: 547, baseType: !1225, size: 32, offset: 256)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!132, !1166}
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1230)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1141, line: 428, size: 32, elements: !1231)
!1231 = !{!1232}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1230, file: !1141, line: 434, baseType: !1193, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1235)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1141, line: 441, size: 32, elements: !1236)
!1236 = !{!1237}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1235, file: !1141, line: 447, baseType: !1193, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !127, line: 441, baseType: !1241)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 430, size: 320, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1241, file: !127, line: 432, baseType: !131, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1241, file: !127, line: 433, baseType: !131, size: 32, offset: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1241, file: !127, line: 434, baseType: !131, size: 32, offset: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1241, file: !127, line: 435, baseType: !131, size: 32, offset: 96)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1241, file: !127, line: 436, baseType: !131, size: 32, offset: 128)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1241, file: !127, line: 437, baseType: !131, size: 32, offset: 160)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1241, file: !127, line: 438, baseType: !131, size: 32, offset: 192)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1241, file: !127, line: 439, baseType: !131, size: 32, offset: 224)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1241, file: !127, line: 440, baseType: !1252, size: 64, offset: 256)
!1252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 64, elements: !397)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !127, line: 454, baseType: !1255)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 447, size: 288, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1261, !1262}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1255, file: !127, line: 449, baseType: !131, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1255, file: !127, line: 450, baseType: !131, size: 32, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1255, file: !127, line: 451, baseType: !1260, size: 128, offset: 64)
!1260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 128, elements: !680)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1255, file: !127, line: 452, baseType: !831, size: 64, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1255, file: !127, line: 453, baseType: !131, size: 32, offset: 256)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1266)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !809, line: 100, size: 224, elements: !1267)
!1267 = !{!1268, !1273, !1274, !1283, !1288, !1293, !1298}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1266, file: !809, line: 101, baseType: !1269, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !809, line: 76, baseType: !1270)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!103, !1166, !901}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1266, file: !809, line: 102, baseType: !1269, size: 32, offset: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1266, file: !809, line: 103, baseType: !1275, size: 32, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !809, line: 83, baseType: !1276)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!103, !1166, !901, !1279, !102}
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !809, line: 72, baseType: !1280)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{null, !1166, !901, !102}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1266, file: !809, line: 104, baseType: !1284, size: 32, offset: 96)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !809, line: 79, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!103, !1166, !901, !857}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1266, file: !809, line: 105, baseType: !1289, size: 32, offset: 128)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !809, line: 88, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!808, !1166, !901}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1266, file: !809, line: 106, baseType: !1294, size: 32, offset: 160)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !809, line: 92, baseType: !1295)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!103, !1166, !901, !927}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1266, file: !809, line: 107, baseType: !1299, size: 32, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !809, line: 96, baseType: !1300)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!103, !1166, !901, !102}
!1303 = !{!1304, !1310, !1312, !1322, !1327, !1329, !1331, !1333, !1335, !1337, !1339, !1341, !1343, !1345, !1347, !1349, !1351, !1353, !1355, !1357, !1359, !1361, !1363, !1365, !1367, !1369, !1371, !1373, !1387, !1389, !1391, !1393, !1395, !1397, !1399, !1401, !1403, !1405, !1407, !1409, !1411, !1413, !1415, !1417, !1419, !1135, !1421, !1423, !1436, !1438, !1440, !1442, !1444, !1446, !1448}
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1137, file: !1306, line: 762, type: !1307, isLocal: false, isDefinition: true, align: 16)
!1306 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 96, elements: !1308)
!1308 = !{!1309}
!1309 = !DISubrange(count: 6)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1137, file: !1306, line: 762, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1137, file: !1306, line: 762, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1315)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1316)
!1316 = !{!1317, !1321}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1315, file: !143, line: 60, baseType: !1318, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 32)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!103, !1166}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1315, file: !143, line: 65, baseType: !1166, size: 32, offset: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1137, file: !1306, line: 766, type: !1324, isLocal: false, isDefinition: true, align: 16)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 80, elements: !1325)
!1325 = !{!1326}
!1326 = !DISubrange(count: 5)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1137, file: !1306, line: 766, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1137, file: !1306, line: 766, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1137, file: !1306, line: 770, type: !1307, isLocal: false, isDefinition: true, align: 16)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1137, file: !1306, line: 770, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1137, file: !1306, line: 770, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1137, file: !1306, line: 774, type: !1324, isLocal: false, isDefinition: true, align: 16)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1137, file: !1306, line: 774, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1137, file: !1306, line: 774, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1137, file: !1306, line: 778, type: !1324, isLocal: false, isDefinition: true, align: 16)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1137, file: !1306, line: 778, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1137, file: !1306, line: 778, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1137, file: !1306, line: 782, type: !1324, isLocal: false, isDefinition: true, align: 16)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1137, file: !1306, line: 782, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1137, file: !1306, line: 782, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1137, file: !1306, line: 786, type: !1324, isLocal: false, isDefinition: true, align: 16)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1137, file: !1306, line: 786, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1137, file: !1306, line: 786, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1137, file: !1306, line: 790, type: !1324, isLocal: false, isDefinition: true, align: 16)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1137, file: !1306, line: 790, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1137, file: !1306, line: 790, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1137, file: !1306, line: 794, type: !1324, isLocal: false, isDefinition: true, align: 16)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1137, file: !1306, line: 794, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1137, file: !1306, line: 794, type: !1314, isLocal: true, isDefinition: true, align: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1137, file: !1306, line: 762, type: !1375, isLocal: true, isDefinition: true)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1376, line: 237, size: 128, elements: !1377)
!1376 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1377 = !{!1378, !1379, !1380}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1375, file: !1376, line: 239, baseType: !1235, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1375, file: !1376, line: 241, baseType: !1166, size: 32, offset: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1375, file: !1376, line: 243, baseType: !1381, size: 64, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1213, line: 40, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1213, line: 35, size: 64, elements: !1383)
!1383 = !{!1384, !1386}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1382, file: !1213, line: 36, baseType: !1385, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1382, file: !1213, line: 37, baseType: !1385, size: 32, offset: 32)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1137, file: !1306, line: 762, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1137, file: !1306, line: 766, type: !1375, isLocal: true, isDefinition: true)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1137, file: !1306, line: 766, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1137, file: !1306, line: 770, type: !1375, isLocal: true, isDefinition: true)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1137, file: !1306, line: 770, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1137, file: !1306, line: 774, type: !1375, isLocal: true, isDefinition: true)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1137, file: !1306, line: 774, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1137, file: !1306, line: 778, type: !1375, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1137, file: !1306, line: 778, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1137, file: !1306, line: 782, type: !1375, isLocal: true, isDefinition: true)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1137, file: !1306, line: 782, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1137, file: !1306, line: 786, type: !1375, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1137, file: !1306, line: 786, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1137, file: !1306, line: 790, type: !1375, isLocal: true, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1137, file: !1306, line: 790, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1137, file: !1306, line: 794, type: !1375, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1137, file: !1306, line: 794, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1137, file: !1306, line: 656, type: !1159, isLocal: true, isDefinition: true)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1137, file: !1306, line: 766, type: !1425, isLocal: true, isDefinition: true)
!1425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1426)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1376, line: 224, size: 160, elements: !1427)
!1427 = !{!1428, !1429, !1430, !1431}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1426, file: !1376, line: 226, baseType: !1230, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1426, file: !1376, line: 228, baseType: !857, size: 32, offset: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1426, file: !1376, line: 230, baseType: !103, size: 32, offset: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1426, file: !1376, line: 231, baseType: !1432, size: 64, offset: 96)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !853, line: 343, size: 64, elements: !1433)
!1433 = !{!1434, !1435}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1432, file: !853, line: 344, baseType: !132, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1432, file: !853, line: 345, baseType: !132, size: 32, offset: 32)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1137, file: !1306, line: 770, type: !1425, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1137, file: !1306, line: 774, type: !1425, isLocal: true, isDefinition: true)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1137, file: !1306, line: 778, type: !1425, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1137, file: !1306, line: 782, type: !1425, isLocal: true, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1137, file: !1306, line: 786, type: !1425, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1137, file: !1306, line: 790, type: !1425, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1137, file: !1306, line: 794, type: !1425, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1452, file: !1623, line: 1914, type: !1697, isLocal: true, isDefinition: true)
!1452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1454, retainedTypes: !1487, globals: !1620, splitDebugInlining: false, nameTableKind: None)
!1453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!1454 = !{!30, !1455, !1462, !1469, !1476, !1482, !808}
!1455 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !212, line: 47, baseType: !32, size: 32, elements: !1456)
!1456 = !{!1457, !1458, !1459, !1460, !1461}
!1457 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1458 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1459 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1460 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1461 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1462 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !212, line: 75, baseType: !32, size: 32, elements: !1463)
!1463 = !{!1464, !1465, !1466, !1467, !1468}
!1464 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1465 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1466 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1467 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1468 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1469 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !212, line: 92, baseType: !32, size: 32, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475}
!1471 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1472 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1473 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1474 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1475 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1476 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !212, line: 84, baseType: !32, size: 32, elements: !1477)
!1477 = !{!1478, !1479, !1480, !1481}
!1478 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1479 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1480 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1481 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1482 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !212, line: 107, baseType: !32, size: 32, elements: !1483)
!1483 = !{!1484, !1485, !1486}
!1484 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1485 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1486 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1487 = !{!102, !103, !1488, !164, !163, !1567, !132, !901, !1578, !340, !1617, !1619}
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !1491)
!1491 = !{!1492, !1511, !1515, !1519, !1532, !1537, !1541, !1545, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1490, file: !212, line: 365, baseType: !1493, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!103, !1496, !233}
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1499)
!1499 = !{!1500, !1501, !1502, !1503, !1509, !1510}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1498, file: !152, line: 380, baseType: !155, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1498, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1498, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1498, file: !152, line: 386, baseType: !1504, size: 32, offset: 96)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 32)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1506)
!1506 = !{!1507, !1508}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1505, file: !152, line: 359, baseType: !163, size: 8)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1505, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1498, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1498, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1490, file: !212, line: 366, baseType: !1512, size: 32, offset: 32)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 32)
!1513 = !DISubroutineType(types: !1514)
!1514 = !{null, !1496, !164}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1490, file: !212, line: 374, baseType: !1516, size: 32, offset: 64)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!103, !1496}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1490, file: !212, line: 377, baseType: !1520, size: 32, offset: 96)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!103, !1496, !1523}
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1525)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !1526)
!1526 = !{!1527, !1528, !1529, !1530, !1531}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1525, file: !212, line: 123, baseType: !132, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1525, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1525, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1525, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1525, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1490, file: !212, line: 379, baseType: !1533, size: 32, offset: 128)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!103, !1496, !1536}
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1490, file: !212, line: 384, baseType: !1538, size: 32, offset: 160)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!103, !1496, !264, !103}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1490, file: !212, line: 393, baseType: !1542, size: 32, offset: 192)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 32)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!103, !1496, !270, !271}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1490, file: !212, line: 402, baseType: !1546, size: 32, offset: 224)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{null, !1496}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1490, file: !212, line: 405, baseType: !1546, size: 32, offset: 256)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1490, file: !212, line: 408, baseType: !1516, size: 32, offset: 288)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1490, file: !212, line: 411, baseType: !1546, size: 32, offset: 320)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1490, file: !212, line: 414, baseType: !1546, size: 32, offset: 352)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1490, file: !212, line: 417, baseType: !1516, size: 32, offset: 384)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1490, file: !212, line: 420, baseType: !1516, size: 32, offset: 416)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1490, file: !212, line: 423, baseType: !1546, size: 32, offset: 448)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1490, file: !212, line: 426, baseType: !1546, size: 32, offset: 480)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1490, file: !212, line: 429, baseType: !1516, size: 32, offset: 512)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1490, file: !212, line: 432, baseType: !1516, size: 32, offset: 544)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1490, file: !212, line: 435, baseType: !1560, size: 32, offset: 576)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{null, !1496, !1563, !102}
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !1564)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{null, !1496, !102}
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !127, line: 670, baseType: !1569)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 661, size: 224, elements: !1570)
!1570 = !{!1571, !1572, !1573, !1574, !1575, !1576, !1577}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1569, file: !127, line: 663, baseType: !131, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1569, file: !127, line: 664, baseType: !131, size: 32, offset: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1569, file: !127, line: 665, baseType: !131, size: 32, offset: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1569, file: !127, line: 666, baseType: !131, size: 32, offset: 96)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1569, file: !127, line: 667, baseType: !131, size: 32, offset: 128)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1569, file: !127, line: 668, baseType: !131, size: 32, offset: 160)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1569, file: !127, line: 669, baseType: !131, size: 32, offset: 192)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !809, line: 100, size: 224, elements: !1581)
!1581 = !{!1582, !1587, !1588, !1597, !1602, !1607, !1612}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1580, file: !809, line: 101, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !809, line: 76, baseType: !1584)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 32)
!1585 = !DISubroutineType(types: !1586)
!1586 = !{!103, !1496, !901}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1580, file: !809, line: 102, baseType: !1583, size: 32, offset: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1580, file: !809, line: 103, baseType: !1589, size: 32, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !809, line: 83, baseType: !1590)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 32)
!1591 = !DISubroutineType(types: !1592)
!1592 = !{!103, !1496, !901, !1593, !102}
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !809, line: 72, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{null, !1496, !901, !102}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1580, file: !809, line: 104, baseType: !1598, size: 32, offset: 96)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !809, line: 79, baseType: !1599)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!103, !1496, !901, !857}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1580, file: !809, line: 105, baseType: !1603, size: 32, offset: 128)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !809, line: 88, baseType: !1604)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 32)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{!808, !1496, !901}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1580, file: !809, line: 106, baseType: !1608, size: 32, offset: 160)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !809, line: 92, baseType: !1609)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!103, !1496, !901, !927}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1580, file: !809, line: 107, baseType: !1613, size: 32, offset: 192)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !809, line: 96, baseType: !1614)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 32)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{!103, !1496, !901, !102}
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1618)
!1618 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!1620 = !{!1621, !1627, !1629, !1636, !1450, !1638, !1646, !1669, !1672, !1675, !1686, !1688}
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1452, file: !1623, line: 1914, type: !1624, isLocal: false, isDefinition: true, align: 16)
!1623 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 128, elements: !1625)
!1625 = !{!1626}
!1626 = !DISubrange(count: 8)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1452, file: !1623, line: 1914, type: !1497, isLocal: false, isDefinition: true, align: 32)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1452, file: !1623, line: 1914, type: !1631, isLocal: true, isDefinition: true, align: 32)
!1631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1633)
!1633 = !{!1634, !1635}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1632, file: !143, line: 60, baseType: !1516, size: 32)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1632, file: !143, line: 65, baseType: !1496, size: 32, offset: 32)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1452, file: !1623, line: 1914, type: !1505, isLocal: true, isDefinition: true, align: 8)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1452, file: !1623, line: 1914, type: !1640, isLocal: true, isDefinition: true)
!1640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1641, size: 64, elements: !496)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !853, line: 343, size: 64, elements: !1643)
!1643 = !{!1644, !1645}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1642, file: !853, line: 344, baseType: !132, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1642, file: !853, line: 345, baseType: !132, size: 32, offset: 32)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1452, file: !1623, line: 1914, type: !1648, isLocal: true, isDefinition: true)
!1648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1650, line: 60, size: 64, elements: !1651)
!1650 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1651 = !{!1652, !1668}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1649, file: !1650, line: 69, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1655)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1650, line: 50, size: 64, elements: !1656)
!1656 = !{!1657, !1666, !1667}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1655, file: !1650, line: 52, baseType: !1658, size: 32)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1660)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1661, line: 37, baseType: !1662)
!1661 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1661, line: 32, size: 64, elements: !1663)
!1663 = !{!1664, !1665}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1662, file: !1661, line: 34, baseType: !132, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1662, file: !1661, line: 36, baseType: !132, size: 32, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1655, file: !1650, line: 54, baseType: !163, size: 8, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1655, file: !1650, line: 56, baseType: !163, size: 8, offset: 40)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1649, file: !1650, line: 71, baseType: !163, size: 8, offset: 32)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1452, file: !1623, line: 1914, type: !1671, isLocal: true, isDefinition: true)
!1671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1654, size: 64, elements: !496)
!1672 = !DIGlobalVariableExpression(var: !1673, expr: !DIExpression())
!1673 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1452, file: !1623, line: 1914, type: !1674, isLocal: true, isDefinition: true)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1659, size: 128, elements: !397)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1677, file: !1623, line: 1914, type: !1680, isLocal: true, isDefinition: true, align: 32)
!1677 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1623, file: !1623, line: 1914, type: !1547, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !1678)
!1678 = !{!1679}
!1679 = !DILocalVariable(name: "dev", arg: 1, scope: !1677, file: !1623, line: 1914, type: !1496)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1680, file: !10, line: 55, baseType: !344, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1680, file: !10, line: 57, baseType: !344, size: 32, offset: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1680, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1680, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1452, file: !1623, line: 1539, type: !1489, isLocal: true, isDefinition: true)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1452, file: !1623, line: 1914, type: !1690, isLocal: true, isDefinition: true)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1691, line: 74, size: 128, elements: !1692)
!1691 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1692 = !{!1693, !1694, !1695, !1696}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1690, file: !1691, line: 76, baseType: !132, size: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1690, file: !1691, line: 78, baseType: !1496, size: 32, offset: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1690, file: !1691, line: 80, baseType: !1563, size: 32, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1690, file: !1691, line: 81, baseType: !102, size: 32, offset: 96)
!1697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1698)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1691, line: 22, size: 256, elements: !1699)
!1699 = !{!1700, !1701, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1712}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1698, file: !1691, line: 24, baseType: !1567, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1698, file: !1691, line: 26, baseType: !1702, size: 32, offset: 32)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1698, file: !1691, line: 28, baseType: !356, size: 32, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1698, file: !1691, line: 30, baseType: !166, size: 8, offset: 96)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1698, file: !1691, line: 32, baseType: !103, size: 32, offset: 128)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1698, file: !1691, line: 34, baseType: !166, size: 8, offset: 160)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1698, file: !1691, line: 36, baseType: !166, size: 8, offset: 168)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1698, file: !1691, line: 38, baseType: !166, size: 8, offset: 176)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1698, file: !1691, line: 40, baseType: !166, size: 8, offset: 184)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1698, file: !1691, line: 41, baseType: !1711, size: 32, offset: 192)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1698, file: !1691, line: 44, baseType: !1713, size: 32, offset: 224)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !212, line: 150, baseType: !1546)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1716, file: !1796, line: 65, type: !131, isLocal: true, isDefinition: true)
!1716 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1717, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1718, retainedTypes: !1719, globals: !1793, splitDebugInlining: false, nameTableKind: None)
!1717 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!1718 = !{!576}
!1719 = !{!1720, !1722, !344, !163, !132, !1730, !1761}
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1721, line: 46, baseType: !432)
!1721 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !507, line: 770, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 764, size: 128, elements: !1725)
!1725 = !{!1726, !1727, !1728, !1729}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1724, file: !507, line: 766, baseType: !131, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1724, file: !507, line: 767, baseType: !131, size: 32, offset: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1724, file: !507, line: 768, baseType: !131, size: 32, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1724, file: !507, line: 769, baseType: !511, size: 32, offset: 96)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !1733)
!1733 = !{!1734, !1736, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1751, !1756, !1760}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1732, file: !507, line: 413, baseType: !1735, size: 256)
!1735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 256, elements: !1625)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1732, file: !507, line: 414, baseType: !1737, size: 768, offset: 256)
!1737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 768, elements: !1738)
!1738 = !{!1739}
!1739 = !DISubrange(count: 24)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1732, file: !507, line: 415, baseType: !1735, size: 256, offset: 1024)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1732, file: !507, line: 416, baseType: !1737, size: 768, offset: 1280)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1732, file: !507, line: 417, baseType: !1735, size: 256, offset: 2048)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1732, file: !507, line: 418, baseType: !1737, size: 768, offset: 2304)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1732, file: !507, line: 419, baseType: !1735, size: 256, offset: 3072)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1732, file: !507, line: 420, baseType: !1737, size: 768, offset: 3328)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1732, file: !507, line: 421, baseType: !1735, size: 256, offset: 4096)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1732, file: !507, line: 422, baseType: !1748, size: 1792, offset: 4352)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 1792, elements: !1749)
!1749 = !{!1750}
!1750 = !DISubrange(count: 56)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1732, file: !507, line: 423, baseType: !1752, size: 1920, offset: 6144)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1753, size: 1920, elements: !1754)
!1753 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !163)
!1754 = !{!1755}
!1755 = !DISubrange(count: 240)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1732, file: !507, line: 424, baseType: !1757, size: 20608, offset: 8064)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 20608, elements: !1758)
!1758 = !{!1759}
!1759 = !DISubrange(count: 644)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1732, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1769, !1770, !1771, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1784, !1785, !1786, !1788, !1790, !1792}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1763, file: !507, line: 447, baseType: !511, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1763, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1763, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1763, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1763, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1763, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1763, file: !507, line: 453, baseType: !1772, size: 96, offset: 192)
!1772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1753, size: 96, elements: !1773)
!1773 = !{!1774}
!1774 = !DISubrange(count: 12)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1763, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1763, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1763, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1763, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1763, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1763, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1763, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1763, file: !507, line: 461, baseType: !1783, size: 64, offset: 512)
!1783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 64, elements: !397)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1763, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1763, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1763, file: !507, line: 464, baseType: !1787, size: 128, offset: 640)
!1787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 128, elements: !680)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1763, file: !507, line: 465, baseType: !1789, size: 160, offset: 768)
!1789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 160, elements: !1325)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1763, file: !507, line: 466, baseType: !1791, size: 160, offset: 928)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 160, elements: !1325)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1763, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!1793 = !{!1794, !1820, !1823, !1825, !1827, !1714}
!1794 = !DIGlobalVariableExpression(var: !1795, expr: !DIExpression())
!1795 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1716, file: !1796, line: 285, type: !1797, isLocal: true, isDefinition: true, align: 32)
!1796 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1798)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1799)
!1799 = !{!1800, !1819}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1798, file: !143, line: 60, baseType: !1801, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!103, !1804}
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1806)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1807)
!1807 = !{!1808, !1809, !1810, !1811, !1817, !1818}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1806, file: !152, line: 380, baseType: !155, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1806, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1806, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1806, file: !152, line: 386, baseType: !1812, size: 32, offset: 96)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1814)
!1814 = !{!1815, !1816}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1813, file: !152, line: 359, baseType: !163, size: 8)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1813, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1806, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1806, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1798, file: !143, line: 65, baseType: !1804, size: 32, offset: 32)
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "lock", scope: !1716, file: !1796, line: 34, type: !1822, isLocal: true, isDefinition: true)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!1823 = !DIGlobalVariableExpression(var: !1824, expr: !DIExpression())
!1824 = distinct !DIGlobalVariable(name: "last_load", scope: !1716, file: !1796, line: 36, type: !132, isLocal: true, isDefinition: true)
!1825 = !DIGlobalVariableExpression(var: !1826, expr: !DIExpression())
!1826 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1716, file: !1796, line: 48, type: !132, isLocal: true, isDefinition: true)
!1827 = !DIGlobalVariableExpression(var: !1828, expr: !DIExpression())
!1828 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1716, file: !1796, line: 54, type: !132, isLocal: true, isDefinition: true)
!1829 = !DIGlobalVariableExpression(var: !1830, expr: !DIExpression())
!1830 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1831, file: !1913, line: 22, type: !1915, isLocal: true, isDefinition: true)
!1831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1832, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1833, retainedTypes: !1834, globals: !1910, splitDebugInlining: false, nameTableKind: None)
!1832 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!1833 = !{!1140, !1146}
!1834 = !{!1835, !1899, !1904, !1193, !1146, !1140, !1909, !102}
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1837)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1141, line: 523, size: 288, elements: !1838)
!1838 = !{!1839, !1858, !1862, !1866, !1870, !1871, !1872, !1876, !1895}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1837, file: !1141, line: 524, baseType: !1840, size: 32)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{!103, !1843, !1181, !1182}
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1846)
!1846 = !{!1847, !1848, !1849, !1850, !1856, !1857}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1845, file: !152, line: 380, baseType: !155, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1845, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1845, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1845, file: !152, line: 386, baseType: !1851, size: 32, offset: 96)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 32)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1853)
!1853 = !{!1854, !1855}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1852, file: !152, line: 359, baseType: !163, size: 8)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1852, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1845, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1845, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1837, file: !1141, line: 530, baseType: !1859, size: 32, offset: 32)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!103, !1843, !1187}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1837, file: !1141, line: 532, baseType: !1863, size: 32, offset: 64)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = !DISubroutineType(types: !1865)
!1865 = !{!103, !1843, !1193, !1188}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1837, file: !1141, line: 535, baseType: !1867, size: 32, offset: 96)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1868 = !DISubroutineType(types: !1869)
!1869 = !{!103, !1843, !1193}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1837, file: !1141, line: 537, baseType: !1867, size: 32, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1837, file: !1141, line: 539, baseType: !1867, size: 32, offset: 160)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1837, file: !1141, line: 541, baseType: !1873, size: 32, offset: 192)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!103, !1843, !1181, !1140, !1146}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1837, file: !1141, line: 544, baseType: !1877, size: 32, offset: 224)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!1878 = !DISubroutineType(types: !1879)
!1879 = !{!103, !1843, !1880, !166}
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1141, line: 478, size: 96, elements: !1882)
!1882 = !{!1883, !1889, !1894}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1881, file: !1141, line: 482, baseType: !1884, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1213, line: 33, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1213, line: 29, size: 32, elements: !1886)
!1886 = !{!1887}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1885, file: !1213, line: 30, baseType: !1888, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1881, file: !1141, line: 485, baseType: !1890, size: 32, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1141, line: 464, baseType: !1891)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!1892 = !DISubroutineType(types: !1893)
!1893 = !{null, !1843, !1880, !1193}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1881, file: !1141, line: 493, baseType: !1193, size: 32, offset: 64)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1837, file: !1141, line: 547, baseType: !1896, size: 32, offset: 256)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = !DISubroutineType(types: !1898)
!1898 = !{!132, !1843}
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1141, line: 428, size: 32, elements: !1902)
!1902 = !{!1903}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1901, file: !1141, line: 434, baseType: !1193, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1906)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1141, line: 441, size: 32, elements: !1907)
!1907 = !{!1908}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1906, file: !1141, line: 447, baseType: !1193, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1910 = !{!1911, !1829}
!1911 = !DIGlobalVariableExpression(var: !1912, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1912 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1831, file: !1913, line: 37, type: !1914, isLocal: true, isDefinition: true)
!1913 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !356)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 352, elements: !1917)
!1916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1843)
!1917 = !{!1918}
!1918 = !DISubrange(count: 11)
!1919 = !DIGlobalVariableExpression(var: !1920, expr: !DIExpression())
!1920 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1921, file: !1961, line: 139, type: !1967, isLocal: false, isDefinition: true)
!1921 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1922, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1923, globals: !1958, splitDebugInlining: false, nameTableKind: None)
!1922 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!1923 = !{!1924}
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 532, baseType: !1926)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 500, size: 1088, elements: !1927)
!1927 = !{!1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1926, file: !127, line: 502, baseType: !131, size: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1926, file: !127, line: 503, baseType: !131, size: 32, offset: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1926, file: !127, line: 504, baseType: !131, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1926, file: !127, line: 505, baseType: !131, size: 32, offset: 96)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1926, file: !127, line: 506, baseType: !131, size: 32, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1926, file: !127, line: 507, baseType: !131, size: 32, offset: 160)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1926, file: !127, line: 508, baseType: !131, size: 32, offset: 192)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1926, file: !127, line: 509, baseType: !132, size: 32, offset: 224)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1926, file: !127, line: 510, baseType: !131, size: 32, offset: 256)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1926, file: !127, line: 511, baseType: !131, size: 32, offset: 288)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1926, file: !127, line: 512, baseType: !831, size: 64, offset: 320)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1926, file: !127, line: 513, baseType: !131, size: 32, offset: 384)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1926, file: !127, line: 514, baseType: !131, size: 32, offset: 416)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1926, file: !127, line: 515, baseType: !131, size: 32, offset: 448)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1926, file: !127, line: 516, baseType: !132, size: 32, offset: 480)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1926, file: !127, line: 517, baseType: !131, size: 32, offset: 512)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1926, file: !127, line: 518, baseType: !131, size: 32, offset: 544)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1926, file: !127, line: 519, baseType: !831, size: 64, offset: 576)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1926, file: !127, line: 520, baseType: !131, size: 32, offset: 640)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1926, file: !127, line: 521, baseType: !131, size: 32, offset: 672)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1926, file: !127, line: 522, baseType: !131, size: 32, offset: 704)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1926, file: !127, line: 523, baseType: !132, size: 32, offset: 736)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1926, file: !127, line: 524, baseType: !131, size: 32, offset: 768)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1926, file: !127, line: 525, baseType: !131, size: 32, offset: 800)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1926, file: !127, line: 526, baseType: !831, size: 64, offset: 832)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1926, file: !127, line: 527, baseType: !131, size: 32, offset: 896)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1926, file: !127, line: 528, baseType: !131, size: 32, offset: 928)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1926, file: !127, line: 529, baseType: !831, size: 64, offset: 960)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1926, file: !127, line: 530, baseType: !131, size: 32, offset: 1024)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1926, file: !127, line: 531, baseType: !131, size: 32, offset: 1056)
!1958 = !{!1959, !1962, !1919}
!1959 = !DIGlobalVariableExpression(var: !1960, expr: !DIExpression())
!1960 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1921, file: !1961, line: 137, type: !132, isLocal: false, isDefinition: true)
!1961 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1962 = !DIGlobalVariableExpression(var: !1963, expr: !DIExpression())
!1963 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1921, file: !1961, line: 138, type: !1964, isLocal: false, isDefinition: true)
!1964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 128, elements: !1965)
!1965 = !{!1966}
!1966 = !DISubrange(count: 16)
!1967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 64, elements: !1625)
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1970, file: !1973, line: 23, type: !271, isLocal: false, isDefinition: true)
!1970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1971, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1972, splitDebugInlining: false, nameTableKind: None)
!1971 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!1972 = !{!1968}
!1973 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1974 = !DIGlobalVariableExpression(var: !1975, expr: !DIExpression())
!1975 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1976, file: !1980, line: 86, type: !2227, isLocal: false, isDefinition: true, align: 512)
!1976 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1977, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1978, retainedTypes: !1987, globals: !2060, splitDebugInlining: false, nameTableKind: None)
!1977 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!1978 = !{!1979, !30, !576}
!1979 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1980, line: 63, baseType: !32, size: 32, elements: !1981)
!1980 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1981 = !{!1982, !1983, !1984, !1985, !1986}
!1982 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1983 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1984 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1985 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1986 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1987 = !{!22, !356, !102, !103, !1988, !1083, !132, !2018, !344, !163, !2043}
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1990)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1991, line: 51, size: 64, elements: !1992)
!1991 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1992 = !{!1993, !2013}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1990, file: !1991, line: 52, baseType: !1994, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1991, line: 38, baseType: !1995)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32)
!1996 = !DISubroutineType(types: !1997)
!1997 = !{!103, !1998, !270, !340}
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !2001)
!2001 = !{!2002, !2003, !2004, !2005, !2011, !2012}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2000, file: !152, line: 380, baseType: !155, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2000, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2000, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2000, file: !152, line: 386, baseType: !2006, size: 32, offset: 96)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 32)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !2008)
!2008 = !{!2009, !2010}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2007, file: !152, line: 359, baseType: !163, size: 8)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2007, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2000, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2000, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1990, file: !1991, line: 53, baseType: !2014, size: 32, offset: 32)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1991, line: 47, baseType: !2015)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 32)
!2016 = !DISubroutineType(types: !2017)
!2017 = !{!103, !1998, !270, !340, !132}
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2020, file: !507, line: 447, baseType: !511, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2020, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2020, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2020, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2020, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2020, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2020, file: !507, line: 453, baseType: !1772, size: 96, offset: 192)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2020, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2020, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2020, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2020, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2020, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2020, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2020, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2020, file: !507, line: 461, baseType: !1783, size: 64, offset: 512)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2020, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2020, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2020, file: !507, line: 464, baseType: !1787, size: 128, offset: 640)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2020, file: !507, line: 465, baseType: !1789, size: 160, offset: 768)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2020, file: !507, line: 466, baseType: !1791, size: 160, offset: 928)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2020, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !2045)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !2046)
!2046 = !{!2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2045, file: !507, line: 413, baseType: !1735, size: 256)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2045, file: !507, line: 414, baseType: !1737, size: 768, offset: 256)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2045, file: !507, line: 415, baseType: !1735, size: 256, offset: 1024)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2045, file: !507, line: 416, baseType: !1737, size: 768, offset: 1280)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2045, file: !507, line: 417, baseType: !1735, size: 256, offset: 2048)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2045, file: !507, line: 418, baseType: !1737, size: 768, offset: 2304)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2045, file: !507, line: 419, baseType: !1735, size: 256, offset: 3072)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2045, file: !507, line: 420, baseType: !1737, size: 768, offset: 3328)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2045, file: !507, line: 421, baseType: !1735, size: 256, offset: 4096)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2045, file: !507, line: 422, baseType: !1748, size: 1792, offset: 4352)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2045, file: !507, line: 423, baseType: !1752, size: 1920, offset: 6144)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2045, file: !507, line: 424, baseType: !1757, size: 20608, offset: 8064)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2045, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!2060 = !{!2061, !2183, !2192, !2194, !1974, !2197, !2199, !2204}
!2061 = !DIGlobalVariableExpression(var: !2062, expr: !DIExpression())
!2062 = distinct !DIGlobalVariable(name: "_kernel", scope: !1976, file: !1980, line: 40, type: !2063, isLocal: false, isDefinition: true)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !316, line: 158, size: 288, elements: !2064)
!2064 = !{!2065, !2178}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2063, file: !316, line: 159, baseType: !2066, size: 192)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2067, size: 192, elements: !496)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !316, line: 100, size: 192, elements: !2068)
!2068 = !{!2069, !2070, !2071, !2172, !2173, !2174, !2175}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2067, file: !316, line: 102, baseType: !132, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2067, file: !316, line: 105, baseType: !1083, size: 32, offset: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2067, file: !316, line: 108, baseType: !2072, size: 32, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2074)
!2074 = !{!2075, !2133, !2145, !2146, !2147, !2148, !2154, !2167}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2073, file: !367, line: 247, baseType: !2076, size: 384)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2077)
!2077 = !{!2078, !2102, !2109, !2110, !2111, !2120, !2121, !2122}
!2078 = !DIDerivedType(tag: DW_TAG_member, scope: !2076, file: !367, line: 60, baseType: !2079, size: 64)
!2079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2076, file: !367, line: 60, size: 64, elements: !2080)
!2080 = !{!2081, !2096}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2079, file: !367, line: 61, baseType: !2082, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2083)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2084)
!2084 = !{!2085, !2091}
!2085 = !DIDerivedType(tag: DW_TAG_member, scope: !2083, file: !321, line: 38, baseType: !2086, size: 32)
!2086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2083, file: !321, line: 38, size: 32, elements: !2087)
!2087 = !{!2088, !2090}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2086, file: !321, line: 39, baseType: !2089, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2086, file: !321, line: 40, baseType: !2089, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, scope: !2083, file: !321, line: 42, baseType: !2092, size: 32, offset: 32)
!2092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2083, file: !321, line: 42, size: 32, elements: !2093)
!2093 = !{!2094, !2095}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2092, file: !321, line: 43, baseType: !2089, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2092, file: !321, line: 44, baseType: !2089, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2079, file: !367, line: 62, baseType: !2097, size: 64)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !2098)
!2098 = !{!2099}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2097, file: !392, line: 50, baseType: !2100, size: 64)
!2100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2101, size: 64, elements: !397)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2076, file: !367, line: 68, baseType: !2103, size: 32, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !2106)
!2106 = !{!2107}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2105, file: !316, line: 232, baseType: !2108, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2083)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2076, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2076, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!2111 = !DIDerivedType(tag: DW_TAG_member, scope: !2076, file: !367, line: 90, baseType: !2112, size: 16, offset: 112)
!2112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2076, file: !367, line: 90, size: 16, elements: !2113)
!2113 = !{!2114, !2119}
!2114 = !DIDerivedType(tag: DW_TAG_member, scope: !2112, file: !367, line: 91, baseType: !2115, size: 16)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2112, file: !367, line: 91, size: 16, elements: !2116)
!2116 = !{!2117, !2118}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2115, file: !367, line: 96, baseType: !415, size: 8)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2115, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2112, file: !367, line: 100, baseType: !340, size: 16)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2076, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2076, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2076, file: !367, line: 131, baseType: !2123, size: 192, offset: 192)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2124)
!2124 = !{!2125, !2126, !2132}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2123, file: !316, line: 245, baseType: !2082, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2123, file: !316, line: 246, baseType: !2127, size: 32, offset: 64)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2128)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 32)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{null, !2131}
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2123, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2073, file: !367, line: 250, baseType: !2134, size: 288, offset: 384)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2135)
!2135 = !{!2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2134, file: !436, line: 26, baseType: !132, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2134, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2134, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2134, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2134, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2134, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2134, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2134, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2134, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2073, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2073, file: !367, line: 256, baseType: !2104, size: 64, offset: 704)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2073, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2073, file: !367, line: 300, baseType: !2149, size: 96, offset: 800)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2150)
!2150 = !{!2151, !2152, !2153}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2149, file: !367, line: 153, baseType: !22, size: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2149, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2149, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2073, file: !367, line: 325, baseType: !2155, size: 32, offset: 896)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 32)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !2157)
!2157 = !{!2158, !2164, !2165}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2156, file: !312, line: 5074, baseType: !2159, size: 96)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !2160)
!2160 = !{!2161, !2162, !2163}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2159, file: !462, line: 57, baseType: !465, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2159, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2159, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2156, file: !312, line: 5075, baseType: !2104, size: 64, offset: 96)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2156, file: !312, line: 5076, baseType: !2166, offset: 160)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2073, file: !367, line: 343, baseType: !2168, size: 64, offset: 928)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2169)
!2169 = !{!2170, !2171}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2168, file: !436, line: 63, baseType: !132, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2168, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2067, file: !316, line: 111, baseType: !2072, size: 32, offset: 96)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2067, file: !316, line: 124, baseType: !103, size: 32, offset: 128)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2067, file: !316, line: 127, baseType: !163, size: 8, offset: 160)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2067, file: !316, line: 153, baseType: !2176, offset: 168)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2177, line: 33, elements: !473)
!2177 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2063, file: !316, line: 170, baseType: !2179, size: 96, offset: 192)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !316, line: 83, size: 96, elements: !2180)
!2180 = !{!2181, !2182}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2179, file: !316, line: 86, baseType: !2072, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2179, file: !316, line: 90, baseType: !2108, size: 64, offset: 32)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1976, file: !1980, line: 43, type: !2185, isLocal: false, isDefinition: true, align: 512)
!2185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2186, size: 8704, elements: !2190)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2187, line: 47, size: 8, elements: !2188)
!2187 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2188 = !{!2189}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2186, file: !2187, line: 48, baseType: !108, size: 8)
!2190 = !{!2191}
!2191 = !DISubrange(count: 1088)
!2192 = !DIGlobalVariableExpression(var: !2193, expr: !DIExpression())
!2193 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1976, file: !1980, line: 44, type: !2073, isLocal: false, isDefinition: true)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1976, file: !1980, line: 48, type: !2196, isLocal: false, isDefinition: true)
!2196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2073, size: 1024, elements: !496)
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1976, file: !1980, line: 217, type: !166, isLocal: false, isDefinition: true)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1976, file: !1980, line: 50, type: !2201, isLocal: true, isDefinition: true, align: 512)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2186, size: 3072, elements: !2202)
!2202 = !{!497, !2203}
!2203 = !DISubrange(count: 384)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "levels", scope: !2206, file: !1980, line: 232, type: !2226, isLocal: true, isDefinition: true)
!2206 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1980, file: !1980, line: 230, type: !2207, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !2209)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{null, !1979}
!2209 = !{!2210, !2211, !2221, !2225}
!2210 = !DILocalVariable(name: "level", arg: 1, scope: !2206, file: !1980, line: 230, type: !1979)
!2211 = !DILocalVariable(name: "entry", scope: !2206, file: !1980, line: 244, type: !2212)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2214)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !2215)
!2215 = !{!2216, !2220}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2214, file: !143, line: 60, baseType: !2217, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!103, !1998}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2214, file: !143, line: 65, baseType: !1998, size: 32, offset: 32)
!2221 = !DILocalVariable(name: "dev", scope: !2222, file: !1980, line: 247, type: !1998)
!2222 = distinct !DILexicalBlock(scope: !2223, file: !1980, line: 246, column: 64)
!2223 = distinct !DILexicalBlock(scope: !2224, file: !1980, line: 246, column: 2)
!2224 = distinct !DILexicalBlock(scope: !2206, file: !1980, line: 246, column: 2)
!2225 = !DILocalVariable(name: "rc", scope: !2222, file: !1980, line: 248, type: !103)
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2212, size: 192, elements: !1308)
!2227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2186, size: 16896, elements: !2228)
!2228 = !{!497, !2229}
!2229 = !DISubrange(count: 2112)
!2230 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression())
!2231 = distinct !DIGlobalVariable(name: "states_str", scope: !2232, file: !2233, line: 276, type: !2354, isLocal: true, isDefinition: true)
!2232 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2233, file: !2233, line: 271, type: !2234, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !2345)
!2233 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2234 = !DISubroutineType(types: !2235)
!2235 = !{!155, !2236, !1083, !356}
!2236 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !2237)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2239)
!2239 = !{!2240, !2298, !2310, !2311, !2312, !2313, !2319, !2332}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2238, file: !367, line: 247, baseType: !2241, size: 384)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2242)
!2242 = !{!2243, !2267, !2274, !2275, !2276, !2285, !2286, !2287}
!2243 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !367, line: 60, baseType: !2244, size: 64)
!2244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !367, line: 60, size: 64, elements: !2245)
!2245 = !{!2246, !2261}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2244, file: !367, line: 61, baseType: !2247, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2248)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2249)
!2249 = !{!2250, !2256}
!2250 = !DIDerivedType(tag: DW_TAG_member, scope: !2248, file: !321, line: 38, baseType: !2251, size: 32)
!2251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2248, file: !321, line: 38, size: 32, elements: !2252)
!2252 = !{!2253, !2255}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2251, file: !321, line: 39, baseType: !2254, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2251, file: !321, line: 40, baseType: !2254, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, scope: !2248, file: !321, line: 42, baseType: !2257, size: 32, offset: 32)
!2257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2248, file: !321, line: 42, size: 32, elements: !2258)
!2258 = !{!2259, !2260}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2257, file: !321, line: 43, baseType: !2254, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2257, file: !321, line: 44, baseType: !2254, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2244, file: !367, line: 62, baseType: !2262, size: 64)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !2263)
!2263 = !{!2264}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2262, file: !392, line: 50, baseType: !2265, size: 64)
!2265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2266, size: 64, elements: !397)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2241, file: !367, line: 68, baseType: !2268, size: 32, offset: 64)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !2270)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !2271)
!2271 = !{!2272}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2270, file: !316, line: 232, baseType: !2273, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2248)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2241, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2241, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!2276 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !367, line: 90, baseType: !2277, size: 16, offset: 112)
!2277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !367, line: 90, size: 16, elements: !2278)
!2278 = !{!2279, !2284}
!2279 = !DIDerivedType(tag: DW_TAG_member, scope: !2277, file: !367, line: 91, baseType: !2280, size: 16)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2277, file: !367, line: 91, size: 16, elements: !2281)
!2281 = !{!2282, !2283}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2280, file: !367, line: 96, baseType: !415, size: 8)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2280, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2277, file: !367, line: 100, baseType: !340, size: 16)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2241, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2241, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2241, file: !367, line: 131, baseType: !2288, size: 192, offset: 192)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2289)
!2289 = !{!2290, !2291, !2297}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2288, file: !316, line: 245, baseType: !2247, size: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2288, file: !316, line: 246, baseType: !2292, size: 32, offset: 64)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2293)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{null, !2296}
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2288, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2238, file: !367, line: 250, baseType: !2299, size: 288, offset: 384)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2300)
!2300 = !{!2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2299, file: !436, line: 26, baseType: !132, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2299, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2299, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2299, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2299, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2299, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2299, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2299, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2299, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2238, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2238, file: !367, line: 256, baseType: !2269, size: 64, offset: 704)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2238, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2238, file: !367, line: 300, baseType: !2314, size: 96, offset: 800)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2315)
!2315 = !{!2316, !2317, !2318}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2314, file: !367, line: 153, baseType: !22, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2314, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2314, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2238, file: !367, line: 325, baseType: !2320, size: 32, offset: 896)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 32)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !2322)
!2322 = !{!2323, !2329, !2330}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2321, file: !312, line: 5074, baseType: !2324, size: 96)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !2325)
!2325 = !{!2326, !2327, !2328}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2324, file: !462, line: 57, baseType: !465, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2324, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2324, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2321, file: !312, line: 5075, baseType: !2269, size: 64, offset: 96)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2321, file: !312, line: 5076, baseType: !2331, offset: 160)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2238, file: !367, line: 343, baseType: !2333, size: 64, offset: 928)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2334)
!2334 = !{!2335, !2336}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2333, file: !436, line: 63, baseType: !132, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2333, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!2337 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2338, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2339, globals: !2341, splitDebugInlining: false, nameTableKind: None)
!2338 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2339 = !{!102, !155, !1720, !163, !103, !2340, !24, !356, !1083, !22, !132, !1617}
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2341 = !{!2230, !2342}
!2342 = !DIGlobalVariableExpression(var: !2343, expr: !DIExpression())
!2343 = distinct !DIGlobalVariable(name: "states_sz", scope: !2232, file: !2233, line: 279, type: !2344, isLocal: true, isDefinition: true)
!2344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1914, size: 256, elements: !1625)
!2345 = !{!2346, !2347, !2348, !2349, !2350, !2351, !2352}
!2346 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2232, file: !2233, line: 271, type: !2236)
!2347 = !DILocalVariable(name: "buf", arg: 2, scope: !2232, file: !2233, line: 271, type: !1083)
!2348 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2232, file: !2233, line: 271, type: !356)
!2349 = !DILocalVariable(name: "off", scope: !2232, file: !2233, line: 273, type: !356)
!2350 = !DILocalVariable(name: "bit", scope: !2232, file: !2233, line: 274, type: !163)
!2351 = !DILocalVariable(name: "thread_state", scope: !2232, file: !2233, line: 275, type: !163)
!2352 = !DILocalVariable(name: "index", scope: !2353, file: !2233, line: 293, type: !163)
!2353 = distinct !DILexicalBlock(scope: !2232, file: !2233, line: 293, column: 2)
!2354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 256, elements: !1625)
!2355 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression())
!2356 = distinct !DIGlobalVariable(name: "lock", scope: !2357, file: !2376, line: 39, type: !2377, isLocal: true, isDefinition: true)
!2357 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2358, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2359, globals: !2375, splitDebugInlining: false, nameTableKind: None)
!2358 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2359 = !{!102, !166, !103, !2360}
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 32)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2362)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2363)
!2363 = !{!2364, !2370}
!2364 = !DIDerivedType(tag: DW_TAG_member, scope: !2362, file: !321, line: 38, baseType: !2365, size: 32)
!2365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2362, file: !321, line: 38, size: 32, elements: !2366)
!2366 = !{!2367, !2369}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2365, file: !321, line: 39, baseType: !2368, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2365, file: !321, line: 40, baseType: !2368, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, scope: !2362, file: !321, line: 42, baseType: !2371, size: 32, offset: 32)
!2371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2362, file: !321, line: 42, size: 32, elements: !2372)
!2372 = !{!2373, !2374}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2371, file: !321, line: 43, baseType: !2368, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2371, file: !321, line: 44, baseType: !2368, size: 32)
!2375 = !{!2355}
!2376 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2378 = !DIGlobalVariableExpression(var: !2379, expr: !DIExpression())
!2379 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2380, file: !2488, line: 56, type: !2477, isLocal: false, isDefinition: true)
!2380 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2381, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2382, globals: !2485, splitDebugInlining: false, nameTableKind: None)
!2381 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2382 = !{!2383, !1083, !102, !2483, !270, !1720, !344, !103, !132, !1617, !2484}
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2385)
!2385 = !{!2386, !2444, !2456, !2457, !2458, !2459, !2465, !2478}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2384, file: !367, line: 247, baseType: !2387, size: 384)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2388)
!2388 = !{!2389, !2413, !2420, !2421, !2422, !2431, !2432, !2433}
!2389 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !367, line: 60, baseType: !2390, size: 64)
!2390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !367, line: 60, size: 64, elements: !2391)
!2391 = !{!2392, !2407}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2390, file: !367, line: 61, baseType: !2393, size: 64)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2394)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2395)
!2395 = !{!2396, !2402}
!2396 = !DIDerivedType(tag: DW_TAG_member, scope: !2394, file: !321, line: 38, baseType: !2397, size: 32)
!2397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2394, file: !321, line: 38, size: 32, elements: !2398)
!2398 = !{!2399, !2401}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2397, file: !321, line: 39, baseType: !2400, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2397, file: !321, line: 40, baseType: !2400, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, scope: !2394, file: !321, line: 42, baseType: !2403, size: 32, offset: 32)
!2403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2394, file: !321, line: 42, size: 32, elements: !2404)
!2404 = !{!2405, !2406}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2403, file: !321, line: 43, baseType: !2400, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2403, file: !321, line: 44, baseType: !2400, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2390, file: !367, line: 62, baseType: !2408, size: 64)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !2409)
!2409 = !{!2410}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2408, file: !392, line: 50, baseType: !2411, size: 64)
!2411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2412, size: 64, elements: !397)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2387, file: !367, line: 68, baseType: !2414, size: 32, offset: 64)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !2416)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !2417)
!2417 = !{!2418}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2416, file: !316, line: 232, baseType: !2419, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2394)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2387, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2387, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!2422 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !367, line: 90, baseType: !2423, size: 16, offset: 112)
!2423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !367, line: 90, size: 16, elements: !2424)
!2424 = !{!2425, !2430}
!2425 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !367, line: 91, baseType: !2426, size: 16)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2423, file: !367, line: 91, size: 16, elements: !2427)
!2427 = !{!2428, !2429}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2426, file: !367, line: 96, baseType: !415, size: 8)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2426, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2423, file: !367, line: 100, baseType: !340, size: 16)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2387, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2387, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2387, file: !367, line: 131, baseType: !2434, size: 192, offset: 192)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2435)
!2435 = !{!2436, !2437, !2443}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2434, file: !316, line: 245, baseType: !2393, size: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2434, file: !316, line: 246, baseType: !2438, size: 32, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2439)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{null, !2442}
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2434, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2384, file: !367, line: 250, baseType: !2445, size: 288, offset: 384)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2446)
!2446 = !{!2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2445, file: !436, line: 26, baseType: !132, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2445, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2445, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2445, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2445, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2445, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2445, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2445, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2445, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2384, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2384, file: !367, line: 256, baseType: !2415, size: 64, offset: 704)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2384, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2384, file: !367, line: 300, baseType: !2460, size: 96, offset: 800)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2461)
!2461 = !{!2462, !2463, !2464}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2460, file: !367, line: 153, baseType: !22, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2460, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2460, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2384, file: !367, line: 325, baseType: !2466, size: 32, offset: 896)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !2468)
!2468 = !{!2469, !2475, !2476}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2467, file: !312, line: 5074, baseType: !2470, size: 96)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !2471)
!2471 = !{!2472, !2473, !2474}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2470, file: !462, line: 57, baseType: !465, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2470, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2470, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2467, file: !312, line: 5075, baseType: !2415, size: 64, offset: 96)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2467, file: !312, line: 5076, baseType: !2477, offset: 160)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2384, file: !367, line: 343, baseType: !2479, size: 64, offset: 928)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2480)
!2480 = !{!2481, !2482}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2479, file: !436, line: 63, baseType: !132, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2479, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 32)
!2485 = !{!2378, !2486, !2489, !2491}
!2486 = !DIGlobalVariableExpression(var: !2487, expr: !DIExpression())
!2487 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2380, file: !2488, line: 404, type: !103, isLocal: true, isDefinition: true)
!2488 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2489 = !DIGlobalVariableExpression(var: !2490, expr: !DIExpression())
!2490 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2380, file: !2488, line: 405, type: !103, isLocal: true, isDefinition: true)
!2491 = !DIGlobalVariableExpression(var: !2492, expr: !DIExpression())
!2492 = distinct !DIGlobalVariable(name: "pending_current", scope: !2380, file: !2488, line: 425, type: !2383, isLocal: true, isDefinition: true)
!2493 = !DIGlobalVariableExpression(var: !2494, expr: !DIExpression())
!2494 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2495, file: !2525, line: 15, type: !1617, isLocal: true, isDefinition: true)
!2495 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2496, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2497, globals: !2522, splitDebugInlining: false, nameTableKind: None)
!2496 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2497 = !{!1720, !102, !344, !132, !1617, !103, !2498, !1083, !432}
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 32)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2500)
!2500 = !{!2501, !2516, !2521}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2499, file: !316, line: 245, baseType: !2502, size: 64)
!2502 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2503)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2504)
!2504 = !{!2505, !2511}
!2505 = !DIDerivedType(tag: DW_TAG_member, scope: !2503, file: !321, line: 38, baseType: !2506, size: 32)
!2506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2503, file: !321, line: 38, size: 32, elements: !2507)
!2507 = !{!2508, !2510}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2506, file: !321, line: 39, baseType: !2509, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2506, file: !321, line: 40, baseType: !2509, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, scope: !2503, file: !321, line: 42, baseType: !2512, size: 32, offset: 32)
!2512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2503, file: !321, line: 42, size: 32, elements: !2513)
!2513 = !{!2514, !2515}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2512, file: !321, line: 43, baseType: !2509, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2512, file: !321, line: 44, baseType: !2509, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2499, file: !316, line: 246, baseType: !2517, size: 32, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2518)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 32)
!2519 = !DISubroutineType(types: !2520)
!2520 = !{null, !2498}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2499, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2522 = !{!2493, !2523, !2527, !2529}
!2523 = !DIGlobalVariableExpression(var: !2524, expr: !DIExpression())
!2524 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2495, file: !2525, line: 19, type: !2526, isLocal: true, isDefinition: true)
!2525 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2527 = !DIGlobalVariableExpression(var: !2528, expr: !DIExpression())
!2528 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2495, file: !2525, line: 25, type: !103, isLocal: true, isDefinition: true)
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2495, file: !2525, line: 17, type: !2531, isLocal: true, isDefinition: true)
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2503)
!2532 = !DIGlobalVariableExpression(var: !2533, expr: !DIExpression())
!2533 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2534, file: !2553, line: 55, type: !2554, isLocal: true, isDefinition: true, align: 32)
!2534 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2535, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2536, globals: !2552, splitDebugInlining: false, nameTableKind: None)
!2535 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2536 = !{!102, !1720, !103, !2537}
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2539)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2540)
!2540 = !{!2541, !2547}
!2541 = !DIDerivedType(tag: DW_TAG_member, scope: !2539, file: !321, line: 38, baseType: !2542, size: 32)
!2542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2539, file: !321, line: 38, size: 32, elements: !2543)
!2543 = !{!2544, !2546}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2542, file: !321, line: 39, baseType: !2545, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2542, file: !321, line: 40, baseType: !2545, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, scope: !2539, file: !321, line: 42, baseType: !2548, size: 32, offset: 32)
!2548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2539, file: !321, line: 42, size: 32, elements: !2549)
!2549 = !{!2550, !2551}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2548, file: !321, line: 43, baseType: !2545, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2548, file: !321, line: 44, baseType: !2545, size: 32)
!2552 = !{!2532}
!2553 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2555)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !2556)
!2556 = !{!2557, !2564}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2555, file: !143, line: 60, baseType: !2558, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 32)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{!103, !2561}
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2563)
!2563 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !143, line: 48, flags: DIFlagFwdDecl)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2555, file: !143, line: 65, baseType: !2561, size: 32, offset: 32)
!2565 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2566, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2566 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2569 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2570, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2571, retainedTypes: !2579, splitDebugInlining: false, nameTableKind: None)
!2570 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2571 = !{!30, !2572}
!2572 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2573, line: 54, baseType: !32, size: 32, elements: !2574)
!2573 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2574 = !{!2575, !2576, !2577, !2578}
!2575 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2576 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2577 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2578 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2579 = !{!102, !356, !270, !24, !2580, !22, !2586, !103, !857, !2601}
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2573, line: 58, baseType: !2582)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2573, line: 58, size: 64, elements: !2583)
!2583 = !{!2584}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2582, file: !2573, line: 58, baseType: !2585, size: 64)
!2585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1625)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 32)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2573, line: 68, size: 128, elements: !2588)
!2588 = !{!2589, !2592, !2593, !2594}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2587, file: !2573, line: 69, baseType: !2590, size: 64)
!2590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2591, size: 64, elements: !397)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2573, line: 61, baseType: !132)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2587, file: !2573, line: 70, baseType: !2591, size: 32, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2587, file: !2573, line: 71, baseType: !132, size: 32, offset: 96)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2587, file: !2573, line: 77, baseType: !2595, offset: 128)
!2595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2596, elements: !2599)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2573, line: 64, size: 32, elements: !2597)
!2597 = !{!2598}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2596, file: !2573, line: 65, baseType: !2591, size: 32)
!2599 = !{!2600}
!2600 = !DISubrange(count: 0)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 32)
!2602 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2603, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2604, retainedTypes: !2624, splitDebugInlining: false, nameTableKind: None)
!2603 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2604 = !{!2605, !2613}
!2605 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2606, line: 69, baseType: !32, size: 32, elements: !2607)
!2606 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2607 = !{!2608, !2609, !2610, !2611, !2612}
!2608 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2609 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2610 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2611 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2612 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2613 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2606, line: 56, baseType: !32, size: 32, elements: !2614)
!2614 = !{!2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623}
!2615 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2616 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2617 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2618 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2619 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2620 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2621 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2622 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2623 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2624 = !{!103, !2605, !2613, !2625, !416, !173, !2627, !2628, !164, !341, !155, !356, !102, !22, !32, !2630, !2631, !2632, !1113, !2633, !433, !2634, !2626, !2635, !2636, !2637, !2638}
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2606, line: 31, baseType: !2626)
!2626 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !433)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !357, line: 329, baseType: !32)
!2628 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2606, line: 32, baseType: !2629)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1618)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !357, line: 145, baseType: !103)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 32)
!2639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2640, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2640 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2641 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2642, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2643, splitDebugInlining: false, nameTableKind: None)
!2642 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2643 = !{!163, !102, !103, !2644, !1720, !132, !1617}
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 32)
!2645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2646)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !2647)
!2647 = !{!2648, !2667, !2671, !2675, !2688, !2693, !2697, !2701, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2646, file: !212, line: 365, baseType: !2649, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 32)
!2650 = !DISubroutineType(types: !2651)
!2651 = !{!103, !2652, !233}
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2654)
!2654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !2655)
!2655 = !{!2656, !2657, !2658, !2659, !2665, !2666}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2654, file: !152, line: 380, baseType: !155, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2654, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2654, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2654, file: !152, line: 386, baseType: !2660, size: 32, offset: 96)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 32)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !2662)
!2662 = !{!2663, !2664}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2661, file: !152, line: 359, baseType: !163, size: 8)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2661, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2654, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2654, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2646, file: !212, line: 366, baseType: !2668, size: 32, offset: 32)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 32)
!2669 = !DISubroutineType(types: !2670)
!2670 = !{null, !2652, !164}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2646, file: !212, line: 374, baseType: !2672, size: 32, offset: 64)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!2673 = !DISubroutineType(types: !2674)
!2674 = !{!103, !2652}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2646, file: !212, line: 377, baseType: !2676, size: 32, offset: 96)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 32)
!2677 = !DISubroutineType(types: !2678)
!2678 = !{!103, !2652, !2679}
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 32)
!2680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2681)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !2682)
!2682 = !{!2683, !2684, !2685, !2686, !2687}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2681, file: !212, line: 123, baseType: !132, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2681, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2681, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2681, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2681, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2646, file: !212, line: 379, baseType: !2689, size: 32, offset: 128)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 32)
!2690 = !DISubroutineType(types: !2691)
!2691 = !{!103, !2652, !2692}
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !2646, file: !212, line: 384, baseType: !2694, size: 32, offset: 160)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 32)
!2695 = !DISubroutineType(types: !2696)
!2696 = !{!103, !2652, !264, !103}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !2646, file: !212, line: 393, baseType: !2698, size: 32, offset: 192)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 32)
!2699 = !DISubroutineType(types: !2700)
!2700 = !{!103, !2652, !270, !271}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !2646, file: !212, line: 402, baseType: !2702, size: 32, offset: 224)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 32)
!2703 = !DISubroutineType(types: !2704)
!2704 = !{null, !2652}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !2646, file: !212, line: 405, baseType: !2702, size: 32, offset: 256)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !2646, file: !212, line: 408, baseType: !2672, size: 32, offset: 288)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !2646, file: !212, line: 411, baseType: !2702, size: 32, offset: 320)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !2646, file: !212, line: 414, baseType: !2702, size: 32, offset: 352)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !2646, file: !212, line: 417, baseType: !2672, size: 32, offset: 384)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !2646, file: !212, line: 420, baseType: !2672, size: 32, offset: 416)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !2646, file: !212, line: 423, baseType: !2702, size: 32, offset: 448)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !2646, file: !212, line: 426, baseType: !2702, size: 32, offset: 480)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !2646, file: !212, line: 429, baseType: !2672, size: 32, offset: 512)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !2646, file: !212, line: 432, baseType: !2672, size: 32, offset: 544)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !2646, file: !212, line: 435, baseType: !2716, size: 32, offset: 576)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2717 = !DISubroutineType(types: !2718)
!2718 = !{null, !2652, !2719, !102}
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !2720)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 32)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{null, !2652, !102}
!2723 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2724, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2725, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2724 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2725 = !{!2726, !30}
!2726 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2727, line: 27, baseType: !32, size: 32, elements: !2728)
!2727 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2728 = !{!2729, !2730, !2731, !2732, !2733}
!2729 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2730 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2731 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2732 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2733 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2734 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2735, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2736, retainedTypes: !2737, splitDebugInlining: false, nameTableKind: None)
!2735 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2736 = !{!576, !2726, !30}
!2737 = !{!763, !2738, !102, !103, !344, !132, !163, !2755}
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !2740)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !2741)
!2741 = !{!2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2740, file: !507, line: 413, baseType: !1735, size: 256)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2740, file: !507, line: 414, baseType: !1737, size: 768, offset: 256)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2740, file: !507, line: 415, baseType: !1735, size: 256, offset: 1024)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2740, file: !507, line: 416, baseType: !1737, size: 768, offset: 1280)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2740, file: !507, line: 417, baseType: !1735, size: 256, offset: 2048)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2740, file: !507, line: 418, baseType: !1737, size: 768, offset: 2304)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2740, file: !507, line: 419, baseType: !1735, size: 256, offset: 3072)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2740, file: !507, line: 420, baseType: !1737, size: 768, offset: 3328)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2740, file: !507, line: 421, baseType: !1735, size: 256, offset: 4096)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2740, file: !507, line: 422, baseType: !1748, size: 1792, offset: 4352)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2740, file: !507, line: 423, baseType: !1752, size: 1920, offset: 6144)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2740, file: !507, line: 424, baseType: !1757, size: 20608, offset: 8064)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2740, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2757)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2758)
!2758 = !{!2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2757, file: !507, line: 447, baseType: !511, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2757, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2757, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2757, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2757, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2757, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2757, file: !507, line: 453, baseType: !1772, size: 96, offset: 192)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2757, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2757, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2757, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2757, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2757, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2757, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2757, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2757, file: !507, line: 461, baseType: !1783, size: 64, offset: 512)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2757, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2757, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2757, file: !507, line: 464, baseType: !1787, size: 128, offset: 640)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2757, file: !507, line: 465, baseType: !1789, size: 160, offset: 768)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2757, file: !507, line: 466, baseType: !1791, size: 160, offset: 928)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2757, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2780 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2781, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2781 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2782 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2783, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2784, splitDebugInlining: false, nameTableKind: None)
!2783 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2784 = !{!102, !103, !22, !2785}
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2787)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2788)
!2788 = !{!2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2787, file: !507, line: 447, baseType: !511, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2787, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2787, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2787, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2787, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2787, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2787, file: !507, line: 453, baseType: !1772, size: 96, offset: 192)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2787, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2787, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2787, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2787, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2787, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2787, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2787, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2787, file: !507, line: 461, baseType: !1783, size: 64, offset: 512)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2787, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2787, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2787, file: !507, line: 464, baseType: !1787, size: 128, offset: 640)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2787, file: !507, line: 465, baseType: !1789, size: 160, offset: 768)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2787, file: !507, line: 466, baseType: !1791, size: 160, offset: 928)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2787, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2811, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2812, splitDebugInlining: false, nameTableKind: None)
!2811 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2812 = !{!2813, !102, !103}
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2815)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2816)
!2816 = !{!2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2815, file: !507, line: 447, baseType: !511, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2815, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2815, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2815, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2815, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2815, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2815, file: !507, line: 453, baseType: !1772, size: 96, offset: 192)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2815, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2815, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2815, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2815, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2815, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2815, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2815, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2815, file: !507, line: 461, baseType: !1783, size: 64, offset: 512)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2815, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2815, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2815, file: !507, line: 464, baseType: !1787, size: 128, offset: 640)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2815, file: !507, line: 465, baseType: !1789, size: 160, offset: 768)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2815, file: !507, line: 466, baseType: !1791, size: 160, offset: 928)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2815, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2840, splitDebugInlining: false, nameTableKind: None)
!2839 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2840 = !{!2841, !132, !102, !103}
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 32)
!2842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2843, line: 98, size: 256, elements: !2844)
!2843 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2844 = !{!2845, !2850, !2855, !2860, !2865, !2870, !2875, !2880}
!2845 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 99, baseType: !2846, size: 32)
!2846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 99, size: 32, elements: !2847)
!2847 = !{!2848, !2849}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2846, file: !2843, line: 99, baseType: !132, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2846, file: !2843, line: 99, baseType: !132, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 100, baseType: !2851, size: 32, offset: 32)
!2851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 100, size: 32, elements: !2852)
!2852 = !{!2853, !2854}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2851, file: !2843, line: 100, baseType: !132, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2851, file: !2843, line: 100, baseType: !132, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 101, baseType: !2856, size: 32, offset: 64)
!2856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 101, size: 32, elements: !2857)
!2857 = !{!2858, !2859}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2856, file: !2843, line: 101, baseType: !132, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2856, file: !2843, line: 101, baseType: !132, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 102, baseType: !2861, size: 32, offset: 96)
!2861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 102, size: 32, elements: !2862)
!2862 = !{!2863, !2864}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2861, file: !2843, line: 102, baseType: !132, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2861, file: !2843, line: 102, baseType: !132, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 103, baseType: !2866, size: 32, offset: 128)
!2866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 103, size: 32, elements: !2867)
!2867 = !{!2868, !2869}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2866, file: !2843, line: 103, baseType: !132, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2866, file: !2843, line: 103, baseType: !132, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 104, baseType: !2871, size: 32, offset: 160)
!2871 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 104, size: 32, elements: !2872)
!2872 = !{!2873, !2874}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2871, file: !2843, line: 104, baseType: !132, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2871, file: !2843, line: 104, baseType: !132, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 105, baseType: !2876, size: 32, offset: 192)
!2876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 105, size: 32, elements: !2877)
!2877 = !{!2878, !2879}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2876, file: !2843, line: 105, baseType: !132, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2876, file: !2843, line: 105, baseType: !132, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2842, file: !2843, line: 106, baseType: !132, size: 32, offset: 224)
!2881 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2882, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2725, retainedTypes: !2883, splitDebugInlining: false, nameTableKind: None)
!2882 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2883 = !{!2884, !102, !103, !2909, !2601, !132}
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2886)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2887)
!2887 = !{!2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2886, file: !507, line: 447, baseType: !511, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2886, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2886, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2886, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2886, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2886, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2886, file: !507, line: 453, baseType: !1772, size: 96, offset: 192)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2886, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2886, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2886, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2886, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2886, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2886, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2886, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2886, file: !507, line: 461, baseType: !1783, size: 64, offset: 512)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2886, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2886, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2886, file: !507, line: 464, baseType: !1787, size: 128, offset: 640)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2886, file: !507, line: 465, baseType: !1789, size: 160, offset: 768)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2886, file: !507, line: 466, baseType: !1791, size: 160, offset: 928)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2886, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2843, line: 141, baseType: !2911)
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2843, line: 97, size: 256, elements: !2912)
!2912 = !{!2913}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2911, file: !2843, line: 107, baseType: !2914, size: 256)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2843, line: 98, size: 256, elements: !2915)
!2915 = !{!2916, !2921, !2926, !2931, !2936, !2941, !2946, !2951}
!2916 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 99, baseType: !2917, size: 32)
!2917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 99, size: 32, elements: !2918)
!2918 = !{!2919, !2920}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2917, file: !2843, line: 99, baseType: !132, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2917, file: !2843, line: 99, baseType: !132, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 100, baseType: !2922, size: 32, offset: 32)
!2922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 100, size: 32, elements: !2923)
!2923 = !{!2924, !2925}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2922, file: !2843, line: 100, baseType: !132, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2922, file: !2843, line: 100, baseType: !132, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 101, baseType: !2927, size: 32, offset: 64)
!2927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 101, size: 32, elements: !2928)
!2928 = !{!2929, !2930}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2927, file: !2843, line: 101, baseType: !132, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2927, file: !2843, line: 101, baseType: !132, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 102, baseType: !2932, size: 32, offset: 96)
!2932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 102, size: 32, elements: !2933)
!2933 = !{!2934, !2935}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2932, file: !2843, line: 102, baseType: !132, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2932, file: !2843, line: 102, baseType: !132, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 103, baseType: !2937, size: 32, offset: 128)
!2937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 103, size: 32, elements: !2938)
!2938 = !{!2939, !2940}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2937, file: !2843, line: 103, baseType: !132, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2937, file: !2843, line: 103, baseType: !132, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 104, baseType: !2942, size: 32, offset: 160)
!2942 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 104, size: 32, elements: !2943)
!2943 = !{!2944, !2945}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2942, file: !2843, line: 104, baseType: !132, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2942, file: !2843, line: 104, baseType: !132, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 105, baseType: !2947, size: 32, offset: 192)
!2947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 105, size: 32, elements: !2948)
!2948 = !{!2949, !2950}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2947, file: !2843, line: 105, baseType: !132, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2947, file: !2843, line: 105, baseType: !132, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2914, file: !2843, line: 106, baseType: !132, size: 32, offset: 224)
!2952 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2953, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1718, retainedTypes: !2954, splitDebugInlining: false, nameTableKind: None)
!2953 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2954 = !{!763, !344, !163, !132, !2955, !2972}
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 32)
!2956 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !2957)
!2957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !2958)
!2958 = !{!2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2957, file: !507, line: 413, baseType: !1735, size: 256)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2957, file: !507, line: 414, baseType: !1737, size: 768, offset: 256)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2957, file: !507, line: 415, baseType: !1735, size: 256, offset: 1024)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2957, file: !507, line: 416, baseType: !1737, size: 768, offset: 1280)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2957, file: !507, line: 417, baseType: !1735, size: 256, offset: 2048)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2957, file: !507, line: 418, baseType: !1737, size: 768, offset: 2304)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2957, file: !507, line: 419, baseType: !1735, size: 256, offset: 3072)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2957, file: !507, line: 420, baseType: !1737, size: 768, offset: 3328)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2957, file: !507, line: 421, baseType: !1735, size: 256, offset: 4096)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2957, file: !507, line: 422, baseType: !1748, size: 1792, offset: 4352)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2957, file: !507, line: 423, baseType: !1752, size: 1920, offset: 6144)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2957, file: !507, line: 424, baseType: !1757, size: 20608, offset: 8064)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2957, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2974)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2975)
!2975 = !{!2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2974, file: !507, line: 447, baseType: !511, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2974, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2974, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2974, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2974, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2974, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2974, file: !507, line: 453, baseType: !1772, size: 96, offset: 192)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2974, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2974, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2974, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2974, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2974, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2974, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2974, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2974, file: !507, line: 461, baseType: !1783, size: 64, offset: 512)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2974, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2974, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2974, file: !507, line: 464, baseType: !1787, size: 128, offset: 640)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2974, file: !507, line: 465, baseType: !1789, size: 160, offset: 768)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2974, file: !507, line: 466, baseType: !1791, size: 160, offset: 928)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2974, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2997 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2998, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2999, splitDebugInlining: false, nameTableKind: None)
!2998 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!2999 = !{!3000, !102, !103}
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !3002)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !3003)
!3003 = !{!3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3002, file: !507, line: 447, baseType: !511, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3002, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3002, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3002, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3002, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3002, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3002, file: !507, line: 453, baseType: !1772, size: 96, offset: 192)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3002, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3002, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3002, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3002, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3002, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3002, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3002, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3002, file: !507, line: 461, baseType: !1783, size: 64, offset: 512)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3002, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3002, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3002, file: !507, line: 464, baseType: !1787, size: 128, offset: 640)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3002, file: !507, line: 465, baseType: !1789, size: 160, offset: 768)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3002, file: !507, line: 466, baseType: !1791, size: 160, offset: 928)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3002, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!3025 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3026, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3027, splitDebugInlining: false, nameTableKind: None)
!3026 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!3027 = !{!108, !1083, !356, !233, !3028, !164, !102}
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 32)
!3029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!3030 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3031, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3032, splitDebugInlining: false, nameTableKind: None)
!3031 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!3032 = !{!3033}
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 32)
!3034 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 532, baseType: !3035)
!3035 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 500, size: 1088, elements: !3036)
!3036 = !{!3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3035, file: !127, line: 502, baseType: !131, size: 32)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3035, file: !127, line: 503, baseType: !131, size: 32, offset: 32)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3035, file: !127, line: 504, baseType: !131, size: 32, offset: 64)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3035, file: !127, line: 505, baseType: !131, size: 32, offset: 96)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3035, file: !127, line: 506, baseType: !131, size: 32, offset: 128)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3035, file: !127, line: 507, baseType: !131, size: 32, offset: 160)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3035, file: !127, line: 508, baseType: !131, size: 32, offset: 192)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3035, file: !127, line: 509, baseType: !132, size: 32, offset: 224)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3035, file: !127, line: 510, baseType: !131, size: 32, offset: 256)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3035, file: !127, line: 511, baseType: !131, size: 32, offset: 288)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3035, file: !127, line: 512, baseType: !831, size: 64, offset: 320)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3035, file: !127, line: 513, baseType: !131, size: 32, offset: 384)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3035, file: !127, line: 514, baseType: !131, size: 32, offset: 416)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3035, file: !127, line: 515, baseType: !131, size: 32, offset: 448)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3035, file: !127, line: 516, baseType: !132, size: 32, offset: 480)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3035, file: !127, line: 517, baseType: !131, size: 32, offset: 512)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3035, file: !127, line: 518, baseType: !131, size: 32, offset: 544)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3035, file: !127, line: 519, baseType: !831, size: 64, offset: 576)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3035, file: !127, line: 520, baseType: !131, size: 32, offset: 640)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3035, file: !127, line: 521, baseType: !131, size: 32, offset: 672)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3035, file: !127, line: 522, baseType: !131, size: 32, offset: 704)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3035, file: !127, line: 523, baseType: !132, size: 32, offset: 736)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3035, file: !127, line: 524, baseType: !131, size: 32, offset: 768)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3035, file: !127, line: 525, baseType: !131, size: 32, offset: 800)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3035, file: !127, line: 526, baseType: !831, size: 64, offset: 832)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3035, file: !127, line: 527, baseType: !131, size: 32, offset: 896)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3035, file: !127, line: 528, baseType: !131, size: 32, offset: 928)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3035, file: !127, line: 529, baseType: !831, size: 64, offset: 960)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3035, file: !127, line: 530, baseType: !131, size: 32, offset: 1024)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3035, file: !127, line: 531, baseType: !131, size: 32, offset: 1056)
!3067 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3068, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3068 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!3069 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3070, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3071, retainedTypes: !3087, splitDebugInlining: false, nameTableKind: None)
!3070 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!3071 = !{!3072, !3079, !3083}
!3072 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3073, line: 38, baseType: !32, size: 32, elements: !3074)
!3073 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3074 = !{!3075, !3076, !3077, !3078}
!3075 = !DIEnumerator(name: "HAL_OK", value: 0)
!3076 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3077 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3078 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3079 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !804, line: 184, baseType: !32, size: 32, elements: !3080)
!3080 = !{!3081, !3082}
!3081 = !DIEnumerator(name: "RESET", value: 0)
!3082 = !DIEnumerator(name: "SET", value: 1)
!3083 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !804, line: 190, baseType: !32, size: 32, elements: !3084)
!3084 = !{!3085, !3086}
!3085 = !DIEnumerator(name: "DISABLE", value: 0)
!3086 = !DIEnumerator(name: "ENABLE", value: 1)
!3087 = !{!102, !3088, !163, !132, !1619, !3122, !3128, !3139, !340, !3140, !1617}
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 32)
!3089 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 532, baseType: !3090)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 500, size: 1088, elements: !3091)
!3091 = !{!3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3090, file: !127, line: 502, baseType: !131, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3090, file: !127, line: 503, baseType: !131, size: 32, offset: 32)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3090, file: !127, line: 504, baseType: !131, size: 32, offset: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3090, file: !127, line: 505, baseType: !131, size: 32, offset: 96)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3090, file: !127, line: 506, baseType: !131, size: 32, offset: 128)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3090, file: !127, line: 507, baseType: !131, size: 32, offset: 160)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3090, file: !127, line: 508, baseType: !131, size: 32, offset: 192)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3090, file: !127, line: 509, baseType: !132, size: 32, offset: 224)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3090, file: !127, line: 510, baseType: !131, size: 32, offset: 256)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3090, file: !127, line: 511, baseType: !131, size: 32, offset: 288)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3090, file: !127, line: 512, baseType: !831, size: 64, offset: 320)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3090, file: !127, line: 513, baseType: !131, size: 32, offset: 384)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3090, file: !127, line: 514, baseType: !131, size: 32, offset: 416)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3090, file: !127, line: 515, baseType: !131, size: 32, offset: 448)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3090, file: !127, line: 516, baseType: !132, size: 32, offset: 480)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3090, file: !127, line: 517, baseType: !131, size: 32, offset: 512)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3090, file: !127, line: 518, baseType: !131, size: 32, offset: 544)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3090, file: !127, line: 519, baseType: !831, size: 64, offset: 576)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3090, file: !127, line: 520, baseType: !131, size: 32, offset: 640)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3090, file: !127, line: 521, baseType: !131, size: 32, offset: 672)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3090, file: !127, line: 522, baseType: !131, size: 32, offset: 704)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3090, file: !127, line: 523, baseType: !132, size: 32, offset: 736)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3090, file: !127, line: 524, baseType: !131, size: 32, offset: 768)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3090, file: !127, line: 525, baseType: !131, size: 32, offset: 800)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3090, file: !127, line: 526, baseType: !831, size: 64, offset: 832)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3090, file: !127, line: 527, baseType: !131, size: 32, offset: 896)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3090, file: !127, line: 528, baseType: !131, size: 32, offset: 928)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3090, file: !127, line: 529, baseType: !831, size: 64, offset: 960)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3090, file: !127, line: 530, baseType: !131, size: 32, offset: 1024)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3090, file: !127, line: 531, baseType: !131, size: 32, offset: 1056)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 32)
!3123 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !127, line: 494, baseType: !3124)
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 490, size: 64, elements: !3125)
!3125 = !{!3126, !3127}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3124, file: !127, line: 492, baseType: !131, size: 32)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3124, file: !127, line: 493, baseType: !131, size: 32, offset: 32)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 32)
!3129 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !127, line: 369, baseType: !3130)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 360, size: 224, elements: !3131)
!3131 = !{!3132, !3133, !3134, !3135, !3136, !3137, !3138}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3130, file: !127, line: 362, baseType: !131, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3130, file: !127, line: 363, baseType: !131, size: 32, offset: 32)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3130, file: !127, line: 364, baseType: !131, size: 32, offset: 64)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3130, file: !127, line: 365, baseType: !131, size: 32, offset: 96)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3130, file: !127, line: 366, baseType: !131, size: 32, offset: 128)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3130, file: !127, line: 367, baseType: !131, size: 32, offset: 160)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3130, file: !127, line: 368, baseType: !131, size: 32, offset: 192)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 32)
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !127, line: 441, baseType: !3142)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 430, size: 320, elements: !3143)
!3143 = !{!3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3142, file: !127, line: 432, baseType: !131, size: 32)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3142, file: !127, line: 433, baseType: !131, size: 32, offset: 32)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3142, file: !127, line: 434, baseType: !131, size: 32, offset: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3142, file: !127, line: 435, baseType: !131, size: 32, offset: 96)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3142, file: !127, line: 436, baseType: !131, size: 32, offset: 128)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3142, file: !127, line: 437, baseType: !131, size: 32, offset: 160)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3142, file: !127, line: 438, baseType: !131, size: 32, offset: 192)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3142, file: !127, line: 439, baseType: !131, size: 32, offset: 224)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3142, file: !127, line: 440, baseType: !1252, size: 64, offset: 256)
!3153 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3154, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3155, retainedTypes: !3156, splitDebugInlining: false, nameTableKind: None)
!3154 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!3155 = !{!803}
!3156 = !{!3157, !132, !3165, !3171, !3182}
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !507, line: 770, baseType: !3159)
!3159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 764, size: 128, elements: !3160)
!3160 = !{!3161, !3162, !3163, !3164}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3159, file: !507, line: 766, baseType: !131, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3159, file: !507, line: 767, baseType: !131, size: 32, offset: 32)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3159, file: !507, line: 768, baseType: !131, size: 32, offset: 64)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3159, file: !507, line: 769, baseType: !511, size: 32, offset: 96)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !127, line: 494, baseType: !3167)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 490, size: 64, elements: !3168)
!3168 = !{!3169, !3170}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3167, file: !127, line: 492, baseType: !131, size: 32)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3167, file: !127, line: 493, baseType: !131, size: 32, offset: 32)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !127, line: 369, baseType: !3173)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 360, size: 224, elements: !3174)
!3174 = !{!3175, !3176, !3177, !3178, !3179, !3180, !3181}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3173, file: !127, line: 362, baseType: !131, size: 32)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3173, file: !127, line: 363, baseType: !131, size: 32, offset: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3173, file: !127, line: 364, baseType: !131, size: 32, offset: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3173, file: !127, line: 365, baseType: !131, size: 32, offset: 96)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3173, file: !127, line: 366, baseType: !131, size: 32, offset: 128)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3173, file: !127, line: 367, baseType: !131, size: 32, offset: 160)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3173, file: !127, line: 368, baseType: !131, size: 32, offset: 192)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 32)
!3183 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 532, baseType: !3184)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 500, size: 1088, elements: !3185)
!3185 = !{!3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3184, file: !127, line: 502, baseType: !131, size: 32)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3184, file: !127, line: 503, baseType: !131, size: 32, offset: 32)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3184, file: !127, line: 504, baseType: !131, size: 32, offset: 64)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3184, file: !127, line: 505, baseType: !131, size: 32, offset: 96)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3184, file: !127, line: 506, baseType: !131, size: 32, offset: 128)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3184, file: !127, line: 507, baseType: !131, size: 32, offset: 160)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3184, file: !127, line: 508, baseType: !131, size: 32, offset: 192)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3184, file: !127, line: 509, baseType: !132, size: 32, offset: 224)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3184, file: !127, line: 510, baseType: !131, size: 32, offset: 256)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3184, file: !127, line: 511, baseType: !131, size: 32, offset: 288)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3184, file: !127, line: 512, baseType: !831, size: 64, offset: 320)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3184, file: !127, line: 513, baseType: !131, size: 32, offset: 384)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3184, file: !127, line: 514, baseType: !131, size: 32, offset: 416)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3184, file: !127, line: 515, baseType: !131, size: 32, offset: 448)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3184, file: !127, line: 516, baseType: !132, size: 32, offset: 480)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3184, file: !127, line: 517, baseType: !131, size: 32, offset: 512)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3184, file: !127, line: 518, baseType: !131, size: 32, offset: 544)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3184, file: !127, line: 519, baseType: !831, size: 64, offset: 576)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3184, file: !127, line: 520, baseType: !131, size: 32, offset: 640)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3184, file: !127, line: 521, baseType: !131, size: 32, offset: 672)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3184, file: !127, line: 522, baseType: !131, size: 32, offset: 704)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3184, file: !127, line: 523, baseType: !132, size: 32, offset: 736)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3184, file: !127, line: 524, baseType: !131, size: 32, offset: 768)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3184, file: !127, line: 525, baseType: !131, size: 32, offset: 800)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3184, file: !127, line: 526, baseType: !831, size: 64, offset: 832)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3184, file: !127, line: 527, baseType: !131, size: 32, offset: 896)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3184, file: !127, line: 528, baseType: !131, size: 32, offset: 928)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3184, file: !127, line: 529, baseType: !831, size: 64, offset: 960)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3184, file: !127, line: 530, baseType: !131, size: 32, offset: 1024)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3184, file: !127, line: 531, baseType: !131, size: 32, offset: 1056)
!3216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3217, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3218, splitDebugInlining: false, nameTableKind: None)
!3217 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!3218 = !{!102, !356}
!3219 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3220, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3221, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3220 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!3221 = !{!3222, !3229, !30}
!3222 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3223, line: 14, baseType: !32, size: 32, elements: !3224)
!3223 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3224 = !{!3225, !3226, !3227, !3228}
!3225 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3226 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3227 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3228 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3223, line: 42, baseType: !32, size: 32, elements: !3230)
!3230 = !{!3231, !3232, !3233, !3234, !3235, !3236}
!3231 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3232 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3233 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3234 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3235 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3236 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3237 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3238, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3238 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!3239 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3240, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3241, splitDebugInlining: false, nameTableKind: None)
!3240 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!3241 = !{!22, !102, !103}
!3242 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3243, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3243 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!3244 = !{!"Ubuntu clang version 14.0.6"}
!3245 = !{i32 7, !"Dwarf Version", i32 4}
!3246 = !{i32 2, !"Debug Info Version", i32 3}
!3247 = !{i32 1, !"wchar_size", i32 4}
!3248 = !{i32 1, !"min_enum_size", i32 4}
!3249 = !{i32 1, !"branch-target-enforcement", i32 0}
!3250 = !{i32 1, !"sign-return-address", i32 0}
!3251 = !{i32 1, !"sign-return-address-all", i32 0}
!3252 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3253 = !{i32 7, !"frame-pointer", i32 2}
!3254 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3255, file: !3255, line: 26, type: !3256, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !473)
!3255 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3256 = !DISubroutineType(types: !3257)
!3257 = !{null}
!3258 = !DILocation(line: 28, column: 1, scope: !3254)
!3259 = !{i64 2155117746, i64 2155117766, i64 2155117829}
!3260 = !DILocation(line: 29, column: 1, scope: !3254)
!3261 = !{i64 2155118161, i64 2155118181, i64 2155118244}
!3262 = !DILocation(line: 30, column: 1, scope: !3254)
!3263 = !{i64 2155118580, i64 2155118600, i64 2155118663}
!3264 = !DILocation(line: 31, column: 1, scope: !3254)
!3265 = !{i64 2155118999, i64 2155119019, i64 2155119082}
!3266 = !DILocation(line: 33, column: 1, scope: !3254)
!3267 = !{i64 2155119291, i64 2155119311, i64 2155119374}
!3268 = !DILocation(line: 35, column: 1, scope: !3254)
!3269 = !{i64 2155119616, i64 2155119636, i64 2155119699}
!3270 = !DILocation(line: 50, column: 1, scope: !3254)
!3271 = !{i64 2155120043, i64 2155120063, i64 2155120126}
!3272 = !DILocation(line: 54, column: 1, scope: !3254)
!3273 = !{i64 2155120482, i64 2155120502, i64 2155120565}
!3274 = !DILocation(line: 61, column: 1, scope: !3254)
!3275 = !{i64 2155120799, i64 2155120819, i64 2155120882}
!3276 = !DILocation(line: 63, column: 1, scope: !3254)
!3277 = !{i64 2155121179, i64 2155121199, i64 2155121262}
!3278 = !DILocation(line: 64, column: 1, scope: !3254)
!3279 = !{i64 2155121701, i64 2155121721, i64 2155121784}
!3280 = !DILocation(line: 65, column: 1, scope: !3254)
!3281 = !{i64 2155122199, i64 2155122219, i64 2155122282}
!3282 = !DILocation(line: 66, column: 1, scope: !3254)
!3283 = !{i64 2155122681, i64 2155122701, i64 2155122764}
!3284 = !DILocation(line: 67, column: 1, scope: !3254)
!3285 = !{i64 2155123188, i64 2155123208, i64 2155123271}
!3286 = !DILocation(line: 68, column: 1, scope: !3254)
!3287 = !{i64 2155123676, i64 2155123696, i64 2155123759}
!3288 = !DILocation(line: 70, column: 1, scope: !3254)
!3289 = !{i64 2155124144, i64 2155124164, i64 2155124227}
!3290 = !DILocation(line: 71, column: 1, scope: !3254)
!3291 = !{i64 2155124586, i64 2155124606, i64 2155124669}
!3292 = !DILocation(line: 72, column: 1, scope: !3254)
!3293 = !{i64 2155125044, i64 2155125064, i64 2155125127}
!3294 = !DILocation(line: 79, column: 1, scope: !3254)
!3295 = !{i64 2155125498, i64 2155125518, i64 2155125581}
!3296 = !DILocation(line: 80, column: 1, scope: !3254)
!3297 = !{i64 2155126009, i64 2155126029, i64 2155126092}
!3298 = !DILocation(line: 82, column: 1, scope: !3254)
!3299 = !{i64 2155130561, i64 2155130581, i64 2155130644}
!3300 = !DILocation(line: 97, column: 1, scope: !3254)
!3301 = !{i64 2155130898, i64 2155130918, i64 2155130981}
!3302 = !DILocation(line: 99, column: 1, scope: !3254)
!3303 = !{i64 2155131116, i64 2155131136, i64 2155131199}
!3304 = !DILocation(line: 102, column: 1, scope: !3254)
!3305 = !{i64 2155131373, i64 2155131393, i64 2155131456}
!3306 = !DILocation(line: 105, column: 1, scope: !3254)
!3307 = !{i64 2155131613, i64 2155131633, i64 2155131696}
!3308 = !DILocation(line: 115, column: 1, scope: !3254)
!3309 = !{i64 2155131952, i64 2155131972, i64 2155132035}
!3310 = !DILocation(line: 118, column: 1, scope: !3254)
!3311 = !{i64 2155132296, i64 2155132316, i64 2155132379}
!3312 = !DILocation(line: 32, column: 1, scope: !3313)
!3313 = !DILexicalBlockFile(scope: !3254, file: !3314, discriminator: 0)
!3314 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3315 = !{i64 2155132652, i64 2155132672, i64 2155132735}
!3316 = !DILocation(line: 33, column: 1, scope: !3313)
!3317 = !{i64 2155133164, i64 2155133184, i64 2155133247}
!3318 = !DILocation(line: 53, column: 1, scope: !3313)
!3319 = !{i64 2155133672, i64 2155133692, i64 2155133755}
!3320 = !DILocation(line: 54, column: 1, scope: !3313)
!3321 = !{i64 2155134090, i64 2155134110, i64 2155134173}
!3322 = !DILocation(line: 55, column: 1, scope: !3313)
!3323 = !{i64 2155134508, i64 2155134528, i64 2155134591}
!3324 = !DILocation(line: 56, column: 1, scope: !3313)
!3325 = !{i64 2155134926, i64 2155134946, i64 2155135009}
!3326 = !DILocation(line: 57, column: 1, scope: !3313)
!3327 = !{i64 2155135344, i64 2155135364, i64 2155135427}
!3328 = !DILocation(line: 58, column: 1, scope: !3313)
!3329 = !{i64 2155135762, i64 2155135782, i64 2155135845}
!3330 = !DILocation(line: 59, column: 1, scope: !3313)
!3331 = !{i64 2155136180, i64 2155136200, i64 2155136263}
!3332 = !DILocation(line: 60, column: 1, scope: !3313)
!3333 = !{i64 2155136604, i64 2155136624, i64 2155136687}
!3334 = !DILocation(line: 61, column: 1, scope: !3313)
!3335 = !{i64 2155136921, i64 2155136941, i64 2155137004}
!3336 = !DILocation(line: 70, column: 1, scope: !3313)
!3337 = !{i64 2155137150, i64 2155137170, i64 2155137233}
!3338 = !DILocation(line: 72, column: 1, scope: !3313)
!3339 = !{i64 2155137482, i64 2155137502, i64 2155137565}
!3340 = !DILocation(line: 73, column: 1, scope: !3313)
!3341 = !{i64 2155137932, i64 2155137952, i64 2155138015}
!3342 = !DILocation(line: 74, column: 1, scope: !3313)
!3343 = !{i64 2155138382, i64 2155138402, i64 2155138465}
!3344 = !DILocation(line: 75, column: 1, scope: !3313)
!3345 = !{i64 2155138832, i64 2155138852, i64 2155138915}
!3346 = !DILocation(line: 76, column: 1, scope: !3313)
!3347 = !{i64 2155139282, i64 2155139302, i64 2155139365}
!3348 = !DILocation(line: 77, column: 1, scope: !3313)
!3349 = !{i64 2155139732, i64 2155139752, i64 2155139815}
!3350 = !DILocation(line: 78, column: 1, scope: !3313)
!3351 = !{i64 2155144243, i64 2155144263, i64 2155144326}
!3352 = !DILocation(line: 79, column: 1, scope: !3313)
!3353 = !{i64 2155144693, i64 2155144713, i64 2155144776}
!3354 = !DILocation(line: 80, column: 1, scope: !3313)
!3355 = !{i64 2155145146, i64 2155145166, i64 2155145229}
!3356 = !DILocation(line: 84, column: 1, scope: !3313)
!3357 = !{i64 2155145478, i64 2155145498, i64 2155145561}
!3358 = !DILocation(line: 91, column: 1, scope: !3313)
!3359 = !{i64 2155145875, i64 2155145895, i64 2155145958}
!3360 = !DILocation(line: 93, column: 1, scope: !3313)
!3361 = !{i64 2155146242, i64 2155146262, i64 2155146325}
!3362 = !DILocation(line: 106, column: 1, scope: !3313)
!3363 = !{i64 2155146512, i64 2155146532, i64 2155146595}
!3364 = !DILocation(line: 11, column: 1, scope: !3365)
!3365 = !DILexicalBlockFile(scope: !3254, file: !3366, discriminator: 0)
!3366 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3367 = distinct !DISubprogram(name: "main", scope: !105, file: !105, line: 11, type: !3256, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3368)
!3368 = !{!3369}
!3369 = !DILocalVariable(name: "c", scope: !3370, file: !105, line: 20, type: !163)
!3370 = distinct !DILexicalBlock(scope: !3367, file: !105, line: 19, column: 12)
!3371 = !DILocation(line: 13, column: 2, scope: !3367)
!3372 = !DILocation(line: 15, column: 2, scope: !3367)
!3373 = !DILocation(line: 16, column: 2, scope: !3367)
!3374 = !DILocation(line: 17, column: 2, scope: !3367)
!3375 = !DILocation(line: 19, column: 2, scope: !3367)
!3376 = !DILocation(line: 20, column: 15, scope: !3370)
!3377 = !DILocation(line: 0, scope: !3370)
!3378 = !DILocation(line: 22, column: 3, scope: !3370)
!3379 = !DILocation(line: 23, column: 7, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3370, file: !105, line: 23, column: 7)
!3381 = !DILocation(line: 23, column: 9, scope: !3380)
!3382 = !DILocation(line: 23, column: 7, scope: !3370)
!3383 = !DILocation(line: 24, column: 4, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3380, file: !105, line: 23, column: 18)
!3385 = !DILocation(line: 25, column: 3, scope: !3384)
!3386 = distinct !{!3386, !3375, !3387}
!3387 = !DILocation(line: 26, column: 2, scope: !3367)
!3388 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !116, file: !116, line: 45, type: !118, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3389)
!3389 = !{!3390}
!3390 = !DILocalVariable(name: "c", arg: 1, scope: !3388, file: !116, line: 45, type: !103)
!3391 = !DILocation(line: 0, scope: !3388)
!3392 = !DILocation(line: 50, column: 2, scope: !3388)
!3393 = distinct !DISubprogram(name: "__printk_hook_install", scope: !116, file: !116, line: 63, type: !3394, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3396)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{null, !117}
!3396 = !{!3397}
!3397 = !DILocalVariable(name: "fn", arg: 1, scope: !3393, file: !116, line: 63, type: !117)
!3398 = !DILocation(line: 0, scope: !3393)
!3399 = !DILocation(line: 65, column: 12, scope: !3393)
!3400 = !DILocation(line: 66, column: 1, scope: !3393)
!3401 = distinct !DISubprogram(name: "__printk_get_hook", scope: !116, file: !116, line: 76, type: !3402, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !473)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{!102}
!3404 = !DILocation(line: 78, column: 9, scope: !3401)
!3405 = !DILocation(line: 78, column: 2, scope: !3401)
!3406 = distinct !DISubprogram(name: "vprintk", scope: !116, file: !116, line: 113, type: !3407, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3416)
!3407 = !DISubroutineType(types: !3408)
!3408 = !{null, !155, !3409}
!3409 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3410, line: 99, baseType: !3411)
!3410 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3411 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3410, line: 40, baseType: !3412)
!3412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !116, baseType: !3413)
!3413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3414)
!3414 = !{!3415}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3413, file: !116, line: 79, baseType: !102, size: 32)
!3416 = !{!3417, !3418, !3419}
!3417 = !DILocalVariable(name: "fmt", arg: 1, scope: !3406, file: !116, line: 113, type: !155)
!3418 = !DILocalVariable(name: "ap", arg: 2, scope: !3406, file: !116, line: 113, type: !3409)
!3419 = !DILocalVariable(name: "ctx", scope: !3420, file: !116, line: 121, type: !3422)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !116, line: 120, column: 27)
!3421 = distinct !DILexicalBlock(scope: !3406, file: !116, line: 120, column: 6)
!3422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !116, line: 81, size: 32, elements: !3423)
!3423 = !{!3424, !3425}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3422, file: !116, line: 85, baseType: !32, size: 32)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3422, file: !116, line: 86, baseType: !3426, offset: 32)
!3426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, elements: !2599)
!3427 = !DILocation(line: 0, scope: !3406)
!3428 = !DILocation(line: 148, column: 3, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3421, file: !116, line: 138, column: 9)
!3430 = !DILocation(line: 155, column: 1, scope: !3406)
!3431 = distinct !DISubprogram(name: "char_out", scope: !116, file: !116, line: 107, type: !3432, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3434)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!103, !103, !102}
!3434 = !{!3435, !3436}
!3435 = !DILocalVariable(name: "c", arg: 1, scope: !3431, file: !116, line: 107, type: !103)
!3436 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3431, file: !116, line: 107, type: !102)
!3437 = !DILocation(line: 0, scope: !3431)
!3438 = !DILocation(line: 110, column: 9, scope: !3431)
!3439 = !DILocation(line: 110, column: 2, scope: !3431)
!3440 = distinct !DISubprogram(name: "cbvprintf", scope: !3441, file: !3441, line: 739, type: !3442, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3448)
!3441 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3442 = !DISubroutineType(types: !3443)
!3443 = !{!103, !3444, !102, !155, !3409}
!3444 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3441, line: 297, baseType: !3445)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 32)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!103, null}
!3448 = !{!3449, !3450, !3451, !3452}
!3449 = !DILocalVariable(name: "out", arg: 1, scope: !3440, file: !3441, line: 739, type: !3444)
!3450 = !DILocalVariable(name: "ctx", arg: 2, scope: !3440, file: !3441, line: 739, type: !102)
!3451 = !DILocalVariable(name: "format", arg: 3, scope: !3440, file: !3441, line: 739, type: !155)
!3452 = !DILocalVariable(name: "ap", arg: 4, scope: !3440, file: !3441, line: 739, type: !3409)
!3453 = !DILocation(line: 0, scope: !3440)
!3454 = !DILocation(line: 741, column: 9, scope: !3440)
!3455 = !DILocation(line: 741, column: 2, scope: !3440)
!3456 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !116, file: !116, line: 157, type: !3457, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3459)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{null, !1083, !356}
!3459 = !{!3460, !3461, !3462}
!3460 = !DILocalVariable(name: "c", arg: 1, scope: !3456, file: !116, line: 157, type: !1083)
!3461 = !DILocalVariable(name: "n", arg: 2, scope: !3456, file: !116, line: 157, type: !356)
!3462 = !DILocalVariable(name: "i", scope: !3456, file: !116, line: 159, type: !356)
!3463 = !DILocation(line: 0, scope: !3456)
!3464 = !DILocation(line: 164, column: 16, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3466, file: !116, line: 164, column: 2)
!3466 = distinct !DILexicalBlock(scope: !3456, file: !116, line: 164, column: 2)
!3467 = !DILocation(line: 164, column: 2, scope: !3466)
!3468 = !DILocation(line: 165, column: 3, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3465, file: !116, line: 164, column: 26)
!3470 = !DILocation(line: 165, column: 13, scope: !3469)
!3471 = !DILocation(line: 164, column: 22, scope: !3465)
!3472 = distinct !{!3472, !3467, !3473}
!3473 = !DILocation(line: 166, column: 2, scope: !3466)
!3474 = !DILocation(line: 171, column: 1, scope: !3456)
!3475 = distinct !DISubprogram(name: "printk", scope: !116, file: !116, line: 203, type: !3476, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3478)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{null, !155, null}
!3478 = !{!3479, !3480}
!3479 = !DILocalVariable(name: "fmt", arg: 1, scope: !3475, file: !116, line: 203, type: !155)
!3480 = !DILocalVariable(name: "ap", scope: !3475, file: !116, line: 205, type: !3409)
!3481 = !DILocation(line: 0, scope: !3475)
!3482 = !DILocation(line: 205, column: 2, scope: !3475)
!3483 = !DILocation(line: 205, column: 10, scope: !3475)
!3484 = !DILocation(line: 207, column: 2, scope: !3475)
!3485 = !DILocation(line: 209, column: 2, scope: !3475)
!3486 = !DILocation(line: 211, column: 2, scope: !3475)
!3487 = !DILocation(line: 212, column: 1, scope: !3475)
!3488 = distinct !DISubprogram(name: "snprintk", scope: !116, file: !116, line: 239, type: !3489, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3491)
!3489 = !DISubroutineType(types: !3490)
!3490 = !{!103, !1083, !356, !155, null}
!3491 = !{!3492, !3493, !3494, !3495, !3496}
!3492 = !DILocalVariable(name: "str", arg: 1, scope: !3488, file: !116, line: 239, type: !1083)
!3493 = !DILocalVariable(name: "size", arg: 2, scope: !3488, file: !116, line: 239, type: !356)
!3494 = !DILocalVariable(name: "fmt", arg: 3, scope: !3488, file: !116, line: 239, type: !155)
!3495 = !DILocalVariable(name: "ap", scope: !3488, file: !116, line: 241, type: !3409)
!3496 = !DILocalVariable(name: "ret", scope: !3488, file: !116, line: 242, type: !103)
!3497 = !DILocation(line: 0, scope: !3488)
!3498 = !DILocation(line: 241, column: 2, scope: !3488)
!3499 = !DILocation(line: 241, column: 10, scope: !3488)
!3500 = !DILocation(line: 244, column: 2, scope: !3488)
!3501 = !DILocation(line: 245, column: 8, scope: !3488)
!3502 = !DILocation(line: 246, column: 2, scope: !3488)
!3503 = !DILocation(line: 249, column: 1, scope: !3488)
!3504 = !DILocation(line: 248, column: 2, scope: !3488)
!3505 = distinct !DISubprogram(name: "vsnprintk", scope: !116, file: !116, line: 251, type: !3506, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3508)
!3506 = !DISubroutineType(types: !3507)
!3507 = !{!103, !1083, !356, !155, !3409}
!3508 = !{!3509, !3510, !3511, !3512, !3513}
!3509 = !DILocalVariable(name: "str", arg: 1, scope: !3505, file: !116, line: 251, type: !1083)
!3510 = !DILocalVariable(name: "size", arg: 2, scope: !3505, file: !116, line: 251, type: !356)
!3511 = !DILocalVariable(name: "fmt", arg: 3, scope: !3505, file: !116, line: 251, type: !155)
!3512 = !DILocalVariable(name: "ap", arg: 4, scope: !3505, file: !116, line: 251, type: !3409)
!3513 = !DILocalVariable(name: "ctx", scope: !3505, file: !116, line: 253, type: !3514)
!3514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !116, line: 217, size: 96, elements: !3515)
!3515 = !{!3516, !3517, !3518}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3514, file: !116, line: 218, baseType: !1083, size: 32)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3514, file: !116, line: 219, baseType: !103, size: 32, offset: 32)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3514, file: !116, line: 220, baseType: !103, size: 32, offset: 64)
!3519 = !DILocation(line: 0, scope: !3505)
!3520 = !DILocation(line: 253, column: 2, scope: !3505)
!3521 = !DILocation(line: 253, column: 21, scope: !3505)
!3522 = !DILocation(line: 253, column: 27, scope: !3505)
!3523 = !DILocation(line: 255, column: 2, scope: !3505)
!3524 = !DILocation(line: 257, column: 10, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3505, file: !116, line: 257, column: 6)
!3526 = !DILocation(line: 257, column: 22, scope: !3525)
!3527 = !DILocation(line: 257, column: 16, scope: !3525)
!3528 = !DILocation(line: 257, column: 6, scope: !3505)
!3529 = !DILocation(line: 258, column: 3, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3525, file: !116, line: 257, column: 27)
!3531 = !DILocation(line: 258, column: 18, scope: !3530)
!3532 = !DILocation(line: 259, column: 2, scope: !3530)
!3533 = !DILocation(line: 262, column: 1, scope: !3505)
!3534 = !DILocation(line: 261, column: 2, scope: !3505)
!3535 = distinct !DISubprogram(name: "str_out", scope: !116, file: !116, line: 223, type: !3536, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3539)
!3536 = !DISubroutineType(types: !3537)
!3537 = !{!103, !103, !3538}
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 32)
!3539 = !{!3540, !3541}
!3540 = !DILocalVariable(name: "c", arg: 1, scope: !3535, file: !116, line: 223, type: !103)
!3541 = !DILocalVariable(name: "ctx", arg: 2, scope: !3535, file: !116, line: 223, type: !3538)
!3542 = !DILocation(line: 0, scope: !3535)
!3543 = !DILocation(line: 225, column: 11, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3535, file: !116, line: 225, column: 6)
!3545 = !DILocation(line: 225, column: 15, scope: !3544)
!3546 = !DILocation(line: 0, scope: !3544)
!3547 = !DILocation(line: 225, column: 23, scope: !3544)
!3548 = !DILocation(line: 225, column: 45, scope: !3544)
!3549 = !DILocation(line: 225, column: 37, scope: !3544)
!3550 = !DILocation(line: 225, column: 6, scope: !3535)
!3551 = !DILocation(line: 226, column: 8, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3544, file: !116, line: 225, column: 50)
!3553 = !DILocation(line: 226, column: 13, scope: !3552)
!3554 = !DILocation(line: 227, column: 3, scope: !3552)
!3555 = !DILocation(line: 230, column: 29, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3535, file: !116, line: 230, column: 6)
!3557 = !DILocation(line: 230, column: 17, scope: !3556)
!3558 = !DILocation(line: 230, column: 6, scope: !3535)
!3559 = !DILocation(line: 231, column: 22, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3556, file: !116, line: 230, column: 34)
!3561 = !DILocation(line: 231, column: 3, scope: !3560)
!3562 = !DILocation(line: 231, column: 26, scope: !3560)
!3563 = !DILocation(line: 232, column: 2, scope: !3560)
!3564 = !DILocation(line: 233, column: 28, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3556, file: !116, line: 232, column: 9)
!3566 = !DILocation(line: 233, column: 22, scope: !3565)
!3567 = !DILocation(line: 233, column: 3, scope: !3565)
!3568 = !DILocation(line: 233, column: 26, scope: !3565)
!3569 = !DILocation(line: 237, column: 1, scope: !3535)
!3570 = distinct !DISubprogram(name: "z_thread_entry", scope: !3571, file: !3571, line: 30, type: !3572, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2567, retainedNodes: !3579)
!3571 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3572 = !DISubroutineType(types: !3573)
!3573 = !{null, !3574, !102, !102, !102}
!3574 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3575, line: 46, baseType: !3576)
!3575 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 32)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{null, !102, !102, !102}
!3579 = !{!3580, !3581, !3582, !3583}
!3580 = !DILocalVariable(name: "entry", arg: 1, scope: !3570, file: !3571, line: 30, type: !3574)
!3581 = !DILocalVariable(name: "p1", arg: 2, scope: !3570, file: !3571, line: 31, type: !102)
!3582 = !DILocalVariable(name: "p2", arg: 3, scope: !3570, file: !3571, line: 31, type: !102)
!3583 = !DILocalVariable(name: "p3", arg: 4, scope: !3570, file: !3571, line: 31, type: !102)
!3584 = !DILocation(line: 0, scope: !3570)
!3585 = !DILocation(line: 36, column: 2, scope: !3570)
!3586 = !DILocation(line: 38, column: 17, scope: !3570)
!3587 = !DILocation(line: 38, column: 2, scope: !3570)
!3588 = !DILocation(line: 45, column: 2, scope: !3570)
!3589 = distinct !DISubprogram(name: "k_current_get", scope: !312, file: !312, line: 530, type: !3590, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2567, retainedNodes: !473)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{!3592}
!3592 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !3593)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 32)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !3595)
!3595 = !{!3596, !3654, !3666, !3667, !3668, !3669, !3675, !3688}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3594, file: !367, line: 247, baseType: !3597, size: 384)
!3597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !3598)
!3598 = !{!3599, !3623, !3630, !3631, !3632, !3641, !3642, !3643}
!3599 = !DIDerivedType(tag: DW_TAG_member, scope: !3597, file: !367, line: 60, baseType: !3600, size: 64)
!3600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3597, file: !367, line: 60, size: 64, elements: !3601)
!3601 = !{!3602, !3617}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3600, file: !367, line: 61, baseType: !3603, size: 64)
!3603 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !3604)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !3605)
!3605 = !{!3606, !3612}
!3606 = !DIDerivedType(tag: DW_TAG_member, scope: !3604, file: !321, line: 38, baseType: !3607, size: 32)
!3607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3604, file: !321, line: 38, size: 32, elements: !3608)
!3608 = !{!3609, !3611}
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3607, file: !321, line: 39, baseType: !3610, size: 32)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 32)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3607, file: !321, line: 40, baseType: !3610, size: 32)
!3612 = !DIDerivedType(tag: DW_TAG_member, scope: !3604, file: !321, line: 42, baseType: !3613, size: 32, offset: 32)
!3613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3604, file: !321, line: 42, size: 32, elements: !3614)
!3614 = !{!3615, !3616}
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3613, file: !321, line: 43, baseType: !3610, size: 32)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3613, file: !321, line: 44, baseType: !3610, size: 32)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3600, file: !367, line: 62, baseType: !3618, size: 64)
!3618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !3619)
!3619 = !{!3620}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3618, file: !392, line: 50, baseType: !3621, size: 64)
!3621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3622, size: 64, elements: !397)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 32)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3597, file: !367, line: 68, baseType: !3624, size: 32, offset: 64)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 32)
!3625 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !3626)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !3627)
!3627 = !{!3628}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3626, file: !316, line: 232, baseType: !3629, size: 64)
!3629 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !3604)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3597, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3597, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!3632 = !DIDerivedType(tag: DW_TAG_member, scope: !3597, file: !367, line: 90, baseType: !3633, size: 16, offset: 112)
!3633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3597, file: !367, line: 90, size: 16, elements: !3634)
!3634 = !{!3635, !3640}
!3635 = !DIDerivedType(tag: DW_TAG_member, scope: !3633, file: !367, line: 91, baseType: !3636, size: 16)
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !367, line: 91, size: 16, elements: !3637)
!3637 = !{!3638, !3639}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3636, file: !367, line: 96, baseType: !415, size: 8)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3636, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3633, file: !367, line: 100, baseType: !340, size: 16)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3597, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3597, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3597, file: !367, line: 131, baseType: !3644, size: 192, offset: 192)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !3645)
!3645 = !{!3646, !3647, !3653}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3644, file: !316, line: 245, baseType: !3603, size: 64)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3644, file: !316, line: 246, baseType: !3648, size: 32, offset: 64)
!3648 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !3649)
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 32)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{null, !3652}
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3644, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3594, file: !367, line: 250, baseType: !3655, size: 288, offset: 384)
!3655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !3656)
!3656 = !{!3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3655, file: !436, line: 26, baseType: !132, size: 32)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3655, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3655, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3655, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3655, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3655, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3655, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3655, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3655, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3594, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3594, file: !367, line: 256, baseType: !3625, size: 64, offset: 704)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3594, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3594, file: !367, line: 300, baseType: !3670, size: 96, offset: 800)
!3670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !3671)
!3671 = !{!3672, !3673, !3674}
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3670, file: !367, line: 153, baseType: !22, size: 32)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3670, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3670, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3594, file: !367, line: 325, baseType: !3676, size: 32, offset: 896)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 32)
!3677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !3678)
!3678 = !{!3679, !3685, !3686}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3677, file: !312, line: 5074, baseType: !3680, size: 96)
!3680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !3681)
!3681 = !{!3682, !3683, !3684}
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3680, file: !462, line: 57, baseType: !465, size: 32)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3680, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3680, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3677, file: !312, line: 5075, baseType: !3625, size: 64, offset: 96)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3677, file: !312, line: 5076, baseType: !3687, offset: 160)
!3687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3594, file: !367, line: 343, baseType: !3689, size: 64, offset: 928)
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !3690)
!3690 = !{!3691, !3692}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3689, file: !436, line: 63, baseType: !132, size: 32)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3689, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!3693 = !DILocation(line: 535, column: 9, scope: !3589)
!3694 = !DILocation(line: 535, column: 2, scope: !3589)
!3695 = distinct !DISubprogram(name: "k_thread_abort", scope: !3696, file: !3696, line: 188, type: !3697, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2567, retainedNodes: !3699)
!3696 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!3697 = !DISubroutineType(types: !3698)
!3698 = !{null, !3592}
!3699 = !{!3700}
!3700 = !DILocalVariable(name: "thread", arg: 1, scope: !3695, file: !3696, line: 188, type: !3592)
!3701 = !DILocation(line: 0, scope: !3695)
!3702 = !DILocation(line: 197, column: 2, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3695, file: !3696, line: 197, column: 2)
!3704 = !{i64 2154838174}
!3705 = !DILocation(line: 198, column: 2, scope: !3695)
!3706 = !DILocation(line: 199, column: 1, scope: !3695)
!3707 = distinct !DISubprogram(name: "z_current_get", scope: !3696, file: !3696, line: 173, type: !3590, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2567, retainedNodes: !473)
!3708 = !DILocation(line: 180, column: 2, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3707, file: !3696, line: 180, column: 2)
!3710 = !{i64 2154838106}
!3711 = !DILocation(line: 181, column: 9, scope: !3707)
!3712 = !DILocation(line: 181, column: 2, scope: !3707)
!3713 = distinct !DISubprogram(name: "sys_heap_free", scope: !3714, file: !3714, line: 163, type: !3715, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3723)
!3714 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3715 = !DISubroutineType(types: !3716)
!3716 = !{null, !3717, !102}
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 32)
!3718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !3719)
!3719 = !{!3720, !3721, !3722}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3718, file: !462, line: 57, baseType: !2586, size: 32)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3718, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3718, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!3723 = !{!3724, !3725, !3726, !3727}
!3724 = !DILocalVariable(name: "heap", arg: 1, scope: !3713, file: !3714, line: 163, type: !3717)
!3725 = !DILocalVariable(name: "mem", arg: 2, scope: !3713, file: !3714, line: 163, type: !102)
!3726 = !DILocalVariable(name: "h", scope: !3713, file: !3714, line: 168, type: !2586)
!3727 = !DILocalVariable(name: "c", scope: !3713, file: !3714, line: 169, type: !2591)
!3728 = !DILocation(line: 0, scope: !3713)
!3729 = !DILocation(line: 165, column: 10, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3713, file: !3714, line: 165, column: 6)
!3731 = !DILocation(line: 165, column: 6, scope: !3713)
!3732 = !DILocation(line: 168, column: 27, scope: !3713)
!3733 = !DILocation(line: 169, column: 16, scope: !3713)
!3734 = !{i32 0, i32 536870912}
!3735 = !DILocation(line: 187, column: 2, scope: !3713)
!3736 = !DILocation(line: 197, column: 2, scope: !3713)
!3737 = !DILocation(line: 198, column: 1, scope: !3713)
!3738 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3714, file: !3714, line: 157, type: !3739, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3741)
!3739 = !DISubroutineType(types: !3740)
!3740 = !{!2591, !2586, !102}
!3741 = !{!3742, !3743, !3744, !3745}
!3742 = !DILocalVariable(name: "h", arg: 1, scope: !3738, file: !3714, line: 157, type: !2586)
!3743 = !DILocalVariable(name: "p", arg: 2, scope: !3738, file: !3714, line: 157, type: !102)
!3744 = !DILocalVariable(name: "mem", scope: !3738, file: !3714, line: 159, type: !270)
!3745 = !DILocalVariable(name: "base", scope: !3738, file: !3714, line: 159, type: !270)
!3746 = !DILocation(line: 0, scope: !3738)
!3747 = !DILocation(line: 159, column: 39, scope: !3738)
!3748 = !DILocation(line: 160, column: 14, scope: !3738)
!3749 = !DILocation(line: 160, column: 38, scope: !3738)
!3750 = !DILocation(line: 160, column: 46, scope: !3738)
!3751 = !DILocation(line: 160, column: 2, scope: !3738)
!3752 = distinct !DISubprogram(name: "set_chunk_used", scope: !2573, file: !2573, line: 147, type: !3753, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3755)
!3753 = !DISubroutineType(types: !3754)
!3754 = !{null, !2586, !2591, !166}
!3755 = !{!3756, !3757, !3758, !3759, !3760}
!3756 = !DILocalVariable(name: "h", arg: 1, scope: !3752, file: !2573, line: 147, type: !2586)
!3757 = !DILocalVariable(name: "c", arg: 2, scope: !3752, file: !2573, line: 147, type: !2591)
!3758 = !DILocalVariable(name: "used", arg: 3, scope: !3752, file: !2573, line: 147, type: !166)
!3759 = !DILocalVariable(name: "buf", scope: !3752, file: !2573, line: 149, type: !2580)
!3760 = !DILocalVariable(name: "cmem", scope: !3752, file: !2573, line: 150, type: !102)
!3761 = !DILocation(line: 0, scope: !3752)
!3762 = !DILocation(line: 149, column: 22, scope: !3752)
!3763 = !DILocation(line: 0, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !2573, line: 159, column: 7)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !2573, line: 158, column: 9)
!3766 = distinct !DILexicalBlock(scope: !3752, file: !2573, line: 152, column: 6)
!3767 = !DILocation(line: 159, column: 7, scope: !3765)
!3768 = !DILocation(line: 165, column: 1, scope: !3752)
!3769 = distinct !DISubprogram(name: "free_chunk", scope: !3714, file: !3714, line: 133, type: !3770, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3772)
!3770 = !DISubroutineType(types: !3771)
!3771 = !{null, !2586, !2591}
!3772 = !{!3773, !3774}
!3773 = !DILocalVariable(name: "h", arg: 1, scope: !3769, file: !3714, line: 133, type: !2586)
!3774 = !DILocalVariable(name: "c", arg: 2, scope: !3769, file: !3714, line: 133, type: !2591)
!3775 = !DILocation(line: 0, scope: !3769)
!3776 = !DILocation(line: 136, column: 21, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3769, file: !3714, line: 136, column: 6)
!3778 = !DILocation(line: 136, column: 7, scope: !3777)
!3779 = !DILocation(line: 136, column: 6, scope: !3769)
!3780 = !DILocation(line: 137, column: 3, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3777, file: !3714, line: 136, column: 41)
!3782 = !DILocation(line: 138, column: 22, scope: !3781)
!3783 = !DILocation(line: 138, column: 3, scope: !3781)
!3784 = !DILocation(line: 139, column: 2, scope: !3781)
!3785 = !DILocation(line: 142, column: 21, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3769, file: !3714, line: 142, column: 6)
!3787 = !{i32 -65535, i32 536903678}
!3788 = !DILocation(line: 142, column: 7, scope: !3786)
!3789 = !DILocation(line: 142, column: 6, scope: !3769)
!3790 = !DILocation(line: 143, column: 3, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3786, file: !3714, line: 142, column: 40)
!3792 = !DILocation(line: 144, column: 19, scope: !3791)
!3793 = !DILocation(line: 144, column: 3, scope: !3791)
!3794 = !DILocation(line: 145, column: 7, scope: !3791)
!3795 = !DILocation(line: 146, column: 2, scope: !3791)
!3796 = !DILocation(line: 148, column: 2, scope: !3769)
!3797 = !DILocation(line: 149, column: 1, scope: !3769)
!3798 = distinct !DISubprogram(name: "right_chunk", scope: !2573, file: !2573, line: 204, type: !3799, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3801)
!3799 = !DISubroutineType(types: !3800)
!3800 = !{!2591, !2586, !2591}
!3801 = !{!3802, !3803}
!3802 = !DILocalVariable(name: "h", arg: 1, scope: !3798, file: !2573, line: 204, type: !2586)
!3803 = !DILocalVariable(name: "c", arg: 2, scope: !3798, file: !2573, line: 204, type: !2591)
!3804 = !DILocation(line: 0, scope: !3798)
!3805 = !DILocation(line: 206, column: 13, scope: !3798)
!3806 = !DILocation(line: 206, column: 11, scope: !3798)
!3807 = !DILocation(line: 206, column: 2, scope: !3798)
!3808 = distinct !DISubprogram(name: "chunk_used", scope: !2573, file: !2573, line: 137, type: !3809, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3811)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{!166, !2586, !2591}
!3811 = !{!3812, !3813}
!3812 = !DILocalVariable(name: "h", arg: 1, scope: !3808, file: !2573, line: 137, type: !2586)
!3813 = !DILocalVariable(name: "c", arg: 2, scope: !3808, file: !2573, line: 137, type: !2591)
!3814 = !DILocation(line: 0, scope: !3808)
!3815 = !DILocation(line: 139, column: 9, scope: !3808)
!3816 = !DILocation(line: 139, column: 42, scope: !3808)
!3817 = !DILocation(line: 139, column: 2, scope: !3808)
!3818 = distinct !DISubprogram(name: "free_list_remove", scope: !3714, file: !3714, line: 60, type: !3770, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3819)
!3819 = !{!3820, !3821, !3822}
!3820 = !DILocalVariable(name: "h", arg: 1, scope: !3818, file: !3714, line: 60, type: !2586)
!3821 = !DILocalVariable(name: "c", arg: 2, scope: !3818, file: !3714, line: 60, type: !2591)
!3822 = !DILocalVariable(name: "bidx", scope: !3823, file: !3714, line: 63, type: !103)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !3714, line: 62, column: 31)
!3824 = distinct !DILexicalBlock(scope: !3818, file: !3714, line: 62, column: 6)
!3825 = !DILocation(line: 0, scope: !3818)
!3826 = !DILocation(line: 63, column: 28, scope: !3823)
!3827 = !{i32 0, i32 32768}
!3828 = !DILocation(line: 63, column: 14, scope: !3823)
!3829 = !DILocation(line: 0, scope: !3823)
!3830 = !DILocation(line: 64, column: 3, scope: !3823)
!3831 = !DILocation(line: 66, column: 1, scope: !3818)
!3832 = distinct !DISubprogram(name: "merge_chunks", scope: !3714, file: !3714, line: 125, type: !3833, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3835)
!3833 = !DISubroutineType(types: !3834)
!3834 = !{null, !2586, !2591, !2591}
!3835 = !{!3836, !3837, !3838, !3839}
!3836 = !DILocalVariable(name: "h", arg: 1, scope: !3832, file: !3714, line: 125, type: !2586)
!3837 = !DILocalVariable(name: "lc", arg: 2, scope: !3832, file: !3714, line: 125, type: !2591)
!3838 = !DILocalVariable(name: "rc", arg: 3, scope: !3832, file: !3714, line: 125, type: !2591)
!3839 = !DILocalVariable(name: "newsz", scope: !3832, file: !3714, line: 127, type: !3840)
!3840 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2573, line: 62, baseType: !132)
!3841 = !DILocation(line: 0, scope: !3832)
!3842 = !DILocation(line: 127, column: 20, scope: !3832)
!3843 = !DILocation(line: 127, column: 40, scope: !3832)
!3844 = !DILocation(line: 127, column: 38, scope: !3832)
!3845 = !DILocation(line: 129, column: 2, scope: !3832)
!3846 = !DILocation(line: 130, column: 25, scope: !3832)
!3847 = !DILocation(line: 130, column: 2, scope: !3832)
!3848 = !DILocation(line: 131, column: 1, scope: !3832)
!3849 = distinct !DISubprogram(name: "left_chunk", scope: !2573, file: !2573, line: 199, type: !3799, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3850)
!3850 = !{!3851, !3852}
!3851 = !DILocalVariable(name: "h", arg: 1, scope: !3849, file: !2573, line: 199, type: !2586)
!3852 = !DILocalVariable(name: "c", arg: 2, scope: !3849, file: !2573, line: 199, type: !2591)
!3853 = !DILocation(line: 0, scope: !3849)
!3854 = !DILocation(line: 201, column: 13, scope: !3849)
!3855 = !DILocation(line: 201, column: 11, scope: !3849)
!3856 = !DILocation(line: 201, column: 2, scope: !3849)
!3857 = distinct !DISubprogram(name: "free_list_add", scope: !3714, file: !3714, line: 98, type: !3770, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3858)
!3858 = !{!3859, !3860, !3861}
!3859 = !DILocalVariable(name: "h", arg: 1, scope: !3857, file: !3714, line: 98, type: !2586)
!3860 = !DILocalVariable(name: "c", arg: 2, scope: !3857, file: !3714, line: 98, type: !2591)
!3861 = !DILocalVariable(name: "bidx", scope: !3862, file: !3714, line: 101, type: !103)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !3714, line: 100, column: 31)
!3863 = distinct !DILexicalBlock(scope: !3857, file: !3714, line: 100, column: 6)
!3864 = !DILocation(line: 0, scope: !3857)
!3865 = !DILocation(line: 101, column: 28, scope: !3862)
!3866 = !DILocation(line: 101, column: 14, scope: !3862)
!3867 = !DILocation(line: 0, scope: !3862)
!3868 = !DILocation(line: 102, column: 3, scope: !3862)
!3869 = !DILocation(line: 104, column: 1, scope: !3857)
!3870 = distinct !DISubprogram(name: "chunk_size", scope: !2573, file: !2573, line: 142, type: !3871, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3873)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{!3840, !2586, !2591}
!3873 = !{!3874, !3875}
!3874 = !DILocalVariable(name: "h", arg: 1, scope: !3870, file: !2573, line: 142, type: !2586)
!3875 = !DILocalVariable(name: "c", arg: 2, scope: !3870, file: !2573, line: 142, type: !2591)
!3876 = !DILocation(line: 0, scope: !3870)
!3877 = !DILocation(line: 144, column: 9, scope: !3870)
!3878 = !DILocation(line: 144, column: 42, scope: !3870)
!3879 = !DILocation(line: 144, column: 2, scope: !3870)
!3880 = distinct !DISubprogram(name: "bucket_idx", scope: !2573, file: !2573, line: 250, type: !3881, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3883)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!103, !2586, !3840}
!3883 = !{!3884, !3885, !3886}
!3884 = !DILocalVariable(name: "h", arg: 1, scope: !3880, file: !2573, line: 250, type: !2586)
!3885 = !DILocalVariable(name: "sz", arg: 2, scope: !3880, file: !2573, line: 250, type: !3840)
!3886 = !DILocalVariable(name: "usable_sz", scope: !3880, file: !2573, line: 252, type: !32)
!3887 = !DILocation(line: 0, scope: !3880)
!3888 = !DILocation(line: 252, column: 32, scope: !3880)
!3889 = !DILocation(line: 252, column: 30, scope: !3880)
!3890 = !DILocation(line: 252, column: 50, scope: !3880)
!3891 = !DILocation(line: 253, column: 14, scope: !3880)
!3892 = !{i32 0, i32 33}
!3893 = !DILocation(line: 253, column: 12, scope: !3880)
!3894 = !DILocation(line: 253, column: 2, scope: !3880)
!3895 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3714, file: !3714, line: 68, type: !3896, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3898)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{null, !2586, !2591, !103}
!3898 = !{!3899, !3900, !3901, !3902, !3904, !3907}
!3899 = !DILocalVariable(name: "h", arg: 1, scope: !3895, file: !3714, line: 68, type: !2586)
!3900 = !DILocalVariable(name: "c", arg: 2, scope: !3895, file: !3714, line: 68, type: !2591)
!3901 = !DILocalVariable(name: "bidx", arg: 3, scope: !3895, file: !3714, line: 68, type: !103)
!3902 = !DILocalVariable(name: "b", scope: !3895, file: !3714, line: 70, type: !3903)
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 32)
!3904 = !DILocalVariable(name: "second", scope: !3905, file: !3714, line: 84, type: !2591)
!3905 = distinct !DILexicalBlock(scope: !3906, file: !3714, line: 80, column: 9)
!3906 = distinct !DILexicalBlock(scope: !3895, file: !3714, line: 72, column: 6)
!3907 = !DILocalVariable(name: "first", scope: !3905, file: !3714, line: 85, type: !2591)
!3908 = !DILocation(line: 0, scope: !3895)
!3909 = !DILocation(line: 72, column: 9, scope: !3906)
!3910 = !DILocation(line: 72, column: 14, scope: !3906)
!3911 = !DILocation(line: 72, column: 6, scope: !3895)
!3912 = !DILocation(line: 76, column: 23, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3906, file: !3714, line: 72, column: 21)
!3914 = !DILocation(line: 76, column: 6, scope: !3913)
!3915 = !DILocation(line: 76, column: 20, scope: !3913)
!3916 = !DILocation(line: 77, column: 11, scope: !3913)
!3917 = !DILocation(line: 78, column: 3, scope: !3913)
!3918 = !DILocation(line: 79, column: 3, scope: !3913)
!3919 = !DILocation(line: 80, column: 2, scope: !3913)
!3920 = !DILocation(line: 0, scope: !3905)
!3921 = !DILocation(line: 85, column: 21, scope: !3905)
!3922 = !{i32 0, i32 65536}
!3923 = !DILocation(line: 87, column: 3, scope: !3905)
!3924 = !DILocation(line: 88, column: 3, scope: !3905)
!3925 = !DILocation(line: 89, column: 3, scope: !3905)
!3926 = !DILocation(line: 90, column: 3, scope: !3905)
!3927 = !DILocation(line: 96, column: 1, scope: !3895)
!3928 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2573, file: !2573, line: 187, type: !3833, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3929)
!3929 = !{!3930, !3931, !3932}
!3930 = !DILocalVariable(name: "h", arg: 1, scope: !3928, file: !2573, line: 187, type: !2586)
!3931 = !DILocalVariable(name: "c", arg: 2, scope: !3928, file: !2573, line: 187, type: !2591)
!3932 = !DILocalVariable(name: "prev", arg: 3, scope: !3928, file: !2573, line: 188, type: !2591)
!3933 = !DILocation(line: 0, scope: !3928)
!3934 = !DILocation(line: 190, column: 2, scope: !3928)
!3935 = !DILocation(line: 191, column: 1, scope: !3928)
!3936 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2573, file: !2573, line: 193, type: !3833, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3937)
!3937 = !{!3938, !3939, !3940}
!3938 = !DILocalVariable(name: "h", arg: 1, scope: !3936, file: !2573, line: 193, type: !2586)
!3939 = !DILocalVariable(name: "c", arg: 2, scope: !3936, file: !2573, line: 193, type: !2591)
!3940 = !DILocalVariable(name: "next", arg: 3, scope: !3936, file: !2573, line: 194, type: !2591)
!3941 = !DILocation(line: 0, scope: !3936)
!3942 = !DILocation(line: 196, column: 2, scope: !3936)
!3943 = !DILocation(line: 197, column: 1, scope: !3936)
!3944 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2573, file: !2573, line: 177, type: !3799, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3945)
!3945 = !{!3946, !3947}
!3946 = !DILocalVariable(name: "h", arg: 1, scope: !3944, file: !2573, line: 177, type: !2586)
!3947 = !DILocalVariable(name: "c", arg: 2, scope: !3944, file: !2573, line: 177, type: !2591)
!3948 = !DILocation(line: 0, scope: !3944)
!3949 = !DILocation(line: 179, column: 9, scope: !3944)
!3950 = !DILocation(line: 179, column: 2, scope: !3944)
!3951 = distinct !DISubprogram(name: "chunk_field", scope: !2573, file: !2573, line: 107, type: !3952, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3954)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{!2591, !2586, !2591, !2572}
!3954 = !{!3955, !3956, !3957, !3958, !3959}
!3955 = !DILocalVariable(name: "h", arg: 1, scope: !3951, file: !2573, line: 107, type: !2586)
!3956 = !DILocalVariable(name: "c", arg: 2, scope: !3951, file: !2573, line: 107, type: !2591)
!3957 = !DILocalVariable(name: "f", arg: 3, scope: !3951, file: !2573, line: 108, type: !2572)
!3958 = !DILocalVariable(name: "buf", scope: !3951, file: !2573, line: 110, type: !2580)
!3959 = !DILocalVariable(name: "cmem", scope: !3951, file: !2573, line: 111, type: !102)
!3960 = !DILocation(line: 0, scope: !3951)
!3961 = !DILocation(line: 110, column: 22, scope: !3951)
!3962 = !DILocation(line: 111, column: 15, scope: !3951)
!3963 = !DILocation(line: 116, column: 11, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !2573, line: 115, column: 9)
!3965 = distinct !DILexicalBlock(scope: !3951, file: !2573, line: 113, column: 6)
!3966 = !DILocation(line: 116, column: 10, scope: !3964)
!3967 = !DILocation(line: 118, column: 1, scope: !3951)
!3968 = distinct !DISubprogram(name: "chunk_buf", scope: !2573, file: !2573, line: 101, type: !3969, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3971)
!3969 = !DISubroutineType(types: !3970)
!3970 = !{!2580, !2586}
!3971 = !{!3972}
!3972 = !DILocalVariable(name: "h", arg: 1, scope: !3968, file: !2573, line: 101, type: !2586)
!3973 = !DILocation(line: 0, scope: !3968)
!3974 = !DILocation(line: 104, column: 9, scope: !3968)
!3975 = !DILocation(line: 104, column: 2, scope: !3968)
!3976 = distinct !DISubprogram(name: "chunk_set", scope: !2573, file: !2573, line: 120, type: !3977, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3979)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{null, !2586, !2591, !2572, !2591}
!3979 = !{!3980, !3981, !3982, !3983, !3984, !3985}
!3980 = !DILocalVariable(name: "h", arg: 1, scope: !3976, file: !2573, line: 120, type: !2586)
!3981 = !DILocalVariable(name: "c", arg: 2, scope: !3976, file: !2573, line: 120, type: !2591)
!3982 = !DILocalVariable(name: "f", arg: 3, scope: !3976, file: !2573, line: 121, type: !2572)
!3983 = !DILocalVariable(name: "val", arg: 4, scope: !3976, file: !2573, line: 121, type: !2591)
!3984 = !DILocalVariable(name: "buf", scope: !3976, file: !2573, line: 125, type: !2580)
!3985 = !DILocalVariable(name: "cmem", scope: !3976, file: !2573, line: 126, type: !102)
!3986 = !DILocation(line: 0, scope: !3976)
!3987 = !DILocation(line: 125, column: 22, scope: !3976)
!3988 = !DILocation(line: 126, column: 15, scope: !3976)
!3989 = !DILocation(line: 133, column: 27, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !2573, line: 131, column: 9)
!3991 = distinct !DILexicalBlock(scope: !3976, file: !2573, line: 128, column: 6)
!3992 = !DILocation(line: 133, column: 4, scope: !3990)
!3993 = !DILocation(line: 133, column: 3, scope: !3990)
!3994 = !DILocation(line: 133, column: 25, scope: !3990)
!3995 = !DILocation(line: 135, column: 1, scope: !3976)
!3996 = distinct !DISubprogram(name: "min_chunk_size", scope: !2573, file: !2573, line: 240, type: !3997, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3999)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{!3840, !2586}
!3999 = !{!4000}
!4000 = !DILocalVariable(name: "h", arg: 1, scope: !3996, file: !2573, line: 240, type: !2586)
!4001 = !DILocation(line: 0, scope: !3996)
!4002 = !DILocation(line: 242, column: 9, scope: !3996)
!4003 = !DILocation(line: 242, column: 2, scope: !3996)
!4004 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2573, file: !2573, line: 235, type: !4005, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4007)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{!3840, !2586, !356}
!4007 = !{!4008, !4009}
!4008 = !DILocalVariable(name: "h", arg: 1, scope: !4004, file: !2573, line: 235, type: !2586)
!4009 = !DILocalVariable(name: "bytes", arg: 2, scope: !4004, file: !2573, line: 235, type: !356)
!4010 = !DILocation(line: 0, scope: !4004)
!4011 = !DILocation(line: 237, column: 39, scope: !4004)
!4012 = !DILocation(line: 237, column: 9, scope: !4004)
!4013 = !DILocation(line: 237, column: 2, scope: !4004)
!4014 = distinct !DISubprogram(name: "chunksz", scope: !2573, file: !2573, line: 230, type: !4015, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4017)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!3840, !356}
!4017 = !{!4018}
!4018 = !DILocalVariable(name: "bytes", arg: 1, scope: !4014, file: !2573, line: 230, type: !356)
!4019 = !DILocation(line: 0, scope: !4014)
!4020 = !DILocation(line: 232, column: 29, scope: !4014)
!4021 = !DILocation(line: 232, column: 35, scope: !4014)
!4022 = !DILocation(line: 232, column: 2, scope: !4014)
!4023 = distinct !DISubprogram(name: "set_chunk_size", scope: !2573, file: !2573, line: 172, type: !4024, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4026)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{null, !2586, !2591, !3840}
!4026 = !{!4027, !4028, !4029}
!4027 = !DILocalVariable(name: "h", arg: 1, scope: !4023, file: !2573, line: 172, type: !2586)
!4028 = !DILocalVariable(name: "c", arg: 2, scope: !4023, file: !2573, line: 172, type: !2591)
!4029 = !DILocalVariable(name: "size", arg: 3, scope: !4023, file: !2573, line: 172, type: !3840)
!4030 = !DILocation(line: 0, scope: !4023)
!4031 = !DILocation(line: 174, column: 38, scope: !4023)
!4032 = !DILocation(line: 174, column: 2, scope: !4023)
!4033 = !DILocation(line: 175, column: 1, scope: !4023)
!4034 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2573, file: !2573, line: 209, type: !4024, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4035)
!4035 = !{!4036, !4037, !4038}
!4036 = !DILocalVariable(name: "h", arg: 1, scope: !4034, file: !2573, line: 209, type: !2586)
!4037 = !DILocalVariable(name: "c", arg: 2, scope: !4034, file: !2573, line: 209, type: !2591)
!4038 = !DILocalVariable(name: "size", arg: 3, scope: !4034, file: !2573, line: 210, type: !3840)
!4039 = !DILocation(line: 0, scope: !4034)
!4040 = !DILocation(line: 212, column: 2, scope: !4034)
!4041 = !DILocation(line: 213, column: 1, scope: !4034)
!4042 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3714, file: !3714, line: 34, type: !3896, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4043)
!4043 = !{!4044, !4045, !4046, !4047, !4048, !4051}
!4044 = !DILocalVariable(name: "h", arg: 1, scope: !4042, file: !3714, line: 34, type: !2586)
!4045 = !DILocalVariable(name: "c", arg: 2, scope: !4042, file: !3714, line: 34, type: !2591)
!4046 = !DILocalVariable(name: "bidx", arg: 3, scope: !4042, file: !3714, line: 34, type: !103)
!4047 = !DILocalVariable(name: "b", scope: !4042, file: !3714, line: 36, type: !3903)
!4048 = !DILocalVariable(name: "first", scope: !4049, file: !3714, line: 47, type: !2591)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !3714, line: 46, column: 9)
!4050 = distinct !DILexicalBlock(scope: !4042, file: !3714, line: 42, column: 6)
!4051 = !DILocalVariable(name: "second", scope: !4049, file: !3714, line: 48, type: !2591)
!4052 = !DILocation(line: 0, scope: !4042)
!4053 = !DILocation(line: 36, column: 29, scope: !4042)
!4054 = !DILocation(line: 42, column: 6, scope: !4050)
!4055 = !DILocation(line: 42, column: 28, scope: !4050)
!4056 = !DILocation(line: 42, column: 6, scope: !4042)
!4057 = !DILocation(line: 44, column: 24, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4050, file: !3714, line: 42, column: 34)
!4059 = !DILocation(line: 44, column: 23, scope: !4058)
!4060 = !DILocation(line: 44, column: 6, scope: !4058)
!4061 = !DILocation(line: 44, column: 20, scope: !4058)
!4062 = !DILocation(line: 45, column: 6, scope: !4058)
!4063 = !DILocation(line: 45, column: 11, scope: !4058)
!4064 = !DILocation(line: 46, column: 2, scope: !4058)
!4065 = !DILocation(line: 47, column: 21, scope: !4049)
!4066 = !DILocation(line: 0, scope: !4049)
!4067 = !DILocation(line: 50, column: 6, scope: !4049)
!4068 = !DILocation(line: 50, column: 11, scope: !4049)
!4069 = !DILocation(line: 51, column: 3, scope: !4049)
!4070 = !DILocation(line: 52, column: 3, scope: !4049)
!4071 = !DILocation(line: 58, column: 1, scope: !4042)
!4072 = distinct !DISubprogram(name: "next_free_chunk", scope: !2573, file: !2573, line: 182, type: !3799, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4073)
!4073 = !{!4074, !4075}
!4074 = !DILocalVariable(name: "h", arg: 1, scope: !4072, file: !2573, line: 182, type: !2586)
!4075 = !DILocalVariable(name: "c", arg: 2, scope: !4072, file: !2573, line: 182, type: !2591)
!4076 = !DILocation(line: 0, scope: !4072)
!4077 = !DILocation(line: 184, column: 9, scope: !4072)
!4078 = !DILocation(line: 184, column: 2, scope: !4072)
!4079 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3714, file: !3714, line: 200, type: !4080, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4082)
!4080 = !DISubroutineType(types: !4081)
!4081 = !{!356, !3717, !102}
!4082 = !{!4083, !4084, !4085, !4086, !4087, !4088, !4089}
!4083 = !DILocalVariable(name: "heap", arg: 1, scope: !4079, file: !3714, line: 200, type: !3717)
!4084 = !DILocalVariable(name: "mem", arg: 2, scope: !4079, file: !3714, line: 200, type: !102)
!4085 = !DILocalVariable(name: "h", scope: !4079, file: !3714, line: 202, type: !2586)
!4086 = !DILocalVariable(name: "c", scope: !4079, file: !3714, line: 203, type: !2591)
!4087 = !DILocalVariable(name: "addr", scope: !4079, file: !3714, line: 204, type: !356)
!4088 = !DILocalVariable(name: "chunk_base", scope: !4079, file: !3714, line: 205, type: !356)
!4089 = !DILocalVariable(name: "chunk_sz", scope: !4079, file: !3714, line: 206, type: !356)
!4090 = !DILocation(line: 0, scope: !4079)
!4091 = !DILocation(line: 202, column: 27, scope: !4079)
!4092 = !DILocation(line: 203, column: 16, scope: !4079)
!4093 = !DILocation(line: 204, column: 16, scope: !4079)
!4094 = !DILocation(line: 205, column: 31, scope: !4079)
!4095 = !DILocation(line: 205, column: 22, scope: !4079)
!4096 = !DILocation(line: 206, column: 20, scope: !4079)
!4097 = !DILocation(line: 206, column: 37, scope: !4079)
!4098 = !DILocation(line: 208, column: 26, scope: !4079)
!4099 = !DILocation(line: 208, column: 18, scope: !4079)
!4100 = !DILocation(line: 208, column: 2, scope: !4079)
!4101 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3714, file: !3714, line: 263, type: !4102, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4104)
!4102 = !DISubroutineType(types: !4103)
!4103 = !{!102, !3717, !356}
!4104 = !{!4105, !4106, !4107, !4108, !4109, !4110}
!4105 = !DILocalVariable(name: "heap", arg: 1, scope: !4101, file: !3714, line: 263, type: !3717)
!4106 = !DILocalVariable(name: "bytes", arg: 2, scope: !4101, file: !3714, line: 263, type: !356)
!4107 = !DILocalVariable(name: "h", scope: !4101, file: !3714, line: 265, type: !2586)
!4108 = !DILocalVariable(name: "mem", scope: !4101, file: !3714, line: 266, type: !102)
!4109 = !DILocalVariable(name: "chunk_sz", scope: !4101, file: !3714, line: 272, type: !3840)
!4110 = !DILocalVariable(name: "c", scope: !4101, file: !3714, line: 273, type: !2591)
!4111 = !DILocation(line: 0, scope: !4101)
!4112 = !DILocation(line: 265, column: 27, scope: !4101)
!4113 = !DILocation(line: 268, column: 12, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4101, file: !3714, line: 268, column: 6)
!4115 = !DILocation(line: 268, column: 18, scope: !4114)
!4116 = !DILocation(line: 268, column: 21, scope: !4114)
!4117 = !DILocation(line: 268, column: 6, scope: !4101)
!4118 = !DILocation(line: 272, column: 23, scope: !4101)
!4119 = !DILocation(line: 273, column: 16, scope: !4101)
!4120 = !DILocation(line: 274, column: 8, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4101, file: !3714, line: 274, column: 6)
!4122 = !DILocation(line: 274, column: 6, scope: !4101)
!4123 = !DILocation(line: 279, column: 6, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4101, file: !3714, line: 279, column: 6)
!4125 = !DILocation(line: 279, column: 23, scope: !4124)
!4126 = !DILocation(line: 279, column: 6, scope: !4101)
!4127 = !DILocation(line: 280, column: 24, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4124, file: !3714, line: 279, column: 35)
!4129 = !DILocation(line: 280, column: 3, scope: !4128)
!4130 = !DILocation(line: 281, column: 3, scope: !4128)
!4131 = !DILocation(line: 282, column: 2, scope: !4128)
!4132 = !DILocation(line: 284, column: 2, scope: !4101)
!4133 = !DILocation(line: 286, column: 8, scope: !4101)
!4134 = !DILocation(line: 298, column: 2, scope: !4101)
!4135 = !DILocation(line: 299, column: 1, scope: !4101)
!4136 = distinct !DISubprogram(name: "size_too_big", scope: !2573, file: !2573, line: 256, type: !4137, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4139)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{!166, !2586, !356}
!4139 = !{!4140, !4141}
!4140 = !DILocalVariable(name: "h", arg: 1, scope: !4136, file: !2573, line: 256, type: !2586)
!4141 = !DILocalVariable(name: "bytes", arg: 2, scope: !4136, file: !2573, line: 256, type: !356)
!4142 = !DILocation(line: 0, scope: !4136)
!4143 = !DILocation(line: 262, column: 16, scope: !4136)
!4144 = !DILocation(line: 262, column: 36, scope: !4136)
!4145 = !DILocation(line: 262, column: 30, scope: !4136)
!4146 = !DILocation(line: 262, column: 2, scope: !4136)
!4147 = distinct !DISubprogram(name: "alloc_chunk", scope: !3714, file: !3714, line: 211, type: !4148, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4150)
!4148 = !DISubroutineType(types: !4149)
!4149 = !{!2591, !2586, !3840}
!4150 = !{!4151, !4152, !4153, !4154, !4155, !4158, !4159, !4161, !4162, !4165}
!4151 = !DILocalVariable(name: "h", arg: 1, scope: !4147, file: !3714, line: 211, type: !2586)
!4152 = !DILocalVariable(name: "sz", arg: 2, scope: !4147, file: !3714, line: 211, type: !3840)
!4153 = !DILocalVariable(name: "bi", scope: !4147, file: !3714, line: 213, type: !103)
!4154 = !DILocalVariable(name: "b", scope: !4147, file: !3714, line: 214, type: !3903)
!4155 = !DILocalVariable(name: "first", scope: !4156, file: !3714, line: 233, type: !2591)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !3714, line: 232, column: 15)
!4157 = distinct !DILexicalBlock(scope: !4147, file: !3714, line: 232, column: 6)
!4158 = !DILocalVariable(name: "i", scope: !4156, file: !3714, line: 234, type: !103)
!4159 = !DILocalVariable(name: "c", scope: !4160, file: !3714, line: 236, type: !2591)
!4160 = distinct !DILexicalBlock(scope: !4156, file: !3714, line: 235, column: 6)
!4161 = !DILocalVariable(name: "bmask", scope: !4147, file: !3714, line: 249, type: !132)
!4162 = !DILocalVariable(name: "minbucket", scope: !4163, file: !3714, line: 252, type: !103)
!4163 = distinct !DILexicalBlock(scope: !4164, file: !3714, line: 251, column: 19)
!4164 = distinct !DILexicalBlock(scope: !4147, file: !3714, line: 251, column: 6)
!4165 = !DILocalVariable(name: "c", scope: !4163, file: !3714, line: 253, type: !2591)
!4166 = !DILocation(line: 0, scope: !4147)
!4167 = !DILocation(line: 213, column: 11, scope: !4147)
!4168 = !DILocation(line: 232, column: 9, scope: !4157)
!4169 = !DILocation(line: 232, column: 6, scope: !4157)
!4170 = !DILocation(line: 232, column: 6, scope: !4147)
!4171 = !DILocation(line: 236, column: 21, scope: !4160)
!4172 = !DILocation(line: 0, scope: !4156)
!4173 = !DILocation(line: 0, scope: !4160)
!4174 = !DILocation(line: 237, column: 8, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4160, file: !3714, line: 237, column: 8)
!4176 = !DILocation(line: 237, column: 25, scope: !4175)
!4177 = !DILocation(line: 237, column: 8, scope: !4160)
!4178 = !DILocation(line: 238, column: 5, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4175, file: !3714, line: 237, column: 32)
!4180 = !DILocation(line: 241, column: 14, scope: !4160)
!4181 = !DILocation(line: 241, column: 12, scope: !4160)
!4182 = !DILocation(line: 243, column: 12, scope: !4156)
!4183 = !DILocation(line: 243, column: 16, scope: !4156)
!4184 = distinct !{!4184, !4185, !4186}
!4185 = !DILocation(line: 235, column: 3, scope: !4156)
!4186 = !DILocation(line: 243, column: 35, scope: !4156)
!4187 = !DILocation(line: 249, column: 22, scope: !4147)
!4188 = !DILocation(line: 249, column: 39, scope: !4147)
!4189 = !DILocation(line: 249, column: 36, scope: !4147)
!4190 = !DILocation(line: 251, column: 12, scope: !4164)
!4191 = !DILocation(line: 251, column: 6, scope: !4147)
!4192 = !DILocation(line: 252, column: 19, scope: !4163)
!4193 = !DILocation(line: 0, scope: !4163)
!4194 = !DILocation(line: 253, column: 39, scope: !4163)
!4195 = !DILocation(line: 255, column: 3, scope: !4163)
!4196 = !DILocation(line: 261, column: 1, scope: !4147)
!4197 = distinct !DISubprogram(name: "split_chunks", scope: !3714, file: !3714, line: 109, type: !3833, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4198)
!4198 = !{!4199, !4200, !4201, !4202, !4203, !4204}
!4199 = !DILocalVariable(name: "h", arg: 1, scope: !4197, file: !3714, line: 109, type: !2586)
!4200 = !DILocalVariable(name: "lc", arg: 2, scope: !4197, file: !3714, line: 109, type: !2591)
!4201 = !DILocalVariable(name: "rc", arg: 3, scope: !4197, file: !3714, line: 109, type: !2591)
!4202 = !DILocalVariable(name: "sz0", scope: !4197, file: !3714, line: 114, type: !3840)
!4203 = !DILocalVariable(name: "lsz", scope: !4197, file: !3714, line: 115, type: !3840)
!4204 = !DILocalVariable(name: "rsz", scope: !4197, file: !3714, line: 116, type: !3840)
!4205 = !DILocation(line: 0, scope: !4197)
!4206 = !DILocation(line: 114, column: 18, scope: !4197)
!4207 = !DILocation(line: 115, column: 21, scope: !4197)
!4208 = !DILocation(line: 116, column: 22, scope: !4197)
!4209 = !DILocation(line: 118, column: 2, scope: !4197)
!4210 = !DILocation(line: 119, column: 2, scope: !4197)
!4211 = !DILocation(line: 120, column: 2, scope: !4197)
!4212 = !DILocation(line: 121, column: 25, scope: !4197)
!4213 = !DILocation(line: 121, column: 2, scope: !4197)
!4214 = !DILocation(line: 122, column: 1, scope: !4197)
!4215 = distinct !DISubprogram(name: "chunk_mem", scope: !3714, file: !3714, line: 24, type: !4216, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4218)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{!102, !2586, !2591}
!4218 = !{!4219, !4220, !4221, !4222}
!4219 = !DILocalVariable(name: "h", arg: 1, scope: !4215, file: !3714, line: 24, type: !2586)
!4220 = !DILocalVariable(name: "c", arg: 2, scope: !4215, file: !3714, line: 24, type: !2591)
!4221 = !DILocalVariable(name: "buf", scope: !4215, file: !3714, line: 26, type: !2580)
!4222 = !DILocalVariable(name: "ret", scope: !4215, file: !3714, line: 27, type: !270)
!4223 = !DILocation(line: 0, scope: !4215)
!4224 = !DILocation(line: 26, column: 22, scope: !4215)
!4225 = !DILocation(line: 27, column: 38, scope: !4215)
!4226 = !DILocation(line: 31, column: 2, scope: !4215)
!4227 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3714, file: !3714, line: 301, type: !4228, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4230)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{!102, !3717, !356, !356}
!4230 = !{!4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242}
!4231 = !DILocalVariable(name: "heap", arg: 1, scope: !4227, file: !3714, line: 301, type: !3717)
!4232 = !DILocalVariable(name: "align", arg: 2, scope: !4227, file: !3714, line: 301, type: !356)
!4233 = !DILocalVariable(name: "bytes", arg: 3, scope: !4227, file: !3714, line: 301, type: !356)
!4234 = !DILocalVariable(name: "h", scope: !4227, file: !3714, line: 303, type: !2586)
!4235 = !DILocalVariable(name: "gap", scope: !4227, file: !3714, line: 304, type: !356)
!4236 = !DILocalVariable(name: "rew", scope: !4227, file: !3714, line: 304, type: !356)
!4237 = !DILocalVariable(name: "padded_sz", scope: !4227, file: !3714, line: 335, type: !3840)
!4238 = !DILocalVariable(name: "c0", scope: !4227, file: !3714, line: 336, type: !2591)
!4239 = !DILocalVariable(name: "mem", scope: !4227, file: !3714, line: 341, type: !270)
!4240 = !DILocalVariable(name: "end", scope: !4227, file: !3714, line: 345, type: !2580)
!4241 = !DILocalVariable(name: "c", scope: !4227, file: !3714, line: 348, type: !2591)
!4242 = !DILocalVariable(name: "c_end", scope: !4227, file: !3714, line: 349, type: !2591)
!4243 = !DILocation(line: 0, scope: !4227)
!4244 = !DILocation(line: 303, column: 27, scope: !4227)
!4245 = !DILocation(line: 313, column: 16, scope: !4227)
!4246 = !DILocation(line: 313, column: 14, scope: !4227)
!4247 = !DILocation(line: 314, column: 12, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4227, file: !3714, line: 314, column: 6)
!4249 = !DILocation(line: 314, column: 6, scope: !4227)
!4250 = !DILocation(line: 315, column: 9, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4248, file: !3714, line: 314, column: 20)
!4252 = !DILocation(line: 316, column: 9, scope: !4251)
!4253 = !DILocation(line: 318, column: 13, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !3714, line: 318, column: 7)
!4255 = distinct !DILexicalBlock(scope: !4248, file: !3714, line: 317, column: 9)
!4256 = !DILocation(line: 318, column: 7, scope: !4255)
!4257 = !DILocation(line: 319, column: 11, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4254, file: !3714, line: 318, column: 39)
!4259 = !DILocation(line: 319, column: 4, scope: !4258)
!4260 = !DILocation(line: 0, scope: !4248)
!4261 = !DILocation(line: 326, column: 12, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4227, file: !3714, line: 326, column: 6)
!4263 = !DILocation(line: 326, column: 17, scope: !4262)
!4264 = !DILocation(line: 326, column: 20, scope: !4262)
!4265 = !DILocation(line: 326, column: 6, scope: !4227)
!4266 = !DILocation(line: 335, column: 50, scope: !4227)
!4267 = !DILocation(line: 335, column: 58, scope: !4227)
!4268 = !DILocation(line: 335, column: 24, scope: !4227)
!4269 = !DILocation(line: 336, column: 17, scope: !4227)
!4270 = !DILocation(line: 338, column: 9, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4227, file: !3714, line: 338, column: 6)
!4272 = !DILocation(line: 338, column: 6, scope: !4227)
!4273 = !DILocation(line: 341, column: 17, scope: !4227)
!4274 = !DILocation(line: 344, column: 20, scope: !4227)
!4275 = !DILocation(line: 344, column: 8, scope: !4227)
!4276 = !DILocation(line: 344, column: 47, scope: !4227)
!4277 = !DILocation(line: 345, column: 39, scope: !4227)
!4278 = !DILocation(line: 348, column: 16, scope: !4227)
!4279 = !DILocation(line: 349, column: 26, scope: !4227)
!4280 = !DILocation(line: 349, column: 24, scope: !4227)
!4281 = !DILocation(line: 353, column: 8, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4227, file: !3714, line: 353, column: 6)
!4283 = !DILocation(line: 353, column: 6, scope: !4227)
!4284 = !DILocation(line: 354, column: 3, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4282, file: !3714, line: 353, column: 14)
!4286 = !DILocation(line: 355, column: 3, scope: !4285)
!4287 = !DILocation(line: 356, column: 2, scope: !4285)
!4288 = !DILocation(line: 359, column: 6, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4227, file: !3714, line: 359, column: 6)
!4290 = !DILocation(line: 359, column: 24, scope: !4289)
!4291 = !DILocation(line: 359, column: 6, scope: !4227)
!4292 = !DILocation(line: 360, column: 3, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4289, file: !3714, line: 359, column: 33)
!4294 = !DILocation(line: 361, column: 3, scope: !4293)
!4295 = !DILocation(line: 362, column: 2, scope: !4293)
!4296 = !DILocation(line: 364, column: 2, scope: !4227)
!4297 = !DILocation(line: 377, column: 1, scope: !4227)
!4298 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3714, file: !3714, line: 379, type: !4299, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4301)
!4299 = !DISubroutineType(types: !4300)
!4300 = !{!102, !3717, !102, !356, !356}
!4301 = !{!4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4317, !4318}
!4302 = !DILocalVariable(name: "heap", arg: 1, scope: !4298, file: !3714, line: 379, type: !3717)
!4303 = !DILocalVariable(name: "ptr", arg: 2, scope: !4298, file: !3714, line: 379, type: !102)
!4304 = !DILocalVariable(name: "align", arg: 3, scope: !4298, file: !3714, line: 380, type: !356)
!4305 = !DILocalVariable(name: "bytes", arg: 4, scope: !4298, file: !3714, line: 380, type: !356)
!4306 = !DILocalVariable(name: "h", scope: !4298, file: !3714, line: 382, type: !2586)
!4307 = !DILocalVariable(name: "c", scope: !4298, file: !3714, line: 399, type: !2591)
!4308 = !DILocalVariable(name: "rc", scope: !4298, file: !3714, line: 400, type: !2591)
!4309 = !DILocalVariable(name: "align_gap", scope: !4298, file: !3714, line: 401, type: !356)
!4310 = !DILocalVariable(name: "chunks_need", scope: !4298, file: !3714, line: 402, type: !3840)
!4311 = !DILocalVariable(name: "split_size", scope: !4312, file: !3714, line: 435, type: !3840)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !3714, line: 433, column: 61)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !3714, line: 432, column: 13)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !3714, line: 409, column: 13)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !3714, line: 406, column: 13)
!4316 = distinct !DILexicalBlock(scope: !4298, file: !3714, line: 404, column: 6)
!4317 = !DILocalVariable(name: "ptr2", scope: !4298, file: !3714, line: 474, type: !102)
!4318 = !DILocalVariable(name: "prev_size", scope: !4319, file: !3714, line: 477, type: !356)
!4319 = distinct !DILexicalBlock(scope: !4320, file: !3714, line: 476, column: 20)
!4320 = distinct !DILexicalBlock(scope: !4298, file: !3714, line: 476, column: 6)
!4321 = !DILocation(line: 0, scope: !4298)
!4322 = !DILocation(line: 382, column: 27, scope: !4298)
!4323 = !DILocation(line: 385, column: 10, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4298, file: !3714, line: 385, column: 6)
!4325 = !DILocation(line: 385, column: 6, scope: !4298)
!4326 = !DILocation(line: 386, column: 10, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4324, file: !3714, line: 385, column: 19)
!4328 = !DILocation(line: 386, column: 3, scope: !4327)
!4329 = !DILocation(line: 388, column: 12, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4298, file: !3714, line: 388, column: 6)
!4331 = !DILocation(line: 388, column: 6, scope: !4298)
!4332 = !DILocation(line: 389, column: 3, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4330, file: !3714, line: 388, column: 18)
!4334 = !DILocation(line: 390, column: 3, scope: !4333)
!4335 = !DILocation(line: 395, column: 6, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4298, file: !3714, line: 395, column: 6)
!4337 = !DILocation(line: 395, column: 6, scope: !4298)
!4338 = !DILocation(line: 399, column: 16, scope: !4298)
!4339 = !DILocation(line: 400, column: 17, scope: !4298)
!4340 = !DILocation(line: 401, column: 49, scope: !4298)
!4341 = !DILocation(line: 401, column: 36, scope: !4298)
!4342 = !DILocation(line: 402, column: 52, scope: !4298)
!4343 = !DILocation(line: 402, column: 26, scope: !4298)
!4344 = !DILocation(line: 404, column: 6, scope: !4316)
!4345 = !DILocation(line: 404, column: 12, scope: !4316)
!4346 = !DILocation(line: 404, column: 40, scope: !4316)
!4347 = !DILocation(line: 404, column: 31, scope: !4316)
!4348 = !DILocation(line: 404, column: 6, scope: !4298)
!4349 = !DILocation(line: 406, column: 13, scope: !4315)
!4350 = !DILocation(line: 406, column: 30, scope: !4315)
!4351 = !DILocation(line: 406, column: 13, scope: !4316)
!4352 = !DILocation(line: 409, column: 30, scope: !4314)
!4353 = !DILocation(line: 409, column: 13, scope: !4315)
!4354 = !DILocation(line: 420, column: 24, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4314, file: !3714, line: 409, column: 45)
!4356 = !DILocation(line: 420, column: 3, scope: !4355)
!4357 = !DILocation(line: 421, column: 3, scope: !4355)
!4358 = !DILocation(line: 422, column: 3, scope: !4355)
!4359 = !DILocation(line: 431, column: 3, scope: !4355)
!4360 = !DILocation(line: 432, column: 14, scope: !4313)
!4361 = !DILocation(line: 432, column: 32, scope: !4313)
!4362 = !DILocation(line: 433, column: 26, scope: !4313)
!4363 = !DILocation(line: 433, column: 24, scope: !4313)
!4364 = !DILocation(line: 433, column: 44, scope: !4313)
!4365 = !DILocation(line: 432, column: 13, scope: !4314)
!4366 = !DILocation(line: 435, column: 38, scope: !4312)
!4367 = !DILocation(line: 0, scope: !4312)
!4368 = !DILocation(line: 445, column: 3, scope: !4312)
!4369 = !DILocation(line: 447, column: 20, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4312, file: !3714, line: 447, column: 7)
!4371 = !DILocation(line: 447, column: 18, scope: !4370)
!4372 = !DILocation(line: 447, column: 7, scope: !4312)
!4373 = !DILocation(line: 448, column: 27, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4370, file: !3714, line: 447, column: 39)
!4375 = !DILocation(line: 448, column: 4, scope: !4374)
!4376 = !DILocation(line: 449, column: 4, scope: !4374)
!4377 = !DILocation(line: 450, column: 3, scope: !4374)
!4378 = !DILocation(line: 452, column: 3, scope: !4312)
!4379 = !DILocation(line: 453, column: 3, scope: !4312)
!4380 = !DILocation(line: 474, column: 15, scope: !4298)
!4381 = !DILocation(line: 476, column: 11, scope: !4320)
!4382 = !DILocation(line: 476, column: 6, scope: !4298)
!4383 = !DILocation(line: 477, column: 42, scope: !4319)
!4384 = !DILocation(line: 477, column: 22, scope: !4319)
!4385 = !DILocation(line: 477, column: 60, scope: !4319)
!4386 = !DILocation(line: 0, scope: !4319)
!4387 = !DILocation(line: 479, column: 21, scope: !4319)
!4388 = !DILocation(line: 479, column: 3, scope: !4319)
!4389 = !DILocation(line: 480, column: 3, scope: !4319)
!4390 = !DILocation(line: 481, column: 2, scope: !4319)
!4391 = !DILocation(line: 483, column: 1, scope: !4298)
!4392 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2573, file: !2573, line: 245, type: !4393, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4395)
!4393 = !DISubroutineType(types: !4394)
!4394 = !{!356, !2586, !3840}
!4395 = !{!4396, !4397}
!4396 = !DILocalVariable(name: "h", arg: 1, scope: !4392, file: !2573, line: 245, type: !2586)
!4397 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4392, file: !2573, line: 245, type: !3840)
!4398 = !DILocation(line: 0, scope: !4392)
!4399 = !DILocation(line: 247, column: 20, scope: !4392)
!4400 = !DILocation(line: 247, column: 33, scope: !4392)
!4401 = !DILocation(line: 247, column: 2, scope: !4392)
!4402 = distinct !DISubprogram(name: "sys_heap_init", scope: !3714, file: !3714, line: 485, type: !4403, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !4405)
!4403 = !DISubroutineType(types: !4404)
!4404 = !{null, !3717, !102, !356}
!4405 = !{!4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415}
!4406 = !DILocalVariable(name: "heap", arg: 1, scope: !4402, file: !3714, line: 485, type: !3717)
!4407 = !DILocalVariable(name: "mem", arg: 2, scope: !4402, file: !3714, line: 485, type: !102)
!4408 = !DILocalVariable(name: "bytes", arg: 3, scope: !4402, file: !3714, line: 485, type: !356)
!4409 = !DILocalVariable(name: "addr", scope: !4402, file: !3714, line: 502, type: !22)
!4410 = !DILocalVariable(name: "end", scope: !4402, file: !3714, line: 503, type: !22)
!4411 = !DILocalVariable(name: "heap_sz", scope: !4402, file: !3714, line: 504, type: !3840)
!4412 = !DILocalVariable(name: "h", scope: !4402, file: !3714, line: 509, type: !2586)
!4413 = !DILocalVariable(name: "nb_buckets", scope: !4402, file: !3714, line: 520, type: !103)
!4414 = !DILocalVariable(name: "chunk0_size", scope: !4402, file: !3714, line: 521, type: !3840)
!4415 = !DILocalVariable(name: "i", scope: !4416, file: !3714, line: 526, type: !103)
!4416 = distinct !DILexicalBlock(scope: !4402, file: !3714, line: 526, column: 2)
!4417 = !DILocation(line: 0, scope: !4402)
!4418 = !DILocation(line: 499, column: 8, scope: !4402)
!4419 = !DILocation(line: 502, column: 19, scope: !4402)
!4420 = !DILocation(line: 503, column: 18, scope: !4402)
!4421 = !DILocation(line: 504, column: 27, scope: !4402)
!4422 = !DILocation(line: 504, column: 35, scope: !4402)
!4423 = !DILocation(line: 509, column: 21, scope: !4402)
!4424 = !DILocation(line: 510, column: 8, scope: !4402)
!4425 = !DILocation(line: 510, column: 13, scope: !4402)
!4426 = !DILocation(line: 511, column: 5, scope: !4402)
!4427 = !DILocation(line: 511, column: 15, scope: !4402)
!4428 = !DILocation(line: 512, column: 5, scope: !4402)
!4429 = !DILocation(line: 512, column: 19, scope: !4402)
!4430 = !DILocation(line: 520, column: 19, scope: !4402)
!4431 = !DILocation(line: 522, column: 21, scope: !4402)
!4432 = !DILocation(line: 521, column: 56, scope: !4402)
!4433 = !DILocation(line: 521, column: 26, scope: !4402)
!4434 = !DILocation(line: 0, scope: !4416)
!4435 = !DILocation(line: 526, column: 20, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4416, file: !3714, line: 526, column: 2)
!4437 = !DILocation(line: 526, column: 2, scope: !4416)
!4438 = !DILocation(line: 531, column: 2, scope: !4402)
!4439 = !DILocation(line: 532, column: 2, scope: !4402)
!4440 = !DILocation(line: 533, column: 2, scope: !4402)
!4441 = !DILocation(line: 536, column: 41, scope: !4402)
!4442 = !DILocation(line: 536, column: 2, scope: !4402)
!4443 = !DILocation(line: 537, column: 2, scope: !4402)
!4444 = !DILocation(line: 540, column: 2, scope: !4402)
!4445 = !DILocation(line: 541, column: 2, scope: !4402)
!4446 = !DILocation(line: 542, column: 2, scope: !4402)
!4447 = !DILocation(line: 544, column: 2, scope: !4402)
!4448 = !DILocation(line: 545, column: 1, scope: !4402)
!4449 = !DILocation(line: 527, column: 17, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4436, file: !3714, line: 526, column: 39)
!4451 = !DILocation(line: 527, column: 22, scope: !4450)
!4452 = !DILocation(line: 526, column: 35, scope: !4436)
!4453 = distinct !{!4453, !4437, !4454}
!4454 = !DILocation(line: 528, column: 2, scope: !4416)
!4455 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2606, file: !2606, line: 1338, type: !4456, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !4464)
!4456 = !DISubroutineType(types: !4457)
!4457 = !{!103, !3444, !102, !155, !4458, !132}
!4458 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3410, line: 99, baseType: !4459)
!4459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3410, line: 40, baseType: !4460)
!4460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2606, baseType: !4461)
!4461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4462)
!4462 = !{!4463}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4461, file: !2606, baseType: !102, size: 32)
!4464 = !{!4465, !4466, !4467, !4468, !4469, !4470, !4474, !4475, !4476, !4478, !4483, !4528, !4531, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4543, !4544, !4545, !4549, !4552, !4554, !4557, !4558, !4559, !4564, !4570, !4573, !4577, !4583, !4587, !4590, !4592, !4595}
!4465 = !DILocalVariable(name: "out", arg: 1, scope: !4455, file: !2606, line: 1338, type: !3444)
!4466 = !DILocalVariable(name: "ctx", arg: 2, scope: !4455, file: !2606, line: 1338, type: !102)
!4467 = !DILocalVariable(name: "fp", arg: 3, scope: !4455, file: !2606, line: 1338, type: !155)
!4468 = !DILocalVariable(name: "ap", arg: 4, scope: !4455, file: !2606, line: 1339, type: !4458)
!4469 = !DILocalVariable(name: "flags", arg: 5, scope: !4455, file: !2606, line: 1339, type: !132)
!4470 = !DILocalVariable(name: "buf", scope: !4455, file: !2606, line: 1341, type: !4471)
!4471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 176, elements: !4472)
!4472 = !{!4473}
!4473 = !DISubrange(count: 22)
!4474 = !DILocalVariable(name: "count", scope: !4455, file: !2606, line: 1342, type: !356)
!4475 = !DILocalVariable(name: "sint", scope: !4455, file: !2606, line: 1343, type: !2625)
!4476 = !DILocalVariable(name: "tagged_ap", scope: !4455, file: !2606, line: 1345, type: !4477)
!4477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!4478 = !DILocalVariable(name: "rc", scope: !4479, file: !2606, line: 1377, type: !103)
!4479 = distinct !DILexicalBlock(scope: !4480, file: !2606, line: 1377, column: 4)
!4480 = distinct !DILexicalBlock(scope: !4481, file: !2606, line: 1376, column: 19)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1376, column: 7)
!4482 = distinct !DILexicalBlock(scope: !4455, file: !2606, line: 1375, column: 19)
!4483 = !DILocalVariable(name: "state", scope: !4482, file: !2606, line: 1395, type: !4484)
!4484 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4455, file: !2606, line: 1392, size: 192, elements: !4485)
!4485 = !{!4486, !4496}
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4484, file: !2606, line: 1393, baseType: !4487, size: 64)
!4487 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2606, line: 166, size: 64, elements: !4488)
!4488 = !{!4489, !4490, !4491, !4493, !4495}
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4487, file: !2606, line: 168, baseType: !2625, size: 64)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4487, file: !2606, line: 171, baseType: !2628, size: 64)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4487, file: !2606, line: 174, baseType: !4492, size: 64)
!4492 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4487, file: !2606, line: 177, baseType: !4494, size: 64)
!4494 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4487, file: !2606, line: 180, baseType: !102, size: 32)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4484, file: !2606, line: 1394, baseType: !4497, size: 96, offset: 64)
!4497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2606, line: 189, size: 96, elements: !4498)
!4498 = !{!4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4523}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4497, file: !2606, line: 191, baseType: !166, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4497, file: !2606, line: 194, baseType: !166, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4497, file: !2606, line: 197, baseType: !166, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4497, file: !2606, line: 200, baseType: !166, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4497, file: !2606, line: 203, baseType: !166, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4497, file: !2606, line: 206, baseType: !166, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4497, file: !2606, line: 209, baseType: !166, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4497, file: !2606, line: 212, baseType: !166, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4497, file: !2606, line: 219, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4497, file: !2606, line: 222, baseType: !166, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4497, file: !2606, line: 229, baseType: !166, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4497, file: !2606, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4497, file: !2606, line: 238, baseType: !166, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4497, file: !2606, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4497, file: !2606, line: 244, baseType: !166, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4497, file: !2606, line: 247, baseType: !166, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4497, file: !2606, line: 252, baseType: !166, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4497, file: !2606, line: 257, baseType: !166, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4497, file: !2606, line: 260, baseType: !164, size: 8, offset: 24)
!4518 = !DIDerivedType(tag: DW_TAG_member, scope: !4497, file: !2606, line: 262, baseType: !4519, size: 32, offset: 32)
!4519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4497, file: !2606, line: 262, size: 32, elements: !4520)
!4520 = !{!4521, !4522}
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4519, file: !2606, line: 267, baseType: !103, size: 32)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4519, file: !2606, line: 289, baseType: !103, size: 32)
!4523 = !DIDerivedType(tag: DW_TAG_member, scope: !4497, file: !2606, line: 292, baseType: !4524, size: 32, offset: 64)
!4524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4497, file: !2606, line: 292, size: 32, elements: !4525)
!4525 = !{!4526, !4527}
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4524, file: !2606, line: 297, baseType: !103, size: 32)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4524, file: !2606, line: 306, baseType: !103, size: 32)
!4528 = !DILocalVariable(name: "conv", scope: !4482, file: !2606, line: 1400, type: !4529)
!4529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4530)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 32)
!4531 = !DILocalVariable(name: "value", scope: !4482, file: !2606, line: 1401, type: !4532)
!4532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4533)
!4533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 32)
!4534 = !DILocalVariable(name: "sp", scope: !4482, file: !2606, line: 1402, type: !155)
!4535 = !DILocalVariable(name: "width", scope: !4482, file: !2606, line: 1403, type: !103)
!4536 = !DILocalVariable(name: "precision", scope: !4482, file: !2606, line: 1404, type: !103)
!4537 = !DILocalVariable(name: "bps", scope: !4482, file: !2606, line: 1405, type: !155)
!4538 = !DILocalVariable(name: "bpe", scope: !4482, file: !2606, line: 1406, type: !155)
!4539 = !DILocalVariable(name: "sign", scope: !4482, file: !2606, line: 1407, type: !108)
!4540 = !DILocalVariable(name: "arg", scope: !4541, file: !2606, line: 1432, type: !103)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !2606, line: 1431, column: 24)
!4542 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1431, column: 7)
!4543 = !DILocalVariable(name: "specifier_cat", scope: !4482, file: !2606, line: 1468, type: !2605)
!4544 = !DILocalVariable(name: "length_mod", scope: !4482, file: !2606, line: 1470, type: !2613)
!4545 = !DILocalVariable(name: "rc", scope: !4546, file: !2606, line: 1575, type: !103)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !2606, line: 1575, column: 4)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !2606, line: 1574, column: 43)
!4548 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1574, column: 7)
!4549 = !DILocalVariable(name: "rc", scope: !4550, file: !2606, line: 1584, type: !103)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !2606, line: 1584, column: 4)
!4551 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1582, column: 28)
!4552 = !DILocalVariable(name: "len", scope: !4553, file: !2606, line: 1589, type: !356)
!4553 = distinct !DILexicalBlock(scope: !4551, file: !2606, line: 1586, column: 13)
!4554 = !DILocalVariable(name: "len", scope: !4555, file: !2606, line: 1641, type: !356)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !2606, line: 1640, column: 24)
!4556 = distinct !DILexicalBlock(scope: !4551, file: !2606, line: 1640, column: 8)
!4557 = !DILocalVariable(name: "nj_len", scope: !4482, file: !2606, line: 1722, type: !356)
!4558 = !DILocalVariable(name: "pad_len", scope: !4482, file: !2606, line: 1723, type: !103)
!4559 = !DILocalVariable(name: "pad", scope: !4560, file: !2606, line: 1751, type: !108)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !2606, line: 1750, column: 26)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !2606, line: 1750, column: 8)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !2606, line: 1747, column: 18)
!4563 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1747, column: 7)
!4564 = !DILocalVariable(name: "rc", scope: !4565, file: !2606, line: 1758, type: !103)
!4565 = distinct !DILexicalBlock(scope: !4566, file: !2606, line: 1758, column: 7)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !2606, line: 1757, column: 21)
!4567 = distinct !DILexicalBlock(scope: !4568, file: !2606, line: 1757, column: 10)
!4568 = distinct !DILexicalBlock(scope: !4569, file: !2606, line: 1756, column: 26)
!4569 = distinct !DILexicalBlock(scope: !4560, file: !2606, line: 1756, column: 9)
!4570 = !DILocalVariable(name: "rc", scope: !4571, file: !2606, line: 1765, type: !103)
!4571 = distinct !DILexicalBlock(scope: !4572, file: !2606, line: 1765, column: 6)
!4572 = distinct !DILexicalBlock(scope: !4560, file: !2606, line: 1764, column: 25)
!4573 = !DILocalVariable(name: "rc", scope: !4574, file: !2606, line: 1774, type: !103)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !2606, line: 1774, column: 4)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !2606, line: 1773, column: 18)
!4576 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1773, column: 7)
!4577 = !DILocalVariable(name: "rc", scope: !4578, file: !2606, line: 1819, type: !103)
!4578 = distinct !DILexicalBlock(scope: !4579, file: !2606, line: 1819, column: 5)
!4579 = distinct !DILexicalBlock(scope: !4580, file: !2606, line: 1818, column: 44)
!4580 = distinct !DILexicalBlock(scope: !4581, file: !2606, line: 1818, column: 8)
!4581 = distinct !DILexicalBlock(scope: !4582, file: !2606, line: 1817, column: 10)
!4582 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1777, column: 7)
!4583 = !DILocalVariable(name: "rc", scope: !4584, file: !2606, line: 1823, type: !103)
!4584 = distinct !DILexicalBlock(scope: !4585, file: !2606, line: 1823, column: 5)
!4585 = distinct !DILexicalBlock(scope: !4586, file: !2606, line: 1822, column: 26)
!4586 = distinct !DILexicalBlock(scope: !4581, file: !2606, line: 1822, column: 8)
!4587 = !DILocalVariable(name: "rc", scope: !4588, file: !2606, line: 1828, type: !103)
!4588 = distinct !DILexicalBlock(scope: !4589, file: !2606, line: 1828, column: 5)
!4589 = distinct !DILexicalBlock(scope: !4581, file: !2606, line: 1827, column: 26)
!4590 = !DILocalVariable(name: "rc", scope: !4591, file: !2606, line: 1831, type: !103)
!4591 = distinct !DILexicalBlock(scope: !4581, file: !2606, line: 1831, column: 4)
!4592 = !DILocalVariable(name: "rc", scope: !4593, file: !2606, line: 1836, type: !103)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !2606, line: 1836, column: 4)
!4594 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1835, column: 21)
!4595 = !DILabel(scope: !4551, name: "prec_int_pad0", file: !2606, line: 1634)
!4596 = !DILocation(line: 0, scope: !4455)
!4597 = !DILocation(line: 1341, column: 2, scope: !4455)
!4598 = !DILocation(line: 1341, column: 7, scope: !4455)
!4599 = !DILocation(line: 1375, column: 2, scope: !4455)
!4600 = !DILocation(line: 1342, column: 9, scope: !4455)
!4601 = !DILocation(line: 1375, column: 9, scope: !4455)
!4602 = !DILocation(line: 1377, column: 4, scope: !4479)
!4603 = !DILocation(line: 0, scope: !4479)
!4604 = !DILocation(line: 1377, column: 4, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4479, file: !2606, line: 1377, column: 4)
!4606 = distinct !{!4606, !4599, !4607}
!4607 = !DILocation(line: 1839, column: 2, scope: !4455)
!4608 = !DILocation(line: 1392, column: 3, scope: !4482)
!4609 = !DILocation(line: 1395, column: 5, scope: !4482)
!4610 = !DILocation(line: 0, scope: !4482)
!4611 = !DILocation(line: 1409, column: 8, scope: !4482)
!4612 = !DILocation(line: 1414, column: 13, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1414, column: 7)
!4614 = !DILocation(line: 1414, column: 7, scope: !4482)
!4615 = !DILocation(line: 1415, column: 12, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4613, file: !2606, line: 1414, column: 25)
!4617 = !DILocation(line: 1417, column: 14, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4616, file: !2606, line: 1417, column: 8)
!4619 = !DILocation(line: 1417, column: 8, scope: !4616)
!4620 = !DILocation(line: 1418, column: 21, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4618, file: !2606, line: 1417, column: 19)
!4622 = !DILocation(line: 1419, column: 13, scope: !4621)
!4623 = !DILocation(line: 1420, column: 4, scope: !4621)
!4624 = !DILocation(line: 1421, column: 20, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4613, file: !2606, line: 1421, column: 14)
!4626 = !DILocation(line: 1421, column: 14, scope: !4613)
!4627 = !DILocation(line: 1431, column: 13, scope: !4542)
!4628 = !DILocation(line: 1431, column: 7, scope: !4482)
!4629 = !DILocation(line: 1432, column: 14, scope: !4541)
!4630 = !DILocation(line: 0, scope: !4541)
!4631 = !DILocation(line: 1434, column: 12, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4541, file: !2606, line: 1434, column: 8)
!4633 = !DILocation(line: 1434, column: 8, scope: !4541)
!4634 = !DILocation(line: 1435, column: 24, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4632, file: !2606, line: 1434, column: 17)
!4636 = !DILocation(line: 1436, column: 4, scope: !4635)
!4637 = !DILocation(line: 1439, column: 20, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4542, file: !2606, line: 1439, column: 14)
!4639 = !DILocation(line: 1439, column: 14, scope: !4542)
!4640 = !DILocation(line: 1469, column: 37, scope: !4482)
!4641 = !DILocation(line: 1448, column: 20, scope: !4482)
!4642 = !DILocation(line: 1449, column: 22, scope: !4482)
!4643 = !DILocation(line: 1471, column: 34, scope: !4482)
!4644 = !DILocation(line: 1478, column: 7, scope: !4482)
!4645 = !DILocation(line: 1479, column: 4, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !2606, line: 1478, column: 40)
!4647 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1478, column: 7)
!4648 = !DILocation(line: 1484, column: 19, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4646, file: !2606, line: 1479, column: 24)
!4650 = !DILocation(line: 1484, column: 17, scope: !4649)
!4651 = !DILocation(line: 1485, column: 5, scope: !4649)
!4652 = !DILocation(line: 1492, column: 20, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !2606, line: 1491, column: 12)
!4654 = distinct !DILexicalBlock(scope: !4649, file: !2606, line: 1487, column: 9)
!4655 = !DILocation(line: 1492, column: 18, scope: !4653)
!4656 = !DILocation(line: 1494, column: 5, scope: !4649)
!4657 = !DILocation(line: 1497, column: 23, scope: !4649)
!4658 = !DILocation(line: 1496, column: 17, scope: !4649)
!4659 = !DILocation(line: 1498, column: 5, scope: !4649)
!4660 = !DILocation(line: 1501, column: 23, scope: !4649)
!4661 = !DILocation(line: 1500, column: 17, scope: !4649)
!4662 = !DILocation(line: 1502, column: 5, scope: !4649)
!4663 = !DILocation(line: 1513, column: 23, scope: !4649)
!4664 = !DILocation(line: 1513, column: 6, scope: !4649)
!4665 = !DILocation(line: 1512, column: 17, scope: !4649)
!4666 = !DILocation(line: 1514, column: 5, scope: !4649)
!4667 = !DILocation(line: 0, scope: !4649)
!4668 = !DILocation(line: 1516, column: 8, scope: !4646)
!4669 = !DILocation(line: 1517, column: 19, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !2606, line: 1516, column: 33)
!4671 = distinct !DILexicalBlock(scope: !4646, file: !2606, line: 1516, column: 8)
!4672 = !DILocation(line: 1517, column: 17, scope: !4670)
!4673 = !DILocation(line: 1518, column: 4, scope: !4670)
!4674 = !DILocation(line: 1519, column: 19, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !2606, line: 1518, column: 39)
!4676 = distinct !DILexicalBlock(scope: !4671, file: !2606, line: 1518, column: 15)
!4677 = !DILocation(line: 1519, column: 17, scope: !4675)
!4678 = !DILocation(line: 1520, column: 4, scope: !4675)
!4679 = !DILocation(line: 1522, column: 4, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !2606, line: 1521, column: 47)
!4681 = distinct !DILexicalBlock(scope: !4647, file: !2606, line: 1521, column: 14)
!4682 = !DILocation(line: 1527, column: 19, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4680, file: !2606, line: 1522, column: 24)
!4684 = !DILocation(line: 1527, column: 17, scope: !4683)
!4685 = !DILocation(line: 1528, column: 5, scope: !4683)
!4686 = !DILocation(line: 0, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4683, file: !2606, line: 1530, column: 9)
!4688 = !DILocation(line: 1540, column: 23, scope: !4683)
!4689 = !DILocation(line: 1539, column: 17, scope: !4683)
!4690 = !DILocation(line: 1542, column: 5, scope: !4683)
!4691 = !DILocation(line: 1545, column: 23, scope: !4683)
!4692 = !DILocation(line: 1544, column: 17, scope: !4683)
!4693 = !DILocation(line: 1547, column: 5, scope: !4683)
!4694 = !DILocation(line: 1551, column: 23, scope: !4683)
!4695 = !DILocation(line: 1551, column: 6, scope: !4683)
!4696 = !DILocation(line: 1550, column: 17, scope: !4683)
!4697 = !DILocation(line: 1552, column: 5, scope: !4683)
!4698 = !DILocation(line: 0, scope: !4683)
!4699 = !DILocation(line: 1554, column: 8, scope: !4680)
!4700 = !DILocation(line: 1555, column: 19, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !2606, line: 1554, column: 33)
!4702 = distinct !DILexicalBlock(scope: !4680, file: !2606, line: 1554, column: 8)
!4703 = !DILocation(line: 1555, column: 17, scope: !4701)
!4704 = !DILocation(line: 1556, column: 4, scope: !4701)
!4705 = !DILocation(line: 1557, column: 19, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !2606, line: 1556, column: 39)
!4707 = distinct !DILexicalBlock(scope: !4702, file: !2606, line: 1556, column: 15)
!4708 = !DILocation(line: 1557, column: 17, scope: !4706)
!4709 = !DILocation(line: 1558, column: 4, scope: !4706)
!4710 = !DILocation(line: 0, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !2606, line: 1560, column: 8)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !2606, line: 1559, column: 45)
!4713 = distinct !DILexicalBlock(scope: !4681, file: !2606, line: 1559, column: 14)
!4714 = !DILocation(line: 1566, column: 17, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !2606, line: 1565, column: 46)
!4716 = distinct !DILexicalBlock(scope: !4713, file: !2606, line: 1565, column: 14)
!4717 = !DILocation(line: 1566, column: 15, scope: !4715)
!4718 = !DILocation(line: 1567, column: 3, scope: !4715)
!4719 = !DILocation(line: 1574, column: 21, scope: !4548)
!4720 = !DILocation(line: 1575, column: 4, scope: !4546)
!4721 = !DILocation(line: 0, scope: !4546)
!4722 = !DILocation(line: 1575, column: 4, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4546, file: !2606, line: 1575, column: 4)
!4724 = !DILocation(line: 1582, column: 17, scope: !4482)
!4725 = !DILocation(line: 1582, column: 3, scope: !4482)
!4726 = !DILocation(line: 1584, column: 4, scope: !4550)
!4727 = !DILocation(line: 0, scope: !4550)
!4728 = !DILocation(line: 1584, column: 4, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4550, file: !2606, line: 1584, column: 4)
!4730 = !DILocation(line: 1587, column: 31, scope: !4553)
!4731 = !DILocation(line: 1591, column: 18, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4553, file: !2606, line: 1591, column: 8)
!4733 = !DILocation(line: 1591, column: 8, scope: !4553)
!4734 = !DILocation(line: 1592, column: 11, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4732, file: !2606, line: 1591, column: 24)
!4736 = !DILocation(line: 0, scope: !4553)
!4737 = !DILocation(line: 1593, column: 4, scope: !4735)
!4738 = !DILocation(line: 1594, column: 11, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4732, file: !2606, line: 1593, column: 11)
!4740 = !DILocation(line: 1604, column: 51, scope: !4551)
!4741 = !DILocation(line: 1604, column: 13, scope: !4551)
!4742 = !DILocation(line: 1604, column: 11, scope: !4551)
!4743 = !DILocation(line: 1606, column: 4, scope: !4551)
!4744 = !DILocation(line: 1609, column: 14, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4551, file: !2606, line: 1609, column: 8)
!4746 = !DILocation(line: 1609, column: 8, scope: !4551)
!4747 = !DILocation(line: 1619, column: 18, scope: !4551)
!4748 = !DILocation(line: 1620, column: 13, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4551, file: !2606, line: 1620, column: 8)
!4750 = !DILocation(line: 1620, column: 8, scope: !4551)
!4751 = !DILocation(line: 1622, column: 36, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4749, file: !2606, line: 1620, column: 18)
!4753 = !DILocation(line: 1622, column: 17, scope: !4752)
!4754 = !DILocation(line: 1623, column: 4, scope: !4752)
!4755 = !DILocation(line: 1632, column: 29, scope: !4551)
!4756 = !DILocation(line: 1632, column: 10, scope: !4551)
!4757 = !DILocation(line: 1632, column: 4, scope: !4551)
!4758 = !DILocation(line: 1407, column: 8, scope: !4482)
!4759 = !DILocation(line: 0, scope: !4551)
!4760 = !DILocation(line: 1634, column: 3, scope: !4551)
!4761 = !DILocation(line: 1640, column: 18, scope: !4556)
!4762 = !DILocation(line: 1640, column: 8, scope: !4551)
!4763 = !DILocation(line: 1729, column: 13, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1729, column: 7)
!4765 = !DILocation(line: 1641, column: 22, scope: !4555)
!4766 = !DILocation(line: 0, scope: !4555)
!4767 = !DILocation(line: 1646, column: 21, scope: !4555)
!4768 = !DILocation(line: 1649, column: 13, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4555, file: !2606, line: 1649, column: 9)
!4770 = !DILocation(line: 1649, column: 9, scope: !4555)
!4771 = !DILocation(line: 1650, column: 35, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4769, file: !2606, line: 1649, column: 34)
!4773 = !DILocation(line: 1650, column: 23, scope: !4772)
!4774 = !DILocation(line: 1651, column: 5, scope: !4772)
!4775 = !DILocation(line: 1660, column: 15, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4551, file: !2606, line: 1660, column: 8)
!4777 = !DILocation(line: 1660, column: 19, scope: !4776)
!4778 = !DILocation(line: 1660, column: 8, scope: !4551)
!4779 = !DILocation(line: 1661, column: 23, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4776, file: !2606, line: 1660, column: 28)
!4781 = !DILocation(line: 1661, column: 11, scope: !4780)
!4782 = !DILocation(line: 1665, column: 22, scope: !4780)
!4783 = !DILocation(line: 1666, column: 21, scope: !4780)
!4784 = !DILocation(line: 1668, column: 5, scope: !4780)
!4785 = !DILocation(line: 1677, column: 30, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4787, file: !2606, line: 1676, column: 49)
!4787 = distinct !DILexicalBlock(scope: !4551, file: !2606, line: 1676, column: 8)
!4788 = !DILocation(line: 1677, column: 5, scope: !4786)
!4789 = !DILocation(line: 1680, column: 4, scope: !4551)
!4790 = !DILocation(line: 0, scope: !4732)
!4791 = !DILocation(line: 1597, column: 14, scope: !4553)
!4792 = !DILocation(line: 1699, column: 11, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1699, column: 7)
!4794 = !DILocation(line: 1699, column: 7, scope: !4482)
!4795 = !DILocation(line: 1725, column: 7, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1725, column: 7)
!4797 = !DILocation(line: 1725, column: 12, scope: !4796)
!4798 = !DILocation(line: 1747, column: 13, scope: !4563)
!4799 = !DILocation(line: 1747, column: 7, scope: !4482)
!4800 = !DILocation(line: 1722, column: 24, scope: !4482)
!4801 = !DILocation(line: 1725, column: 7, scope: !4482)
!4802 = !DILocation(line: 1729, column: 7, scope: !4482)
!4803 = !DILocation(line: 1736, column: 13, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4482, file: !2606, line: 1736, column: 7)
!4805 = !DILocation(line: 1735, column: 19, scope: !4482)
!4806 = !DILocation(line: 1736, column: 7, scope: !4482)
!4807 = !DILocation(line: 1748, column: 10, scope: !4562)
!4808 = !DILocation(line: 1750, column: 15, scope: !4561)
!4809 = !DILocation(line: 1750, column: 8, scope: !4562)
!4810 = !DILocation(line: 0, scope: !4560)
!4811 = !DILocation(line: 1756, column: 15, scope: !4569)
!4812 = !DILocation(line: 1756, column: 9, scope: !4560)
!4813 = !DILocation(line: 1758, column: 7, scope: !4565)
!4814 = !DILocation(line: 0, scope: !4565)
!4815 = !DILocation(line: 1758, column: 7, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4565, file: !2606, line: 1758, column: 7)
!4817 = !DILocation(line: 1764, column: 5, scope: !4560)
!4818 = !DILocation(line: 0, scope: !4562)
!4819 = !DILocation(line: 1764, column: 20, scope: !4560)
!4820 = !DILocation(line: 1764, column: 17, scope: !4560)
!4821 = !DILocation(line: 1765, column: 6, scope: !4571)
!4822 = !DILocation(line: 0, scope: !4571)
!4823 = !DILocation(line: 1765, column: 6, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4571, file: !2606, line: 1765, column: 6)
!4825 = distinct !{!4825, !4817, !4826}
!4826 = !DILocation(line: 1766, column: 5, scope: !4560)
!4827 = !DILocation(line: 1773, column: 12, scope: !4576)
!4828 = !DILocation(line: 1773, column: 7, scope: !4482)
!4829 = !DILocation(line: 1773, column: 7, scope: !4576)
!4830 = !DILocation(line: 1774, column: 4, scope: !4574)
!4831 = !DILocation(line: 0, scope: !4574)
!4832 = !DILocation(line: 1774, column: 4, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4574, file: !2606, line: 1774, column: 4)
!4834 = !DILocation(line: 1818, column: 8, scope: !4580)
!4835 = !DILocation(line: 1818, column: 27, scope: !4580)
!4836 = !DILocation(line: 1818, column: 25, scope: !4580)
!4837 = !DILocation(line: 1818, column: 8, scope: !4581)
!4838 = !DILocation(line: 1819, column: 5, scope: !4578)
!4839 = !DILocation(line: 0, scope: !4578)
!4840 = !DILocation(line: 1819, column: 5, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4578, file: !2606, line: 1819, column: 5)
!4842 = !DILocation(line: 1822, column: 14, scope: !4586)
!4843 = !DILocation(line: 1822, column: 8, scope: !4581)
!4844 = !DILocation(line: 1823, column: 5, scope: !4584)
!4845 = !DILocation(line: 0, scope: !4584)
!4846 = !DILocation(line: 1823, column: 5, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4584, file: !2606, line: 1823, column: 5)
!4848 = !DILocation(line: 1826, column: 20, scope: !4581)
!4849 = !DILocation(line: 1827, column: 4, scope: !4581)
!4850 = !DILocation(line: 0, scope: !4581)
!4851 = !DILocation(line: 1827, column: 21, scope: !4581)
!4852 = !DILocation(line: 1827, column: 18, scope: !4581)
!4853 = !DILocation(line: 1828, column: 5, scope: !4588)
!4854 = !DILocation(line: 0, scope: !4588)
!4855 = !DILocation(line: 1828, column: 5, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4588, file: !2606, line: 1828, column: 5)
!4857 = distinct !{!4857, !4849, !4858}
!4858 = !DILocation(line: 1829, column: 4, scope: !4581)
!4859 = !DILocation(line: 1831, column: 4, scope: !4591)
!4860 = !DILocation(line: 0, scope: !4591)
!4861 = !DILocation(line: 1831, column: 4, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4591, file: !2606, line: 1831, column: 4)
!4863 = !DILocation(line: 1835, column: 16, scope: !4482)
!4864 = !DILocation(line: 1835, column: 3, scope: !4482)
!4865 = !DILocation(line: 1836, column: 4, scope: !4593)
!4866 = !DILocation(line: 0, scope: !4593)
!4867 = !DILocation(line: 1836, column: 4, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4593, file: !2606, line: 1836, column: 4)
!4869 = !DILocation(line: 1837, column: 4, scope: !4594)
!4870 = distinct !{!4870, !4864, !4871}
!4871 = !DILocation(line: 1838, column: 3, scope: !4482)
!4872 = !DILocation(line: 1844, column: 1, scope: !4455)
!4873 = distinct !DISubprogram(name: "extract_conversion", scope: !2606, file: !2606, line: 642, type: !4874, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !4876)
!4874 = !DISubroutineType(types: !4875)
!4875 = !{!155, !4530, !155}
!4876 = !{!4877, !4878}
!4877 = !DILocalVariable(name: "conv", arg: 1, scope: !4873, file: !2606, line: 642, type: !4530)
!4878 = !DILocalVariable(name: "sp", arg: 2, scope: !4873, file: !2606, line: 643, type: !155)
!4879 = !DILocation(line: 0, scope: !4873)
!4880 = !DILocation(line: 645, column: 10, scope: !4873)
!4881 = !DILocation(line: 653, column: 2, scope: !4873)
!4882 = !DILocation(line: 654, column: 6, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4873, file: !2606, line: 654, column: 6)
!4884 = !DILocation(line: 654, column: 10, scope: !4883)
!4885 = !DILocation(line: 654, column: 6, scope: !4873)
!4886 = !DILocation(line: 655, column: 24, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4883, file: !2606, line: 654, column: 18)
!4888 = !DILocation(line: 655, column: 19, scope: !4887)
!4889 = !DILocation(line: 656, column: 3, scope: !4887)
!4890 = !DILocation(line: 659, column: 7, scope: !4873)
!4891 = !DILocation(line: 660, column: 7, scope: !4873)
!4892 = !DILocation(line: 661, column: 7, scope: !4873)
!4893 = !DILocation(line: 662, column: 7, scope: !4873)
!4894 = !DILocation(line: 663, column: 7, scope: !4873)
!4895 = !DILocation(line: 665, column: 2, scope: !4873)
!4896 = !DILocation(line: 666, column: 1, scope: !4873)
!4897 = distinct !DISubprogram(name: "outs", scope: !2606, file: !2606, line: 1319, type: !4898, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !4900)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{!103, !3444, !102, !155, !155}
!4900 = !{!4901, !4902, !4903, !4904, !4905, !4906}
!4901 = !DILocalVariable(name: "out", arg: 1, scope: !4897, file: !2606, line: 1319, type: !3444)
!4902 = !DILocalVariable(name: "ctx", arg: 2, scope: !4897, file: !2606, line: 1320, type: !102)
!4903 = !DILocalVariable(name: "sp", arg: 3, scope: !4897, file: !2606, line: 1321, type: !155)
!4904 = !DILocalVariable(name: "ep", arg: 4, scope: !4897, file: !2606, line: 1322, type: !155)
!4905 = !DILocalVariable(name: "count", scope: !4897, file: !2606, line: 1324, type: !356)
!4906 = !DILocalVariable(name: "rc", scope: !4907, file: !2606, line: 1327, type: !103)
!4907 = distinct !DILexicalBlock(scope: !4897, file: !2606, line: 1326, column: 45)
!4908 = !DILocation(line: 0, scope: !4897)
!4909 = !DILocation(line: 1326, column: 2, scope: !4897)
!4910 = !DILocation(line: 1324, column: 9, scope: !4897)
!4911 = !DILocation(line: 1326, column: 13, scope: !4897)
!4912 = !DILocation(line: 1326, column: 19, scope: !4897)
!4913 = !DILocation(line: 1327, column: 21, scope: !4907)
!4914 = !DILocation(line: 1326, column: 36, scope: !4897)
!4915 = !DILocation(line: 1326, column: 39, scope: !4897)
!4916 = !DILocation(line: 1327, column: 24, scope: !4907)
!4917 = !DILocation(line: 1327, column: 16, scope: !4907)
!4918 = !DILocation(line: 1327, column: 12, scope: !4907)
!4919 = !DILocation(line: 0, scope: !4907)
!4920 = !DILocation(line: 1329, column: 10, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4907, file: !2606, line: 1329, column: 7)
!4922 = !DILocation(line: 1329, column: 7, scope: !4907)
!4923 = distinct !{!4923, !4909, !4924}
!4924 = !DILocation(line: 1333, column: 2, scope: !4897)
!4925 = !DILocation(line: 1336, column: 1, scope: !4897)
!4926 = distinct !DISubprogram(name: "encode_uint", scope: !2606, file: !2606, line: 788, type: !4927, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !4929)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{!1083, !2628, !4530, !1083, !155}
!4929 = !{!4930, !4931, !4932, !4933, !4934, !4935, !4937, !4938}
!4930 = !DILocalVariable(name: "value", arg: 1, scope: !4926, file: !2606, line: 788, type: !2628)
!4931 = !DILocalVariable(name: "conv", arg: 2, scope: !4926, file: !2606, line: 789, type: !4530)
!4932 = !DILocalVariable(name: "bps", arg: 3, scope: !4926, file: !2606, line: 790, type: !1083)
!4933 = !DILocalVariable(name: "bpe", arg: 4, scope: !4926, file: !2606, line: 791, type: !155)
!4934 = !DILocalVariable(name: "upcase", scope: !4926, file: !2606, line: 793, type: !166)
!4935 = !DILocalVariable(name: "radix", scope: !4926, file: !2606, line: 794, type: !4936)
!4936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4937 = !DILocalVariable(name: "bp", scope: !4926, file: !2606, line: 795, type: !1083)
!4938 = !DILocalVariable(name: "lsv", scope: !4939, file: !2606, line: 798, type: !32)
!4939 = distinct !DILexicalBlock(scope: !4926, file: !2606, line: 797, column: 5)
!4940 = !DILocation(line: 0, scope: !4926)
!4941 = !DILocation(line: 793, column: 35, scope: !4926)
!4942 = !DILocation(line: 793, column: 24, scope: !4926)
!4943 = !DILocation(line: 793, column: 16, scope: !4926)
!4944 = !DILocation(line: 794, column: 29, scope: !4926)
!4945 = !DILocation(line: 795, column: 24, scope: !4926)
!4946 = !DILocation(line: 795, column: 17, scope: !4926)
!4947 = !DILocation(line: 797, column: 2, scope: !4926)
!4948 = !DILocation(line: 802, column: 9, scope: !4939)
!4949 = !DILocation(line: 798, column: 22, scope: !4939)
!4950 = !DILocation(line: 0, scope: !4939)
!4951 = !DILocation(line: 800, column: 16, scope: !4939)
!4952 = !DILocation(line: 800, column: 11, scope: !4939)
!4953 = !DILocation(line: 800, column: 4, scope: !4939)
!4954 = !DILocation(line: 800, column: 9, scope: !4939)
!4955 = !DILocation(line: 803, column: 18, scope: !4926)
!4956 = !DILocation(line: 803, column: 24, scope: !4926)
!4957 = !DILocation(line: 803, column: 2, scope: !4939)
!4958 = distinct !{!4958, !4947, !4959}
!4959 = !DILocation(line: 803, column: 37, scope: !4926)
!4960 = !DILocation(line: 808, column: 12, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4926, file: !2606, line: 808, column: 6)
!4962 = !DILocation(line: 808, column: 6, scope: !4926)
!4963 = !DILocation(line: 809, column: 7, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4961, file: !2606, line: 808, column: 23)
!4965 = !DILocation(line: 813, column: 3, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4967, file: !2606, line: 811, column: 27)
!4967 = distinct !DILexicalBlock(scope: !4968, file: !2606, line: 811, column: 14)
!4968 = distinct !DILexicalBlock(scope: !4964, file: !2606, line: 809, column: 7)
!4969 = !DILocation(line: 0, scope: !4968)
!4970 = !DILocation(line: 818, column: 2, scope: !4926)
!4971 = distinct !DISubprogram(name: "store_count", scope: !2606, file: !2606, line: 1280, type: !4972, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !4976)
!4972 = !DISubroutineType(types: !4973)
!4973 = !{null, !4974, !102, !103}
!4974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 32)
!4975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4497)
!4976 = !{!4977, !4978, !4979}
!4977 = !DILocalVariable(name: "conv", arg: 1, scope: !4971, file: !2606, line: 1280, type: !4974)
!4978 = !DILocalVariable(name: "dp", arg: 2, scope: !4971, file: !2606, line: 1281, type: !102)
!4979 = !DILocalVariable(name: "count", arg: 3, scope: !4971, file: !2606, line: 1282, type: !103)
!4980 = !DILocation(line: 0, scope: !4971)
!4981 = !DILocation(line: 1284, column: 38, scope: !4971)
!4982 = !DILocation(line: 1284, column: 2, scope: !4971)
!4983 = !DILocation(line: 1286, column: 4, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4971, file: !2606, line: 1284, column: 50)
!4985 = !DILocation(line: 1286, column: 14, scope: !4984)
!4986 = !DILocation(line: 1287, column: 3, scope: !4984)
!4987 = !DILocation(line: 1289, column: 24, scope: !4984)
!4988 = !DILocation(line: 1289, column: 22, scope: !4984)
!4989 = !DILocation(line: 1290, column: 3, scope: !4984)
!4990 = !DILocation(line: 1292, column: 18, scope: !4984)
!4991 = !DILocation(line: 1292, column: 4, scope: !4984)
!4992 = !DILocation(line: 1292, column: 16, scope: !4984)
!4993 = !DILocation(line: 1293, column: 3, scope: !4984)
!4994 = !DILocation(line: 1295, column: 4, scope: !4984)
!4995 = !DILocation(line: 1295, column: 15, scope: !4984)
!4996 = !DILocation(line: 1296, column: 3, scope: !4984)
!4997 = !DILocation(line: 1298, column: 22, scope: !4984)
!4998 = !DILocation(line: 1298, column: 4, scope: !4984)
!4999 = !DILocation(line: 1298, column: 20, scope: !4984)
!5000 = !DILocation(line: 1299, column: 3, scope: !4984)
!5001 = !DILocation(line: 1301, column: 21, scope: !4984)
!5002 = !DILocation(line: 1301, column: 4, scope: !4984)
!5003 = !DILocation(line: 1301, column: 19, scope: !4984)
!5004 = !DILocation(line: 1302, column: 3, scope: !4984)
!5005 = !DILocation(line: 1304, column: 4, scope: !4984)
!5006 = !DILocation(line: 1304, column: 17, scope: !4984)
!5007 = !DILocation(line: 1305, column: 3, scope: !4984)
!5008 = !DILocation(line: 1307, column: 4, scope: !4984)
!5009 = !DILocation(line: 1307, column: 20, scope: !4984)
!5010 = !DILocation(line: 1308, column: 3, scope: !4984)
!5011 = !DILocation(line: 1316, column: 1, scope: !4971)
!5012 = distinct !DISubprogram(name: "isupper", scope: !5013, file: !5013, line: 16, type: !118, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !5014)
!5013 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5014 = !{!5015}
!5015 = !DILocalVariable(name: "a", arg: 1, scope: !5012, file: !5013, line: 16, type: !103)
!5016 = !DILocation(line: 0, scope: !5012)
!5017 = !DILocation(line: 18, column: 29, scope: !5012)
!5018 = !DILocation(line: 18, column: 45, scope: !5012)
!5019 = !DILocation(line: 18, column: 2, scope: !5012)
!5020 = distinct !DISubprogram(name: "conversion_radix", scope: !2606, file: !2606, line: 761, type: !5021, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !5023)
!5021 = !DISubroutineType(types: !5022)
!5022 = !{!356, !108}
!5023 = !{!5024}
!5024 = !DILocalVariable(name: "specifier", arg: 1, scope: !5020, file: !2606, line: 761, type: !108)
!5025 = !DILocation(line: 0, scope: !5020)
!5026 = !DILocation(line: 763, column: 2, scope: !5020)
!5027 = !DILocation(line: 770, column: 3, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5020, file: !2606, line: 763, column: 21)
!5029 = !DILocation(line: 774, column: 3, scope: !5028)
!5030 = !DILocation(line: 0, scope: !5028)
!5031 = !DILocation(line: 776, column: 1, scope: !5020)
!5032 = distinct !DISubprogram(name: "extract_flags", scope: !2606, file: !2606, line: 339, type: !4874, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !5033)
!5033 = !{!5034, !5035, !5036}
!5034 = !DILocalVariable(name: "conv", arg: 1, scope: !5032, file: !2606, line: 339, type: !4530)
!5035 = !DILocalVariable(name: "sp", arg: 2, scope: !5032, file: !2606, line: 340, type: !155)
!5036 = !DILocalVariable(name: "loop", scope: !5032, file: !2606, line: 342, type: !166)
!5037 = !DILocation(line: 0, scope: !5032)
!5038 = !DILocation(line: 344, column: 2, scope: !5032)
!5039 = !DILocation(line: 345, column: 11, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5032, file: !2606, line: 344, column: 5)
!5041 = !DILocation(line: 345, column: 3, scope: !5040)
!5042 = !DILocation(line: 351, column: 4, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5040, file: !2606, line: 345, column: 16)
!5044 = !DILocation(line: 354, column: 4, scope: !5043)
!5045 = !DILocation(line: 357, column: 4, scope: !5043)
!5046 = !DILocation(line: 360, column: 4, scope: !5043)
!5047 = !DILocation(line: 0, scope: !5043)
!5048 = !DILocation(line: 370, column: 12, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5032, file: !2606, line: 370, column: 6)
!5050 = !DILocation(line: 370, column: 22, scope: !5049)
!5051 = !DILocation(line: 371, column: 19, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5049, file: !2606, line: 370, column: 42)
!5053 = !DILocation(line: 372, column: 2, scope: !5052)
!5054 = !DILocation(line: 376, column: 2, scope: !5032)
!5055 = distinct !DISubprogram(name: "extract_width", scope: !2606, file: !2606, line: 388, type: !4874, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !5056)
!5056 = !{!5057, !5058, !5059, !5060}
!5057 = !DILocalVariable(name: "conv", arg: 1, scope: !5055, file: !2606, line: 388, type: !4530)
!5058 = !DILocalVariable(name: "sp", arg: 2, scope: !5055, file: !2606, line: 389, type: !155)
!5059 = !DILocalVariable(name: "wp", scope: !5055, file: !2606, line: 398, type: !155)
!5060 = !DILocalVariable(name: "width", scope: !5055, file: !2606, line: 399, type: !356)
!5061 = !DILocation(line: 0, scope: !5055)
!5062 = !DILocation(line: 391, column: 8, scope: !5055)
!5063 = !DILocation(line: 391, column: 22, scope: !5055)
!5064 = !DILocation(line: 393, column: 6, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5055, file: !2606, line: 393, column: 6)
!5066 = !DILocation(line: 393, column: 10, scope: !5065)
!5067 = !DILocation(line: 393, column: 6, scope: !5055)
!5068 = !DILocation(line: 394, column: 20, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5065, file: !2606, line: 393, column: 18)
!5070 = !DILocation(line: 395, column: 10, scope: !5069)
!5071 = !DILocation(line: 395, column: 3, scope: !5069)
!5072 = !DILocation(line: 399, column: 17, scope: !5055)
!5073 = !DILocation(line: 401, column: 6, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5055, file: !2606, line: 401, column: 6)
!5075 = !DILocation(line: 401, column: 9, scope: !5074)
!5076 = !DILocation(line: 401, column: 6, scope: !5055)
!5077 = !DILocation(line: 402, column: 23, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5074, file: !2606, line: 401, column: 16)
!5079 = !DILocation(line: 403, column: 9, scope: !5078)
!5080 = !DILocation(line: 403, column: 21, scope: !5078)
!5081 = !DILocation(line: 405, column: 11, scope: !5078)
!5082 = !DILocation(line: 404, column: 21, scope: !5078)
!5083 = !DILocation(line: 406, column: 2, scope: !5078)
!5084 = !DILocation(line: 409, column: 1, scope: !5055)
!5085 = distinct !DISubprogram(name: "extract_prec", scope: !2606, file: !2606, line: 420, type: !4874, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !5086)
!5086 = !{!5087, !5088, !5089}
!5087 = !DILocalVariable(name: "conv", arg: 1, scope: !5085, file: !2606, line: 420, type: !4530)
!5088 = !DILocalVariable(name: "sp", arg: 2, scope: !5085, file: !2606, line: 421, type: !155)
!5089 = !DILocalVariable(name: "prec", scope: !5085, file: !2606, line: 435, type: !356)
!5090 = !DILocation(line: 0, scope: !5085)
!5091 = !DILocation(line: 423, column: 24, scope: !5085)
!5092 = !DILocation(line: 423, column: 28, scope: !5085)
!5093 = !DILocation(line: 423, column: 8, scope: !5085)
!5094 = !DILocation(line: 423, column: 21, scope: !5085)
!5095 = !DILocation(line: 425, column: 6, scope: !5085)
!5096 = !DILocation(line: 428, column: 2, scope: !5085)
!5097 = !DILocation(line: 430, column: 6, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5085, file: !2606, line: 430, column: 6)
!5099 = !DILocation(line: 430, column: 10, scope: !5098)
!5100 = !DILocation(line: 430, column: 6, scope: !5085)
!5101 = !DILocation(line: 431, column: 19, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5098, file: !2606, line: 430, column: 18)
!5103 = !DILocation(line: 432, column: 10, scope: !5102)
!5104 = !DILocation(line: 432, column: 3, scope: !5102)
!5105 = !DILocation(line: 435, column: 16, scope: !5085)
!5106 = !DILocation(line: 437, column: 8, scope: !5085)
!5107 = !DILocation(line: 437, column: 19, scope: !5085)
!5108 = !DILocation(line: 439, column: 10, scope: !5085)
!5109 = !DILocation(line: 438, column: 20, scope: !5085)
!5110 = !DILocation(line: 441, column: 9, scope: !5085)
!5111 = !DILocation(line: 442, column: 1, scope: !5085)
!5112 = distinct !DISubprogram(name: "extract_length", scope: !2606, file: !2606, line: 453, type: !4874, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !5113)
!5113 = !{!5114, !5115}
!5114 = !DILocalVariable(name: "conv", arg: 1, scope: !5112, file: !2606, line: 453, type: !4530)
!5115 = !DILocalVariable(name: "sp", arg: 2, scope: !5112, file: !2606, line: 454, type: !155)
!5116 = !DILocation(line: 0, scope: !5112)
!5117 = !DILocation(line: 456, column: 10, scope: !5112)
!5118 = !DILocation(line: 456, column: 2, scope: !5112)
!5119 = !DILocation(line: 458, column: 8, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5121, file: !2606, line: 458, column: 7)
!5121 = distinct !DILexicalBlock(scope: !5112, file: !2606, line: 456, column: 15)
!5122 = !DILocation(line: 458, column: 7, scope: !5120)
!5123 = !DILocation(line: 458, column: 13, scope: !5120)
!5124 = !DILocation(line: 0, scope: !5120)
!5125 = !DILocation(line: 458, column: 7, scope: !5121)
!5126 = !DILocation(line: 459, column: 21, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5120, file: !2606, line: 458, column: 21)
!5128 = !DILocation(line: 460, column: 4, scope: !5127)
!5129 = !DILocation(line: 461, column: 3, scope: !5127)
!5130 = !DILocation(line: 462, column: 21, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5120, file: !2606, line: 461, column: 10)
!5132 = !DILocation(line: 466, column: 8, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5121, file: !2606, line: 466, column: 7)
!5134 = !DILocation(line: 466, column: 7, scope: !5133)
!5135 = !DILocation(line: 466, column: 13, scope: !5133)
!5136 = !DILocation(line: 0, scope: !5133)
!5137 = !DILocation(line: 466, column: 7, scope: !5121)
!5138 = !DILocation(line: 467, column: 21, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5133, file: !2606, line: 466, column: 21)
!5140 = !DILocation(line: 468, column: 4, scope: !5139)
!5141 = !DILocation(line: 469, column: 3, scope: !5139)
!5142 = !DILocation(line: 470, column: 21, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5133, file: !2606, line: 469, column: 10)
!5144 = !DILocation(line: 474, column: 9, scope: !5121)
!5145 = !DILocation(line: 474, column: 20, scope: !5121)
!5146 = !DILocation(line: 475, column: 3, scope: !5121)
!5147 = !DILocation(line: 476, column: 3, scope: !5121)
!5148 = !DILocation(line: 478, column: 9, scope: !5121)
!5149 = !DILocation(line: 478, column: 20, scope: !5121)
!5150 = !DILocation(line: 479, column: 3, scope: !5121)
!5151 = !DILocation(line: 480, column: 3, scope: !5121)
!5152 = !DILocation(line: 482, column: 9, scope: !5121)
!5153 = !DILocation(line: 482, column: 20, scope: !5121)
!5154 = !DILocation(line: 483, column: 3, scope: !5121)
!5155 = !DILocation(line: 484, column: 3, scope: !5121)
!5156 = !DILocation(line: 486, column: 9, scope: !5121)
!5157 = !DILocation(line: 486, column: 20, scope: !5121)
!5158 = !DILocation(line: 487, column: 3, scope: !5121)
!5159 = !DILocation(line: 492, column: 21, scope: !5121)
!5160 = !DILocation(line: 493, column: 3, scope: !5121)
!5161 = !DILocation(line: 495, column: 9, scope: !5121)
!5162 = !DILocation(line: 495, column: 20, scope: !5121)
!5163 = !DILocation(line: 496, column: 3, scope: !5121)
!5164 = !DILocation(line: 498, column: 2, scope: !5112)
!5165 = distinct !DISubprogram(name: "extract_specifier", scope: !2606, file: !2606, line: 513, type: !4874, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !5166)
!5166 = !{!5167, !5168, !5169, !5170}
!5167 = !DILocalVariable(name: "conv", arg: 1, scope: !5165, file: !2606, line: 513, type: !4530)
!5168 = !DILocalVariable(name: "sp", arg: 2, scope: !5165, file: !2606, line: 514, type: !155)
!5169 = !DILocalVariable(name: "unsupported", scope: !5165, file: !2606, line: 516, type: !166)
!5170 = !DILabel(scope: !5171, name: "int_conv", file: !2606, line: 526)
!5171 = distinct !DILexicalBlock(scope: !5165, file: !2606, line: 520, column: 27)
!5172 = !DILocation(line: 0, scope: !5165)
!5173 = !DILocation(line: 518, column: 20, scope: !5165)
!5174 = !DILocation(line: 518, column: 8, scope: !5165)
!5175 = !DILocation(line: 518, column: 18, scope: !5165)
!5176 = !DILocation(line: 520, column: 2, scope: !5165)
!5177 = !DILocation(line: 525, column: 3, scope: !5171)
!5178 = !DILocation(line: 0, scope: !5171)
!5179 = !DILocation(line: 526, column: 1, scope: !5171)
!5180 = !DILocation(line: 528, column: 24, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5171, file: !2606, line: 528, column: 7)
!5182 = !DILocation(line: 528, column: 7, scope: !5171)
!5183 = !DILocation(line: 535, column: 23, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5171, file: !2606, line: 535, column: 7)
!5185 = !DILocation(line: 535, column: 7, scope: !5171)
!5186 = !DILocation(line: 536, column: 36, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5184, file: !2606, line: 535, column: 31)
!5188 = !DILocation(line: 537, column: 3, scope: !5187)
!5189 = !DILocation(line: 570, column: 9, scope: !5171)
!5190 = !DILocation(line: 570, column: 23, scope: !5171)
!5191 = !DILocation(line: 575, column: 4, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5193, file: !2606, line: 573, column: 48)
!5193 = distinct !DILexicalBlock(scope: !5171, file: !2606, line: 573, column: 7)
!5194 = !DILocation(line: 603, column: 9, scope: !5171)
!5195 = !DILocation(line: 603, column: 23, scope: !5171)
!5196 = !DILocation(line: 605, column: 24, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5171, file: !2606, line: 605, column: 7)
!5198 = !DILocation(line: 605, column: 7, scope: !5171)
!5199 = !DILocation(line: 612, column: 9, scope: !5171)
!5200 = !DILocation(line: 612, column: 23, scope: !5171)
!5201 = !DILocation(line: 619, column: 24, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5171, file: !2606, line: 619, column: 7)
!5203 = !DILocation(line: 619, column: 7, scope: !5171)
!5204 = !DILocation(line: 625, column: 9, scope: !5171)
!5205 = !DILocation(line: 625, column: 17, scope: !5171)
!5206 = !DILocation(line: 626, column: 3, scope: !5171)
!5207 = !DILocation(line: 629, column: 20, scope: !5165)
!5208 = !DILocation(line: 629, column: 8, scope: !5165)
!5209 = !DILocation(line: 518, column: 23, scope: !5165)
!5210 = !DILocation(line: 631, column: 2, scope: !5165)
!5211 = distinct !DISubprogram(name: "extract_decimal", scope: !2606, file: !2606, line: 318, type: !5212, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !5215)
!5212 = !DISubroutineType(types: !5213)
!5213 = !{!356, !5214}
!5214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!5215 = !{!5216, !5217, !5218}
!5216 = !DILocalVariable(name: "str", arg: 1, scope: !5211, file: !2606, line: 318, type: !5214)
!5217 = !DILocalVariable(name: "sp", scope: !5211, file: !2606, line: 320, type: !155)
!5218 = !DILocalVariable(name: "val", scope: !5211, file: !2606, line: 321, type: !356)
!5219 = !DILocation(line: 0, scope: !5211)
!5220 = !DILocation(line: 320, column: 19, scope: !5211)
!5221 = !DILocation(line: 323, column: 37, scope: !5211)
!5222 = !DILocation(line: 323, column: 17, scope: !5211)
!5223 = !DILocation(line: 323, column: 9, scope: !5211)
!5224 = !DILocation(line: 323, column: 2, scope: !5211)
!5225 = !DILocation(line: 324, column: 13, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5211, file: !2606, line: 323, column: 43)
!5227 = !DILocation(line: 324, column: 24, scope: !5226)
!5228 = !DILocation(line: 324, column: 19, scope: !5226)
!5229 = !DILocation(line: 324, column: 27, scope: !5226)
!5230 = distinct !{!5230, !5224, !5231}
!5231 = !DILocation(line: 325, column: 2, scope: !5211)
!5232 = !DILocation(line: 326, column: 7, scope: !5211)
!5233 = !DILocation(line: 327, column: 2, scope: !5211)
!5234 = distinct !DISubprogram(name: "isdigit", scope: !5013, file: !5013, line: 43, type: !118, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !5235)
!5235 = !{!5236}
!5236 = !DILocalVariable(name: "a", arg: 1, scope: !5234, file: !5013, line: 43, type: !103)
!5237 = !DILocation(line: 0, scope: !5234)
!5238 = !DILocation(line: 45, column: 29, scope: !5234)
!5239 = !DILocation(line: 45, column: 45, scope: !5234)
!5240 = !DILocation(line: 45, column: 2, scope: !5234)
!5241 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5242, file: !5242, line: 9, type: !3256, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !473)
!5242 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!5243 = !DILocation(line: 11, column: 1, scope: !5241)
!5244 = !{i64 2147561979, i64 2147562022, i64 2147562062}
!5245 = !DILocation(line: 12, column: 1, scope: !5241)
!5246 = !{i64 2147566206, i64 2147566249, i64 2147566289}
!5247 = !DILocation(line: 13, column: 1, scope: !5241)
!5248 = !{i64 2147566415, i64 2147566458, i64 2147566498}
!5249 = !DILocation(line: 14, column: 1, scope: !5241)
!5250 = !{i64 2147566632, i64 2147566675, i64 2147566715}
!5251 = !DILocation(line: 15, column: 1, scope: !5241)
!5252 = !{i64 2147566801, i64 2147566844, i64 2147566884}
!5253 = !DILocation(line: 16, column: 1, scope: !5241)
!5254 = !{i64 2147566964, i64 2147567007, i64 2147567047}
!5255 = !DILocation(line: 17, column: 1, scope: !5241)
!5256 = !{i64 2147567148, i64 2147567191, i64 2147567231}
!5257 = !DILocation(line: 18, column: 1, scope: !5241)
!5258 = !{i64 2147567327, i64 2147567370, i64 2147567410}
!5259 = !DILocation(line: 19, column: 1, scope: !5241)
!5260 = !{i64 2147567570, i64 2147567613, i64 2147567653}
!5261 = !DILocation(line: 20, column: 1, scope: !5241)
!5262 = !{i64 2147567805, i64 2147567848, i64 2147567888}
!5263 = !DILocation(line: 21, column: 1, scope: !5241)
!5264 = !{i64 2147567992, i64 2147568035, i64 2147568075}
!5265 = !DILocation(line: 22, column: 1, scope: !5241)
!5266 = !{i64 2147568208, i64 2147568251, i64 2147568291}
!5267 = !DILocation(line: 23, column: 1, scope: !5241)
!5268 = !{i64 2147568411, i64 2147568454, i64 2147568494}
!5269 = !DILocation(line: 24, column: 1, scope: !5241)
!5270 = !{i64 2147568614, i64 2147568657, i64 2147568697}
!5271 = !DILocation(line: 25, column: 1, scope: !5241)
!5272 = !{i64 2147568789, i64 2147568832, i64 2147568872}
!5273 = !DILocation(line: 26, column: 1, scope: !5241)
!5274 = !{i64 2147568997, i64 2147569040, i64 2147569080}
!5275 = !DILocation(line: 27, column: 1, scope: !5241)
!5276 = !{i64 2147569201, i64 2147569244, i64 2147569284}
!5277 = !DILocation(line: 28, column: 1, scope: !5241)
!5278 = !{i64 2147569394, i64 2147569437, i64 2147569477}
!5279 = !DILocation(line: 29, column: 1, scope: !5241)
!5280 = !{i64 2147569596, i64 2147569639, i64 2147569679}
!5281 = !DILocation(line: 30, column: 1, scope: !5241)
!5282 = !{i64 2147569823, i64 2147569866, i64 2147569906}
!5283 = !DILocation(line: 31, column: 1, scope: !5241)
!5284 = !{i64 2147570025, i64 2147570068, i64 2147570108}
!5285 = !DILocation(line: 32, column: 1, scope: !5241)
!5286 = !{i64 2147570240, i64 2147570283, i64 2147570323}
!5287 = !DILocation(line: 33, column: 1, scope: !5241)
!5288 = !{i64 2147570412, i64 2147570455, i64 2147570495}
!5289 = !DILocation(line: 34, column: 1, scope: !5241)
!5290 = !{i64 2147570614, i64 2147570657, i64 2147570697}
!5291 = !DILocation(line: 35, column: 1, scope: !5241)
!5292 = !{i64 2147570840, i64 2147570883, i64 2147570923}
!5293 = !DILocation(line: 36, column: 1, scope: !5241)
!5294 = !{i64 2147571039, i64 2147571082, i64 2147571122}
!5295 = !DILocation(line: 37, column: 1, scope: !5241)
!5296 = !{i64 2147571214, i64 2147571257, i64 2147571297}
!5297 = !DILocation(line: 38, column: 1, scope: !5241)
!5298 = !{i64 2147571482, i64 2147571525, i64 2147571565}
!5299 = !DILocation(line: 39, column: 1, scope: !5241)
!5300 = !{i64 2147571735, i64 2147571778, i64 2147571818}
!5301 = !DILocation(line: 40, column: 1, scope: !5241)
!5302 = !{i64 2147571976, i64 2147572019, i64 2147572059}
!5303 = !DILocation(line: 41, column: 1, scope: !5241)
!5304 = !{i64 2147572211, i64 2147572254, i64 2147572294}
!5305 = !DILocation(line: 42, column: 1, scope: !5241)
!5306 = !{i64 2147572443, i64 2147572486, i64 2147572526}
!5307 = !DILocation(line: 43, column: 1, scope: !5241)
!5308 = !{i64 2147572669, i64 2147572712, i64 2147572752}
!5309 = !DILocation(line: 44, column: 1, scope: !5241)
!5310 = !{i64 2147572907, i64 2147572950, i64 2147572990}
!5311 = !DILocation(line: 45, column: 1, scope: !5241)
!5312 = !{i64 2147573133, i64 2147573176, i64 2147573216}
!5313 = !DILocation(line: 46, column: 1, scope: !5241)
!5314 = !{i64 2147573368, i64 2147573411, i64 2147573451}
!5315 = !DILocation(line: 47, column: 1, scope: !5241)
!5316 = !{i64 2147573603, i64 2147573646, i64 2147573686}
!5317 = !DILocation(line: 48, column: 1, scope: !5241)
!5318 = !{i64 2147573841, i64 2147573884, i64 2147573924}
!5319 = !DILocation(line: 49, column: 1, scope: !5241)
!5320 = !{i64 2147574115, i64 2147574158, i64 2147574198}
!5321 = !DILocation(line: 50, column: 1, scope: !5241)
!5322 = !{i64 2147574353, i64 2147574396, i64 2147574436}
!5323 = !DILocation(line: 51, column: 1, scope: !5241)
!5324 = !{i64 2147574606, i64 2147574649, i64 2147574689}
!5325 = !DILocation(line: 52, column: 1, scope: !5241)
!5326 = !{i64 2147574850, i64 2147574893, i64 2147574933}
!5327 = !DILocation(line: 53, column: 1, scope: !5241)
!5328 = !{i64 2147579161, i64 2147579204, i64 2147579244}
!5329 = !DILocation(line: 54, column: 1, scope: !5241)
!5330 = !{i64 2147579402, i64 2147579445, i64 2147579485}
!5331 = !DILocation(line: 55, column: 1, scope: !5241)
!5332 = !{i64 2147579649, i64 2147579692, i64 2147579732}
!5333 = !DILocation(line: 56, column: 1, scope: !5241)
!5334 = !{i64 2147579884, i64 2147579927, i64 2147579967}
!5335 = !DILocation(line: 57, column: 1, scope: !5241)
!5336 = !{i64 2147580119, i64 2147580162, i64 2147580202}
!5337 = !DILocation(line: 58, column: 1, scope: !5241)
!5338 = !{i64 2147580354, i64 2147580397, i64 2147580437}
!5339 = !DILocation(line: 59, column: 1, scope: !5241)
!5340 = !{i64 2147580592, i64 2147580635, i64 2147580675}
!5341 = !DILocation(line: 60, column: 1, scope: !5241)
!5342 = !{i64 2147580833, i64 2147580876, i64 2147580916}
!5343 = !DILocation(line: 61, column: 1, scope: !5241)
!5344 = !{i64 2147581113, i64 2147581156, i64 2147581196}
!5345 = !DILocation(line: 62, column: 1, scope: !5241)
!5346 = !{i64 2147581372, i64 2147581415, i64 2147581455}
!5347 = !DILocation(line: 63, column: 1, scope: !5241)
!5348 = !{i64 2147581610, i64 2147581653, i64 2147581693}
!5349 = !DILocation(line: 64, column: 1, scope: !5241)
!5350 = !{i64 2147581869, i64 2147581912, i64 2147581952}
!5351 = !DILocation(line: 65, column: 1, scope: !5241)
!5352 = !{i64 2147582098, i64 2147582141, i64 2147582181}
!5353 = !DILocation(line: 66, column: 1, scope: !5241)
!5354 = !{i64 2147582306, i64 2147582349, i64 2147582389}
!5355 = !DILocation(line: 67, column: 1, scope: !5241)
!5356 = !{i64 2147582517, i64 2147582560, i64 2147582600}
!5357 = !DILocation(line: 68, column: 1, scope: !5241)
!5358 = !{i64 2147582752, i64 2147582795, i64 2147582835}
!5359 = !DILocation(line: 69, column: 1, scope: !5241)
!5360 = !{i64 2147582981, i64 2147583024, i64 2147583064}
!5361 = !DILocation(line: 70, column: 1, scope: !5241)
!5362 = !{i64 2147583219, i64 2147583262, i64 2147583302}
!5363 = !DILocation(line: 71, column: 1, scope: !5241)
!5364 = !{i64 2147583451, i64 2147583494, i64 2147583534}
!5365 = !DILocation(line: 72, column: 1, scope: !5241)
!5366 = !{i64 2147583677, i64 2147583720, i64 2147583760}
!5367 = !DILocation(line: 73, column: 1, scope: !5241)
!5368 = !{i64 2147583894, i64 2147583937, i64 2147583977}
!5369 = !DILocation(line: 74, column: 1, scope: !5241)
!5370 = !{i64 2147584126, i64 2147584169, i64 2147584209}
!5371 = !DILocation(line: 75, column: 1, scope: !5241)
!5372 = !{i64 2147584352, i64 2147584395, i64 2147584435}
!5373 = !DILocation(line: 76, column: 1, scope: !5241)
!5374 = !{i64 2147584566, i64 2147584609, i64 2147584649}
!5375 = !DILocation(line: 77, column: 1, scope: !5241)
!5376 = !{i64 2147584786, i64 2147584829, i64 2147584869}
!5377 = !DILocation(line: 78, column: 1, scope: !5241)
!5378 = !{i64 2147585018, i64 2147585061, i64 2147585101}
!5379 = !DILocation(line: 79, column: 1, scope: !5241)
!5380 = !{i64 2147585226, i64 2147585269, i64 2147585309}
!5381 = !DILocation(line: 80, column: 1, scope: !5241)
!5382 = !{i64 2147585431, i64 2147585474, i64 2147585514}
!5383 = !DILocation(line: 81, column: 1, scope: !5241)
!5384 = !{i64 2147585648, i64 2147585691, i64 2147585731}
!5385 = !DILocation(line: 82, column: 1, scope: !5241)
!5386 = !{i64 2147585862, i64 2147585905, i64 2147585945}
!5387 = !DILocation(line: 83, column: 1, scope: !5241)
!5388 = !{i64 2147586088, i64 2147586131, i64 2147586171}
!5389 = !DILocation(line: 84, column: 1, scope: !5241)
!5390 = !{i64 2147586308, i64 2147586351, i64 2147586391}
!5391 = !DILocation(line: 85, column: 1, scope: !5241)
!5392 = !{i64 2147586513, i64 2147586556, i64 2147586596}
!5393 = !DILocation(line: 86, column: 1, scope: !5241)
!5394 = !{i64 2147586745, i64 2147586788, i64 2147586828}
!5395 = !DILocation(line: 87, column: 1, scope: !5241)
!5396 = !{i64 2147586980, i64 2147587023, i64 2147587063}
!5397 = !DILocation(line: 88, column: 1, scope: !5241)
!5398 = !{i64 2147591291, i64 2147591334, i64 2147591374}
!5399 = !DILocation(line: 89, column: 1, scope: !5241)
!5400 = !{i64 2147591541, i64 2147591584, i64 2147591624}
!5401 = !DILocation(line: 90, column: 1, scope: !5241)
!5402 = !{i64 2147591779, i64 2147591822, i64 2147591862}
!5403 = !DILocation(line: 91, column: 1, scope: !5241)
!5404 = !{i64 2147591990, i64 2147592033, i64 2147592073}
!5405 = !DILocation(line: 92, column: 1, scope: !5241)
!5406 = !{i64 2147592207, i64 2147592250, i64 2147592290}
!5407 = !DILocation(line: 93, column: 1, scope: !5241)
!5408 = !{i64 2147592403, i64 2147592446, i64 2147592486}
!5409 = !DILocation(line: 94, column: 1, scope: !5241)
!5410 = !{i64 2147592605, i64 2147592648, i64 2147592688}
!5411 = !DILocation(line: 95, column: 1, scope: !5241)
!5412 = !{i64 2147592798, i64 2147592841, i64 2147592881}
!5413 = !DILocation(line: 96, column: 1, scope: !5241)
!5414 = !{i64 2147593006, i64 2147593049, i64 2147593089}
!5415 = !DILocation(line: 97, column: 1, scope: !5241)
!5416 = !{i64 2147593202, i64 2147593245, i64 2147593285}
!5417 = !DILocation(line: 98, column: 1, scope: !5241)
!5418 = !{i64 2147593452, i64 2147593495, i64 2147593535}
!5419 = !DILocation(line: 99, column: 1, scope: !5241)
!5420 = !{i64 2147593663, i64 2147593706, i64 2147593746}
!5421 = !DILocation(line: 100, column: 1, scope: !5241)
!5422 = !{i64 2147593862, i64 2147593905, i64 2147593945}
!5423 = !DILocation(line: 101, column: 1, scope: !5241)
!5424 = !{i64 2147594037, i64 2147594080, i64 2147594120}
!5425 = !DILocation(line: 102, column: 1, scope: !5241)
!5426 = !{i64 2147594221, i64 2147594264, i64 2147594304}
!5427 = !DILocation(line: 103, column: 1, scope: !5241)
!5428 = !{i64 2147594423, i64 2147594466, i64 2147594506}
!5429 = !DILocation(line: 104, column: 1, scope: !5241)
!5430 = !{i64 2147594604, i64 2147594647, i64 2147594687}
!5431 = !DILocation(line: 105, column: 1, scope: !5241)
!5432 = !{i64 2147594803, i64 2147594846, i64 2147594886}
!5433 = !DILocation(line: 106, column: 1, scope: !5241)
!5434 = !{i64 2147594969, i64 2147595012, i64 2147595052}
!5435 = !DILocation(line: 107, column: 1, scope: !5241)
!5436 = !{i64 2147595153, i64 2147595196, i64 2147595236}
!5437 = !DILocation(line: 108, column: 1, scope: !5241)
!5438 = !{i64 2147595343, i64 2147595386, i64 2147595426}
!5439 = !DILocation(line: 109, column: 1, scope: !5241)
!5440 = !{i64 2147595527, i64 2147595570, i64 2147595610}
!5441 = !DILocation(line: 110, column: 1, scope: !5241)
!5442 = !{i64 2147595741, i64 2147595784, i64 2147595824}
!5443 = !DILocation(line: 111, column: 1, scope: !5241)
!5444 = !{i64 2147595952, i64 2147595995, i64 2147596035}
!5445 = !DILocation(line: 112, column: 1, scope: !5241)
!5446 = !{i64 2147596175, i64 2147596218, i64 2147596258}
!5447 = !DILocation(line: 113, column: 1, scope: !5241)
!5448 = !{i64 2147596359, i64 2147596402, i64 2147596442}
!5449 = !DILocation(line: 114, column: 1, scope: !5241)
!5450 = !{i64 2147596573, i64 2147596616, i64 2147596656}
!5451 = !DILocation(line: 115, column: 1, scope: !5241)
!5452 = !{i64 2147596739, i64 2147596782, i64 2147596822}
!5453 = !DILocation(line: 116, column: 1, scope: !5241)
!5454 = !{i64 2147596920, i64 2147596963, i64 2147597003}
!5455 = !DILocation(line: 117, column: 1, scope: !5241)
!5456 = !{i64 2147597113, i64 2147597156, i64 2147597196}
!5457 = !DILocation(line: 118, column: 1, scope: !5241)
!5458 = !{i64 2147597339, i64 2147597382, i64 2147597422}
!5459 = !DILocation(line: 119, column: 1, scope: !5241)
!5460 = !{i64 2147597553, i64 2147597596, i64 2147597636}
!5461 = !DILocation(line: 120, column: 1, scope: !5241)
!5462 = !{i64 2147597779, i64 2147597822, i64 2147597862}
!5463 = !DILocation(line: 121, column: 1, scope: !5241)
!5464 = !{i64 2147597996, i64 2147598039, i64 2147598079}
!5465 = !DILocation(line: 122, column: 1, scope: !5241)
!5466 = !{i64 2147598273, i64 2147598316, i64 2147598356}
!5467 = !DILocation(line: 123, column: 1, scope: !5241)
!5468 = !{i64 2147598499, i64 2147598542, i64 2147598582}
!5469 = !DILocation(line: 124, column: 1, scope: !5241)
!5470 = !{i64 2147598707, i64 2147598750, i64 2147598790}
!5471 = !DILocation(line: 125, column: 1, scope: !5241)
!5472 = !{i64 2147598903, i64 2147598946, i64 2147598986}
!5473 = !DILocation(line: 126, column: 1, scope: !5241)
!5474 = !{i64 2147599168, i64 2147599211, i64 2147599251}
!5475 = !DILocation(line: 127, column: 1, scope: !5241)
!5476 = !{i64 2147599382, i64 2147599425, i64 2147599465}
!5477 = !DILocation(line: 128, column: 1, scope: !5241)
!5478 = !{i64 2147599557, i64 2147599600, i64 2147599640}
!5479 = !DILocation(line: 129, column: 1, scope: !5241)
!5480 = !{i64 2147599811, i64 2147599854, i64 2147599894}
!5481 = !DILocation(line: 130, column: 1, scope: !5241)
!5482 = !{i64 2147600010, i64 2147600053, i64 2147600093}
!5483 = !DILocation(line: 131, column: 1, scope: !5241)
!5484 = !{i64 2147604313, i64 2147604356, i64 2147604396}
!5485 = !DILocation(line: 132, column: 1, scope: !5241)
!5486 = !{i64 2147604476, i64 2147604519, i64 2147604559}
!5487 = !DILocation(line: 133, column: 1, scope: !5241)
!5488 = !{i64 2147604663, i64 2147604706, i64 2147604746}
!5489 = !DILocation(line: 134, column: 1, scope: !5241)
!5490 = !{i64 2147604856, i64 2147604899, i64 2147604939}
!5491 = !DILocation(line: 135, column: 1, scope: !5241)
!5492 = !{i64 2147605039, i64 2147605082, i64 2147605122}
!5493 = !DILocation(line: 136, column: 1, scope: !5241)
!5494 = !{i64 2147605253, i64 2147605296, i64 2147605336}
!5495 = !DILocation(line: 137, column: 1, scope: !5241)
!5496 = !{i64 2147605464, i64 2147605507, i64 2147605547}
!5497 = !DILocation(line: 138, column: 1, scope: !5241)
!5498 = !{i64 2147605684, i64 2147605727, i64 2147605767}
!5499 = !DILocation(line: 139, column: 1, scope: !5241)
!5500 = !{i64 2147605891, i64 2147605934, i64 2147605974}
!5501 = !DILocation(line: 140, column: 1, scope: !5241)
!5502 = !{i64 2147606164, i64 2147606207, i64 2147606247}
!5503 = !DILocation(line: 141, column: 1, scope: !5241)
!5504 = !{i64 2147606412, i64 2147606455, i64 2147606495}
!5505 = !DILocation(line: 142, column: 1, scope: !5241)
!5506 = !{i64 2147606611, i64 2147606654, i64 2147606694}
!5507 = !DILocation(line: 143, column: 1, scope: !5241)
!5508 = !{i64 2147606846, i64 2147606889, i64 2147606929}
!5509 = !DILocation(line: 144, column: 1, scope: !5241)
!5510 = !{i64 2147607096, i64 2147607139, i64 2147607179}
!5511 = !DILocation(line: 145, column: 1, scope: !5241)
!5512 = !{i64 2147607298, i64 2147607341, i64 2147607381}
!5513 = !DILocation(line: 146, column: 1, scope: !5241)
!5514 = !{i64 2147607521, i64 2147607564, i64 2147607604}
!5515 = !DILocation(line: 147, column: 1, scope: !5241)
!5516 = !{i64 2147607735, i64 2147607778, i64 2147607818}
!5517 = !DILocation(line: 148, column: 1, scope: !5241)
!5518 = !{i64 2147607979, i64 2147608022, i64 2147608062}
!5519 = !DILocation(line: 149, column: 1, scope: !5241)
!5520 = !{i64 2147608208, i64 2147608251, i64 2147608291}
!5521 = !DILocation(line: 150, column: 1, scope: !5241)
!5522 = !{i64 2147608437, i64 2147608480, i64 2147608520}
!5523 = !DILocation(line: 151, column: 1, scope: !5241)
!5524 = !{i64 2147608645, i64 2147608688, i64 2147608728}
!5525 = !DILocation(line: 152, column: 1, scope: !5241)
!5526 = !{i64 2147608883, i64 2147608926, i64 2147608966}
!5527 = !DILocation(line: 153, column: 1, scope: !5241)
!5528 = !{i64 2147609109, i64 2147609152, i64 2147609192}
!5529 = !DILocation(line: 154, column: 1, scope: !5241)
!5530 = !{i64 2147609368, i64 2147609411, i64 2147609451}
!5531 = !DILocation(line: 155, column: 1, scope: !5241)
!5532 = !{i64 2147609588, i64 2147609631, i64 2147609671}
!5533 = !DILocation(line: 156, column: 1, scope: !5241)
!5534 = !{i64 2147609820, i64 2147609863, i64 2147609903}
!5535 = !DILocation(line: 157, column: 1, scope: !5241)
!5536 = !{i64 2147610061, i64 2147610104, i64 2147610144}
!5537 = !DILocation(line: 158, column: 1, scope: !5241)
!5538 = !{i64 2147610302, i64 2147610345, i64 2147610385}
!5539 = !DILocation(line: 159, column: 1, scope: !5241)
!5540 = !{i64 2147610525, i64 2147610568, i64 2147610608}
!5541 = !DILocation(line: 160, column: 1, scope: !5241)
!5542 = !{i64 2147610742, i64 2147610785, i64 2147610825}
!5543 = !DILocation(line: 161, column: 1, scope: !5241)
!5544 = !{i64 2147610983, i64 2147611026, i64 2147611066}
!5545 = !DILocation(line: 162, column: 1, scope: !5241)
!5546 = !{i64 2147611170, i64 2147611213, i64 2147611253}
!5547 = !DILocation(line: 163, column: 1, scope: !5241)
!5548 = !{i64 2147611357, i64 2147611400, i64 2147611440}
!5549 = !DILocation(line: 164, column: 1, scope: !5241)
!5550 = !{i64 2147611520, i64 2147611563, i64 2147611603}
!5551 = !DILocation(line: 165, column: 1, scope: !5241)
!5552 = !{i64 2147611779, i64 2147611822, i64 2147611862}
!5553 = !DILocation(line: 166, column: 1, scope: !5241)
!5554 = !{i64 2147612002, i64 2147612045, i64 2147612085}
!5555 = !DILocation(line: 167, column: 1, scope: !5241)
!5556 = !{i64 2147612231, i64 2147612274, i64 2147612314}
!5557 = !DILocation(line: 168, column: 1, scope: !5241)
!5558 = !{i64 2147612427, i64 2147612470, i64 2147612510}
!5559 = !DILocation(line: 169, column: 1, scope: !5241)
!5560 = !{i64 2147612639, i64 2147612682, i64 2147612722}
!5561 = !DILocation(line: 170, column: 1, scope: !5241)
!5562 = !{i64 2147616921, i64 2147616964, i64 2147617004}
!5563 = !DILocation(line: 171, column: 1, scope: !5241)
!5564 = !{i64 2147617135, i64 2147617178, i64 2147617218}
!5565 = !DILocation(line: 172, column: 1, scope: !5241)
!5566 = !{i64 2147617325, i64 2147617368, i64 2147617408}
!5567 = !DILocation(line: 173, column: 1, scope: !5241)
!5568 = !{i64 2147617524, i64 2147617567, i64 2147617607}
!5569 = !DILocation(line: 174, column: 1, scope: !5241)
!5570 = !{i64 2147617729, i64 2147617772, i64 2147617812}
!5571 = !DILocation(line: 175, column: 1, scope: !5241)
!5572 = !{i64 2147617949, i64 2147617992, i64 2147618032}
!5573 = !DILocation(line: 176, column: 1, scope: !5241)
!5574 = !{i64 2147618150, i64 2147618193, i64 2147618233}
!5575 = !DILocation(line: 177, column: 1, scope: !5241)
!5576 = !{i64 2147618349, i64 2147618392, i64 2147618432}
!5577 = !DILocation(line: 178, column: 1, scope: !5241)
!5578 = !{i64 2147618554, i64 2147618597, i64 2147618637}
!5579 = !DILocation(line: 179, column: 1, scope: !5241)
!5580 = !{i64 2147618723, i64 2147618766, i64 2147618806}
!5581 = !DILocation(line: 180, column: 1, scope: !5241)
!5582 = !{i64 2147618907, i64 2147618950, i64 2147618990}
!5583 = !DILocation(line: 181, column: 1, scope: !5241)
!5584 = !{i64 2147619091, i64 2147619134, i64 2147619174}
!5585 = !DILocation(line: 182, column: 1, scope: !5241)
!5586 = !{i64 2147619278, i64 2147619321, i64 2147619361}
!5587 = !DILocation(line: 183, column: 1, scope: !5241)
!5588 = !{i64 2147619462, i64 2147619505, i64 2147619545}
!5589 = !DILocation(line: 184, column: 1, scope: !5241)
!5590 = !{i64 2147619700, i64 2147619743, i64 2147619783}
!5591 = !DILocation(line: 185, column: 1, scope: !5241)
!5592 = !{i64 2147619930, i64 2147619973, i64 2147620013}
!5593 = !DILocation(line: 186, column: 1, scope: !5241)
!5594 = !{i64 2147620159, i64 2147620202, i64 2147620242}
!5595 = !DILocation(line: 187, column: 1, scope: !5241)
!5596 = !{i64 2147620346, i64 2147620389, i64 2147620429}
!5597 = !DILocation(line: 188, column: 1, scope: !5241)
!5598 = !{i64 2147620542, i64 2147620585, i64 2147620625}
!5599 = !DILocation(line: 189, column: 1, scope: !5241)
!5600 = !{i64 2147620750, i64 2147620793, i64 2147620833}
!5601 = !DILocation(line: 190, column: 1, scope: !5241)
!5602 = !{i64 2147620962, i64 2147621005, i64 2147621045}
!5603 = !DILocation(line: 191, column: 1, scope: !5241)
!5604 = !{i64 2147621161, i64 2147621204, i64 2147621244}
!5605 = !DILocation(line: 192, column: 1, scope: !5241)
!5606 = !{i64 2147621399, i64 2147621442, i64 2147621482}
!5607 = !DILocation(line: 193, column: 1, scope: !5241)
!5608 = !{i64 2147621595, i64 2147621638, i64 2147621678}
!5609 = !DILocation(line: 194, column: 1, scope: !5241)
!5610 = !{i64 2147621797, i64 2147621840, i64 2147621880}
!5611 = !DILocation(line: 195, column: 1, scope: !5241)
!5612 = !{i64 2147621990, i64 2147622033, i64 2147622073}
!5613 = !DILocation(line: 196, column: 1, scope: !5241)
!5614 = !{i64 2147622224, i64 2147622267, i64 2147622307}
!5615 = !DILocation(line: 197, column: 1, scope: !5241)
!5616 = !{i64 2147622387, i64 2147622430, i64 2147622470}
!5617 = !DILocation(line: 198, column: 1, scope: !5241)
!5618 = !{i64 2147622626, i64 2147622669, i64 2147622709}
!5619 = !DILocation(line: 199, column: 1, scope: !5241)
!5620 = !{i64 2147622865, i64 2147622908, i64 2147622948}
!5621 = !DILocation(line: 200, column: 1, scope: !5241)
!5622 = !{i64 2147623101, i64 2147623144, i64 2147623184}
!5623 = !DILocation(line: 201, column: 1, scope: !5241)
!5624 = !{i64 2147623331, i64 2147623374, i64 2147623414}
!5625 = !DILocation(line: 202, column: 1, scope: !5241)
!5626 = !{i64 2147623518, i64 2147623561, i64 2147623601}
!5627 = !DILocation(line: 203, column: 1, scope: !5241)
!5628 = !{i64 2147623717, i64 2147623760, i64 2147623800}
!5629 = !DILocation(line: 204, column: 1, scope: !5241)
!5630 = !{i64 2147623988, i64 2147624031, i64 2147624071}
!5631 = !DILocation(line: 205, column: 1, scope: !5241)
!5632 = !{i64 2147624163, i64 2147624206, i64 2147624246}
!5633 = !DILocation(line: 206, column: 1, scope: !5241)
!5634 = !{i64 2147624397, i64 2147624440, i64 2147624480}
!5635 = !DILocation(line: 207, column: 1, scope: !5241)
!5636 = !{i64 2147624605, i64 2147624648, i64 2147624688}
!5637 = !DILocation(line: 208, column: 1, scope: !5241)
!5638 = !{i64 2147624804, i64 2147624847, i64 2147624887}
!5639 = !DILocation(line: 209, column: 1, scope: !5241)
!5640 = !{i64 2147625022, i64 2147625065, i64 2147625105}
!5641 = !DILocation(line: 210, column: 1, scope: !5241)
!5642 = !{i64 2147625212, i64 2147625255, i64 2147625295}
!5643 = !DILocation(line: 211, column: 1, scope: !5241)
!5644 = !{i64 2147625459, i64 2147625502, i64 2147625542}
!5645 = !DILocation(line: 212, column: 1, scope: !5241)
!5646 = !{i64 2147625655, i64 2147625698, i64 2147625738}
!5647 = !DILocation(line: 213, column: 1, scope: !5241)
!5648 = !{i64 2147625861, i64 2147625904, i64 2147625944}
!5649 = !DILocation(line: 214, column: 1, scope: !5241)
!5650 = !{i64 2147630127, i64 2147630170, i64 2147630210}
!5651 = !DILocation(line: 215, column: 1, scope: !5241)
!5652 = !{i64 2147630353, i64 2147630396, i64 2147630436}
!5653 = !DILocation(line: 216, column: 1, scope: !5241)
!5654 = !{i64 2147630585, i64 2147630628, i64 2147630668}
!5655 = !DILocation(line: 217, column: 1, scope: !5241)
!5656 = !{i64 2147630769, i64 2147630812, i64 2147630852}
!5657 = !DILocation(line: 218, column: 1, scope: !5241)
!5658 = !{i64 2147630978, i64 2147631021, i64 2147631061}
!5659 = !DILocation(line: 219, column: 1, scope: !5241)
!5660 = !{i64 2147631162, i64 2147631205, i64 2147631245}
!5661 = !DILocation(line: 220, column: 1, scope: !5241)
!5662 = !{i64 2147631388, i64 2147631431, i64 2147631471}
!5663 = !DILocation(line: 221, column: 1, scope: !5241)
!5664 = !{i64 2147631614, i64 2147631657, i64 2147631697}
!5665 = !DILocation(line: 222, column: 1, scope: !5241)
!5666 = !{i64 2147631840, i64 2147631883, i64 2147631923}
!5667 = !DILocation(line: 223, column: 1, scope: !5241)
!5668 = !{i64 2147632066, i64 2147632109, i64 2147632149}
!5669 = !DILocation(line: 224, column: 1, scope: !5241)
!5670 = !{i64 2147632292, i64 2147632335, i64 2147632375}
!5671 = !DILocation(line: 225, column: 1, scope: !5241)
!5672 = !{i64 2147632524, i64 2147632567, i64 2147632607}
!5673 = !DILocation(line: 226, column: 1, scope: !5241)
!5674 = !{i64 2147632762, i64 2147632805, i64 2147632845}
!5675 = !DILocation(line: 227, column: 1, scope: !5241)
!5676 = !{i64 2147632982, i64 2147633025, i64 2147633065}
!5677 = !DILocation(line: 228, column: 1, scope: !5241)
!5678 = !{i64 2147633226, i64 2147633269, i64 2147633309}
!5679 = !DILocation(line: 229, column: 1, scope: !5241)
!5680 = !{i64 2147633467, i64 2147633510, i64 2147633550}
!5681 = !DILocation(line: 230, column: 1, scope: !5241)
!5682 = !{i64 2147633702, i64 2147633745, i64 2147633785}
!5683 = !DILocation(line: 231, column: 1, scope: !5241)
!5684 = !{i64 2147633934, i64 2147633977, i64 2147634017}
!5685 = !DILocation(line: 232, column: 1, scope: !5241)
!5686 = !{i64 2147634136, i64 2147634179, i64 2147634219}
!5687 = !DILocation(line: 233, column: 1, scope: !5241)
!5688 = !{i64 2147634386, i64 2147634429, i64 2147634469}
!5689 = !DILocation(line: 234, column: 1, scope: !5241)
!5690 = !{i64 2147634624, i64 2147634667, i64 2147634707}
!5691 = !DILocation(line: 235, column: 1, scope: !5241)
!5692 = !{i64 2147634808, i64 2147634851, i64 2147634891}
!5693 = !DILocation(line: 236, column: 1, scope: !5241)
!5694 = !{i64 2147635032, i64 2147635075, i64 2147635115}
!5695 = !DILocation(line: 237, column: 1, scope: !5241)
!5696 = !{i64 2147635270, i64 2147635313, i64 2147635353}
!5697 = !DILocation(line: 238, column: 1, scope: !5241)
!5698 = !{i64 2147635508, i64 2147635551, i64 2147635591}
!5699 = !DILocation(line: 239, column: 1, scope: !5241)
!5700 = !{i64 2147635701, i64 2147635744, i64 2147635784}
!5701 = !DILocation(line: 240, column: 1, scope: !5241)
!5702 = !{i64 2147635954, i64 2147635997, i64 2147636037}
!5703 = !DILocation(line: 241, column: 1, scope: !5241)
!5704 = !{i64 2147636168, i64 2147636211, i64 2147636251}
!5705 = !DILocation(line: 242, column: 1, scope: !5241)
!5706 = !{i64 2147636376, i64 2147636419, i64 2147636459}
!5707 = !DILocation(line: 243, column: 1, scope: !5241)
!5708 = !{i64 2147636566, i64 2147636609, i64 2147636649}
!5709 = !DILocation(line: 244, column: 1, scope: !5241)
!5710 = !{i64 2147636780, i64 2147636823, i64 2147636863}
!5711 = !DILocation(line: 245, column: 1, scope: !5241)
!5712 = !{i64 2147637042, i64 2147637085, i64 2147637125}
!5713 = !DILocation(line: 246, column: 1, scope: !5241)
!5714 = !{i64 2147637253, i64 2147637296, i64 2147637336}
!5715 = !DILocation(line: 247, column: 1, scope: !5241)
!5716 = !{i64 2147637497, i64 2147637540, i64 2147637580}
!5717 = !DILocation(line: 248, column: 1, scope: !5241)
!5718 = !{i64 2147637708, i64 2147637751, i64 2147637791}
!5719 = !DILocation(line: 249, column: 1, scope: !5241)
!5720 = !{i64 2147637937, i64 2147637980, i64 2147638020}
!5721 = !DILocation(line: 250, column: 1, scope: !5241)
!5722 = !{i64 2147638202, i64 2147638245, i64 2147638285}
!5723 = !DILocation(line: 251, column: 1, scope: !5241)
!5724 = !{i64 2147638407, i64 2147638450, i64 2147638490}
!5725 = !DILocation(line: 252, column: 1, scope: !5241)
!5726 = !{i64 2147642664, i64 2147642707, i64 2147642747}
!5727 = !DILocation(line: 253, column: 1, scope: !5241)
!5728 = !{i64 2147642887, i64 2147642930, i64 2147642970}
!5729 = !DILocation(line: 254, column: 1, scope: !5241)
!5730 = !{i64 2147643050, i64 2147643093, i64 2147643133}
!5731 = !DILocation(line: 255, column: 1, scope: !5241)
!5732 = !{i64 2147643255, i64 2147643298, i64 2147643338}
!5733 = !DILocation(line: 256, column: 1, scope: !5241)
!5734 = !{i64 2147643475, i64 2147643518, i64 2147643558}
!5735 = !DILocation(line: 257, column: 1, scope: !5241)
!5736 = !{i64 2147643689, i64 2147643732, i64 2147643772}
!5737 = !DILocation(line: 258, column: 1, scope: !5241)
!5738 = !{i64 2147643903, i64 2147643946, i64 2147643986}
!5739 = !DILocation(line: 259, column: 1, scope: !5241)
!5740 = !{i64 2147644114, i64 2147644157, i64 2147644197}
!5741 = !DILocation(line: 260, column: 1, scope: !5241)
!5742 = !{i64 2147644307, i64 2147644350, i64 2147644390}
!5743 = !DILocation(line: 261, column: 1, scope: !5241)
!5744 = !{i64 2147644506, i64 2147644549, i64 2147644589}
!5745 = !DILocation(line: 262, column: 1, scope: !5241)
!5746 = !{i64 2147644702, i64 2147644745, i64 2147644785}
!5747 = !DILocation(line: 263, column: 1, scope: !5241)
!5748 = !{i64 2147644901, i64 2147644944, i64 2147644984}
!5749 = !DILocation(line: 264, column: 1, scope: !5241)
!5750 = !{i64 2147645125, i64 2147645168, i64 2147645208}
!5751 = !DILocation(line: 265, column: 1, scope: !5241)
!5752 = !{i64 2147645350, i64 2147645393, i64 2147645433}
!5753 = !DILocation(line: 266, column: 1, scope: !5241)
!5754 = !{i64 2147645522, i64 2147645565, i64 2147645605}
!5755 = !DILocation(line: 267, column: 1, scope: !5241)
!5756 = !{i64 2147645715, i64 2147645758, i64 2147645798}
!5757 = !DILocation(line: 268, column: 1, scope: !5241)
!5758 = !{i64 2147645911, i64 2147645954, i64 2147645994}
!5759 = !DILocation(line: 269, column: 1, scope: !5241)
!5760 = !{i64 2147646138, i64 2147646181, i64 2147646221}
!5761 = !DILocation(line: 270, column: 1, scope: !5241)
!5762 = !{i64 2147646355, i64 2147646398, i64 2147646438}
!5763 = !DILocation(line: 271, column: 1, scope: !5241)
!5764 = !{i64 2147646647, i64 2147646690, i64 2147646730}
!5765 = !DILocation(line: 272, column: 1, scope: !5241)
!5766 = !{i64 2147646879, i64 2147646922, i64 2147646962}
!5767 = !DILocation(line: 273, column: 1, scope: !5241)
!5768 = !{i64 2147647096, i64 2147647139, i64 2147647179}
!5769 = !DILocation(line: 274, column: 1, scope: !5241)
!5770 = !{i64 2147647303, i64 2147647346, i64 2147647386}
!5771 = !DILocation(line: 275, column: 1, scope: !5241)
!5772 = !{i64 2147647504, i64 2147647547, i64 2147647587}
!5773 = !DILocation(line: 276, column: 1, scope: !5241)
!5774 = !{i64 2147647736, i64 2147647779, i64 2147647819}
!5775 = !DILocation(line: 277, column: 1, scope: !5241)
!5776 = !{i64 2147647944, i64 2147647987, i64 2147648027}
!5777 = !DILocation(line: 278, column: 1, scope: !5241)
!5778 = !{i64 2147648134, i64 2147648177, i64 2147648217}
!5779 = !DILocation(line: 279, column: 1, scope: !5241)
!5780 = !{i64 2147648360, i64 2147648403, i64 2147648443}
!5781 = !DILocation(line: 280, column: 1, scope: !5241)
!5782 = !{i64 2147648549, i64 2147648592, i64 2147648632}
!5783 = !DILocation(line: 281, column: 1, scope: !5241)
!5784 = !{i64 2147648820, i64 2147648863, i64 2147648903}
!5785 = !DILocation(line: 282, column: 1, scope: !5241)
!5786 = !{i64 2147649040, i64 2147649083, i64 2147649123}
!5787 = !DILocation(line: 283, column: 1, scope: !5241)
!5788 = !{i64 2147649293, i64 2147649336, i64 2147649376}
!5789 = !DILocation(line: 284, column: 1, scope: !5241)
!5790 = !{i64 2147649501, i64 2147649544, i64 2147649584}
!5791 = !DILocation(line: 285, column: 1, scope: !5241)
!5792 = !{i64 2147649733, i64 2147649776, i64 2147649816}
!5793 = !DILocation(line: 286, column: 1, scope: !5241)
!5794 = !{i64 2147649944, i64 2147649987, i64 2147650027}
!5795 = !DILocation(line: 287, column: 1, scope: !5241)
!5796 = !{i64 2147650134, i64 2147650177, i64 2147650217}
!5797 = !DILocation(line: 288, column: 1, scope: !5241)
!5798 = !{i64 2147650348, i64 2147650391, i64 2147650431}
!5799 = !DILocation(line: 289, column: 1, scope: !5241)
!5800 = !{i64 2147650547, i64 2147650590, i64 2147650630}
!5801 = !DILocation(line: 290, column: 1, scope: !5241)
!5802 = !{i64 2147650734, i64 2147650777, i64 2147650817}
!5803 = !DILocation(line: 291, column: 1, scope: !5241)
!5804 = !{i64 2147650942, i64 2147650985, i64 2147651025}
!5805 = !DILocation(line: 292, column: 1, scope: !5241)
!5806 = !{i64 2147651171, i64 2147651214, i64 2147651254}
!5807 = !DILocation(line: 293, column: 1, scope: !5241)
!5808 = !{i64 2147651373, i64 2147651416, i64 2147651456}
!5809 = !DILocation(line: 294, column: 1, scope: !5241)
!5810 = !{i64 2147655633, i64 2147655676, i64 2147655716}
!5811 = !DILocation(line: 295, column: 1, scope: !5241)
!5812 = !{i64 2147655850, i64 2147655893, i64 2147655933}
!5813 = !DILocation(line: 297, column: 1, scope: !5241)
!5814 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !140, file: !140, line: 30, type: !147, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5815)
!5815 = !{!5816, !5817}
!5816 = !DILocalVariable(name: "arg", arg: 1, scope: !5814, file: !140, line: 30, type: !149)
!5817 = !DILocalVariable(name: "key", scope: !5814, file: !140, line: 32, type: !132)
!5818 = !DILocation(line: 0, scope: !5814)
!5819 = !DILocation(line: 37, column: 2, scope: !5814)
!5820 = !DILocation(line: 38, column: 2, scope: !5814)
!5821 = !DILocation(line: 55, column: 2, scope: !5822, inlinedAt: !5829)
!5822 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5823, file: !5823, line: 42, type: !5824, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5826)
!5823 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5824 = !DISubroutineType(types: !5825)
!5825 = !{!32}
!5826 = !{!5827, !5828}
!5827 = !DILocalVariable(name: "key", scope: !5822, file: !5823, line: 44, type: !32)
!5828 = !DILocalVariable(name: "tmp", scope: !5822, file: !5823, line: 53, type: !32)
!5829 = distinct !DILocation(line: 40, column: 8, scope: !5814)
!5830 = !{i64 2101655}
!5831 = !DILocation(line: 0, scope: !5822, inlinedAt: !5829)
!5832 = !DILocalVariable(name: "key", arg: 1, scope: !5833, file: !5823, line: 84, type: !32)
!5833 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5823, file: !5823, line: 84, type: !5834, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5836)
!5834 = !DISubroutineType(types: !5835)
!5835 = !{null, !32}
!5836 = !{!5832}
!5837 = !DILocation(line: 0, scope: !5833, inlinedAt: !5838)
!5838 = distinct !DILocation(line: 47, column: 2, scope: !5814)
!5839 = !DILocation(line: 95, column: 2, scope: !5833, inlinedAt: !5838)
!5840 = !{i64 2102472}
!5841 = !DILocation(line: 51, column: 18, scope: !5814)
!5842 = !DILocation(line: 53, column: 2, scope: !5814)
!5843 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5844, file: !5844, line: 1609, type: !3256, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !473)
!5844 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5845 = !DILocation(line: 1611, column: 3, scope: !5843)
!5846 = !DILocation(line: 1612, column: 1, scope: !5843)
!5847 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5844, file: !5844, line: 1629, type: !3256, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !473)
!5848 = !DILocation(line: 1631, column: 3, scope: !5847)
!5849 = !DILocation(line: 1632, column: 1, scope: !5847)
!5850 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !180, file: !180, line: 26, type: !186, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !5851)
!5851 = !{!5852}
!5852 = !DILocalVariable(name: "dev", arg: 1, scope: !5850, file: !180, line: 26, type: !188)
!5853 = !DILocation(line: 0, scope: !5850)
!5854 = !DILocation(line: 68, column: 2, scope: !5850)
!5855 = distinct !DISubprogram(name: "tty_write", scope: !5856, file: !5856, line: 100, type: !5857, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5900)
!5856 = !DIFile(filename: "zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5857 = !DISubroutineType(types: !5858)
!5858 = !{!5859, !5861, !13, !356}
!5859 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !5860, line: 28, baseType: !103)
!5860 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5862, size: 32)
!5862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !307, line: 18, size: 544, elements: !5863)
!5863 = !{!5864, !5865, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899}
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !5862, file: !307, line: 19, baseType: !2652, size: 32)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !5862, file: !307, line: 21, baseType: !5866, size: 128, offset: 32)
!5866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !312, line: 2909, size: 128, elements: !5867)
!5867 = !{!5868, !5887, !5888}
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5866, file: !312, line: 2910, baseType: !5869, size: 64)
!5869 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !5870)
!5870 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !5871)
!5871 = !{!5872}
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5870, file: !316, line: 232, baseType: !5873, size: 64)
!5873 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !5874)
!5874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !5875)
!5875 = !{!5876, !5882}
!5876 = !DIDerivedType(tag: DW_TAG_member, scope: !5874, file: !321, line: 38, baseType: !5877, size: 32)
!5877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5874, file: !321, line: 38, size: 32, elements: !5878)
!5878 = !{!5879, !5881}
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5877, file: !321, line: 39, baseType: !5880, size: 32)
!5880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5874, size: 32)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5877, file: !321, line: 40, baseType: !5880, size: 32)
!5882 = !DIDerivedType(tag: DW_TAG_member, scope: !5874, file: !321, line: 42, baseType: !5883, size: 32, offset: 32)
!5883 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5874, file: !321, line: 42, size: 32, elements: !5884)
!5884 = !{!5885, !5886}
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5883, file: !321, line: 43, baseType: !5880, size: 32)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5883, file: !321, line: 44, baseType: !5880, size: 32)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5866, file: !312, line: 2911, baseType: !32, size: 32, offset: 64)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5866, file: !312, line: 2912, baseType: !32, size: 32, offset: 96)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !5862, file: !307, line: 22, baseType: !270, size: 32, offset: 160)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !5862, file: !307, line: 23, baseType: !132, size: 32, offset: 192)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !5862, file: !307, line: 24, baseType: !340, size: 16, offset: 224)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !5862, file: !307, line: 24, baseType: !340, size: 16, offset: 240)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !5862, file: !307, line: 25, baseType: !344, size: 32, offset: 256)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !5862, file: !307, line: 27, baseType: !5866, size: 128, offset: 288)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !5862, file: !307, line: 28, baseType: !270, size: 32, offset: 416)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !5862, file: !307, line: 29, baseType: !132, size: 32, offset: 448)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !5862, file: !307, line: 30, baseType: !340, size: 16, offset: 480)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !5862, file: !307, line: 30, baseType: !340, size: 16, offset: 496)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !5862, file: !307, line: 31, baseType: !344, size: 32, offset: 512)
!5900 = !{!5901, !5902, !5903, !5904, !5905, !5906}
!5901 = !DILocalVariable(name: "tty", arg: 1, scope: !5855, file: !5856, line: 100, type: !5861)
!5902 = !DILocalVariable(name: "buf", arg: 2, scope: !5855, file: !5856, line: 100, type: !13)
!5903 = !DILocalVariable(name: "size", arg: 3, scope: !5855, file: !5856, line: 100, type: !356)
!5904 = !DILocalVariable(name: "p", scope: !5855, file: !5856, line: 102, type: !264)
!5905 = !DILocalVariable(name: "out_size", scope: !5855, file: !5856, line: 103, type: !356)
!5906 = !DILocalVariable(name: "res", scope: !5855, file: !5856, line: 104, type: !103)
!5907 = !DILocation(line: 0, scope: !5855)
!5908 = !DILocation(line: 106, column: 11, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5855, file: !5856, line: 106, column: 6)
!5910 = !DILocation(line: 106, column: 25, scope: !5909)
!5911 = !DILocation(line: 106, column: 6, scope: !5855)
!5912 = !DILocation(line: 117, column: 2, scope: !5855)
!5913 = !DILocation(line: 110, column: 3, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5909, file: !5856, line: 106, column: 32)
!5915 = !DILocation(line: 110, column: 14, scope: !5914)
!5916 = !DILocation(line: 111, column: 23, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5914, file: !5856, line: 110, column: 18)
!5918 = !DILocation(line: 111, column: 35, scope: !5917)
!5919 = !DILocation(line: 111, column: 33, scope: !5917)
!5920 = !DILocation(line: 111, column: 4, scope: !5917)
!5921 = distinct !{!5921, !5913, !5922}
!5922 = !DILocation(line: 112, column: 3, scope: !5914)
!5923 = !DILocation(line: 117, column: 13, scope: !5855)
!5924 = !DILocation(line: 118, column: 26, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5855, file: !5856, line: 117, column: 17)
!5926 = !DILocation(line: 118, column: 9, scope: !5925)
!5927 = !DILocation(line: 119, column: 11, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5925, file: !5856, line: 119, column: 7)
!5929 = !DILocation(line: 119, column: 7, scope: !5925)
!5930 = !DILocation(line: 121, column: 17, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5932, file: !5856, line: 121, column: 8)
!5932 = distinct !DILexicalBlock(scope: !5928, file: !5856, line: 119, column: 16)
!5933 = !DILocation(line: 121, column: 8, scope: !5932)
!5934 = !DILocation(line: 122, column: 13, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5931, file: !5856, line: 121, column: 23)
!5936 = !DILocation(line: 122, column: 5, scope: !5935)
!5937 = !DILocation(line: 122, column: 11, scope: !5935)
!5938 = !DILocation(line: 123, column: 5, scope: !5935)
!5939 = !DILocation(line: 118, column: 28, scope: !5925)
!5940 = !DILocation(line: 135, column: 11, scope: !5925)
!5941 = distinct !{!5941, !5912, !5942}
!5942 = !DILocation(line: 136, column: 2, scope: !5855)
!5943 = !DILocation(line: 139, column: 1, scope: !5855)
!5944 = distinct !DISubprogram(name: "uart_poll_out", scope: !5945, file: !5945, line: 95, type: !2669, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5946)
!5945 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!5946 = !{!5947, !5948}
!5947 = !DILocalVariable(name: "dev", arg: 1, scope: !5944, file: !5945, line: 95, type: !2652)
!5948 = !DILocalVariable(name: "out_char", arg: 2, scope: !5944, file: !5945, line: 95, type: !164)
!5949 = !DILocation(line: 0, scope: !5944)
!5950 = !DILocation(line: 105, column: 2, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5944, file: !5945, line: 105, column: 2)
!5952 = !{i64 2155102810}
!5953 = !DILocation(line: 106, column: 2, scope: !5944)
!5954 = !DILocation(line: 107, column: 1, scope: !5944)
!5955 = distinct !DISubprogram(name: "tty_putchar", scope: !5856, file: !5856, line: 69, type: !5956, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5958)
!5956 = !DISubroutineType(types: !5957)
!5957 = !{!103, !5861, !163}
!5958 = !{!5959, !5960, !5961, !5962, !5963}
!5959 = !DILocalVariable(name: "tty", arg: 1, scope: !5955, file: !5856, line: 69, type: !5861)
!5960 = !DILocalVariable(name: "c", arg: 2, scope: !5955, file: !5856, line: 69, type: !163)
!5961 = !DILocalVariable(name: "key", scope: !5955, file: !5856, line: 71, type: !32)
!5962 = !DILocalVariable(name: "tx_next", scope: !5955, file: !5856, line: 72, type: !103)
!5963 = !DILocalVariable(name: "res", scope: !5955, file: !5856, line: 73, type: !103)
!5964 = !DILocation(line: 0, scope: !5955)
!5965 = !DILocation(line: 75, column: 25, scope: !5955)
!5966 = !DILocation(line: 76, column: 5, scope: !5955)
!5967 = !DILocation(line: 77, column: 7, scope: !5955)
!5968 = !DILocation(line: 75, column: 8, scope: !5955)
!5969 = !DILocation(line: 78, column: 10, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5955, file: !5856, line: 78, column: 6)
!5971 = !DILocation(line: 78, column: 6, scope: !5955)
!5972 = !DILocation(line: 55, column: 2, scope: !5973, inlinedAt: !5977)
!5973 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5823, file: !5823, line: 42, type: !5824, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5974)
!5974 = !{!5975, !5976}
!5975 = !DILocalVariable(name: "key", scope: !5973, file: !5823, line: 44, type: !32)
!5976 = !DILocalVariable(name: "tmp", scope: !5973, file: !5823, line: 53, type: !32)
!5977 = distinct !DILocation(line: 82, column: 8, scope: !5955)
!5978 = !{i64 2224950}
!5979 = !DILocation(line: 0, scope: !5973, inlinedAt: !5977)
!5980 = !DILocation(line: 83, column: 17, scope: !5955)
!5981 = !DILocation(line: 83, column: 12, scope: !5955)
!5982 = !DILocation(line: 83, column: 24, scope: !5955)
!5983 = !DILocation(line: 84, column: 22, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5955, file: !5856, line: 84, column: 6)
!5985 = !DILocation(line: 84, column: 14, scope: !5984)
!5986 = !DILocation(line: 84, column: 6, scope: !5955)
!5987 = !DILocation(line: 87, column: 22, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5955, file: !5856, line: 87, column: 6)
!5989 = !DILocation(line: 87, column: 17, scope: !5988)
!5990 = !DILocation(line: 87, column: 14, scope: !5988)
!5991 = !DILocation(line: 87, column: 6, scope: !5955)
!5992 = !DILocalVariable(name: "key", arg: 1, scope: !5993, file: !5823, line: 84, type: !32)
!5993 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5823, file: !5823, line: 84, type: !5834, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5994)
!5994 = !{!5992}
!5995 = !DILocation(line: 0, scope: !5993, inlinedAt: !5996)
!5996 = distinct !DILocation(line: 88, column: 3, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5988, file: !5856, line: 87, column: 30)
!5998 = !DILocation(line: 95, column: 2, scope: !5993, inlinedAt: !5996)
!5999 = !{i64 2225767}
!6000 = !DILocation(line: 89, column: 3, scope: !5997)
!6001 = !DILocation(line: 92, column: 7, scope: !5955)
!6002 = !DILocation(line: 92, column: 2, scope: !5955)
!6003 = !DILocation(line: 92, column: 31, scope: !5955)
!6004 = !DILocation(line: 93, column: 16, scope: !5955)
!6005 = !DILocation(line: 93, column: 14, scope: !5955)
!6006 = !DILocation(line: 0, scope: !5993, inlinedAt: !6007)
!6007 = distinct !DILocation(line: 95, column: 2, scope: !5955)
!6008 = !DILocation(line: 95, column: 2, scope: !5993, inlinedAt: !6007)
!6009 = !DILocation(line: 96, column: 26, scope: !5955)
!6010 = !DILocation(line: 96, column: 2, scope: !5955)
!6011 = !DILocation(line: 97, column: 2, scope: !5955)
!6012 = !DILocation(line: 98, column: 1, scope: !5955)
!6013 = distinct !DISubprogram(name: "z_errno", scope: !6014, file: !6014, line: 24, type: !6015, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !473)
!6014 = !DIFile(filename: "zephyr/include/generated/syscalls/errno_private.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!6015 = !DISubroutineType(types: !6016)
!6016 = !{!2630}
!6017 = !DILocation(line: 31, column: 2, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6013, file: !6014, line: 31, column: 2)
!6019 = !{i64 2154366960}
!6020 = !DILocation(line: 32, column: 9, scope: !6013)
!6021 = !DILocation(line: 32, column: 2, scope: !6013)
!6022 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !6023, file: !6023, line: 403, type: !6024, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6026)
!6023 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6024 = !DISubroutineType(types: !6025)
!6025 = !{!1617, !1617}
!6026 = !{!6027}
!6027 = !DILocalVariable(name: "t", arg: 1, scope: !6022, file: !6023, line: 403, type: !1617)
!6028 = !DILocation(line: 0, scope: !6022)
!6029 = !DILocalVariable(name: "t", arg: 1, scope: !6030, file: !6023, line: 102, type: !1617)
!6030 = distinct !DISubprogram(name: "z_tmcvt", scope: !6023, file: !6023, line: 102, type: !6031, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6033)
!6031 = !DISubroutineType(types: !6032)
!6032 = !{!1617, !1617, !132, !132, !166, !166, !166, !166}
!6033 = !{!6029, !6034, !6035, !6036, !6037, !6038, !6039, !6040, !6041, !6042, !6043}
!6034 = !DILocalVariable(name: "from_hz", arg: 2, scope: !6030, file: !6023, line: 102, type: !132)
!6035 = !DILocalVariable(name: "to_hz", arg: 3, scope: !6030, file: !6023, line: 103, type: !132)
!6036 = !DILocalVariable(name: "const_hz", arg: 4, scope: !6030, file: !6023, line: 103, type: !166)
!6037 = !DILocalVariable(name: "result32", arg: 5, scope: !6030, file: !6023, line: 104, type: !166)
!6038 = !DILocalVariable(name: "round_up", arg: 6, scope: !6030, file: !6023, line: 104, type: !166)
!6039 = !DILocalVariable(name: "round_off", arg: 7, scope: !6030, file: !6023, line: 105, type: !166)
!6040 = !DILocalVariable(name: "mul_ratio", scope: !6030, file: !6023, line: 107, type: !166)
!6041 = !DILocalVariable(name: "div_ratio", scope: !6030, file: !6023, line: 109, type: !166)
!6042 = !DILocalVariable(name: "off", scope: !6030, file: !6023, line: 116, type: !1617)
!6043 = !DILocalVariable(name: "rdivisor", scope: !6044, file: !6023, line: 119, type: !132)
!6044 = distinct !DILexicalBlock(scope: !6045, file: !6023, line: 118, column: 18)
!6045 = distinct !DILexicalBlock(scope: !6030, file: !6023, line: 118, column: 6)
!6046 = !DILocation(line: 0, scope: !6030, inlinedAt: !6047)
!6047 = distinct !DILocation(line: 406, column: 9, scope: !6022)
!6048 = !DILocation(line: 145, column: 13, scope: !6049, inlinedAt: !6047)
!6049 = distinct !DILexicalBlock(scope: !6050, file: !6023, line: 144, column: 10)
!6050 = distinct !DILexicalBlock(scope: !6051, file: !6023, line: 142, column: 7)
!6051 = distinct !DILexicalBlock(scope: !6052, file: !6023, line: 141, column: 24)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !6023, line: 141, column: 13)
!6053 = distinct !DILexicalBlock(scope: !6030, file: !6023, line: 134, column: 6)
!6054 = !DILocation(line: 406, column: 2, scope: !6022)
!6055 = distinct !DISubprogram(name: "k_sem_take", scope: !3696, file: !3696, line: 1044, type: !6056, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6063)
!6056 = !DISubroutineType(types: !6057)
!6057 = !{!103, !6058, !6059}
!6058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5866, size: 32)
!6059 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1721, line: 67, baseType: !6060)
!6060 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1721, line: 65, size: 64, elements: !6061)
!6061 = !{!6062}
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !6060, file: !1721, line: 66, baseType: !1720, size: 64)
!6063 = !{!6064, !6065}
!6064 = !DILocalVariable(name: "sem", arg: 1, scope: !6055, file: !3696, line: 1044, type: !6058)
!6065 = !DILocalVariable(name: "timeout", arg: 2, scope: !6055, file: !3696, line: 1044, type: !6059)
!6066 = !DILocation(line: 0, scope: !6055)
!6067 = !DILocation(line: 1053, column: 2, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6055, file: !3696, line: 1053, column: 2)
!6069 = !{i64 2154846148}
!6070 = !DILocation(line: 1054, column: 9, scope: !6055)
!6071 = !DILocation(line: 1054, column: 2, scope: !6055)
!6072 = distinct !DISubprogram(name: "uart_irq_tx_enable", scope: !5945, file: !5945, line: 193, type: !2703, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6073)
!6073 = !{!6074}
!6074 = !DILocalVariable(name: "dev", arg: 1, scope: !6072, file: !5945, line: 193, type: !2652)
!6075 = !DILocation(line: 0, scope: !6072)
!6076 = !DILocation(line: 202, column: 2, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6072, file: !5945, line: 202, column: 2)
!6078 = !{i64 2155103082}
!6079 = !DILocation(line: 203, column: 2, scope: !6072)
!6080 = !DILocation(line: 204, column: 1, scope: !6072)
!6081 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_enable", scope: !212, file: !212, line: 857, type: !2703, scopeLine: 858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6082)
!6082 = !{!6083, !6084}
!6083 = !DILocalVariable(name: "dev", arg: 1, scope: !6081, file: !212, line: 857, type: !2652)
!6084 = !DILocalVariable(name: "api", scope: !6081, file: !212, line: 860, type: !2644)
!6085 = !DILocation(line: 0, scope: !6081)
!6086 = !DILocation(line: 861, column: 40, scope: !6081)
!6087 = !DILocation(line: 863, column: 11, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6081, file: !212, line: 863, column: 6)
!6089 = !DILocation(line: 863, column: 25, scope: !6088)
!6090 = !DILocation(line: 863, column: 6, scope: !6081)
!6091 = !DILocation(line: 864, column: 3, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6088, file: !212, line: 863, column: 34)
!6093 = !DILocation(line: 865, column: 2, scope: !6092)
!6094 = !DILocation(line: 869, column: 1, scope: !6081)
!6095 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !212, file: !212, line: 574, type: !2669, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6096)
!6096 = !{!6097, !6098, !6099}
!6097 = !DILocalVariable(name: "dev", arg: 1, scope: !6095, file: !212, line: 574, type: !2652)
!6098 = !DILocalVariable(name: "out_char", arg: 2, scope: !6095, file: !212, line: 575, type: !164)
!6099 = !DILocalVariable(name: "api", scope: !6095, file: !212, line: 577, type: !2644)
!6100 = !DILocation(line: 0, scope: !6095)
!6101 = !DILocation(line: 578, column: 40, scope: !6095)
!6102 = !DILocation(line: 580, column: 7, scope: !6095)
!6103 = !DILocation(line: 580, column: 2, scope: !6095)
!6104 = !DILocation(line: 581, column: 1, scope: !6095)
!6105 = distinct !DISubprogram(name: "tty_read", scope: !5856, file: !5856, line: 206, type: !6106, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6108)
!6106 = !DISubroutineType(types: !6107)
!6107 = !{!5859, !5861, !102, !356}
!6108 = !{!6109, !6110, !6111, !6112, !6113, !6114}
!6109 = !DILocalVariable(name: "tty", arg: 1, scope: !6105, file: !5856, line: 206, type: !5861)
!6110 = !DILocalVariable(name: "buf", arg: 2, scope: !6105, file: !5856, line: 206, type: !102)
!6111 = !DILocalVariable(name: "size", arg: 3, scope: !6105, file: !5856, line: 206, type: !356)
!6112 = !DILocalVariable(name: "p", scope: !6105, file: !5856, line: 208, type: !270)
!6113 = !DILocalVariable(name: "out_size", scope: !6105, file: !5856, line: 209, type: !356)
!6114 = !DILocalVariable(name: "res", scope: !6105, file: !5856, line: 210, type: !103)
!6115 = !DILocation(line: 0, scope: !6105)
!6116 = !DILocation(line: 212, column: 11, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6105, file: !5856, line: 212, column: 6)
!6118 = !DILocation(line: 212, column: 25, scope: !6117)
!6119 = !DILocation(line: 212, column: 6, scope: !6105)
!6120 = !DILocation(line: 216, column: 2, scope: !6105)
!6121 = !DILocation(line: 213, column: 10, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6117, file: !5856, line: 212, column: 32)
!6123 = !DILocation(line: 213, column: 3, scope: !6122)
!6124 = !DILocation(line: 216, column: 13, scope: !6105)
!6125 = !DILocation(line: 217, column: 9, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6105, file: !5856, line: 216, column: 17)
!6127 = !DILocation(line: 218, column: 11, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6126, file: !5856, line: 218, column: 7)
!6129 = !DILocation(line: 218, column: 7, scope: !6126)
!6130 = !DILocation(line: 220, column: 17, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !5856, line: 220, column: 8)
!6132 = distinct !DILexicalBlock(scope: !6128, file: !5856, line: 218, column: 16)
!6133 = !DILocation(line: 220, column: 8, scope: !6132)
!6134 = !DILocation(line: 221, column: 13, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6131, file: !5856, line: 220, column: 23)
!6136 = !DILocation(line: 221, column: 5, scope: !6135)
!6137 = !DILocation(line: 221, column: 11, scope: !6135)
!6138 = !DILocation(line: 222, column: 5, scope: !6135)
!6139 = !DILocation(line: 234, column: 10, scope: !6126)
!6140 = !DILocation(line: 234, column: 5, scope: !6126)
!6141 = !DILocation(line: 234, column: 8, scope: !6126)
!6142 = !DILocation(line: 235, column: 11, scope: !6126)
!6143 = distinct !{!6143, !6120, !6144}
!6144 = !DILocation(line: 236, column: 2, scope: !6105)
!6145 = !DILocation(line: 239, column: 1, scope: !6105)
!6146 = distinct !DISubprogram(name: "tty_read_unbuf", scope: !5856, file: !5856, line: 162, type: !6106, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6147)
!6147 = !{!6148, !6149, !6150, !6151, !6152, !6153, !6154, !6155}
!6148 = !DILocalVariable(name: "tty", arg: 1, scope: !6146, file: !5856, line: 162, type: !5861)
!6149 = !DILocalVariable(name: "buf", arg: 2, scope: !6146, file: !5856, line: 162, type: !102)
!6150 = !DILocalVariable(name: "size", arg: 3, scope: !6146, file: !5856, line: 162, type: !356)
!6151 = !DILocalVariable(name: "p", scope: !6146, file: !5856, line: 164, type: !270)
!6152 = !DILocalVariable(name: "out_size", scope: !6146, file: !5856, line: 165, type: !356)
!6153 = !DILocalVariable(name: "res", scope: !6146, file: !5856, line: 166, type: !103)
!6154 = !DILocalVariable(name: "timeout", scope: !6146, file: !5856, line: 167, type: !132)
!6155 = !DILocalVariable(name: "c", scope: !6156, file: !5856, line: 170, type: !163)
!6156 = distinct !DILexicalBlock(scope: !6146, file: !5856, line: 169, column: 15)
!6157 = !DILocation(line: 0, scope: !6146)
!6158 = !DILocation(line: 169, column: 2, scope: !6146)
!6159 = !DILocation(line: 167, column: 26, scope: !6146)
!6160 = !DILocation(line: 170, column: 3, scope: !6156)
!6161 = !DILocation(line: 171, column: 27, scope: !6156)
!6162 = !DILocation(line: 0, scope: !6156)
!6163 = !DILocation(line: 171, column: 9, scope: !6156)
!6164 = !DILocation(line: 172, column: 11, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6156, file: !5856, line: 172, column: 7)
!6166 = !DILocation(line: 172, column: 7, scope: !6156)
!6167 = !DILocation(line: 177, column: 17, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6169, file: !5856, line: 177, column: 8)
!6169 = distinct !DILexicalBlock(scope: !6165, file: !5856, line: 172, column: 18)
!6170 = !DILocation(line: 177, column: 8, scope: !6169)
!6171 = !DILocation(line: 178, column: 5, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6168, file: !5856, line: 177, column: 23)
!6173 = !DILocation(line: 178, column: 11, scope: !6172)
!6174 = !DILocation(line: 201, column: 2, scope: !6146)
!6175 = !DILocation(line: 184, column: 11, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6156, file: !5856, line: 184, column: 7)
!6177 = !DILocation(line: 184, column: 7, scope: !6156)
!6178 = !DILocation(line: 185, column: 11, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6176, file: !5856, line: 184, column: 17)
!6180 = !DILocation(line: 185, column: 6, scope: !6179)
!6181 = !DILocation(line: 185, column: 9, scope: !6179)
!6182 = !DILocation(line: 186, column: 12, scope: !6179)
!6183 = !DILocation(line: 187, column: 8, scope: !6179)
!6184 = !DILocation(line: 190, column: 12, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6156, file: !5856, line: 190, column: 7)
!6186 = !DILocation(line: 190, column: 17, scope: !6185)
!6187 = !DILocation(line: 191, column: 17, scope: !6185)
!6188 = !DILocation(line: 191, column: 36, scope: !6185)
!6189 = !DILocation(line: 191, column: 46, scope: !6185)
!6190 = !DILocation(line: 191, column: 49, scope: !6185)
!6191 = !DILocation(line: 190, column: 7, scope: !6156)
!6192 = !DILocation(line: 198, column: 11, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6156, file: !5856, line: 198, column: 7)
!6194 = !DILocation(line: 198, column: 7, scope: !6156)
!6195 = !DILocation(line: 199, column: 12, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6193, file: !5856, line: 198, column: 18)
!6197 = !DILocation(line: 199, column: 4, scope: !6196)
!6198 = !DILocation(line: 200, column: 3, scope: !6196)
!6199 = !DILocation(line: 204, column: 1, scope: !6146)
!6200 = distinct !DISubprogram(name: "tty_getchar", scope: !5856, file: !5856, line: 141, type: !6201, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6203)
!6201 = !DISubroutineType(types: !6202)
!6202 = !{!103, !5861}
!6203 = !{!6204, !6205, !6206, !6207}
!6204 = !DILocalVariable(name: "tty", arg: 1, scope: !6200, file: !5856, line: 141, type: !5861)
!6205 = !DILocalVariable(name: "key", scope: !6200, file: !5856, line: 143, type: !32)
!6206 = !DILocalVariable(name: "c", scope: !6200, file: !5856, line: 144, type: !163)
!6207 = !DILocalVariable(name: "res", scope: !6200, file: !5856, line: 145, type: !103)
!6208 = !DILocation(line: 0, scope: !6200)
!6209 = !DILocation(line: 147, column: 25, scope: !6200)
!6210 = !DILocation(line: 147, column: 33, scope: !6200)
!6211 = !DILocation(line: 147, column: 8, scope: !6200)
!6212 = !DILocation(line: 148, column: 10, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6200, file: !5856, line: 148, column: 6)
!6214 = !DILocation(line: 148, column: 6, scope: !6200)
!6215 = !DILocation(line: 55, column: 2, scope: !5973, inlinedAt: !6216)
!6216 = distinct !DILocation(line: 152, column: 8, scope: !6200)
!6217 = !DILocation(line: 0, scope: !5973, inlinedAt: !6216)
!6218 = !DILocation(line: 153, column: 11, scope: !6200)
!6219 = !DILocation(line: 153, column: 27, scope: !6200)
!6220 = !DILocation(line: 153, column: 33, scope: !6200)
!6221 = !DILocation(line: 153, column: 6, scope: !6200)
!6222 = !DILocation(line: 154, column: 6, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6200, file: !5856, line: 154, column: 6)
!6224 = !DILocation(line: 154, column: 26, scope: !6223)
!6225 = !DILocation(line: 154, column: 18, scope: !6223)
!6226 = !DILocation(line: 154, column: 6, scope: !6200)
!6227 = !DILocation(line: 0, scope: !5993, inlinedAt: !6228)
!6228 = distinct !DILocation(line: 157, column: 2, scope: !6200)
!6229 = !DILocation(line: 95, column: 2, scope: !5993, inlinedAt: !6228)
!6230 = !DILocation(line: 159, column: 9, scope: !6200)
!6231 = !DILocation(line: 159, column: 2, scope: !6200)
!6232 = !DILocation(line: 160, column: 1, scope: !6200)
!6233 = distinct !DISubprogram(name: "uart_poll_in", scope: !5945, file: !5945, line: 47, type: !2650, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6234)
!6234 = !{!6235, !6236}
!6235 = !DILocalVariable(name: "dev", arg: 1, scope: !6233, file: !5945, line: 47, type: !2652)
!6236 = !DILocalVariable(name: "p_char", arg: 2, scope: !6233, file: !5945, line: 47, type: !233)
!6237 = !DILocation(line: 0, scope: !6233)
!6238 = !DILocation(line: 56, column: 2, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6233, file: !5945, line: 56, column: 2)
!6240 = !{i64 2155102674}
!6241 = !DILocation(line: 57, column: 9, scope: !6233)
!6242 = !DILocation(line: 57, column: 2, scope: !6233)
!6243 = distinct !DISubprogram(name: "k_sleep", scope: !3696, file: !3696, line: 91, type: !6244, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6246)
!6244 = !DISubroutineType(types: !6245)
!6245 = !{!344, !6059}
!6246 = !{!6247}
!6247 = !DILocalVariable(name: "timeout", arg: 1, scope: !6243, file: !3696, line: 91, type: !6059)
!6248 = !DILocation(line: 0, scope: !6243)
!6249 = !DILocation(line: 99, column: 2, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6243, file: !3696, line: 99, column: 2)
!6251 = !{i64 2154842304}
!6252 = !DILocation(line: 100, column: 9, scope: !6243)
!6253 = !DILocation(line: 100, column: 2, scope: !6243)
!6254 = distinct !DISubprogram(name: "z_impl_uart_poll_in", scope: !212, file: !212, line: 504, type: !2650, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6255)
!6255 = !{!6256, !6257, !6258}
!6256 = !DILocalVariable(name: "dev", arg: 1, scope: !6254, file: !212, line: 504, type: !2652)
!6257 = !DILocalVariable(name: "p_char", arg: 2, scope: !6254, file: !212, line: 505, type: !233)
!6258 = !DILocalVariable(name: "api", scope: !6254, file: !212, line: 507, type: !2644)
!6259 = !DILocation(line: 0, scope: !6254)
!6260 = !DILocation(line: 508, column: 40, scope: !6254)
!6261 = !DILocation(line: 510, column: 11, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6254, file: !212, line: 510, column: 6)
!6263 = !DILocation(line: 510, column: 19, scope: !6262)
!6264 = !DILocation(line: 510, column: 6, scope: !6254)
!6265 = !DILocation(line: 514, column: 9, scope: !6254)
!6266 = !DILocation(line: 514, column: 2, scope: !6254)
!6267 = !DILocation(line: 515, column: 1, scope: !6254)
!6268 = distinct !DISubprogram(name: "tty_init", scope: !5856, file: !5856, line: 241, type: !6269, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6271)
!6269 = !DISubroutineType(types: !6270)
!6270 = !{!103, !5861, !2652}
!6271 = !{!6272, !6273}
!6272 = !DILocalVariable(name: "tty", arg: 1, scope: !6268, file: !5856, line: 241, type: !5861)
!6273 = !DILocalVariable(name: "uart_dev", arg: 2, scope: !6268, file: !5856, line: 241, type: !2652)
!6274 = !DILocation(line: 0, scope: !6268)
!6275 = !DILocation(line: 243, column: 7, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6268, file: !5856, line: 243, column: 6)
!6277 = !DILocation(line: 243, column: 6, scope: !6268)
!6278 = !DILocation(line: 247, column: 7, scope: !6268)
!6279 = !DILocation(line: 247, column: 16, scope: !6268)
!6280 = !DILocation(line: 250, column: 7, scope: !6268)
!6281 = !DILocation(line: 250, column: 18, scope: !6268)
!6282 = !DILocation(line: 251, column: 7, scope: !6268)
!6283 = !DILocation(line: 251, column: 21, scope: !6268)
!6284 = !DILocation(line: 252, column: 7, scope: !6268)
!6285 = !DILocation(line: 252, column: 18, scope: !6268)
!6286 = !DILocation(line: 253, column: 7, scope: !6268)
!6287 = !DILocation(line: 253, column: 21, scope: !6268)
!6288 = !DILocation(line: 255, column: 49, scope: !6268)
!6289 = !DILocation(line: 255, column: 56, scope: !6268)
!6290 = !DILocation(line: 255, column: 35, scope: !6268)
!6291 = !DILocation(line: 255, column: 42, scope: !6268)
!6292 = !DILocation(line: 255, column: 21, scope: !6268)
!6293 = !DILocation(line: 255, column: 28, scope: !6268)
!6294 = !DILocation(line: 255, column: 7, scope: !6268)
!6295 = !DILocation(line: 255, column: 14, scope: !6268)
!6296 = !DILocation(line: 257, column: 7, scope: !6268)
!6297 = !DILocation(line: 257, column: 18, scope: !6268)
!6298 = !DILocation(line: 258, column: 7, scope: !6268)
!6299 = !DILocation(line: 258, column: 18, scope: !6268)
!6300 = !DILocation(line: 260, column: 58, scope: !6268)
!6301 = !DILocation(line: 260, column: 2, scope: !6268)
!6302 = !DILocation(line: 262, column: 2, scope: !6268)
!6303 = !DILocation(line: 263, column: 1, scope: !6268)
!6304 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !212, file: !212, line: 1163, type: !2717, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6305)
!6305 = !{!6306, !6307, !6308, !6309}
!6306 = !DILocalVariable(name: "dev", arg: 1, scope: !6304, file: !212, line: 1163, type: !2652)
!6307 = !DILocalVariable(name: "cb", arg: 2, scope: !6304, file: !212, line: 1164, type: !2719)
!6308 = !DILocalVariable(name: "user_data", arg: 3, scope: !6304, file: !212, line: 1165, type: !102)
!6309 = !DILocalVariable(name: "api", scope: !6304, file: !212, line: 1168, type: !2644)
!6310 = !DILocation(line: 0, scope: !6304)
!6311 = !DILocation(line: 1169, column: 40, scope: !6304)
!6312 = !DILocation(line: 1171, column: 11, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6304, file: !212, line: 1171, column: 6)
!6314 = !DILocation(line: 1171, column: 20, scope: !6313)
!6315 = !DILocation(line: 1171, column: 29, scope: !6313)
!6316 = !DILocation(line: 1171, column: 46, scope: !6313)
!6317 = !DILocation(line: 1171, column: 6, scope: !6304)
!6318 = !DILocation(line: 1172, column: 3, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6313, file: !212, line: 1171, column: 56)
!6320 = !DILocation(line: 1173, column: 2, scope: !6319)
!6321 = !DILocation(line: 1179, column: 1, scope: !6304)
!6322 = distinct !DISubprogram(name: "tty_uart_isr", scope: !5856, file: !5856, line: 15, type: !2721, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6323)
!6323 = !{!6324, !6325, !6326, !6327}
!6324 = !DILocalVariable(name: "dev", arg: 1, scope: !6322, file: !5856, line: 15, type: !2652)
!6325 = !DILocalVariable(name: "user_data", arg: 2, scope: !6322, file: !5856, line: 15, type: !102)
!6326 = !DILocalVariable(name: "tty", scope: !6322, file: !5856, line: 17, type: !5861)
!6327 = !DILocalVariable(name: "c", scope: !6328, file: !5856, line: 22, type: !163)
!6328 = distinct !DILexicalBlock(scope: !6329, file: !5856, line: 21, column: 30)
!6329 = distinct !DILexicalBlock(scope: !6322, file: !5856, line: 21, column: 6)
!6330 = !DILocation(line: 0, scope: !6322)
!6331 = !DILocation(line: 17, column: 27, scope: !6322)
!6332 = !DILocation(line: 19, column: 2, scope: !6322)
!6333 = !DILocation(line: 21, column: 6, scope: !6329)
!6334 = !DILocation(line: 21, column: 6, scope: !6322)
!6335 = !DILocation(line: 22, column: 3, scope: !6328)
!6336 = !DILocation(line: 0, scope: !6328)
!6337 = !DILocation(line: 25, column: 8, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6339, file: !5856, line: 25, column: 8)
!6339 = distinct !DILexicalBlock(scope: !6328, file: !5856, line: 24, column: 13)
!6340 = !DILocation(line: 25, column: 35, scope: !6338)
!6341 = !DILocation(line: 25, column: 8, scope: !6339)
!6342 = !DILocation(line: 28, column: 28, scope: !6339)
!6343 = !DILocation(line: 28, column: 4, scope: !6339)
!6344 = distinct !{!6344, !6345, !6346}
!6345 = !DILocation(line: 24, column: 3, scope: !6328)
!6346 = !DILocation(line: 29, column: 3, scope: !6328)
!6347 = !DILocation(line: 30, column: 2, scope: !6329)
!6348 = !DILocation(line: 30, column: 2, scope: !6328)
!6349 = !DILocation(line: 32, column: 6, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6322, file: !5856, line: 32, column: 6)
!6351 = !DILocation(line: 32, column: 6, scope: !6322)
!6352 = !DILocation(line: 33, column: 12, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6354, file: !5856, line: 33, column: 7)
!6354 = distinct !DILexicalBlock(scope: !6350, file: !5856, line: 32, column: 30)
!6355 = !DILocation(line: 33, column: 27, scope: !6353)
!6356 = !DILocation(line: 33, column: 19, scope: !6353)
!6357 = !DILocation(line: 33, column: 7, scope: !6354)
!6358 = !DILocation(line: 37, column: 4, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6353, file: !5856, line: 33, column: 35)
!6360 = !DILocation(line: 38, column: 3, scope: !6359)
!6361 = !DILocation(line: 33, column: 7, scope: !6353)
!6362 = !DILocation(line: 39, column: 30, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6353, file: !5856, line: 38, column: 10)
!6364 = !DILocation(line: 39, column: 52, scope: !6363)
!6365 = !DILocation(line: 39, column: 25, scope: !6363)
!6366 = !DILocation(line: 39, column: 4, scope: !6363)
!6367 = !DILocation(line: 40, column: 13, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6363, file: !5856, line: 40, column: 8)
!6369 = !DILocation(line: 40, column: 8, scope: !6368)
!6370 = !DILocation(line: 40, column: 28, scope: !6368)
!6371 = !DILocation(line: 40, column: 20, scope: !6368)
!6372 = !DILocation(line: 40, column: 8, scope: !6363)
!6373 = !DILocation(line: 41, column: 17, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6368, file: !5856, line: 40, column: 43)
!6375 = !DILocation(line: 42, column: 4, scope: !6374)
!6376 = !DILocation(line: 43, column: 21, scope: !6363)
!6377 = !DILocation(line: 43, column: 4, scope: !6363)
!6378 = !DILocation(line: 46, column: 1, scope: !6322)
!6379 = distinct !DISubprogram(name: "uart_irq_update", scope: !5945, file: !5945, line: 360, type: !2673, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6380)
!6380 = !{!6381}
!6381 = !DILocalVariable(name: "dev", arg: 1, scope: !6379, file: !5945, line: 360, type: !2652)
!6382 = !DILocation(line: 0, scope: !6379)
!6383 = !DILocation(line: 368, column: 2, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6379, file: !5945, line: 368, column: 2)
!6385 = !{i64 2155103558}
!6386 = !DILocation(line: 369, column: 9, scope: !6379)
!6387 = !DILocation(line: 369, column: 2, scope: !6379)
!6388 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !212, file: !212, line: 1024, type: !2673, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6389)
!6389 = !{!6390, !6391}
!6390 = !DILocalVariable(name: "dev", arg: 1, scope: !6388, file: !212, line: 1024, type: !2652)
!6391 = !DILocalVariable(name: "api", scope: !6388, file: !212, line: 1027, type: !2644)
!6392 = !DILocation(line: 0, scope: !6388)
!6393 = !DILocation(line: 1028, column: 40, scope: !6388)
!6394 = !DILocation(line: 1030, column: 11, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6388, file: !212, line: 1030, column: 6)
!6396 = !DILocation(line: 1030, column: 24, scope: !6395)
!6397 = !DILocation(line: 1030, column: 6, scope: !6388)
!6398 = !DILocation(line: 1033, column: 9, scope: !6388)
!6399 = !DILocation(line: 1033, column: 2, scope: !6388)
!6400 = !DILocation(line: 1038, column: 1, scope: !6388)
!6401 = distinct !DISubprogram(name: "uart_fifo_read", scope: !212, file: !212, line: 785, type: !2699, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6402)
!6402 = !{!6403, !6404, !6405, !6406}
!6403 = !DILocalVariable(name: "dev", arg: 1, scope: !6401, file: !212, line: 785, type: !2652)
!6404 = !DILocalVariable(name: "rx_data", arg: 2, scope: !6401, file: !212, line: 785, type: !270)
!6405 = !DILocalVariable(name: "size", arg: 3, scope: !6401, file: !212, line: 786, type: !271)
!6406 = !DILocalVariable(name: "api", scope: !6401, file: !212, line: 789, type: !2644)
!6407 = !DILocation(line: 0, scope: !6401)
!6408 = !DILocation(line: 790, column: 40, scope: !6401)
!6409 = !DILocation(line: 792, column: 11, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6401, file: !212, line: 792, column: 6)
!6411 = !DILocation(line: 792, column: 21, scope: !6410)
!6412 = !DILocation(line: 792, column: 6, scope: !6401)
!6413 = !DILocation(line: 796, column: 9, scope: !6401)
!6414 = !DILocation(line: 796, column: 2, scope: !6401)
!6415 = !DILocation(line: 803, column: 1, scope: !6401)
!6416 = distinct !DISubprogram(name: "tty_irq_input_hook", scope: !5856, file: !5856, line: 48, type: !5956, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6417)
!6417 = !{!6418, !6419, !6420}
!6418 = !DILocalVariable(name: "tty", arg: 1, scope: !6416, file: !5856, line: 48, type: !5861)
!6419 = !DILocalVariable(name: "c", arg: 2, scope: !6416, file: !5856, line: 48, type: !163)
!6420 = !DILocalVariable(name: "rx_next", scope: !6416, file: !5856, line: 50, type: !103)
!6421 = !DILocation(line: 0, scope: !6416)
!6422 = !DILocation(line: 50, column: 21, scope: !6416)
!6423 = !DILocation(line: 50, column: 16, scope: !6416)
!6424 = !DILocation(line: 50, column: 28, scope: !6416)
!6425 = !DILocation(line: 52, column: 22, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6416, file: !5856, line: 52, column: 6)
!6427 = !DILocation(line: 52, column: 14, scope: !6426)
!6428 = !DILocation(line: 52, column: 6, scope: !6416)
!6429 = !DILocation(line: 56, column: 22, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6416, file: !5856, line: 56, column: 6)
!6431 = !DILocation(line: 56, column: 17, scope: !6430)
!6432 = !DILocation(line: 56, column: 14, scope: !6430)
!6433 = !DILocation(line: 56, column: 6, scope: !6416)
!6434 = !DILocation(line: 58, column: 3, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6430, file: !5856, line: 56, column: 30)
!6436 = !DILocation(line: 59, column: 3, scope: !6435)
!6437 = !DILocation(line: 62, column: 7, scope: !6416)
!6438 = !DILocation(line: 62, column: 2, scope: !6416)
!6439 = !DILocation(line: 62, column: 31, scope: !6416)
!6440 = !DILocation(line: 63, column: 16, scope: !6416)
!6441 = !DILocation(line: 63, column: 14, scope: !6416)
!6442 = !DILocation(line: 64, column: 19, scope: !6416)
!6443 = !DILocation(line: 64, column: 2, scope: !6416)
!6444 = !DILocation(line: 66, column: 2, scope: !6416)
!6445 = !DILocation(line: 67, column: 1, scope: !6416)
!6446 = distinct !DISubprogram(name: "uart_irq_tx_ready", scope: !212, file: !212, line: 910, type: !2673, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6447)
!6447 = !{!6448, !6449}
!6448 = !DILocalVariable(name: "dev", arg: 1, scope: !6446, file: !212, line: 910, type: !2652)
!6449 = !DILocalVariable(name: "api", scope: !6446, file: !212, line: 913, type: !2644)
!6450 = !DILocation(line: 0, scope: !6446)
!6451 = !DILocation(line: 914, column: 40, scope: !6446)
!6452 = !DILocation(line: 916, column: 11, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6446, file: !212, line: 916, column: 6)
!6454 = !DILocation(line: 916, column: 24, scope: !6453)
!6455 = !DILocation(line: 916, column: 6, scope: !6446)
!6456 = !DILocation(line: 920, column: 9, scope: !6446)
!6457 = !DILocation(line: 920, column: 2, scope: !6446)
!6458 = !DILocation(line: 925, column: 1, scope: !6446)
!6459 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5945, file: !5945, line: 217, type: !2703, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6460)
!6460 = !{!6461}
!6461 = !DILocalVariable(name: "dev", arg: 1, scope: !6459, file: !5945, line: 217, type: !2652)
!6462 = !DILocation(line: 0, scope: !6459)
!6463 = !DILocation(line: 226, column: 2, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6459, file: !5945, line: 226, column: 2)
!6465 = !{i64 2155103150}
!6466 = !DILocation(line: 227, column: 2, scope: !6459)
!6467 = !DILocation(line: 228, column: 1, scope: !6459)
!6468 = distinct !DISubprogram(name: "uart_fifo_fill", scope: !212, file: !212, line: 699, type: !2695, scopeLine: 702, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6469)
!6469 = !{!6470, !6471, !6472, !6473}
!6470 = !DILocalVariable(name: "dev", arg: 1, scope: !6468, file: !212, line: 699, type: !2652)
!6471 = !DILocalVariable(name: "tx_data", arg: 2, scope: !6468, file: !212, line: 700, type: !264)
!6472 = !DILocalVariable(name: "size", arg: 3, scope: !6468, file: !212, line: 701, type: !103)
!6473 = !DILocalVariable(name: "api", scope: !6468, file: !212, line: 704, type: !2644)
!6474 = !DILocation(line: 0, scope: !6468)
!6475 = !DILocation(line: 705, column: 40, scope: !6468)
!6476 = !DILocation(line: 707, column: 11, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6468, file: !212, line: 707, column: 6)
!6478 = !DILocation(line: 707, column: 21, scope: !6477)
!6479 = !DILocation(line: 707, column: 6, scope: !6468)
!6480 = !DILocation(line: 711, column: 9, scope: !6468)
!6481 = !DILocation(line: 711, column: 2, scope: !6468)
!6482 = !DILocation(line: 718, column: 1, scope: !6468)
!6483 = distinct !DISubprogram(name: "k_sem_give", scope: !3696, file: !3696, line: 1061, type: !6484, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6486)
!6484 = !DISubroutineType(types: !6485)
!6485 = !{null, !6058}
!6486 = !{!6487}
!6487 = !DILocalVariable(name: "sem", arg: 1, scope: !6483, file: !3696, line: 1061, type: !6058)
!6488 = !DILocation(line: 0, scope: !6483)
!6489 = !DILocation(line: 1070, column: 2, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6483, file: !3696, line: 1070, column: 2)
!6491 = !{i64 2154846216}
!6492 = !DILocation(line: 1071, column: 2, scope: !6483)
!6493 = !DILocation(line: 1072, column: 1, scope: !6483)
!6494 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !212, file: !212, line: 878, type: !2703, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6495)
!6495 = !{!6496, !6497}
!6496 = !DILocalVariable(name: "dev", arg: 1, scope: !6494, file: !212, line: 878, type: !2652)
!6497 = !DILocalVariable(name: "api", scope: !6494, file: !212, line: 881, type: !2644)
!6498 = !DILocation(line: 0, scope: !6494)
!6499 = !DILocation(line: 882, column: 40, scope: !6494)
!6500 = !DILocation(line: 884, column: 11, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6494, file: !212, line: 884, column: 6)
!6502 = !DILocation(line: 884, column: 26, scope: !6501)
!6503 = !DILocation(line: 884, column: 6, scope: !6494)
!6504 = !DILocation(line: 885, column: 3, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6501, file: !212, line: 884, column: 35)
!6506 = !DILocation(line: 886, column: 2, scope: !6505)
!6507 = !DILocation(line: 890, column: 1, scope: !6494)
!6508 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !212, file: !212, line: 1136, type: !2673, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6509)
!6509 = !{!6510, !6511}
!6510 = !DILocalVariable(name: "dev", arg: 1, scope: !6508, file: !212, line: 1136, type: !2652)
!6511 = !DILocalVariable(name: "api", scope: !6508, file: !212, line: 1139, type: !2644)
!6512 = !DILocation(line: 0, scope: !6508)
!6513 = !DILocation(line: 1140, column: 40, scope: !6508)
!6514 = !DILocation(line: 1142, column: 11, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6508, file: !212, line: 1142, column: 6)
!6516 = !DILocation(line: 1142, column: 22, scope: !6515)
!6517 = !DILocation(line: 1142, column: 6, scope: !6508)
!6518 = !DILocation(line: 1145, column: 9, scope: !6508)
!6519 = !DILocation(line: 1145, column: 2, scope: !6508)
!6520 = !DILocation(line: 1150, column: 1, scope: !6508)
!6521 = distinct !DISubprogram(name: "tty_set_rx_buf", scope: !5856, file: !5856, line: 265, type: !6522, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6524)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{!103, !5861, !102, !356}
!6524 = !{!6525, !6526, !6527}
!6525 = !DILocalVariable(name: "tty", arg: 1, scope: !6521, file: !5856, line: 265, type: !5861)
!6526 = !DILocalVariable(name: "buf", arg: 2, scope: !6521, file: !5856, line: 265, type: !102)
!6527 = !DILocalVariable(name: "size", arg: 3, scope: !6521, file: !5856, line: 265, type: !356)
!6528 = !DILocation(line: 0, scope: !6521)
!6529 = !DILocation(line: 267, column: 27, scope: !6521)
!6530 = !DILocation(line: 267, column: 2, scope: !6521)
!6531 = !DILocation(line: 269, column: 7, scope: !6521)
!6532 = !DILocation(line: 269, column: 18, scope: !6521)
!6533 = !DILocation(line: 270, column: 7, scope: !6521)
!6534 = !DILocation(line: 270, column: 21, scope: !6521)
!6535 = !DILocation(line: 272, column: 11, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6521, file: !5856, line: 272, column: 6)
!6537 = !DILocation(line: 272, column: 6, scope: !6521)
!6538 = !DILocation(line: 273, column: 20, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6536, file: !5856, line: 272, column: 16)
!6540 = !DILocation(line: 273, column: 3, scope: !6539)
!6541 = !DILocation(line: 274, column: 27, scope: !6539)
!6542 = !DILocation(line: 274, column: 3, scope: !6539)
!6543 = !DILocation(line: 275, column: 2, scope: !6539)
!6544 = !DILocation(line: 277, column: 2, scope: !6521)
!6545 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5945, file: !5945, line: 265, type: !2703, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6546)
!6546 = !{!6547}
!6547 = !DILocalVariable(name: "dev", arg: 1, scope: !6545, file: !5945, line: 265, type: !2652)
!6548 = !DILocation(line: 0, scope: !6545)
!6549 = !DILocation(line: 274, column: 2, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6545, file: !5945, line: 274, column: 2)
!6551 = !{i64 2155103286}
!6552 = !DILocation(line: 275, column: 2, scope: !6545)
!6553 = !DILocation(line: 276, column: 1, scope: !6545)
!6554 = distinct !DISubprogram(name: "k_sem_init", scope: !3696, file: !3696, line: 1026, type: !6555, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6557)
!6555 = !DISubroutineType(types: !6556)
!6556 = !{!103, !6058, !32, !32}
!6557 = !{!6558, !6559, !6560}
!6558 = !DILocalVariable(name: "sem", arg: 1, scope: !6554, file: !3696, line: 1026, type: !6058)
!6559 = !DILocalVariable(name: "initial_count", arg: 2, scope: !6554, file: !3696, line: 1026, type: !32)
!6560 = !DILocalVariable(name: "limit", arg: 3, scope: !6554, file: !3696, line: 1026, type: !32)
!6561 = !DILocation(line: 0, scope: !6554)
!6562 = !DILocation(line: 1036, column: 2, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6554, file: !3696, line: 1036, column: 2)
!6564 = !{i64 2154846080}
!6565 = !DILocation(line: 1037, column: 9, scope: !6554)
!6566 = !DILocation(line: 1037, column: 2, scope: !6554)
!6567 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5945, file: !5945, line: 241, type: !2703, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6568)
!6568 = !{!6569}
!6569 = !DILocalVariable(name: "dev", arg: 1, scope: !6567, file: !5945, line: 241, type: !2652)
!6570 = !DILocation(line: 0, scope: !6567)
!6571 = !DILocation(line: 250, column: 2, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6567, file: !5945, line: 250, column: 2)
!6573 = !{i64 2155103218}
!6574 = !DILocation(line: 251, column: 2, scope: !6567)
!6575 = !DILocation(line: 252, column: 1, scope: !6567)
!6576 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !212, file: !212, line: 934, type: !2703, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6577)
!6577 = !{!6578, !6579}
!6578 = !DILocalVariable(name: "dev", arg: 1, scope: !6576, file: !212, line: 934, type: !2652)
!6579 = !DILocalVariable(name: "api", scope: !6576, file: !212, line: 937, type: !2644)
!6580 = !DILocation(line: 0, scope: !6576)
!6581 = !DILocation(line: 938, column: 40, scope: !6576)
!6582 = !DILocation(line: 940, column: 11, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6576, file: !212, line: 940, column: 6)
!6584 = !DILocation(line: 940, column: 25, scope: !6583)
!6585 = !DILocation(line: 940, column: 6, scope: !6576)
!6586 = !DILocation(line: 941, column: 3, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6583, file: !212, line: 940, column: 34)
!6588 = !DILocation(line: 942, column: 2, scope: !6587)
!6589 = !DILocation(line: 946, column: 1, scope: !6576)
!6590 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !212, file: !212, line: 955, type: !2703, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6591)
!6591 = !{!6592, !6593}
!6592 = !DILocalVariable(name: "dev", arg: 1, scope: !6590, file: !212, line: 955, type: !2652)
!6593 = !DILocalVariable(name: "api", scope: !6590, file: !212, line: 958, type: !2644)
!6594 = !DILocation(line: 0, scope: !6590)
!6595 = !DILocation(line: 959, column: 40, scope: !6590)
!6596 = !DILocation(line: 961, column: 11, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6590, file: !212, line: 961, column: 6)
!6598 = !DILocation(line: 961, column: 26, scope: !6597)
!6599 = !DILocation(line: 961, column: 6, scope: !6590)
!6600 = !DILocation(line: 962, column: 3, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6597, file: !212, line: 961, column: 35)
!6602 = !DILocation(line: 963, column: 2, scope: !6601)
!6603 = !DILocation(line: 967, column: 1, scope: !6590)
!6604 = distinct !DISubprogram(name: "tty_set_tx_buf", scope: !5856, file: !5856, line: 280, type: !6522, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6605)
!6605 = !{!6606, !6607, !6608}
!6606 = !DILocalVariable(name: "tty", arg: 1, scope: !6604, file: !5856, line: 280, type: !5861)
!6607 = !DILocalVariable(name: "buf", arg: 2, scope: !6604, file: !5856, line: 280, type: !102)
!6608 = !DILocalVariable(name: "size", arg: 3, scope: !6604, file: !5856, line: 280, type: !356)
!6609 = !DILocation(line: 0, scope: !6604)
!6610 = !DILocation(line: 282, column: 27, scope: !6604)
!6611 = !DILocation(line: 282, column: 2, scope: !6604)
!6612 = !DILocation(line: 284, column: 7, scope: !6604)
!6613 = !DILocation(line: 284, column: 18, scope: !6604)
!6614 = !DILocation(line: 285, column: 7, scope: !6604)
!6615 = !DILocation(line: 285, column: 21, scope: !6604)
!6616 = !DILocation(line: 287, column: 19, scope: !6604)
!6617 = !DILocation(line: 287, column: 32, scope: !6604)
!6618 = !DILocation(line: 287, column: 2, scope: !6604)
!6619 = !DILocation(line: 293, column: 2, scope: !6604)
!6620 = distinct !DISubprogram(name: "console_write", scope: !297, file: !297, line: 18, type: !6621, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6623)
!6621 = !DISubroutineType(types: !6622)
!6622 = !{!5859, !102, !13, !356}
!6623 = !{!6624, !6625, !6626}
!6624 = !DILocalVariable(name: "dummy", arg: 1, scope: !6620, file: !297, line: 18, type: !102)
!6625 = !DILocalVariable(name: "buf", arg: 2, scope: !6620, file: !297, line: 18, type: !13)
!6626 = !DILocalVariable(name: "size", arg: 3, scope: !6620, file: !297, line: 18, type: !356)
!6627 = !DILocation(line: 0, scope: !6620)
!6628 = !DILocation(line: 22, column: 9, scope: !6620)
!6629 = !DILocation(line: 22, column: 2, scope: !6620)
!6630 = distinct !DISubprogram(name: "console_read", scope: !297, file: !297, line: 25, type: !6631, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6633)
!6631 = !DISubroutineType(types: !6632)
!6632 = !{!5859, !102, !102, !356}
!6633 = !{!6634, !6635, !6636}
!6634 = !DILocalVariable(name: "dummy", arg: 1, scope: !6630, file: !297, line: 25, type: !102)
!6635 = !DILocalVariable(name: "buf", arg: 2, scope: !6630, file: !297, line: 25, type: !102)
!6636 = !DILocalVariable(name: "size", arg: 3, scope: !6630, file: !297, line: 25, type: !356)
!6637 = !DILocation(line: 0, scope: !6630)
!6638 = !DILocation(line: 29, column: 9, scope: !6630)
!6639 = !DILocation(line: 29, column: 2, scope: !6630)
!6640 = distinct !DISubprogram(name: "console_putchar", scope: !297, file: !297, line: 32, type: !1089, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6641)
!6641 = !{!6642}
!6642 = !DILocalVariable(name: "c", arg: 1, scope: !6640, file: !297, line: 32, type: !108)
!6643 = !DILocation(line: 0, scope: !6640)
!6644 = !DILocation(line: 34, column: 9, scope: !6640)
!6645 = !DILocation(line: 34, column: 2, scope: !6640)
!6646 = distinct !DISubprogram(name: "console_getchar", scope: !297, file: !297, line: 37, type: !6647, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6649)
!6647 = !DISubroutineType(types: !6648)
!6648 = !{!103}
!6649 = !{!6650, !6651}
!6650 = !DILocalVariable(name: "c", scope: !6646, file: !297, line: 39, type: !163)
!6651 = !DILocalVariable(name: "res", scope: !6646, file: !297, line: 40, type: !103)
!6652 = !DILocation(line: 39, column: 2, scope: !6646)
!6653 = !DILocation(line: 0, scope: !6646)
!6654 = !DILocation(line: 42, column: 8, scope: !6646)
!6655 = !DILocation(line: 43, column: 10, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6646, file: !297, line: 43, column: 6)
!6657 = !DILocation(line: 43, column: 6, scope: !6646)
!6658 = !DILocation(line: 48, column: 1, scope: !6646)
!6659 = distinct !DISubprogram(name: "console_init", scope: !297, file: !297, line: 50, type: !6647, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6660)
!6660 = !{!6661, !6662, !6663}
!6661 = !DILocalVariable(name: "uart_dev", scope: !6659, file: !297, line: 52, type: !218)
!6662 = !DILocalVariable(name: "ret", scope: !6659, file: !297, line: 53, type: !103)
!6663 = !DILocalVariable(name: "api", scope: !6664, file: !297, line: 68, type: !209)
!6664 = distinct !DILexicalBlock(scope: !6665, file: !297, line: 67, column: 71)
!6665 = distinct !DILexicalBlock(scope: !6659, file: !297, line: 67, column: 6)
!6666 = !DILocation(line: 0, scope: !6659)
!6667 = !DILocation(line: 56, column: 7, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6659, file: !297, line: 56, column: 6)
!6669 = !DILocation(line: 56, column: 6, scope: !6659)
!6670 = !DILocation(line: 60, column: 8, scope: !6659)
!6671 = !DILocation(line: 62, column: 6, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6659, file: !297, line: 62, column: 6)
!6673 = !DILocation(line: 62, column: 6, scope: !6659)
!6674 = !DILocation(line: 69, column: 46, scope: !6664)
!6675 = !DILocation(line: 0, scope: !6664)
!6676 = !DILocation(line: 70, column: 13, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6664, file: !297, line: 70, column: 7)
!6678 = !DILocation(line: 70, column: 8, scope: !6677)
!6679 = !DILocation(line: 75, column: 2, scope: !6659)
!6680 = !DILocation(line: 76, column: 2, scope: !6659)
!6681 = !DILocation(line: 78, column: 2, scope: !6659)
!6682 = !DILocation(line: 79, column: 1, scope: !6659)
!6683 = distinct !DISubprogram(name: "device_is_ready", scope: !6684, file: !6684, line: 47, type: !6685, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6687)
!6684 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!6685 = !DISubroutineType(types: !6686)
!6686 = !{!166, !218}
!6687 = !{!6688}
!6688 = !DILocalVariable(name: "dev", arg: 1, scope: !6683, file: !6684, line: 47, type: !218)
!6689 = !DILocation(line: 0, scope: !6683)
!6690 = !DILocation(line: 55, column: 2, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6683, file: !6684, line: 55, column: 2)
!6692 = !{i64 2155015499}
!6693 = !DILocation(line: 56, column: 9, scope: !6683)
!6694 = !DILocation(line: 56, column: 2, scope: !6683)
!6695 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !6685, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6696)
!6696 = !{!6697}
!6697 = !DILocalVariable(name: "dev", arg: 1, scope: !6695, file: !152, line: 730, type: !218)
!6698 = !DILocation(line: 0, scope: !6695)
!6699 = !DILocation(line: 732, column: 9, scope: !6695)
!6700 = !DILocation(line: 732, column: 2, scope: !6695)
!6701 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6702, file: !6702, line: 57, type: !6703, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !6749)
!6702 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6703 = !DISubroutineType(types: !6704)
!6704 = !{null, !32, !6705}
!6705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6706, size: 32)
!6706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6707)
!6707 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2843, line: 141, baseType: !6708)
!6708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2843, line: 97, size: 256, elements: !6709)
!6709 = !{!6710}
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6708, file: !2843, line: 107, baseType: !6711, size: 256)
!6711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2843, line: 98, size: 256, elements: !6712)
!6712 = !{!6713, !6718, !6723, !6728, !6733, !6738, !6743, !6748}
!6713 = !DIDerivedType(tag: DW_TAG_member, scope: !6711, file: !2843, line: 99, baseType: !6714, size: 32)
!6714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6711, file: !2843, line: 99, size: 32, elements: !6715)
!6715 = !{!6716, !6717}
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6714, file: !2843, line: 99, baseType: !132, size: 32)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6714, file: !2843, line: 99, baseType: !132, size: 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, scope: !6711, file: !2843, line: 100, baseType: !6719, size: 32, offset: 32)
!6719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6711, file: !2843, line: 100, size: 32, elements: !6720)
!6720 = !{!6721, !6722}
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6719, file: !2843, line: 100, baseType: !132, size: 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6719, file: !2843, line: 100, baseType: !132, size: 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, scope: !6711, file: !2843, line: 101, baseType: !6724, size: 32, offset: 64)
!6724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6711, file: !2843, line: 101, size: 32, elements: !6725)
!6725 = !{!6726, !6727}
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6724, file: !2843, line: 101, baseType: !132, size: 32)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6724, file: !2843, line: 101, baseType: !132, size: 32)
!6728 = !DIDerivedType(tag: DW_TAG_member, scope: !6711, file: !2843, line: 102, baseType: !6729, size: 32, offset: 96)
!6729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6711, file: !2843, line: 102, size: 32, elements: !6730)
!6730 = !{!6731, !6732}
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6729, file: !2843, line: 102, baseType: !132, size: 32)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6729, file: !2843, line: 102, baseType: !132, size: 32)
!6733 = !DIDerivedType(tag: DW_TAG_member, scope: !6711, file: !2843, line: 103, baseType: !6734, size: 32, offset: 128)
!6734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6711, file: !2843, line: 103, size: 32, elements: !6735)
!6735 = !{!6736, !6737}
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6734, file: !2843, line: 103, baseType: !132, size: 32)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6734, file: !2843, line: 103, baseType: !132, size: 32)
!6738 = !DIDerivedType(tag: DW_TAG_member, scope: !6711, file: !2843, line: 104, baseType: !6739, size: 32, offset: 160)
!6739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6711, file: !2843, line: 104, size: 32, elements: !6740)
!6740 = !{!6741, !6742}
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6739, file: !2843, line: 104, baseType: !132, size: 32)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6739, file: !2843, line: 104, baseType: !132, size: 32)
!6743 = !DIDerivedType(tag: DW_TAG_member, scope: !6711, file: !2843, line: 105, baseType: !6744, size: 32, offset: 192)
!6744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6711, file: !2843, line: 105, size: 32, elements: !6745)
!6745 = !{!6746, !6747}
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6744, file: !2843, line: 105, baseType: !132, size: 32)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6744, file: !2843, line: 105, baseType: !132, size: 32)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6711, file: !2843, line: 106, baseType: !132, size: 32, offset: 224)
!6749 = !{!6750, !6751}
!6750 = !DILocalVariable(name: "reason", arg: 1, scope: !6701, file: !6702, line: 57, type: !32)
!6751 = !DILocalVariable(name: "esf", arg: 2, scope: !6701, file: !6702, line: 57, type: !6705)
!6752 = !DILocation(line: 0, scope: !6701)
!6753 = !DILocation(line: 63, column: 2, scope: !6701)
!6754 = !DILocation(line: 64, column: 1, scope: !6701)
!6755 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6702, file: !6702, line: 82, type: !6756, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !6771)
!6756 = !DISubroutineType(types: !6757)
!6757 = !{null, !6705, !6758}
!6758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6759, size: 32)
!6759 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !436, line: 37, baseType: !6760)
!6760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !6761)
!6761 = !{!6762, !6763, !6764, !6765, !6766, !6767, !6768, !6769, !6770}
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6760, file: !436, line: 26, baseType: !132, size: 32)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6760, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6760, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6760, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6760, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6760, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6760, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6760, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6760, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!6771 = !{!6772, !6773, !6774}
!6772 = !DILocalVariable(name: "esf", arg: 1, scope: !6755, file: !6702, line: 82, type: !6705)
!6773 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6755, file: !6702, line: 82, type: !6758)
!6774 = !DILocalVariable(name: "reason", scope: !6755, file: !6702, line: 88, type: !32)
!6775 = !DILocation(line: 0, scope: !6755)
!6776 = !DILocation(line: 88, column: 35, scope: !6755)
!6777 = !DILocation(line: 108, column: 2, scope: !6755)
!6778 = !DILocation(line: 131, column: 1, scope: !6755)
!6779 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6702, file: !6702, line: 133, type: !6780, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !6782)
!6780 = !DISubroutineType(types: !6781)
!6781 = !{null, !102}
!6782 = !{!6783, !6784, !6785}
!6783 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6779, file: !6702, line: 133, type: !102)
!6784 = !DILocalVariable(name: "ssf_contents", scope: !6779, file: !6702, line: 135, type: !857)
!6785 = !DILocalVariable(name: "oops_esf", scope: !6779, file: !6702, line: 136, type: !6707)
!6786 = !DILocation(line: 0, scope: !6779)
!6787 = !DILocation(line: 136, column: 2, scope: !6779)
!6788 = !DILocation(line: 136, column: 15, scope: !6779)
!6789 = !DILocation(line: 139, column: 22, scope: !6779)
!6790 = !DILocation(line: 139, column: 17, scope: !6779)
!6791 = !DILocation(line: 139, column: 20, scope: !6779)
!6792 = !DILocation(line: 141, column: 2, scope: !6779)
!6793 = !DILocation(line: 142, column: 2, scope: !6779)
!6794 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6795, file: !6795, line: 40, type: !5834, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6796)
!6795 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6796 = !{!6797}
!6797 = !DILocalVariable(name: "irq", arg: 1, scope: !6794, file: !6795, line: 40, type: !32)
!6798 = !DILocation(line: 0, scope: !6794)
!6799 = !DILocation(line: 42, column: 2, scope: !6794)
!6800 = !DILocation(line: 43, column: 1, scope: !6794)
!6801 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !507, file: !507, line: 1684, type: !6802, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6804)
!6802 = !DISubroutineType(types: !6803)
!6803 = !{null, !763}
!6804 = !{!6805}
!6805 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6801, file: !507, line: 1684, type: !763)
!6806 = !DILocation(line: 0, scope: !6801)
!6807 = !DILocation(line: 1686, column: 23, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6801, file: !507, line: 1686, column: 7)
!6809 = !DILocation(line: 1686, column: 7, scope: !6801)
!6810 = !DILocation(line: 1688, column: 5, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6808, file: !507, line: 1687, column: 3)
!6812 = !{i64 2151069580}
!6813 = !DILocation(line: 1689, column: 81, scope: !6811)
!6814 = !DILocation(line: 1689, column: 60, scope: !6811)
!6815 = !DILocation(line: 1689, column: 34, scope: !6811)
!6816 = !DILocation(line: 1689, column: 5, scope: !6811)
!6817 = !DILocation(line: 1689, column: 43, scope: !6811)
!6818 = !DILocation(line: 1690, column: 5, scope: !6811)
!6819 = !{i64 2151069694}
!6820 = !DILocation(line: 1691, column: 3, scope: !6811)
!6821 = !DILocation(line: 1692, column: 1, scope: !6801)
!6822 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6795, file: !6795, line: 45, type: !5834, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6823)
!6823 = !{!6824}
!6824 = !DILocalVariable(name: "irq", arg: 1, scope: !6822, file: !6795, line: 45, type: !32)
!6825 = !DILocation(line: 0, scope: !6822)
!6826 = !DILocation(line: 47, column: 2, scope: !6822)
!6827 = !DILocation(line: 48, column: 1, scope: !6822)
!6828 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !507, file: !507, line: 1722, type: !6802, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6829)
!6829 = !{!6830}
!6830 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6828, file: !507, line: 1722, type: !763)
!6831 = !DILocation(line: 0, scope: !6828)
!6832 = !DILocation(line: 1724, column: 23, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6828, file: !507, line: 1724, column: 7)
!6834 = !DILocation(line: 1724, column: 7, scope: !6828)
!6835 = !DILocation(line: 1726, column: 81, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6833, file: !507, line: 1725, column: 3)
!6837 = !DILocation(line: 1726, column: 60, scope: !6836)
!6838 = !DILocation(line: 1726, column: 34, scope: !6836)
!6839 = !DILocation(line: 1726, column: 5, scope: !6836)
!6840 = !DILocation(line: 1726, column: 43, scope: !6836)
!6841 = !DILocation(line: 271, column: 3, scope: !6842, inlinedAt: !6844)
!6842 = distinct !DISubprogram(name: "__DSB", scope: !6843, file: !6843, line: 269, type: !3256, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !473)
!6843 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6844 = distinct !DILocation(line: 1727, column: 5, scope: !6836)
!6845 = !{i64 3523963}
!6846 = !DILocation(line: 260, column: 3, scope: !6847, inlinedAt: !6848)
!6847 = distinct !DISubprogram(name: "__ISB", scope: !6843, file: !6843, line: 258, type: !3256, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !473)
!6848 = distinct !DILocation(line: 1728, column: 5, scope: !6836)
!6849 = !{i64 3523680}
!6850 = !DILocation(line: 1729, column: 3, scope: !6836)
!6851 = !DILocation(line: 1730, column: 1, scope: !6828)
!6852 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6795, file: !6795, line: 50, type: !6853, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6855)
!6853 = !DISubroutineType(types: !6854)
!6854 = !{!103, !32}
!6855 = !{!6856}
!6856 = !DILocalVariable(name: "irq", arg: 1, scope: !6852, file: !6795, line: 50, type: !32)
!6857 = !DILocation(line: 0, scope: !6852)
!6858 = !DILocation(line: 52, column: 20, scope: !6852)
!6859 = !DILocation(line: 52, column: 9, scope: !6852)
!6860 = !DILocation(line: 52, column: 41, scope: !6852)
!6861 = !DILocation(line: 52, column: 39, scope: !6852)
!6862 = !DILocation(line: 52, column: 2, scope: !6852)
!6863 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6795, file: !6795, line: 64, type: !6864, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6866)
!6864 = !DISubroutineType(types: !6865)
!6865 = !{null, !32, !32, !132}
!6866 = !{!6867, !6868, !6869}
!6867 = !DILocalVariable(name: "irq", arg: 1, scope: !6863, file: !6795, line: 64, type: !32)
!6868 = !DILocalVariable(name: "prio", arg: 2, scope: !6863, file: !6795, line: 64, type: !32)
!6869 = !DILocalVariable(name: "flags", arg: 3, scope: !6863, file: !6795, line: 64, type: !132)
!6870 = !DILocation(line: 0, scope: !6863)
!6871 = !DILocation(line: 83, column: 8, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6873, file: !6795, line: 82, column: 9)
!6873 = distinct !DILexicalBlock(scope: !6863, file: !6795, line: 76, column: 6)
!6874 = !DILocation(line: 95, column: 2, scope: !6863)
!6875 = !DILocation(line: 96, column: 1, scope: !6863)
!6876 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6877, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6879)
!6877 = !DISubroutineType(types: !6878)
!6878 = !{null, !763, !132}
!6879 = !{!6880, !6881}
!6880 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6876, file: !507, line: 1814, type: !763)
!6881 = !DILocalVariable(name: "priority", arg: 2, scope: !6876, file: !507, line: 1814, type: !132)
!6882 = !DILocation(line: 0, scope: !6876)
!6883 = !DILocation(line: 0, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6876, file: !507, line: 1816, column: 7)
!6885 = !DILocation(line: 1816, column: 7, scope: !6876)
!6886 = !DILocation(line: 1824, column: 1, scope: !6876)
!6887 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6795, file: !6795, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6888)
!6888 = !{!6889}
!6889 = !DILocalVariable(name: "unused", arg: 1, scope: !6887, file: !6795, line: 155, type: !13)
!6890 = !DILocation(line: 0, scope: !6887)
!6891 = !DILocation(line: 159, column: 2, scope: !6887)
!6892 = !DILocation(line: 160, column: 1, scope: !6887)
!6893 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6894, file: !6894, line: 87, type: !3256, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2780, retainedNodes: !473)
!6894 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6895 = !DILocation(line: 89, column: 2, scope: !6893)
!6896 = !DILocation(line: 90, column: 2, scope: !6893)
!6897 = !DILocation(line: 91, column: 1, scope: !6893)
!6898 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6894, file: !6894, line: 23, type: !3256, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!6899 = !DISubprogram(name: "z_arm_int_exit", scope: !6900, file: !6900, line: 153, type: !3256, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!6900 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6901 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6902, file: !6902, line: 256, type: !3256, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !473)
!6902 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6903 = !DILocation(line: 258, column: 2, scope: !6901)
!6904 = !DILocation(line: 260, column: 2, scope: !6901)
!6905 = !DILocation(line: 262, column: 2, scope: !6901)
!6906 = !DILocation(line: 263, column: 2, scope: !6901)
!6907 = !DILocation(line: 267, column: 2, scope: !6901)
!6908 = !DILocation(line: 268, column: 2, scope: !6901)
!6909 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6902, file: !6902, line: 53, type: !3256, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !473)
!6910 = !DILocation(line: 55, column: 12, scope: !6909)
!6911 = !DILocation(line: 271, column: 3, scope: !6912, inlinedAt: !6913)
!6912 = distinct !DISubprogram(name: "__DSB", scope: !6843, file: !6843, line: 269, type: !3256, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !473)
!6913 = distinct !DILocation(line: 56, column: 2, scope: !6909)
!6914 = !{i64 3522634}
!6915 = !DILocation(line: 260, column: 3, scope: !6916, inlinedAt: !6917)
!6916 = distinct !DISubprogram(name: "__ISB", scope: !6843, file: !6843, line: 258, type: !3256, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !473)
!6917 = distinct !DILocation(line: 57, column: 2, scope: !6909)
!6918 = !{i64 3522351}
!6919 = !DILocation(line: 58, column: 1, scope: !6909)
!6920 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6902, file: !6902, line: 96, type: !3256, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !473)
!6921 = !DILocation(line: 103, column: 13, scope: !6920)
!6922 = !DILocation(line: 975, column: 3, scope: !6923, inlinedAt: !6928)
!6923 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6843, file: !6843, line: 971, type: !6924, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !6926)
!6924 = !DISubroutineType(types: !6925)
!6925 = !{!132}
!6926 = !{!6927}
!6927 = !DILocalVariable(name: "result", scope: !6923, file: !6843, line: 973, type: !132)
!6928 = distinct !DILocation(line: 189, column: 16, scope: !6920)
!6929 = !{i64 3543464}
!6930 = !DILocation(line: 0, scope: !6923, inlinedAt: !6928)
!6931 = !DILocation(line: 189, column: 32, scope: !6920)
!6932 = !DILocalVariable(name: "control", arg: 1, scope: !6933, file: !6843, line: 1001, type: !132)
!6933 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6843, file: !6843, line: 1001, type: !6934, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !6936)
!6934 = !DISubroutineType(types: !6935)
!6935 = !{null, !132}
!6936 = !{!6932}
!6937 = !DILocation(line: 0, scope: !6933, inlinedAt: !6938)
!6938 = distinct !DILocation(line: 189, column: 2, scope: !6920)
!6939 = !DILocation(line: 1003, column: 3, scope: !6933, inlinedAt: !6938)
!6940 = !{i64 3544184}
!6941 = !DILocation(line: 260, column: 3, scope: !6916, inlinedAt: !6942)
!6942 = distinct !DILocation(line: 1004, column: 3, scope: !6933, inlinedAt: !6938)
!6943 = !DILocation(line: 191, column: 1, scope: !6920)
!6944 = distinct !DISubprogram(name: "arch_swap", scope: !6945, file: !6945, line: 33, type: !6853, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !6946)
!6945 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6946 = !{!6947}
!6947 = !DILocalVariable(name: "key", arg: 1, scope: !6944, file: !6945, line: 33, type: !32)
!6948 = !DILocation(line: 0, scope: !6944)
!6949 = !DILocation(line: 36, column: 2, scope: !6944)
!6950 = !DILocation(line: 36, column: 17, scope: !6944)
!6951 = !DILocation(line: 36, column: 25, scope: !6944)
!6952 = !DILocation(line: 37, column: 37, scope: !6944)
!6953 = !DILocation(line: 37, column: 17, scope: !6944)
!6954 = !DILocation(line: 37, column: 35, scope: !6944)
!6955 = !DILocation(line: 41, column: 12, scope: !6944)
!6956 = !DILocalVariable(name: "key", arg: 1, scope: !6957, file: !5823, line: 84, type: !32)
!6957 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5823, file: !5823, line: 84, type: !5834, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !6958)
!6958 = !{!6956}
!6959 = !DILocation(line: 0, scope: !6957, inlinedAt: !6960)
!6960 = distinct !DILocation(line: 44, column: 2, scope: !6944)
!6961 = !DILocation(line: 95, column: 2, scope: !6957, inlinedAt: !6960)
!6962 = !{i64 2221956}
!6963 = !DILocation(line: 53, column: 9, scope: !6944)
!6964 = !DILocation(line: 53, column: 24, scope: !6944)
!6965 = !DILocation(line: 53, column: 2, scope: !6944)
!6966 = distinct !DISubprogram(name: "arch_new_thread", scope: !6967, file: !6967, line: 56, type: !6968, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !7075)
!6967 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6968 = !DISubroutineType(types: !6969)
!6969 = !{null, !6970, !7070, !1083, !3574, !102, !102, !102}
!6970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6971, size: 32)
!6971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !6972)
!6972 = !{!6973, !7031, !7043, !7044, !7045, !7046, !7052, !7065}
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6971, file: !367, line: 247, baseType: !6974, size: 384)
!6974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !6975)
!6975 = !{!6976, !7000, !7007, !7008, !7009, !7018, !7019, !7020}
!6976 = !DIDerivedType(tag: DW_TAG_member, scope: !6974, file: !367, line: 60, baseType: !6977, size: 64)
!6977 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6974, file: !367, line: 60, size: 64, elements: !6978)
!6978 = !{!6979, !6994}
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6977, file: !367, line: 61, baseType: !6980, size: 64)
!6980 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !6981)
!6981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !6982)
!6982 = !{!6983, !6989}
!6983 = !DIDerivedType(tag: DW_TAG_member, scope: !6981, file: !321, line: 38, baseType: !6984, size: 32)
!6984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6981, file: !321, line: 38, size: 32, elements: !6985)
!6985 = !{!6986, !6988}
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6984, file: !321, line: 39, baseType: !6987, size: 32)
!6987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6981, size: 32)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6984, file: !321, line: 40, baseType: !6987, size: 32)
!6989 = !DIDerivedType(tag: DW_TAG_member, scope: !6981, file: !321, line: 42, baseType: !6990, size: 32, offset: 32)
!6990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6981, file: !321, line: 42, size: 32, elements: !6991)
!6991 = !{!6992, !6993}
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6990, file: !321, line: 43, baseType: !6987, size: 32)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6990, file: !321, line: 44, baseType: !6987, size: 32)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6977, file: !367, line: 62, baseType: !6995, size: 64)
!6995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !6996)
!6996 = !{!6997}
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6995, file: !392, line: 50, baseType: !6998, size: 64)
!6998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6999, size: 64, elements: !397)
!6999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6995, size: 32)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6974, file: !367, line: 68, baseType: !7001, size: 32, offset: 64)
!7001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7002, size: 32)
!7002 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !7003)
!7003 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !7004)
!7004 = !{!7005}
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7003, file: !316, line: 232, baseType: !7006, size: 64)
!7006 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !6981)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6974, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6974, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!7009 = !DIDerivedType(tag: DW_TAG_member, scope: !6974, file: !367, line: 90, baseType: !7010, size: 16, offset: 112)
!7010 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6974, file: !367, line: 90, size: 16, elements: !7011)
!7011 = !{!7012, !7017}
!7012 = !DIDerivedType(tag: DW_TAG_member, scope: !7010, file: !367, line: 91, baseType: !7013, size: 16)
!7013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7010, file: !367, line: 91, size: 16, elements: !7014)
!7014 = !{!7015, !7016}
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7013, file: !367, line: 96, baseType: !415, size: 8)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7013, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7010, file: !367, line: 100, baseType: !340, size: 16)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6974, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6974, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6974, file: !367, line: 131, baseType: !7021, size: 192, offset: 192)
!7021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !7022)
!7022 = !{!7023, !7024, !7030}
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7021, file: !316, line: 245, baseType: !6980, size: 64)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7021, file: !316, line: 246, baseType: !7025, size: 32, offset: 64)
!7025 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !7026)
!7026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7027, size: 32)
!7027 = !DISubroutineType(types: !7028)
!7028 = !{null, !7029}
!7029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7021, size: 32)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7021, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6971, file: !367, line: 250, baseType: !7032, size: 288, offset: 384)
!7032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !7033)
!7033 = !{!7034, !7035, !7036, !7037, !7038, !7039, !7040, !7041, !7042}
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7032, file: !436, line: 26, baseType: !132, size: 32)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7032, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7032, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7032, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7032, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7032, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7032, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7032, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7032, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6971, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6971, file: !367, line: 256, baseType: !7002, size: 64, offset: 704)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6971, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6971, file: !367, line: 300, baseType: !7047, size: 96, offset: 800)
!7047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !7048)
!7048 = !{!7049, !7050, !7051}
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7047, file: !367, line: 153, baseType: !22, size: 32)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7047, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7047, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6971, file: !367, line: 325, baseType: !7053, size: 32, offset: 896)
!7053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7054, size: 32)
!7054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !7055)
!7055 = !{!7056, !7062, !7063}
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7054, file: !312, line: 5074, baseType: !7057, size: 96)
!7057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !7058)
!7058 = !{!7059, !7060, !7061}
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7057, file: !462, line: 57, baseType: !465, size: 32)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7057, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7057, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7054, file: !312, line: 5075, baseType: !7002, size: 64, offset: 96)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7054, file: !312, line: 5076, baseType: !7064, offset: 160)
!7064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6971, file: !367, line: 343, baseType: !7066, size: 64, offset: 928)
!7066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !7067)
!7067 = !{!7068, !7069}
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7066, file: !436, line: 63, baseType: !132, size: 32)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7066, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!7070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7071, size: 32)
!7071 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3575, line: 44, baseType: !7072)
!7072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2187, line: 47, size: 8, elements: !7073)
!7073 = !{!7074}
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7072, file: !2187, line: 48, baseType: !108, size: 8)
!7075 = !{!7076, !7077, !7078, !7079, !7080, !7081, !7082, !7083}
!7076 = !DILocalVariable(name: "thread", arg: 1, scope: !6966, file: !6967, line: 56, type: !6970)
!7077 = !DILocalVariable(name: "stack", arg: 2, scope: !6966, file: !6967, line: 56, type: !7070)
!7078 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6966, file: !6967, line: 57, type: !1083)
!7079 = !DILocalVariable(name: "entry", arg: 4, scope: !6966, file: !6967, line: 57, type: !3574)
!7080 = !DILocalVariable(name: "p1", arg: 5, scope: !6966, file: !6967, line: 58, type: !102)
!7081 = !DILocalVariable(name: "p2", arg: 6, scope: !6966, file: !6967, line: 58, type: !102)
!7082 = !DILocalVariable(name: "p3", arg: 7, scope: !6966, file: !6967, line: 58, type: !102)
!7083 = !DILocalVariable(name: "iframe", scope: !6966, file: !6967, line: 60, type: !2841)
!7084 = !DILocation(line: 0, scope: !6966)
!7085 = !DILocation(line: 85, column: 11, scope: !6966)
!7086 = !DILocation(line: 93, column: 10, scope: !6966)
!7087 = !DILocation(line: 98, column: 13, scope: !6966)
!7088 = !DILocation(line: 100, column: 15, scope: !6966)
!7089 = !DILocation(line: 100, column: 10, scope: !6966)
!7090 = !DILocation(line: 100, column: 13, scope: !6966)
!7091 = !DILocation(line: 101, column: 15, scope: !6966)
!7092 = !DILocation(line: 101, column: 10, scope: !6966)
!7093 = !DILocation(line: 101, column: 13, scope: !6966)
!7094 = !DILocation(line: 102, column: 15, scope: !6966)
!7095 = !DILocation(line: 102, column: 10, scope: !6966)
!7096 = !DILocation(line: 102, column: 13, scope: !6966)
!7097 = !DILocation(line: 103, column: 15, scope: !6966)
!7098 = !DILocation(line: 103, column: 10, scope: !6966)
!7099 = !DILocation(line: 103, column: 13, scope: !6966)
!7100 = !DILocation(line: 106, column: 10, scope: !6966)
!7101 = !DILocation(line: 106, column: 15, scope: !6966)
!7102 = !DILocation(line: 122, column: 29, scope: !6966)
!7103 = !DILocation(line: 122, column: 23, scope: !6966)
!7104 = !DILocation(line: 122, column: 27, scope: !6966)
!7105 = !DILocation(line: 123, column: 15, scope: !6966)
!7106 = !DILocation(line: 123, column: 23, scope: !6966)
!7107 = !DILocation(line: 143, column: 1, scope: !6966)
!7108 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6967, file: !6967, line: 385, type: !7109, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !7112)
!7109 = !DISubroutineType(types: !7110)
!7110 = !{!132, !7111, !7111}
!7111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!7112 = !{!7113, !7114, !7115, !7118}
!7113 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7108, file: !6967, line: 385, type: !7111)
!7114 = !DILocalVariable(name: "psp", arg: 2, scope: !7108, file: !6967, line: 385, type: !7111)
!7115 = !DILocalVariable(name: "thread", scope: !7108, file: !6967, line: 388, type: !7116)
!7116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7117, size: 32)
!7117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6971)
!7118 = !DILocalVariable(name: "guard_len", scope: !7108, file: !6967, line: 405, type: !132)
!7119 = !DILocation(line: 0, scope: !7108)
!7120 = !DILocation(line: 388, column: 34, scope: !7108)
!7121 = !DILocation(line: 390, column: 13, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7108, file: !6967, line: 390, column: 6)
!7123 = !DILocation(line: 390, column: 6, scope: !7108)
!7124 = !DILocation(line: 438, column: 6, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7108, file: !6967, line: 438, column: 6)
!7126 = !DILocation(line: 438, column: 6, scope: !7108)
!7127 = !DILocation(line: 442, column: 3, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7125, file: !6967, line: 440, column: 22)
!7129 = !DILocation(line: 455, column: 1, scope: !7108)
!7130 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6967, file: !6967, line: 530, type: !7131, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !7133)
!7131 = !DISubroutineType(types: !7132)
!7132 = !{null, !6970, !1083, !3574}
!7133 = !{!7134, !7135, !7136}
!7134 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7130, file: !6967, line: 530, type: !6970)
!7135 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7130, file: !6967, line: 530, type: !1083)
!7136 = !DILocalVariable(name: "_main", arg: 3, scope: !7130, file: !6967, line: 531, type: !3574)
!7137 = !DILocation(line: 0, scope: !7130)
!7138 = !DILocation(line: 535, column: 11, scope: !7130)
!7139 = !DILocation(line: 560, column: 2, scope: !7130)
!7140 = !DILocation(line: 576, column: 2, scope: !7130)
!7141 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7142 = !DILocation(line: 603, column: 2, scope: !7130)
!7143 = distinct !DISubprogram(name: "z_arm_fault", scope: !7144, file: !7144, line: 1036, type: !7145, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7160)
!7144 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7145 = !DISubroutineType(types: !7146)
!7146 = !{null, !132, !132, !132, !7147}
!7147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7148, size: 32)
!7148 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !436, line: 37, baseType: !7149)
!7149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !7150)
!7150 = !{!7151, !7152, !7153, !7154, !7155, !7156, !7157, !7158, !7159}
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7149, file: !436, line: 26, baseType: !132, size: 32)
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7149, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7149, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7149, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7149, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7149, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7149, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7149, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7149, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!7160 = !{!7161, !7162, !7163, !7164, !7165, !7166, !7167, !7168, !7169, !7170}
!7161 = !DILocalVariable(name: "msp", arg: 1, scope: !7143, file: !7144, line: 1036, type: !132)
!7162 = !DILocalVariable(name: "psp", arg: 2, scope: !7143, file: !7144, line: 1036, type: !132)
!7163 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7143, file: !7144, line: 1036, type: !132)
!7164 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7143, file: !7144, line: 1037, type: !7147)
!7165 = !DILocalVariable(name: "reason", scope: !7143, file: !7144, line: 1039, type: !132)
!7166 = !DILocalVariable(name: "fault", scope: !7143, file: !7144, line: 1040, type: !103)
!7167 = !DILocalVariable(name: "recoverable", scope: !7143, file: !7144, line: 1041, type: !166)
!7168 = !DILocalVariable(name: "nested_exc", scope: !7143, file: !7144, line: 1041, type: !166)
!7169 = !DILocalVariable(name: "esf", scope: !7143, file: !7144, line: 1042, type: !2909)
!7170 = !DILocalVariable(name: "esf_copy", scope: !7143, file: !7144, line: 1047, type: !2910)
!7171 = !DILocation(line: 0, scope: !7143)
!7172 = !DILocation(line: 1040, column: 19, scope: !7143)
!7173 = !DILocation(line: 1040, column: 24, scope: !7143)
!7174 = !DILocation(line: 1041, column: 2, scope: !7143)
!7175 = !DILocation(line: 1047, column: 2, scope: !7143)
!7176 = !DILocation(line: 1047, column: 15, scope: !7143)
!7177 = !DILocalVariable(name: "key", arg: 1, scope: !7178, file: !5823, line: 84, type: !32)
!7178 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5823, file: !5823, line: 84, type: !5834, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7179)
!7179 = !{!7177}
!7180 = !DILocation(line: 0, scope: !7178, inlinedAt: !7181)
!7181 = distinct !DILocation(line: 1050, column: 2, scope: !7143)
!7182 = !DILocation(line: 95, column: 2, scope: !7178, inlinedAt: !7181)
!7183 = !{i64 2255200}
!7184 = !DILocation(line: 1055, column: 9, scope: !7143)
!7185 = !DILocation(line: 1063, column: 11, scope: !7143)
!7186 = !DILocation(line: 1064, column: 6, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7143, file: !7144, line: 1064, column: 6)
!7188 = !{i8 0, i8 2}
!7189 = !DILocation(line: 1064, column: 6, scope: !7143)
!7190 = !DILocation(line: 1070, column: 20, scope: !7143)
!7191 = !DILocation(line: 1070, column: 2, scope: !7143)
!7192 = !DILocation(line: 1089, column: 6, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7143, file: !7144, line: 1089, column: 6)
!7194 = !DILocation(line: 0, scope: !7193)
!7195 = !DILocation(line: 1089, column: 6, scope: !7143)
!7196 = !DILocation(line: 1090, column: 28, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7198, file: !7144, line: 1090, column: 7)
!7198 = distinct !DILexicalBlock(scope: !7193, file: !7144, line: 1089, column: 18)
!7199 = !DILocation(line: 1090, column: 44, scope: !7197)
!7200 = !DILocation(line: 1090, column: 7, scope: !7198)
!7201 = !DILocation(line: 1091, column: 24, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7197, file: !7144, line: 1090, column: 50)
!7203 = !DILocation(line: 1092, column: 3, scope: !7202)
!7204 = !DILocation(line: 1094, column: 23, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7193, file: !7144, line: 1093, column: 9)
!7206 = !DILocation(line: 1097, column: 2, scope: !7143)
!7207 = !DILocation(line: 1098, column: 1, scope: !7143)
!7208 = distinct !DISubprogram(name: "get_esf", scope: !7144, file: !7144, line: 894, type: !7209, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7212)
!7209 = !DISubroutineType(types: !7210)
!7210 = !{!2909, !132, !132, !132, !7211}
!7211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!7212 = !{!7213, !7214, !7215, !7216, !7217, !7218}
!7213 = !DILocalVariable(name: "msp", arg: 1, scope: !7208, file: !7144, line: 894, type: !132)
!7214 = !DILocalVariable(name: "psp", arg: 2, scope: !7208, file: !7144, line: 894, type: !132)
!7215 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7208, file: !7144, line: 894, type: !132)
!7216 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7208, file: !7144, line: 895, type: !7211)
!7217 = !DILocalVariable(name: "alternative_state_exc", scope: !7208, file: !7144, line: 897, type: !166)
!7218 = !DILocalVariable(name: "ptr_esf", scope: !7208, file: !7144, line: 898, type: !2909)
!7219 = !DILocation(line: 0, scope: !7208)
!7220 = !DILocation(line: 900, column: 14, scope: !7208)
!7221 = !DILocation(line: 902, column: 49, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7208, file: !7144, line: 902, column: 6)
!7223 = !DILocation(line: 902, column: 6, scope: !7208)
!7224 = !DILocation(line: 983, column: 18, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7208, file: !7144, line: 983, column: 6)
!7226 = !DILocation(line: 991, column: 7, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !7144, line: 990, column: 30)
!7228 = distinct !DILexicalBlock(scope: !7208, file: !7144, line: 990, column: 6)
!7229 = !DILocation(line: 998, column: 16, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7231, file: !7144, line: 995, column: 10)
!7231 = distinct !DILexicalBlock(scope: !7227, file: !7144, line: 991, column: 7)
!7232 = !DILocation(line: 1002, column: 2, scope: !7208)
!7233 = !DILocation(line: 1003, column: 1, scope: !7208)
!7234 = distinct !DISubprogram(name: "fault_handle", scope: !7144, file: !7144, line: 786, type: !7235, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7237)
!7235 = !DISubroutineType(types: !7236)
!7236 = !{!132, !2909, !103, !7211}
!7237 = !{!7238, !7239, !7240, !7241}
!7238 = !DILocalVariable(name: "esf", arg: 1, scope: !7234, file: !7144, line: 786, type: !2909)
!7239 = !DILocalVariable(name: "fault", arg: 2, scope: !7234, file: !7144, line: 786, type: !103)
!7240 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7234, file: !7144, line: 786, type: !7211)
!7241 = !DILocalVariable(name: "reason", scope: !7234, file: !7144, line: 788, type: !132)
!7242 = !DILocation(line: 0, scope: !7234)
!7243 = !DILocation(line: 790, column: 15, scope: !7234)
!7244 = !DILocation(line: 792, column: 2, scope: !7234)
!7245 = !DILocation(line: 794, column: 12, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7234, file: !7144, line: 792, column: 17)
!7247 = !DILocation(line: 795, column: 3, scope: !7246)
!7248 = !DILocation(line: 800, column: 12, scope: !7246)
!7249 = !DILocation(line: 801, column: 3, scope: !7246)
!7250 = !DILocation(line: 803, column: 12, scope: !7246)
!7251 = !DILocation(line: 804, column: 3, scope: !7246)
!7252 = !DILocation(line: 806, column: 12, scope: !7246)
!7253 = !DILocation(line: 807, column: 3, scope: !7246)
!7254 = !DILocation(line: 814, column: 3, scope: !7246)
!7255 = !DILocation(line: 815, column: 3, scope: !7246)
!7256 = !DILocation(line: 829, column: 2, scope: !7234)
!7257 = distinct !DISubprogram(name: "hard_fault", scope: !7144, file: !7144, line: 709, type: !7258, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7260)
!7258 = !DISubroutineType(types: !7259)
!7259 = !{!132, !2909, !7211}
!7260 = !{!7261, !7262, !7263}
!7261 = !DILocalVariable(name: "esf", arg: 1, scope: !7257, file: !7144, line: 709, type: !2909)
!7262 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7257, file: !7144, line: 709, type: !7211)
!7263 = !DILocalVariable(name: "reason", scope: !7257, file: !7144, line: 711, type: !132)
!7264 = !DILocation(line: 0, scope: !7257)
!7265 = !DILocation(line: 732, column: 15, scope: !7257)
!7266 = !DILocation(line: 734, column: 12, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7257, file: !7144, line: 734, column: 6)
!7268 = !DILocation(line: 734, column: 17, scope: !7267)
!7269 = !DILocation(line: 734, column: 41, scope: !7267)
!7270 = !DILocation(line: 734, column: 6, scope: !7257)
!7271 = !DILocation(line: 736, column: 19, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7267, file: !7144, line: 736, column: 13)
!7273 = !DILocation(line: 736, column: 49, scope: !7272)
!7274 = !DILocation(line: 736, column: 13, scope: !7267)
!7275 = !DILocation(line: 738, column: 19, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7272, file: !7144, line: 738, column: 13)
!7277 = !DILocation(line: 738, column: 24, scope: !7276)
!7278 = !DILocation(line: 738, column: 47, scope: !7276)
!7279 = !DILocation(line: 738, column: 13, scope: !7272)
!7280 = !DILocation(line: 740, column: 7, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !7144, line: 740, column: 7)
!7282 = distinct !DILexicalBlock(scope: !7276, file: !7144, line: 738, column: 53)
!7283 = !DILocation(line: 740, column: 7, scope: !7282)
!7284 = !DILocation(line: 742, column: 24, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7281, file: !7144, line: 740, column: 38)
!7286 = !DILocation(line: 743, column: 3, scope: !7285)
!7287 = !DILocation(line: 743, column: 20, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7281, file: !7144, line: 743, column: 14)
!7289 = !DILocation(line: 743, column: 25, scope: !7288)
!7290 = !DILocation(line: 743, column: 52, scope: !7288)
!7291 = !DILocation(line: 743, column: 14, scope: !7281)
!7292 = !DILocation(line: 744, column: 13, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7288, file: !7144, line: 743, column: 58)
!7294 = !DILocation(line: 745, column: 3, scope: !7293)
!7295 = !DILocation(line: 745, column: 20, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7288, file: !7144, line: 745, column: 14)
!7297 = !DILocation(line: 745, column: 25, scope: !7296)
!7298 = !DILocation(line: 745, column: 52, scope: !7296)
!7299 = !DILocation(line: 745, column: 14, scope: !7288)
!7300 = !DILocation(line: 746, column: 13, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7296, file: !7144, line: 745, column: 58)
!7302 = !DILocation(line: 747, column: 3, scope: !7301)
!7303 = !DILocation(line: 747, column: 20, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7296, file: !7144, line: 747, column: 14)
!7305 = !DILocation(line: 747, column: 52, scope: !7304)
!7306 = !DILocation(line: 747, column: 14, scope: !7296)
!7307 = !DILocation(line: 748, column: 13, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7304, file: !7144, line: 747, column: 58)
!7309 = !DILocation(line: 753, column: 3, scope: !7308)
!7310 = !DILocation(line: 766, column: 2, scope: !7257)
!7311 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7144, file: !7144, line: 229, type: !7235, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7312)
!7312 = !{!7313, !7314, !7315, !7316, !7317, !7318, !7321}
!7313 = !DILocalVariable(name: "esf", arg: 1, scope: !7311, file: !7144, line: 229, type: !2909)
!7314 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7311, file: !7144, line: 229, type: !103)
!7315 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7311, file: !7144, line: 230, type: !7211)
!7316 = !DILocalVariable(name: "reason", scope: !7311, file: !7144, line: 232, type: !132)
!7317 = !DILocalVariable(name: "mmfar", scope: !7311, file: !7144, line: 233, type: !132)
!7318 = !DILocalVariable(name: "temp", scope: !7319, file: !7144, line: 254, type: !132)
!7319 = distinct !DILexicalBlock(scope: !7320, file: !7144, line: 244, column: 48)
!7320 = distinct !DILexicalBlock(scope: !7311, file: !7144, line: 244, column: 6)
!7321 = !DILocalVariable(name: "min_stack_ptr", scope: !7322, file: !7144, line: 309, type: !132)
!7322 = distinct !DILexicalBlock(scope: !7323, file: !7144, line: 308, column: 43)
!7323 = distinct !DILexicalBlock(scope: !7324, file: !7144, line: 308, column: 7)
!7324 = distinct !DILexicalBlock(scope: !7325, file: !7144, line: 289, column: 40)
!7325 = distinct !DILexicalBlock(scope: !7311, file: !7144, line: 288, column: 6)
!7326 = !DILocation(line: 0, scope: !7311)
!7327 = !DILocation(line: 237, column: 12, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7311, file: !7144, line: 237, column: 6)
!7329 = !DILocation(line: 241, column: 12, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7311, file: !7144, line: 241, column: 6)
!7331 = !DILocation(line: 244, column: 12, scope: !7320)
!7332 = !DILocation(line: 244, column: 17, scope: !7320)
!7333 = !DILocation(line: 244, column: 42, scope: !7320)
!7334 = !DILocation(line: 244, column: 6, scope: !7311)
!7335 = !DILocation(line: 254, column: 24, scope: !7319)
!7336 = !DILocation(line: 0, scope: !7319)
!7337 = !DILocation(line: 256, column: 13, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7319, file: !7144, line: 256, column: 7)
!7339 = !DILocation(line: 256, column: 18, scope: !7338)
!7340 = !DILocation(line: 256, column: 44, scope: !7338)
!7341 = !DILocation(line: 256, column: 7, scope: !7319)
!7342 = !DILocation(line: 259, column: 24, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7344, file: !7144, line: 259, column: 8)
!7344 = distinct !DILexicalBlock(scope: !7338, file: !7144, line: 256, column: 50)
!7345 = !DILocation(line: 259, column: 8, scope: !7344)
!7346 = !DILocation(line: 261, column: 15, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7343, file: !7144, line: 259, column: 30)
!7348 = !DILocation(line: 262, column: 4, scope: !7347)
!7349 = !DILocation(line: 265, column: 12, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7311, file: !7144, line: 265, column: 6)
!7351 = !DILocation(line: 269, column: 12, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7311, file: !7144, line: 269, column: 6)
!7353 = !DILocation(line: 288, column: 12, scope: !7325)
!7354 = !DILocation(line: 288, column: 17, scope: !7325)
!7355 = !DILocation(line: 288, column: 41, scope: !7325)
!7356 = !DILocation(line: 289, column: 9, scope: !7325)
!7357 = !DILocation(line: 289, column: 14, scope: !7325)
!7358 = !DILocation(line: 288, column: 6, scope: !7311)
!7359 = !DILocation(line: 308, column: 12, scope: !7323)
!7360 = !DILocation(line: 308, column: 17, scope: !7323)
!7361 = !DILocation(line: 308, column: 7, scope: !7324)
!7362 = !DILocation(line: 310, column: 6, scope: !7322)
!7363 = !DILocation(line: 309, column: 29, scope: !7322)
!7364 = !DILocation(line: 0, scope: !7322)
!7365 = !DILocation(line: 312, column: 8, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7322, file: !7144, line: 312, column: 8)
!7367 = !DILocation(line: 312, column: 8, scope: !7322)
!7368 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7369, file: !6843, line: 1099, type: !132)
!7369 = distinct !DISubprogram(name: "__set_PSP", scope: !6843, file: !6843, line: 1099, type: !6934, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7370)
!7370 = !{!7368}
!7371 = !DILocation(line: 0, scope: !7369, inlinedAt: !7372)
!7372 = distinct !DILocation(line: 338, column: 5, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7366, file: !7144, line: 312, column: 23)
!7374 = !DILocation(line: 1101, column: 3, scope: !7369, inlinedAt: !7372)
!7375 = !{i64 3573603}
!7376 = !DILocation(line: 341, column: 4, scope: !7373)
!7377 = !DILocation(line: 360, column: 12, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7311, file: !7144, line: 360, column: 6)
!7379 = !DILocation(line: 360, column: 17, scope: !7378)
!7380 = !DILocation(line: 360, column: 41, scope: !7378)
!7381 = !DILocation(line: 360, column: 6, scope: !7311)
!7382 = !DILocation(line: 361, column: 14, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7378, file: !7144, line: 360, column: 47)
!7384 = !DILocation(line: 362, column: 2, scope: !7383)
!7385 = !DILocation(line: 366, column: 12, scope: !7311)
!7386 = !DILocation(line: 369, column: 15, scope: !7311)
!7387 = !DILocation(line: 371, column: 2, scope: !7311)
!7388 = distinct !DISubprogram(name: "bus_fault", scope: !7144, file: !7144, line: 383, type: !7389, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7391)
!7389 = !DISubroutineType(types: !7390)
!7390 = !{!103, !2909, !103, !7211}
!7391 = !{!7392, !7393, !7394, !7395, !7396}
!7392 = !DILocalVariable(name: "esf", arg: 1, scope: !7388, file: !7144, line: 383, type: !2909)
!7393 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7388, file: !7144, line: 383, type: !103)
!7394 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7388, file: !7144, line: 383, type: !7211)
!7395 = !DILocalVariable(name: "reason", scope: !7388, file: !7144, line: 385, type: !132)
!7396 = !DILocalVariable(name: "bfar", scope: !7397, file: !7144, line: 405, type: !132)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !7144, line: 395, column: 42)
!7398 = distinct !DILexicalBlock(scope: !7388, file: !7144, line: 395, column: 6)
!7399 = !DILocation(line: 0, scope: !7388)
!7400 = !DILocation(line: 389, column: 11, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7388, file: !7144, line: 389, column: 6)
!7402 = !DILocation(line: 392, column: 11, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7388, file: !7144, line: 392, column: 6)
!7404 = !DILocation(line: 395, column: 11, scope: !7398)
!7405 = !DILocation(line: 395, column: 16, scope: !7398)
!7406 = !DILocation(line: 395, column: 6, scope: !7388)
!7407 = !DILocation(line: 405, column: 3, scope: !7397)
!7408 = !DILocation(line: 0, scope: !7397)
!7409 = !DILocation(line: 407, column: 13, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7397, file: !7144, line: 407, column: 7)
!7411 = !DILocation(line: 407, column: 18, scope: !7410)
!7412 = !DILocation(line: 407, column: 44, scope: !7410)
!7413 = !DILocation(line: 407, column: 7, scope: !7397)
!7414 = !DILocation(line: 411, column: 15, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7416, file: !7144, line: 409, column: 30)
!7416 = distinct !DILexicalBlock(scope: !7417, file: !7144, line: 409, column: 8)
!7417 = distinct !DILexicalBlock(scope: !7410, file: !7144, line: 407, column: 50)
!7418 = !DILocation(line: 412, column: 4, scope: !7415)
!7419 = !DILocation(line: 415, column: 11, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7388, file: !7144, line: 415, column: 6)
!7421 = !DILocation(line: 418, column: 12, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7388, file: !7144, line: 418, column: 6)
!7423 = !DILocation(line: 418, column: 17, scope: !7422)
!7424 = !DILocation(line: 418, column: 41, scope: !7422)
!7425 = !DILocation(line: 418, column: 6, scope: !7388)
!7426 = !DILocation(line: 423, column: 18, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7422, file: !7144, line: 423, column: 13)
!7428 = !DILocation(line: 524, column: 12, scope: !7388)
!7429 = !DILocation(line: 526, column: 15, scope: !7388)
!7430 = !DILocation(line: 528, column: 2, scope: !7388)
!7431 = distinct !DISubprogram(name: "usage_fault", scope: !7144, file: !7144, line: 539, type: !7432, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7436)
!7432 = !DISubroutineType(types: !7433)
!7433 = !{!132, !7434}
!7434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7435, size: 32)
!7435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2910)
!7436 = !{!7437, !7438}
!7437 = !DILocalVariable(name: "esf", arg: 1, scope: !7431, file: !7144, line: 539, type: !7434)
!7438 = !DILocalVariable(name: "reason", scope: !7431, file: !7144, line: 541, type: !132)
!7439 = !DILocation(line: 0, scope: !7431)
!7440 = !DILocation(line: 546, column: 12, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7431, file: !7144, line: 546, column: 6)
!7442 = !DILocation(line: 549, column: 12, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7431, file: !7144, line: 549, column: 6)
!7444 = !DILocation(line: 567, column: 12, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7431, file: !7144, line: 567, column: 6)
!7446 = !DILocation(line: 570, column: 12, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7431, file: !7144, line: 570, column: 6)
!7448 = !DILocation(line: 573, column: 12, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7431, file: !7144, line: 573, column: 6)
!7450 = !DILocation(line: 576, column: 12, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7431, file: !7144, line: 576, column: 6)
!7452 = !DILocation(line: 581, column: 12, scope: !7431)
!7453 = !DILocation(line: 583, column: 2, scope: !7431)
!7454 = distinct !DISubprogram(name: "debug_monitor", scope: !7144, file: !7144, line: 632, type: !7455, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7457)
!7455 = !DISubroutineType(types: !7456)
!7456 = !{null, !2909, !7211}
!7457 = !{!7458, !7459}
!7458 = !DILocalVariable(name: "esf", arg: 1, scope: !7454, file: !7144, line: 632, type: !2909)
!7459 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7454, file: !7144, line: 632, type: !7211)
!7460 = !DILocation(line: 0, scope: !7454)
!7461 = !DILocation(line: 634, column: 15, scope: !7454)
!7462 = !DILocation(line: 652, column: 1, scope: !7454)
!7463 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7144, file: !7144, line: 658, type: !7464, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7466)
!7464 = !DISubroutineType(types: !7465)
!7465 = !{!166, !2909}
!7466 = !{!7467, !7468, !7469}
!7467 = !DILocalVariable(name: "esf", arg: 1, scope: !7463, file: !7144, line: 658, type: !2909)
!7468 = !DILocalVariable(name: "ret_addr", scope: !7463, file: !7144, line: 660, type: !2601)
!7469 = !DILocalVariable(name: "fault_insn", scope: !7463, file: !7144, line: 686, type: !340)
!7470 = !DILocation(line: 0, scope: !7463)
!7471 = !DILocation(line: 660, column: 46, scope: !7463)
!7472 = !DILocation(line: 660, column: 23, scope: !7463)
!7473 = !DILocation(line: 682, column: 11, scope: !7463)
!7474 = !DILocation(line: 271, column: 3, scope: !7475, inlinedAt: !7476)
!7475 = distinct !DISubprogram(name: "__DSB", scope: !6843, file: !6843, line: 269, type: !3256, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !473)
!7476 = distinct !DILocation(line: 683, column: 2, scope: !7463)
!7477 = !{i64 3549738}
!7478 = !DILocation(line: 260, column: 3, scope: !7479, inlinedAt: !7480)
!7479 = distinct !DISubprogram(name: "__ISB", scope: !6843, file: !6843, line: 258, type: !3256, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !473)
!7480 = distinct !DILocation(line: 684, column: 2, scope: !7463)
!7481 = !{i64 3549455}
!7482 = !DILocation(line: 686, column: 35, scope: !7463)
!7483 = !DILocation(line: 686, column: 24, scope: !7463)
!7484 = !DILocation(line: 688, column: 11, scope: !7463)
!7485 = !DILocation(line: 271, column: 3, scope: !7475, inlinedAt: !7486)
!7486 = distinct !DILocation(line: 689, column: 2, scope: !7463)
!7487 = !DILocation(line: 260, column: 3, scope: !7479, inlinedAt: !7488)
!7488 = distinct !DILocation(line: 690, column: 2, scope: !7463)
!7489 = !DILocation(line: 693, column: 45, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7463, file: !7144, line: 693, column: 6)
!7491 = !DILocation(line: 699, column: 1, scope: !7463)
!7492 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7144, file: !7144, line: 1107, type: !3256, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !473)
!7493 = !DILocation(line: 1111, column: 11, scope: !7492)
!7494 = !DILocation(line: 1136, column: 1, scope: !7492)
!7495 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7496, file: !7496, line: 26, type: !3256, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2952, retainedNodes: !7497)
!7496 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7497 = !{!7498}
!7498 = !DILocalVariable(name: "irq", scope: !7495, file: !7496, line: 28, type: !103)
!7499 = !DILocation(line: 0, scope: !7495)
!7500 = !DILocation(line: 30, column: 2, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7495, file: !7496, line: 30, column: 2)
!7502 = !DILocation(line: 31, column: 3, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7504, file: !7496, line: 30, column: 39)
!7504 = distinct !DILexicalBlock(scope: !7501, file: !7496, line: 30, column: 2)
!7505 = !DILocation(line: 30, column: 35, scope: !7504)
!7506 = !DILocation(line: 30, column: 13, scope: !7504)
!7507 = distinct !{!7507, !7500, !7508}
!7508 = !DILocation(line: 32, column: 2, scope: !7501)
!7509 = !DILocation(line: 33, column: 1, scope: !7495)
!7510 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6877, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2952, retainedNodes: !7511)
!7511 = !{!7512, !7513}
!7512 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7510, file: !507, line: 1814, type: !763)
!7513 = !DILocalVariable(name: "priority", arg: 2, scope: !7510, file: !507, line: 1814, type: !132)
!7514 = !DILocation(line: 0, scope: !7510)
!7515 = !DILocation(line: 1816, column: 7, scope: !7510)
!7516 = !DILocation(line: 0, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7510, file: !507, line: 1816, column: 7)
!7518 = !DILocation(line: 1824, column: 1, scope: !7510)
!7519 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7520, file: !7520, line: 27, type: !7521, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7624)
!7520 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7521 = !DISubroutineType(types: !7522)
!7522 = !{null, !7523}
!7523 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !7524)
!7524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7525, size: 32)
!7525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !7526)
!7526 = !{!7527, !7585, !7597, !7598, !7599, !7600, !7606, !7619}
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7525, file: !367, line: 247, baseType: !7528, size: 384)
!7528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !7529)
!7529 = !{!7530, !7554, !7561, !7562, !7563, !7572, !7573, !7574}
!7530 = !DIDerivedType(tag: DW_TAG_member, scope: !7528, file: !367, line: 60, baseType: !7531, size: 64)
!7531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7528, file: !367, line: 60, size: 64, elements: !7532)
!7532 = !{!7533, !7548}
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7531, file: !367, line: 61, baseType: !7534, size: 64)
!7534 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !7535)
!7535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !7536)
!7536 = !{!7537, !7543}
!7537 = !DIDerivedType(tag: DW_TAG_member, scope: !7535, file: !321, line: 38, baseType: !7538, size: 32)
!7538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7535, file: !321, line: 38, size: 32, elements: !7539)
!7539 = !{!7540, !7542}
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7538, file: !321, line: 39, baseType: !7541, size: 32)
!7541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7535, size: 32)
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7538, file: !321, line: 40, baseType: !7541, size: 32)
!7543 = !DIDerivedType(tag: DW_TAG_member, scope: !7535, file: !321, line: 42, baseType: !7544, size: 32, offset: 32)
!7544 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7535, file: !321, line: 42, size: 32, elements: !7545)
!7545 = !{!7546, !7547}
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7544, file: !321, line: 43, baseType: !7541, size: 32)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7544, file: !321, line: 44, baseType: !7541, size: 32)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7531, file: !367, line: 62, baseType: !7549, size: 64)
!7549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !7550)
!7550 = !{!7551}
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7549, file: !392, line: 50, baseType: !7552, size: 64)
!7552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7553, size: 64, elements: !397)
!7553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7549, size: 32)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7528, file: !367, line: 68, baseType: !7555, size: 32, offset: 64)
!7555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7556, size: 32)
!7556 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !7557)
!7557 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !7558)
!7558 = !{!7559}
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7557, file: !316, line: 232, baseType: !7560, size: 64)
!7560 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !7535)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7528, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7528, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!7563 = !DIDerivedType(tag: DW_TAG_member, scope: !7528, file: !367, line: 90, baseType: !7564, size: 16, offset: 112)
!7564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7528, file: !367, line: 90, size: 16, elements: !7565)
!7565 = !{!7566, !7571}
!7566 = !DIDerivedType(tag: DW_TAG_member, scope: !7564, file: !367, line: 91, baseType: !7567, size: 16)
!7567 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7564, file: !367, line: 91, size: 16, elements: !7568)
!7568 = !{!7569, !7570}
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7567, file: !367, line: 96, baseType: !415, size: 8)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7567, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7564, file: !367, line: 100, baseType: !340, size: 16)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7528, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7528, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7528, file: !367, line: 131, baseType: !7575, size: 192, offset: 192)
!7575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !7576)
!7576 = !{!7577, !7578, !7584}
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7575, file: !316, line: 245, baseType: !7534, size: 64)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7575, file: !316, line: 246, baseType: !7579, size: 32, offset: 64)
!7579 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !7580)
!7580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7581, size: 32)
!7581 = !DISubroutineType(types: !7582)
!7582 = !{null, !7583}
!7583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7575, size: 32)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7575, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7525, file: !367, line: 250, baseType: !7586, size: 288, offset: 384)
!7586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !7587)
!7587 = !{!7588, !7589, !7590, !7591, !7592, !7593, !7594, !7595, !7596}
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7586, file: !436, line: 26, baseType: !132, size: 32)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7586, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7586, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7586, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7586, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7586, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7586, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7586, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7586, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7525, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7525, file: !367, line: 256, baseType: !7556, size: 64, offset: 704)
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7525, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7525, file: !367, line: 300, baseType: !7601, size: 96, offset: 800)
!7601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !7602)
!7602 = !{!7603, !7604, !7605}
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7601, file: !367, line: 153, baseType: !22, size: 32)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7601, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7601, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7525, file: !367, line: 325, baseType: !7607, size: 32, offset: 896)
!7607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7608, size: 32)
!7608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !7609)
!7609 = !{!7610, !7616, !7617}
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7608, file: !312, line: 5074, baseType: !7611, size: 96)
!7611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !7612)
!7612 = !{!7613, !7614, !7615}
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7611, file: !462, line: 57, baseType: !465, size: 32)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7611, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7611, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7608, file: !312, line: 5075, baseType: !7556, size: 64, offset: 96)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7608, file: !312, line: 5076, baseType: !7618, offset: 160)
!7618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7525, file: !367, line: 343, baseType: !7620, size: 64, offset: 928)
!7620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !7621)
!7621 = !{!7622, !7623}
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7620, file: !436, line: 63, baseType: !132, size: 32)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7620, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!7624 = !{!7625}
!7625 = !DILocalVariable(name: "thread", arg: 1, scope: !7519, file: !7520, line: 27, type: !7523)
!7626 = !DILocation(line: 0, scope: !7519)
!7627 = !DILocation(line: 29, column: 6, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7519, file: !7520, line: 29, column: 6)
!7629 = !DILocation(line: 29, column: 15, scope: !7628)
!7630 = !DILocation(line: 29, column: 6, scope: !7519)
!7631 = !DILocation(line: 1031, column: 3, scope: !7632, inlinedAt: !7635)
!7632 = distinct !DISubprogram(name: "__get_IPSR", scope: !6843, file: !6843, line: 1027, type: !6924, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7633)
!7633 = !{!7634}
!7634 = !DILocalVariable(name: "result", scope: !7632, file: !6843, line: 1029, type: !132)
!7635 = distinct !DILocation(line: 48, column: 10, scope: !7636, inlinedAt: !7640)
!7636 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7637, file: !7637, line: 46, type: !7638, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !473)
!7637 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7638 = !DISubroutineType(types: !7639)
!7639 = !{!166}
!7640 = distinct !DILocation(line: 30, column: 7, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !7520, line: 30, column: 7)
!7642 = distinct !DILexicalBlock(scope: !7628, file: !7520, line: 29, column: 26)
!7643 = !{i64 3538586}
!7644 = !DILocation(line: 0, scope: !7632, inlinedAt: !7635)
!7645 = !DILocation(line: 48, column: 9, scope: !7636, inlinedAt: !7640)
!7646 = !DILocation(line: 30, column: 7, scope: !7642)
!7647 = !DILocation(line: 42, column: 14, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7641, file: !7520, line: 30, column: 25)
!7649 = !DILocation(line: 48, column: 15, scope: !7648)
!7650 = !DILocation(line: 49, column: 3, scope: !7648)
!7651 = !DILocation(line: 52, column: 2, scope: !7519)
!7652 = !DILocation(line: 53, column: 1, scope: !7519)
!7653 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !362, file: !362, line: 127, type: !3256, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !353, retainedNodes: !473)
!7654 = !DILocation(line: 134, column: 2, scope: !7653)
!7655 = !DILocation(line: 156, column: 1, scope: !7653)
!7656 = !DILocation(line: 0, scope: !361)
!7657 = !DILocation(line: 289, column: 36, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !361, file: !362, line: 285, column: 2)
!7659 = !DILocation(line: 289, column: 42, scope: !7658)
!7660 = !DILocation(line: 300, column: 36, scope: !361)
!7661 = !DILocation(line: 301, column: 35, scope: !361)
!7662 = !DILocation(line: 302, column: 37, scope: !361)
!7663 = !DILocation(line: 311, column: 2, scope: !361)
!7664 = !DILocation(line: 316, column: 1, scope: !361)
!7665 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !535, file: !535, line: 180, type: !3256, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7666 = !DILocation(line: 188, column: 12, scope: !7665)
!7667 = !DILocation(line: 271, column: 3, scope: !7668, inlinedAt: !7669)
!7668 = distinct !DISubprogram(name: "__DSB", scope: !6843, file: !6843, line: 269, type: !3256, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7669 = distinct !DILocation(line: 192, column: 2, scope: !7665)
!7670 = !{i64 3699264}
!7671 = !DILocation(line: 260, column: 3, scope: !7672, inlinedAt: !7673)
!7672 = distinct !DISubprogram(name: "__ISB", scope: !6843, file: !6843, line: 258, type: !3256, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7673 = distinct !DILocation(line: 193, column: 2, scope: !7665)
!7674 = !{i64 3698981}
!7675 = !DILocation(line: 194, column: 1, scope: !7665)
!7676 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !535, file: !535, line: 199, type: !3256, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7677 = !DILocation(line: 282, column: 3, scope: !7678, inlinedAt: !7679)
!7678 = distinct !DISubprogram(name: "__DMB", scope: !6843, file: !6843, line: 280, type: !3256, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7679 = distinct !DILocation(line: 202, column: 2, scope: !7676)
!7680 = !{i64 3699540}
!7681 = !DILocation(line: 205, column: 12, scope: !7676)
!7682 = !DILocation(line: 206, column: 1, scope: !7676)
!7683 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !535, file: !535, line: 275, type: !7684, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7697)
!7684 = !DISubroutineType(types: !7685)
!7685 = !{null, !7686, !265, !7111, !7111}
!7686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7687, size: 32)
!7687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7688)
!7688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !486, line: 52, size: 96, elements: !7689)
!7689 = !{!7690, !7691, !7692}
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7688, file: !486, line: 53, baseType: !22, size: 32)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7688, file: !486, line: 54, baseType: !356, size: 32, offset: 32)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7688, file: !486, line: 55, baseType: !7693, size: 32, offset: 64)
!7693 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !492, line: 151, baseType: !7694)
!7694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !492, line: 149, size: 32, elements: !7695)
!7695 = !{!7696}
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7694, file: !492, line: 150, baseType: !132, size: 32)
!7697 = !{!7698, !7699, !7700, !7701}
!7698 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7683, file: !535, line: 276, type: !7686)
!7699 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7683, file: !535, line: 276, type: !265)
!7700 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7683, file: !535, line: 277, type: !7111)
!7701 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7683, file: !535, line: 277, type: !7111)
!7702 = !DILocation(line: 0, scope: !7683)
!7703 = !DILocation(line: 279, column: 6, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7683, file: !535, line: 279, column: 6)
!7705 = !DILocation(line: 285, column: 1, scope: !7683)
!7706 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7707, file: !7707, line: 220, type: !7708, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7710)
!7707 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7708 = !DISubroutineType(types: !7709)
!7709 = !{!103, !7686, !265, !7111, !7111}
!7710 = !{!7711, !7712, !7713, !7714, !7715}
!7711 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7706, file: !7707, line: 221, type: !7686)
!7712 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7706, file: !7707, line: 221, type: !265)
!7713 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7706, file: !7707, line: 222, type: !7111)
!7714 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7706, file: !7707, line: 223, type: !7111)
!7715 = !DILocalVariable(name: "mpu_reg_index", scope: !7706, file: !7707, line: 225, type: !103)
!7716 = !DILocation(line: 0, scope: !7706)
!7717 = !DILocation(line: 225, column: 22, scope: !7706)
!7718 = !DILocation(line: 233, column: 18, scope: !7706)
!7719 = !DILocation(line: 236, column: 23, scope: !7706)
!7720 = !DILocation(line: 236, column: 21, scope: !7706)
!7721 = !DILocation(line: 238, column: 2, scope: !7706)
!7722 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !535, file: !535, line: 105, type: !7723, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7725)
!7723 = !DISubroutineType(types: !7724)
!7724 = !{!103, !7686, !163, !163, !166}
!7725 = !{!7726, !7727, !7728, !7729, !7730, !7731}
!7726 = !DILocalVariable(name: "regions", arg: 1, scope: !7722, file: !535, line: 106, type: !7686)
!7727 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7722, file: !535, line: 106, type: !163)
!7728 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7722, file: !535, line: 106, type: !163)
!7729 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7722, file: !535, line: 107, type: !166)
!7730 = !DILocalVariable(name: "i", scope: !7722, file: !535, line: 109, type: !103)
!7731 = !DILocalVariable(name: "reg_index", scope: !7722, file: !535, line: 110, type: !103)
!7732 = !DILocation(line: 0, scope: !7722)
!7733 = !DILocation(line: 110, column: 18, scope: !7722)
!7734 = !DILocation(line: 112, column: 16, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !535, line: 112, column: 2)
!7736 = distinct !DILexicalBlock(scope: !7722, file: !535, line: 112, column: 2)
!7737 = !DILocation(line: 112, column: 2, scope: !7736)
!7738 = !DILocation(line: 113, column: 7, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7740, file: !535, line: 113, column: 7)
!7740 = distinct !DILexicalBlock(scope: !7735, file: !535, line: 112, column: 36)
!7741 = !DILocation(line: 113, column: 18, scope: !7739)
!7742 = !DILocation(line: 113, column: 23, scope: !7739)
!7743 = !DILocation(line: 113, column: 7, scope: !7740)
!7744 = !DILocation(line: 118, column: 23, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7740, file: !535, line: 118, column: 7)
!7746 = !DILocation(line: 119, column: 7, scope: !7745)
!7747 = !DILocation(line: 118, column: 7, scope: !7740)
!7748 = !DILocation(line: 124, column: 36, scope: !7740)
!7749 = !DILocation(line: 124, column: 15, scope: !7740)
!7750 = !DILocation(line: 126, column: 17, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7740, file: !535, line: 126, column: 7)
!7752 = !DILocation(line: 126, column: 7, scope: !7740)
!7753 = !DILocation(line: 131, column: 12, scope: !7740)
!7754 = !DILocation(line: 132, column: 2, scope: !7740)
!7755 = !DILocation(line: 112, column: 32, scope: !7735)
!7756 = distinct !{!7756, !7737, !7757}
!7757 = !DILocation(line: 132, column: 2, scope: !7736)
!7758 = !DILocation(line: 135, column: 1, scope: !7722)
!7759 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7707, file: !7707, line: 63, type: !7760, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7762)
!7760 = !DISubroutineType(types: !7761)
!7761 = !{!103, !7686}
!7762 = !{!7763, !7764}
!7763 = !DILocalVariable(name: "part", arg: 1, scope: !7759, file: !7707, line: 63, type: !7686)
!7764 = !DILocalVariable(name: "partition_is_valid", scope: !7759, file: !7707, line: 70, type: !103)
!7765 = !DILocation(line: 0, scope: !7759)
!7766 = !DILocation(line: 71, column: 11, scope: !7759)
!7767 = !DILocation(line: 71, column: 37, scope: !7759)
!7768 = !DILocation(line: 72, column: 3, scope: !7759)
!7769 = !DILocation(line: 71, column: 30, scope: !7759)
!7770 = !DILocation(line: 75, column: 11, scope: !7759)
!7771 = !DILocation(line: 75, column: 17, scope: !7759)
!7772 = !DILocation(line: 75, column: 38, scope: !7759)
!7773 = !DILocation(line: 77, column: 2, scope: !7759)
!7774 = distinct !DISubprogram(name: "mpu_configure_region", scope: !535, file: !535, line: 79, type: !7775, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7777)
!7775 = !DISubroutineType(types: !7776)
!7776 = !{!103, !265, !7686}
!7777 = !{!7778, !7779, !7780}
!7778 = !DILocalVariable(name: "index", arg: 1, scope: !7774, file: !535, line: 79, type: !265)
!7779 = !DILocalVariable(name: "new_region", arg: 2, scope: !7774, file: !535, line: 80, type: !7686)
!7780 = !DILocalVariable(name: "region_conf", scope: !7774, file: !535, line: 82, type: !524)
!7781 = !DILocation(line: 0, scope: !7774)
!7782 = !DILocation(line: 82, column: 2, scope: !7774)
!7783 = !DILocation(line: 82, column: 24, scope: !7774)
!7784 = !DILocation(line: 87, column: 33, scope: !7774)
!7785 = !DILocation(line: 87, column: 14, scope: !7774)
!7786 = !DILocation(line: 87, column: 19, scope: !7774)
!7787 = !DILocation(line: 91, column: 55, scope: !7774)
!7788 = !DILocation(line: 92, column: 16, scope: !7774)
!7789 = !DILocation(line: 92, column: 53, scope: !7774)
!7790 = !DILocation(line: 91, column: 2, scope: !7774)
!7791 = !DILocation(line: 95, column: 9, scope: !7774)
!7792 = !DILocation(line: 97, column: 1, scope: !7774)
!7793 = !DILocation(line: 95, column: 2, scope: !7774)
!7794 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7707, file: !7707, line: 113, type: !7795, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7800)
!7795 = !DISubroutineType(types: !7796)
!7796 = !{null, !7797, !7798, !132, !132}
!7797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!7798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7799, size: 32)
!7799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7693)
!7800 = !{!7801, !7802, !7803, !7804}
!7801 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7794, file: !7707, line: 114, type: !7797)
!7802 = !DILocalVariable(name: "attr", arg: 2, scope: !7794, file: !7707, line: 115, type: !7798)
!7803 = !DILocalVariable(name: "base", arg: 3, scope: !7794, file: !7707, line: 115, type: !132)
!7804 = !DILocalVariable(name: "size", arg: 4, scope: !7794, file: !7707, line: 115, type: !132)
!7805 = !DILocation(line: 0, scope: !7794)
!7806 = !DILocation(line: 127, column: 23, scope: !7794)
!7807 = !DILocation(line: 127, column: 35, scope: !7794)
!7808 = !DILocation(line: 127, column: 33, scope: !7794)
!7809 = !DILocation(line: 127, column: 10, scope: !7794)
!7810 = !DILocation(line: 127, column: 15, scope: !7794)
!7811 = !DILocation(line: 129, column: 1, scope: !7794)
!7812 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !535, file: !535, line: 57, type: !7813, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7815)
!7813 = !DISubroutineType(types: !7814)
!7814 = !{!103, !265, !522}
!7815 = !{!7816, !7817}
!7816 = !DILocalVariable(name: "index", arg: 1, scope: !7812, file: !535, line: 57, type: !265)
!7817 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7812, file: !535, line: 58, type: !522)
!7818 = !DILocation(line: 0, scope: !7812)
!7819 = !DILocation(line: 61, column: 6, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7812, file: !535, line: 61, column: 6)
!7821 = !DILocation(line: 61, column: 12, scope: !7820)
!7822 = !DILocation(line: 61, column: 6, scope: !7812)
!7823 = !DILocation(line: 71, column: 2, scope: !7812)
!7824 = !DILocation(line: 73, column: 2, scope: !7812)
!7825 = !DILocation(line: 74, column: 1, scope: !7812)
!7826 = distinct !DISubprogram(name: "region_init", scope: !7707, file: !7707, line: 29, type: !7827, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7829)
!7827 = !DISubroutineType(types: !7828)
!7828 = !{null, !7111, !522}
!7829 = !{!7830, !7831}
!7830 = !DILocalVariable(name: "index", arg: 1, scope: !7826, file: !7707, line: 29, type: !7111)
!7831 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7826, file: !7707, line: 30, type: !522)
!7832 = !DILocation(line: 0, scope: !7826)
!7833 = !DILocation(line: 33, column: 2, scope: !7826)
!7834 = !DILocation(line: 47, column: 28, scope: !7826)
!7835 = !DILocation(line: 47, column: 33, scope: !7826)
!7836 = !DILocation(line: 48, column: 26, scope: !7826)
!7837 = !DILocation(line: 47, column: 12, scope: !7826)
!7838 = !DILocation(line: 49, column: 32, scope: !7826)
!7839 = !DILocation(line: 49, column: 37, scope: !7826)
!7840 = !DILocation(line: 49, column: 12, scope: !7826)
!7841 = !DILocation(line: 53, column: 1, scope: !7826)
!7842 = distinct !DISubprogram(name: "set_region_number", scope: !7843, file: !7843, line: 32, type: !6934, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7844)
!7843 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7844 = !{!7845}
!7845 = !DILocalVariable(name: "index", arg: 1, scope: !7842, file: !7843, line: 32, type: !132)
!7846 = !DILocation(line: 0, scope: !7842)
!7847 = !DILocation(line: 34, column: 11, scope: !7842)
!7848 = !DILocation(line: 35, column: 1, scope: !7842)
!7849 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7707, file: !7707, line: 88, type: !7850, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7852)
!7850 = !DISubroutineType(types: !7851)
!7851 = !{!132, !132}
!7852 = !{!7853}
!7853 = !DILocalVariable(name: "size", arg: 1, scope: !7849, file: !7707, line: 88, type: !132)
!7854 = !DILocation(line: 0, scope: !7849)
!7855 = !DILocation(line: 91, column: 11, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7849, file: !7707, line: 91, column: 6)
!7857 = !DILocation(line: 91, column: 6, scope: !7849)
!7858 = !DILocation(line: 100, column: 11, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7849, file: !7707, line: 100, column: 6)
!7860 = !DILocation(line: 100, column: 6, scope: !7849)
!7861 = !DILocation(line: 104, column: 35, scope: !7849)
!7862 = !DILocation(line: 104, column: 16, scope: !7849)
!7863 = !DILocation(line: 104, column: 50, scope: !7849)
!7864 = !DILocation(line: 104, column: 72, scope: !7849)
!7865 = !DILocation(line: 104, column: 2, scope: !7849)
!7866 = !DILocation(line: 106, column: 1, scope: !7849)
!7867 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !535, file: !535, line: 307, type: !7868, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7870)
!7868 = !DISubroutineType(types: !7869)
!7869 = !{null, !7686, !163}
!7870 = !{!7871, !7872}
!7871 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7867, file: !535, line: 308, type: !7686)
!7872 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7867, file: !535, line: 308, type: !163)
!7873 = !DILocation(line: 0, scope: !7867)
!7874 = !DILocation(line: 310, column: 6, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7867, file: !535, line: 310, column: 6)
!7876 = !DILocation(line: 316, column: 1, scope: !7867)
!7877 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7707, file: !7707, line: 249, type: !7878, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7880)
!7878 = !DISubroutineType(types: !7879)
!7879 = !{!103, !7686, !163}
!7880 = !{!7881, !7882, !7883, !7884}
!7881 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7877, file: !7707, line: 250, type: !7686)
!7882 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7877, file: !7707, line: 250, type: !163)
!7883 = !DILocalVariable(name: "mpu_reg_index", scope: !7877, file: !7707, line: 252, type: !103)
!7884 = !DILocalVariable(name: "i", scope: !7885, file: !7707, line: 264, type: !103)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !7707, line: 264, column: 3)
!7886 = distinct !DILexicalBlock(scope: !7887, file: !7707, line: 261, column: 32)
!7887 = distinct !DILexicalBlock(scope: !7877, file: !7707, line: 261, column: 6)
!7888 = !DILocation(line: 0, scope: !7877)
!7889 = !DILocation(line: 252, column: 22, scope: !7877)
!7890 = !DILocation(line: 258, column: 18, scope: !7877)
!7891 = !DILocation(line: 261, column: 20, scope: !7887)
!7892 = !DILocation(line: 261, column: 6, scope: !7877)
!7893 = !DILocation(line: 0, scope: !7885)
!7894 = !DILocation(line: 265, column: 4, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7896, file: !7707, line: 264, column: 59)
!7896 = distinct !DILexicalBlock(scope: !7885, file: !7707, line: 264, column: 3)
!7897 = !DILocation(line: 264, column: 55, scope: !7896)
!7898 = !DILocation(line: 264, column: 33, scope: !7896)
!7899 = !DILocation(line: 264, column: 3, scope: !7885)
!7900 = distinct !{!7900, !7899, !7901}
!7901 = !DILocation(line: 266, column: 3, scope: !7885)
!7902 = !DILocation(line: 269, column: 2, scope: !7877)
!7903 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7904, file: !7904, line: 218, type: !6934, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7905)
!7904 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7905 = !{!7906}
!7906 = !DILocalVariable(name: "rnr", arg: 1, scope: !7903, file: !7904, line: 218, type: !132)
!7907 = !DILocation(line: 0, scope: !7903)
!7908 = !DILocation(line: 220, column: 12, scope: !7903)
!7909 = !DILocation(line: 221, column: 13, scope: !7903)
!7910 = !DILocation(line: 222, column: 1, scope: !7903)
!7911 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !535, file: !535, line: 326, type: !6647, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7912)
!7912 = !{!7913}
!7913 = !DILocalVariable(name: "r_index", scope: !7911, file: !535, line: 328, type: !132)
!7914 = !DILocation(line: 330, column: 17, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7911, file: !535, line: 330, column: 6)
!7916 = !DILocation(line: 330, column: 29, scope: !7915)
!7917 = !DILocation(line: 330, column: 6, scope: !7911)
!7918 = !DILocation(line: 347, column: 2, scope: !7911)
!7919 = !DILocation(line: 0, scope: !7911)
!7920 = !DILocation(line: 364, column: 29, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7922, file: !535, line: 364, column: 2)
!7922 = distinct !DILexicalBlock(scope: !7911, file: !535, line: 364, column: 2)
!7923 = !DILocation(line: 364, column: 2, scope: !7922)
!7924 = !DILocation(line: 365, column: 25, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7921, file: !535, line: 364, column: 66)
!7926 = !DILocation(line: 365, column: 3, scope: !7925)
!7927 = !DILocation(line: 364, column: 62, scope: !7921)
!7928 = distinct !{!7928, !7923, !7929}
!7929 = !DILocation(line: 366, column: 2, scope: !7922)
!7930 = !DILocation(line: 369, column: 23, scope: !7911)
!7931 = !DILocation(line: 369, column: 21, scope: !7911)
!7932 = !DILocation(line: 372, column: 2, scope: !7911)
!7933 = !DILocation(line: 443, column: 2, scope: !7911)
!7934 = !DILocation(line: 444, column: 1, scope: !7911)
!7935 = distinct !DISubprogram(name: "strcpy", scope: !7936, file: !7936, line: 20, type: !7937, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !7941)
!7936 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7937 = !DISubroutineType(types: !7938)
!7938 = !{!1083, !7939, !7940}
!7939 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1083)
!7940 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !155)
!7941 = !{!7942, !7943, !7944}
!7942 = !DILocalVariable(name: "d", arg: 1, scope: !7935, file: !7936, line: 20, type: !7939)
!7943 = !DILocalVariable(name: "s", arg: 2, scope: !7935, file: !7936, line: 20, type: !7940)
!7944 = !DILocalVariable(name: "dest", scope: !7935, file: !7936, line: 22, type: !1083)
!7945 = !DILocation(line: 0, scope: !7935)
!7946 = !DILocation(line: 24, column: 9, scope: !7935)
!7947 = !DILocation(line: 24, column: 12, scope: !7935)
!7948 = !DILocation(line: 24, column: 2, scope: !7935)
!7949 = !DILocation(line: 25, column: 6, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7935, file: !7936, line: 24, column: 21)
!7951 = !DILocation(line: 26, column: 4, scope: !7950)
!7952 = !DILocation(line: 27, column: 4, scope: !7950)
!7953 = distinct !{!7953, !7948, !7954}
!7954 = !DILocation(line: 28, column: 2, scope: !7935)
!7955 = !DILocation(line: 30, column: 5, scope: !7935)
!7956 = !DILocation(line: 32, column: 2, scope: !7935)
!7957 = distinct !DISubprogram(name: "strncpy", scope: !7936, file: !7936, line: 42, type: !7958, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !7960)
!7958 = !DISubroutineType(types: !7959)
!7959 = !{!1083, !7939, !7940, !356}
!7960 = !{!7961, !7962, !7963, !7964}
!7961 = !DILocalVariable(name: "d", arg: 1, scope: !7957, file: !7936, line: 42, type: !7939)
!7962 = !DILocalVariable(name: "s", arg: 2, scope: !7957, file: !7936, line: 42, type: !7940)
!7963 = !DILocalVariable(name: "n", arg: 3, scope: !7957, file: !7936, line: 42, type: !356)
!7964 = !DILocalVariable(name: "dest", scope: !7957, file: !7936, line: 44, type: !1083)
!7965 = !DILocation(line: 0, scope: !7957)
!7966 = !DILocation(line: 46, column: 12, scope: !7957)
!7967 = !DILocation(line: 46, column: 17, scope: !7957)
!7968 = !DILocation(line: 46, column: 20, scope: !7957)
!7969 = !DILocation(line: 46, column: 23, scope: !7957)
!7970 = !DILocation(line: 46, column: 2, scope: !7957)
!7971 = !DILocation(line: 47, column: 6, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7957, file: !7936, line: 46, column: 32)
!7973 = !DILocation(line: 48, column: 4, scope: !7972)
!7974 = !DILocation(line: 49, column: 4, scope: !7972)
!7975 = !DILocation(line: 50, column: 4, scope: !7972)
!7976 = distinct !{!7976, !7970, !7977}
!7977 = !DILocation(line: 51, column: 2, scope: !7957)
!7978 = !DILocation(line: 54, column: 6, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7957, file: !7936, line: 53, column: 16)
!7980 = !DILocation(line: 55, column: 4, scope: !7979)
!7981 = !DILocation(line: 56, column: 4, scope: !7979)
!7982 = !DILocation(line: 53, column: 11, scope: !7957)
!7983 = !DILocation(line: 53, column: 2, scope: !7957)
!7984 = distinct !{!7984, !7983, !7985}
!7985 = !DILocation(line: 57, column: 2, scope: !7957)
!7986 = !DILocation(line: 59, column: 2, scope: !7957)
!7987 = distinct !DISubprogram(name: "strchr", scope: !7936, file: !7936, line: 69, type: !7988, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !7990)
!7988 = !DISubroutineType(types: !7989)
!7989 = !{!1083, !155, !103}
!7990 = !{!7991, !7992, !7993}
!7991 = !DILocalVariable(name: "s", arg: 1, scope: !7987, file: !7936, line: 69, type: !155)
!7992 = !DILocalVariable(name: "c", arg: 2, scope: !7987, file: !7936, line: 69, type: !103)
!7993 = !DILocalVariable(name: "tmp", scope: !7987, file: !7936, line: 71, type: !108)
!7994 = !DILocation(line: 0, scope: !7987)
!7995 = !DILocation(line: 73, column: 2, scope: !7987)
!7996 = !DILocation(line: 73, column: 10, scope: !7987)
!7997 = !DILocation(line: 73, column: 13, scope: !7987)
!7998 = !DILocation(line: 73, column: 21, scope: !7987)
!7999 = !DILocation(line: 74, column: 4, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7987, file: !7936, line: 73, column: 38)
!8001 = distinct !{!8001, !7995, !8002}
!8002 = !DILocation(line: 75, column: 2, scope: !7987)
!8003 = !DILocation(line: 77, column: 9, scope: !7987)
!8004 = !DILocation(line: 77, column: 2, scope: !7987)
!8005 = distinct !DISubprogram(name: "strrchr", scope: !7936, file: !7936, line: 87, type: !7988, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8006)
!8006 = !{!8007, !8008, !8009}
!8007 = !DILocalVariable(name: "s", arg: 1, scope: !8005, file: !7936, line: 87, type: !155)
!8008 = !DILocalVariable(name: "c", arg: 2, scope: !8005, file: !7936, line: 87, type: !103)
!8009 = !DILocalVariable(name: "match", scope: !8005, file: !7936, line: 89, type: !1083)
!8010 = !DILocation(line: 0, scope: !8005)
!8011 = !DILocation(line: 91, column: 2, scope: !8005)
!8012 = !DILocation(line: 92, column: 7, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8014, file: !7936, line: 92, column: 7)
!8014 = distinct !DILexicalBlock(scope: !8005, file: !7936, line: 91, column: 5)
!8015 = !DILocation(line: 92, column: 10, scope: !8013)
!8016 = !DILocation(line: 92, column: 7, scope: !8014)
!8017 = !DILocation(line: 95, column: 13, scope: !8005)
!8018 = !DILocation(line: 95, column: 2, scope: !8014)
!8019 = distinct !{!8019, !8011, !8020}
!8020 = !DILocation(line: 95, column: 15, scope: !8005)
!8021 = !DILocation(line: 97, column: 2, scope: !8005)
!8022 = distinct !DISubprogram(name: "strlen", scope: !7936, file: !7936, line: 107, type: !8023, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8025)
!8023 = !DISubroutineType(types: !8024)
!8024 = !{!356, !155}
!8025 = !{!8026, !8027}
!8026 = !DILocalVariable(name: "s", arg: 1, scope: !8022, file: !7936, line: 107, type: !155)
!8027 = !DILocalVariable(name: "n", scope: !8022, file: !7936, line: 109, type: !356)
!8028 = !DILocation(line: 0, scope: !8022)
!8029 = !DILocation(line: 111, column: 9, scope: !8022)
!8030 = !DILocation(line: 111, column: 12, scope: !8022)
!8031 = !DILocation(line: 111, column: 2, scope: !8022)
!8032 = !DILocation(line: 112, column: 4, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8022, file: !7936, line: 111, column: 21)
!8034 = !DILocation(line: 113, column: 4, scope: !8033)
!8035 = distinct !{!8035, !8031, !8036}
!8036 = !DILocation(line: 114, column: 2, scope: !8022)
!8037 = !DILocation(line: 116, column: 2, scope: !8022)
!8038 = distinct !DISubprogram(name: "strnlen", scope: !7936, file: !7936, line: 126, type: !8039, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8041)
!8039 = !DISubroutineType(types: !8040)
!8040 = !{!356, !155, !356}
!8041 = !{!8042, !8043, !8044}
!8042 = !DILocalVariable(name: "s", arg: 1, scope: !8038, file: !7936, line: 126, type: !155)
!8043 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8038, file: !7936, line: 126, type: !356)
!8044 = !DILocalVariable(name: "n", scope: !8038, file: !7936, line: 128, type: !356)
!8045 = !DILocation(line: 0, scope: !8038)
!8046 = !DILocation(line: 130, column: 9, scope: !8038)
!8047 = !DILocation(line: 130, column: 12, scope: !8038)
!8048 = !DILocation(line: 130, column: 20, scope: !8038)
!8049 = !DILocation(line: 130, column: 2, scope: !8038)
!8050 = !DILocation(line: 131, column: 4, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8038, file: !7936, line: 130, column: 35)
!8052 = !DILocation(line: 132, column: 4, scope: !8051)
!8053 = distinct !{!8053, !8049, !8054}
!8054 = !DILocation(line: 133, column: 2, scope: !8038)
!8055 = !DILocation(line: 135, column: 2, scope: !8038)
!8056 = distinct !DISubprogram(name: "strcmp", scope: !7936, file: !7936, line: 145, type: !8057, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8059)
!8057 = !DISubroutineType(types: !8058)
!8058 = !{!103, !155, !155}
!8059 = !{!8060, !8061}
!8060 = !DILocalVariable(name: "s1", arg: 1, scope: !8056, file: !7936, line: 145, type: !155)
!8061 = !DILocalVariable(name: "s2", arg: 2, scope: !8056, file: !7936, line: 145, type: !155)
!8062 = !DILocation(line: 0, scope: !8056)
!8063 = !DILocation(line: 147, column: 10, scope: !8056)
!8064 = !DILocation(line: 147, column: 17, scope: !8056)
!8065 = !DILocation(line: 147, column: 14, scope: !8056)
!8066 = !DILocation(line: 147, column: 22, scope: !8056)
!8067 = !DILocation(line: 148, column: 5, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8056, file: !7936, line: 147, column: 40)
!8069 = !DILocation(line: 149, column: 5, scope: !8068)
!8070 = distinct !{!8070, !8071, !8072}
!8071 = !DILocation(line: 147, column: 2, scope: !8056)
!8072 = !DILocation(line: 150, column: 2, scope: !8056)
!8073 = !DILocation(line: 152, column: 9, scope: !8056)
!8074 = !DILocation(line: 152, column: 15, scope: !8056)
!8075 = !DILocation(line: 152, column: 13, scope: !8056)
!8076 = !DILocation(line: 152, column: 2, scope: !8056)
!8077 = distinct !DISubprogram(name: "strncmp", scope: !7936, file: !7936, line: 162, type: !8078, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8080)
!8078 = !DISubroutineType(types: !8079)
!8079 = !{!103, !155, !155, !356}
!8080 = !{!8081, !8082, !8083}
!8081 = !DILocalVariable(name: "s1", arg: 1, scope: !8077, file: !7936, line: 162, type: !155)
!8082 = !DILocalVariable(name: "s2", arg: 2, scope: !8077, file: !7936, line: 162, type: !155)
!8083 = !DILocalVariable(name: "n", arg: 3, scope: !8077, file: !7936, line: 162, type: !356)
!8084 = !DILocation(line: 0, scope: !8077)
!8085 = !DILocation(line: 164, column: 17, scope: !8077)
!8086 = !DILocation(line: 164, column: 21, scope: !8077)
!8087 = !DILocation(line: 164, column: 28, scope: !8077)
!8088 = !DILocation(line: 164, column: 25, scope: !8077)
!8089 = !DILocation(line: 164, column: 33, scope: !8077)
!8090 = !DILocation(line: 165, column: 5, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8077, file: !7936, line: 164, column: 51)
!8092 = !DILocation(line: 166, column: 5, scope: !8091)
!8093 = !DILocation(line: 167, column: 4, scope: !8091)
!8094 = distinct !{!8094, !8095, !8096}
!8095 = !DILocation(line: 164, column: 2, scope: !8077)
!8096 = !DILocation(line: 168, column: 2, scope: !8077)
!8097 = !DILocation(line: 170, column: 25, scope: !8077)
!8098 = !DILocation(line: 170, column: 31, scope: !8077)
!8099 = !DILocation(line: 170, column: 29, scope: !8077)
!8100 = !DILocation(line: 170, column: 9, scope: !8077)
!8101 = !DILocation(line: 170, column: 2, scope: !8077)
!8102 = distinct !DISubprogram(name: "strtok_r", scope: !7936, file: !7936, line: 180, type: !8103, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8106)
!8103 = !DISubroutineType(types: !8104)
!8104 = !{!1083, !1083, !155, !8105}
!8105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!8106 = !{!8107, !8108, !8109, !8110, !8111}
!8107 = !DILocalVariable(name: "str", arg: 1, scope: !8102, file: !7936, line: 180, type: !1083)
!8108 = !DILocalVariable(name: "sep", arg: 2, scope: !8102, file: !7936, line: 180, type: !155)
!8109 = !DILocalVariable(name: "state", arg: 3, scope: !8102, file: !7936, line: 180, type: !8105)
!8110 = !DILocalVariable(name: "start", scope: !8102, file: !7936, line: 182, type: !1083)
!8111 = !DILocalVariable(name: "end", scope: !8102, file: !7936, line: 182, type: !1083)
!8112 = !DILocation(line: 0, scope: !8102)
!8113 = !DILocation(line: 184, column: 10, scope: !8102)
!8114 = !DILocation(line: 184, column: 22, scope: !8102)
!8115 = !DILocation(line: 187, column: 9, scope: !8102)
!8116 = !DILocation(line: 187, column: 16, scope: !8102)
!8117 = !DILocation(line: 187, column: 19, scope: !8102)
!8118 = !DILocation(line: 187, column: 2, scope: !8102)
!8119 = !DILocation(line: 188, column: 8, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8102, file: !7936, line: 187, column: 40)
!8121 = distinct !{!8121, !8118, !8122}
!8122 = !DILocation(line: 189, column: 2, scope: !8102)
!8123 = !DILocation(line: 198, column: 9, scope: !8102)
!8124 = !DILocation(line: 198, column: 18, scope: !8102)
!8125 = !DILocation(line: 198, column: 17, scope: !8102)
!8126 = !DILocation(line: 198, column: 2, scope: !8102)
!8127 = !DILocation(line: 199, column: 6, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8102, file: !7936, line: 198, column: 37)
!8129 = !DILocation(line: 198, column: 14, scope: !8102)
!8130 = distinct !{!8130, !8126, !8131}
!8131 = !DILocation(line: 200, column: 2, scope: !8102)
!8132 = !DILocation(line: 203, column: 8, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !7936, line: 202, column: 20)
!8134 = distinct !DILexicalBlock(scope: !8102, file: !7936, line: 202, column: 6)
!8135 = !DILocation(line: 204, column: 16, scope: !8133)
!8136 = !DILocation(line: 205, column: 2, scope: !8133)
!8137 = !DILocation(line: 210, column: 1, scope: !8102)
!8138 = distinct !DISubprogram(name: "strcat", scope: !7936, file: !7936, line: 212, type: !7937, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8139)
!8139 = !{!8140, !8141}
!8140 = !DILocalVariable(name: "dest", arg: 1, scope: !8138, file: !7936, line: 212, type: !7939)
!8141 = !DILocalVariable(name: "src", arg: 2, scope: !8138, file: !7936, line: 212, type: !7940)
!8142 = !DILocation(line: 0, scope: !8138)
!8143 = !DILocation(line: 214, column: 16, scope: !8138)
!8144 = !DILocation(line: 214, column: 14, scope: !8138)
!8145 = !DILocation(line: 214, column: 2, scope: !8138)
!8146 = !DILocation(line: 215, column: 2, scope: !8138)
!8147 = distinct !DISubprogram(name: "strncat", scope: !7936, file: !7936, line: 218, type: !7958, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8148)
!8148 = !{!8149, !8150, !8151, !8152, !8153}
!8149 = !DILocalVariable(name: "dest", arg: 1, scope: !8147, file: !7936, line: 218, type: !7939)
!8150 = !DILocalVariable(name: "src", arg: 2, scope: !8147, file: !7936, line: 218, type: !7940)
!8151 = !DILocalVariable(name: "n", arg: 3, scope: !8147, file: !7936, line: 219, type: !356)
!8152 = !DILocalVariable(name: "orig_dest", scope: !8147, file: !7936, line: 221, type: !1083)
!8153 = !DILocalVariable(name: "len", scope: !8147, file: !7936, line: 222, type: !356)
!8154 = !DILocation(line: 0, scope: !8147)
!8155 = !DILocation(line: 222, column: 15, scope: !8147)
!8156 = !DILocation(line: 224, column: 7, scope: !8147)
!8157 = !DILocation(line: 225, column: 14, scope: !8147)
!8158 = !DILocation(line: 225, column: 19, scope: !8147)
!8159 = !DILocation(line: 225, column: 11, scope: !8147)
!8160 = !DILocation(line: 225, column: 23, scope: !8147)
!8161 = !DILocation(line: 225, column: 28, scope: !8147)
!8162 = !DILocation(line: 225, column: 2, scope: !8147)
!8163 = !DILocation(line: 226, column: 17, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8147, file: !7936, line: 225, column: 38)
!8165 = !DILocation(line: 226, column: 8, scope: !8164)
!8166 = !DILocation(line: 226, column: 11, scope: !8164)
!8167 = distinct !{!8167, !8162, !8168}
!8168 = !DILocation(line: 227, column: 2, scope: !8147)
!8169 = !DILocation(line: 228, column: 8, scope: !8147)
!8170 = !DILocation(line: 230, column: 2, scope: !8147)
!8171 = distinct !DISubprogram(name: "memcmp", scope: !7936, file: !7936, line: 239, type: !8172, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8174)
!8172 = !DISubroutineType(types: !8173)
!8173 = !{!103, !13, !13, !356}
!8174 = !{!8175, !8176, !8177, !8178, !8179}
!8175 = !DILocalVariable(name: "m1", arg: 1, scope: !8171, file: !7936, line: 239, type: !13)
!8176 = !DILocalVariable(name: "m2", arg: 2, scope: !8171, file: !7936, line: 239, type: !13)
!8177 = !DILocalVariable(name: "n", arg: 3, scope: !8171, file: !7936, line: 239, type: !356)
!8178 = !DILocalVariable(name: "c1", scope: !8171, file: !7936, line: 241, type: !155)
!8179 = !DILocalVariable(name: "c2", scope: !8171, file: !7936, line: 242, type: !155)
!8180 = !DILocation(line: 0, scope: !8171)
!8181 = !DILocation(line: 244, column: 7, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8171, file: !7936, line: 244, column: 6)
!8183 = !DILocation(line: 244, column: 6, scope: !8171)
!8184 = !DILocation(line: 248, column: 10, scope: !8171)
!8185 = !DILocation(line: 248, column: 14, scope: !8171)
!8186 = !DILocation(line: 248, column: 19, scope: !8171)
!8187 = !DILocation(line: 248, column: 2, scope: !8171)
!8188 = !DILocation(line: 248, column: 23, scope: !8171)
!8189 = !DILocation(line: 248, column: 30, scope: !8171)
!8190 = !DILocation(line: 248, column: 27, scope: !8171)
!8191 = !DILocation(line: 249, column: 5, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8171, file: !7936, line: 248, column: 36)
!8193 = !DILocation(line: 250, column: 5, scope: !8192)
!8194 = distinct !{!8194, !8187, !8195}
!8195 = !DILocation(line: 251, column: 2, scope: !8171)
!8196 = !DILocation(line: 253, column: 9, scope: !8171)
!8197 = !DILocation(line: 253, column: 15, scope: !8171)
!8198 = !DILocation(line: 253, column: 13, scope: !8171)
!8199 = !DILocation(line: 253, column: 2, scope: !8171)
!8200 = !DILocation(line: 254, column: 1, scope: !8171)
!8201 = distinct !DISubprogram(name: "memmove", scope: !7936, file: !7936, line: 263, type: !8202, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8204)
!8202 = !DISubroutineType(types: !8203)
!8203 = !{!102, !102, !13, !356}
!8204 = !{!8205, !8206, !8207, !8208, !8209}
!8205 = !DILocalVariable(name: "d", arg: 1, scope: !8201, file: !7936, line: 263, type: !102)
!8206 = !DILocalVariable(name: "s", arg: 2, scope: !8201, file: !7936, line: 263, type: !13)
!8207 = !DILocalVariable(name: "n", arg: 3, scope: !8201, file: !7936, line: 263, type: !356)
!8208 = !DILocalVariable(name: "dest", scope: !8201, file: !7936, line: 265, type: !1083)
!8209 = !DILocalVariable(name: "src", scope: !8201, file: !7936, line: 266, type: !155)
!8210 = !DILocation(line: 0, scope: !8201)
!8211 = !DILocation(line: 268, column: 21, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8201, file: !7936, line: 268, column: 6)
!8213 = !DILocation(line: 268, column: 28, scope: !8212)
!8214 = !DILocation(line: 268, column: 6, scope: !8201)
!8215 = !DILocation(line: 280, column: 12, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8212, file: !7936, line: 278, column: 9)
!8217 = !DILocation(line: 280, column: 3, scope: !8216)
!8218 = !DILocation(line: 275, column: 5, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !7936, line: 274, column: 17)
!8220 = distinct !DILexicalBlock(scope: !8212, file: !7936, line: 268, column: 33)
!8221 = !DILocation(line: 276, column: 14, scope: !8219)
!8222 = !DILocation(line: 276, column: 4, scope: !8219)
!8223 = !DILocation(line: 276, column: 12, scope: !8219)
!8224 = !DILocation(line: 274, column: 12, scope: !8220)
!8225 = !DILocation(line: 274, column: 3, scope: !8220)
!8226 = distinct !{!8226, !8225, !8227}
!8227 = !DILocation(line: 277, column: 3, scope: !8220)
!8228 = !DILocation(line: 281, column: 12, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8216, file: !7936, line: 280, column: 17)
!8230 = !DILocation(line: 281, column: 10, scope: !8229)
!8231 = !DILocation(line: 282, column: 8, scope: !8229)
!8232 = !DILocation(line: 283, column: 7, scope: !8229)
!8233 = !DILocation(line: 284, column: 5, scope: !8229)
!8234 = distinct !{!8234, !8217, !8235}
!8235 = !DILocation(line: 285, column: 3, scope: !8216)
!8236 = !DILocation(line: 288, column: 2, scope: !8201)
!8237 = distinct !DISubprogram(name: "memcpy", scope: !7936, file: !7936, line: 298, type: !8238, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8242)
!8238 = !DISubroutineType(types: !8239)
!8239 = !{!102, !8240, !8241, !356}
!8240 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8241 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8242 = !{!8243, !8244, !8245, !8246, !8247}
!8243 = !DILocalVariable(name: "d", arg: 1, scope: !8237, file: !7936, line: 298, type: !8240)
!8244 = !DILocalVariable(name: "s", arg: 2, scope: !8237, file: !7936, line: 298, type: !8241)
!8245 = !DILocalVariable(name: "n", arg: 3, scope: !8237, file: !7936, line: 298, type: !356)
!8246 = !DILocalVariable(name: "d_byte", scope: !8237, file: !7936, line: 302, type: !233)
!8247 = !DILocalVariable(name: "s_byte", scope: !8237, file: !7936, line: 303, type: !3028)
!8248 = !DILocation(line: 0, scope: !8237)
!8249 = !DILocation(line: 337, column: 11, scope: !8237)
!8250 = !DILocation(line: 337, column: 2, scope: !8237)
!8251 = !DILocation(line: 338, column: 25, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8237, file: !7936, line: 337, column: 16)
!8253 = !DILocation(line: 338, column: 17, scope: !8252)
!8254 = !DILocation(line: 338, column: 11, scope: !8252)
!8255 = !DILocation(line: 338, column: 15, scope: !8252)
!8256 = !DILocation(line: 339, column: 4, scope: !8252)
!8257 = distinct !{!8257, !8250, !8258}
!8258 = !DILocation(line: 340, column: 2, scope: !8237)
!8259 = !DILocation(line: 342, column: 2, scope: !8237)
!8260 = distinct !DISubprogram(name: "memset", scope: !7936, file: !7936, line: 352, type: !8261, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8263)
!8261 = !DISubroutineType(types: !8262)
!8262 = !{!102, !102, !103, !356}
!8263 = !{!8264, !8265, !8266, !8267, !8268}
!8264 = !DILocalVariable(name: "buf", arg: 1, scope: !8260, file: !7936, line: 352, type: !102)
!8265 = !DILocalVariable(name: "c", arg: 2, scope: !8260, file: !7936, line: 352, type: !103)
!8266 = !DILocalVariable(name: "n", arg: 3, scope: !8260, file: !7936, line: 352, type: !356)
!8267 = !DILocalVariable(name: "d_byte", scope: !8260, file: !7936, line: 356, type: !233)
!8268 = !DILocalVariable(name: "c_byte", scope: !8260, file: !7936, line: 357, type: !164)
!8269 = !DILocation(line: 0, scope: !8260)
!8270 = !DILocation(line: 357, column: 25, scope: !8260)
!8271 = !DILocation(line: 389, column: 11, scope: !8260)
!8272 = !DILocation(line: 389, column: 2, scope: !8260)
!8273 = !DILocation(line: 390, column: 11, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8260, file: !7936, line: 389, column: 16)
!8275 = !DILocation(line: 390, column: 15, scope: !8274)
!8276 = !DILocation(line: 391, column: 4, scope: !8274)
!8277 = distinct !{!8277, !8272, !8278}
!8278 = !DILocation(line: 392, column: 2, scope: !8260)
!8279 = !DILocation(line: 394, column: 2, scope: !8260)
!8280 = distinct !DISubprogram(name: "memchr", scope: !7936, file: !7936, line: 404, type: !8281, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8283)
!8281 = !DISubroutineType(types: !8282)
!8282 = !{!102, !13, !103, !356}
!8283 = !{!8284, !8285, !8286, !8287}
!8284 = !DILocalVariable(name: "s", arg: 1, scope: !8280, file: !7936, line: 404, type: !13)
!8285 = !DILocalVariable(name: "c", arg: 2, scope: !8280, file: !7936, line: 404, type: !103)
!8286 = !DILocalVariable(name: "n", arg: 3, scope: !8280, file: !7936, line: 404, type: !356)
!8287 = !DILocalVariable(name: "p", scope: !8288, file: !7936, line: 407, type: !3028)
!8288 = distinct !DILexicalBlock(scope: !8289, file: !7936, line: 406, column: 14)
!8289 = distinct !DILexicalBlock(scope: !8280, file: !7936, line: 406, column: 6)
!8290 = !DILocation(line: 0, scope: !8280)
!8291 = !DILocation(line: 406, column: 8, scope: !8289)
!8292 = !DILocation(line: 406, column: 6, scope: !8280)
!8293 = !DILocation(line: 409, column: 3, scope: !8288)
!8294 = !DILocation(line: 0, scope: !8288)
!8295 = !DILocation(line: 410, column: 8, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8297, file: !7936, line: 410, column: 8)
!8297 = distinct !DILexicalBlock(scope: !8288, file: !7936, line: 409, column: 6)
!8298 = !DILocation(line: 410, column: 13, scope: !8296)
!8299 = !DILocation(line: 410, column: 8, scope: !8297)
!8300 = distinct !{!8300, !8293, !8301}
!8301 = !DILocation(line: 414, column: 20, scope: !8288)
!8302 = !DILocation(line: 417, column: 2, scope: !8280)
!8303 = !DILocation(line: 418, column: 1, scope: !8280)
!8304 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !545, file: !545, line: 23, type: !3394, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8305)
!8305 = !{!8306}
!8306 = !DILocalVariable(name: "hook", arg: 1, scope: !8304, file: !545, line: 23, type: !117)
!8307 = !DILocation(line: 0, scope: !8304)
!8308 = !DILocation(line: 25, column: 15, scope: !8304)
!8309 = !DILocation(line: 26, column: 1, scope: !8304)
!8310 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !545, file: !545, line: 14, type: !118, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8311)
!8311 = !{!8312}
!8312 = !DILocalVariable(name: "c", arg: 1, scope: !8310, file: !545, line: 14, type: !103)
!8313 = !DILocation(line: 0, scope: !8310)
!8314 = !DILocation(line: 18, column: 2, scope: !8310)
!8315 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !545, file: !545, line: 28, type: !8316, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8318)
!8316 = !DISubroutineType(types: !8317)
!8317 = !{!103, !103, !541}
!8318 = !{!8319, !8320}
!8319 = !DILocalVariable(name: "c", arg: 1, scope: !8315, file: !545, line: 28, type: !103)
!8320 = !DILocalVariable(name: "stream", arg: 2, scope: !8315, file: !545, line: 28, type: !541)
!8321 = !DILocation(line: 0, scope: !8315)
!8322 = !DILocation(line: 30, column: 27, scope: !8315)
!8323 = !DILocation(line: 30, column: 50, scope: !8315)
!8324 = !DILocation(line: 30, column: 9, scope: !8315)
!8325 = !DILocation(line: 30, column: 2, scope: !8315)
!8326 = distinct !DISubprogram(name: "fputc", scope: !545, file: !545, line: 41, type: !8316, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8327)
!8327 = !{!8328, !8329}
!8328 = !DILocalVariable(name: "c", arg: 1, scope: !8326, file: !545, line: 41, type: !103)
!8329 = !DILocalVariable(name: "stream", arg: 2, scope: !8326, file: !545, line: 41, type: !541)
!8330 = !DILocation(line: 0, scope: !8326)
!8331 = !DILocation(line: 43, column: 9, scope: !8326)
!8332 = !DILocation(line: 43, column: 2, scope: !8326)
!8333 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8334, file: !8334, line: 72, type: !8316, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8335)
!8334 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/console/echo")
!8335 = !{!8336, !8337}
!8336 = !DILocalVariable(name: "c", arg: 1, scope: !8333, file: !8334, line: 72, type: !103)
!8337 = !DILocalVariable(name: "stream", arg: 2, scope: !8333, file: !8334, line: 72, type: !541)
!8338 = !DILocation(line: 0, scope: !8333)
!8339 = !DILocation(line: 81, column: 2, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8333, file: !8334, line: 81, column: 2)
!8341 = !{i64 2154903639}
!8342 = !DILocation(line: 82, column: 9, scope: !8333)
!8343 = !DILocation(line: 82, column: 2, scope: !8333)
!8344 = distinct !DISubprogram(name: "fputs", scope: !545, file: !545, line: 46, type: !8345, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8348)
!8345 = !DISubroutineType(types: !8346)
!8346 = !{!103, !7940, !8347}
!8347 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !541)
!8348 = !{!8349, !8350, !8351, !8352}
!8349 = !DILocalVariable(name: "s", arg: 1, scope: !8344, file: !545, line: 46, type: !7940)
!8350 = !DILocalVariable(name: "stream", arg: 2, scope: !8344, file: !545, line: 46, type: !8347)
!8351 = !DILocalVariable(name: "len", scope: !8344, file: !545, line: 48, type: !103)
!8352 = !DILocalVariable(name: "ret", scope: !8344, file: !545, line: 49, type: !103)
!8353 = !DILocation(line: 0, scope: !8344)
!8354 = !DILocation(line: 48, column: 12, scope: !8344)
!8355 = !DILocation(line: 51, column: 8, scope: !8344)
!8356 = !DILocation(line: 53, column: 13, scope: !8344)
!8357 = !DILocation(line: 53, column: 9, scope: !8344)
!8358 = !DILocation(line: 53, column: 2, scope: !8344)
!8359 = distinct !DISubprogram(name: "fwrite", scope: !545, file: !545, line: 99, type: !8360, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8362)
!8360 = !DISubroutineType(types: !8361)
!8361 = !{!356, !8241, !356, !356, !8347}
!8362 = !{!8363, !8364, !8365, !8366}
!8363 = !DILocalVariable(name: "ptr", arg: 1, scope: !8359, file: !545, line: 99, type: !8241)
!8364 = !DILocalVariable(name: "size", arg: 2, scope: !8359, file: !545, line: 99, type: !356)
!8365 = !DILocalVariable(name: "nitems", arg: 3, scope: !8359, file: !545, line: 99, type: !356)
!8366 = !DILocalVariable(name: "stream", arg: 4, scope: !8359, file: !545, line: 100, type: !8347)
!8367 = !DILocation(line: 0, scope: !8359)
!8368 = !DILocation(line: 102, column: 9, scope: !8359)
!8369 = !DILocation(line: 102, column: 2, scope: !8359)
!8370 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8334, file: !8334, line: 96, type: !8360, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8371)
!8371 = !{!8372, !8373, !8374, !8375}
!8372 = !DILocalVariable(name: "ptr", arg: 1, scope: !8370, file: !8334, line: 96, type: !8241)
!8373 = !DILocalVariable(name: "size", arg: 2, scope: !8370, file: !8334, line: 96, type: !356)
!8374 = !DILocalVariable(name: "nitems", arg: 3, scope: !8370, file: !8334, line: 96, type: !356)
!8375 = !DILocalVariable(name: "stream", arg: 4, scope: !8370, file: !8334, line: 96, type: !8347)
!8376 = !DILocation(line: 0, scope: !8370)
!8377 = !DILocation(line: 107, column: 2, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8370, file: !8334, line: 107, column: 2)
!8379 = !{i64 2154903743}
!8380 = !DILocation(line: 108, column: 9, scope: !8370)
!8381 = !DILocation(line: 108, column: 2, scope: !8370)
!8382 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !545, file: !545, line: 56, type: !8360, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8383)
!8383 = !{!8384, !8385, !8386, !8387, !8388, !8389, !8390, !8391}
!8384 = !DILocalVariable(name: "ptr", arg: 1, scope: !8382, file: !545, line: 56, type: !8241)
!8385 = !DILocalVariable(name: "size", arg: 2, scope: !8382, file: !545, line: 56, type: !356)
!8386 = !DILocalVariable(name: "nitems", arg: 3, scope: !8382, file: !545, line: 57, type: !356)
!8387 = !DILocalVariable(name: "stream", arg: 4, scope: !8382, file: !545, line: 57, type: !8347)
!8388 = !DILocalVariable(name: "i", scope: !8382, file: !545, line: 59, type: !356)
!8389 = !DILocalVariable(name: "j", scope: !8382, file: !545, line: 60, type: !356)
!8390 = !DILocalVariable(name: "p", scope: !8382, file: !545, line: 61, type: !3028)
!8391 = !DILabel(scope: !8382, name: "done", file: !545, line: 82)
!8392 = !DILocation(line: 0, scope: !8382)
!8393 = !DILocation(line: 63, column: 14, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8382, file: !545, line: 63, column: 6)
!8395 = !DILocation(line: 63, column: 24, scope: !8394)
!8396 = !DILocation(line: 72, column: 3, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8382, file: !545, line: 70, column: 5)
!8398 = !DILocation(line: 0, scope: !8397)
!8399 = !DILocation(line: 73, column: 8, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8401, file: !545, line: 73, column: 8)
!8401 = distinct !DILexicalBlock(scope: !8397, file: !545, line: 72, column: 6)
!8402 = !DILocation(line: 73, column: 29, scope: !8400)
!8403 = !DILocation(line: 73, column: 27, scope: !8400)
!8404 = !DILocation(line: 73, column: 21, scope: !8400)
!8405 = !DILocation(line: 73, column: 33, scope: !8400)
!8406 = !DILocation(line: 73, column: 8, scope: !8401)
!8407 = !DILocation(line: 76, column: 5, scope: !8401)
!8408 = !DILocation(line: 77, column: 14, scope: !8397)
!8409 = !DILocation(line: 77, column: 3, scope: !8401)
!8410 = distinct !{!8410, !8396, !8411}
!8411 = !DILocation(line: 77, column: 17, scope: !8397)
!8412 = !DILocation(line: 79, column: 4, scope: !8397)
!8413 = !DILocation(line: 80, column: 13, scope: !8382)
!8414 = !DILocation(line: 80, column: 2, scope: !8397)
!8415 = distinct !{!8415, !8416, !8417}
!8416 = !DILocation(line: 70, column: 2, scope: !8382)
!8417 = !DILocation(line: 80, column: 16, scope: !8382)
!8418 = !DILocation(line: 82, column: 1, scope: !8382)
!8419 = !DILocation(line: 83, column: 17, scope: !8382)
!8420 = !DILocation(line: 83, column: 2, scope: !8382)
!8421 = !DILocation(line: 84, column: 1, scope: !8382)
!8422 = distinct !DISubprogram(name: "puts", scope: !545, file: !545, line: 106, type: !8423, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8425)
!8423 = !DISubroutineType(types: !8424)
!8424 = !{!103, !155}
!8425 = !{!8426}
!8426 = !DILocalVariable(name: "s", arg: 1, scope: !8422, file: !545, line: 106, type: !155)
!8427 = !DILocation(line: 0, scope: !8422)
!8428 = !DILocation(line: 108, column: 6, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8422, file: !545, line: 108, column: 6)
!8430 = !DILocation(line: 108, column: 23, scope: !8429)
!8431 = !DILocation(line: 108, column: 6, scope: !8422)
!8432 = !DILocation(line: 112, column: 9, scope: !8422)
!8433 = !DILocation(line: 112, column: 29, scope: !8422)
!8434 = !DILocation(line: 112, column: 2, scope: !8422)
!8435 = !DILocation(line: 113, column: 1, scope: !8422)
!8436 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !678, file: !678, line: 368, type: !731, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8437)
!8437 = !{!8438}
!8438 = !DILocalVariable(name: "dev", arg: 1, scope: !8436, file: !678, line: 368, type: !707)
!8439 = !DILocation(line: 0, scope: !8436)
!8440 = !DILocation(line: 370, column: 2, scope: !8436)
!8441 = !DILocation(line: 371, column: 1, scope: !8436)
!8442 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !678, file: !678, line: 243, type: !8443, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8445)
!8443 = !DISubroutineType(types: !8444)
!8444 = !{null, !103, !103, !707}
!8445 = !{!8446, !8447, !8448, !8449, !8451}
!8446 = !DILocalVariable(name: "min", arg: 1, scope: !8442, file: !678, line: 243, type: !103)
!8447 = !DILocalVariable(name: "max", arg: 2, scope: !8442, file: !678, line: 243, type: !103)
!8448 = !DILocalVariable(name: "dev", arg: 3, scope: !8442, file: !678, line: 243, type: !707)
!8449 = !DILocalVariable(name: "data", scope: !8442, file: !678, line: 245, type: !8450)
!8450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 32)
!8451 = !DILocalVariable(name: "line", scope: !8442, file: !678, line: 246, type: !103)
!8452 = !DILocation(line: 0, scope: !8442)
!8453 = !DILocation(line: 245, column: 38, scope: !8442)
!8454 = !DILocation(line: 249, column: 24, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8456, file: !678, line: 249, column: 2)
!8456 = distinct !DILexicalBlock(scope: !8442, file: !678, line: 249, column: 2)
!8457 = !DILocation(line: 249, column: 2, scope: !8456)
!8458 = !DILocation(line: 251, column: 7, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8460, file: !678, line: 251, column: 7)
!8460 = distinct !DILexicalBlock(scope: !8455, file: !678, line: 249, column: 39)
!8461 = !DILocation(line: 251, column: 7, scope: !8460)
!8462 = !DILocation(line: 253, column: 4, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8459, file: !678, line: 251, column: 36)
!8464 = !DILocation(line: 256, column: 24, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8463, file: !678, line: 256, column: 8)
!8466 = !DILocation(line: 256, column: 9, scope: !8465)
!8467 = !DILocation(line: 256, column: 8, scope: !8463)
!8468 = !DILocation(line: 260, column: 43, scope: !8463)
!8469 = !DILocation(line: 260, column: 4, scope: !8463)
!8470 = !DILocation(line: 261, column: 3, scope: !8463)
!8471 = !DILocation(line: 249, column: 35, scope: !8455)
!8472 = distinct !{!8472, !8457, !8473}
!8473 = !DILocation(line: 262, column: 2, scope: !8456)
!8474 = !DILocation(line: 263, column: 1, scope: !8442)
!8475 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !678, file: !678, line: 158, type: !118, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8476)
!8476 = !{!8477}
!8477 = !DILocalVariable(name: "line", arg: 1, scope: !8475, file: !678, line: 158, type: !103)
!8478 = !DILocation(line: 0, scope: !8475)
!8479 = !DILocation(line: 170, column: 38, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !678, line: 160, column: 17)
!8481 = distinct !DILexicalBlock(scope: !8475, file: !678, line: 160, column: 6)
!8482 = !DILocation(line: 170, column: 10, scope: !8480)
!8483 = !DILocation(line: 176, column: 1, scope: !8475)
!8484 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !678, file: !678, line: 183, type: !8485, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8487)
!8485 = !DISubroutineType(types: !8486)
!8486 = !{null, !103}
!8487 = !{!8488}
!8488 = !DILocalVariable(name: "line", arg: 1, scope: !8484, file: !678, line: 183, type: !103)
!8489 = !DILocation(line: 0, scope: !8484)
!8490 = !DILocation(line: 195, column: 28, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !678, line: 185, column: 17)
!8492 = distinct !DILexicalBlock(scope: !8484, file: !678, line: 185, column: 6)
!8493 = !DILocation(line: 195, column: 3, scope: !8491)
!8494 = !DILocation(line: 200, column: 1, scope: !8484)
!8495 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8496, file: !8496, line: 910, type: !6934, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8497)
!8496 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8497 = !{!8498}
!8498 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8495, file: !8496, line: 910, type: !132)
!8499 = !DILocation(line: 0, scope: !8495)
!8500 = !DILocation(line: 912, column: 3, scope: !8495)
!8501 = !DILocation(line: 913, column: 1, scope: !8495)
!8502 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8496, file: !8496, line: 834, type: !7850, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8503)
!8503 = !{!8504}
!8504 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8502, file: !8496, line: 834, type: !132)
!8505 = !DILocation(line: 0, scope: !8502)
!8506 = !DILocation(line: 836, column: 11, scope: !8502)
!8507 = !DILocation(line: 836, column: 40, scope: !8502)
!8508 = !DILocation(line: 836, column: 3, scope: !8502)
!8509 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !678, file: !678, line: 304, type: !731, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8510)
!8510 = !{!8511}
!8511 = !DILocalVariable(name: "dev", arg: 1, scope: !8509, file: !678, line: 304, type: !707)
!8512 = !DILocation(line: 0, scope: !8509)
!8513 = !DILocation(line: 306, column: 2, scope: !8509)
!8514 = !DILocation(line: 307, column: 1, scope: !8509)
!8515 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !678, file: !678, line: 299, type: !731, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8516)
!8516 = !{!8517}
!8517 = !DILocalVariable(name: "dev", arg: 1, scope: !8515, file: !678, line: 299, type: !707)
!8518 = !DILocation(line: 0, scope: !8515)
!8519 = !DILocation(line: 301, column: 2, scope: !8515)
!8520 = !DILocation(line: 302, column: 1, scope: !8515)
!8521 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !678, file: !678, line: 294, type: !731, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8522)
!8522 = !{!8523}
!8523 = !DILocalVariable(name: "dev", arg: 1, scope: !8521, file: !678, line: 294, type: !707)
!8524 = !DILocation(line: 0, scope: !8521)
!8525 = !DILocation(line: 296, column: 2, scope: !8521)
!8526 = !DILocation(line: 297, column: 1, scope: !8521)
!8527 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !678, file: !678, line: 397, type: !731, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8528)
!8528 = !{!8529}
!8529 = !DILocalVariable(name: "dev", arg: 1, scope: !8527, file: !678, line: 397, type: !707)
!8530 = !DILocation(line: 0, scope: !8527)
!8531 = !DILocation(line: 399, column: 2, scope: !8527)
!8532 = !DILocation(line: 400, column: 1, scope: !8527)
!8533 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !678, file: !678, line: 392, type: !731, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8534)
!8534 = !{!8535}
!8535 = !DILocalVariable(name: "dev", arg: 1, scope: !8533, file: !678, line: 392, type: !707)
!8536 = !DILocation(line: 0, scope: !8533)
!8537 = !DILocation(line: 394, column: 2, scope: !8533)
!8538 = !DILocation(line: 395, column: 1, scope: !8533)
!8539 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !678, file: !678, line: 289, type: !731, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8540)
!8540 = !{!8541}
!8541 = !DILocalVariable(name: "dev", arg: 1, scope: !8539, file: !678, line: 289, type: !707)
!8542 = !DILocation(line: 0, scope: !8539)
!8543 = !DILocation(line: 291, column: 2, scope: !8539)
!8544 = !DILocation(line: 292, column: 1, scope: !8539)
!8545 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !678, file: !678, line: 387, type: !731, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8546)
!8546 = !{!8547}
!8547 = !DILocalVariable(name: "dev", arg: 1, scope: !8545, file: !678, line: 387, type: !707)
!8548 = !DILocation(line: 0, scope: !8545)
!8549 = !DILocation(line: 389, column: 2, scope: !8545)
!8550 = !DILocation(line: 390, column: 1, scope: !8545)
!8551 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !678, file: !678, line: 382, type: !731, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8552)
!8552 = !{!8553}
!8553 = !DILocalVariable(name: "dev", arg: 1, scope: !8551, file: !678, line: 382, type: !707)
!8554 = !DILocation(line: 0, scope: !8551)
!8555 = !DILocation(line: 384, column: 2, scope: !8551)
!8556 = !DILocation(line: 385, column: 1, scope: !8551)
!8557 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !678, file: !678, line: 373, type: !731, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8558)
!8558 = !{!8559}
!8559 = !DILocalVariable(name: "dev", arg: 1, scope: !8557, file: !678, line: 373, type: !707)
!8560 = !DILocation(line: 0, scope: !8557)
!8561 = !DILocation(line: 375, column: 2, scope: !8557)
!8562 = !DILocation(line: 376, column: 1, scope: !8557)
!8563 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !678, file: !678, line: 284, type: !731, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8564)
!8564 = !{!8565}
!8565 = !DILocalVariable(name: "dev", arg: 1, scope: !8563, file: !678, line: 284, type: !707)
!8566 = !DILocation(line: 0, scope: !8563)
!8567 = !DILocation(line: 286, column: 2, scope: !8563)
!8568 = !DILocation(line: 287, column: 1, scope: !8563)
!8569 = distinct !DISubprogram(name: "stm32_exti_init", scope: !678, file: !678, line: 416, type: !705, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8570)
!8570 = !{!8571}
!8571 = !DILocalVariable(name: "dev", arg: 1, scope: !8569, file: !678, line: 416, type: !707)
!8572 = !DILocation(line: 0, scope: !8569)
!8573 = !DILocation(line: 418, column: 2, scope: !8569)
!8574 = !DILocation(line: 420, column: 2, scope: !8569)
!8575 = !DILocation(line: 0, scope: !730)
!8576 = !DILocation(line: 493, column: 2, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !730, file: !678, line: 493, column: 2)
!8578 = !DILocation(line: 497, column: 2, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !730, file: !678, line: 497, column: 2)
!8580 = !DILocation(line: 507, column: 2, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !730, file: !678, line: 507, column: 2)
!8582 = !DILocation(line: 512, column: 2, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !730, file: !678, line: 512, column: 2)
!8584 = !DILocation(line: 516, column: 2, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !730, file: !678, line: 516, column: 2)
!8586 = !DILocation(line: 523, column: 2, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !730, file: !678, line: 523, column: 2)
!8588 = !DILocation(line: 527, column: 2, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !730, file: !678, line: 527, column: 2)
!8590 = !DILocation(line: 581, column: 2, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !730, file: !678, line: 581, column: 2)
!8592 = !DILocation(line: 586, column: 2, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !730, file: !678, line: 586, column: 2)
!8594 = !DILocation(line: 591, column: 2, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !730, file: !678, line: 591, column: 2)
!8596 = !DILocation(line: 595, column: 2, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !730, file: !678, line: 595, column: 2)
!8598 = !DILocation(line: 607, column: 1, scope: !730)
!8599 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !678, file: !678, line: 112, type: !8485, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8600)
!8600 = !{!8601, !8602}
!8601 = !DILocalVariable(name: "line", arg: 1, scope: !8599, file: !678, line: 112, type: !103)
!8602 = !DILocalVariable(name: "irqnum", scope: !8599, file: !678, line: 114, type: !103)
!8603 = !DILocation(line: 0, scope: !8599)
!8604 = !DILocation(line: 121, column: 11, scope: !8599)
!8605 = !DILocation(line: 130, column: 26, scope: !8599)
!8606 = !DILocation(line: 130, column: 2, scope: !8599)
!8607 = !DILocation(line: 134, column: 2, scope: !8599)
!8608 = !DILocation(line: 135, column: 1, scope: !8599)
!8609 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8496, file: !8496, line: 268, type: !6934, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8610)
!8610 = !{!8611}
!8611 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8609, file: !8496, line: 268, type: !132)
!8612 = !DILocation(line: 0, scope: !8609)
!8613 = !DILocation(line: 270, column: 3, scope: !8609)
!8614 = !DILocation(line: 271, column: 1, scope: !8609)
!8615 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !678, file: !678, line: 137, type: !8485, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8616)
!8616 = !{!8617}
!8617 = !DILocalVariable(name: "line", arg: 1, scope: !8615, file: !678, line: 137, type: !103)
!8618 = !DILocation(line: 0, scope: !8615)
!8619 = !DILocation(line: 141, column: 11, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8615, file: !678, line: 141, column: 6)
!8621 = !DILocation(line: 141, column: 6, scope: !8615)
!8622 = !DILocation(line: 145, column: 28, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8620, file: !678, line: 141, column: 17)
!8624 = !DILocation(line: 145, column: 3, scope: !8623)
!8625 = !DILocation(line: 147, column: 2, scope: !8623)
!8626 = !DILocation(line: 151, column: 1, scope: !8615)
!8627 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8496, file: !8496, line: 309, type: !6934, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8628)
!8628 = !{!8629}
!8629 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8627, file: !8496, line: 309, type: !132)
!8630 = !DILocation(line: 0, scope: !8627)
!8631 = !DILocation(line: 311, column: 3, scope: !8627)
!8632 = !DILocation(line: 312, column: 1, scope: !8627)
!8633 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !678, file: !678, line: 202, type: !8634, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8636)
!8634 = !DISubroutineType(types: !8635)
!8635 = !{null, !103, !103}
!8636 = !{!8637, !8638}
!8637 = !DILocalVariable(name: "line", arg: 1, scope: !8633, file: !678, line: 202, type: !103)
!8638 = !DILocalVariable(name: "trigger", arg: 2, scope: !8633, file: !678, line: 202, type: !103)
!8639 = !DILocation(line: 0, scope: !8633)
!8640 = !DILocation(line: 211, column: 2, scope: !8633)
!8641 = !DILocation(line: 213, column: 36, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8633, file: !678, line: 211, column: 19)
!8643 = !DILocation(line: 213, column: 3, scope: !8642)
!8644 = !DILocation(line: 214, column: 3, scope: !8642)
!8645 = !DILocation(line: 215, column: 3, scope: !8642)
!8646 = !DILocation(line: 217, column: 35, scope: !8642)
!8647 = !DILocation(line: 217, column: 3, scope: !8642)
!8648 = !DILocation(line: 218, column: 3, scope: !8642)
!8649 = !DILocation(line: 219, column: 3, scope: !8642)
!8650 = !DILocation(line: 221, column: 36, scope: !8642)
!8651 = !DILocation(line: 221, column: 3, scope: !8642)
!8652 = !DILocation(line: 222, column: 3, scope: !8642)
!8653 = !DILocation(line: 223, column: 3, scope: !8642)
!8654 = !DILocation(line: 225, column: 35, scope: !8642)
!8655 = !DILocation(line: 225, column: 3, scope: !8642)
!8656 = !DILocation(line: 226, column: 3, scope: !8642)
!8657 = !DILocation(line: 227, column: 3, scope: !8642)
!8658 = !DILocation(line: 232, column: 1, scope: !8633)
!8659 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8496, file: !8496, line: 573, type: !6934, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8660)
!8660 = !{!8661}
!8661 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8659, file: !8496, line: 573, type: !132)
!8662 = !DILocation(line: 0, scope: !8659)
!8663 = !DILocation(line: 575, column: 3, scope: !8659)
!8664 = !DILocation(line: 577, column: 1, scope: !8659)
!8665 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8496, file: !8496, line: 703, type: !6934, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8666)
!8666 = !{!8667}
!8667 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8665, file: !8496, line: 703, type: !132)
!8668 = !DILocation(line: 0, scope: !8665)
!8669 = !DILocation(line: 705, column: 3, scope: !8665)
!8670 = !DILocation(line: 706, column: 1, scope: !8665)
!8671 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8496, file: !8496, line: 529, type: !6934, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8672)
!8672 = !{!8673}
!8673 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8671, file: !8496, line: 529, type: !132)
!8674 = !DILocation(line: 0, scope: !8671)
!8675 = !DILocation(line: 531, column: 3, scope: !8671)
!8676 = !DILocation(line: 533, column: 1, scope: !8671)
!8677 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8496, file: !8496, line: 661, type: !6934, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8678)
!8678 = !{!8679}
!8679 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8677, file: !8496, line: 661, type: !132)
!8680 = !DILocation(line: 0, scope: !8677)
!8681 = !DILocation(line: 663, column: 3, scope: !8677)
!8682 = !DILocation(line: 664, column: 1, scope: !8677)
!8683 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !678, file: !678, line: 433, type: !8684, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8686)
!8684 = !DISubroutineType(types: !8685)
!8685 = !{!103, !103, !718, !102}
!8686 = !{!8687, !8688, !8689, !8690, !8692}
!8687 = !DILocalVariable(name: "line", arg: 1, scope: !8683, file: !678, line: 433, type: !103)
!8688 = !DILocalVariable(name: "cb", arg: 2, scope: !8683, file: !678, line: 433, type: !718)
!8689 = !DILocalVariable(name: "arg", arg: 3, scope: !8683, file: !678, line: 433, type: !102)
!8690 = !DILocalVariable(name: "dev", scope: !8683, file: !678, line: 435, type: !8691)
!8691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!8692 = !DILocalVariable(name: "data", scope: !8683, file: !678, line: 436, type: !8450)
!8693 = !DILocation(line: 0, scope: !8683)
!8694 = !DILocation(line: 438, column: 21, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8683, file: !678, line: 438, column: 6)
!8696 = !DILocation(line: 438, column: 6, scope: !8695)
!8697 = !DILocation(line: 438, column: 6, scope: !8683)
!8698 = !DILocation(line: 442, column: 20, scope: !8683)
!8699 = !DILocation(line: 443, column: 17, scope: !8683)
!8700 = !DILocation(line: 443, column: 22, scope: !8683)
!8701 = !DILocation(line: 445, column: 2, scope: !8683)
!8702 = !DILocation(line: 446, column: 1, scope: !8683)
!8703 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !678, file: !678, line: 448, type: !8485, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8704)
!8704 = !{!8705, !8706, !8707}
!8705 = !DILocalVariable(name: "line", arg: 1, scope: !8703, file: !678, line: 448, type: !103)
!8706 = !DILocalVariable(name: "dev", scope: !8703, file: !678, line: 450, type: !8691)
!8707 = !DILocalVariable(name: "data", scope: !8703, file: !678, line: 451, type: !8450)
!8708 = !DILocation(line: 0, scope: !8703)
!8709 = !DILocation(line: 453, column: 17, scope: !8703)
!8710 = !DILocation(line: 453, column: 20, scope: !8703)
!8711 = !DILocation(line: 454, column: 17, scope: !8703)
!8712 = !DILocation(line: 454, column: 22, scope: !8703)
!8713 = !DILocation(line: 455, column: 1, scope: !8703)
!8714 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !861, file: !861, line: 183, type: !899, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8715)
!8715 = !{!8716, !8717, !8718, !8719, !8720}
!8716 = !DILocalVariable(name: "dev", arg: 1, scope: !8714, file: !861, line: 183, type: !890)
!8717 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8714, file: !861, line: 184, type: !901)
!8718 = !DILocalVariable(name: "pclken", scope: !8714, file: !861, line: 186, type: !851)
!8719 = !DILocalVariable(name: "reg", scope: !8714, file: !861, line: 187, type: !1619)
!8720 = !DILocalVariable(name: "reg_val", scope: !8714, file: !861, line: 188, type: !132)
!8721 = !DILocation(line: 0, scope: !8714)
!8722 = !DILocation(line: 192, column: 6, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8714, file: !861, line: 192, column: 6)
!8724 = !DILocation(line: 192, column: 6, scope: !8714)
!8725 = !DILocation(line: 197, column: 52, scope: !8714)
!8726 = !DILocation(line: 197, column: 8, scope: !8714)
!8727 = !DILocation(line: 198, column: 12, scope: !8714)
!8728 = !DILocation(line: 199, column: 21, scope: !8714)
!8729 = !DILocation(line: 199, column: 10, scope: !8714)
!8730 = !DILocation(line: 200, column: 7, scope: !8714)
!8731 = !DILocation(line: 202, column: 2, scope: !8714)
!8732 = !DILocation(line: 203, column: 1, scope: !8714)
!8733 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !861, file: !861, line: 205, type: !899, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8734)
!8734 = !{!8735, !8736, !8737, !8738, !8739}
!8735 = !DILocalVariable(name: "dev", arg: 1, scope: !8733, file: !861, line: 205, type: !890)
!8736 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8733, file: !861, line: 206, type: !901)
!8737 = !DILocalVariable(name: "pclken", scope: !8733, file: !861, line: 208, type: !851)
!8738 = !DILocalVariable(name: "reg", scope: !8733, file: !861, line: 209, type: !1619)
!8739 = !DILocalVariable(name: "reg_val", scope: !8733, file: !861, line: 210, type: !132)
!8740 = !DILocation(line: 0, scope: !8733)
!8741 = !DILocation(line: 214, column: 6, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8733, file: !861, line: 214, column: 6)
!8743 = !DILocation(line: 214, column: 6, scope: !8733)
!8744 = !DILocation(line: 219, column: 52, scope: !8733)
!8745 = !DILocation(line: 219, column: 8, scope: !8733)
!8746 = !DILocation(line: 220, column: 12, scope: !8733)
!8747 = !DILocation(line: 221, column: 22, scope: !8733)
!8748 = !DILocation(line: 221, column: 13, scope: !8733)
!8749 = !DILocation(line: 221, column: 10, scope: !8733)
!8750 = !DILocation(line: 222, column: 7, scope: !8733)
!8751 = !DILocation(line: 224, column: 2, scope: !8733)
!8752 = !DILocation(line: 225, column: 1, scope: !8733)
!8753 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !861, file: !861, line: 262, type: !915, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8754)
!8754 = !{!8755, !8756, !8757, !8758, !8759, !8760, !8761, !8762}
!8755 = !DILocalVariable(name: "clock", arg: 1, scope: !8753, file: !861, line: 262, type: !890)
!8756 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8753, file: !861, line: 263, type: !901)
!8757 = !DILocalVariable(name: "rate", arg: 3, scope: !8753, file: !861, line: 264, type: !857)
!8758 = !DILocalVariable(name: "pclken", scope: !8753, file: !861, line: 266, type: !851)
!8759 = !DILocalVariable(name: "ahb_clock", scope: !8753, file: !861, line: 273, type: !132)
!8760 = !DILocalVariable(name: "apb1_clock", scope: !8753, file: !861, line: 274, type: !132)
!8761 = !DILocalVariable(name: "apb2_clock", scope: !8753, file: !861, line: 276, type: !132)
!8762 = !DILocalVariable(name: "ahb3_clock", scope: !8753, file: !861, line: 286, type: !132)
!8763 = !DILocation(line: 0, scope: !8753)
!8764 = !DILocation(line: 273, column: 23, scope: !8753)
!8765 = !DILocation(line: 299, column: 18, scope: !8753)
!8766 = !DILocation(line: 299, column: 2, scope: !8753)
!8767 = !DILocation(line: 274, column: 24, scope: !8753)
!8768 = !DILocation(line: 319, column: 3, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8753, file: !861, line: 299, column: 23)
!8770 = !DILocation(line: 276, column: 24, scope: !8753)
!8771 = !DILocation(line: 323, column: 3, scope: !8769)
!8772 = !DILocation(line: 346, column: 33, scope: !8769)
!8773 = !DILocation(line: 346, column: 11, scope: !8769)
!8774 = !DILocation(line: 350, column: 3, scope: !8769)
!8775 = !DILocation(line: 354, column: 33, scope: !8769)
!8776 = !DILocation(line: 354, column: 11, scope: !8769)
!8777 = !DILocation(line: 358, column: 3, scope: !8769)
!8778 = !DILocation(line: 374, column: 3, scope: !8769)
!8779 = !DILocation(line: 379, column: 3, scope: !8769)
!8780 = !DILocation(line: 0, scope: !8769)
!8781 = !DILocation(line: 396, column: 1, scope: !8753)
!8782 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !861, file: !861, line: 227, type: !931, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8783)
!8783 = !{!8784, !8785, !8786, !8787, !8788, !8789, !8790, !8791}
!8784 = !DILocalVariable(name: "dev", arg: 1, scope: !8782, file: !861, line: 227, type: !890)
!8785 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8782, file: !861, line: 228, type: !901)
!8786 = !DILocalVariable(name: "data", arg: 3, scope: !8782, file: !861, line: 229, type: !102)
!8787 = !DILocalVariable(name: "pclken", scope: !8782, file: !861, line: 233, type: !851)
!8788 = !DILocalVariable(name: "reg", scope: !8782, file: !861, line: 234, type: !1619)
!8789 = !DILocalVariable(name: "reg_val", scope: !8782, file: !861, line: 235, type: !132)
!8790 = !DILocalVariable(name: "dt_val", scope: !8782, file: !861, line: 235, type: !132)
!8791 = !DILocalVariable(name: "err", scope: !8782, file: !861, line: 236, type: !103)
!8792 = !DILocation(line: 0, scope: !8782)
!8793 = !DILocation(line: 241, column: 30, scope: !8782)
!8794 = !DILocation(line: 241, column: 8, scope: !8782)
!8795 = !DILocation(line: 242, column: 10, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8782, file: !861, line: 242, column: 6)
!8797 = !DILocation(line: 242, column: 6, scope: !8782)
!8798 = !DILocation(line: 247, column: 11, scope: !8782)
!8799 = !DILocation(line: 248, column: 6, scope: !8782)
!8800 = !DILocation(line: 247, column: 44, scope: !8782)
!8801 = !DILocation(line: 250, column: 6, scope: !8782)
!8802 = !DILocation(line: 249, column: 52, scope: !8782)
!8803 = !DILocation(line: 249, column: 8, scope: !8782)
!8804 = !DILocation(line: 251, column: 12, scope: !8782)
!8805 = !DILocation(line: 252, column: 10, scope: !8782)
!8806 = !DILocation(line: 253, column: 7, scope: !8782)
!8807 = !DILocation(line: 255, column: 2, scope: !8782)
!8808 = !DILocation(line: 260, column: 1, scope: !8782)
!8809 = distinct !DISubprogram(name: "enabled_clock", scope: !861, file: !861, line: 100, type: !8810, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8812)
!8810 = !DISubroutineType(types: !8811)
!8811 = !{!103, !132}
!8812 = !{!8813, !8814}
!8813 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8809, file: !861, line: 100, type: !132)
!8814 = !DILocalVariable(name: "r", scope: !8809, file: !861, line: 102, type: !103)
!8815 = !DILocation(line: 0, scope: !8809)
!8816 = !DILocation(line: 104, column: 2, scope: !8809)
!8817 = !DILocation(line: 180, column: 2, scope: !8809)
!8818 = !DILocation(line: 181, column: 1, scope: !8809)
!8819 = distinct !DISubprogram(name: "get_bus_clock", scope: !861, file: !861, line: 79, type: !8820, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8822)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{!132, !132, !132}
!8822 = !{!8823, !8824}
!8823 = !DILocalVariable(name: "clock", arg: 1, scope: !8819, file: !861, line: 79, type: !132)
!8824 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8819, file: !861, line: 79, type: !132)
!8825 = !DILocation(line: 0, scope: !8819)
!8826 = !DILocation(line: 81, column: 15, scope: !8819)
!8827 = !DILocation(line: 81, column: 2, scope: !8819)
!8828 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !861, file: !861, line: 68, type: !8829, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8831)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{!132, !132, !103, !103, !103}
!8831 = !{!8832, !8833, !8834, !8835}
!8832 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8828, file: !861, line: 68, type: !132)
!8833 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8828, file: !861, line: 69, type: !103)
!8834 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8828, file: !861, line: 70, type: !103)
!8835 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8828, file: !861, line: 71, type: !103)
!8836 = !DILocation(line: 0, scope: !8828)
!8837 = !DILocation(line: 75, column: 22, scope: !8828)
!8838 = !DILocation(line: 76, column: 13, scope: !8828)
!8839 = !DILocation(line: 75, column: 34, scope: !8828)
!8840 = !DILocation(line: 75, column: 2, scope: !8828)
!8841 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !861, file: !861, line: 641, type: !888, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8842)
!8842 = !{!8843, !8844, !8845}
!8843 = !DILocalVariable(name: "dev", arg: 1, scope: !8841, file: !861, line: 641, type: !890)
!8844 = !DILocalVariable(name: "old_flash_freq", scope: !8841, file: !861, line: 664, type: !132)
!8845 = !DILocalVariable(name: "new_flash_freq", scope: !8841, file: !861, line: 665, type: !132)
!8846 = !DILocation(line: 0, scope: !8841)
!8847 = !DILocation(line: 646, column: 2, scope: !8841)
!8848 = !DILocation(line: 667, column: 19, scope: !8841)
!8849 = !DILocation(line: 674, column: 21, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8841, file: !861, line: 674, column: 6)
!8851 = !DILocation(line: 674, column: 6, scope: !8841)
!8852 = !DILocation(line: 675, column: 3, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8850, file: !861, line: 674, column: 59)
!8854 = !DILocation(line: 676, column: 2, scope: !8853)
!8855 = !DILocation(line: 680, column: 2, scope: !8841)
!8856 = !DILocation(line: 683, column: 2, scope: !8841)
!8857 = !DILocation(line: 690, column: 3, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !861, line: 689, column: 9)
!8859 = distinct !DILexicalBlock(scope: !8841, file: !861, line: 685, column: 6)
!8860 = !DILocation(line: 695, column: 2, scope: !8841)
!8861 = !DILocation(line: 696, column: 2, scope: !8841)
!8862 = !DILocation(line: 696, column: 9, scope: !8841)
!8863 = !DILocation(line: 696, column: 34, scope: !8841)
!8864 = distinct !{!8864, !8861, !8865}
!8865 = !DILocation(line: 697, column: 2, scope: !8841)
!8866 = !DILocation(line: 720, column: 21, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8841, file: !861, line: 720, column: 6)
!8868 = !DILocation(line: 720, column: 6, scope: !8841)
!8869 = !DILocation(line: 721, column: 3, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8867, file: !861, line: 720, column: 60)
!8871 = !DILocation(line: 722, column: 2, scope: !8870)
!8872 = !DILocation(line: 725, column: 18, scope: !8841)
!8873 = !DILocation(line: 728, column: 2, scope: !8841)
!8874 = !DILocation(line: 730, column: 2, scope: !8841)
!8875 = !DILocation(line: 745, column: 2, scope: !8841)
!8876 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8877, file: !8877, line: 3275, type: !6924, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8877 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8878 = !DILocation(line: 3277, column: 21, scope: !8876)
!8879 = !DILocation(line: 3277, column: 3, scope: !8876)
!8880 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !861, file: !861, line: 507, type: !3256, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8881 = !DILocation(line: 516, column: 4, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8883, file: !861, line: 515, column: 10)
!8883 = distinct !DILexicalBlock(scope: !8884, file: !861, line: 513, column: 7)
!8884 = distinct !DILexicalBlock(scope: !8885, file: !861, line: 510, column: 37)
!8885 = distinct !DILexicalBlock(scope: !8880, file: !861, line: 510, column: 6)
!8886 = !DILocation(line: 526, column: 3, scope: !8884)
!8887 = !DILocation(line: 527, column: 3, scope: !8884)
!8888 = !DILocation(line: 527, column: 10, scope: !8884)
!8889 = !DILocation(line: 527, column: 31, scope: !8884)
!8890 = distinct !{!8890, !8887, !8891}
!8891 = !DILocation(line: 529, column: 3, scope: !8884)
!8892 = !DILocation(line: 583, column: 3, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8894, file: !861, line: 577, column: 37)
!8894 = distinct !DILexicalBlock(scope: !8880, file: !861, line: 577, column: 6)
!8895 = !DILocation(line: 584, column: 3, scope: !8893)
!8896 = !DILocation(line: 584, column: 10, scope: !8893)
!8897 = !DILocation(line: 584, column: 31, scope: !8893)
!8898 = distinct !{!8898, !8895, !8899}
!8899 = !DILocation(line: 585, column: 3, scope: !8893)
!8900 = !DILocation(line: 627, column: 1, scope: !8880)
!8901 = distinct !DISubprogram(name: "set_up_plls", scope: !861, file: !861, line: 448, type: !3256, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8902 = !DILocation(line: 460, column: 6, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8901, file: !861, line: 460, column: 6)
!8904 = !DILocation(line: 460, column: 31, scope: !8903)
!8905 = !DILocation(line: 460, column: 6, scope: !8901)
!8906 = !DILocation(line: 461, column: 3, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8903, file: !861, line: 460, column: 67)
!8908 = !DILocation(line: 462, column: 3, scope: !8907)
!8909 = !DILocation(line: 463, column: 2, scope: !8907)
!8910 = !DILocation(line: 464, column: 2, scope: !8901)
!8911 = !DILocation(line: 488, column: 2, scope: !8901)
!8912 = !DILocation(line: 492, column: 2, scope: !8901)
!8913 = !DILocation(line: 496, column: 2, scope: !8901)
!8914 = !DILocation(line: 499, column: 2, scope: !8901)
!8915 = !DILocation(line: 500, column: 2, scope: !8901)
!8916 = !DILocation(line: 500, column: 9, scope: !8901)
!8917 = !DILocation(line: 500, column: 30, scope: !8901)
!8918 = distinct !{!8918, !8915, !8919}
!8919 = !DILocation(line: 502, column: 2, scope: !8901)
!8920 = !DILocation(line: 505, column: 1, scope: !8901)
!8921 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8877, file: !8877, line: 3224, type: !6934, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8922)
!8922 = !{!8923}
!8923 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8921, file: !8877, line: 3224, type: !132)
!8924 = !DILocation(line: 0, scope: !8921)
!8925 = !DILocation(line: 3226, column: 3, scope: !8921)
!8926 = !DILocation(line: 3227, column: 1, scope: !8921)
!8927 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8877, file: !8877, line: 3188, type: !6934, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8928)
!8928 = !{!8929}
!8929 = !DILocalVariable(name: "Source", arg: 1, scope: !8927, file: !8877, line: 3188, type: !132)
!8930 = !DILocation(line: 0, scope: !8927)
!8931 = !DILocation(line: 3190, column: 3, scope: !8927)
!8932 = !DILocation(line: 3191, column: 1, scope: !8927)
!8933 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8877, file: !8877, line: 3204, type: !6924, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8934 = !DILocation(line: 3206, column: 21, scope: !8933)
!8935 = !DILocation(line: 3206, column: 3, scope: !8933)
!8936 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8877, file: !8877, line: 3240, type: !6934, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8937)
!8937 = !{!8938}
!8938 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8936, file: !8877, line: 3240, type: !132)
!8939 = !DILocation(line: 0, scope: !8936)
!8940 = !DILocation(line: 3242, column: 3, scope: !8936)
!8941 = !DILocation(line: 3243, column: 1, scope: !8936)
!8942 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8877, file: !8877, line: 3256, type: !6934, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !8943)
!8943 = !{!8944}
!8944 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8942, file: !8877, line: 3256, type: !132)
!8945 = !DILocation(line: 0, scope: !8942)
!8946 = !DILocation(line: 3258, column: 3, scope: !8942)
!8947 = !DILocation(line: 3259, column: 1, scope: !8942)
!8948 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !861, file: !861, line: 409, type: !3256, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8949 = !DILocation(line: 412, column: 6, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8948, file: !861, line: 412, column: 6)
!8951 = !DILocation(line: 412, column: 27, scope: !8950)
!8952 = !DILocation(line: 412, column: 6, scope: !8948)
!8953 = !DILocation(line: 414, column: 3, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8950, file: !861, line: 412, column: 33)
!8955 = !DILocation(line: 415, column: 3, scope: !8954)
!8956 = !DILocation(line: 415, column: 10, scope: !8954)
!8957 = !DILocation(line: 415, column: 31, scope: !8954)
!8958 = distinct !{!8958, !8955, !8959}
!8959 = !DILocation(line: 417, column: 3, scope: !8954)
!8960 = !DILocation(line: 421, column: 2, scope: !8948)
!8961 = !DILocation(line: 422, column: 2, scope: !8948)
!8962 = !DILocation(line: 422, column: 9, scope: !8948)
!8963 = !DILocation(line: 422, column: 34, scope: !8948)
!8964 = distinct !{!8964, !8961, !8965}
!8965 = !DILocation(line: 423, column: 2, scope: !8948)
!8966 = !DILocation(line: 424, column: 1, scope: !8948)
!8967 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8877, file: !8877, line: 4195, type: !3256, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8968 = !DILocation(line: 4197, column: 3, scope: !8967)
!8969 = !DILocation(line: 4198, column: 1, scope: !8967)
!8970 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8877, file: !8877, line: 4184, type: !3256, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8971 = !DILocation(line: 4186, column: 3, scope: !8970)
!8972 = !DILocation(line: 4187, column: 1, scope: !8970)
!8973 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8877, file: !8877, line: 4205, type: !6924, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8974 = !DILocation(line: 4207, column: 11, scope: !8973)
!8975 = !DILocation(line: 4207, column: 44, scope: !8973)
!8976 = !DILocation(line: 4207, column: 3, scope: !8973)
!8977 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8877, file: !8877, line: 3007, type: !6924, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8978 = !DILocation(line: 3009, column: 11, scope: !8977)
!8979 = !DILocation(line: 3009, column: 44, scope: !8977)
!8980 = !DILocation(line: 3009, column: 3, scope: !8977)
!8981 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8877, file: !8877, line: 2987, type: !3256, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8982 = !DILocation(line: 2989, column: 3, scope: !8981)
!8983 = !DILocation(line: 2990, column: 1, scope: !8981)
!8984 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8877, file: !8877, line: 2939, type: !3256, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8985 = !DILocation(line: 2941, column: 3, scope: !8984)
!8986 = !DILocation(line: 2942, column: 1, scope: !8984)
!8987 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8877, file: !8877, line: 2949, type: !3256, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8988 = !DILocation(line: 2951, column: 3, scope: !8987)
!8989 = !DILocation(line: 2952, column: 1, scope: !8987)
!8990 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8877, file: !8877, line: 2969, type: !6924, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8991 = !DILocation(line: 2971, column: 11, scope: !8990)
!8992 = !DILocation(line: 2971, column: 44, scope: !8990)
!8993 = !DILocation(line: 2971, column: 3, scope: !8990)
!8994 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8877, file: !8877, line: 3143, type: !3256, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8995 = !DILocation(line: 3145, column: 3, scope: !8994)
!8996 = !DILocation(line: 3146, column: 1, scope: !8994)
!8997 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8877, file: !8877, line: 3163, type: !6924, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !800, retainedNodes: !473)
!8998 = !DILocation(line: 3165, column: 11, scope: !8997)
!8999 = !DILocation(line: 3165, column: 46, scope: !8997)
!9000 = !DILocation(line: 3165, column: 3, scope: !8997)
!9001 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9002, file: !9002, line: 40, type: !6924, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !473)
!9002 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9003 = !DILocation(line: 45, column: 3, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !9002, line: 44, column: 44)
!9005 = distinct !DILexicalBlock(scope: !9006, file: !9002, line: 44, column: 13)
!9006 = distinct !DILexicalBlock(scope: !9001, file: !9002, line: 42, column: 6)
!9007 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9002, file: !9002, line: 56, type: !3256, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !473)
!9008 = !DILocation(line: 58, column: 2, scope: !9007)
!9009 = !DILocation(line: 62, column: 1, scope: !9007)
!9010 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8877, file: !8877, line: 4304, type: !9011, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !9013)
!9011 = !DISubroutineType(types: !9012)
!9012 = !{null, !132, !132, !132, !132}
!9013 = !{!9014, !9015, !9016, !9017}
!9014 = !DILocalVariable(name: "Source", arg: 1, scope: !9010, file: !8877, line: 4304, type: !132)
!9015 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9010, file: !8877, line: 4304, type: !132)
!9016 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9010, file: !8877, line: 4304, type: !132)
!9017 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9010, file: !8877, line: 4304, type: !132)
!9018 = !DILocation(line: 0, scope: !9010)
!9019 = !DILocation(line: 4306, column: 3, scope: !9010)
!9020 = !DILocation(line: 4308, column: 3, scope: !9010)
!9021 = !DILocation(line: 4312, column: 1, scope: !9010)
!9022 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9002, file: !9002, line: 69, type: !3256, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !473)
!9023 = !DILocation(line: 72, column: 2, scope: !9022)
!9024 = !DILocation(line: 73, column: 1, scope: !9022)
!9025 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9026, file: !9026, line: 1185, type: !6934, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !9027)
!9026 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9027 = !{!9028, !9029}
!9028 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9025, file: !9026, line: 1185, type: !132)
!9029 = !DILocalVariable(name: "tmpreg", scope: !9025, file: !9026, line: 1187, type: !131)
!9030 = !DILocation(line: 0, scope: !9025)
!9031 = !DILocation(line: 1187, column: 3, scope: !9025)
!9032 = !DILocation(line: 1187, column: 17, scope: !9025)
!9033 = !DILocation(line: 1188, column: 3, scope: !9025)
!9034 = !DILocation(line: 1190, column: 12, scope: !9025)
!9035 = !DILocation(line: 1190, column: 10, scope: !9025)
!9036 = !DILocation(line: 1191, column: 9, scope: !9025)
!9037 = !DILocation(line: 1192, column: 1, scope: !9025)
!9038 = distinct !DISubprogram(name: "uart_console_init", scope: !939, file: !939, line: 588, type: !976, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9039)
!9039 = !{!9040}
!9040 = !DILocalVariable(name: "arg", arg: 1, scope: !9038, file: !939, line: 588, type: !955)
!9041 = !DILocation(line: 0, scope: !9038)
!9042 = !DILocation(line: 593, column: 7, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9038, file: !939, line: 593, column: 6)
!9044 = !DILocation(line: 593, column: 6, scope: !9038)
!9045 = !DILocation(line: 597, column: 2, scope: !9038)
!9046 = !DILocation(line: 599, column: 2, scope: !9038)
!9047 = !DILocation(line: 600, column: 1, scope: !9038)
!9048 = distinct !DISubprogram(name: "device_is_ready", scope: !6684, file: !6684, line: 47, type: !9049, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9051)
!9049 = !DISubroutineType(types: !9050)
!9050 = !{!166, !955}
!9051 = !{!9052}
!9052 = !DILocalVariable(name: "dev", arg: 1, scope: !9048, file: !6684, line: 47, type: !955)
!9053 = !DILocation(line: 0, scope: !9048)
!9054 = !DILocation(line: 55, column: 2, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9048, file: !6684, line: 55, column: 2)
!9056 = !{i64 2155043653}
!9057 = !DILocation(line: 56, column: 9, scope: !9048)
!9058 = !DILocation(line: 56, column: 2, scope: !9048)
!9059 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !939, file: !939, line: 573, type: !3256, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !473)
!9060 = !DILocation(line: 576, column: 2, scope: !9059)
!9061 = !DILocation(line: 579, column: 2, scope: !9059)
!9062 = !DILocation(line: 581, column: 1, scope: !9059)
!9063 = distinct !DISubprogram(name: "console_out", scope: !939, file: !939, line: 77, type: !118, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9064)
!9064 = !{!9065, !9066}
!9065 = !DILocalVariable(name: "c", arg: 1, scope: !9063, file: !939, line: 77, type: !103)
!9066 = !DILocalVariable(name: "handled_by_debug_server", scope: !9063, file: !939, line: 81, type: !103)
!9067 = !DILocation(line: 0, scope: !9063)
!9068 = !DILocation(line: 81, column: 32, scope: !9063)
!9069 = !DILocation(line: 83, column: 6, scope: !9063)
!9070 = !DILocation(line: 89, column: 11, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9063, file: !939, line: 89, column: 6)
!9072 = !DILocation(line: 89, column: 6, scope: !9063)
!9073 = !DILocation(line: 90, column: 3, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9071, file: !939, line: 89, column: 17)
!9075 = !DILocation(line: 91, column: 2, scope: !9074)
!9076 = !DILocation(line: 92, column: 2, scope: !9063)
!9077 = !DILocation(line: 94, column: 2, scope: !9063)
!9078 = !DILocation(line: 95, column: 1, scope: !9063)
!9079 = distinct !DISubprogram(name: "uart_poll_out", scope: !5945, file: !5945, line: 95, type: !972, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9080)
!9080 = !{!9081, !9082}
!9081 = !DILocalVariable(name: "dev", arg: 1, scope: !9079, file: !5945, line: 95, type: !955)
!9082 = !DILocalVariable(name: "out_char", arg: 2, scope: !9079, file: !5945, line: 95, type: !164)
!9083 = !DILocation(line: 0, scope: !9079)
!9084 = !DILocation(line: 105, column: 2, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9079, file: !5945, line: 105, column: 2)
!9086 = !{i64 2155126898}
!9087 = !DILocation(line: 106, column: 2, scope: !9079)
!9088 = !DILocation(line: 107, column: 1, scope: !9079)
!9089 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !212, file: !212, line: 574, type: !972, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9090)
!9090 = !{!9091, !9092, !9093}
!9091 = !DILocalVariable(name: "dev", arg: 1, scope: !9089, file: !212, line: 574, type: !955)
!9092 = !DILocalVariable(name: "out_char", arg: 2, scope: !9089, file: !212, line: 575, type: !164)
!9093 = !DILocalVariable(name: "api", scope: !9089, file: !212, line: 577, type: !947)
!9094 = !DILocation(line: 0, scope: !9089)
!9095 = !DILocation(line: 578, column: 40, scope: !9089)
!9096 = !DILocation(line: 580, column: 7, scope: !9089)
!9097 = !DILocation(line: 580, column: 2, scope: !9089)
!9098 = !DILocation(line: 581, column: 1, scope: !9089)
!9099 = distinct !DISubprogram(name: "debug_hook_out_nop", scope: !939, file: !939, line: 49, type: !1089, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9100)
!9100 = !{!9101}
!9101 = !DILocalVariable(name: "c", arg: 1, scope: !9099, file: !939, line: 49, type: !108)
!9102 = !DILocation(line: 0, scope: !9099)
!9103 = !DILocation(line: 51, column: 2, scope: !9099)
!9104 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !9049, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9105)
!9105 = !{!9106}
!9106 = !DILocalVariable(name: "dev", arg: 1, scope: !9104, file: !152, line: 730, type: !955)
!9107 = !DILocation(line: 0, scope: !9104)
!9108 = !DILocation(line: 732, column: 9, scope: !9104)
!9109 = !DILocation(line: 732, column: 2, scope: !9104)
!9110 = distinct !DISubprogram(name: "uart_console_in_debug_hook_install", scope: !939, file: !939, line: 44, type: !9111, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9113)
!9111 = !DISubroutineType(types: !9112)
!9112 = !{null, !1131}
!9113 = !{!9114}
!9114 = !DILocalVariable(name: "hook", arg: 1, scope: !9110, file: !939, line: 44, type: !1131)
!9115 = !DILocation(line: 0, scope: !9110)
!9116 = !DILocation(line: 46, column: 16, scope: !9110)
!9117 = !DILocation(line: 47, column: 1, scope: !9110)
!9118 = distinct !DISubprogram(name: "uart_console_out_debug_hook_install", scope: !939, file: !939, line: 55, type: !9119, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9121)
!9119 = !DISubroutineType(types: !9120)
!9120 = !{null, !1086}
!9121 = !{!9122}
!9122 = !DILocalVariable(name: "hook", arg: 1, scope: !9118, file: !939, line: 55, type: !1086)
!9123 = !DILocation(line: 0, scope: !9118)
!9124 = !DILocation(line: 57, column: 17, scope: !9118)
!9125 = !DILocation(line: 58, column: 1, scope: !9118)
!9126 = distinct !DISubprogram(name: "uart_register_input", scope: !939, file: !939, line: 549, type: !9127, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9129)
!9127 = !DISubroutineType(types: !9128)
!9128 = !{null, !1036, !1036, !1080}
!9129 = !{!9130, !9131, !9132}
!9130 = !DILocalVariable(name: "avail", arg: 1, scope: !9126, file: !939, line: 549, type: !1036)
!9131 = !DILocalVariable(name: "lines", arg: 2, scope: !9126, file: !939, line: 549, type: !1036)
!9132 = !DILocalVariable(name: "completion", arg: 3, scope: !9126, file: !939, line: 550, type: !1080)
!9133 = !DILocation(line: 0, scope: !9126)
!9134 = !DILocation(line: 552, column: 14, scope: !9126)
!9135 = !DILocation(line: 553, column: 14, scope: !9126)
!9136 = !DILocation(line: 554, column: 16, scope: !9126)
!9137 = !DILocation(line: 556, column: 2, scope: !9126)
!9138 = !DILocation(line: 557, column: 1, scope: !9126)
!9139 = distinct !DISubprogram(name: "console_input_init", scope: !939, file: !939, line: 532, type: !3256, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9140)
!9140 = !{!9141}
!9141 = !DILocalVariable(name: "c", scope: !9139, file: !939, line: 534, type: !163)
!9142 = !DILocation(line: 534, column: 2, scope: !9139)
!9143 = !DILocation(line: 536, column: 2, scope: !9139)
!9144 = !DILocation(line: 537, column: 2, scope: !9139)
!9145 = !DILocation(line: 539, column: 2, scope: !9139)
!9146 = !DILocation(line: 542, column: 9, scope: !9139)
!9147 = !DILocation(line: 542, column: 2, scope: !9139)
!9148 = !DILocation(line: 0, scope: !9139)
!9149 = !DILocation(line: 543, column: 3, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9139, file: !939, line: 542, column: 46)
!9151 = distinct !{!9151, !9147, !9152}
!9152 = !DILocation(line: 544, column: 2, scope: !9139)
!9153 = !DILocation(line: 546, column: 2, scope: !9139)
!9154 = !DILocation(line: 547, column: 1, scope: !9139)
!9155 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5945, file: !5945, line: 265, type: !1006, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9156)
!9156 = !{!9157}
!9157 = !DILocalVariable(name: "dev", arg: 1, scope: !9155, file: !5945, line: 265, type: !955)
!9158 = !DILocation(line: 0, scope: !9155)
!9159 = !DILocation(line: 274, column: 2, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9155, file: !5945, line: 274, column: 2)
!9161 = !{i64 2155127374}
!9162 = !DILocation(line: 275, column: 2, scope: !9155)
!9163 = !DILocation(line: 276, column: 1, scope: !9155)
!9164 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5945, file: !5945, line: 217, type: !1006, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9165)
!9165 = !{!9166}
!9166 = !DILocalVariable(name: "dev", arg: 1, scope: !9164, file: !5945, line: 217, type: !955)
!9167 = !DILocation(line: 0, scope: !9164)
!9168 = !DILocation(line: 226, column: 2, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9164, file: !5945, line: 226, column: 2)
!9170 = !{i64 2155127238}
!9171 = !DILocation(line: 227, column: 2, scope: !9164)
!9172 = !DILocation(line: 228, column: 1, scope: !9164)
!9173 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !212, file: !212, line: 1190, type: !9174, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9176)
!9174 = !DISubroutineType(types: !9175)
!9175 = !{null, !955, !1022}
!9176 = !{!9177, !9178}
!9177 = !DILocalVariable(name: "dev", arg: 1, scope: !9173, file: !212, line: 1190, type: !955)
!9178 = !DILocalVariable(name: "cb", arg: 2, scope: !9173, file: !212, line: 1191, type: !1022)
!9179 = !DILocation(line: 0, scope: !9173)
!9180 = !DILocation(line: 1193, column: 2, scope: !9173)
!9181 = !DILocation(line: 1194, column: 1, scope: !9173)
!9182 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !212, file: !212, line: 1024, type: !976, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9183)
!9183 = !{!9184, !9185}
!9184 = !DILocalVariable(name: "dev", arg: 1, scope: !9182, file: !212, line: 1024, type: !955)
!9185 = !DILocalVariable(name: "api", scope: !9182, file: !212, line: 1027, type: !947)
!9186 = !DILocation(line: 0, scope: !9182)
!9187 = !DILocation(line: 1028, column: 40, scope: !9182)
!9188 = !DILocation(line: 1030, column: 11, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9182, file: !212, line: 1030, column: 6)
!9190 = !DILocation(line: 1030, column: 24, scope: !9189)
!9191 = !DILocation(line: 1030, column: 6, scope: !9182)
!9192 = !DILocation(line: 1033, column: 9, scope: !9182)
!9193 = !DILocation(line: 1033, column: 2, scope: !9182)
!9194 = !DILocation(line: 1038, column: 1, scope: !9182)
!9195 = distinct !DISubprogram(name: "uart_fifo_read", scope: !212, file: !212, line: 785, type: !1002, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9196)
!9196 = !{!9197, !9198, !9199, !9200}
!9197 = !DILocalVariable(name: "dev", arg: 1, scope: !9195, file: !212, line: 785, type: !955)
!9198 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9195, file: !212, line: 785, type: !270)
!9199 = !DILocalVariable(name: "size", arg: 3, scope: !9195, file: !212, line: 786, type: !271)
!9200 = !DILocalVariable(name: "api", scope: !9195, file: !212, line: 789, type: !947)
!9201 = !DILocation(line: 0, scope: !9195)
!9202 = !DILocation(line: 790, column: 40, scope: !9195)
!9203 = !DILocation(line: 792, column: 11, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9195, file: !212, line: 792, column: 6)
!9205 = !DILocation(line: 792, column: 21, scope: !9204)
!9206 = !DILocation(line: 792, column: 6, scope: !9195)
!9207 = !DILocation(line: 796, column: 9, scope: !9195)
!9208 = !DILocation(line: 796, column: 2, scope: !9195)
!9209 = !DILocation(line: 803, column: 1, scope: !9195)
!9210 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5945, file: !5945, line: 241, type: !1006, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9211)
!9211 = !{!9212}
!9212 = !DILocalVariable(name: "dev", arg: 1, scope: !9210, file: !5945, line: 241, type: !955)
!9213 = !DILocation(line: 0, scope: !9210)
!9214 = !DILocation(line: 250, column: 2, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9210, file: !5945, line: 250, column: 2)
!9216 = !{i64 2155127306}
!9217 = !DILocation(line: 251, column: 2, scope: !9210)
!9218 = !DILocation(line: 252, column: 1, scope: !9210)
!9219 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !212, file: !212, line: 934, type: !1006, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9220)
!9220 = !{!9221, !9222}
!9221 = !DILocalVariable(name: "dev", arg: 1, scope: !9219, file: !212, line: 934, type: !955)
!9222 = !DILocalVariable(name: "api", scope: !9219, file: !212, line: 937, type: !947)
!9223 = !DILocation(line: 0, scope: !9219)
!9224 = !DILocation(line: 938, column: 40, scope: !9219)
!9225 = !DILocation(line: 940, column: 11, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9219, file: !212, line: 940, column: 6)
!9227 = !DILocation(line: 940, column: 25, scope: !9226)
!9228 = !DILocation(line: 940, column: 6, scope: !9219)
!9229 = !DILocation(line: 941, column: 3, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9226, file: !212, line: 940, column: 34)
!9231 = !DILocation(line: 942, column: 2, scope: !9230)
!9232 = !DILocation(line: 946, column: 1, scope: !9219)
!9233 = !DILocation(line: 0, scope: !1096)
!9234 = !DILocation(line: 433, column: 9, scope: !1096)
!9235 = !DILocation(line: 433, column: 43, scope: !1096)
!9236 = !DILocation(line: 434, column: 9, scope: !1096)
!9237 = !DILocation(line: 433, column: 2, scope: !1096)
!9238 = !DILocation(line: 436, column: 3, scope: !1101)
!9239 = !DILocation(line: 439, column: 8, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !1101, file: !939, line: 439, column: 7)
!9241 = !DILocation(line: 439, column: 7, scope: !1101)
!9242 = distinct !{!9242, !9237, !9243}
!9243 = !DILocation(line: 529, column: 2, scope: !1096)
!9244 = !DILocation(line: 0, scope: !1101)
!9245 = !DILocation(line: 445, column: 8, scope: !1101)
!9246 = !DILocation(line: 446, column: 10, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !1101, file: !939, line: 446, column: 7)
!9248 = !DILocation(line: 446, column: 7, scope: !1101)
!9249 = !DILocation(line: 451, column: 7, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !1101, file: !939, line: 451, column: 7)
!9251 = !DILocation(line: 451, column: 21, scope: !9250)
!9252 = !DILocation(line: 451, column: 29, scope: !9250)
!9253 = !DILocation(line: 451, column: 46, scope: !9250)
!9254 = !DILocation(line: 451, column: 32, scope: !9250)
!9255 = !DILocation(line: 451, column: 52, scope: !9250)
!9256 = !DILocation(line: 451, column: 7, scope: !1101)
!9257 = !DILocation(line: 460, column: 8, scope: !1106)
!9258 = !DILocation(line: 460, column: 7, scope: !1101)
!9259 = !DILocation(line: 461, column: 10, scope: !1104)
!9260 = !DILocation(line: 0, scope: !1104)
!9261 = !DILocation(line: 461, column: 8, scope: !1105)
!9262 = !DILocation(line: 462, column: 9, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !1105, file: !939, line: 462, column: 8)
!9264 = !DILocation(line: 462, column: 8, scope: !1105)
!9265 = !DILocation(line: 477, column: 7, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !1101, file: !939, line: 477, column: 7)
!9267 = !DILocation(line: 477, column: 7, scope: !1101)
!9268 = !DILocation(line: 478, column: 16, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9266, file: !939, line: 477, column: 46)
!9270 = !DILocation(line: 478, column: 22, scope: !9269)
!9271 = !DILocation(line: 478, column: 4, scope: !9269)
!9272 = !DILocation(line: 479, column: 4, scope: !9269)
!9273 = !DILocation(line: 483, column: 7, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !1101, file: !939, line: 483, column: 7)
!9275 = !DILocation(line: 483, column: 7, scope: !1101)
!9276 = !DILocation(line: 484, column: 13, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9278, file: !939, line: 484, column: 8)
!9278 = distinct !DILexicalBlock(scope: !9274, file: !939, line: 483, column: 55)
!9279 = !DILocation(line: 484, column: 8, scope: !9278)
!9280 = !DILocation(line: 485, column: 5, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9277, file: !939, line: 484, column: 26)
!9282 = !DILocation(line: 486, column: 5, scope: !9281)
!9283 = !DILocation(line: 487, column: 4, scope: !9281)
!9284 = !DILocation(line: 493, column: 16, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !1101, file: !939, line: 493, column: 7)
!9286 = !DILocation(line: 493, column: 8, scope: !9285)
!9287 = !DILocation(line: 493, column: 7, scope: !1101)
!9288 = !DILocation(line: 494, column: 4, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9285, file: !939, line: 493, column: 23)
!9290 = !DILocation(line: 497, column: 9, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !939, line: 497, column: 9)
!9292 = distinct !DILexicalBlock(scope: !9289, file: !939, line: 494, column: 18)
!9293 = !DILocation(line: 497, column: 13, scope: !9291)
!9294 = !DILocation(line: 497, column: 9, scope: !9292)
!9295 = !DILocation(line: 498, column: 16, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9291, file: !939, line: 497, column: 18)
!9297 = !DILocation(line: 498, column: 26, scope: !9296)
!9298 = !DILocation(line: 498, column: 34, scope: !9296)
!9299 = !DILocation(line: 498, column: 6, scope: !9296)
!9300 = !DILocation(line: 499, column: 5, scope: !9296)
!9301 = !DILocation(line: 502, column: 5, scope: !9292)
!9302 = !DILocation(line: 503, column: 5, scope: !9292)
!9303 = !DILocation(line: 505, column: 5, scope: !9292)
!9304 = !DILocation(line: 505, column: 15, scope: !9292)
!9305 = !DILocation(line: 505, column: 21, scope: !9292)
!9306 = !DILocation(line: 505, column: 19, scope: !9292)
!9307 = !DILocation(line: 505, column: 26, scope: !9292)
!9308 = !DILocation(line: 506, column: 5, scope: !9292)
!9309 = !DILocation(line: 507, column: 5, scope: !9292)
!9310 = !DILocation(line: 508, column: 9, scope: !9292)
!9311 = !DILocation(line: 509, column: 9, scope: !9292)
!9312 = !DILocation(line: 510, column: 5, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9292, file: !939, line: 510, column: 5)
!9314 = !DILocation(line: 511, column: 9, scope: !9292)
!9315 = !DILocation(line: 512, column: 5, scope: !9292)
!9316 = !DILocation(line: 514, column: 9, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9292, file: !939, line: 514, column: 9)
!9318 = !DILocation(line: 514, column: 23, scope: !9317)
!9319 = !DILocation(line: 515, column: 27, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9317, file: !939, line: 514, column: 32)
!9321 = !DILocation(line: 515, column: 38, scope: !9320)
!9322 = !DILocation(line: 515, column: 13, scope: !9320)
!9323 = !DILocation(line: 515, column: 10, scope: !9320)
!9324 = !DILocation(line: 516, column: 5, scope: !9320)
!9325 = !DILocation(line: 526, column: 7, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !1101, file: !939, line: 526, column: 7)
!9327 = !DILocation(line: 526, column: 13, scope: !9326)
!9328 = !DILocation(line: 526, column: 11, scope: !9326)
!9329 = !DILocation(line: 526, column: 17, scope: !9326)
!9330 = !DILocation(line: 526, column: 7, scope: !1101)
!9331 = !DILocation(line: 527, column: 17, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9326, file: !939, line: 526, column: 42)
!9333 = !DILocation(line: 527, column: 30, scope: !9332)
!9334 = !DILocation(line: 527, column: 4, scope: !9332)
!9335 = !DILocation(line: 528, column: 3, scope: !9332)
!9336 = !DILocation(line: 530, column: 1, scope: !1096)
!9337 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !212, file: !212, line: 1163, type: !1020, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9338)
!9338 = !{!9339, !9340, !9341, !9342}
!9339 = !DILocalVariable(name: "dev", arg: 1, scope: !9337, file: !212, line: 1163, type: !955)
!9340 = !DILocalVariable(name: "cb", arg: 2, scope: !9337, file: !212, line: 1164, type: !1022)
!9341 = !DILocalVariable(name: "user_data", arg: 3, scope: !9337, file: !212, line: 1165, type: !102)
!9342 = !DILocalVariable(name: "api", scope: !9337, file: !212, line: 1168, type: !947)
!9343 = !DILocation(line: 0, scope: !9337)
!9344 = !DILocation(line: 1169, column: 40, scope: !9337)
!9345 = !DILocation(line: 1171, column: 11, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9337, file: !212, line: 1171, column: 6)
!9347 = !DILocation(line: 1171, column: 20, scope: !9346)
!9348 = !DILocation(line: 1171, column: 29, scope: !9346)
!9349 = !DILocation(line: 1171, column: 46, scope: !9346)
!9350 = !DILocation(line: 1171, column: 6, scope: !9337)
!9351 = !DILocation(line: 1172, column: 3, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9346, file: !212, line: 1171, column: 56)
!9353 = !DILocation(line: 1173, column: 2, scope: !9352)
!9354 = !DILocation(line: 1179, column: 1, scope: !9337)
!9355 = distinct !DISubprogram(name: "uart_irq_update", scope: !5945, file: !5945, line: 360, type: !976, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9356)
!9356 = !{!9357}
!9357 = !DILocalVariable(name: "dev", arg: 1, scope: !9355, file: !5945, line: 360, type: !955)
!9358 = !DILocation(line: 0, scope: !9355)
!9359 = !DILocation(line: 368, column: 2, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9355, file: !5945, line: 368, column: 2)
!9361 = !{i64 2155127646}
!9362 = !DILocation(line: 369, column: 9, scope: !9355)
!9363 = !DILocation(line: 369, column: 2, scope: !9355)
!9364 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !5945, file: !5945, line: 337, type: !976, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9365)
!9365 = !{!9366}
!9366 = !DILocalVariable(name: "dev", arg: 1, scope: !9364, file: !5945, line: 337, type: !955)
!9367 = !DILocation(line: 0, scope: !9364)
!9368 = !DILocation(line: 345, column: 2, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9364, file: !5945, line: 345, column: 2)
!9370 = !{i64 2155127578}
!9371 = !DILocation(line: 346, column: 9, scope: !9364)
!9372 = !DILocation(line: 346, column: 2, scope: !9364)
!9373 = distinct !DISubprogram(name: "read_uart", scope: !939, file: !939, line: 127, type: !9374, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9376)
!9374 = !DISubroutineType(types: !9375)
!9375 = !{!103, !955, !270, !32}
!9376 = !{!9377, !9378, !9379, !9380}
!9377 = !DILocalVariable(name: "uart", arg: 1, scope: !9373, file: !939, line: 127, type: !955)
!9378 = !DILocalVariable(name: "buf", arg: 2, scope: !9373, file: !939, line: 127, type: !270)
!9379 = !DILocalVariable(name: "size", arg: 3, scope: !9373, file: !939, line: 128, type: !32)
!9380 = !DILocalVariable(name: "rx", scope: !9373, file: !939, line: 130, type: !103)
!9381 = !DILocation(line: 0, scope: !9373)
!9382 = !DILocation(line: 132, column: 7, scope: !9373)
!9383 = !DILocation(line: 133, column: 9, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9373, file: !939, line: 133, column: 6)
!9385 = !DILocation(line: 133, column: 6, scope: !9373)
!9386 = !DILocation(line: 135, column: 3, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9384, file: !939, line: 133, column: 14)
!9388 = !DILocation(line: 137, column: 3, scope: !9387)
!9389 = !DILocation(line: 141, column: 1, scope: !9373)
!9390 = distinct !DISubprogram(name: "k_queue_get", scope: !3696, file: !3696, line: 649, type: !9391, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9398)
!9391 = !DISubroutineType(types: !9392)
!9392 = !{!102, !9393, !9394}
!9393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!9394 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1721, line: 67, baseType: !9395)
!9395 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1721, line: 65, size: 64, elements: !9396)
!9396 = !{!9397}
!9397 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9395, file: !1721, line: 66, baseType: !1720, size: 64)
!9398 = !{!9399, !9400}
!9399 = !DILocalVariable(name: "queue", arg: 1, scope: !9390, file: !3696, line: 649, type: !9393)
!9400 = !DILocalVariable(name: "timeout", arg: 2, scope: !9390, file: !3696, line: 649, type: !9394)
!9401 = !DILocation(line: 0, scope: !9390)
!9402 = !DILocation(line: 658, column: 2, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9390, file: !3696, line: 658, column: 2)
!9404 = !{i64 2154851493}
!9405 = !DILocation(line: 659, column: 9, scope: !9390)
!9406 = !DILocation(line: 659, column: 2, scope: !9390)
!9407 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1122, file: !1122, line: 131, type: !9408, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9412)
!9408 = !DISubroutineType(types: !9409)
!9409 = !{!166, !9410, !103}
!9410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9411, size: 32)
!9411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1121)
!9412 = !{!9413, !9414, !9415}
!9413 = !DILocalVariable(name: "target", arg: 1, scope: !9407, file: !1122, line: 131, type: !9410)
!9414 = !DILocalVariable(name: "bit", arg: 2, scope: !9407, file: !1122, line: 131, type: !103)
!9415 = !DILocalVariable(name: "val", scope: !9407, file: !1122, line: 133, type: !9416)
!9416 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1122, line: 23, baseType: !1121)
!9417 = !DILocation(line: 0, scope: !9407)
!9418 = !DILocation(line: 133, column: 21, scope: !9407)
!9419 = !DILocation(line: 135, column: 27, scope: !9407)
!9420 = !DILocation(line: 135, column: 50, scope: !9407)
!9421 = !DILocation(line: 135, column: 2, scope: !9407)
!9422 = distinct !DISubprogram(name: "handle_ansi", scope: !939, file: !939, line: 232, type: !9423, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9425)
!9423 = !DISubroutineType(types: !9424)
!9424 = !{null, !163, !1083}
!9425 = !{!9426, !9427, !9428}
!9426 = !DILocalVariable(name: "byte", arg: 1, scope: !9422, file: !939, line: 232, type: !163)
!9427 = !DILocalVariable(name: "line", arg: 2, scope: !9422, file: !939, line: 232, type: !1083)
!9428 = !DILabel(scope: !9422, name: "ansi_cmd", file: !939, line: 268)
!9429 = !DILocation(line: 0, scope: !9422)
!9430 = !DILocation(line: 234, column: 6, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9422, file: !939, line: 234, column: 6)
!9432 = !DILocation(line: 234, column: 6, scope: !9422)
!9433 = !DILocation(line: 235, column: 16, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9435, file: !939, line: 235, column: 7)
!9435 = distinct !DILexicalBlock(scope: !9431, file: !939, line: 234, column: 61)
!9436 = !DILocation(line: 235, column: 8, scope: !9434)
!9437 = !DILocation(line: 235, column: 7, scope: !9435)
!9438 = !DILocation(line: 236, column: 13, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9434, file: !939, line: 235, column: 23)
!9440 = !DILocation(line: 237, column: 4, scope: !9439)
!9441 = !DILocation(line: 240, column: 3, scope: !9435)
!9442 = !DILocation(line: 241, column: 19, scope: !9435)
!9443 = !DILocation(line: 241, column: 12, scope: !9435)
!9444 = !DILocation(line: 242, column: 14, scope: !9435)
!9445 = !DILocation(line: 243, column: 3, scope: !9435)
!9446 = !DILocation(line: 246, column: 6, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9422, file: !939, line: 246, column: 6)
!9448 = !DILocation(line: 246, column: 6, scope: !9422)
!9449 = !DILocation(line: 247, column: 15, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9451, file: !939, line: 247, column: 7)
!9451 = distinct !DILexicalBlock(scope: !9447, file: !939, line: 246, column: 49)
!9452 = !DILocation(line: 247, column: 7, scope: !9450)
!9453 = !DILocation(line: 247, column: 7, scope: !9451)
!9454 = !DILocation(line: 248, column: 8, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9456, file: !939, line: 248, column: 8)
!9456 = distinct !DILexicalBlock(scope: !9450, file: !939, line: 247, column: 22)
!9457 = !DILocation(line: 248, column: 8, scope: !9456)
!9458 = !DILocation(line: 249, column: 16, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9455, file: !939, line: 248, column: 53)
!9460 = !DILocation(line: 250, column: 24, scope: !9459)
!9461 = !DILocation(line: 250, column: 16, scope: !9459)
!9462 = !DILocation(line: 251, column: 4, scope: !9459)
!9463 = !DILocation(line: 252, column: 14, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9455, file: !939, line: 251, column: 11)
!9465 = !DILocation(line: 253, column: 22, scope: !9464)
!9466 = !DILocation(line: 253, column: 14, scope: !9464)
!9467 = !DILocation(line: 259, column: 12, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9451, file: !939, line: 259, column: 7)
!9469 = !DILocation(line: 259, column: 19, scope: !9468)
!9470 = !DILocation(line: 260, column: 8, scope: !9468)
!9471 = !DILocation(line: 259, column: 7, scope: !9451)
!9472 = !DILocation(line: 264, column: 3, scope: !9451)
!9473 = !DILocation(line: 265, column: 3, scope: !9451)
!9474 = !DILocation(line: 266, column: 2, scope: !9451)
!9475 = !DILocation(line: 268, column: 1, scope: !9422)
!9476 = !DILocation(line: 269, column: 2, scope: !9422)
!9477 = !DILocation(line: 271, column: 7, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9479, file: !939, line: 271, column: 7)
!9479 = distinct !DILexicalBlock(scope: !9422, file: !939, line: 269, column: 16)
!9480 = !DILocation(line: 271, column: 18, scope: !9478)
!9481 = !DILocation(line: 271, column: 16, scope: !9478)
!9482 = !DILocation(line: 271, column: 7, scope: !9479)
!9483 = !DILocation(line: 275, column: 7, scope: !9479)
!9484 = !DILocation(line: 276, column: 7, scope: !9479)
!9485 = !DILocation(line: 277, column: 3, scope: !9479)
!9486 = !DILocation(line: 278, column: 3, scope: !9479)
!9487 = !DILocation(line: 280, column: 7, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9479, file: !939, line: 280, column: 7)
!9489 = !DILocation(line: 280, column: 18, scope: !9488)
!9490 = !DILocation(line: 280, column: 16, scope: !9488)
!9491 = !DILocation(line: 280, column: 7, scope: !9479)
!9492 = !DILocation(line: 284, column: 7, scope: !9479)
!9493 = !DILocation(line: 285, column: 7, scope: !9479)
!9494 = !DILocation(line: 286, column: 3, scope: !9479)
!9495 = !DILocation(line: 287, column: 3, scope: !9479)
!9496 = !DILocation(line: 289, column: 8, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9479, file: !939, line: 289, column: 7)
!9498 = !DILocation(line: 289, column: 7, scope: !9479)
!9499 = !DILocation(line: 293, column: 19, scope: !9479)
!9500 = !DILocation(line: 293, column: 3, scope: !9479)
!9501 = !DILocation(line: 294, column: 10, scope: !9479)
!9502 = !DILocation(line: 294, column: 7, scope: !9479)
!9503 = !DILocation(line: 295, column: 7, scope: !9479)
!9504 = !DILocation(line: 296, column: 3, scope: !9479)
!9505 = !DILocation(line: 298, column: 8, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9479, file: !939, line: 298, column: 7)
!9507 = !DILocation(line: 298, column: 7, scope: !9479)
!9508 = !DILocation(line: 302, column: 18, scope: !9479)
!9509 = !DILocation(line: 302, column: 3, scope: !9479)
!9510 = !DILocation(line: 303, column: 10, scope: !9479)
!9511 = !DILocation(line: 303, column: 7, scope: !9479)
!9512 = !DILocation(line: 304, column: 7, scope: !9479)
!9513 = !DILocation(line: 305, column: 3, scope: !9479)
!9514 = !DILocation(line: 307, column: 8, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9479, file: !939, line: 307, column: 7)
!9516 = !DILocation(line: 307, column: 7, scope: !9479)
!9517 = !DILocation(line: 311, column: 3, scope: !9479)
!9518 = !DILocation(line: 312, column: 18, scope: !9479)
!9519 = !DILocation(line: 312, column: 13, scope: !9479)
!9520 = !DILocation(line: 312, column: 24, scope: !9479)
!9521 = !DILocation(line: 312, column: 3, scope: !9479)
!9522 = !DILocation(line: 313, column: 3, scope: !9479)
!9523 = !DILocation(line: 318, column: 2, scope: !9422)
!9524 = !DILocation(line: 319, column: 1, scope: !9422)
!9525 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1122, file: !1122, line: 152, type: !9526, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9529)
!9526 = !DISubroutineType(types: !9527)
!9527 = !{!166, !9528, !103}
!9528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!9529 = !{!9530, !9531, !9532, !9533}
!9530 = !DILocalVariable(name: "target", arg: 1, scope: !9525, file: !1122, line: 152, type: !9528)
!9531 = !DILocalVariable(name: "bit", arg: 2, scope: !9525, file: !1122, line: 152, type: !103)
!9532 = !DILocalVariable(name: "mask", scope: !9525, file: !1122, line: 154, type: !9416)
!9533 = !DILocalVariable(name: "old", scope: !9525, file: !1122, line: 155, type: !9416)
!9534 = !DILocation(line: 0, scope: !9525)
!9535 = !DILocation(line: 154, column: 22, scope: !9525)
!9536 = !DILocation(line: 157, column: 45, scope: !9525)
!9537 = !DILocation(line: 157, column: 8, scope: !9525)
!9538 = !DILocation(line: 159, column: 14, scope: !9525)
!9539 = !DILocation(line: 159, column: 22, scope: !9525)
!9540 = !DILocation(line: 159, column: 2, scope: !9525)
!9541 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1122, file: !1122, line: 217, type: !9542, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9544)
!9542 = !DISubroutineType(types: !9543)
!9543 = !{null, !9528, !103}
!9544 = !{!9545, !9546, !9547}
!9545 = !DILocalVariable(name: "target", arg: 1, scope: !9541, file: !1122, line: 217, type: !9528)
!9546 = !DILocalVariable(name: "bit", arg: 2, scope: !9541, file: !1122, line: 217, type: !103)
!9547 = !DILocalVariable(name: "mask", scope: !9541, file: !1122, line: 219, type: !9416)
!9548 = !DILocation(line: 0, scope: !9541)
!9549 = !DILocation(line: 219, column: 22, scope: !9541)
!9550 = !DILocation(line: 221, column: 8, scope: !9541)
!9551 = !DILocation(line: 222, column: 1, scope: !9541)
!9552 = distinct !DISubprogram(name: "isprint", scope: !5013, file: !5013, line: 37, type: !118, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9553)
!9553 = !{!9554}
!9554 = !DILocalVariable(name: "c", arg: 1, scope: !9552, file: !5013, line: 37, type: !103)
!9555 = !DILocation(line: 0, scope: !9552)
!9556 = !DILocation(line: 39, column: 38, scope: !9552)
!9557 = !DILocation(line: 39, column: 2, scope: !9552)
!9558 = distinct !DISubprogram(name: "del_char", scope: !939, file: !939, line: 191, type: !9559, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9561)
!9559 = !DISubroutineType(types: !9560)
!9560 = !{null, !1083, !163}
!9561 = !{!9562, !9563}
!9562 = !DILocalVariable(name: "pos", arg: 1, scope: !9558, file: !939, line: 191, type: !1083)
!9563 = !DILocalVariable(name: "end", arg: 2, scope: !9558, file: !939, line: 191, type: !163)
!9564 = !DILocation(line: 0, scope: !9558)
!9565 = !DILocation(line: 193, column: 2, scope: !9558)
!9566 = !DILocation(line: 195, column: 10, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9558, file: !939, line: 195, column: 6)
!9568 = !DILocation(line: 195, column: 6, scope: !9558)
!9569 = !DILocation(line: 196, column: 3, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9567, file: !939, line: 195, column: 17)
!9571 = !DILocation(line: 197, column: 3, scope: !9570)
!9572 = !DILocation(line: 198, column: 3, scope: !9570)
!9573 = !DILocation(line: 201, column: 2, scope: !9558)
!9574 = !DILocation(line: 203, column: 2, scope: !9558)
!9575 = !DILocation(line: 203, column: 12, scope: !9558)
!9576 = !DILocation(line: 204, column: 16, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9558, file: !939, line: 203, column: 20)
!9578 = !DILocation(line: 204, column: 10, scope: !9577)
!9579 = !DILocation(line: 204, column: 8, scope: !9577)
!9580 = !DILocation(line: 205, column: 3, scope: !9577)
!9581 = !DILocation(line: 203, column: 15, scope: !9558)
!9582 = distinct !{!9582, !9574, !9583}
!9583 = !DILocation(line: 206, column: 2, scope: !9558)
!9584 = !DILocation(line: 208, column: 2, scope: !9558)
!9585 = !DILocation(line: 211, column: 2, scope: !9558)
!9586 = !DILocation(line: 212, column: 1, scope: !9558)
!9587 = !DISubprogram(name: "k_queue_append", scope: !312, file: !312, line: 1775, type: !9588, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!9588 = !DISubroutineType(types: !9589)
!9589 = !{null, !9393, !102}
!9590 = distinct !DISubprogram(name: "insert_char", scope: !939, file: !939, line: 163, type: !9591, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9593)
!9591 = !DISubroutineType(types: !9592)
!9592 = !{null, !1083, !108, !163}
!9593 = !{!9594, !9595, !9596, !9597}
!9594 = !DILocalVariable(name: "pos", arg: 1, scope: !9590, file: !939, line: 163, type: !1083)
!9595 = !DILocalVariable(name: "c", arg: 2, scope: !9590, file: !939, line: 163, type: !108)
!9596 = !DILocalVariable(name: "end", arg: 3, scope: !9590, file: !939, line: 163, type: !163)
!9597 = !DILocalVariable(name: "tmp", scope: !9590, file: !939, line: 165, type: !108)
!9598 = !DILocation(line: 0, scope: !9590)
!9599 = !DILocation(line: 168, column: 2, scope: !9590)
!9600 = !DILocation(line: 170, column: 10, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9590, file: !939, line: 170, column: 6)
!9602 = !DILocation(line: 170, column: 6, scope: !9590)
!9603 = !DILocation(line: 171, column: 8, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9601, file: !939, line: 170, column: 17)
!9605 = !DILocation(line: 172, column: 3, scope: !9604)
!9606 = !DILocation(line: 175, column: 8, scope: !9590)
!9607 = !DILocation(line: 176, column: 11, scope: !9590)
!9608 = !DILocation(line: 178, column: 2, scope: !9590)
!9609 = !DILocation(line: 180, column: 2, scope: !9590)
!9610 = !DILocation(line: 180, column: 12, scope: !9590)
!9611 = !DILocation(line: 181, column: 3, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9590, file: !939, line: 180, column: 20)
!9613 = !DILocation(line: 182, column: 7, scope: !9612)
!9614 = !DILocation(line: 183, column: 12, scope: !9612)
!9615 = !DILocation(line: 180, column: 15, scope: !9590)
!9616 = distinct !{!9616, !9609, !9617}
!9617 = !DILocation(line: 185, column: 2, scope: !9590)
!9618 = !DILocation(line: 188, column: 2, scope: !9590)
!9619 = !DILocation(line: 189, column: 1, scope: !9590)
!9620 = distinct !DISubprogram(name: "cursor_save", scope: !939, file: !939, line: 153, type: !3256, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !473)
!9621 = !DILocation(line: 155, column: 2, scope: !9620)
!9622 = !DILocation(line: 156, column: 1, scope: !9620)
!9623 = distinct !DISubprogram(name: "cursor_restore", scope: !939, file: !939, line: 158, type: !3256, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !473)
!9624 = !DILocation(line: 160, column: 2, scope: !9623)
!9625 = !DILocation(line: 161, column: 1, scope: !9623)
!9626 = distinct !DISubprogram(name: "atomic_or", scope: !9627, file: !9627, line: 279, type: !9628, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9630)
!9627 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9628 = !DISubroutineType(types: !9629)
!9629 = !{!9416, !9528, !9416}
!9630 = !{!9631, !9632}
!9631 = !DILocalVariable(name: "target", arg: 1, scope: !9626, file: !9627, line: 279, type: !9528)
!9632 = !DILocalVariable(name: "value", arg: 2, scope: !9626, file: !9627, line: 279, type: !9416)
!9633 = !DILocation(line: 0, scope: !9626)
!9634 = !DILocation(line: 281, column: 9, scope: !9626)
!9635 = !DILocation(line: 281, column: 2, scope: !9626)
!9636 = distinct !DISubprogram(name: "atomic_and", scope: !9627, file: !9627, line: 319, type: !9628, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9637)
!9637 = !{!9638, !9639}
!9638 = !DILocalVariable(name: "target", arg: 1, scope: !9636, file: !9627, line: 319, type: !9528)
!9639 = !DILocalVariable(name: "value", arg: 2, scope: !9636, file: !9627, line: 319, type: !9416)
!9640 = !DILocation(line: 0, scope: !9636)
!9641 = !DILocation(line: 321, column: 9, scope: !9636)
!9642 = !DILocation(line: 321, column: 2, scope: !9636)
!9643 = distinct !DISubprogram(name: "isdigit", scope: !5013, file: !5013, line: 43, type: !118, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9644)
!9644 = !{!9645}
!9645 = !DILocalVariable(name: "a", arg: 1, scope: !9643, file: !5013, line: 43, type: !103)
!9646 = !DILocation(line: 0, scope: !9643)
!9647 = !DILocation(line: 45, column: 29, scope: !9643)
!9648 = !DILocation(line: 45, column: 45, scope: !9643)
!9649 = !DILocation(line: 45, column: 2, scope: !9643)
!9650 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1122, file: !1122, line: 176, type: !9526, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9651)
!9651 = !{!9652, !9653, !9654, !9655}
!9652 = !DILocalVariable(name: "target", arg: 1, scope: !9650, file: !1122, line: 176, type: !9528)
!9653 = !DILocalVariable(name: "bit", arg: 2, scope: !9650, file: !1122, line: 176, type: !103)
!9654 = !DILocalVariable(name: "mask", scope: !9650, file: !1122, line: 178, type: !9416)
!9655 = !DILocalVariable(name: "old", scope: !9650, file: !1122, line: 179, type: !9416)
!9656 = !DILocation(line: 0, scope: !9650)
!9657 = !DILocation(line: 181, column: 8, scope: !9650)
!9658 = !DILocation(line: 183, column: 14, scope: !9650)
!9659 = !DILocation(line: 183, column: 22, scope: !9650)
!9660 = !DILocation(line: 183, column: 2, scope: !9650)
!9661 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1122, file: !1122, line: 198, type: !9542, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9662)
!9662 = !{!9663, !9664, !9665}
!9663 = !DILocalVariable(name: "target", arg: 1, scope: !9661, file: !1122, line: 198, type: !9528)
!9664 = !DILocalVariable(name: "bit", arg: 2, scope: !9661, file: !1122, line: 198, type: !103)
!9665 = !DILocalVariable(name: "mask", scope: !9661, file: !1122, line: 200, type: !9416)
!9666 = !DILocation(line: 0, scope: !9661)
!9667 = !DILocation(line: 200, column: 22, scope: !9661)
!9668 = !DILocation(line: 202, column: 45, scope: !9661)
!9669 = !DILocation(line: 202, column: 8, scope: !9661)
!9670 = !DILocation(line: 203, column: 1, scope: !9661)
!9671 = distinct !DISubprogram(name: "cursor_backward", scope: !939, file: !939, line: 148, type: !5834, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9672)
!9672 = !{!9673}
!9673 = !DILocalVariable(name: "count", arg: 1, scope: !9671, file: !939, line: 148, type: !32)
!9674 = !DILocation(line: 0, scope: !9671)
!9675 = !DILocation(line: 150, column: 2, scope: !9671)
!9676 = !DILocation(line: 151, column: 1, scope: !9671)
!9677 = distinct !DISubprogram(name: "cursor_forward", scope: !939, file: !939, line: 143, type: !5834, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9678)
!9678 = !{!9679}
!9679 = !DILocalVariable(name: "count", arg: 1, scope: !9677, file: !939, line: 143, type: !32)
!9680 = !DILocation(line: 0, scope: !9677)
!9681 = !DILocation(line: 145, column: 2, scope: !9677)
!9682 = !DILocation(line: 146, column: 1, scope: !9677)
!9683 = distinct !DISubprogram(name: "atomic_get", scope: !9627, file: !9627, line: 159, type: !9684, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9686)
!9684 = !DISubroutineType(types: !9685)
!9685 = !{!9416, !9410}
!9686 = !{!9687}
!9687 = !DILocalVariable(name: "target", arg: 1, scope: !9683, file: !9627, line: 159, type: !9410)
!9688 = !DILocation(line: 0, scope: !9683)
!9689 = !DILocation(line: 161, column: 9, scope: !9683)
!9690 = !DILocation(line: 161, column: 2, scope: !9683)
!9691 = !DISubprogram(name: "z_impl_k_queue_get", scope: !3696, file: !3696, line: 646, type: !9391, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!9692 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !212, file: !212, line: 1093, type: !976, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9693)
!9693 = !{!9694, !9695}
!9694 = !DILocalVariable(name: "dev", arg: 1, scope: !9692, file: !212, line: 1093, type: !955)
!9695 = !DILocalVariable(name: "api", scope: !9692, file: !212, line: 1096, type: !947)
!9696 = !DILocation(line: 0, scope: !9692)
!9697 = !DILocation(line: 1097, column: 40, scope: !9692)
!9698 = !DILocation(line: 1099, column: 11, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9692, file: !212, line: 1099, column: 6)
!9700 = !DILocation(line: 1099, column: 26, scope: !9699)
!9701 = !DILocation(line: 1099, column: 6, scope: !9692)
!9702 = !DILocation(line: 1102, column: 9, scope: !9692)
!9703 = !DILocation(line: 1102, column: 2, scope: !9692)
!9704 = !DILocation(line: 1107, column: 1, scope: !9692)
!9705 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !212, file: !212, line: 1136, type: !976, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9706)
!9706 = !{!9707, !9708}
!9707 = !DILocalVariable(name: "dev", arg: 1, scope: !9705, file: !212, line: 1136, type: !955)
!9708 = !DILocalVariable(name: "api", scope: !9705, file: !212, line: 1139, type: !947)
!9709 = !DILocation(line: 0, scope: !9705)
!9710 = !DILocation(line: 1140, column: 40, scope: !9705)
!9711 = !DILocation(line: 1142, column: 11, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9705, file: !212, line: 1142, column: 6)
!9713 = !DILocation(line: 1142, column: 22, scope: !9712)
!9714 = !DILocation(line: 1142, column: 6, scope: !9705)
!9715 = !DILocation(line: 1145, column: 9, scope: !9705)
!9716 = !DILocation(line: 1145, column: 2, scope: !9705)
!9717 = !DILocation(line: 1150, column: 1, scope: !9705)
!9718 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !212, file: !212, line: 878, type: !1006, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9719)
!9719 = !{!9720, !9721}
!9720 = !DILocalVariable(name: "dev", arg: 1, scope: !9718, file: !212, line: 878, type: !955)
!9721 = !DILocalVariable(name: "api", scope: !9718, file: !212, line: 881, type: !947)
!9722 = !DILocation(line: 0, scope: !9718)
!9723 = !DILocation(line: 882, column: 40, scope: !9718)
!9724 = !DILocation(line: 884, column: 11, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9718, file: !212, line: 884, column: 6)
!9726 = !DILocation(line: 884, column: 26, scope: !9725)
!9727 = !DILocation(line: 884, column: 6, scope: !9718)
!9728 = !DILocation(line: 885, column: 3, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9725, file: !212, line: 884, column: 35)
!9730 = !DILocation(line: 886, column: 2, scope: !9729)
!9731 = !DILocation(line: 890, column: 1, scope: !9718)
!9732 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !212, file: !212, line: 955, type: !1006, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !935, retainedNodes: !9733)
!9733 = !{!9734, !9735}
!9734 = !DILocalVariable(name: "dev", arg: 1, scope: !9732, file: !212, line: 955, type: !955)
!9735 = !DILocalVariable(name: "api", scope: !9732, file: !212, line: 958, type: !947)
!9736 = !DILocation(line: 0, scope: !9732)
!9737 = !DILocation(line: 959, column: 40, scope: !9732)
!9738 = !DILocation(line: 961, column: 11, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9732, file: !212, line: 961, column: 6)
!9740 = !DILocation(line: 961, column: 26, scope: !9739)
!9741 = !DILocation(line: 961, column: 6, scope: !9732)
!9742 = !DILocation(line: 962, column: 3, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9739, file: !212, line: 961, column: 35)
!9744 = !DILocation(line: 963, column: 2, scope: !9743)
!9745 = !DILocation(line: 967, column: 1, scope: !9732)
!9746 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1306, file: !1306, line: 523, type: !1164, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9747)
!9747 = !{!9748, !9749, !9750, !9751, !9752}
!9748 = !DILocalVariable(name: "dev", arg: 1, scope: !9746, file: !1306, line: 523, type: !1166)
!9749 = !DILocalVariable(name: "pin", arg: 2, scope: !9746, file: !1306, line: 524, type: !1181)
!9750 = !DILocalVariable(name: "flags", arg: 3, scope: !9746, file: !1306, line: 524, type: !1182)
!9751 = !DILocalVariable(name: "err", scope: !9746, file: !1306, line: 526, type: !103)
!9752 = !DILocalVariable(name: "pincfg", scope: !9746, file: !1306, line: 527, type: !103)
!9753 = !DILocation(line: 0, scope: !9746)
!9754 = !DILocation(line: 527, column: 2, scope: !9746)
!9755 = !DILocation(line: 532, column: 8, scope: !9746)
!9756 = !DILocation(line: 533, column: 10, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9746, file: !1306, line: 533, column: 6)
!9758 = !DILocation(line: 533, column: 6, scope: !9746)
!9759 = !DILocation(line: 543, column: 13, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9746, file: !1306, line: 543, column: 6)
!9761 = !DILocation(line: 543, column: 28, scope: !9760)
!9762 = !DILocation(line: 543, column: 6, scope: !9746)
!9763 = !DILocation(line: 544, column: 14, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !1306, line: 544, column: 7)
!9765 = distinct !DILexicalBlock(scope: !9760, file: !1306, line: 543, column: 34)
!9766 = !DILocation(line: 544, column: 39, scope: !9764)
!9767 = !DILocation(line: 544, column: 7, scope: !9765)
!9768 = !DILocation(line: 545, column: 38, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9764, file: !1306, line: 544, column: 45)
!9770 = !DILocation(line: 545, column: 4, scope: !9769)
!9771 = !DILocation(line: 546, column: 3, scope: !9769)
!9772 = !DILocation(line: 546, column: 21, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9764, file: !1306, line: 546, column: 14)
!9774 = !DILocation(line: 546, column: 45, scope: !9773)
!9775 = !DILocation(line: 546, column: 14, scope: !9764)
!9776 = !DILocation(line: 547, column: 40, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9773, file: !1306, line: 546, column: 51)
!9778 = !DILocation(line: 547, column: 4, scope: !9777)
!9779 = !DILocation(line: 548, column: 3, scope: !9777)
!9780 = !DILocation(line: 551, column: 32, scope: !9746)
!9781 = !DILocation(line: 551, column: 37, scope: !9746)
!9782 = !DILocation(line: 551, column: 2, scope: !9746)
!9783 = !DILocation(line: 554, column: 6, scope: !9746)
!9784 = !DILocation(line: 562, column: 1, scope: !9746)
!9785 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1306, file: !1306, line: 410, type: !9786, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9788)
!9786 = !DISubroutineType(types: !9787)
!9787 = !{!103, !1166, !857}
!9788 = !{!9789, !9790, !9791, !9793}
!9789 = !DILocalVariable(name: "dev", arg: 1, scope: !9785, file: !1306, line: 410, type: !1166)
!9790 = !DILocalVariable(name: "value", arg: 2, scope: !9785, file: !1306, line: 410, type: !857)
!9791 = !DILocalVariable(name: "cfg", scope: !9785, file: !1306, line: 412, type: !9792)
!9792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 32)
!9793 = !DILocalVariable(name: "gpio", scope: !9785, file: !1306, line: 413, type: !1239)
!9794 = !DILocation(line: 0, scope: !9785)
!9795 = !DILocation(line: 412, column: 45, scope: !9785)
!9796 = !DILocation(line: 413, column: 44, scope: !9785)
!9797 = !DILocation(line: 415, column: 11, scope: !9785)
!9798 = !DILocation(line: 415, column: 9, scope: !9785)
!9799 = !DILocation(line: 417, column: 2, scope: !9785)
!9800 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1306, file: !1306, line: 420, type: !1191, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9801)
!9801 = !{!9802, !9803, !9804, !9805, !9806, !9807}
!9802 = !DILocalVariable(name: "dev", arg: 1, scope: !9800, file: !1306, line: 420, type: !1166)
!9803 = !DILocalVariable(name: "mask", arg: 2, scope: !9800, file: !1306, line: 421, type: !1193)
!9804 = !DILocalVariable(name: "value", arg: 3, scope: !9800, file: !1306, line: 422, type: !1188)
!9805 = !DILocalVariable(name: "cfg", scope: !9800, file: !1306, line: 424, type: !9792)
!9806 = !DILocalVariable(name: "gpio", scope: !9800, file: !1306, line: 425, type: !1239)
!9807 = !DILocalVariable(name: "port_value", scope: !9800, file: !1306, line: 426, type: !132)
!9808 = !DILocation(line: 0, scope: !9800)
!9809 = !DILocation(line: 424, column: 45, scope: !9800)
!9810 = !DILocation(line: 425, column: 44, scope: !9800)
!9811 = !DILocation(line: 430, column: 15, scope: !9800)
!9812 = !DILocation(line: 431, column: 46, scope: !9800)
!9813 = !DILocation(line: 431, column: 44, scope: !9800)
!9814 = !DILocation(line: 431, column: 61, scope: !9800)
!9815 = !DILocation(line: 431, column: 53, scope: !9800)
!9816 = !DILocation(line: 431, column: 2, scope: !9800)
!9817 = !DILocation(line: 435, column: 2, scope: !9800)
!9818 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1306, file: !1306, line: 438, type: !1196, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9819)
!9819 = !{!9820, !9821, !9822, !9823}
!9820 = !DILocalVariable(name: "dev", arg: 1, scope: !9818, file: !1306, line: 438, type: !1166)
!9821 = !DILocalVariable(name: "pins", arg: 2, scope: !9818, file: !1306, line: 439, type: !1193)
!9822 = !DILocalVariable(name: "cfg", scope: !9818, file: !1306, line: 441, type: !9792)
!9823 = !DILocalVariable(name: "gpio", scope: !9818, file: !1306, line: 442, type: !1239)
!9824 = !DILocation(line: 0, scope: !9818)
!9825 = !DILocation(line: 441, column: 45, scope: !9818)
!9826 = !DILocation(line: 442, column: 44, scope: !9818)
!9827 = !DILocation(line: 448, column: 2, scope: !9818)
!9828 = !DILocation(line: 450, column: 2, scope: !9818)
!9829 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1306, file: !1306, line: 453, type: !1196, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9830)
!9830 = !{!9831, !9832, !9833, !9834}
!9831 = !DILocalVariable(name: "dev", arg: 1, scope: !9829, file: !1306, line: 453, type: !1166)
!9832 = !DILocalVariable(name: "pins", arg: 2, scope: !9829, file: !1306, line: 454, type: !1193)
!9833 = !DILocalVariable(name: "cfg", scope: !9829, file: !1306, line: 456, type: !9792)
!9834 = !DILocalVariable(name: "gpio", scope: !9829, file: !1306, line: 457, type: !1239)
!9835 = !DILocation(line: 0, scope: !9829)
!9836 = !DILocation(line: 456, column: 45, scope: !9829)
!9837 = !DILocation(line: 457, column: 44, scope: !9829)
!9838 = !DILocation(line: 467, column: 2, scope: !9829)
!9839 = !DILocation(line: 470, column: 2, scope: !9829)
!9840 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1306, file: !1306, line: 473, type: !1196, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9841)
!9841 = !{!9842, !9843, !9844, !9845}
!9842 = !DILocalVariable(name: "dev", arg: 1, scope: !9840, file: !1306, line: 473, type: !1166)
!9843 = !DILocalVariable(name: "pins", arg: 2, scope: !9840, file: !1306, line: 474, type: !1193)
!9844 = !DILocalVariable(name: "cfg", scope: !9840, file: !1306, line: 476, type: !9792)
!9845 = !DILocalVariable(name: "gpio", scope: !9840, file: !1306, line: 477, type: !1239)
!9846 = !DILocation(line: 0, scope: !9840)
!9847 = !DILocation(line: 476, column: 45, scope: !9840)
!9848 = !DILocation(line: 477, column: 44, scope: !9840)
!9849 = !DILocation(line: 484, column: 2, scope: !9840)
!9850 = !DILocation(line: 487, column: 2, scope: !9840)
!9851 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1306, file: !1306, line: 594, type: !1202, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9852)
!9852 = !{!9853, !9854, !9855, !9856, !9857, !9858, !9860, !9861, !9862}
!9853 = !DILocalVariable(name: "dev", arg: 1, scope: !9851, file: !1306, line: 594, type: !1166)
!9854 = !DILocalVariable(name: "pin", arg: 2, scope: !9851, file: !1306, line: 595, type: !1181)
!9855 = !DILocalVariable(name: "mode", arg: 3, scope: !9851, file: !1306, line: 596, type: !1140)
!9856 = !DILocalVariable(name: "trig", arg: 4, scope: !9851, file: !1306, line: 597, type: !1146)
!9857 = !DILocalVariable(name: "cfg", scope: !9851, file: !1306, line: 599, type: !9792)
!9858 = !DILocalVariable(name: "data", scope: !9851, file: !1306, line: 600, type: !9859)
!9859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32)
!9860 = !DILocalVariable(name: "edge", scope: !9851, file: !1306, line: 601, type: !103)
!9861 = !DILocalVariable(name: "err", scope: !9851, file: !1306, line: 602, type: !103)
!9862 = !DILabel(scope: !9851, name: "exit", file: !1306, line: 643)
!9863 = !DILocation(line: 0, scope: !9851)
!9864 = !DILocation(line: 599, column: 45, scope: !9851)
!9865 = !DILocation(line: 604, column: 6, scope: !9851)
!9866 = !DILocation(line: 605, column: 34, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9868, file: !1306, line: 605, column: 7)
!9868 = distinct !DILexicalBlock(scope: !9869, file: !1306, line: 604, column: 38)
!9869 = distinct !DILexicalBlock(scope: !9851, file: !1306, line: 604, column: 6)
!9870 = !DILocation(line: 605, column: 7, scope: !9867)
!9871 = !DILocation(line: 605, column: 47, scope: !9867)
!9872 = !DILocation(line: 605, column: 39, scope: !9867)
!9873 = !DILocation(line: 605, column: 7, scope: !9868)
!9874 = !DILocation(line: 606, column: 4, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9867, file: !1306, line: 605, column: 53)
!9876 = !DILocation(line: 607, column: 4, scope: !9875)
!9877 = !DILocation(line: 608, column: 4, scope: !9875)
!9878 = !DILocation(line: 609, column: 3, scope: !9875)
!9879 = !DILocation(line: 600, column: 38, scope: !9851)
!9880 = !DILocation(line: 620, column: 30, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9851, file: !1306, line: 620, column: 6)
!9882 = !DILocation(line: 620, column: 6, scope: !9881)
!9883 = !DILocation(line: 620, column: 57, scope: !9881)
!9884 = !DILocation(line: 620, column: 6, scope: !9851)
!9885 = !DILocation(line: 625, column: 29, scope: !9851)
!9886 = !DILocation(line: 625, column: 2, scope: !9851)
!9887 = !DILocation(line: 627, column: 2, scope: !9851)
!9888 = !DILocation(line: 630, column: 3, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9851, file: !1306, line: 627, column: 16)
!9890 = !DILocation(line: 633, column: 3, scope: !9889)
!9891 = !DILocation(line: 636, column: 3, scope: !9889)
!9892 = !DILocation(line: 639, column: 2, scope: !9851)
!9893 = !DILocation(line: 641, column: 2, scope: !9851)
!9894 = !DILocation(line: 643, column: 1, scope: !9851)
!9895 = !DILocation(line: 644, column: 2, scope: !9851)
!9896 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1306, file: !1306, line: 647, type: !1206, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9897)
!9897 = !{!9898, !9899, !9900, !9901}
!9898 = !DILocalVariable(name: "dev", arg: 1, scope: !9896, file: !1306, line: 647, type: !1166)
!9899 = !DILocalVariable(name: "callback", arg: 2, scope: !9896, file: !1306, line: 648, type: !1208)
!9900 = !DILocalVariable(name: "set", arg: 3, scope: !9896, file: !1306, line: 649, type: !166)
!9901 = !DILocalVariable(name: "data", scope: !9896, file: !1306, line: 651, type: !9859)
!9902 = !DILocation(line: 0, scope: !9896)
!9903 = !DILocation(line: 651, column: 38, scope: !9896)
!9904 = !DILocation(line: 653, column: 37, scope: !9896)
!9905 = !DILocation(line: 653, column: 9, scope: !9896)
!9906 = !DILocation(line: 653, column: 2, scope: !9896)
!9907 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9908, file: !9908, line: 38, type: !9909, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9912)
!9908 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9909 = !DISubroutineType(types: !9910)
!9910 = !{!103, !9911, !1208, !166}
!9911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 32)
!9912 = !{!9913, !9914, !9915}
!9913 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9907, file: !9908, line: 38, type: !9911)
!9914 = !DILocalVariable(name: "callback", arg: 2, scope: !9907, file: !9908, line: 39, type: !1208)
!9915 = !DILocalVariable(name: "set", arg: 3, scope: !9907, file: !9908, line: 40, type: !166)
!9916 = !DILocation(line: 0, scope: !9907)
!9917 = !DILocation(line: 45, column: 7, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9907, file: !9908, line: 45, column: 6)
!9919 = !DILocation(line: 45, column: 6, scope: !9907)
!9920 = !DILocation(line: 46, column: 56, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9922, file: !9908, line: 46, column: 7)
!9922 = distinct !DILexicalBlock(scope: !9918, file: !9908, line: 45, column: 38)
!9923 = !DILocation(line: 46, column: 8, scope: !9921)
!9924 = !DILocation(line: 46, column: 7, scope: !9922)
!9925 = !DILocation(line: 51, column: 13, scope: !9918)
!9926 = !DILocation(line: 56, column: 43, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9928, file: !9908, line: 55, column: 11)
!9928 = distinct !DILexicalBlock(scope: !9907, file: !9908, line: 55, column: 6)
!9929 = !DILocation(line: 56, column: 3, scope: !9927)
!9930 = !DILocation(line: 57, column: 2, scope: !9927)
!9931 = !DILocation(line: 60, column: 1, scope: !9907)
!9932 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1213, file: !1213, line: 261, type: !9933, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9935)
!9933 = !DISubroutineType(types: !9934)
!9934 = !{!166, !9911}
!9935 = !{!9936}
!9936 = !DILocalVariable(name: "list", arg: 1, scope: !9932, file: !1213, line: 261, type: !9911)
!9937 = !DILocation(line: 0, scope: !9932)
!9938 = !DILocation(line: 261, column: 1, scope: !9932)
!9939 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1213, file: !1213, line: 417, type: !9940, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9942)
!9940 = !DISubroutineType(types: !9941)
!9941 = !{!166, !9911, !1385}
!9942 = !{!9943, !9944, !9945, !9946}
!9943 = !DILocalVariable(name: "list", arg: 1, scope: !9939, file: !1213, line: 417, type: !9911)
!9944 = !DILocalVariable(name: "node", arg: 2, scope: !9939, file: !1213, line: 417, type: !1385)
!9945 = !DILocalVariable(name: "prev", scope: !9939, file: !1213, line: 417, type: !1385)
!9946 = !DILocalVariable(name: "test", scope: !9939, file: !1213, line: 417, type: !1385)
!9947 = !DILocation(line: 0, scope: !9939)
!9948 = !DILocation(line: 417, column: 1, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9939, file: !1213, line: 417, column: 1)
!9950 = !DILocation(line: 417, column: 1, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9949, file: !1213, line: 417, column: 1)
!9952 = !DILocation(line: 417, column: 1, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !1213, line: 417, column: 1)
!9954 = distinct !DILexicalBlock(scope: !9951, file: !1213, line: 417, column: 1)
!9955 = !DILocation(line: 417, column: 1, scope: !9954)
!9956 = distinct !{!9956, !9948, !9948}
!9957 = !DILocation(line: 417, column: 1, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9953, file: !1213, line: 417, column: 1)
!9959 = !DILocation(line: 417, column: 1, scope: !9939)
!9960 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1213, file: !1213, line: 298, type: !9961, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9963)
!9961 = !DISubroutineType(types: !9962)
!9962 = !{null, !9911, !1385}
!9963 = !{!9964, !9965}
!9964 = !DILocalVariable(name: "list", arg: 1, scope: !9960, file: !1213, line: 298, type: !9911)
!9965 = !DILocalVariable(name: "node", arg: 2, scope: !9960, file: !1213, line: 298, type: !1385)
!9966 = !DILocation(line: 0, scope: !9960)
!9967 = !DILocation(line: 298, column: 1, scope: !9960)
!9968 = !DILocation(line: 298, column: 1, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9960, file: !1213, line: 298, column: 1)
!9970 = !DILocation(line: 298, column: 1, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9969, file: !1213, line: 298, column: 1)
!9972 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1213, file: !1213, line: 231, type: !9973, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9975)
!9973 = !DISubroutineType(types: !9974)
!9974 = !{!1385, !9911}
!9975 = !{!9976}
!9976 = !DILocalVariable(name: "list", arg: 1, scope: !9972, file: !1213, line: 231, type: !9911)
!9977 = !DILocation(line: 0, scope: !9972)
!9978 = !DILocation(line: 233, column: 15, scope: !9972)
!9979 = !DILocation(line: 233, column: 2, scope: !9972)
!9980 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1213, file: !1213, line: 209, type: !9981, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9983)
!9981 = !DISubroutineType(types: !9982)
!9982 = !{null, !1385, !1385}
!9983 = !{!9984, !9985}
!9984 = !DILocalVariable(name: "parent", arg: 1, scope: !9980, file: !1213, line: 209, type: !1385)
!9985 = !DILocalVariable(name: "child", arg: 2, scope: !9980, file: !1213, line: 209, type: !1385)
!9986 = !DILocation(line: 0, scope: !9980)
!9987 = !DILocation(line: 211, column: 10, scope: !9980)
!9988 = !DILocation(line: 211, column: 15, scope: !9980)
!9989 = !DILocation(line: 212, column: 1, scope: !9980)
!9990 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1213, file: !1213, line: 214, type: !9961, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9991)
!9991 = !{!9992, !9993}
!9992 = !DILocalVariable(name: "list", arg: 1, scope: !9990, file: !1213, line: 214, type: !9911)
!9993 = !DILocalVariable(name: "node", arg: 2, scope: !9990, file: !1213, line: 214, type: !1385)
!9994 = !DILocation(line: 0, scope: !9990)
!9995 = !DILocation(line: 216, column: 8, scope: !9990)
!9996 = !DILocation(line: 216, column: 13, scope: !9990)
!9997 = !DILocation(line: 217, column: 1, scope: !9990)
!9998 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1213, file: !1213, line: 243, type: !9973, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !9999)
!9999 = !{!10000}
!10000 = !DILocalVariable(name: "list", arg: 1, scope: !9998, file: !1213, line: 243, type: !9911)
!10001 = !DILocation(line: 0, scope: !9998)
!10002 = !DILocation(line: 245, column: 15, scope: !9998)
!10003 = !DILocation(line: 245, column: 2, scope: !9998)
!10004 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1213, file: !1213, line: 219, type: !9961, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10005)
!10005 = !{!10006, !10007}
!10006 = !DILocalVariable(name: "list", arg: 1, scope: !10004, file: !1213, line: 219, type: !9911)
!10007 = !DILocalVariable(name: "node", arg: 2, scope: !10004, file: !1213, line: 219, type: !1385)
!10008 = !DILocation(line: 0, scope: !10004)
!10009 = !DILocation(line: 221, column: 8, scope: !10004)
!10010 = !DILocation(line: 221, column: 13, scope: !10004)
!10011 = !DILocation(line: 222, column: 1, scope: !10004)
!10012 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1213, file: !1213, line: 401, type: !10013, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10015)
!10013 = !DISubroutineType(types: !10014)
!10014 = !{null, !9911, !1385, !1385}
!10015 = !{!10016, !10017, !10018}
!10016 = !DILocalVariable(name: "list", arg: 1, scope: !10012, file: !1213, line: 401, type: !9911)
!10017 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10012, file: !1213, line: 401, type: !1385)
!10018 = !DILocalVariable(name: "node", arg: 3, scope: !10012, file: !1213, line: 401, type: !1385)
!10019 = !DILocation(line: 0, scope: !10012)
!10020 = !DILocation(line: 401, column: 1, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10012, file: !1213, line: 401, column: 1)
!10022 = !DILocation(line: 0, scope: !10021)
!10023 = !DILocation(line: 401, column: 1, scope: !10012)
!10024 = !DILocation(line: 401, column: 1, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10021, file: !1213, line: 401, column: 1)
!10026 = !DILocation(line: 401, column: 1, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10025, file: !1213, line: 401, column: 1)
!10028 = !DILocation(line: 401, column: 1, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10027, file: !1213, line: 401, column: 1)
!10030 = !DILocation(line: 401, column: 1, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10021, file: !1213, line: 401, column: 1)
!10032 = !DILocation(line: 401, column: 1, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10031, file: !1213, line: 401, column: 1)
!10034 = !DILocation(line: 401, column: 1, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10033, file: !1213, line: 401, column: 1)
!10036 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1213, file: !1213, line: 285, type: !10037, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10039)
!10037 = !DISubroutineType(types: !10038)
!10038 = !{!1385, !1385}
!10039 = !{!10040}
!10040 = !DILocalVariable(name: "node", arg: 1, scope: !10036, file: !1213, line: 285, type: !1385)
!10041 = !DILocation(line: 0, scope: !10036)
!10042 = !DILocation(line: 285, column: 1, scope: !10036)
!10043 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1213, file: !1213, line: 274, type: !10037, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10044)
!10044 = !{!10045}
!10045 = !DILocalVariable(name: "node", arg: 1, scope: !10043, file: !1213, line: 274, type: !1385)
!10046 = !DILocation(line: 0, scope: !10043)
!10047 = !DILocation(line: 274, column: 1, scope: !10043)
!10048 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1213, file: !1213, line: 204, type: !10037, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10049)
!10049 = !{!10050}
!10050 = !DILocalVariable(name: "node", arg: 1, scope: !10048, file: !1213, line: 204, type: !1385)
!10051 = !DILocation(line: 0, scope: !10048)
!10052 = !DILocation(line: 206, column: 15, scope: !10048)
!10053 = !DILocation(line: 206, column: 2, scope: !10048)
!10054 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1306, file: !1306, line: 342, type: !118, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10055)
!10055 = !{!10056, !10057, !10058}
!10056 = !DILocalVariable(name: "pin", arg: 1, scope: !10054, file: !1306, line: 342, type: !103)
!10057 = !DILocalVariable(name: "line", scope: !10054, file: !1306, line: 344, type: !132)
!10058 = !DILocalVariable(name: "port", scope: !10054, file: !1306, line: 345, type: !103)
!10059 = !DILocation(line: 0, scope: !10054)
!10060 = !DILocation(line: 344, column: 18, scope: !10054)
!10061 = !{i32 983040, i32 0}
!10062 = !DILocation(line: 356, column: 9, scope: !10054)
!10063 = !DILocation(line: 370, column: 2, scope: !10054)
!10064 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1306, file: !1306, line: 37, type: !721, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10065)
!10065 = !{!10066, !10067, !10068}
!10066 = !DILocalVariable(name: "line", arg: 1, scope: !10064, file: !1306, line: 37, type: !103)
!10067 = !DILocalVariable(name: "arg", arg: 2, scope: !10064, file: !1306, line: 37, type: !102)
!10068 = !DILocalVariable(name: "data", scope: !10064, file: !1306, line: 39, type: !9859)
!10069 = !DILocation(line: 0, scope: !10064)
!10070 = !DILocation(line: 41, column: 29, scope: !10064)
!10071 = !DILocation(line: 41, column: 39, scope: !10064)
!10072 = !DILocation(line: 41, column: 44, scope: !10064)
!10073 = !DILocation(line: 41, column: 2, scope: !10064)
!10074 = !DILocation(line: 42, column: 1, scope: !10064)
!10075 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1306, file: !1306, line: 376, type: !10076, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10078)
!10076 = !DISubroutineType(types: !10077)
!10077 = !{!103, !103, !103}
!10078 = !{!10079, !10080, !10081, !10083, !10084}
!10079 = !DILocalVariable(name: "port", arg: 1, scope: !10075, file: !1306, line: 376, type: !103)
!10080 = !DILocalVariable(name: "pin", arg: 2, scope: !10075, file: !1306, line: 376, type: !103)
!10081 = !DILocalVariable(name: "clk", scope: !10075, file: !1306, line: 386, type: !10082)
!10082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1166)
!10083 = !DILocalVariable(name: "pclken", scope: !10075, file: !1306, line: 387, type: !1432)
!10084 = !DILocalVariable(name: "ret", scope: !10075, file: !1306, line: 396, type: !103)
!10085 = !DILocation(line: 0, scope: !10075)
!10086 = !DILocation(line: 387, column: 2, scope: !10075)
!10087 = !DILocation(line: 387, column: 22, scope: !10075)
!10088 = !DILocation(line: 399, column: 8, scope: !10075)
!10089 = !DILocation(line: 400, column: 10, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10075, file: !1306, line: 400, column: 6)
!10091 = !DILocation(line: 400, column: 6, scope: !10075)
!10092 = !DILocation(line: 405, column: 2, scope: !10075)
!10093 = !DILocation(line: 407, column: 2, scope: !10075)
!10094 = !DILocation(line: 408, column: 1, scope: !10075)
!10095 = distinct !DISubprogram(name: "clock_control_on", scope: !809, file: !809, line: 123, type: !1271, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10096)
!10096 = !{!10097, !10098, !10099}
!10097 = !DILocalVariable(name: "dev", arg: 1, scope: !10095, file: !809, line: 123, type: !1166)
!10098 = !DILocalVariable(name: "sys", arg: 2, scope: !10095, file: !809, line: 124, type: !901)
!10099 = !DILocalVariable(name: "api", scope: !10095, file: !809, line: 126, type: !1264)
!10100 = !DILocation(line: 0, scope: !10095)
!10101 = !DILocation(line: 127, column: 49, scope: !10095)
!10102 = !DILocation(line: 129, column: 14, scope: !10095)
!10103 = !DILocation(line: 129, column: 9, scope: !10095)
!10104 = !DILocation(line: 129, column: 2, scope: !10095)
!10105 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1306, file: !1306, line: 311, type: !8634, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10106)
!10106 = !{!10107, !10108, !10109}
!10107 = !DILocalVariable(name: "port", arg: 1, scope: !10105, file: !1306, line: 311, type: !103)
!10108 = !DILocalVariable(name: "pin", arg: 2, scope: !10105, file: !1306, line: 311, type: !103)
!10109 = !DILocalVariable(name: "line", scope: !10105, file: !1306, line: 313, type: !132)
!10110 = !DILocation(line: 0, scope: !10105)
!10111 = !DILocation(line: 313, column: 18, scope: !10105)
!10112 = !DILocation(line: 337, column: 2, scope: !10105)
!10113 = !DILocation(line: 340, column: 1, scope: !10105)
!10114 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1306, file: !1306, line: 295, type: !10115, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10117)
!10115 = !DISubroutineType(types: !10116)
!10116 = !{!132, !103}
!10117 = !{!10118}
!10118 = !DILocalVariable(name: "pin", arg: 1, scope: !10114, file: !1306, line: 295, type: !103)
!10119 = !DILocation(line: 0, scope: !10114)
!10120 = !DILocation(line: 307, column: 46, scope: !10114)
!10121 = !DILocation(line: 307, column: 27, scope: !10114)
!10122 = !DILocation(line: 307, column: 32, scope: !10114)
!10123 = !DILocation(line: 307, column: 14, scope: !10114)
!10124 = !DILocation(line: 307, column: 39, scope: !10114)
!10125 = !DILocation(line: 307, column: 2, scope: !10114)
!10126 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5844, file: !5844, line: 671, type: !10127, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10129)
!10127 = !DISubroutineType(types: !10128)
!10128 = !{null, !132, !132}
!10129 = !{!10130, !10131}
!10130 = !DILocalVariable(name: "Port", arg: 1, scope: !10126, file: !5844, line: 671, type: !132)
!10131 = !DILocalVariable(name: "Line", arg: 2, scope: !10126, file: !5844, line: 671, type: !132)
!10132 = !DILocation(line: 0, scope: !10126)
!10133 = !DILocation(line: 673, column: 3, scope: !10126)
!10134 = !DILocalVariable(name: "value", arg: 1, scope: !10135, file: !6843, line: 373, type: !132)
!10135 = distinct !DISubprogram(name: "__RBIT", scope: !6843, file: !6843, line: 373, type: !7850, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10136)
!10136 = !{!10134, !10137}
!10137 = !DILocalVariable(name: "result", scope: !10135, file: !6843, line: 375, type: !132)
!10138 = !DILocation(line: 0, scope: !10135, inlinedAt: !10139)
!10139 = distinct !DILocation(line: 673, column: 3, scope: !10126)
!10140 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10139)
!10141 = !{i64 3545886}
!10142 = !DILocalVariable(name: "value", arg: 1, scope: !10143, file: !6843, line: 403, type: !132)
!10143 = distinct !DISubprogram(name: "__CLZ", scope: !6843, file: !6843, line: 403, type: !10144, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10146)
!10144 = !DISubroutineType(types: !10145)
!10145 = !{!163, !132}
!10146 = !{!10142}
!10147 = !DILocation(line: 0, scope: !10143, inlinedAt: !10148)
!10148 = distinct !DILocation(line: 673, column: 3, scope: !10126)
!10149 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10148)
!10150 = !DILocation(line: 674, column: 1, scope: !10126)
!10151 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9908, file: !9908, line: 69, type: !10152, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10154)
!10152 = !DISubroutineType(types: !10153)
!10153 = !{null, !9911, !1166, !132}
!10154 = !{!10155, !10156, !10157, !10158, !10159}
!10155 = !DILocalVariable(name: "list", arg: 1, scope: !10151, file: !9908, line: 69, type: !9911)
!10156 = !DILocalVariable(name: "port", arg: 2, scope: !10151, file: !9908, line: 70, type: !1166)
!10157 = !DILocalVariable(name: "pins", arg: 3, scope: !10151, file: !9908, line: 71, type: !132)
!10158 = !DILocalVariable(name: "cb", scope: !10151, file: !9908, line: 73, type: !1208)
!10159 = !DILocalVariable(name: "tmp", scope: !10151, file: !9908, line: 73, type: !1208)
!10160 = !DILocation(line: 0, scope: !10151)
!10161 = !DILocation(line: 75, column: 2, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10151, file: !9908, line: 75, column: 2)
!10163 = !DILocation(line: 0, scope: !10162)
!10164 = !DILocation(line: 76, column: 11, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10166, file: !9908, line: 76, column: 7)
!10166 = distinct !DILexicalBlock(scope: !10167, file: !9908, line: 75, column: 57)
!10167 = distinct !DILexicalBlock(scope: !10162, file: !9908, line: 75, column: 2)
!10168 = !DILocation(line: 76, column: 20, scope: !10165)
!10169 = !DILocation(line: 76, column: 7, scope: !10166)
!10170 = !DILocation(line: 78, column: 8, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10165, file: !9908, line: 76, column: 28)
!10172 = !DILocation(line: 78, column: 4, scope: !10171)
!10173 = !DILocation(line: 79, column: 3, scope: !10171)
!10174 = !DILocation(line: 75, column: 2, scope: !10167)
!10175 = !DILocation(line: 81, column: 1, scope: !10151)
!10176 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5844, file: !5844, line: 710, type: !7850, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10177)
!10177 = !{!10178}
!10178 = !DILocalVariable(name: "Line", arg: 1, scope: !10176, file: !5844, line: 710, type: !132)
!10179 = !DILocation(line: 0, scope: !10176)
!10180 = !DILocation(line: 712, column: 21, scope: !10176)
!10181 = !DILocation(line: 0, scope: !10135, inlinedAt: !10182)
!10182 = distinct !DILocation(line: 712, column: 76, scope: !10176)
!10183 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10182)
!10184 = !DILocation(line: 0, scope: !10143, inlinedAt: !10185)
!10185 = distinct !DILocation(line: 712, column: 76, scope: !10176)
!10186 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10185)
!10187 = !DILocation(line: 712, column: 73, scope: !10176)
!10188 = !DILocation(line: 712, column: 3, scope: !10176)
!10189 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10190, file: !10190, line: 910, type: !10191, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10193)
!10190 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10191 = !DISubroutineType(types: !10192)
!10192 = !{null, !1239, !132}
!10193 = !{!10194, !10195}
!10194 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10189, file: !10190, line: 910, type: !1239)
!10195 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10189, file: !10190, line: 910, type: !132)
!10196 = !DILocation(line: 0, scope: !10189)
!10197 = !DILocation(line: 912, column: 3, scope: !10189)
!10198 = !DILocation(line: 913, column: 1, scope: !10189)
!10199 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10190, file: !10190, line: 823, type: !10200, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10202)
!10200 = !DISubroutineType(types: !10201)
!10201 = !{!132, !1239}
!10202 = !{!10203}
!10203 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10199, file: !10190, line: 823, type: !1239)
!10204 = !DILocation(line: 0, scope: !10199)
!10205 = !DILocation(line: 825, column: 21, scope: !10199)
!10206 = !DILocation(line: 825, column: 3, scope: !10199)
!10207 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10190, file: !10190, line: 812, type: !10191, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10208)
!10208 = !{!10209, !10210}
!10209 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10207, file: !10190, line: 812, type: !1239)
!10210 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10207, file: !10190, line: 812, type: !132)
!10211 = !DILocation(line: 0, scope: !10207)
!10212 = !DILocation(line: 814, column: 3, scope: !10207)
!10213 = !DILocation(line: 815, column: 1, scope: !10207)
!10214 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10190, file: !10190, line: 771, type: !10200, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10215)
!10215 = !{!10216}
!10216 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10214, file: !10190, line: 771, type: !1239)
!10217 = !DILocation(line: 0, scope: !10214)
!10218 = !DILocation(line: 773, column: 21, scope: !10214)
!10219 = !DILocation(line: 773, column: 3, scope: !10214)
!10220 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1306, file: !1306, line: 47, type: !10221, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10223)
!10221 = !DISubroutineType(types: !10222)
!10222 = !{!103, !1182, !2630}
!10223 = !{!10224, !10225}
!10224 = !DILocalVariable(name: "flags", arg: 1, scope: !10220, file: !1306, line: 47, type: !1182)
!10225 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10220, file: !1306, line: 47, type: !2630)
!10226 = !DILocation(line: 0, scope: !10220)
!10227 = !DILocation(line: 50, column: 13, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10220, file: !1306, line: 50, column: 6)
!10229 = !DILocation(line: 50, column: 28, scope: !10228)
!10230 = !DILocation(line: 50, column: 6, scope: !10220)
!10231 = !DILocation(line: 53, column: 11, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10228, file: !1306, line: 50, column: 34)
!10233 = !DILocation(line: 55, column: 14, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10232, file: !1306, line: 55, column: 7)
!10235 = !DILocation(line: 55, column: 35, scope: !10234)
!10236 = !DILocation(line: 55, column: 7, scope: !10232)
!10237 = !DILocation(line: 56, column: 14, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10239, file: !1306, line: 56, column: 8)
!10239 = distinct !DILexicalBlock(scope: !10234, file: !1306, line: 55, column: 41)
!10240 = !DILocation(line: 56, column: 8, scope: !10239)
!10241 = !DILocation(line: 0, scope: !10234)
!10242 = !DILocation(line: 66, column: 14, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10232, file: !1306, line: 66, column: 7)
!10244 = !DILocation(line: 66, column: 30, scope: !10243)
!10245 = !DILocation(line: 66, column: 7, scope: !10232)
!10246 = !DILocation(line: 67, column: 12, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10243, file: !1306, line: 66, column: 36)
!10248 = !DILocation(line: 68, column: 3, scope: !10247)
!10249 = !DILocation(line: 68, column: 21, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10243, file: !1306, line: 68, column: 14)
!10251 = !DILocation(line: 68, column: 39, scope: !10250)
!10252 = !DILocation(line: 68, column: 14, scope: !10243)
!10253 = !DILocation(line: 69, column: 12, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10250, file: !1306, line: 68, column: 45)
!10255 = !DILocation(line: 70, column: 3, scope: !10254)
!10256 = !DILocation(line: 72, column: 21, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10228, file: !1306, line: 72, column: 14)
!10258 = !DILocation(line: 72, column: 35, scope: !10257)
!10259 = !DILocation(line: 72, column: 14, scope: !10228)
!10260 = !DILocation(line: 77, column: 14, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10262, file: !1306, line: 77, column: 7)
!10262 = distinct !DILexicalBlock(scope: !10257, file: !1306, line: 72, column: 41)
!10263 = !DILocation(line: 77, column: 30, scope: !10261)
!10264 = !DILocation(line: 77, column: 7, scope: !10262)
!10265 = !DILocation(line: 0, scope: !10228)
!10266 = !DILocation(line: 90, column: 1, scope: !10220)
!10267 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1306, file: !1306, line: 157, type: !10268, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10270)
!10268 = !DISubroutineType(types: !10269)
!10269 = !{null, !1166, !103, !103, !103}
!10270 = !{!10271, !10272, !10273, !10274, !10275, !10276, !10277, !10278, !10279, !10280, !10281}
!10271 = !DILocalVariable(name: "dev", arg: 1, scope: !10267, file: !1306, line: 157, type: !1166)
!10272 = !DILocalVariable(name: "pin", arg: 2, scope: !10267, file: !1306, line: 157, type: !103)
!10273 = !DILocalVariable(name: "conf", arg: 3, scope: !10267, file: !1306, line: 158, type: !103)
!10274 = !DILocalVariable(name: "func", arg: 4, scope: !10267, file: !1306, line: 158, type: !103)
!10275 = !DILocalVariable(name: "cfg", scope: !10267, file: !1306, line: 160, type: !9792)
!10276 = !DILocalVariable(name: "gpio", scope: !10267, file: !1306, line: 161, type: !1239)
!10277 = !DILocalVariable(name: "pin_ll", scope: !10267, file: !1306, line: 163, type: !103)
!10278 = !DILocalVariable(name: "mode", scope: !10267, file: !1306, line: 227, type: !32)
!10279 = !DILocalVariable(name: "otype", scope: !10267, file: !1306, line: 227, type: !32)
!10280 = !DILocalVariable(name: "ospeed", scope: !10267, file: !1306, line: 227, type: !32)
!10281 = !DILocalVariable(name: "pupd", scope: !10267, file: !1306, line: 227, type: !32)
!10282 = !DILocation(line: 0, scope: !10267)
!10283 = !DILocation(line: 160, column: 45, scope: !10267)
!10284 = !DILocation(line: 161, column: 44, scope: !10267)
!10285 = !DILocation(line: 163, column: 15, scope: !10267)
!10286 = !DILocation(line: 229, column: 14, scope: !10267)
!10287 = !DILocation(line: 246, column: 47, scope: !10267)
!10288 = !DILocation(line: 246, column: 2, scope: !10267)
!10289 = !DILocation(line: 248, column: 43, scope: !10267)
!10290 = !DILocation(line: 248, column: 2, scope: !10267)
!10291 = !DILocation(line: 250, column: 40, scope: !10267)
!10292 = !DILocation(line: 250, column: 2, scope: !10267)
!10293 = !DILocation(line: 252, column: 11, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10267, file: !1306, line: 252, column: 6)
!10295 = !DILocation(line: 252, column: 6, scope: !10267)
!10296 = !DILocation(line: 253, column: 11, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10298, file: !1306, line: 253, column: 7)
!10298 = distinct !DILexicalBlock(scope: !10294, file: !1306, line: 252, column: 36)
!10299 = !DILocation(line: 253, column: 7, scope: !10298)
!10300 = !DILocation(line: 254, column: 4, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10297, file: !1306, line: 253, column: 16)
!10302 = !DILocation(line: 255, column: 3, scope: !10301)
!10303 = !DILocation(line: 256, column: 4, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10297, file: !1306, line: 255, column: 10)
!10305 = !DILocation(line: 260, column: 40, scope: !10267)
!10306 = !DILocation(line: 260, column: 2, scope: !10267)
!10307 = !DILocation(line: 265, column: 1, scope: !10267)
!10308 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1306, file: !1306, line: 137, type: !10115, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10309)
!10309 = !{!10310, !10311}
!10310 = !DILocalVariable(name: "pin", arg: 1, scope: !10308, file: !1306, line: 137, type: !103)
!10311 = !DILocalVariable(name: "pinval", scope: !10308, file: !1306, line: 139, type: !132)
!10312 = !DILocation(line: 0, scope: !10308)
!10313 = !DILocation(line: 149, column: 13, scope: !10308)
!10314 = !DILocation(line: 151, column: 2, scope: !10308)
!10315 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10190, file: !10190, line: 342, type: !10316, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10318)
!10316 = !DISubroutineType(types: !10317)
!10317 = !{null, !1239, !132, !132}
!10318 = !{!10319, !10320, !10321}
!10319 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10315, file: !10190, line: 342, type: !1239)
!10320 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10315, file: !10190, line: 342, type: !132)
!10321 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10315, file: !10190, line: 342, type: !132)
!10322 = !DILocation(line: 0, scope: !10315)
!10323 = !DILocation(line: 344, column: 3, scope: !10315)
!10324 = !DILocation(line: 345, column: 1, scope: !10315)
!10325 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10190, file: !10190, line: 413, type: !10316, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10326)
!10326 = !{!10327, !10328, !10329}
!10327 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10325, file: !10190, line: 413, type: !1239)
!10328 = !DILocalVariable(name: "Pin", arg: 2, scope: !10325, file: !10190, line: 413, type: !132)
!10329 = !DILocalVariable(name: "Speed", arg: 3, scope: !10325, file: !10190, line: 413, type: !132)
!10330 = !DILocation(line: 0, scope: !10325)
!10331 = !DILocation(line: 415, column: 3, scope: !10325)
!10332 = !DILocation(line: 0, scope: !10135, inlinedAt: !10333)
!10333 = distinct !DILocation(line: 415, column: 3, scope: !10325)
!10334 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10333)
!10335 = !DILocation(line: 0, scope: !10143, inlinedAt: !10336)
!10336 = distinct !DILocation(line: 415, column: 3, scope: !10325)
!10337 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10336)
!10338 = !DILocation(line: 0, scope: !10135, inlinedAt: !10339)
!10339 = distinct !DILocation(line: 415, column: 3, scope: !10325)
!10340 = !DILocation(line: 0, scope: !10143, inlinedAt: !10341)
!10341 = distinct !DILocation(line: 415, column: 3, scope: !10325)
!10342 = !DILocation(line: 417, column: 1, scope: !10325)
!10343 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10190, file: !10190, line: 484, type: !10316, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10344)
!10344 = !{!10345, !10346, !10347}
!10345 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10343, file: !10190, line: 484, type: !1239)
!10346 = !DILocalVariable(name: "Pin", arg: 2, scope: !10343, file: !10190, line: 484, type: !132)
!10347 = !DILocalVariable(name: "Pull", arg: 3, scope: !10343, file: !10190, line: 484, type: !132)
!10348 = !DILocation(line: 0, scope: !10343)
!10349 = !DILocation(line: 486, column: 3, scope: !10343)
!10350 = !DILocation(line: 0, scope: !10135, inlinedAt: !10351)
!10351 = distinct !DILocation(line: 486, column: 3, scope: !10343)
!10352 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10351)
!10353 = !DILocation(line: 0, scope: !10143, inlinedAt: !10354)
!10354 = distinct !DILocation(line: 486, column: 3, scope: !10343)
!10355 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10354)
!10356 = !DILocation(line: 0, scope: !10135, inlinedAt: !10357)
!10357 = distinct !DILocation(line: 486, column: 3, scope: !10343)
!10358 = !DILocation(line: 0, scope: !10143, inlinedAt: !10359)
!10359 = distinct !DILocation(line: 486, column: 3, scope: !10343)
!10360 = !DILocation(line: 487, column: 1, scope: !10343)
!10361 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10190, file: !10190, line: 556, type: !10316, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10362)
!10362 = !{!10363, !10364, !10365}
!10363 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10361, file: !10190, line: 556, type: !1239)
!10364 = !DILocalVariable(name: "Pin", arg: 2, scope: !10361, file: !10190, line: 556, type: !132)
!10365 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10361, file: !10190, line: 556, type: !132)
!10366 = !DILocation(line: 0, scope: !10361)
!10367 = !DILocation(line: 558, column: 3, scope: !10361)
!10368 = !DILocation(line: 0, scope: !10135, inlinedAt: !10369)
!10369 = distinct !DILocation(line: 558, column: 3, scope: !10361)
!10370 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10369)
!10371 = !DILocation(line: 0, scope: !10143, inlinedAt: !10372)
!10372 = distinct !DILocation(line: 558, column: 3, scope: !10361)
!10373 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10372)
!10374 = !DILocation(line: 0, scope: !10135, inlinedAt: !10375)
!10375 = distinct !DILocation(line: 558, column: 3, scope: !10361)
!10376 = !DILocation(line: 0, scope: !10143, inlinedAt: !10377)
!10377 = distinct !DILocation(line: 558, column: 3, scope: !10361)
!10378 = !DILocation(line: 560, column: 1, scope: !10361)
!10379 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10190, file: !10190, line: 633, type: !10316, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10380)
!10380 = !{!10381, !10382, !10383}
!10381 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10379, file: !10190, line: 633, type: !1239)
!10382 = !DILocalVariable(name: "Pin", arg: 2, scope: !10379, file: !10190, line: 633, type: !132)
!10383 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10379, file: !10190, line: 633, type: !132)
!10384 = !DILocation(line: 0, scope: !10379)
!10385 = !DILocation(line: 635, column: 3, scope: !10379)
!10386 = !DILocation(line: 0, scope: !10135, inlinedAt: !10387)
!10387 = distinct !DILocation(line: 635, column: 3, scope: !10379)
!10388 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10387)
!10389 = !DILocation(line: 0, scope: !10143, inlinedAt: !10390)
!10390 = distinct !DILocation(line: 635, column: 3, scope: !10379)
!10391 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10390)
!10392 = !DILocation(line: 0, scope: !10135, inlinedAt: !10393)
!10393 = distinct !DILocation(line: 635, column: 3, scope: !10379)
!10394 = !DILocation(line: 0, scope: !10143, inlinedAt: !10395)
!10395 = distinct !DILocation(line: 635, column: 3, scope: !10379)
!10396 = !DILocation(line: 637, column: 1, scope: !10379)
!10397 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10190, file: !10190, line: 273, type: !10316, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10398)
!10398 = !{!10399, !10400, !10401}
!10399 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10397, file: !10190, line: 273, type: !1239)
!10400 = !DILocalVariable(name: "Pin", arg: 2, scope: !10397, file: !10190, line: 273, type: !132)
!10401 = !DILocalVariable(name: "Mode", arg: 3, scope: !10397, file: !10190, line: 273, type: !132)
!10402 = !DILocation(line: 0, scope: !10397)
!10403 = !DILocation(line: 275, column: 3, scope: !10397)
!10404 = !DILocation(line: 0, scope: !10135, inlinedAt: !10405)
!10405 = distinct !DILocation(line: 275, column: 3, scope: !10397)
!10406 = !DILocation(line: 380, column: 4, scope: !10135, inlinedAt: !10405)
!10407 = !DILocation(line: 0, scope: !10143, inlinedAt: !10408)
!10408 = distinct !DILocation(line: 275, column: 3, scope: !10397)
!10409 = !DILocation(line: 414, column: 7, scope: !10143, inlinedAt: !10408)
!10410 = !DILocation(line: 0, scope: !10135, inlinedAt: !10411)
!10411 = distinct !DILocation(line: 275, column: 3, scope: !10397)
!10412 = !DILocation(line: 0, scope: !10143, inlinedAt: !10413)
!10413 = distinct !DILocation(line: 275, column: 3, scope: !10397)
!10414 = !DILocation(line: 276, column: 1, scope: !10397)
!10415 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1306, file: !1306, line: 698, type: !1319, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10416)
!10416 = !{!10417, !10418, !10419}
!10417 = !DILocalVariable(name: "dev", arg: 1, scope: !10415, file: !1306, line: 698, type: !1166)
!10418 = !DILocalVariable(name: "data", scope: !10415, file: !1306, line: 700, type: !9859)
!10419 = !DILocalVariable(name: "ret", scope: !10415, file: !1306, line: 701, type: !103)
!10420 = !DILocation(line: 0, scope: !10415)
!10421 = !DILocation(line: 700, column: 38, scope: !10415)
!10422 = !DILocation(line: 703, column: 8, scope: !10415)
!10423 = !DILocation(line: 703, column: 12, scope: !10415)
!10424 = !DILocation(line: 705, column: 7, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10415, file: !1306, line: 705, column: 6)
!10426 = !DILocation(line: 705, column: 6, scope: !10415)
!10427 = !DILocation(line: 722, column: 8, scope: !10415)
!10428 = !DILocation(line: 723, column: 10, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10415, file: !1306, line: 723, column: 6)
!10430 = !DILocation(line: 723, column: 6, scope: !10415)
!10431 = !DILocation(line: 731, column: 1, scope: !10415)
!10432 = distinct !DISubprogram(name: "device_is_ready", scope: !6684, file: !6684, line: 47, type: !10433, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10435)
!10433 = !DISubroutineType(types: !10434)
!10434 = !{!166, !1166}
!10435 = !{!10436}
!10436 = !DILocalVariable(name: "dev", arg: 1, scope: !10432, file: !6684, line: 47, type: !1166)
!10437 = !DILocation(line: 0, scope: !10432)
!10438 = !DILocation(line: 55, column: 2, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10432, file: !6684, line: 55, column: 2)
!10440 = !{i64 2155034860}
!10441 = !DILocation(line: 56, column: 9, scope: !10432)
!10442 = !DILocation(line: 56, column: 2, scope: !10432)
!10443 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1306, file: !1306, line: 270, type: !10444, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10446)
!10444 = !DISubroutineType(types: !10445)
!10445 = !{!103, !1166, !166}
!10446 = !{!10447, !10448, !10449, !10450, !10451}
!10447 = !DILocalVariable(name: "dev", arg: 1, scope: !10443, file: !1306, line: 270, type: !1166)
!10448 = !DILocalVariable(name: "on", arg: 2, scope: !10443, file: !1306, line: 270, type: !166)
!10449 = !DILocalVariable(name: "cfg", scope: !10443, file: !1306, line: 272, type: !9792)
!10450 = !DILocalVariable(name: "ret", scope: !10443, file: !1306, line: 273, type: !103)
!10451 = !DILocalVariable(name: "clk", scope: !10443, file: !1306, line: 278, type: !10082)
!10452 = !DILocation(line: 0, scope: !10443)
!10453 = !DILocation(line: 272, column: 45, scope: !10443)
!10454 = !DILocation(line: 282, column: 38, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10456, file: !1306, line: 280, column: 10)
!10456 = distinct !DILexicalBlock(scope: !10443, file: !1306, line: 280, column: 6)
!10457 = !DILocation(line: 282, column: 6, scope: !10455)
!10458 = !DILocation(line: 281, column: 9, scope: !10455)
!10459 = !DILocation(line: 293, column: 1, scope: !10443)
!10460 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !10433, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10461)
!10461 = !{!10462}
!10462 = !DILocalVariable(name: "dev", arg: 1, scope: !10460, file: !152, line: 730, type: !1166)
!10463 = !DILocation(line: 0, scope: !10460)
!10464 = !DILocation(line: 732, column: 9, scope: !10460)
!10465 = !DILocation(line: 732, column: 2, scope: !10460)
!10466 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1306, file: !1306, line: 496, type: !10467, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1137, retainedNodes: !10469)
!10467 = !DISubroutineType(types: !10468)
!10468 = !{!103, !1166, !103, !103, !103}
!10469 = !{!10470, !10471, !10472, !10473, !10474, !10475}
!10470 = !DILocalVariable(name: "dev", arg: 1, scope: !10466, file: !1306, line: 496, type: !1166)
!10471 = !DILocalVariable(name: "pin", arg: 2, scope: !10466, file: !1306, line: 496, type: !103)
!10472 = !DILocalVariable(name: "conf", arg: 3, scope: !10466, file: !1306, line: 496, type: !103)
!10473 = !DILocalVariable(name: "func", arg: 4, scope: !10466, file: !1306, line: 496, type: !103)
!10474 = !DILocalVariable(name: "ret", scope: !10466, file: !1306, line: 498, type: !103)
!10475 = !DILocalVariable(name: "gpio_out", scope: !10476, file: !1306, line: 508, type: !132)
!10476 = distinct !DILexicalBlock(scope: !10477, file: !1306, line: 507, column: 27)
!10477 = distinct !DILexicalBlock(scope: !10466, file: !1306, line: 507, column: 6)
!10478 = !DILocation(line: 0, scope: !10466)
!10479 = !DILocation(line: 505, column: 2, scope: !10466)
!10480 = !DILocation(line: 507, column: 11, scope: !10477)
!10481 = !DILocation(line: 507, column: 6, scope: !10466)
!10482 = !DILocation(line: 508, column: 28, scope: !10476)
!10483 = !DILocation(line: 0, scope: !10476)
!10484 = !DILocation(line: 510, column: 16, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10476, file: !1306, line: 510, column: 7)
!10486 = !DILocation(line: 0, scope: !10485)
!10487 = !DILocation(line: 510, column: 7, scope: !10476)
!10488 = !DILocation(line: 511, column: 4, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10485, file: !1306, line: 510, column: 32)
!10490 = !DILocation(line: 512, column: 3, scope: !10489)
!10491 = !DILocation(line: 513, column: 4, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10493, file: !1306, line: 512, column: 39)
!10493 = distinct !DILexicalBlock(scope: !10485, file: !1306, line: 512, column: 14)
!10494 = !DILocation(line: 514, column: 3, scope: !10492)
!10495 = !DILocation(line: 518, column: 1, scope: !10466)
!10496 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1623, file: !1623, line: 526, type: !1494, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10497)
!10497 = !{!10498, !10499, !10500}
!10498 = !DILocalVariable(name: "dev", arg: 1, scope: !10496, file: !1623, line: 526, type: !1496)
!10499 = !DILocalVariable(name: "c", arg: 2, scope: !10496, file: !1623, line: 526, type: !233)
!10500 = !DILocalVariable(name: "config", scope: !10496, file: !1623, line: 528, type: !10501)
!10501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 32)
!10502 = !DILocation(line: 0, scope: !10496)
!10503 = !DILocation(line: 528, column: 48, scope: !10496)
!10504 = !DILocation(line: 531, column: 40, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10496, file: !1623, line: 531, column: 6)
!10506 = !DILocation(line: 531, column: 6, scope: !10505)
!10507 = !DILocation(line: 531, column: 6, scope: !10496)
!10508 = !DILocation(line: 532, column: 34, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10505, file: !1623, line: 531, column: 48)
!10510 = !DILocation(line: 532, column: 3, scope: !10509)
!10511 = !DILocation(line: 533, column: 2, scope: !10509)
!10512 = !DILocation(line: 539, column: 42, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10496, file: !1623, line: 539, column: 6)
!10514 = !DILocation(line: 539, column: 7, scope: !10513)
!10515 = !DILocation(line: 539, column: 6, scope: !10496)
!10516 = !DILocation(line: 543, column: 52, scope: !10496)
!10517 = !DILocation(line: 543, column: 22, scope: !10496)
!10518 = !DILocation(line: 543, column: 5, scope: !10496)
!10519 = !DILocation(line: 545, column: 2, scope: !10496)
!10520 = !DILocation(line: 546, column: 1, scope: !10496)
!10521 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1623, file: !1623, line: 548, type: !1513, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10522)
!10522 = !{!10523, !10524, !10525, !10526}
!10523 = !DILocalVariable(name: "dev", arg: 1, scope: !10521, file: !1623, line: 548, type: !1496)
!10524 = !DILocalVariable(name: "c", arg: 2, scope: !10521, file: !1623, line: 549, type: !164)
!10525 = !DILocalVariable(name: "config", scope: !10521, file: !1623, line: 551, type: !10501)
!10526 = !DILocalVariable(name: "key", scope: !10521, file: !1623, line: 555, type: !32)
!10527 = !DILocation(line: 0, scope: !10521)
!10528 = !DILocation(line: 551, column: 48, scope: !10521)
!10529 = !DILocation(line: 562, column: 2, scope: !10521)
!10530 = !DILocation(line: 563, column: 41, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10532, file: !1623, line: 563, column: 7)
!10532 = distinct !DILexicalBlock(scope: !10521, file: !1623, line: 562, column: 12)
!10533 = !DILocation(line: 563, column: 7, scope: !10531)
!10534 = !DILocation(line: 563, column: 7, scope: !10532)
!10535 = !DILocation(line: 55, column: 2, scope: !10536, inlinedAt: !10540)
!10536 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5823, file: !5823, line: 42, type: !5824, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10537)
!10537 = !{!10538, !10539}
!10538 = !DILocalVariable(name: "key", scope: !10536, file: !5823, line: 44, type: !32)
!10539 = !DILocalVariable(name: "tmp", scope: !10536, file: !5823, line: 53, type: !32)
!10540 = distinct !DILocation(line: 564, column: 10, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10531, file: !1623, line: 563, column: 49)
!10542 = !{i64 2271557}
!10543 = !DILocation(line: 0, scope: !10536, inlinedAt: !10540)
!10544 = !DILocation(line: 565, column: 42, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10541, file: !1623, line: 565, column: 8)
!10546 = !DILocation(line: 565, column: 8, scope: !10545)
!10547 = !DILocation(line: 565, column: 8, scope: !10541)
!10548 = !DILocalVariable(name: "key", arg: 1, scope: !10549, file: !5823, line: 84, type: !32)
!10549 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5823, file: !5823, line: 84, type: !5834, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10550)
!10550 = !{!10548}
!10551 = !DILocation(line: 0, scope: !10549, inlinedAt: !10552)
!10552 = distinct !DILocation(line: 568, column: 4, scope: !10541)
!10553 = !DILocation(line: 95, column: 2, scope: !10549, inlinedAt: !10552)
!10554 = !{i64 2272374}
!10555 = !DILocation(line: 569, column: 3, scope: !10541)
!10556 = distinct !{!10556, !10529, !10557}
!10557 = !DILocation(line: 570, column: 2, scope: !10521)
!10558 = !DILocation(line: 592, column: 33, scope: !10521)
!10559 = !DILocation(line: 592, column: 2, scope: !10521)
!10560 = !DILocation(line: 0, scope: !10549, inlinedAt: !10561)
!10561 = distinct !DILocation(line: 593, column: 2, scope: !10521)
!10562 = !DILocation(line: 95, column: 2, scope: !10549, inlinedAt: !10561)
!10563 = !DILocation(line: 594, column: 1, scope: !10521)
!10564 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1623, file: !1623, line: 596, type: !1517, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10565)
!10565 = !{!10566, !10567, !10568}
!10566 = !DILocalVariable(name: "dev", arg: 1, scope: !10564, file: !1623, line: 596, type: !1496)
!10567 = !DILocalVariable(name: "config", scope: !10564, file: !1623, line: 598, type: !10501)
!10568 = !DILocalVariable(name: "err", scope: !10564, file: !1623, line: 599, type: !132)
!10569 = !DILocation(line: 0, scope: !10564)
!10570 = !DILocation(line: 598, column: 48, scope: !10564)
!10571 = !DILocation(line: 606, column: 40, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10564, file: !1623, line: 606, column: 6)
!10573 = !DILocation(line: 606, column: 6, scope: !10572)
!10574 = !DILocation(line: 606, column: 6, scope: !10564)
!10575 = !DILocation(line: 610, column: 39, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10564, file: !1623, line: 610, column: 6)
!10577 = !DILocation(line: 610, column: 6, scope: !10576)
!10578 = !DILocation(line: 610, column: 6, scope: !10564)
!10579 = !DILocation(line: 614, column: 39, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10564, file: !1623, line: 614, column: 6)
!10581 = !DILocation(line: 614, column: 6, scope: !10580)
!10582 = !DILocation(line: 614, column: 6, scope: !10564)
!10583 = !DILocation(line: 619, column: 40, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10564, file: !1623, line: 619, column: 6)
!10585 = !DILocation(line: 619, column: 6, scope: !10584)
!10586 = !DILocation(line: 619, column: 6, scope: !10564)
!10587 = !DILocation(line: 623, column: 10, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10564, file: !1623, line: 623, column: 6)
!10589 = !DILocation(line: 623, column: 6, scope: !10564)
!10590 = !DILocation(line: 624, column: 34, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10588, file: !1623, line: 623, column: 24)
!10592 = !DILocation(line: 624, column: 3, scope: !10591)
!10593 = !DILocation(line: 625, column: 2, scope: !10591)
!10594 = !DILocation(line: 632, column: 10, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10564, file: !1623, line: 632, column: 6)
!10596 = !DILocation(line: 632, column: 6, scope: !10564)
!10597 = !DILocation(line: 633, column: 34, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10595, file: !1623, line: 632, column: 32)
!10599 = !DILocation(line: 633, column: 3, scope: !10598)
!10600 = !DILocation(line: 634, column: 2, scope: !10598)
!10601 = !DILocation(line: 636, column: 10, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10564, file: !1623, line: 636, column: 6)
!10603 = !DILocation(line: 636, column: 6, scope: !10564)
!10604 = !DILocation(line: 637, column: 33, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10602, file: !1623, line: 636, column: 31)
!10606 = !DILocation(line: 637, column: 3, scope: !10605)
!10607 = !DILocation(line: 638, column: 2, scope: !10605)
!10608 = !DILocation(line: 640, column: 10, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10564, file: !1623, line: 640, column: 6)
!10610 = !DILocation(line: 640, column: 6, scope: !10564)
!10611 = !DILocation(line: 641, column: 33, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10609, file: !1623, line: 640, column: 32)
!10613 = !DILocation(line: 641, column: 3, scope: !10612)
!10614 = !DILocation(line: 642, column: 2, scope: !10612)
!10615 = !DILocation(line: 646, column: 32, scope: !10564)
!10616 = !DILocation(line: 646, column: 2, scope: !10564)
!10617 = !DILocation(line: 648, column: 2, scope: !10564)
!10618 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1623, file: !1623, line: 419, type: !1521, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10619)
!10619 = !{!10620, !10621, !10622, !10623, !10625, !10626, !10627, !10628}
!10620 = !DILocalVariable(name: "dev", arg: 1, scope: !10618, file: !1623, line: 419, type: !1496)
!10621 = !DILocalVariable(name: "cfg", arg: 2, scope: !10618, file: !1623, line: 420, type: !1523)
!10622 = !DILocalVariable(name: "config", scope: !10618, file: !1623, line: 422, type: !10501)
!10623 = !DILocalVariable(name: "data", scope: !10618, file: !1623, line: 423, type: !10624)
!10624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 32)
!10625 = !DILocalVariable(name: "parity", scope: !10618, file: !1623, line: 424, type: !7111)
!10626 = !DILocalVariable(name: "stopbits", scope: !10618, file: !1623, line: 425, type: !7111)
!10627 = !DILocalVariable(name: "databits", scope: !10618, file: !1623, line: 426, type: !7111)
!10628 = !DILocalVariable(name: "flowctrl", scope: !10618, file: !1623, line: 428, type: !7111)
!10629 = !DILocation(line: 0, scope: !10618)
!10630 = !DILocation(line: 422, column: 48, scope: !10618)
!10631 = !DILocation(line: 423, column: 38, scope: !10618)
!10632 = !DILocation(line: 424, column: 56, scope: !10618)
!10633 = !DILocation(line: 424, column: 51, scope: !10618)
!10634 = !DILocation(line: 424, column: 26, scope: !10618)
!10635 = !DILocation(line: 425, column: 60, scope: !10618)
!10636 = !DILocation(line: 425, column: 55, scope: !10618)
!10637 = !DILocation(line: 425, column: 28, scope: !10618)
!10638 = !DILocation(line: 426, column: 60, scope: !10618)
!10639 = !DILocation(line: 426, column: 55, scope: !10618)
!10640 = !DILocation(line: 426, column: 28, scope: !10618)
!10641 = !DILocation(line: 428, column: 58, scope: !10618)
!10642 = !DILocation(line: 428, column: 53, scope: !10618)
!10643 = !DILocation(line: 428, column: 28, scope: !10618)
!10644 = !DILocation(line: 431, column: 44, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10618, file: !1623, line: 431, column: 6)
!10646 = !DILocation(line: 438, column: 22, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10618, file: !1623, line: 437, column: 6)
!10648 = !DILocation(line: 437, column: 6, scope: !10618)
!10649 = !DILocation(line: 448, column: 6, scope: !10618)
!10650 = !DILocation(line: 465, column: 47, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10618, file: !1623, line: 465, column: 6)
!10652 = !DILocation(line: 475, column: 21, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10618, file: !1623, line: 475, column: 6)
!10654 = !DILocation(line: 475, column: 6, scope: !10618)
!10655 = !DILocation(line: 476, column: 8, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10657, file: !1623, line: 476, column: 7)
!10657 = distinct !DILexicalBlock(scope: !10653, file: !1623, line: 475, column: 49)
!10658 = !DILocation(line: 477, column: 34, scope: !10656)
!10659 = !DILocation(line: 476, column: 7, scope: !10657)
!10660 = !DILocation(line: 482, column: 27, scope: !10618)
!10661 = !DILocation(line: 482, column: 2, scope: !10618)
!10662 = !DILocation(line: 484, column: 16, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10618, file: !1623, line: 484, column: 6)
!10664 = !DILocation(line: 484, column: 13, scope: !10663)
!10665 = !DILocation(line: 484, column: 6, scope: !10618)
!10666 = !DILocation(line: 485, column: 3, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10663, file: !1623, line: 484, column: 44)
!10668 = !DILocation(line: 486, column: 2, scope: !10667)
!10669 = !DILocation(line: 488, column: 18, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10618, file: !1623, line: 488, column: 6)
!10671 = !DILocation(line: 488, column: 15, scope: !10670)
!10672 = !DILocation(line: 488, column: 6, scope: !10618)
!10673 = !DILocation(line: 489, column: 3, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10670, file: !1623, line: 488, column: 48)
!10675 = !DILocation(line: 490, column: 2, scope: !10674)
!10676 = !DILocation(line: 492, column: 18, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10618, file: !1623, line: 492, column: 6)
!10678 = !DILocation(line: 492, column: 15, scope: !10677)
!10679 = !DILocation(line: 492, column: 6, scope: !10618)
!10680 = !DILocation(line: 493, column: 3, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10677, file: !1623, line: 492, column: 48)
!10682 = !DILocation(line: 494, column: 2, scope: !10681)
!10683 = !DILocation(line: 496, column: 18, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10618, file: !1623, line: 496, column: 6)
!10685 = !DILocation(line: 496, column: 15, scope: !10684)
!10686 = !DILocation(line: 496, column: 6, scope: !10618)
!10687 = !DILocation(line: 497, column: 3, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10684, file: !1623, line: 496, column: 46)
!10689 = !DILocation(line: 498, column: 2, scope: !10688)
!10690 = !DILocation(line: 500, column: 11, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10618, file: !1623, line: 500, column: 6)
!10692 = !DILocation(line: 500, column: 29, scope: !10691)
!10693 = !DILocation(line: 500, column: 20, scope: !10691)
!10694 = !DILocation(line: 500, column: 6, scope: !10618)
!10695 = !DILocation(line: 501, column: 3, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10691, file: !1623, line: 500, column: 40)
!10697 = !DILocation(line: 502, column: 26, scope: !10696)
!10698 = !DILocation(line: 502, column: 19, scope: !10696)
!10699 = !DILocation(line: 503, column: 2, scope: !10696)
!10700 = !DILocation(line: 505, column: 26, scope: !10618)
!10701 = !DILocation(line: 505, column: 2, scope: !10618)
!10702 = !DILocation(line: 506, column: 2, scope: !10618)
!10703 = !DILocation(line: 507, column: 1, scope: !10618)
!10704 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1623, file: !1623, line: 509, type: !1534, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10705)
!10705 = !{!10706, !10707, !10708}
!10706 = !DILocalVariable(name: "dev", arg: 1, scope: !10704, file: !1623, line: 509, type: !1496)
!10707 = !DILocalVariable(name: "cfg", arg: 2, scope: !10704, file: !1623, line: 510, type: !1536)
!10708 = !DILocalVariable(name: "data", scope: !10704, file: !1623, line: 512, type: !10624)
!10709 = !DILocation(line: 0, scope: !10704)
!10710 = !DILocation(line: 512, column: 38, scope: !10704)
!10711 = !DILocation(line: 514, column: 24, scope: !10704)
!10712 = !DILocation(line: 514, column: 7, scope: !10704)
!10713 = !DILocation(line: 514, column: 16, scope: !10704)
!10714 = !DILocation(line: 515, column: 41, scope: !10704)
!10715 = !{i32 0, i32 1537}
!10716 = !DILocation(line: 515, column: 16, scope: !10704)
!10717 = !DILocation(line: 515, column: 7, scope: !10704)
!10718 = !DILocation(line: 515, column: 14, scope: !10704)
!10719 = !DILocation(line: 517, column: 3, scope: !10704)
!10720 = !{i32 0, i32 12289}
!10721 = !DILocation(line: 516, column: 19, scope: !10704)
!10722 = !DILocation(line: 516, column: 7, scope: !10704)
!10723 = !DILocation(line: 516, column: 17, scope: !10704)
!10724 = !DILocation(line: 519, column: 3, scope: !10704)
!10725 = !DILocation(line: 519, column: 33, scope: !10704)
!10726 = !DILocation(line: 518, column: 19, scope: !10704)
!10727 = !DILocation(line: 518, column: 7, scope: !10704)
!10728 = !DILocation(line: 518, column: 17, scope: !10704)
!10729 = !DILocation(line: 521, column: 3, scope: !10704)
!10730 = !{i32 0, i32 769}
!10731 = !DILocation(line: 520, column: 19, scope: !10704)
!10732 = !DILocation(line: 520, column: 7, scope: !10704)
!10733 = !DILocation(line: 520, column: 17, scope: !10704)
!10734 = !DILocation(line: 522, column: 2, scope: !10704)
!10735 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1623, file: !1623, line: 661, type: !1539, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10736)
!10736 = !{!10737, !10738, !10739, !10740, !10741, !10742}
!10737 = !DILocalVariable(name: "dev", arg: 1, scope: !10735, file: !1623, line: 661, type: !1496)
!10738 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10735, file: !1623, line: 662, type: !264)
!10739 = !DILocalVariable(name: "size", arg: 3, scope: !10735, file: !1623, line: 663, type: !103)
!10740 = !DILocalVariable(name: "config", scope: !10735, file: !1623, line: 665, type: !10501)
!10741 = !DILocalVariable(name: "num_tx", scope: !10735, file: !1623, line: 666, type: !163)
!10742 = !DILocalVariable(name: "key", scope: !10735, file: !1623, line: 667, type: !32)
!10743 = !DILocation(line: 0, scope: !10735)
!10744 = !DILocation(line: 665, column: 48, scope: !10735)
!10745 = !DILocation(line: 669, column: 41, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10735, file: !1623, line: 669, column: 6)
!10747 = !DILocation(line: 669, column: 7, scope: !10746)
!10748 = !DILocation(line: 669, column: 6, scope: !10735)
!10749 = !DILocation(line: 55, column: 2, scope: !10536, inlinedAt: !10750)
!10750 = distinct !DILocation(line: 674, column: 8, scope: !10735)
!10751 = !DILocation(line: 0, scope: !10536, inlinedAt: !10750)
!10752 = !DILocation(line: 676, column: 24, scope: !10735)
!10753 = !DILocation(line: 676, column: 29, scope: !10735)
!10754 = !DILocation(line: 677, column: 43, scope: !10735)
!10755 = !DILocation(line: 677, column: 9, scope: !10735)
!10756 = !DILocation(line: 676, column: 2, scope: !10735)
!10757 = !DILocation(line: 681, column: 34, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10735, file: !1623, line: 677, column: 51)
!10759 = !DILocation(line: 681, column: 55, scope: !10758)
!10760 = !DILocation(line: 681, column: 41, scope: !10758)
!10761 = !DILocation(line: 681, column: 3, scope: !10758)
!10762 = !DILocation(line: 676, column: 17, scope: !10735)
!10763 = distinct !{!10763, !10756, !10764}
!10764 = !DILocation(line: 682, column: 2, scope: !10735)
!10765 = !DILocation(line: 0, scope: !10549, inlinedAt: !10766)
!10766 = distinct !DILocation(line: 684, column: 2, scope: !10735)
!10767 = !DILocation(line: 95, column: 2, scope: !10549, inlinedAt: !10766)
!10768 = !DILocation(line: 686, column: 2, scope: !10735)
!10769 = !DILocation(line: 687, column: 1, scope: !10735)
!10770 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1623, file: !1623, line: 689, type: !1543, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10771)
!10771 = !{!10772, !10773, !10774, !10775, !10776}
!10772 = !DILocalVariable(name: "dev", arg: 1, scope: !10770, file: !1623, line: 689, type: !1496)
!10773 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10770, file: !1623, line: 689, type: !270)
!10774 = !DILocalVariable(name: "size", arg: 3, scope: !10770, file: !1623, line: 690, type: !271)
!10775 = !DILocalVariable(name: "config", scope: !10770, file: !1623, line: 692, type: !10501)
!10776 = !DILocalVariable(name: "num_rx", scope: !10770, file: !1623, line: 693, type: !163)
!10777 = !DILocation(line: 0, scope: !10770)
!10778 = !DILocation(line: 692, column: 48, scope: !10770)
!10779 = !DILocation(line: 696, column: 44, scope: !10770)
!10780 = !DILocation(line: 695, column: 24, scope: !10770)
!10781 = !DILocation(line: 695, column: 29, scope: !10770)
!10782 = !DILocation(line: 696, column: 9, scope: !10770)
!10783 = !DILocation(line: 695, column: 2, scope: !10770)
!10784 = !DILocation(line: 700, column: 53, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10770, file: !1623, line: 696, column: 52)
!10786 = !DILocation(line: 700, column: 23, scope: !10785)
!10787 = !DILocation(line: 700, column: 17, scope: !10785)
!10788 = !DILocation(line: 700, column: 3, scope: !10785)
!10789 = !DILocation(line: 700, column: 21, scope: !10785)
!10790 = !DILocation(line: 703, column: 41, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10785, file: !1623, line: 703, column: 7)
!10792 = !DILocation(line: 703, column: 7, scope: !10791)
!10793 = !DILocation(line: 703, column: 7, scope: !10785)
!10794 = !DILocation(line: 704, column: 35, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10791, file: !1623, line: 703, column: 49)
!10796 = !DILocation(line: 704, column: 4, scope: !10795)
!10797 = !DILocation(line: 709, column: 3, scope: !10795)
!10798 = !DILocation(line: 695, column: 17, scope: !10770)
!10799 = distinct !{!10799, !10783, !10800}
!10800 = !DILocation(line: 710, column: 2, scope: !10770)
!10801 = !DILocation(line: 712, column: 2, scope: !10770)
!10802 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1623, file: !1623, line: 715, type: !1547, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10803)
!10803 = !{!10804, !10805}
!10804 = !DILocalVariable(name: "dev", arg: 1, scope: !10802, file: !1623, line: 715, type: !1496)
!10805 = !DILocalVariable(name: "config", scope: !10802, file: !1623, line: 717, type: !10501)
!10806 = !DILocation(line: 0, scope: !10802)
!10807 = !DILocation(line: 717, column: 48, scope: !10802)
!10808 = !DILocation(line: 729, column: 31, scope: !10802)
!10809 = !DILocation(line: 729, column: 2, scope: !10802)
!10810 = !DILocation(line: 734, column: 1, scope: !10802)
!10811 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1623, file: !1623, line: 736, type: !1547, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10812)
!10812 = !{!10813, !10814}
!10813 = !DILocalVariable(name: "dev", arg: 1, scope: !10811, file: !1623, line: 736, type: !1496)
!10814 = !DILocalVariable(name: "config", scope: !10811, file: !1623, line: 738, type: !10501)
!10815 = !DILocation(line: 0, scope: !10811)
!10816 = !DILocation(line: 738, column: 48, scope: !10811)
!10817 = !DILocation(line: 746, column: 32, scope: !10811)
!10818 = !DILocation(line: 746, column: 2, scope: !10811)
!10819 = !DILocation(line: 756, column: 1, scope: !10811)
!10820 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1623, file: !1623, line: 758, type: !1517, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10821)
!10821 = !{!10822, !10823}
!10822 = !DILocalVariable(name: "dev", arg: 1, scope: !10820, file: !1623, line: 758, type: !1496)
!10823 = !DILocalVariable(name: "config", scope: !10820, file: !1623, line: 760, type: !10501)
!10824 = !DILocation(line: 0, scope: !10820)
!10825 = !DILocation(line: 760, column: 48, scope: !10820)
!10826 = !DILocation(line: 762, column: 43, scope: !10820)
!10827 = !DILocation(line: 762, column: 9, scope: !10820)
!10828 = !DILocation(line: 762, column: 50, scope: !10820)
!10829 = !DILocation(line: 763, column: 35, scope: !10820)
!10830 = !DILocation(line: 763, column: 3, scope: !10820)
!10831 = !DILocation(line: 762, column: 2, scope: !10820)
!10832 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1623, file: !1623, line: 773, type: !1547, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10833)
!10833 = !{!10834, !10835}
!10834 = !DILocalVariable(name: "dev", arg: 1, scope: !10832, file: !1623, line: 773, type: !1496)
!10835 = !DILocalVariable(name: "config", scope: !10832, file: !1623, line: 775, type: !10501)
!10836 = !DILocation(line: 0, scope: !10832)
!10837 = !DILocation(line: 775, column: 48, scope: !10832)
!10838 = !DILocation(line: 777, column: 33, scope: !10832)
!10839 = !DILocation(line: 777, column: 2, scope: !10832)
!10840 = !DILocation(line: 778, column: 1, scope: !10832)
!10841 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1623, file: !1623, line: 780, type: !1547, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10842)
!10842 = !{!10843, !10844}
!10843 = !DILocalVariable(name: "dev", arg: 1, scope: !10841, file: !1623, line: 780, type: !1496)
!10844 = !DILocalVariable(name: "config", scope: !10841, file: !1623, line: 782, type: !10501)
!10845 = !DILocation(line: 0, scope: !10841)
!10846 = !DILocation(line: 782, column: 48, scope: !10841)
!10847 = !DILocation(line: 784, column: 34, scope: !10841)
!10848 = !DILocation(line: 784, column: 2, scope: !10841)
!10849 = !DILocation(line: 785, column: 1, scope: !10841)
!10850 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1623, file: !1623, line: 766, type: !1517, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10851)
!10851 = !{!10852, !10853}
!10852 = !DILocalVariable(name: "dev", arg: 1, scope: !10850, file: !1623, line: 766, type: !1496)
!10853 = !DILocalVariable(name: "config", scope: !10850, file: !1623, line: 768, type: !10501)
!10854 = !DILocation(line: 0, scope: !10850)
!10855 = !DILocation(line: 768, column: 48, scope: !10850)
!10856 = !DILocation(line: 770, column: 42, scope: !10850)
!10857 = !DILocation(line: 770, column: 9, scope: !10850)
!10858 = !DILocation(line: 770, column: 2, scope: !10850)
!10859 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1623, file: !1623, line: 787, type: !1517, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10860)
!10860 = !{!10861, !10862}
!10861 = !DILocalVariable(name: "dev", arg: 1, scope: !10859, file: !1623, line: 787, type: !1496)
!10862 = !DILocalVariable(name: "config", scope: !10859, file: !1623, line: 789, type: !10501)
!10863 = !DILocation(line: 0, scope: !10859)
!10864 = !DILocation(line: 789, column: 48, scope: !10859)
!10865 = !DILocation(line: 794, column: 44, scope: !10859)
!10866 = !DILocation(line: 794, column: 9, scope: !10859)
!10867 = !DILocation(line: 794, column: 2, scope: !10859)
!10868 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1623, file: !1623, line: 797, type: !1547, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10869)
!10869 = !{!10870, !10871}
!10870 = !DILocalVariable(name: "dev", arg: 1, scope: !10868, file: !1623, line: 797, type: !1496)
!10871 = !DILocalVariable(name: "config", scope: !10868, file: !1623, line: 799, type: !10501)
!10872 = !DILocation(line: 0, scope: !10868)
!10873 = !DILocation(line: 799, column: 48, scope: !10868)
!10874 = !DILocation(line: 802, column: 34, scope: !10868)
!10875 = !DILocation(line: 802, column: 2, scope: !10868)
!10876 = !DILocation(line: 805, column: 6, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10868, file: !1623, line: 805, column: 6)
!10878 = !DILocation(line: 806, column: 3, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10877, file: !1623, line: 805, column: 43)
!10880 = !DILocation(line: 810, column: 31, scope: !10868)
!10881 = !DILocation(line: 807, column: 2, scope: !10879)
!10882 = !DILocation(line: 810, column: 2, scope: !10868)
!10883 = !DILocation(line: 811, column: 1, scope: !10868)
!10884 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1623, file: !1623, line: 813, type: !1547, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10885)
!10885 = !{!10886, !10887}
!10886 = !DILocalVariable(name: "dev", arg: 1, scope: !10884, file: !1623, line: 813, type: !1496)
!10887 = !DILocalVariable(name: "config", scope: !10884, file: !1623, line: 815, type: !10501)
!10888 = !DILocation(line: 0, scope: !10884)
!10889 = !DILocation(line: 815, column: 48, scope: !10884)
!10890 = !DILocation(line: 818, column: 35, scope: !10884)
!10891 = !DILocation(line: 818, column: 2, scope: !10884)
!10892 = !DILocation(line: 821, column: 6, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10884, file: !1623, line: 821, column: 6)
!10894 = !DILocation(line: 822, column: 3, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10893, file: !1623, line: 821, column: 43)
!10896 = !DILocation(line: 826, column: 32, scope: !10884)
!10897 = !DILocation(line: 823, column: 2, scope: !10895)
!10898 = !DILocation(line: 826, column: 2, scope: !10884)
!10899 = !DILocation(line: 827, column: 1, scope: !10884)
!10900 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1623, file: !1623, line: 829, type: !1517, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10901)
!10901 = !{!10902, !10903}
!10902 = !DILocalVariable(name: "dev", arg: 1, scope: !10900, file: !1623, line: 829, type: !1496)
!10903 = !DILocalVariable(name: "config", scope: !10900, file: !1623, line: 831, type: !10501)
!10904 = !DILocation(line: 0, scope: !10900)
!10905 = !DILocation(line: 831, column: 48, scope: !10900)
!10906 = !DILocation(line: 833, column: 46, scope: !10900)
!10907 = !DILocation(line: 833, column: 11, scope: !10900)
!10908 = !DILocation(line: 833, column: 53, scope: !10900)
!10909 = !DILocation(line: 834, column: 38, scope: !10900)
!10910 = !DILocation(line: 834, column: 4, scope: !10900)
!10911 = !DILocation(line: 834, column: 46, scope: !10900)
!10912 = !DILocation(line: 835, column: 37, scope: !10900)
!10913 = !DILocation(line: 835, column: 4, scope: !10900)
!10914 = !DILocation(line: 835, column: 44, scope: !10900)
!10915 = !DILocation(line: 836, column: 36, scope: !10900)
!10916 = !DILocation(line: 836, column: 4, scope: !10900)
!10917 = !DILocation(line: 833, column: 2, scope: !10900)
!10918 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1623, file: !1623, line: 839, type: !1517, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10919)
!10919 = !{!10920}
!10920 = !DILocalVariable(name: "dev", arg: 1, scope: !10918, file: !1623, line: 839, type: !1496)
!10921 = !DILocation(line: 0, scope: !10918)
!10922 = !DILocation(line: 841, column: 2, scope: !10918)
!10923 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1623, file: !1623, line: 844, type: !1561, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10924)
!10924 = !{!10925, !10926, !10927, !10928}
!10925 = !DILocalVariable(name: "dev", arg: 1, scope: !10923, file: !1623, line: 844, type: !1496)
!10926 = !DILocalVariable(name: "cb", arg: 2, scope: !10923, file: !1623, line: 845, type: !1563)
!10927 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10923, file: !1623, line: 846, type: !102)
!10928 = !DILocalVariable(name: "data", scope: !10923, file: !1623, line: 848, type: !10624)
!10929 = !DILocation(line: 0, scope: !10923)
!10930 = !DILocation(line: 848, column: 38, scope: !10923)
!10931 = !DILocation(line: 850, column: 8, scope: !10923)
!10932 = !DILocation(line: 850, column: 16, scope: !10923)
!10933 = !DILocation(line: 851, column: 8, scope: !10923)
!10934 = !DILocation(line: 851, column: 18, scope: !10923)
!10935 = !DILocation(line: 852, column: 1, scope: !10923)
!10936 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10937, file: !10937, line: 1792, type: !10938, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10940)
!10937 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10938 = !DISubroutineType(types: !10939)
!10939 = !{!132, !1567}
!10940 = !{!10941}
!10941 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10936, file: !10937, line: 1792, type: !1567)
!10942 = !DILocation(line: 0, scope: !10936)
!10943 = !DILocation(line: 1794, column: 11, scope: !10936)
!10944 = !DILocation(line: 1794, column: 47, scope: !10936)
!10945 = !DILocation(line: 1794, column: 3, scope: !10936)
!10946 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10937, file: !10937, line: 2227, type: !10938, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10947)
!10947 = !{!10948}
!10948 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10946, file: !10937, line: 2227, type: !1567)
!10949 = !DILocation(line: 0, scope: !10946)
!10950 = !DILocation(line: 2229, column: 11, scope: !10946)
!10951 = !DILocation(line: 2229, column: 51, scope: !10946)
!10952 = !DILocation(line: 2229, column: 3, scope: !10946)
!10953 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10937, file: !10937, line: 1803, type: !10938, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10954)
!10954 = !{!10955}
!10955 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10953, file: !10937, line: 1803, type: !1567)
!10956 = !DILocation(line: 0, scope: !10953)
!10957 = !DILocation(line: 1805, column: 11, scope: !10953)
!10958 = !DILocation(line: 1805, column: 45, scope: !10953)
!10959 = !DILocation(line: 1805, column: 3, scope: !10953)
!10960 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10937, file: !10937, line: 2238, type: !10938, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10961)
!10961 = !{!10962}
!10962 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10960, file: !10937, line: 2238, type: !1567)
!10963 = !DILocation(line: 0, scope: !10960)
!10964 = !DILocation(line: 2240, column: 11, scope: !10960)
!10965 = !DILocation(line: 2240, column: 49, scope: !10960)
!10966 = !DILocation(line: 2240, column: 3, scope: !10960)
!10967 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10937, file: !10937, line: 2192, type: !10968, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10970)
!10968 = !DISubroutineType(types: !10969)
!10969 = !{null, !1567}
!10970 = !{!10971, !10972}
!10971 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10967, file: !10937, line: 2192, type: !1567)
!10972 = !DILocalVariable(name: "val", scope: !10973, file: !10937, line: 2194, type: !132)
!10973 = distinct !DILexicalBlock(scope: !10967, file: !10937, line: 2194, column: 3)
!10974 = !DILocation(line: 0, scope: !10967)
!10975 = !DILocation(line: 2194, column: 3, scope: !10973)
!10976 = !DILocalVariable(name: "addr", arg: 1, scope: !10977, file: !6843, line: 476, type: !1619)
!10977 = distinct !DISubprogram(name: "__LDREXW", scope: !6843, file: !6843, line: 476, type: !10978, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10980)
!10978 = !DISubroutineType(types: !10979)
!10979 = !{!132, !1619}
!10980 = !{!10976, !10981}
!10981 = !DILocalVariable(name: "result", scope: !10977, file: !6843, line: 478, type: !132)
!10982 = !DILocation(line: 0, scope: !10977, inlinedAt: !10983)
!10983 = distinct !DILocation(line: 2194, column: 3, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10973, file: !10937, line: 2194, column: 3)
!10985 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !10983)
!10986 = !{i64 3573493}
!10987 = !DILocation(line: 2194, column: 3, scope: !10984)
!10988 = !DILocation(line: 0, scope: !10973)
!10989 = !DILocalVariable(name: "value", arg: 1, scope: !10990, file: !6843, line: 527, type: !132)
!10990 = distinct !DISubprogram(name: "__STREXW", scope: !6843, file: !6843, line: 527, type: !10991, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10993)
!10991 = !DISubroutineType(types: !10992)
!10992 = !{!132, !132, !1619}
!10993 = !{!10989, !10994, !10995}
!10994 = !DILocalVariable(name: "addr", arg: 2, scope: !10990, file: !6843, line: 527, type: !1619)
!10995 = !DILocalVariable(name: "result", scope: !10990, file: !6843, line: 529, type: !132)
!10996 = !DILocation(line: 0, scope: !10990, inlinedAt: !10997)
!10997 = distinct !DILocation(line: 2194, column: 3, scope: !10973)
!10998 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !10997)
!10999 = !{i64 3574929}
!11000 = distinct !{!11000, !10975, !10975}
!11001 = !DILocation(line: 2195, column: 1, scope: !10967)
!11002 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10937, file: !10937, line: 2177, type: !10968, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11003)
!11003 = !{!11004}
!11004 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11002, file: !10937, line: 2177, type: !1567)
!11005 = !DILocation(line: 0, scope: !11002)
!11006 = !DILocation(line: 2179, column: 3, scope: !11002)
!11007 = !DILocation(line: 2180, column: 1, scope: !11002)
!11008 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10937, file: !10937, line: 2164, type: !10968, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11009)
!11009 = !{!11010, !11011}
!11010 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11008, file: !10937, line: 2164, type: !1567)
!11011 = !DILocalVariable(name: "val", scope: !11012, file: !10937, line: 2166, type: !132)
!11012 = distinct !DILexicalBlock(scope: !11008, file: !10937, line: 2166, column: 3)
!11013 = !DILocation(line: 0, scope: !11008)
!11014 = !DILocation(line: 2166, column: 3, scope: !11012)
!11015 = !DILocation(line: 0, scope: !10977, inlinedAt: !11016)
!11016 = distinct !DILocation(line: 2166, column: 3, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11012, file: !10937, line: 2166, column: 3)
!11018 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11016)
!11019 = !DILocation(line: 2166, column: 3, scope: !11017)
!11020 = !DILocation(line: 0, scope: !11012)
!11021 = !DILocation(line: 0, scope: !10990, inlinedAt: !11022)
!11022 = distinct !DILocation(line: 2166, column: 3, scope: !11012)
!11023 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11022)
!11024 = distinct !{!11024, !11014, !11014}
!11025 = !DILocation(line: 2167, column: 1, scope: !11008)
!11026 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10937, file: !10937, line: 2096, type: !10968, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11027)
!11027 = !{!11028, !11029}
!11028 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11026, file: !10937, line: 2096, type: !1567)
!11029 = !DILocalVariable(name: "val", scope: !11030, file: !10937, line: 2098, type: !132)
!11030 = distinct !DILexicalBlock(scope: !11026, file: !10937, line: 2098, column: 3)
!11031 = !DILocation(line: 0, scope: !11026)
!11032 = !DILocation(line: 2098, column: 3, scope: !11030)
!11033 = !DILocation(line: 0, scope: !10977, inlinedAt: !11034)
!11034 = distinct !DILocation(line: 2098, column: 3, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11030, file: !10937, line: 2098, column: 3)
!11036 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11034)
!11037 = !DILocation(line: 2098, column: 3, scope: !11035)
!11038 = !DILocation(line: 0, scope: !11030)
!11039 = !DILocation(line: 0, scope: !10990, inlinedAt: !11040)
!11040 = distinct !DILocation(line: 2098, column: 3, scope: !11030)
!11041 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11040)
!11042 = distinct !{!11042, !11032, !11032}
!11043 = !DILocation(line: 2099, column: 1, scope: !11026)
!11044 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10937, file: !10937, line: 2081, type: !10968, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11045)
!11045 = !{!11046}
!11046 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11044, file: !10937, line: 2081, type: !1567)
!11047 = !DILocation(line: 0, scope: !11044)
!11048 = !DILocation(line: 2083, column: 3, scope: !11044)
!11049 = !DILocation(line: 2084, column: 1, scope: !11044)
!11050 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10937, file: !10937, line: 2068, type: !10968, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11051)
!11051 = !{!11052, !11053}
!11052 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11050, file: !10937, line: 2068, type: !1567)
!11053 = !DILocalVariable(name: "val", scope: !11054, file: !10937, line: 2070, type: !132)
!11054 = distinct !DILexicalBlock(scope: !11050, file: !10937, line: 2070, column: 3)
!11055 = !DILocation(line: 0, scope: !11050)
!11056 = !DILocation(line: 2070, column: 3, scope: !11054)
!11057 = !DILocation(line: 0, scope: !10977, inlinedAt: !11058)
!11058 = distinct !DILocation(line: 2070, column: 3, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11054, file: !10937, line: 2070, column: 3)
!11060 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11058)
!11061 = !DILocation(line: 2070, column: 3, scope: !11059)
!11062 = !DILocation(line: 0, scope: !11054)
!11063 = !DILocation(line: 0, scope: !10990, inlinedAt: !11064)
!11064 = distinct !DILocation(line: 2070, column: 3, scope: !11054)
!11065 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11064)
!11066 = distinct !{!11066, !11056, !11056}
!11067 = !DILocation(line: 2071, column: 1, scope: !11050)
!11068 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10937, file: !10937, line: 2131, type: !10968, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11069)
!11069 = !{!11070, !11071}
!11070 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11068, file: !10937, line: 2131, type: !1567)
!11071 = !DILocalVariable(name: "val", scope: !11072, file: !10937, line: 2133, type: !132)
!11072 = distinct !DILexicalBlock(scope: !11068, file: !10937, line: 2133, column: 3)
!11073 = !DILocation(line: 0, scope: !11068)
!11074 = !DILocation(line: 2133, column: 3, scope: !11072)
!11075 = !DILocation(line: 0, scope: !10977, inlinedAt: !11076)
!11076 = distinct !DILocation(line: 2133, column: 3, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11072, file: !10937, line: 2133, column: 3)
!11078 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11076)
!11079 = !DILocation(line: 2133, column: 3, scope: !11077)
!11080 = !DILocation(line: 0, scope: !11072)
!11081 = !DILocation(line: 0, scope: !10990, inlinedAt: !11082)
!11082 = distinct !DILocation(line: 2133, column: 3, scope: !11072)
!11083 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11082)
!11084 = distinct !{!11084, !11074, !11074}
!11085 = !DILocation(line: 2134, column: 1, scope: !11068)
!11086 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10937, file: !10937, line: 2035, type: !10968, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11087)
!11087 = !{!11088, !11089}
!11088 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11086, file: !10937, line: 2035, type: !1567)
!11089 = !DILocalVariable(name: "val", scope: !11090, file: !10937, line: 2037, type: !132)
!11090 = distinct !DILexicalBlock(scope: !11086, file: !10937, line: 2037, column: 3)
!11091 = !DILocation(line: 0, scope: !11086)
!11092 = !DILocation(line: 2037, column: 3, scope: !11090)
!11093 = !DILocation(line: 0, scope: !10977, inlinedAt: !11094)
!11094 = distinct !DILocation(line: 2037, column: 3, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11090, file: !10937, line: 2037, column: 3)
!11096 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11094)
!11097 = !DILocation(line: 2037, column: 3, scope: !11095)
!11098 = !DILocation(line: 0, scope: !11090)
!11099 = !DILocation(line: 0, scope: !10990, inlinedAt: !11100)
!11100 = distinct !DILocation(line: 2037, column: 3, scope: !11090)
!11101 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11100)
!11102 = distinct !{!11102, !11092, !11092}
!11103 = !DILocation(line: 2038, column: 1, scope: !11086)
!11104 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10937, file: !10937, line: 1814, type: !10938, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11105)
!11105 = !{!11106}
!11106 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11104, file: !10937, line: 1814, type: !1567)
!11107 = !DILocation(line: 0, scope: !11104)
!11108 = !DILocation(line: 1816, column: 11, scope: !11104)
!11109 = !DILocation(line: 1816, column: 46, scope: !11104)
!11110 = !DILocation(line: 1816, column: 3, scope: !11104)
!11111 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10937, file: !10937, line: 2142, type: !10968, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11112)
!11112 = !{!11113, !11114}
!11113 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11111, file: !10937, line: 2142, type: !1567)
!11114 = !DILocalVariable(name: "val", scope: !11115, file: !10937, line: 2144, type: !132)
!11115 = distinct !DILexicalBlock(scope: !11111, file: !10937, line: 2144, column: 3)
!11116 = !DILocation(line: 0, scope: !11111)
!11117 = !DILocation(line: 2144, column: 3, scope: !11115)
!11118 = !DILocation(line: 0, scope: !10977, inlinedAt: !11119)
!11119 = distinct !DILocation(line: 2144, column: 3, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11115, file: !10937, line: 2144, column: 3)
!11121 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11119)
!11122 = !DILocation(line: 2144, column: 3, scope: !11120)
!11123 = !DILocation(line: 0, scope: !11115)
!11124 = !DILocation(line: 0, scope: !10990, inlinedAt: !11125)
!11125 = distinct !DILocation(line: 2144, column: 3, scope: !11115)
!11126 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11125)
!11127 = distinct !{!11127, !11117, !11117}
!11128 = !DILocation(line: 2145, column: 1, scope: !11111)
!11129 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10937, file: !10937, line: 2046, type: !10968, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11130)
!11130 = !{!11131, !11132}
!11131 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11129, file: !10937, line: 2046, type: !1567)
!11132 = !DILocalVariable(name: "val", scope: !11133, file: !10937, line: 2048, type: !132)
!11133 = distinct !DILexicalBlock(scope: !11129, file: !10937, line: 2048, column: 3)
!11134 = !DILocation(line: 0, scope: !11129)
!11135 = !DILocation(line: 2048, column: 3, scope: !11133)
!11136 = !DILocation(line: 0, scope: !10977, inlinedAt: !11137)
!11137 = distinct !DILocation(line: 2048, column: 3, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11133, file: !10937, line: 2048, column: 3)
!11139 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11137)
!11140 = !DILocation(line: 2048, column: 3, scope: !11138)
!11141 = !DILocation(line: 0, scope: !11133)
!11142 = !DILocation(line: 0, scope: !10990, inlinedAt: !11143)
!11143 = distinct !DILocation(line: 2048, column: 3, scope: !11133)
!11144 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11143)
!11145 = distinct !{!11145, !11135, !11135}
!11146 = !DILocation(line: 2049, column: 1, scope: !11129)
!11147 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10937, file: !10937, line: 2403, type: !11148, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11150)
!11148 = !DISubroutineType(types: !11149)
!11149 = !{!163, !1567}
!11150 = !{!11151}
!11151 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11147, file: !10937, line: 2403, type: !1567)
!11152 = !DILocation(line: 0, scope: !11147)
!11153 = !DILocation(line: 2405, column: 20, scope: !11147)
!11154 = !DILocation(line: 2405, column: 10, scope: !11147)
!11155 = !DILocation(line: 2405, column: 3, scope: !11147)
!11156 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10937, file: !10937, line: 1770, type: !10938, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11157)
!11157 = !{!11158}
!11158 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11156, file: !10937, line: 1770, type: !1567)
!11159 = !DILocation(line: 0, scope: !11156)
!11160 = !DILocation(line: 1772, column: 11, scope: !11156)
!11161 = !DILocation(line: 1772, column: 46, scope: !11156)
!11162 = !DILocation(line: 1772, column: 3, scope: !11156)
!11163 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10937, file: !10937, line: 1934, type: !10968, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11164)
!11164 = !{!11165, !11166}
!11165 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11163, file: !10937, line: 1934, type: !1567)
!11166 = !DILocalVariable(name: "tmpreg", scope: !11163, file: !10937, line: 1936, type: !131)
!11167 = !DILocation(line: 0, scope: !11163)
!11168 = !DILocation(line: 1936, column: 3, scope: !11163)
!11169 = !DILocation(line: 1936, column: 17, scope: !11163)
!11170 = !DILocation(line: 1937, column: 20, scope: !11163)
!11171 = !DILocation(line: 1937, column: 10, scope: !11163)
!11172 = !DILocation(line: 1938, column: 10, scope: !11163)
!11173 = !DILocation(line: 1939, column: 20, scope: !11163)
!11174 = !DILocation(line: 1939, column: 10, scope: !11163)
!11175 = !DILocation(line: 1940, column: 10, scope: !11163)
!11176 = !DILocation(line: 1941, column: 1, scope: !11163)
!11177 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10937, file: !10937, line: 2426, type: !11178, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11180)
!11178 = !DISubroutineType(types: !11179)
!11179 = !{null, !1567, !163}
!11180 = !{!11181, !11182}
!11181 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11177, file: !10937, line: 2426, type: !1567)
!11182 = !DILocalVariable(name: "Value", arg: 2, scope: !11177, file: !10937, line: 2426, type: !163)
!11183 = !DILocation(line: 0, scope: !11177)
!11184 = !DILocation(line: 2428, column: 16, scope: !11177)
!11185 = !DILocation(line: 2428, column: 11, scope: !11177)
!11186 = !DILocation(line: 2428, column: 14, scope: !11177)
!11187 = !DILocation(line: 2429, column: 1, scope: !11177)
!11188 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1623, file: !1623, line: 205, type: !11189, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11191)
!11189 = !DISubroutineType(types: !11190)
!11190 = !{!132, !1496}
!11191 = !{!11192, !11193}
!11192 = !DILocalVariable(name: "dev", arg: 1, scope: !11188, file: !1623, line: 205, type: !1496)
!11193 = !DILocalVariable(name: "config", scope: !11188, file: !1623, line: 207, type: !10501)
!11194 = !DILocation(line: 0, scope: !11188)
!11195 = !DILocation(line: 207, column: 48, scope: !11188)
!11196 = !DILocation(line: 209, column: 36, scope: !11188)
!11197 = !DILocation(line: 209, column: 9, scope: !11188)
!11198 = !DILocation(line: 209, column: 2, scope: !11188)
!11199 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1623, file: !1623, line: 270, type: !11200, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11202)
!11200 = !DISubroutineType(types: !11201)
!11201 = !{!1462, !132}
!11202 = !{!11203}
!11203 = !DILocalVariable(name: "parity", arg: 1, scope: !11199, file: !1623, line: 270, type: !132)
!11204 = !DILocation(line: 0, scope: !11199)
!11205 = !DILocation(line: 272, column: 2, scope: !11199)
!11206 = !DILocation(line: 281, column: 1, scope: !11199)
!11207 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1623, file: !1623, line: 220, type: !11189, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11208)
!11208 = !{!11209, !11210}
!11209 = !DILocalVariable(name: "dev", arg: 1, scope: !11207, file: !1623, line: 220, type: !1496)
!11210 = !DILocalVariable(name: "config", scope: !11207, file: !1623, line: 222, type: !10501)
!11211 = !DILocation(line: 0, scope: !11207)
!11212 = !DILocation(line: 222, column: 48, scope: !11207)
!11213 = !DILocation(line: 224, column: 44, scope: !11207)
!11214 = !DILocation(line: 224, column: 9, scope: !11207)
!11215 = !DILocation(line: 224, column: 2, scope: !11207)
!11216 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1623, file: !1623, line: 304, type: !11217, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11219)
!11217 = !DISubroutineType(types: !11218)
!11218 = !{!1476, !132}
!11219 = !{!11220}
!11220 = !DILocalVariable(name: "sb", arg: 1, scope: !11216, file: !1623, line: 304, type: !132)
!11221 = !DILocation(line: 0, scope: !11216)
!11222 = !DILocation(line: 306, column: 2, scope: !11216)
!11223 = !DILocation(line: 0, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11216, file: !1623, line: 306, column: 14)
!11225 = !DILocation(line: 323, column: 1, scope: !11216)
!11226 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1623, file: !1623, line: 235, type: !11189, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11227)
!11227 = !{!11228, !11229}
!11228 = !DILocalVariable(name: "dev", arg: 1, scope: !11226, file: !1623, line: 235, type: !1496)
!11229 = !DILocalVariable(name: "config", scope: !11226, file: !1623, line: 237, type: !10501)
!11230 = !DILocation(line: 0, scope: !11226)
!11231 = !DILocation(line: 237, column: 48, scope: !11226)
!11232 = !DILocation(line: 239, column: 39, scope: !11226)
!11233 = !DILocation(line: 239, column: 9, scope: !11226)
!11234 = !DILocation(line: 239, column: 2, scope: !11226)
!11235 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1623, file: !1623, line: 355, type: !11236, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11238)
!11236 = !DISubroutineType(types: !11237)
!11237 = !{!1469, !132, !132}
!11238 = !{!11239, !11240}
!11239 = !DILocalVariable(name: "db", arg: 1, scope: !11235, file: !1623, line: 355, type: !132)
!11240 = !DILocalVariable(name: "p", arg: 2, scope: !11235, file: !1623, line: 356, type: !132)
!11241 = !DILocation(line: 0, scope: !11235)
!11242 = !DILocation(line: 358, column: 2, scope: !11235)
!11243 = !DILocation(line: 384, column: 1, scope: !11235)
!11244 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1623, file: !1623, line: 250, type: !11189, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11245)
!11245 = !{!11246, !11247}
!11246 = !DILocalVariable(name: "dev", arg: 1, scope: !11244, file: !1623, line: 250, type: !1496)
!11247 = !DILocalVariable(name: "config", scope: !11244, file: !1623, line: 252, type: !10501)
!11248 = !DILocation(line: 0, scope: !11244)
!11249 = !DILocation(line: 252, column: 48, scope: !11244)
!11250 = !DILocation(line: 254, column: 40, scope: !11244)
!11251 = !DILocation(line: 254, column: 9, scope: !11244)
!11252 = !DILocation(line: 254, column: 2, scope: !11244)
!11253 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1623, file: !1623, line: 409, type: !11254, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11256)
!11254 = !DISubroutineType(types: !11255)
!11255 = !{!1482, !132}
!11256 = !{!11257}
!11257 = !DILocalVariable(name: "fc", arg: 1, scope: !11253, file: !1623, line: 409, type: !132)
!11258 = !DILocation(line: 0, scope: !11253)
!11259 = !DILocation(line: 411, column: 9, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11253, file: !1623, line: 411, column: 6)
!11261 = !DILocation(line: 416, column: 1, scope: !11253)
!11262 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10937, file: !10937, line: 967, type: !10938, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11263)
!11263 = !{!11264}
!11264 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11262, file: !10937, line: 967, type: !1567)
!11265 = !DILocation(line: 0, scope: !11262)
!11266 = !DILocation(line: 969, column: 21, scope: !11262)
!11267 = !DILocation(line: 969, column: 3, scope: !11262)
!11268 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10937, file: !10937, line: 601, type: !10938, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11269)
!11269 = !{!11270}
!11270 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11268, file: !10937, line: 601, type: !1567)
!11271 = !DILocation(line: 0, scope: !11268)
!11272 = !DILocation(line: 603, column: 21, scope: !11268)
!11273 = !DILocation(line: 603, column: 3, scope: !11268)
!11274 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10937, file: !10937, line: 820, type: !10938, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11275)
!11275 = !{!11276}
!11276 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11274, file: !10937, line: 820, type: !1567)
!11277 = !DILocation(line: 0, scope: !11274)
!11278 = !DILocation(line: 822, column: 21, scope: !11274)
!11279 = !DILocation(line: 822, column: 3, scope: !11274)
!11280 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10937, file: !10937, line: 547, type: !10938, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11281)
!11281 = !{!11282}
!11282 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11280, file: !10937, line: 547, type: !1567)
!11283 = !DILocation(line: 0, scope: !11280)
!11284 = !DILocation(line: 549, column: 21, scope: !11280)
!11285 = !DILocation(line: 549, column: 3, scope: !11280)
!11286 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1623, file: !1623, line: 257, type: !11287, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11289)
!11287 = !DISubroutineType(types: !11288)
!11288 = !{!132, !1462}
!11289 = !{!11290}
!11290 = !DILocalVariable(name: "parity", arg: 1, scope: !11286, file: !1623, line: 257, type: !1462)
!11291 = !DILocation(line: 0, scope: !11286)
!11292 = !DILocation(line: 259, column: 2, scope: !11286)
!11293 = !DILocation(line: 268, column: 1, scope: !11286)
!11294 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1623, file: !1623, line: 283, type: !11295, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11297)
!11295 = !DISubroutineType(types: !11296)
!11296 = !{!132, !1476}
!11297 = !{!11298}
!11298 = !DILocalVariable(name: "sb", arg: 1, scope: !11294, file: !1623, line: 283, type: !1476)
!11299 = !DILocation(line: 0, scope: !11294)
!11300 = !DILocation(line: 285, column: 2, scope: !11294)
!11301 = !DILocation(line: 0, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11294, file: !1623, line: 285, column: 14)
!11303 = !DILocation(line: 302, column: 1, scope: !11294)
!11304 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1623, file: !1623, line: 325, type: !11305, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11307)
!11305 = !DISubroutineType(types: !11306)
!11306 = !{!132, !1469, !1462}
!11307 = !{!11308, !11309}
!11308 = !DILocalVariable(name: "db", arg: 1, scope: !11304, file: !1623, line: 325, type: !1469)
!11309 = !DILocalVariable(name: "p", arg: 2, scope: !11304, file: !1623, line: 326, type: !1462)
!11310 = !DILocation(line: 0, scope: !11304)
!11311 = !DILocation(line: 328, column: 2, scope: !11304)
!11312 = !DILocation(line: 353, column: 1, scope: !11304)
!11313 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1623, file: !1623, line: 393, type: !11314, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11316)
!11314 = !DISubroutineType(types: !11315)
!11315 = !{!132, !1482}
!11316 = !{!11317}
!11317 = !DILocalVariable(name: "fc", arg: 1, scope: !11313, file: !1623, line: 393, type: !1482)
!11318 = !DILocation(line: 0, scope: !11313)
!11319 = !DILocation(line: 395, column: 9, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11313, file: !1623, line: 395, column: 6)
!11321 = !DILocation(line: 400, column: 1, scope: !11313)
!11322 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10937, file: !10937, line: 424, type: !10968, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11323)
!11323 = !{!11324}
!11324 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11322, file: !10937, line: 424, type: !1567)
!11325 = !DILocation(line: 0, scope: !11322)
!11326 = !DILocation(line: 426, column: 3, scope: !11322)
!11327 = !DILocation(line: 427, column: 1, scope: !11322)
!11328 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1623, file: !1623, line: 197, type: !11329, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11331)
!11329 = !DISubroutineType(types: !11330)
!11330 = !{null, !1496, !132}
!11331 = !{!11332, !11333, !11334}
!11332 = !DILocalVariable(name: "dev", arg: 1, scope: !11328, file: !1623, line: 197, type: !1496)
!11333 = !DILocalVariable(name: "parity", arg: 2, scope: !11328, file: !1623, line: 198, type: !132)
!11334 = !DILocalVariable(name: "config", scope: !11328, file: !1623, line: 200, type: !10501)
!11335 = !DILocation(line: 0, scope: !11328)
!11336 = !DILocation(line: 200, column: 48, scope: !11328)
!11337 = !DILocation(line: 202, column: 29, scope: !11328)
!11338 = !DILocation(line: 202, column: 2, scope: !11328)
!11339 = !DILocation(line: 203, column: 1, scope: !11328)
!11340 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1623, file: !1623, line: 212, type: !11329, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11341)
!11341 = !{!11342, !11343, !11344}
!11342 = !DILocalVariable(name: "dev", arg: 1, scope: !11340, file: !1623, line: 212, type: !1496)
!11343 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11340, file: !1623, line: 213, type: !132)
!11344 = !DILocalVariable(name: "config", scope: !11340, file: !1623, line: 215, type: !10501)
!11345 = !DILocation(line: 0, scope: !11340)
!11346 = !DILocation(line: 215, column: 48, scope: !11340)
!11347 = !DILocation(line: 217, column: 37, scope: !11340)
!11348 = !DILocation(line: 217, column: 2, scope: !11340)
!11349 = !DILocation(line: 218, column: 1, scope: !11340)
!11350 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1623, file: !1623, line: 227, type: !11329, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11351)
!11351 = !{!11352, !11353, !11354}
!11352 = !DILocalVariable(name: "dev", arg: 1, scope: !11350, file: !1623, line: 227, type: !1496)
!11353 = !DILocalVariable(name: "databits", arg: 2, scope: !11350, file: !1623, line: 228, type: !132)
!11354 = !DILocalVariable(name: "config", scope: !11350, file: !1623, line: 230, type: !10501)
!11355 = !DILocation(line: 0, scope: !11350)
!11356 = !DILocation(line: 230, column: 48, scope: !11350)
!11357 = !DILocation(line: 232, column: 32, scope: !11350)
!11358 = !DILocation(line: 232, column: 2, scope: !11350)
!11359 = !DILocation(line: 233, column: 1, scope: !11350)
!11360 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1623, file: !1623, line: 242, type: !11329, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11361)
!11361 = !{!11362, !11363, !11364}
!11362 = !DILocalVariable(name: "dev", arg: 1, scope: !11360, file: !1623, line: 242, type: !1496)
!11363 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11360, file: !1623, line: 243, type: !132)
!11364 = !DILocalVariable(name: "config", scope: !11360, file: !1623, line: 245, type: !10501)
!11365 = !DILocation(line: 0, scope: !11360)
!11366 = !DILocation(line: 245, column: 48, scope: !11360)
!11367 = !DILocation(line: 247, column: 33, scope: !11360)
!11368 = !DILocation(line: 247, column: 2, scope: !11360)
!11369 = !DILocation(line: 248, column: 1, scope: !11360)
!11370 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1623, file: !1623, line: 107, type: !11329, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11371)
!11371 = !{!11372, !11373, !11374, !11375, !11376}
!11372 = !DILocalVariable(name: "dev", arg: 1, scope: !11370, file: !1623, line: 107, type: !1496)
!11373 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11370, file: !1623, line: 107, type: !132)
!11374 = !DILocalVariable(name: "config", scope: !11370, file: !1623, line: 109, type: !10501)
!11375 = !DILocalVariable(name: "data", scope: !11370, file: !1623, line: 110, type: !10624)
!11376 = !DILocalVariable(name: "clock_rate", scope: !11370, file: !1623, line: 112, type: !132)
!11377 = !DILocation(line: 0, scope: !11370)
!11378 = !DILocation(line: 109, column: 48, scope: !11370)
!11379 = !DILocation(line: 110, column: 38, scope: !11370)
!11380 = !DILocation(line: 112, column: 2, scope: !11370)
!11381 = !DILocation(line: 123, column: 36, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11383, file: !1623, line: 123, column: 7)
!11383 = distinct !DILexicalBlock(scope: !11384, file: !1623, line: 122, column: 9)
!11384 = distinct !DILexicalBlock(scope: !11370, file: !1623, line: 115, column: 6)
!11385 = !DILocation(line: 124, column: 42, scope: !11382)
!11386 = !DILocation(line: 123, column: 7, scope: !11382)
!11387 = !DILocation(line: 125, column: 22, scope: !11382)
!11388 = !DILocation(line: 123, column: 7, scope: !11383)
!11389 = !DILocation(line: 176, column: 36, scope: !11370)
!11390 = !DILocation(line: 176, column: 3, scope: !11370)
!11391 = !DILocation(line: 179, column: 32, scope: !11370)
!11392 = !DILocation(line: 180, column: 10, scope: !11370)
!11393 = !DILocation(line: 179, column: 3, scope: !11370)
!11394 = !DILocation(line: 195, column: 1, scope: !11370)
!11395 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10937, file: !10937, line: 410, type: !10968, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11396)
!11396 = !{!11397}
!11397 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11395, file: !10937, line: 410, type: !1567)
!11398 = !DILocation(line: 0, scope: !11395)
!11399 = !DILocation(line: 412, column: 3, scope: !11395)
!11400 = !DILocation(line: 413, column: 1, scope: !11395)
!11401 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !809, file: !809, line: 216, type: !1600, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11402)
!11402 = !{!11403, !11404, !11405, !11406}
!11403 = !DILocalVariable(name: "dev", arg: 1, scope: !11401, file: !809, line: 216, type: !1496)
!11404 = !DILocalVariable(name: "sys", arg: 2, scope: !11401, file: !809, line: 217, type: !901)
!11405 = !DILocalVariable(name: "rate", arg: 3, scope: !11401, file: !809, line: 218, type: !857)
!11406 = !DILocalVariable(name: "api", scope: !11401, file: !809, line: 220, type: !1578)
!11407 = !DILocation(line: 0, scope: !11401)
!11408 = !DILocation(line: 221, column: 49, scope: !11401)
!11409 = !DILocation(line: 223, column: 11, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11401, file: !809, line: 223, column: 6)
!11411 = !DILocation(line: 223, column: 20, scope: !11410)
!11412 = !DILocation(line: 223, column: 6, scope: !11401)
!11413 = !DILocation(line: 227, column: 9, scope: !11401)
!11414 = !DILocation(line: 227, column: 2, scope: !11401)
!11415 = !DILocation(line: 228, column: 1, scope: !11401)
!11416 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10937, file: !10937, line: 615, type: !11417, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11419)
!11417 = !DISubroutineType(types: !11418)
!11418 = !{null, !1567, !132}
!11419 = !{!11420, !11421}
!11420 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11416, file: !10937, line: 615, type: !1567)
!11421 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11416, file: !10937, line: 615, type: !132)
!11422 = !DILocation(line: 0, scope: !11416)
!11423 = !DILocation(line: 617, column: 3, scope: !11416)
!11424 = !DILocation(line: 618, column: 1, scope: !11416)
!11425 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10937, file: !10937, line: 1020, type: !11426, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11428)
!11426 = !DISubroutineType(types: !11427)
!11427 = !{null, !1567, !132, !132, !132}
!11428 = !{!11429, !11430, !11431, !11432}
!11429 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11425, file: !10937, line: 1020, type: !1567)
!11430 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11425, file: !10937, line: 1020, type: !132)
!11431 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11425, file: !10937, line: 1020, type: !132)
!11432 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11425, file: !10937, line: 1021, type: !132)
!11433 = !DILocation(line: 0, scope: !11425)
!11434 = !DILocation(line: 1029, column: 30, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !10937, line: 1028, column: 3)
!11436 = distinct !DILexicalBlock(scope: !11425, file: !10937, line: 1023, column: 7)
!11437 = !DILocation(line: 1029, column: 19, scope: !11435)
!11438 = !DILocation(line: 1029, column: 13, scope: !11435)
!11439 = !DILocation(line: 1029, column: 17, scope: !11435)
!11440 = !DILocation(line: 1031, column: 1, scope: !11425)
!11441 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10937, file: !10937, line: 949, type: !11417, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11442)
!11442 = !{!11443, !11444}
!11443 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11441, file: !10937, line: 949, type: !1567)
!11444 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11441, file: !10937, line: 949, type: !132)
!11445 = !DILocation(line: 0, scope: !11441)
!11446 = !DILocation(line: 951, column: 3, scope: !11441)
!11447 = !DILocation(line: 952, column: 1, scope: !11441)
!11448 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10937, file: !10937, line: 588, type: !11417, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11449)
!11449 = !{!11450, !11451}
!11450 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11448, file: !10937, line: 588, type: !1567)
!11451 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11448, file: !10937, line: 588, type: !132)
!11452 = !DILocation(line: 0, scope: !11448)
!11453 = !DILocation(line: 590, column: 3, scope: !11448)
!11454 = !DILocation(line: 591, column: 1, scope: !11448)
!11455 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10937, file: !10937, line: 805, type: !11417, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11456)
!11456 = !{!11457, !11458}
!11457 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11455, file: !10937, line: 805, type: !1567)
!11458 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11455, file: !10937, line: 805, type: !132)
!11459 = !DILocation(line: 0, scope: !11455)
!11460 = !DILocation(line: 807, column: 3, scope: !11455)
!11461 = !DILocation(line: 808, column: 1, scope: !11455)
!11462 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10937, file: !10937, line: 532, type: !11417, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11463)
!11463 = !{!11464, !11465}
!11464 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11462, file: !10937, line: 532, type: !1567)
!11465 = !DILocalVariable(name: "Parity", arg: 2, scope: !11462, file: !10937, line: 532, type: !132)
!11466 = !DILocation(line: 0, scope: !11462)
!11467 = !DILocation(line: 534, column: 3, scope: !11462)
!11468 = !DILocation(line: 535, column: 1, scope: !11462)
!11469 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10937, file: !10937, line: 1737, type: !10938, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11470)
!11470 = !{!11471}
!11471 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11469, file: !10937, line: 1737, type: !1567)
!11472 = !DILocation(line: 0, scope: !11469)
!11473 = !DILocation(line: 1739, column: 11, scope: !11469)
!11474 = !DILocation(line: 1739, column: 3, scope: !11469)
!11475 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10937, file: !10937, line: 1748, type: !10938, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11476)
!11476 = !{!11477}
!11477 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11475, file: !10937, line: 1748, type: !1567)
!11478 = !DILocation(line: 0, scope: !11475)
!11479 = !DILocation(line: 1750, column: 11, scope: !11475)
!11480 = !DILocation(line: 1750, column: 45, scope: !11475)
!11481 = !DILocation(line: 1750, column: 3, scope: !11475)
!11482 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10937, file: !10937, line: 1827, type: !10938, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11483)
!11483 = !{!11484}
!11484 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11482, file: !10937, line: 1827, type: !1567)
!11485 = !DILocation(line: 0, scope: !11482)
!11486 = !DILocation(line: 1829, column: 11, scope: !11482)
!11487 = !DILocation(line: 1829, column: 46, scope: !11482)
!11488 = !DILocation(line: 1829, column: 3, scope: !11482)
!11489 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10937, file: !10937, line: 1992, type: !10968, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11490)
!11490 = !{!11491}
!11491 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11489, file: !10937, line: 1992, type: !1567)
!11492 = !DILocation(line: 0, scope: !11489)
!11493 = !DILocation(line: 1994, column: 3, scope: !11489)
!11494 = !DILocation(line: 1995, column: 1, scope: !11489)
!11495 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10937, file: !10937, line: 1877, type: !10968, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11496)
!11496 = !{!11497, !11498}
!11497 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11495, file: !10937, line: 1877, type: !1567)
!11498 = !DILocalVariable(name: "tmpreg", scope: !11495, file: !10937, line: 1879, type: !131)
!11499 = !DILocation(line: 0, scope: !11495)
!11500 = !DILocation(line: 1879, column: 3, scope: !11495)
!11501 = !DILocation(line: 1879, column: 17, scope: !11495)
!11502 = !DILocation(line: 1880, column: 20, scope: !11495)
!11503 = !DILocation(line: 1880, column: 10, scope: !11495)
!11504 = !DILocation(line: 1881, column: 10, scope: !11495)
!11505 = !DILocation(line: 1882, column: 20, scope: !11495)
!11506 = !DILocation(line: 1882, column: 10, scope: !11495)
!11507 = !DILocation(line: 1883, column: 10, scope: !11495)
!11508 = !DILocation(line: 1884, column: 1, scope: !11495)
!11509 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10937, file: !10937, line: 1896, type: !10968, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11510)
!11510 = !{!11511, !11512}
!11511 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11509, file: !10937, line: 1896, type: !1567)
!11512 = !DILocalVariable(name: "tmpreg", scope: !11509, file: !10937, line: 1898, type: !131)
!11513 = !DILocation(line: 0, scope: !11509)
!11514 = !DILocation(line: 1898, column: 3, scope: !11509)
!11515 = !DILocation(line: 1898, column: 17, scope: !11509)
!11516 = !DILocation(line: 1899, column: 20, scope: !11509)
!11517 = !DILocation(line: 1899, column: 10, scope: !11509)
!11518 = !DILocation(line: 1900, column: 10, scope: !11509)
!11519 = !DILocation(line: 1901, column: 20, scope: !11509)
!11520 = !DILocation(line: 1901, column: 10, scope: !11509)
!11521 = !DILocation(line: 1902, column: 10, scope: !11509)
!11522 = !DILocation(line: 1903, column: 1, scope: !11509)
!11523 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10937, file: !10937, line: 1915, type: !10968, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11524)
!11524 = !{!11525, !11526}
!11525 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11523, file: !10937, line: 1915, type: !1567)
!11526 = !DILocalVariable(name: "tmpreg", scope: !11523, file: !10937, line: 1917, type: !131)
!11527 = !DILocation(line: 0, scope: !11523)
!11528 = !DILocation(line: 1917, column: 3, scope: !11523)
!11529 = !DILocation(line: 1917, column: 17, scope: !11523)
!11530 = !DILocation(line: 1918, column: 20, scope: !11523)
!11531 = !DILocation(line: 1918, column: 10, scope: !11523)
!11532 = !DILocation(line: 1919, column: 10, scope: !11523)
!11533 = !DILocation(line: 1920, column: 20, scope: !11523)
!11534 = !DILocation(line: 1920, column: 10, scope: !11523)
!11535 = !DILocation(line: 1921, column: 10, scope: !11523)
!11536 = !DILocation(line: 1922, column: 1, scope: !11523)
!11537 = !DILocation(line: 0, scope: !1677)
!11538 = !DILocation(line: 1914, column: 1, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !1677, file: !1623, line: 1914, column: 1)
!11540 = !DILocation(line: 1914, column: 1, scope: !1677)
!11541 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1623, file: !1623, line: 987, type: !1547, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11542)
!11542 = !{!11543, !11544}
!11543 = !DILocalVariable(name: "dev", arg: 1, scope: !11541, file: !1623, line: 987, type: !1496)
!11544 = !DILocalVariable(name: "data", scope: !11541, file: !1623, line: 989, type: !10624)
!11545 = !DILocation(line: 0, scope: !11541)
!11546 = !DILocation(line: 989, column: 38, scope: !11541)
!11547 = !DILocation(line: 1014, column: 12, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11541, file: !1623, line: 1014, column: 6)
!11549 = !DILocation(line: 1014, column: 6, scope: !11548)
!11550 = !DILocation(line: 1014, column: 6, scope: !11541)
!11551 = !DILocation(line: 1015, column: 28, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11548, file: !1623, line: 1014, column: 21)
!11553 = !DILocation(line: 1015, column: 3, scope: !11552)
!11554 = !DILocation(line: 1016, column: 2, scope: !11552)
!11555 = !DILocation(line: 1059, column: 1, scope: !11541)
!11556 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1623, file: !1623, line: 1583, type: !1517, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11557)
!11557 = !{!11558, !11559, !11560, !11561, !11562, !11563}
!11558 = !DILocalVariable(name: "dev", arg: 1, scope: !11556, file: !1623, line: 1583, type: !1496)
!11559 = !DILocalVariable(name: "config", scope: !11556, file: !1623, line: 1585, type: !10501)
!11560 = !DILocalVariable(name: "data", scope: !11556, file: !1623, line: 1586, type: !10624)
!11561 = !DILocalVariable(name: "ll_parity", scope: !11556, file: !1623, line: 1587, type: !132)
!11562 = !DILocalVariable(name: "ll_datawidth", scope: !11556, file: !1623, line: 1588, type: !132)
!11563 = !DILocalVariable(name: "err", scope: !11556, file: !1623, line: 1589, type: !103)
!11564 = !DILocation(line: 0, scope: !11556)
!11565 = !DILocation(line: 1585, column: 48, scope: !11556)
!11566 = !DILocation(line: 1586, column: 38, scope: !11556)
!11567 = !DILocation(line: 1591, column: 2, scope: !11556)
!11568 = !DILocation(line: 1593, column: 29, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11556, file: !1623, line: 1593, column: 6)
!11570 = !DILocation(line: 1593, column: 7, scope: !11569)
!11571 = !DILocation(line: 1593, column: 6, scope: !11556)
!11572 = !DILocation(line: 1599, column: 31, scope: !11556)
!11573 = !DILocation(line: 1599, column: 71, scope: !11556)
!11574 = !DILocation(line: 1599, column: 8, scope: !11556)
!11575 = !DILocation(line: 1600, column: 10, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11556, file: !1623, line: 1600, column: 6)
!11577 = !DILocation(line: 1600, column: 6, scope: !11556)
!11578 = !DILocation(line: 1616, column: 36, scope: !11556)
!11579 = !DILocation(line: 1616, column: 8, scope: !11556)
!11580 = !DILocation(line: 1617, column: 10, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11556, file: !1623, line: 1617, column: 6)
!11582 = !DILocation(line: 1617, column: 6, scope: !11556)
!11583 = !DILocation(line: 1621, column: 27, scope: !11556)
!11584 = !DILocation(line: 1621, column: 2, scope: !11556)
!11585 = !DILocation(line: 1624, column: 40, scope: !11556)
!11586 = !DILocation(line: 1624, column: 2, scope: !11556)
!11587 = !DILocation(line: 1630, column: 14, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11556, file: !1623, line: 1630, column: 6)
!11589 = !DILocation(line: 1630, column: 6, scope: !11556)
!11590 = !DILocation(line: 1638, column: 2, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11592, file: !1623, line: 1634, column: 34)
!11592 = distinct !DILexicalBlock(scope: !11588, file: !1623, line: 1634, column: 13)
!11593 = !DILocation(line: 0, scope: !11588)
!11594 = !DILocation(line: 1649, column: 35, scope: !11556)
!11595 = !DILocation(line: 1649, column: 2, scope: !11556)
!11596 = !DILocation(line: 1654, column: 14, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11556, file: !1623, line: 1654, column: 6)
!11598 = !DILocation(line: 1654, column: 6, scope: !11556)
!11599 = !DILocation(line: 1655, column: 3, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11597, file: !1623, line: 1654, column: 31)
!11601 = !DILocation(line: 1656, column: 2, scope: !11600)
!11602 = !DILocation(line: 1659, column: 37, scope: !11556)
!11603 = !DILocation(line: 1659, column: 2, scope: !11556)
!11604 = !DILocation(line: 1662, column: 14, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11556, file: !1623, line: 1662, column: 6)
!11606 = !DILocation(line: 1662, column: 6, scope: !11556)
!11607 = !DILocation(line: 1663, column: 37, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11605, file: !1623, line: 1662, column: 27)
!11609 = !DILocation(line: 1663, column: 3, scope: !11608)
!11610 = !DILocation(line: 1664, column: 2, scope: !11608)
!11611 = !DILocation(line: 1684, column: 26, scope: !11556)
!11612 = !DILocation(line: 1684, column: 2, scope: !11556)
!11613 = !DILocation(line: 1701, column: 10, scope: !11556)
!11614 = !DILocation(line: 1701, column: 2, scope: !11556)
!11615 = !DILocation(line: 1722, column: 2, scope: !11556)
!11616 = !DILocation(line: 1724, column: 1, scope: !11556)
!11617 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1623, file: !1623, line: 651, type: !1547, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11618)
!11618 = !{!11619, !11620, !11621}
!11619 = !DILocalVariable(name: "dev", arg: 1, scope: !11617, file: !1623, line: 651, type: !1496)
!11620 = !DILocalVariable(name: "data", scope: !11617, file: !1623, line: 653, type: !10624)
!11621 = !DILocalVariable(name: "clk", scope: !11617, file: !1623, line: 654, type: !11622)
!11622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1496)
!11623 = !DILocation(line: 0, scope: !11617)
!11624 = !DILocation(line: 653, column: 38, scope: !11617)
!11625 = !DILocation(line: 656, column: 8, scope: !11617)
!11626 = !DILocation(line: 656, column: 14, scope: !11617)
!11627 = !DILocation(line: 657, column: 1, scope: !11617)
!11628 = distinct !DISubprogram(name: "device_is_ready", scope: !6684, file: !6684, line: 47, type: !11629, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11631)
!11629 = !DISubroutineType(types: !11630)
!11630 = !{!166, !1496}
!11631 = !{!11632}
!11632 = !DILocalVariable(name: "dev", arg: 1, scope: !11628, file: !6684, line: 47, type: !1496)
!11633 = !DILocation(line: 0, scope: !11628)
!11634 = !DILocation(line: 55, column: 2, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11628, file: !6684, line: 55, column: 2)
!11636 = !{i64 2155126023}
!11637 = !DILocation(line: 56, column: 9, scope: !11628)
!11638 = !DILocation(line: 56, column: 2, scope: !11628)
!11639 = distinct !DISubprogram(name: "clock_control_on", scope: !809, file: !809, line: 123, type: !1585, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11640)
!11640 = !{!11641, !11642, !11643}
!11641 = !DILocalVariable(name: "dev", arg: 1, scope: !11639, file: !809, line: 123, type: !1496)
!11642 = !DILocalVariable(name: "sys", arg: 2, scope: !11639, file: !809, line: 124, type: !901)
!11643 = !DILocalVariable(name: "api", scope: !11639, file: !809, line: 126, type: !1578)
!11644 = !DILocation(line: 0, scope: !11639)
!11645 = !DILocation(line: 127, column: 49, scope: !11639)
!11646 = !DILocation(line: 129, column: 14, scope: !11639)
!11647 = !DILocation(line: 129, column: 9, scope: !11639)
!11648 = !DILocation(line: 129, column: 2, scope: !11639)
!11649 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1650, file: !1650, line: 342, type: !11650, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11652)
!11650 = !DISubroutineType(types: !11651)
!11651 = !{!103, !1711, !163}
!11652 = !{!11653, !11654, !11655, !11656}
!11653 = !DILocalVariable(name: "config", arg: 1, scope: !11649, file: !1650, line: 342, type: !1711)
!11654 = !DILocalVariable(name: "id", arg: 2, scope: !11649, file: !1650, line: 343, type: !163)
!11655 = !DILocalVariable(name: "ret", scope: !11649, file: !1650, line: 345, type: !103)
!11656 = !DILocalVariable(name: "state", scope: !11649, file: !1650, line: 346, type: !1653)
!11657 = !DILocation(line: 0, scope: !11649)
!11658 = !DILocation(line: 346, column: 2, scope: !11649)
!11659 = !DILocation(line: 348, column: 8, scope: !11649)
!11660 = !DILocation(line: 349, column: 10, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11649, file: !1650, line: 349, column: 6)
!11662 = !DILocation(line: 349, column: 6, scope: !11649)
!11663 = !DILocation(line: 353, column: 44, scope: !11649)
!11664 = !DILocation(line: 353, column: 9, scope: !11649)
!11665 = !DILocation(line: 353, column: 2, scope: !11649)
!11666 = !DILocation(line: 354, column: 1, scope: !11649)
!11667 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10937, file: !10937, line: 497, type: !11417, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11668)
!11668 = !{!11669, !11670, !11671}
!11669 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11667, file: !10937, line: 497, type: !1567)
!11670 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11667, file: !10937, line: 497, type: !132)
!11671 = !DILocalVariable(name: "val", scope: !11672, file: !10937, line: 499, type: !132)
!11672 = distinct !DILexicalBlock(scope: !11667, file: !10937, line: 499, column: 3)
!11673 = !DILocation(line: 0, scope: !11667)
!11674 = !DILocation(line: 499, column: 3, scope: !11672)
!11675 = !DILocation(line: 0, scope: !10977, inlinedAt: !11676)
!11676 = distinct !DILocation(line: 499, column: 3, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11672, file: !10937, line: 499, column: 3)
!11678 = !DILocation(line: 480, column: 4, scope: !10977, inlinedAt: !11676)
!11679 = !DILocation(line: 499, column: 3, scope: !11677)
!11680 = !DILocation(line: 0, scope: !11672)
!11681 = !DILocation(line: 0, scope: !10990, inlinedAt: !11682)
!11682 = distinct !DILocation(line: 499, column: 3, scope: !11672)
!11683 = !DILocation(line: 531, column: 4, scope: !10990, inlinedAt: !11682)
!11684 = distinct !{!11684, !11674, !11674}
!11685 = !DILocation(line: 500, column: 1, scope: !11667)
!11686 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10937, file: !10937, line: 850, type: !11426, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11687)
!11687 = !{!11688, !11689, !11690, !11691}
!11688 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11686, file: !10937, line: 850, type: !1567)
!11689 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11686, file: !10937, line: 850, type: !132)
!11690 = !DILocalVariable(name: "Parity", arg: 3, scope: !11686, file: !10937, line: 850, type: !132)
!11691 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11686, file: !10937, line: 851, type: !132)
!11692 = !DILocation(line: 0, scope: !11686)
!11693 = !DILocation(line: 853, column: 3, scope: !11686)
!11694 = !DILocation(line: 854, column: 3, scope: !11686)
!11695 = !DILocation(line: 855, column: 1, scope: !11686)
!11696 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10937, file: !10937, line: 1337, type: !10968, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11697)
!11697 = !{!11698}
!11698 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11696, file: !10937, line: 1337, type: !1567)
!11699 = !DILocation(line: 0, scope: !11696)
!11700 = !DILocation(line: 1339, column: 3, scope: !11696)
!11701 = !DILocation(line: 1340, column: 1, scope: !11696)
!11702 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1650, file: !1650, line: 316, type: !11703, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11705)
!11703 = !DISubroutineType(types: !11704)
!11704 = !{!103, !1711, !1653}
!11705 = !{!11706, !11707, !11708}
!11706 = !DILocalVariable(name: "config", arg: 1, scope: !11702, file: !1650, line: 317, type: !1711)
!11707 = !DILocalVariable(name: "state", arg: 2, scope: !11702, file: !1650, line: 318, type: !1653)
!11708 = !DILocalVariable(name: "reg", scope: !11702, file: !1650, line: 320, type: !22)
!11709 = !DILocation(line: 0, scope: !11702)
!11710 = !DILocation(line: 329, column: 39, scope: !11702)
!11711 = !DILocation(line: 329, column: 52, scope: !11702)
!11712 = !DILocation(line: 329, column: 9, scope: !11702)
!11713 = !DILocation(line: 329, column: 2, scope: !11702)
!11714 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !11629, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !11715)
!11715 = !{!11716}
!11716 = !DILocalVariable(name: "dev", arg: 1, scope: !11714, file: !152, line: 730, type: !1496)
!11717 = !DILocation(line: 0, scope: !11714)
!11718 = !DILocation(line: 732, column: 9, scope: !11714)
!11719 = !DILocation(line: 732, column: 2, scope: !11714)
!11720 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1796, file: !1796, line: 270, type: !1802, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !11721)
!11721 = !{!11722}
!11722 = !DILocalVariable(name: "dev", arg: 1, scope: !11720, file: !1796, line: 270, type: !1804)
!11723 = !DILocation(line: 0, scope: !11720)
!11724 = !DILocation(line: 274, column: 2, scope: !11720)
!11725 = !DILocation(line: 275, column: 12, scope: !11720)
!11726 = !DILocation(line: 276, column: 15, scope: !11720)
!11727 = !DILocation(line: 277, column: 16, scope: !11720)
!11728 = !DILocation(line: 278, column: 15, scope: !11720)
!11729 = !DILocation(line: 279, column: 16, scope: !11720)
!11730 = !DILocation(line: 282, column: 2, scope: !11720)
!11731 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6877, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !11732)
!11732 = !{!11733, !11734}
!11733 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11731, file: !507, line: 1814, type: !763)
!11734 = !DILocalVariable(name: "priority", arg: 2, scope: !11731, file: !507, line: 1814, type: !132)
!11735 = !DILocation(line: 0, scope: !11731)
!11736 = !DILocation(line: 1822, column: 46, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11738, file: !507, line: 1821, column: 3)
!11738 = distinct !DILexicalBlock(scope: !11731, file: !507, line: 1816, column: 7)
!11739 = !DILocation(line: 1824, column: 1, scope: !11731)
!11740 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1796, file: !1796, line: 118, type: !6780, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !11741)
!11741 = !{!11742, !11743}
!11742 = !DILocalVariable(name: "arg", arg: 1, scope: !11740, file: !1796, line: 118, type: !102)
!11743 = !DILocalVariable(name: "dticks", scope: !11740, file: !1796, line: 121, type: !132)
!11744 = !DILocation(line: 0, scope: !11740)
!11745 = !DILocation(line: 124, column: 2, scope: !11740)
!11746 = !DILocation(line: 129, column: 17, scope: !11740)
!11747 = !DILocation(line: 129, column: 14, scope: !11740)
!11748 = !DILocation(line: 130, column: 15, scope: !11740)
!11749 = !DILocation(line: 145, column: 27, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11751, file: !1796, line: 132, column: 16)
!11751 = distinct !DILexicalBlock(scope: !11740, file: !1796, line: 132, column: 6)
!11752 = !DILocation(line: 145, column: 25, scope: !11750)
!11753 = !DILocation(line: 145, column: 45, scope: !11750)
!11754 = !DILocation(line: 146, column: 30, scope: !11750)
!11755 = !DILocation(line: 146, column: 20, scope: !11750)
!11756 = !DILocation(line: 147, column: 3, scope: !11750)
!11757 = !DILocation(line: 151, column: 2, scope: !11740)
!11758 = !DILocation(line: 152, column: 1, scope: !11740)
!11759 = distinct !DISubprogram(name: "elapsed", scope: !1796, file: !1796, line: 85, type: !6924, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !11760)
!11760 = !{!11761, !11762, !11763}
!11761 = !DILocalVariable(name: "val1", scope: !11759, file: !1796, line: 87, type: !132)
!11762 = !DILocalVariable(name: "ctrl", scope: !11759, file: !1796, line: 88, type: !132)
!11763 = !DILocalVariable(name: "val2", scope: !11759, file: !1796, line: 89, type: !132)
!11764 = !DILocation(line: 87, column: 27, scope: !11759)
!11765 = !DILocation(line: 0, scope: !11759)
!11766 = !DILocation(line: 88, column: 27, scope: !11759)
!11767 = !DILocation(line: 89, column: 27, scope: !11759)
!11768 = !DILocation(line: 105, column: 12, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11759, file: !1796, line: 105, column: 6)
!11770 = !DILocation(line: 106, column: 6, scope: !11769)
!11771 = !DILocation(line: 107, column: 16, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11769, file: !1796, line: 106, column: 24)
!11773 = !DILocation(line: 111, column: 18, scope: !11772)
!11774 = !DILocation(line: 112, column: 2, scope: !11772)
!11775 = !DILocation(line: 114, column: 20, scope: !11759)
!11776 = !DILocation(line: 114, column: 30, scope: !11759)
!11777 = !DILocation(line: 114, column: 28, scope: !11759)
!11778 = !DILocation(line: 114, column: 2, scope: !11759)
!11779 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1796, file: !1796, line: 154, type: !11780, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !11782)
!11780 = !DISubroutineType(types: !11781)
!11781 = !{null, !344, !166}
!11782 = !{!11783, !11784, !11785, !11786, !11787, !11788, !11789, !11794, !11795}
!11783 = !DILocalVariable(name: "ticks", arg: 1, scope: !11779, file: !1796, line: 154, type: !344)
!11784 = !DILocalVariable(name: "idle", arg: 2, scope: !11779, file: !1796, line: 154, type: !166)
!11785 = !DILocalVariable(name: "delay", scope: !11779, file: !1796, line: 169, type: !132)
!11786 = !DILocalVariable(name: "val1", scope: !11779, file: !1796, line: 170, type: !132)
!11787 = !DILocalVariable(name: "val2", scope: !11779, file: !1796, line: 170, type: !132)
!11788 = !DILocalVariable(name: "last_load_", scope: !11779, file: !1796, line: 171, type: !132)
!11789 = !DILocalVariable(name: "key", scope: !11779, file: !1796, line: 176, type: !11790)
!11790 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !11791)
!11791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !11792)
!11792 = !{!11793}
!11793 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11791, file: !472, line: 33, baseType: !103, size: 32)
!11794 = !DILocalVariable(name: "pending", scope: !11779, file: !1796, line: 178, type: !132)
!11795 = !DILocalVariable(name: "unannounced", scope: !11779, file: !1796, line: 185, type: !132)
!11796 = !DILocation(line: 0, scope: !11779)
!11797 = !DILocation(line: 162, column: 49, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11779, file: !1796, line: 162, column: 6)
!11799 = !DILocation(line: 163, column: 17, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11798, file: !1796, line: 162, column: 78)
!11801 = !DILocation(line: 164, column: 13, scope: !11800)
!11802 = !DILocation(line: 165, column: 3, scope: !11800)
!11803 = !DILocation(line: 171, column: 24, scope: !11779)
!11804 = !DILocation(line: 173, column: 10, scope: !11779)
!11805 = !DILocation(line: 174, column: 10, scope: !11779)
!11806 = !DILocalVariable(name: "l", arg: 1, scope: !11807, file: !472, line: 136, type: !11810)
!11807 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !11808, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !11811)
!11808 = !DISubroutineType(types: !11809)
!11809 = !{!11790, !11810}
!11810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!11811 = !{!11806, !11812}
!11812 = !DILocalVariable(name: "k", scope: !11807, file: !472, line: 139, type: !11790)
!11813 = !DILocation(line: 0, scope: !11807, inlinedAt: !11814)
!11814 = distinct !DILocation(line: 176, column: 25, scope: !11779)
!11815 = !DILocation(line: 55, column: 2, scope: !11816, inlinedAt: !11820)
!11816 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5823, file: !5823, line: 42, type: !5824, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !11817)
!11817 = !{!11818, !11819}
!11818 = !DILocalVariable(name: "key", scope: !11816, file: !5823, line: 44, type: !32)
!11819 = !DILocalVariable(name: "tmp", scope: !11816, file: !5823, line: 53, type: !32)
!11820 = distinct !DILocation(line: 145, column: 10, scope: !11807, inlinedAt: !11814)
!11821 = !{i64 2195945}
!11822 = !DILocation(line: 0, scope: !11816, inlinedAt: !11820)
!11823 = !DILocation(line: 178, column: 21, scope: !11779)
!11824 = !DILocation(line: 180, column: 18, scope: !11779)
!11825 = !DILocation(line: 182, column: 14, scope: !11779)
!11826 = !DILocation(line: 183, column: 15, scope: !11779)
!11827 = !DILocation(line: 185, column: 39, scope: !11779)
!11828 = !DILocation(line: 185, column: 37, scope: !11779)
!11829 = !DILocation(line: 187, column: 27, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11779, file: !1796, line: 187, column: 6)
!11831 = !DILocation(line: 187, column: 6, scope: !11779)
!11832 = !DILocation(line: 202, column: 27, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11830, file: !1796, line: 195, column: 9)
!11834 = !DILocation(line: 202, column: 48, scope: !11833)
!11835 = !DILocation(line: 203, column: 9, scope: !11833)
!11836 = !DILocation(line: 204, column: 11, scope: !11833)
!11837 = !DILocation(line: 205, column: 13, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11833, file: !1796, line: 205, column: 7)
!11839 = !DILocation(line: 205, column: 7, scope: !11833)
!11840 = !DILocation(line: 0, scope: !11830)
!11841 = !DILocation(line: 212, column: 18, scope: !11779)
!11842 = !DILocation(line: 214, column: 28, scope: !11779)
!11843 = !DILocation(line: 214, column: 16, scope: !11779)
!11844 = !DILocation(line: 215, column: 15, scope: !11779)
!11845 = !DILocation(line: 227, column: 11, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11779, file: !1796, line: 227, column: 6)
!11847 = !DILocation(line: 227, column: 6, scope: !11779)
!11848 = !DILocation(line: 228, column: 15, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11846, file: !1796, line: 227, column: 19)
!11850 = !DILocation(line: 228, column: 38, scope: !11849)
!11851 = !DILocation(line: 228, column: 24, scope: !11849)
!11852 = !DILocation(line: 229, column: 2, scope: !11849)
!11853 = !DILocation(line: 230, column: 24, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11846, file: !1796, line: 229, column: 9)
!11855 = !DILocation(line: 230, column: 15, scope: !11854)
!11856 = !DILocation(line: 0, scope: !11846)
!11857 = !DILocalVariable(name: "key", arg: 2, scope: !11858, file: !472, line: 190, type: !11790)
!11858 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !11859, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !11861)
!11859 = !DISubroutineType(types: !11860)
!11860 = !{null, !11810, !11790}
!11861 = !{!11862, !11857}
!11862 = !DILocalVariable(name: "l", arg: 1, scope: !11858, file: !472, line: 189, type: !11810)
!11863 = !DILocation(line: 0, scope: !11858, inlinedAt: !11864)
!11864 = distinct !DILocation(line: 232, column: 2, scope: !11779)
!11865 = !DILocalVariable(name: "key", arg: 1, scope: !11866, file: !5823, line: 84, type: !32)
!11866 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5823, file: !5823, line: 84, type: !5834, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !11867)
!11867 = !{!11865}
!11868 = !DILocation(line: 0, scope: !11866, inlinedAt: !11869)
!11869 = distinct !DILocation(line: 215, column: 2, scope: !11858, inlinedAt: !11864)
!11870 = !DILocation(line: 95, column: 2, scope: !11866, inlinedAt: !11869)
!11871 = !{i64 2196762}
!11872 = !DILocation(line: 234, column: 1, scope: !11779)
!11873 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1796, file: !1796, line: 236, type: !6924, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !11874)
!11874 = !{!11875, !11876}
!11875 = !DILocalVariable(name: "key", scope: !11873, file: !1796, line: 242, type: !11790)
!11876 = !DILocalVariable(name: "cyc", scope: !11873, file: !1796, line: 243, type: !132)
!11877 = !DILocation(line: 0, scope: !11807, inlinedAt: !11878)
!11878 = distinct !DILocation(line: 242, column: 25, scope: !11873)
!11879 = !DILocation(line: 55, column: 2, scope: !11816, inlinedAt: !11880)
!11880 = distinct !DILocation(line: 145, column: 10, scope: !11807, inlinedAt: !11878)
!11881 = !DILocation(line: 0, scope: !11816, inlinedAt: !11880)
!11882 = !DILocation(line: 0, scope: !11873)
!11883 = !DILocation(line: 243, column: 17, scope: !11873)
!11884 = !DILocation(line: 243, column: 29, scope: !11873)
!11885 = !DILocation(line: 243, column: 27, scope: !11873)
!11886 = !DILocation(line: 243, column: 43, scope: !11873)
!11887 = !DILocation(line: 243, column: 41, scope: !11873)
!11888 = !DILocation(line: 0, scope: !11858, inlinedAt: !11889)
!11889 = distinct !DILocation(line: 245, column: 2, scope: !11873)
!11890 = !DILocation(line: 0, scope: !11866, inlinedAt: !11891)
!11891 = distinct !DILocation(line: 215, column: 2, scope: !11858, inlinedAt: !11889)
!11892 = !DILocation(line: 95, column: 2, scope: !11866, inlinedAt: !11891)
!11893 = !DILocation(line: 246, column: 13, scope: !11873)
!11894 = !DILocation(line: 246, column: 2, scope: !11873)
!11895 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1796, file: !1796, line: 249, type: !6924, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !11896)
!11896 = !{!11897, !11898}
!11897 = !DILocalVariable(name: "key", scope: !11895, file: !1796, line: 251, type: !11790)
!11898 = !DILocalVariable(name: "ret", scope: !11895, file: !1796, line: 252, type: !132)
!11899 = !DILocation(line: 0, scope: !11807, inlinedAt: !11900)
!11900 = distinct !DILocation(line: 251, column: 25, scope: !11895)
!11901 = !DILocation(line: 55, column: 2, scope: !11816, inlinedAt: !11902)
!11902 = distinct !DILocation(line: 145, column: 10, scope: !11807, inlinedAt: !11900)
!11903 = !DILocation(line: 0, scope: !11816, inlinedAt: !11902)
!11904 = !DILocation(line: 0, scope: !11895)
!11905 = !DILocation(line: 252, column: 17, scope: !11895)
!11906 = !DILocation(line: 252, column: 29, scope: !11895)
!11907 = !DILocation(line: 252, column: 27, scope: !11895)
!11908 = !DILocation(line: 0, scope: !11858, inlinedAt: !11909)
!11909 = distinct !DILocation(line: 254, column: 2, scope: !11895)
!11910 = !DILocation(line: 0, scope: !11866, inlinedAt: !11911)
!11911 = distinct !DILocation(line: 215, column: 2, scope: !11858, inlinedAt: !11909)
!11912 = !DILocation(line: 95, column: 2, scope: !11866, inlinedAt: !11911)
!11913 = !DILocation(line: 255, column: 2, scope: !11895)
!11914 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1796, file: !1796, line: 258, type: !3256, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !473)
!11915 = !DILocation(line: 260, column: 6, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11914, file: !1796, line: 260, column: 6)
!11917 = !DILocation(line: 260, column: 16, scope: !11916)
!11918 = !DILocation(line: 260, column: 6, scope: !11914)
!11919 = !DILocation(line: 261, column: 17, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11916, file: !1796, line: 260, column: 34)
!11921 = !DILocation(line: 262, column: 2, scope: !11920)
!11922 = !DILocation(line: 263, column: 1, scope: !11914)
!11923 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1796, file: !1796, line: 265, type: !3256, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1716, retainedNodes: !473)
!11924 = !DILocation(line: 267, column: 16, scope: !11923)
!11925 = !DILocation(line: 268, column: 1, scope: !11923)
!11926 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11927, file: !11927, line: 9, type: !11928, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !11951)
!11927 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11928 = !DISubroutineType(types: !11929)
!11929 = !{!103, !11930, !163, !11950}
!11930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11931, size: 32)
!11931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11932)
!11932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1650, line: 60, size: 64, elements: !11933)
!11933 = !{!11934, !11949}
!11934 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11932, file: !1650, line: 69, baseType: !11935, size: 32)
!11935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11936, size: 32)
!11936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11937)
!11937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1650, line: 50, size: 64, elements: !11938)
!11938 = !{!11939, !11947, !11948}
!11939 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11937, file: !1650, line: 52, baseType: !11940, size: 32)
!11940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11941, size: 32)
!11941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11942)
!11942 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1661, line: 37, baseType: !11943)
!11943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1661, line: 32, size: 64, elements: !11944)
!11944 = !{!11945, !11946}
!11945 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11943, file: !1661, line: 34, baseType: !132, size: 32)
!11946 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11943, file: !1661, line: 36, baseType: !132, size: 32, offset: 32)
!11947 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11937, file: !1650, line: 54, baseType: !163, size: 8, offset: 32)
!11948 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11937, file: !1650, line: 56, baseType: !163, size: 8, offset: 40)
!11949 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11932, file: !1650, line: 71, baseType: !163, size: 8, offset: 32)
!11950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11935, size: 32)
!11951 = !{!11952, !11953, !11954}
!11952 = !DILocalVariable(name: "config", arg: 1, scope: !11926, file: !11927, line: 9, type: !11930)
!11953 = !DILocalVariable(name: "id", arg: 2, scope: !11926, file: !11927, line: 9, type: !163)
!11954 = !DILocalVariable(name: "state", arg: 3, scope: !11926, file: !11927, line: 10, type: !11950)
!11955 = !DILocation(line: 0, scope: !11926)
!11956 = !DILocation(line: 12, column: 20, scope: !11926)
!11957 = !DILocation(line: 13, column: 27, scope: !11926)
!11958 = !DILocation(line: 13, column: 42, scope: !11926)
!11959 = !DILocation(line: 13, column: 19, scope: !11926)
!11960 = !DILocation(line: 13, column: 16, scope: !11926)
!11961 = !DILocation(line: 13, column: 2, scope: !11926)
!11962 = distinct !{!11962, !11961, !11963}
!11963 = !DILocation(line: 19, column: 2, scope: !11926)
!11964 = !DILocation(line: 14, column: 23, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11966, file: !11927, line: 14, column: 7)
!11966 = distinct !DILexicalBlock(scope: !11926, file: !11927, line: 13, column: 54)
!11967 = !DILocation(line: 14, column: 10, scope: !11965)
!11968 = !DILocation(line: 18, column: 11, scope: !11966)
!11969 = !DILocation(line: 14, column: 7, scope: !11966)
!11970 = !DILocation(line: 22, column: 1, scope: !11926)
!11971 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1913, file: !1913, line: 193, type: !11972, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !11981)
!11972 = !DISubroutineType(types: !11973)
!11973 = !{!103, !11974, !163, !22}
!11974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11975, size: 32)
!11975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11976)
!11976 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1661, line: 37, baseType: !11977)
!11977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1661, line: 32, size: 64, elements: !11978)
!11978 = !{!11979, !11980}
!11979 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11977, file: !1661, line: 34, baseType: !132, size: 32)
!11980 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11977, file: !1661, line: 36, baseType: !132, size: 32, offset: 32)
!11981 = !{!11982, !11983, !11984, !11985, !11986, !11987, !11988, !11989, !11991}
!11982 = !DILocalVariable(name: "pins", arg: 1, scope: !11971, file: !1913, line: 193, type: !11974)
!11983 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11971, file: !1913, line: 193, type: !163)
!11984 = !DILocalVariable(name: "reg", arg: 3, scope: !11971, file: !1913, line: 194, type: !22)
!11985 = !DILocalVariable(name: "pin", scope: !11971, file: !1913, line: 196, type: !132)
!11986 = !DILocalVariable(name: "mux", scope: !11971, file: !1913, line: 196, type: !132)
!11987 = !DILocalVariable(name: "pin_cgf", scope: !11971, file: !1913, line: 197, type: !132)
!11988 = !DILocalVariable(name: "ret", scope: !11971, file: !1913, line: 198, type: !103)
!11989 = !DILocalVariable(name: "i", scope: !11990, file: !1913, line: 209, type: !163)
!11990 = distinct !DILexicalBlock(scope: !11971, file: !1913, line: 209, column: 2)
!11991 = !DILocalVariable(name: "gpio_out", scope: !11992, file: !1913, line: 239, type: !132)
!11992 = distinct !DILexicalBlock(scope: !11993, file: !1913, line: 238, column: 55)
!11993 = distinct !DILexicalBlock(scope: !11994, file: !1913, line: 238, column: 14)
!11994 = distinct !DILexicalBlock(scope: !11995, file: !1913, line: 236, column: 14)
!11995 = distinct !DILexicalBlock(scope: !11996, file: !1913, line: 234, column: 7)
!11996 = distinct !DILexicalBlock(scope: !11997, file: !1913, line: 209, column: 41)
!11997 = distinct !DILexicalBlock(scope: !11990, file: !1913, line: 209, column: 2)
!11998 = !DILocation(line: 0, scope: !11971)
!11999 = !DILocation(line: 0, scope: !11990)
!12000 = !DILocation(line: 209, column: 25, scope: !11997)
!12001 = !DILocation(line: 209, column: 2, scope: !11990)
!12002 = distinct !{!12002, !12001, !12003}
!12003 = !DILocation(line: 259, column: 2, scope: !11990)
!12004 = !DILocation(line: 210, column: 17, scope: !11996)
!12005 = !DILocation(line: 234, column: 7, scope: !11995)
!12006 = !DILocation(line: 234, column: 33, scope: !11995)
!12007 = !DILocation(line: 234, column: 7, scope: !11996)
!12008 = !DILocation(line: 235, column: 22, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !11995, file: !1913, line: 234, column: 49)
!12010 = !DILocation(line: 235, column: 29, scope: !12009)
!12011 = !DILocation(line: 236, column: 3, scope: !12009)
!12012 = !DILocation(line: 236, column: 14, scope: !11995)
!12013 = !DILocation(line: 239, column: 32, scope: !11992)
!12014 = !DILocation(line: 0, scope: !11992)
!12015 = !DILocation(line: 241, column: 8, scope: !11992)
!12016 = !DILocation(line: 246, column: 3, scope: !11992)
!12017 = !DILocation(line: 252, column: 9, scope: !11996)
!12018 = !DILocation(line: 255, column: 9, scope: !11996)
!12019 = !DILocation(line: 256, column: 11, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !11996, file: !1913, line: 256, column: 7)
!12021 = !DILocation(line: 209, column: 37, scope: !11997)
!12022 = !DILocation(line: 256, column: 7, scope: !11996)
!12023 = !DILocation(line: 262, column: 1, scope: !11971)
!12024 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1913, file: !1913, line: 176, type: !12025, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12027)
!12025 = !DISubroutineType(types: !12026)
!12026 = !{!103, !132, !132, !132}
!12027 = !{!12028, !12029, !12030, !12031}
!12028 = !DILocalVariable(name: "pin", arg: 1, scope: !12024, file: !1913, line: 176, type: !132)
!12029 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12024, file: !1913, line: 176, type: !132)
!12030 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12024, file: !1913, line: 176, type: !132)
!12031 = !DILocalVariable(name: "port_device", scope: !12024, file: !1913, line: 178, type: !1843)
!12032 = !DILocation(line: 0, scope: !12024)
!12033 = !DILocation(line: 180, column: 22, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12024, file: !1913, line: 180, column: 6)
!12035 = !DILocation(line: 180, column: 6, scope: !12024)
!12036 = !DILocation(line: 180, column: 6, scope: !12034)
!12037 = !DILocation(line: 184, column: 16, scope: !12024)
!12038 = !DILocation(line: 186, column: 19, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12024, file: !1913, line: 186, column: 6)
!12040 = !DILocation(line: 186, column: 28, scope: !12039)
!12041 = !DILocation(line: 186, column: 33, scope: !12039)
!12042 = !DILocation(line: 186, column: 6, scope: !12024)
!12043 = !DILocation(line: 190, column: 43, scope: !12024)
!12044 = !DILocation(line: 190, column: 9, scope: !12024)
!12045 = !DILocation(line: 190, column: 2, scope: !12024)
!12046 = !DILocation(line: 191, column: 1, scope: !12024)
!12047 = distinct !DISubprogram(name: "device_is_ready", scope: !6684, file: !6684, line: 47, type: !12048, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12050)
!12048 = !DISubroutineType(types: !12049)
!12049 = !{!166, !1843}
!12050 = !{!12051}
!12051 = !DILocalVariable(name: "dev", arg: 1, scope: !12047, file: !6684, line: 47, type: !1843)
!12052 = !DILocation(line: 0, scope: !12047)
!12053 = !DILocation(line: 55, column: 2, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12047, file: !6684, line: 55, column: 2)
!12055 = !{i64 2149429951}
!12056 = !DILocation(line: 56, column: 9, scope: !12047)
!12057 = !DILocation(line: 56, column: 2, scope: !12047)
!12058 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !12048, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12059)
!12059 = !{!12060}
!12060 = !DILocalVariable(name: "dev", arg: 1, scope: !12058, file: !152, line: 730, type: !1843)
!12061 = !DILocation(line: 0, scope: !12058)
!12062 = !DILocation(line: 732, column: 9, scope: !12058)
!12063 = !DILocation(line: 732, column: 2, scope: !12058)
!12064 = distinct !DISubprogram(name: "SystemInit", scope: !1961, file: !1961, line: 167, type: !3256, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1921, retainedNodes: !473)
!12065 = !DILocation(line: 182, column: 1, scope: !12064)
!12066 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1961, file: !1961, line: 220, type: !3256, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1921, retainedNodes: !12067)
!12067 = !{!12068, !12069, !12070, !12071, !12072}
!12068 = !DILocalVariable(name: "tmp", scope: !12066, file: !1961, line: 222, type: !132)
!12069 = !DILocalVariable(name: "pllvco", scope: !12066, file: !1961, line: 222, type: !132)
!12070 = !DILocalVariable(name: "pllp", scope: !12066, file: !1961, line: 222, type: !132)
!12071 = !DILocalVariable(name: "pllsource", scope: !12066, file: !1961, line: 222, type: !132)
!12072 = !DILocalVariable(name: "pllm", scope: !12066, file: !1961, line: 222, type: !132)
!12073 = !DILocation(line: 0, scope: !12066)
!12074 = !DILocation(line: 225, column: 14, scope: !12066)
!12075 = !DILocation(line: 225, column: 19, scope: !12066)
!12076 = !DILocation(line: 227, column: 3, scope: !12066)
!12077 = !DILocation(line: 234, column: 7, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12066, file: !1961, line: 228, column: 3)
!12079 = !DILocation(line: 240, column: 25, scope: !12078)
!12080 = !DILocation(line: 241, column: 19, scope: !12078)
!12081 = !DILocation(line: 241, column: 27, scope: !12078)
!12082 = !DILocation(line: 243, column: 21, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12078, file: !1961, line: 243, column: 11)
!12084 = !DILocation(line: 0, scope: !12083)
!12085 = !DILocation(line: 254, column: 22, scope: !12078)
!12086 = !DILocation(line: 254, column: 62, scope: !12078)
!12087 = !DILocation(line: 255, column: 31, scope: !12078)
!12088 = !DILocation(line: 256, column: 7, scope: !12078)
!12089 = !DILocation(line: 0, scope: !12078)
!12090 = !DILocation(line: 263, column: 30, scope: !12066)
!12091 = !DILocation(line: 263, column: 52, scope: !12066)
!12092 = !DILocation(line: 263, column: 9, scope: !12066)
!12093 = !DILocation(line: 265, column: 19, scope: !12066)
!12094 = !DILocation(line: 266, column: 1, scope: !12066)
!12095 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12096, file: !12096, line: 200, type: !12097, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !473)
!12096 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12097 = !DISubroutineType(types: !12098)
!12098 = !{!12099}
!12099 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3073, line: 44, baseType: !3072)
!12100 = !DILocation(line: 202, column: 3, scope: !12095)
!12101 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12096, file: !12096, line: 219, type: !12102, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12126)
!12102 = !DISubroutineType(types: !12103)
!12103 = !{!12099, !12104}
!12104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12105, size: 32)
!12105 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12106, line: 70, baseType: !12107)
!12106 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12106, line: 49, size: 384, elements: !12108)
!12108 = !{!12109, !12110, !12111, !12112, !12113, !12114, !12115}
!12109 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12107, file: !12106, line: 51, baseType: !132, size: 32)
!12110 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12107, file: !12106, line: 54, baseType: !132, size: 32, offset: 32)
!12111 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12107, file: !12106, line: 57, baseType: !132, size: 32, offset: 64)
!12112 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12107, file: !12106, line: 60, baseType: !132, size: 32, offset: 96)
!12113 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12107, file: !12106, line: 63, baseType: !132, size: 32, offset: 128)
!12114 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12107, file: !12106, line: 66, baseType: !132, size: 32, offset: 160)
!12115 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12107, file: !12106, line: 69, baseType: !12116, size: 192, offset: 192)
!12116 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12117, line: 73, baseType: !12118)
!12117 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12117, line: 45, size: 192, elements: !12119)
!12119 = !{!12120, !12121, !12122, !12123, !12124, !12125}
!12120 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12118, file: !12117, line: 47, baseType: !132, size: 32)
!12121 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12118, file: !12117, line: 50, baseType: !132, size: 32, offset: 32)
!12122 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12118, file: !12117, line: 53, baseType: !132, size: 32, offset: 64)
!12123 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12118, file: !12117, line: 56, baseType: !132, size: 32, offset: 96)
!12124 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12118, file: !12117, line: 60, baseType: !132, size: 32, offset: 128)
!12125 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12118, file: !12117, line: 63, baseType: !132, size: 32, offset: 160)
!12126 = !{!12127, !12128, !12129, !12130, !12134}
!12127 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12101, file: !12096, line: 219, type: !12104)
!12128 = !DILocalVariable(name: "tickstart", scope: !12101, file: !12096, line: 221, type: !132)
!12129 = !DILocalVariable(name: "pll_config", scope: !12101, file: !12096, line: 221, type: !132)
!12130 = !DILocalVariable(name: "pwrclkchanged", scope: !12131, file: !12096, line: 391, type: !12133)
!12131 = distinct !DILexicalBlock(scope: !12132, file: !12096, line: 390, column: 3)
!12132 = distinct !DILexicalBlock(scope: !12101, file: !12096, line: 389, column: 6)
!12133 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !804, line: 188, baseType: !3079)
!12134 = !DILocalVariable(name: "tmpreg", scope: !12135, file: !12096, line: 400, type: !131)
!12135 = distinct !DILexicalBlock(scope: !12136, file: !12096, line: 400, column: 7)
!12136 = distinct !DILexicalBlock(scope: !12137, file: !12096, line: 399, column: 5)
!12137 = distinct !DILexicalBlock(scope: !12131, file: !12096, line: 398, column: 8)
!12138 = !DILocation(line: 0, scope: !12101)
!12139 = !DILocation(line: 224, column: 24, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12101, file: !12096, line: 224, column: 6)
!12141 = !DILocation(line: 224, column: 6, scope: !12101)
!12142 = !DILocation(line: 232, column: 27, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12101, file: !12096, line: 232, column: 6)
!12144 = !DILocation(line: 232, column: 43, scope: !12143)
!12145 = !DILocation(line: 232, column: 69, scope: !12143)
!12146 = !DILocation(line: 232, column: 6, scope: !12101)
!12147 = !DILocation(line: 237, column: 9, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12149, file: !12096, line: 237, column: 8)
!12149 = distinct !DILexicalBlock(scope: !12143, file: !12096, line: 233, column: 3)
!12150 = !DILocation(line: 237, column: 39, scope: !12148)
!12151 = !DILocation(line: 237, column: 60, scope: !12148)
!12152 = !DILocation(line: 238, column: 9, scope: !12148)
!12153 = !DILocation(line: 238, column: 39, scope: !12148)
!12154 = !DILocation(line: 238, column: 60, scope: !12148)
!12155 = !DILocation(line: 238, column: 70, scope: !12148)
!12156 = !DILocation(line: 238, column: 78, scope: !12148)
!12157 = !DILocation(line: 238, column: 100, scope: !12148)
!12158 = !DILocation(line: 237, column: 8, scope: !12149)
!12159 = !DILocation(line: 240, column: 11, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12161, file: !12096, line: 240, column: 10)
!12161 = distinct !DILexicalBlock(scope: !12148, file: !12096, line: 239, column: 5)
!12162 = !DILocation(line: 240, column: 57, scope: !12160)
!12163 = !DILocation(line: 240, column: 80, scope: !12160)
!12164 = !DILocation(line: 240, column: 89, scope: !12160)
!12165 = !DILocation(line: 240, column: 10, scope: !12161)
!12166 = !DILocation(line: 248, column: 7, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12168, file: !12096, line: 248, column: 7)
!12168 = distinct !DILexicalBlock(scope: !12169, file: !12096, line: 248, column: 7)
!12169 = distinct !DILexicalBlock(scope: !12148, file: !12096, line: 246, column: 5)
!12170 = !DILocation(line: 248, column: 7, scope: !12168)
!12171 = !DILocation(line: 248, column: 7, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12167, file: !12096, line: 248, column: 7)
!12173 = !DILocation(line: 248, column: 7, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12175, file: !12096, line: 248, column: 7)
!12175 = distinct !DILexicalBlock(scope: !12167, file: !12096, line: 248, column: 7)
!12176 = !DILocation(line: 248, column: 7, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12175, file: !12096, line: 248, column: 7)
!12178 = !DILocation(line: 0, scope: !12167)
!12179 = !DILocation(line: 251, column: 30, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12169, file: !12096, line: 251, column: 10)
!12181 = !DILocation(line: 251, column: 40, scope: !12180)
!12182 = !DILocation(line: 0, scope: !12180)
!12183 = !DILocation(line: 251, column: 10, scope: !12169)
!12184 = !DILocation(line: 257, column: 15, scope: !12185)
!12185 = distinct !DILexicalBlock(scope: !12180, file: !12096, line: 252, column: 7)
!12186 = !DILocation(line: 257, column: 51, scope: !12185)
!12187 = !DILocation(line: 257, column: 9, scope: !12185)
!12188 = !DILocation(line: 259, column: 15, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12190, file: !12096, line: 259, column: 14)
!12190 = distinct !DILexicalBlock(scope: !12185, file: !12096, line: 258, column: 9)
!12191 = !DILocation(line: 259, column: 29, scope: !12189)
!12192 = !DILocation(line: 259, column: 43, scope: !12189)
!12193 = !DILocation(line: 259, column: 14, scope: !12190)
!12194 = distinct !{!12194, !12187, !12195}
!12195 = !DILocation(line: 263, column: 9, scope: !12185)
!12196 = !DILocation(line: 271, column: 15, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !12180, file: !12096, line: 266, column: 7)
!12198 = !DILocation(line: 271, column: 9, scope: !12197)
!12199 = !DILocation(line: 273, column: 15, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12201, file: !12096, line: 273, column: 14)
!12201 = distinct !DILexicalBlock(scope: !12197, file: !12096, line: 272, column: 9)
!12202 = !DILocation(line: 273, column: 29, scope: !12200)
!12203 = !DILocation(line: 273, column: 43, scope: !12200)
!12204 = !DILocation(line: 273, column: 14, scope: !12201)
!12205 = distinct !{!12205, !12198, !12206}
!12206 = !DILocation(line: 277, column: 9, scope: !12197)
!12207 = !DILocation(line: 282, column: 27, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12101, file: !12096, line: 282, column: 6)
!12209 = !DILocation(line: 282, column: 43, scope: !12208)
!12210 = !DILocation(line: 282, column: 69, scope: !12208)
!12211 = !DILocation(line: 282, column: 6, scope: !12101)
!12212 = !DILocation(line: 289, column: 9, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12214, file: !12096, line: 289, column: 8)
!12214 = distinct !DILexicalBlock(scope: !12208, file: !12096, line: 283, column: 3)
!12215 = !DILocation(line: 289, column: 39, scope: !12213)
!12216 = !DILocation(line: 289, column: 60, scope: !12213)
!12217 = !DILocation(line: 290, column: 9, scope: !12213)
!12218 = !DILocation(line: 290, column: 39, scope: !12213)
!12219 = !DILocation(line: 290, column: 60, scope: !12213)
!12220 = !DILocation(line: 290, column: 70, scope: !12213)
!12221 = !DILocation(line: 290, column: 78, scope: !12213)
!12222 = !DILocation(line: 290, column: 100, scope: !12213)
!12223 = !DILocation(line: 289, column: 8, scope: !12214)
!12224 = !DILocation(line: 293, column: 11, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12226, file: !12096, line: 293, column: 10)
!12226 = distinct !DILexicalBlock(scope: !12213, file: !12096, line: 291, column: 5)
!12227 = !DILocation(line: 293, column: 57, scope: !12225)
!12228 = !DILocation(line: 293, column: 80, scope: !12225)
!12229 = !DILocation(line: 293, column: 89, scope: !12225)
!12230 = !DILocation(line: 293, column: 10, scope: !12226)
!12231 = !DILocation(line: 307, column: 30, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !12096, line: 307, column: 10)
!12233 = distinct !DILexicalBlock(scope: !12213, file: !12096, line: 305, column: 5)
!12234 = !DILocation(line: 307, column: 39, scope: !12232)
!12235 = !DILocation(line: 307, column: 10, scope: !12233)
!12236 = !DILocation(line: 310, column: 9, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12232, file: !12096, line: 308, column: 7)
!12238 = !DILocation(line: 313, column: 21, scope: !12237)
!12239 = !DILocation(line: 316, column: 9, scope: !12237)
!12240 = !DILocation(line: 316, column: 15, scope: !12237)
!12241 = !DILocation(line: 316, column: 51, scope: !12237)
!12242 = !DILocation(line: 318, column: 15, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12244, file: !12096, line: 318, column: 14)
!12244 = distinct !DILexicalBlock(scope: !12237, file: !12096, line: 317, column: 9)
!12245 = !DILocation(line: 318, column: 29, scope: !12243)
!12246 = !DILocation(line: 318, column: 43, scope: !12243)
!12247 = !DILocation(line: 318, column: 14, scope: !12244)
!12248 = distinct !{!12248, !12239, !12249}
!12249 = !DILocation(line: 322, column: 9, scope: !12237)
!12250 = !DILocation(line: 330, column: 9, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12232, file: !12096, line: 328, column: 7)
!12252 = !DILocation(line: 333, column: 21, scope: !12251)
!12253 = !DILocation(line: 336, column: 9, scope: !12251)
!12254 = !DILocation(line: 336, column: 15, scope: !12251)
!12255 = !DILocation(line: 338, column: 15, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12257, file: !12096, line: 338, column: 14)
!12257 = distinct !DILexicalBlock(scope: !12251, file: !12096, line: 337, column: 9)
!12258 = !DILocation(line: 338, column: 29, scope: !12256)
!12259 = !DILocation(line: 338, column: 43, scope: !12256)
!12260 = !DILocation(line: 338, column: 14, scope: !12257)
!12261 = distinct !{!12261, !12253, !12262}
!12262 = !DILocation(line: 342, column: 9, scope: !12251)
!12263 = !DILocation(line: 0, scope: !12213)
!12264 = !DILocation(line: 347, column: 27, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12101, file: !12096, line: 347, column: 6)
!12266 = !DILocation(line: 347, column: 43, scope: !12265)
!12267 = !DILocation(line: 347, column: 69, scope: !12265)
!12268 = !DILocation(line: 347, column: 6, scope: !12101)
!12269 = !DILocation(line: 353, column: 28, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12271, file: !12096, line: 353, column: 8)
!12271 = distinct !DILexicalBlock(scope: !12265, file: !12096, line: 348, column: 3)
!12272 = !DILocation(line: 353, column: 37, scope: !12270)
!12273 = !DILocation(line: 353, column: 8, scope: !12271)
!12274 = !DILocation(line: 356, column: 7, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12270, file: !12096, line: 354, column: 5)
!12276 = !DILocation(line: 359, column: 19, scope: !12275)
!12277 = !DILocation(line: 362, column: 7, scope: !12275)
!12278 = !DILocation(line: 362, column: 13, scope: !12275)
!12279 = !DILocation(line: 362, column: 49, scope: !12275)
!12280 = !DILocation(line: 364, column: 13, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12282, file: !12096, line: 364, column: 12)
!12282 = distinct !DILexicalBlock(scope: !12275, file: !12096, line: 363, column: 7)
!12283 = !DILocation(line: 364, column: 27, scope: !12281)
!12284 = !DILocation(line: 364, column: 41, scope: !12281)
!12285 = !DILocation(line: 364, column: 12, scope: !12282)
!12286 = distinct !{!12286, !12277, !12287}
!12287 = !DILocation(line: 368, column: 7, scope: !12275)
!12288 = !DILocation(line: 373, column: 7, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12270, file: !12096, line: 371, column: 5)
!12290 = !DILocation(line: 376, column: 19, scope: !12289)
!12291 = !DILocation(line: 379, column: 7, scope: !12289)
!12292 = !DILocation(line: 379, column: 13, scope: !12289)
!12293 = !DILocation(line: 381, column: 13, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12295, file: !12096, line: 381, column: 12)
!12295 = distinct !DILexicalBlock(scope: !12289, file: !12096, line: 380, column: 7)
!12296 = !DILocation(line: 381, column: 27, scope: !12294)
!12297 = !DILocation(line: 381, column: 41, scope: !12294)
!12298 = !DILocation(line: 381, column: 12, scope: !12295)
!12299 = distinct !{!12299, !12291, !12300}
!12300 = !DILocation(line: 385, column: 7, scope: !12289)
!12301 = !DILocation(line: 389, column: 27, scope: !12132)
!12302 = !DILocation(line: 389, column: 43, scope: !12132)
!12303 = !DILocation(line: 389, column: 69, scope: !12132)
!12304 = !DILocation(line: 389, column: 6, scope: !12101)
!12305 = !DILocation(line: 0, scope: !12131)
!12306 = !DILocation(line: 398, column: 8, scope: !12137)
!12307 = !DILocation(line: 398, column: 8, scope: !12131)
!12308 = !DILocation(line: 400, column: 7, scope: !12135)
!12309 = !DILocation(line: 400, column: 7, scope: !12136)
!12310 = !DILocation(line: 402, column: 5, scope: !12136)
!12311 = !DILocation(line: 404, column: 8, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12131, file: !12096, line: 404, column: 8)
!12313 = !DILocation(line: 404, column: 8, scope: !12131)
!12314 = !DILocation(line: 407, column: 7, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12312, file: !12096, line: 405, column: 5)
!12316 = !DILocation(line: 410, column: 19, scope: !12315)
!12317 = !DILocation(line: 412, column: 7, scope: !12315)
!12318 = !DILocation(line: 412, column: 13, scope: !12315)
!12319 = !DILocation(line: 414, column: 13, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12321, file: !12096, line: 414, column: 12)
!12321 = distinct !DILexicalBlock(scope: !12315, file: !12096, line: 413, column: 7)
!12322 = !DILocation(line: 414, column: 27, scope: !12320)
!12323 = !DILocation(line: 414, column: 40, scope: !12320)
!12324 = !DILocation(line: 414, column: 12, scope: !12321)
!12325 = distinct !{!12325, !12317, !12326}
!12326 = !DILocation(line: 418, column: 7, scope: !12315)
!12327 = !DILocation(line: 422, column: 5, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12329, file: !12096, line: 422, column: 5)
!12329 = distinct !DILexicalBlock(scope: !12131, file: !12096, line: 422, column: 5)
!12330 = !DILocation(line: 422, column: 5, scope: !12329)
!12331 = !DILocation(line: 422, column: 5, scope: !12332)
!12332 = distinct !DILexicalBlock(scope: !12328, file: !12096, line: 422, column: 5)
!12333 = !DILocation(line: 422, column: 5, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !12096, line: 422, column: 5)
!12335 = distinct !DILexicalBlock(scope: !12328, file: !12096, line: 422, column: 5)
!12336 = !DILocation(line: 422, column: 5, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12335, file: !12096, line: 422, column: 5)
!12338 = !DILocation(line: 0, scope: !12328)
!12339 = !DILocation(line: 424, column: 28, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12131, file: !12096, line: 424, column: 8)
!12341 = !DILocation(line: 424, column: 38, scope: !12340)
!12342 = !DILocation(line: 0, scope: !12340)
!12343 = !DILocation(line: 424, column: 8, scope: !12131)
!12344 = !DILocation(line: 430, column: 13, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12340, file: !12096, line: 425, column: 5)
!12346 = !DILocation(line: 430, column: 49, scope: !12345)
!12347 = !DILocation(line: 430, column: 7, scope: !12345)
!12348 = !DILocation(line: 432, column: 13, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12350, file: !12096, line: 432, column: 12)
!12350 = distinct !DILexicalBlock(scope: !12345, file: !12096, line: 431, column: 7)
!12351 = !DILocation(line: 432, column: 27, scope: !12349)
!12352 = !DILocation(line: 432, column: 41, scope: !12349)
!12353 = !DILocation(line: 432, column: 12, scope: !12350)
!12354 = distinct !{!12354, !12347, !12355}
!12355 = !DILocation(line: 436, column: 7, scope: !12345)
!12356 = !DILocation(line: 444, column: 13, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12340, file: !12096, line: 439, column: 5)
!12358 = !DILocation(line: 444, column: 7, scope: !12357)
!12359 = !DILocation(line: 446, column: 13, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12361, file: !12096, line: 446, column: 12)
!12361 = distinct !DILexicalBlock(scope: !12357, file: !12096, line: 445, column: 7)
!12362 = !DILocation(line: 446, column: 27, scope: !12360)
!12363 = !DILocation(line: 446, column: 41, scope: !12360)
!12364 = !DILocation(line: 446, column: 12, scope: !12361)
!12365 = distinct !{!12365, !12358, !12366}
!12366 = !DILocation(line: 450, column: 7, scope: !12357)
!12367 = !DILocation(line: 454, column: 8, scope: !12131)
!12368 = !DILocation(line: 456, column: 7, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12370, file: !12096, line: 455, column: 5)
!12370 = distinct !DILexicalBlock(scope: !12131, file: !12096, line: 454, column: 8)
!12371 = !DILocation(line: 457, column: 5, scope: !12369)
!12372 = !DILocation(line: 462, column: 31, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12101, file: !12096, line: 462, column: 7)
!12374 = !DILocation(line: 462, column: 41, scope: !12373)
!12375 = !DILocation(line: 462, column: 7, scope: !12101)
!12376 = !DILocation(line: 465, column: 8, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12378, file: !12096, line: 465, column: 8)
!12378 = distinct !DILexicalBlock(scope: !12373, file: !12096, line: 463, column: 3)
!12379 = !DILocation(line: 465, column: 38, scope: !12377)
!12380 = !DILocation(line: 465, column: 8, scope: !12378)
!12381 = !DILocation(line: 467, column: 44, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12383, file: !12096, line: 467, column: 10)
!12383 = distinct !DILexicalBlock(scope: !12377, file: !12096, line: 466, column: 5)
!12384 = !DILocation(line: 0, scope: !12382)
!12385 = !DILocation(line: 467, column: 10, scope: !12383)
!12386 = !DILocation(line: 483, column: 15, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12382, file: !12096, line: 468, column: 7)
!12388 = !DILocation(line: 483, column: 9, scope: !12387)
!12389 = !DILocation(line: 485, column: 15, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12391, file: !12096, line: 485, column: 14)
!12391 = distinct !DILexicalBlock(scope: !12387, file: !12096, line: 484, column: 9)
!12392 = !DILocation(line: 485, column: 29, scope: !12390)
!12393 = !DILocation(line: 485, column: 43, scope: !12390)
!12394 = !DILocation(line: 485, column: 14, scope: !12391)
!12395 = distinct !{!12395, !12388, !12396}
!12396 = !DILocation(line: 489, column: 9, scope: !12387)
!12397 = !DILocation(line: 492, column: 9, scope: !12387)
!12398 = !DILocation(line: 498, column: 9, scope: !12387)
!12399 = !DILocation(line: 501, column: 21, scope: !12387)
!12400 = !DILocation(line: 504, column: 9, scope: !12387)
!12401 = !DILocation(line: 504, column: 15, scope: !12387)
!12402 = !DILocation(line: 504, column: 51, scope: !12387)
!12403 = !DILocation(line: 506, column: 15, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12405, file: !12096, line: 506, column: 14)
!12405 = distinct !DILexicalBlock(scope: !12387, file: !12096, line: 505, column: 9)
!12406 = !DILocation(line: 506, column: 29, scope: !12404)
!12407 = !DILocation(line: 506, column: 43, scope: !12404)
!12408 = !DILocation(line: 506, column: 14, scope: !12405)
!12409 = distinct !{!12409, !12400, !12410}
!12410 = !DILocation(line: 510, column: 9, scope: !12387)
!12411 = !DILocation(line: 521, column: 15, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12382, file: !12096, line: 513, column: 7)
!12413 = !DILocation(line: 521, column: 9, scope: !12412)
!12414 = !DILocation(line: 523, column: 15, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12416, file: !12096, line: 523, column: 14)
!12416 = distinct !DILexicalBlock(scope: !12412, file: !12096, line: 522, column: 9)
!12417 = !DILocation(line: 523, column: 29, scope: !12415)
!12418 = !DILocation(line: 523, column: 43, scope: !12415)
!12419 = !DILocation(line: 523, column: 14, scope: !12416)
!12420 = distinct !{!12420, !12413, !12421}
!12421 = !DILocation(line: 527, column: 9, scope: !12412)
!12422 = !DILocation(line: 533, column: 44, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12424, file: !12096, line: 533, column: 10)
!12424 = distinct !DILexicalBlock(scope: !12377, file: !12096, line: 531, column: 5)
!12425 = !DILocation(line: 533, column: 10, scope: !12424)
!12426 = !DILocation(line: 540, column: 27, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12423, file: !12096, line: 538, column: 7)
!12428 = !DILocation(line: 551, column: 14, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12427, file: !12096, line: 550, column: 13)
!12430 = !DILocation(line: 551, column: 81, scope: !12429)
!12431 = !DILocation(line: 551, column: 55, scope: !12429)
!12432 = !DILocation(line: 551, column: 92, scope: !12429)
!12433 = !DILocation(line: 552, column: 14, scope: !12429)
!12434 = !DILocation(line: 552, column: 80, scope: !12429)
!12435 = !DILocation(line: 552, column: 53, scope: !12429)
!12436 = !DILocation(line: 552, column: 111, scope: !12429)
!12437 = !DILocation(line: 553, column: 14, scope: !12429)
!12438 = !DILocation(line: 553, column: 80, scope: !12429)
!12439 = !DILocation(line: 553, column: 86, scope: !12429)
!12440 = !DILocation(line: 553, column: 53, scope: !12429)
!12441 = !DILocation(line: 553, column: 111, scope: !12429)
!12442 = !DILocation(line: 554, column: 14, scope: !12429)
!12443 = !DILocation(line: 554, column: 82, scope: !12429)
!12444 = !DILocation(line: 554, column: 101, scope: !12429)
!12445 = !DILocation(line: 554, column: 53, scope: !12429)
!12446 = !DILocation(line: 554, column: 126, scope: !12429)
!12447 = !DILocation(line: 555, column: 14, scope: !12429)
!12448 = !DILocation(line: 555, column: 80, scope: !12429)
!12449 = !DILocation(line: 555, column: 85, scope: !12429)
!12450 = !DILocation(line: 555, column: 53, scope: !12429)
!12451 = !DILocation(line: 550, column: 13, scope: !12427)
!12452 = !DILocation(line: 563, column: 3, scope: !12101)
!12453 = !DILocation(line: 564, column: 1, scope: !12101)
!12454 = !DISubprogram(name: "HAL_GetTick", scope: !12455, file: !12455, line: 234, type: !6924, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!12455 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12456 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12096, file: !12096, line: 591, type: !12457, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12468)
!12457 = !DISubroutineType(types: !12458)
!12458 = !{!12099, !12459, !132}
!12459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12460, size: 32)
!12460 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12106, line: 92, baseType: !12461)
!12461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12106, line: 75, size: 160, elements: !12462)
!12462 = !{!12463, !12464, !12465, !12466, !12467}
!12463 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12461, file: !12106, line: 77, baseType: !132, size: 32)
!12464 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12461, file: !12106, line: 80, baseType: !132, size: 32, offset: 32)
!12465 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12461, file: !12106, line: 83, baseType: !132, size: 32, offset: 64)
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12461, file: !12106, line: 86, baseType: !132, size: 32, offset: 96)
!12467 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12461, file: !12106, line: 89, baseType: !132, size: 32, offset: 128)
!12468 = !{!12469, !12470, !12471}
!12469 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12456, file: !12096, line: 591, type: !12459)
!12470 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12456, file: !12096, line: 591, type: !132)
!12471 = !DILocalVariable(name: "tickstart", scope: !12456, file: !12096, line: 593, type: !132)
!12472 = !DILocation(line: 0, scope: !12456)
!12473 = !DILocation(line: 596, column: 24, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12456, file: !12096, line: 596, column: 6)
!12475 = !DILocation(line: 596, column: 6, scope: !12456)
!12476 = !DILocation(line: 610, column: 17, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12456, file: !12096, line: 610, column: 6)
!12478 = !DILocation(line: 610, column: 15, scope: !12477)
!12479 = !DILocation(line: 610, column: 6, scope: !12456)
!12480 = !DILocation(line: 613, column: 5, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12477, file: !12096, line: 611, column: 3)
!12482 = !DILocation(line: 617, column: 8, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12481, file: !12096, line: 617, column: 8)
!12484 = !DILocation(line: 617, column: 34, scope: !12483)
!12485 = !DILocation(line: 617, column: 8, scope: !12481)
!12486 = !DILocation(line: 624, column: 27, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12456, file: !12096, line: 624, column: 6)
!12488 = !DILocation(line: 624, column: 38, scope: !12487)
!12489 = !DILocation(line: 624, column: 60, scope: !12487)
!12490 = !DILocation(line: 624, column: 6, scope: !12456)
!12491 = !DILocation(line: 628, column: 40, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12493, file: !12096, line: 628, column: 8)
!12493 = distinct !DILexicalBlock(scope: !12487, file: !12096, line: 625, column: 3)
!12494 = !DILocation(line: 628, column: 63, scope: !12492)
!12495 = !DILocation(line: 628, column: 8, scope: !12493)
!12496 = !DILocation(line: 630, column: 7, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12492, file: !12096, line: 629, column: 5)
!12498 = !DILocation(line: 633, column: 29, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12493, file: !12096, line: 633, column: 8)
!12500 = !DILocation(line: 631, column: 5, scope: !12497)
!12501 = !DILocation(line: 633, column: 40, scope: !12499)
!12502 = !DILocation(line: 633, column: 63, scope: !12499)
!12503 = !DILocation(line: 633, column: 8, scope: !12493)
!12504 = !DILocation(line: 635, column: 7, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12499, file: !12096, line: 634, column: 5)
!12506 = !DILocation(line: 636, column: 5, scope: !12505)
!12507 = !DILocation(line: 639, column: 5, scope: !12493)
!12508 = !DILocation(line: 643, column: 27, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12456, file: !12096, line: 643, column: 6)
!12510 = !DILocation(line: 640, column: 3, scope: !12493)
!12511 = !DILocation(line: 643, column: 38, scope: !12509)
!12512 = !DILocation(line: 643, column: 62, scope: !12509)
!12513 = !DILocation(line: 643, column: 6, scope: !12456)
!12514 = !DILocation(line: 648, column: 27, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12516, file: !12096, line: 648, column: 8)
!12516 = distinct !DILexicalBlock(scope: !12509, file: !12096, line: 644, column: 3)
!12517 = !DILocation(line: 648, column: 8, scope: !12516)
!12518 = !DILocation(line: 651, column: 10, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12520, file: !12096, line: 651, column: 10)
!12520 = distinct !DILexicalBlock(scope: !12515, file: !12096, line: 649, column: 5)
!12521 = !DILocation(line: 651, column: 46, scope: !12519)
!12522 = !DILocation(line: 651, column: 10, scope: !12520)
!12523 = !DILocation(line: 661, column: 10, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12525, file: !12096, line: 661, column: 10)
!12525 = distinct !DILexicalBlock(scope: !12526, file: !12096, line: 659, column: 5)
!12526 = distinct !DILexicalBlock(scope: !12515, file: !12096, line: 657, column: 13)
!12527 = !DILocation(line: 661, column: 46, scope: !12524)
!12528 = !DILocation(line: 661, column: 10, scope: !12525)
!12529 = !DILocation(line: 670, column: 10, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12531, file: !12096, line: 670, column: 10)
!12531 = distinct !DILexicalBlock(scope: !12526, file: !12096, line: 668, column: 5)
!12532 = !DILocation(line: 670, column: 46, scope: !12530)
!12533 = !DILocation(line: 670, column: 10, scope: !12531)
!12534 = !DILocation(line: 676, column: 5, scope: !12516)
!12535 = !DILocation(line: 679, column: 17, scope: !12516)
!12536 = !DILocation(line: 681, column: 5, scope: !12516)
!12537 = !DILocation(line: 681, column: 12, scope: !12516)
!12538 = !DILocation(line: 681, column: 65, scope: !12516)
!12539 = !DILocation(line: 681, column: 78, scope: !12516)
!12540 = !DILocation(line: 681, column: 42, scope: !12516)
!12541 = !DILocation(line: 683, column: 12, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12543, file: !12096, line: 683, column: 11)
!12543 = distinct !DILexicalBlock(scope: !12516, file: !12096, line: 682, column: 5)
!12544 = !DILocation(line: 683, column: 26, scope: !12542)
!12545 = !DILocation(line: 683, column: 39, scope: !12542)
!12546 = !DILocation(line: 683, column: 11, scope: !12543)
!12547 = distinct !{!12547, !12536, !12548}
!12548 = !DILocation(line: 687, column: 5, scope: !12516)
!12549 = !DILocation(line: 691, column: 17, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12456, file: !12096, line: 691, column: 6)
!12551 = !DILocation(line: 691, column: 15, scope: !12550)
!12552 = !DILocation(line: 691, column: 6, scope: !12456)
!12553 = !DILocation(line: 694, column: 5, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12550, file: !12096, line: 692, column: 3)
!12555 = !DILocation(line: 698, column: 8, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12554, file: !12096, line: 698, column: 8)
!12557 = !DILocation(line: 698, column: 34, scope: !12556)
!12558 = !DILocation(line: 698, column: 8, scope: !12554)
!12559 = !DILocation(line: 705, column: 27, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12456, file: !12096, line: 705, column: 6)
!12561 = !DILocation(line: 705, column: 38, scope: !12560)
!12562 = !DILocation(line: 705, column: 61, scope: !12560)
!12563 = !DILocation(line: 705, column: 6, scope: !12456)
!12564 = !DILocation(line: 708, column: 5, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12560, file: !12096, line: 706, column: 3)
!12566 = !DILocation(line: 712, column: 27, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12456, file: !12096, line: 712, column: 6)
!12568 = !DILocation(line: 709, column: 3, scope: !12565)
!12569 = !DILocation(line: 712, column: 38, scope: !12567)
!12570 = !DILocation(line: 712, column: 61, scope: !12567)
!12571 = !DILocation(line: 712, column: 6, scope: !12456)
!12572 = !DILocation(line: 715, column: 5, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12567, file: !12096, line: 713, column: 3)
!12574 = !DILocation(line: 716, column: 3, scope: !12573)
!12575 = !DILocation(line: 719, column: 21, scope: !12456)
!12576 = !DILocation(line: 719, column: 70, scope: !12456)
!12577 = !DILocation(line: 719, column: 91, scope: !12456)
!12578 = !DILocation(line: 719, column: 50, scope: !12456)
!12579 = !DILocation(line: 719, column: 47, scope: !12456)
!12580 = !DILocation(line: 719, column: 19, scope: !12456)
!12581 = !DILocation(line: 722, column: 17, scope: !12456)
!12582 = !DILocation(line: 722, column: 3, scope: !12456)
!12583 = !DILocation(line: 724, column: 3, scope: !12456)
!12584 = !DILocation(line: 725, column: 1, scope: !12456)
!12585 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12096, file: !12096, line: 885, type: !6924, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12586)
!12586 = !{!12587, !12588, !12589, !12590}
!12587 = !DILocalVariable(name: "pllm", scope: !12585, file: !12096, line: 887, type: !132)
!12588 = !DILocalVariable(name: "pllvco", scope: !12585, file: !12096, line: 887, type: !132)
!12589 = !DILocalVariable(name: "pllp", scope: !12585, file: !12096, line: 887, type: !132)
!12590 = !DILocalVariable(name: "sysclockfreq", scope: !12585, file: !12096, line: 888, type: !132)
!12591 = !DILocation(line: 0, scope: !12585)
!12592 = !DILocation(line: 891, column: 16, scope: !12585)
!12593 = !DILocation(line: 891, column: 21, scope: !12585)
!12594 = !DILocation(line: 891, column: 3, scope: !12585)
!12595 = !DILocation(line: 901, column: 7, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12597, file: !12096, line: 899, column: 5)
!12597 = distinct !DILexicalBlock(scope: !12585, file: !12096, line: 892, column: 3)
!12598 = !DILocation(line: 907, column: 19, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12597, file: !12096, line: 904, column: 5)
!12600 = !DILocation(line: 907, column: 27, scope: !12599)
!12601 = !DILocation(line: 908, column: 10, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12599, file: !12096, line: 908, column: 10)
!12603 = !DILocation(line: 908, column: 40, scope: !12602)
!12604 = !DILocation(line: 0, scope: !12602)
!12605 = !DILocation(line: 918, column: 23, scope: !12599)
!12606 = !DILocation(line: 918, column: 82, scope: !12599)
!12607 = !DILocation(line: 920, column: 28, scope: !12599)
!12608 = !DILocation(line: 921, column: 7, scope: !12599)
!12609 = !DILocation(line: 0, scope: !12597)
!12610 = !DILocation(line: 929, column: 3, scope: !12585)
!12611 = !DISubprogram(name: "HAL_InitTick", scope: !12455, file: !12455, line: 223, type: !12612, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!12612 = !DISubroutineType(types: !12613)
!12613 = !{!12099, !132}
!12614 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12096, file: !12096, line: 775, type: !12615, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12617)
!12615 = !DISubroutineType(types: !12616)
!12616 = !{null, !132, !132, !132}
!12617 = !{!12618, !12619, !12620, !12621, !12631, !12635}
!12618 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12614, file: !12096, line: 775, type: !132)
!12619 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12614, file: !12096, line: 775, type: !132)
!12620 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12614, file: !12096, line: 775, type: !132)
!12621 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12614, file: !12096, line: 777, type: !12622)
!12622 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12623, line: 62, baseType: !12624)
!12623 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12624 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12623, line: 46, size: 160, elements: !12625)
!12625 = !{!12626, !12627, !12628, !12629, !12630}
!12626 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12624, file: !12623, line: 48, baseType: !132, size: 32)
!12627 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12624, file: !12623, line: 51, baseType: !132, size: 32, offset: 32)
!12628 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12624, file: !12623, line: 54, baseType: !132, size: 32, offset: 64)
!12629 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12624, file: !12623, line: 57, baseType: !132, size: 32, offset: 96)
!12630 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12624, file: !12623, line: 60, baseType: !132, size: 32, offset: 128)
!12631 = !DILocalVariable(name: "tmpreg", scope: !12632, file: !12096, line: 787, type: !131)
!12632 = distinct !DILexicalBlock(scope: !12633, file: !12096, line: 787, column: 5)
!12633 = distinct !DILexicalBlock(scope: !12634, file: !12096, line: 783, column: 3)
!12634 = distinct !DILexicalBlock(scope: !12614, file: !12096, line: 782, column: 6)
!12635 = !DILocalVariable(name: "tmpreg", scope: !12636, file: !12096, line: 811, type: !131)
!12636 = distinct !DILexicalBlock(scope: !12637, file: !12096, line: 811, column: 5)
!12637 = distinct !DILexicalBlock(scope: !12634, file: !12096, line: 807, column: 3)
!12638 = !DILocation(line: 0, scope: !12614)
!12639 = !DILocation(line: 777, column: 3, scope: !12614)
!12640 = !DILocation(line: 777, column: 20, scope: !12614)
!12641 = !DILocation(line: 782, column: 15, scope: !12634)
!12642 = !DILocation(line: 782, column: 6, scope: !12614)
!12643 = !DILocation(line: 787, column: 5, scope: !12632)
!12644 = !DILocation(line: 787, column: 5, scope: !12633)
!12645 = !DILocation(line: 790, column: 21, scope: !12633)
!12646 = !DILocation(line: 790, column: 25, scope: !12633)
!12647 = !DILocation(line: 791, column: 21, scope: !12633)
!12648 = !DILocation(line: 791, column: 26, scope: !12633)
!12649 = !DILocation(line: 792, column: 21, scope: !12633)
!12650 = !DILocation(line: 792, column: 27, scope: !12633)
!12651 = !DILocation(line: 793, column: 21, scope: !12633)
!12652 = !DILocation(line: 793, column: 26, scope: !12633)
!12653 = !DILocation(line: 794, column: 21, scope: !12633)
!12654 = !DILocation(line: 794, column: 31, scope: !12633)
!12655 = !DILocation(line: 795, column: 5, scope: !12633)
!12656 = !DILocation(line: 798, column: 5, scope: !12633)
!12657 = !DILocation(line: 804, column: 3, scope: !12633)
!12658 = !DILocation(line: 811, column: 5, scope: !12636)
!12659 = !DILocation(line: 811, column: 5, scope: !12637)
!12660 = !DILocation(line: 814, column: 21, scope: !12637)
!12661 = !DILocation(line: 814, column: 25, scope: !12637)
!12662 = !DILocation(line: 815, column: 21, scope: !12637)
!12663 = !DILocation(line: 815, column: 26, scope: !12637)
!12664 = !DILocation(line: 816, column: 21, scope: !12637)
!12665 = !DILocation(line: 816, column: 27, scope: !12637)
!12666 = !DILocation(line: 817, column: 21, scope: !12637)
!12667 = !DILocation(line: 817, column: 26, scope: !12637)
!12668 = !DILocation(line: 818, column: 21, scope: !12637)
!12669 = !DILocation(line: 818, column: 31, scope: !12637)
!12670 = !DILocation(line: 819, column: 5, scope: !12637)
!12671 = !DILocation(line: 822, column: 5, scope: !12637)
!12672 = !DILocation(line: 0, scope: !12634)
!12673 = !DILocation(line: 830, column: 1, scope: !12614)
!12674 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12623, file: !12623, line: 224, type: !12675, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!12675 = !DISubroutineType(types: !12676)
!12676 = !{null, !3140, !12677}
!12677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12622, size: 32)
!12678 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12096, file: !12096, line: 841, type: !3256, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !473)
!12679 = !DILocation(line: 843, column: 38, scope: !12678)
!12680 = !DILocation(line: 844, column: 1, scope: !12678)
!12681 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12096, file: !12096, line: 850, type: !3256, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !473)
!12682 = !DILocation(line: 852, column: 38, scope: !12681)
!12683 = !DILocation(line: 853, column: 1, scope: !12681)
!12684 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12096, file: !12096, line: 941, type: !6924, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !473)
!12685 = !DILocation(line: 943, column: 10, scope: !12684)
!12686 = !DILocation(line: 943, column: 3, scope: !12684)
!12687 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12096, file: !12096, line: 952, type: !6924, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !473)
!12688 = !DILocation(line: 955, column: 11, scope: !12687)
!12689 = !DILocation(line: 955, column: 56, scope: !12687)
!12690 = !DILocation(line: 955, column: 78, scope: !12687)
!12691 = !DILocation(line: 955, column: 36, scope: !12687)
!12692 = !DILocation(line: 955, column: 33, scope: !12687)
!12693 = !DILocation(line: 955, column: 3, scope: !12687)
!12694 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12096, file: !12096, line: 964, type: !6924, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !473)
!12695 = !DILocation(line: 967, column: 11, scope: !12694)
!12696 = !DILocation(line: 967, column: 55, scope: !12694)
!12697 = !DILocation(line: 967, column: 77, scope: !12694)
!12698 = !DILocation(line: 967, column: 35, scope: !12694)
!12699 = !DILocation(line: 967, column: 32, scope: !12694)
!12700 = !DILocation(line: 967, column: 3, scope: !12694)
!12701 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12096, file: !12096, line: 977, type: !12702, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12704)
!12702 = !DISubroutineType(types: !12703)
!12703 = !{null, !12104}
!12704 = !{!12705}
!12705 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12701, file: !12096, line: 977, type: !12104)
!12706 = !DILocation(line: 0, scope: !12701)
!12707 = !DILocation(line: 980, column: 22, scope: !12701)
!12708 = !DILocation(line: 980, column: 37, scope: !12701)
!12709 = !DILocation(line: 983, column: 12, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12701, file: !12096, line: 983, column: 6)
!12711 = !DILocation(line: 983, column: 15, scope: !12710)
!12712 = !DILocation(line: 983, column: 31, scope: !12710)
!12713 = !DILocation(line: 983, column: 6, scope: !12701)
!12714 = !DILocation(line: 985, column: 24, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12710, file: !12096, line: 984, column: 3)
!12716 = !DILocation(line: 985, column: 33, scope: !12715)
!12717 = !DILocation(line: 986, column: 3, scope: !12715)
!12718 = !DILocation(line: 987, column: 17, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12710, file: !12096, line: 987, column: 11)
!12720 = !DILocation(line: 987, column: 20, scope: !12719)
!12721 = !DILocation(line: 987, column: 35, scope: !12719)
!12722 = !DILocation(line: 0, scope: !12719)
!12723 = !DILocation(line: 987, column: 11, scope: !12710)
!12724 = !DILocation(line: 989, column: 33, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12719, file: !12096, line: 988, column: 3)
!12726 = !DILocation(line: 990, column: 3, scope: !12725)
!12727 = !DILocation(line: 993, column: 33, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12719, file: !12096, line: 992, column: 3)
!12729 = !DILocation(line: 997, column: 12, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12701, file: !12096, line: 997, column: 6)
!12731 = !DILocation(line: 997, column: 15, scope: !12730)
!12732 = !DILocation(line: 1003, column: 24, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12730, file: !12096, line: 1002, column: 3)
!12734 = !DILocation(line: 1003, column: 33, scope: !12733)
!12735 = !DILocation(line: 1006, column: 61, scope: !12701)
!12736 = !DILocation(line: 1006, column: 81, scope: !12701)
!12737 = !DILocation(line: 1006, column: 22, scope: !12701)
!12738 = !DILocation(line: 1006, column: 42, scope: !12701)
!12739 = !DILocation(line: 1009, column: 12, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12701, file: !12096, line: 1009, column: 6)
!12741 = !DILocation(line: 1009, column: 17, scope: !12740)
!12742 = !DILocation(line: 1009, column: 35, scope: !12740)
!12743 = !DILocation(line: 1009, column: 6, scope: !12701)
!12744 = !DILocation(line: 1011, column: 24, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12740, file: !12096, line: 1010, column: 3)
!12746 = !DILocation(line: 1011, column: 33, scope: !12745)
!12747 = !DILocation(line: 1012, column: 3, scope: !12745)
!12748 = !DILocation(line: 1013, column: 17, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12740, file: !12096, line: 1013, column: 11)
!12750 = !DILocation(line: 1013, column: 22, scope: !12749)
!12751 = !DILocation(line: 1013, column: 39, scope: !12749)
!12752 = !DILocation(line: 0, scope: !12749)
!12753 = !DILocation(line: 1013, column: 11, scope: !12740)
!12754 = !DILocation(line: 1015, column: 33, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12749, file: !12096, line: 1014, column: 3)
!12756 = !DILocation(line: 1016, column: 3, scope: !12755)
!12757 = !DILocation(line: 1019, column: 33, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12749, file: !12096, line: 1018, column: 3)
!12759 = !DILocation(line: 1023, column: 12, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12701, file: !12096, line: 1023, column: 6)
!12761 = !DILocation(line: 1023, column: 16, scope: !12760)
!12762 = !DILocation(line: 1029, column: 24, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12760, file: !12096, line: 1028, column: 3)
!12764 = !DILocation(line: 1029, column: 33, scope: !12763)
!12765 = !DILocation(line: 1033, column: 12, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12701, file: !12096, line: 1033, column: 6)
!12767 = !DILocation(line: 1033, column: 15, scope: !12766)
!12768 = !DILocation(line: 1033, column: 30, scope: !12766)
!12769 = !DILocation(line: 1033, column: 6, scope: !12701)
!12770 = !DILocation(line: 1039, column: 28, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12766, file: !12096, line: 1038, column: 3)
!12772 = !DILocation(line: 1039, column: 37, scope: !12771)
!12773 = !DILocation(line: 1041, column: 54, scope: !12701)
!12774 = !DILocation(line: 1041, column: 62, scope: !12701)
!12775 = !DILocation(line: 1041, column: 26, scope: !12701)
!12776 = !DILocation(line: 1041, column: 36, scope: !12701)
!12777 = !DILocation(line: 1042, column: 49, scope: !12701)
!12778 = !DILocation(line: 1042, column: 57, scope: !12701)
!12779 = !DILocation(line: 1042, column: 26, scope: !12701)
!12780 = !DILocation(line: 1042, column: 31, scope: !12701)
!12781 = !DILocation(line: 1043, column: 50, scope: !12701)
!12782 = !DILocation(line: 1043, column: 78, scope: !12701)
!12783 = !DILocation(line: 1043, column: 26, scope: !12701)
!12784 = !DILocation(line: 1043, column: 31, scope: !12701)
!12785 = !DILocation(line: 1044, column: 52, scope: !12701)
!12786 = !DILocation(line: 1044, column: 102, scope: !12701)
!12787 = !DILocation(line: 1044, column: 109, scope: !12701)
!12788 = !DILocation(line: 1044, column: 26, scope: !12701)
!12789 = !DILocation(line: 1044, column: 31, scope: !12701)
!12790 = !DILocation(line: 1045, column: 50, scope: !12701)
!12791 = !DILocation(line: 1045, column: 78, scope: !12701)
!12792 = !DILocation(line: 1045, column: 26, scope: !12701)
!12793 = !DILocation(line: 1045, column: 31, scope: !12701)
!12794 = !DILocation(line: 1046, column: 1, scope: !12701)
!12795 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12096, file: !12096, line: 1056, type: !12796, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12798)
!12796 = !DISubroutineType(types: !12797)
!12797 = !{null, !12459, !857}
!12798 = !{!12799, !12800}
!12799 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12795, file: !12096, line: 1056, type: !12459)
!12800 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12795, file: !12096, line: 1056, type: !857)
!12801 = !DILocation(line: 0, scope: !12795)
!12802 = !DILocation(line: 1059, column: 22, scope: !12795)
!12803 = !DILocation(line: 1059, column: 32, scope: !12795)
!12804 = !DILocation(line: 1062, column: 53, scope: !12795)
!12805 = !DILocation(line: 1062, column: 58, scope: !12795)
!12806 = !DILocation(line: 1062, column: 22, scope: !12795)
!12807 = !DILocation(line: 1062, column: 35, scope: !12795)
!12808 = !DILocation(line: 1065, column: 54, scope: !12795)
!12809 = !DILocation(line: 1065, column: 59, scope: !12795)
!12810 = !DILocation(line: 1065, column: 22, scope: !12795)
!12811 = !DILocation(line: 1065, column: 36, scope: !12795)
!12812 = !DILocation(line: 1068, column: 55, scope: !12795)
!12813 = !DILocation(line: 1068, column: 60, scope: !12795)
!12814 = !DILocation(line: 1068, column: 22, scope: !12795)
!12815 = !DILocation(line: 1068, column: 37, scope: !12795)
!12816 = !DILocation(line: 1071, column: 56, scope: !12795)
!12817 = !DILocation(line: 1071, column: 79, scope: !12795)
!12818 = !DILocation(line: 1071, column: 22, scope: !12795)
!12819 = !DILocation(line: 1071, column: 37, scope: !12795)
!12820 = !DILocation(line: 1074, column: 34, scope: !12795)
!12821 = !DILocation(line: 1074, column: 38, scope: !12795)
!12822 = !DILocation(line: 1074, column: 14, scope: !12795)
!12823 = !DILocation(line: 1075, column: 1, scope: !12795)
!12824 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12096, file: !12096, line: 1082, type: !3256, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !473)
!12825 = !DILocation(line: 1085, column: 6, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12824, file: !12096, line: 1085, column: 6)
!12827 = !DILocation(line: 1085, column: 6, scope: !12824)
!12828 = !DILocation(line: 1088, column: 5, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12826, file: !12096, line: 1086, column: 3)
!12830 = !DILocation(line: 1091, column: 5, scope: !12829)
!12831 = !DILocation(line: 1092, column: 3, scope: !12829)
!12832 = !DILocation(line: 1093, column: 1, scope: !12824)
!12833 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12096, file: !12096, line: 1099, type: !3256, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !473)
!12834 = !DILocation(line: 1104, column: 1, scope: !12833)
!12835 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12836, file: !12836, line: 257, type: !6934, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !12837)
!12836 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12837 = !{!12838}
!12838 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12835, file: !12836, line: 257, type: !132)
!12839 = !DILocation(line: 0, scope: !12835)
!12840 = !DILocation(line: 260, column: 3, scope: !12835)
!12841 = !DILocation(line: 261, column: 1, scope: !12835)
!12842 = distinct !DISubprogram(name: "LL_InitTick", scope: !12843, file: !12843, line: 260, type: !10127, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !12844)
!12843 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12844 = !{!12845, !12846}
!12845 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12842, file: !12843, line: 260, type: !132)
!12846 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12842, file: !12843, line: 260, type: !132)
!12847 = !DILocation(line: 0, scope: !12842)
!12848 = !DILocation(line: 263, column: 46, scope: !12842)
!12849 = !DILocation(line: 263, column: 55, scope: !12842)
!12850 = !DILocation(line: 263, column: 18, scope: !12842)
!12851 = !DILocation(line: 264, column: 18, scope: !12842)
!12852 = !DILocation(line: 265, column: 18, scope: !12842)
!12853 = !DILocation(line: 267, column: 1, scope: !12842)
!12854 = distinct !DISubprogram(name: "LL_mDelay", scope: !12836, file: !12836, line: 273, type: !6934, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !12855)
!12855 = !{!12856, !12857}
!12856 = !DILocalVariable(name: "Delay", arg: 1, scope: !12854, file: !12836, line: 273, type: !132)
!12857 = !DILocalVariable(name: "tmp", scope: !12854, file: !12836, line: 275, type: !131)
!12858 = !DILocation(line: 0, scope: !12854)
!12859 = !DILocation(line: 275, column: 3, scope: !12854)
!12860 = !DILocation(line: 275, column: 18, scope: !12854)
!12861 = !DILocation(line: 275, column: 33, scope: !12854)
!12862 = !DILocation(line: 277, column: 10, scope: !12854)
!12863 = !DILocation(line: 280, column: 12, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !12854, file: !12836, line: 280, column: 6)
!12865 = !DILocation(line: 285, column: 3, scope: !12854)
!12866 = !DILocation(line: 287, column: 18, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12868, file: !12836, line: 287, column: 8)
!12868 = distinct !DILexicalBlock(scope: !12854, file: !12836, line: 286, column: 3)
!12869 = !DILocation(line: 292, column: 1, scope: !12854)
!12870 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12836, file: !12836, line: 323, type: !6934, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !12871)
!12871 = !{!12872}
!12872 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12870, file: !12836, line: 323, type: !132)
!12873 = !DILocation(line: 0, scope: !12870)
!12874 = !DILocation(line: 326, column: 19, scope: !12870)
!12875 = !DILocation(line: 327, column: 1, scope: !12870)
!12876 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12836, file: !12836, line: 338, type: !12877, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !12880)
!12877 = !DISubroutineType(types: !12878)
!12878 = !{!12879, !132}
!12879 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !804, line: 201, baseType: !803)
!12880 = !{!12881, !12882, !12883, !12884, !12885}
!12881 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12876, file: !12836, line: 338, type: !132)
!12882 = !DILocalVariable(name: "timeout", scope: !12876, file: !12836, line: 340, type: !132)
!12883 = !DILocalVariable(name: "getlatency", scope: !12876, file: !12836, line: 341, type: !132)
!12884 = !DILocalVariable(name: "latency", scope: !12876, file: !12836, line: 342, type: !132)
!12885 = !DILocalVariable(name: "status", scope: !12876, file: !12836, line: 343, type: !12879)
!12886 = !DILocation(line: 0, scope: !12876)
!12887 = !DILocation(line: 347, column: 21, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12876, file: !12836, line: 347, column: 6)
!12889 = !DILocation(line: 347, column: 6, scope: !12876)
!12890 = !DILocation(line: 353, column: 8, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12892, file: !12836, line: 353, column: 8)
!12892 = distinct !DILexicalBlock(scope: !12888, file: !12836, line: 352, column: 3)
!12893 = !DILocation(line: 353, column: 40, scope: !12891)
!12894 = !DILocation(line: 353, column: 8, scope: !12892)
!12895 = !DILocation(line: 356, column: 26, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12897, file: !12836, line: 356, column: 10)
!12897 = distinct !DILexicalBlock(scope: !12891, file: !12836, line: 354, column: 5)
!12898 = !DILocation(line: 356, column: 55, scope: !12896)
!12899 = !DILocation(line: 362, column: 55, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12897, file: !12836, line: 362, column: 10)
!12901 = !DILocation(line: 368, column: 55, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12897, file: !12836, line: 368, column: 10)
!12903 = !DILocation(line: 374, column: 26, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12897, file: !12836, line: 374, column: 10)
!12905 = !DILocation(line: 374, column: 55, scope: !12904)
!12906 = !DILocation(line: 380, column: 28, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12908, file: !12836, line: 380, column: 12)
!12908 = distinct !DILexicalBlock(scope: !12904, file: !12836, line: 379, column: 7)
!12909 = !DILocation(line: 380, column: 57, scope: !12907)
!12910 = !DILocation(line: 387, column: 8, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !12892, file: !12836, line: 387, column: 8)
!12912 = !DILocation(line: 387, column: 40, scope: !12911)
!12913 = !DILocation(line: 387, column: 8, scope: !12892)
!12914 = !DILocation(line: 396, column: 26, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12916, file: !12836, line: 396, column: 10)
!12916 = distinct !DILexicalBlock(scope: !12911, file: !12836, line: 388, column: 5)
!12917 = !DILocation(line: 396, column: 55, scope: !12915)
!12918 = !DILocation(line: 402, column: 26, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12916, file: !12836, line: 402, column: 10)
!12920 = !DILocation(line: 402, column: 55, scope: !12919)
!12921 = !DILocation(line: 407, column: 26, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12916, file: !12836, line: 407, column: 10)
!12923 = !DILocation(line: 407, column: 55, scope: !12922)
!12924 = !DILocation(line: 413, column: 28, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12926, file: !12836, line: 413, column: 12)
!12926 = distinct !DILexicalBlock(scope: !12922, file: !12836, line: 412, column: 7)
!12927 = !DILocation(line: 413, column: 57, scope: !12925)
!12928 = !DILocation(line: 0, scope: !12892)
!12929 = !DILocation(line: 444, column: 5, scope: !12892)
!12930 = !DILocation(line: 448, column: 5, scope: !12892)
!12931 = !DILocation(line: 451, column: 18, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12892, file: !12836, line: 449, column: 5)
!12933 = !DILocation(line: 452, column: 12, scope: !12932)
!12934 = !DILocation(line: 453, column: 26, scope: !12892)
!12935 = !DILocation(line: 453, column: 38, scope: !12892)
!12936 = !DILocation(line: 453, column: 5, scope: !12932)
!12937 = distinct !{!12937, !12930, !12938}
!12938 = !DILocation(line: 453, column: 54, scope: !12892)
!12939 = !DILocation(line: 0, scope: !12888)
!12940 = !DILocation(line: 464, column: 3, scope: !12876)
!12941 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12942, file: !12942, line: 519, type: !6924, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !473)
!12942 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12943 = !DILocation(line: 521, column: 21, scope: !12941)
!12944 = !DILocation(line: 521, column: 3, scope: !12941)
!12945 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5844, file: !5844, line: 1543, type: !6934, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !12946)
!12946 = !{!12947}
!12947 = !DILocalVariable(name: "Latency", arg: 1, scope: !12945, file: !5844, line: 1543, type: !132)
!12948 = !DILocation(line: 0, scope: !12945)
!12949 = !DILocation(line: 1545, column: 3, scope: !12945)
!12950 = !DILocation(line: 1546, column: 1, scope: !12945)
!12951 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5844, file: !5844, line: 1569, type: !6924, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !473)
!12952 = !DILocation(line: 1571, column: 21, scope: !12951)
!12953 = !DILocation(line: 1571, column: 3, scope: !12951)
!12954 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12836, file: !12836, line: 483, type: !12955, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !12971)
!12955 = !DISubroutineType(types: !12956)
!12956 = !{!12879, !12957, !12964}
!12957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12958, size: 32)
!12958 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12843, line: 114, baseType: !12959)
!12959 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12843, line: 94, size: 96, elements: !12960)
!12960 = !{!12961, !12962, !12963}
!12961 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12959, file: !12843, line: 96, baseType: !132, size: 32)
!12962 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12959, file: !12843, line: 102, baseType: !132, size: 32, offset: 32)
!12963 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12959, file: !12843, line: 109, baseType: !132, size: 32, offset: 64)
!12964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12965, size: 32)
!12965 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12843, line: 139, baseType: !12966)
!12966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12843, line: 119, size: 96, elements: !12967)
!12967 = !{!12968, !12969, !12970}
!12968 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12966, file: !12843, line: 121, baseType: !132, size: 32)
!12969 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12966, file: !12843, line: 127, baseType: !132, size: 32, offset: 32)
!12970 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12966, file: !12843, line: 133, baseType: !132, size: 32, offset: 64)
!12971 = !{!12972, !12973, !12974, !12975}
!12972 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12954, file: !12836, line: 483, type: !12957)
!12973 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12954, file: !12836, line: 484, type: !12964)
!12974 = !DILocalVariable(name: "status", scope: !12954, file: !12836, line: 486, type: !12879)
!12975 = !DILocalVariable(name: "pllfreq", scope: !12954, file: !12836, line: 487, type: !132)
!12976 = !DILocation(line: 0, scope: !12954)
!12977 = !DILocation(line: 490, column: 6, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12954, file: !12836, line: 490, column: 6)
!12979 = !DILocation(line: 490, column: 25, scope: !12978)
!12980 = !DILocation(line: 490, column: 6, scope: !12954)
!12981 = !DILocation(line: 493, column: 15, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12978, file: !12836, line: 491, column: 3)
!12983 = !DILocation(line: 496, column: 8, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12982, file: !12836, line: 496, column: 8)
!12985 = !DILocation(line: 496, column: 29, scope: !12984)
!12986 = !DILocation(line: 496, column: 8, scope: !12982)
!12987 = !DILocation(line: 498, column: 7, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12984, file: !12836, line: 497, column: 5)
!12989 = !DILocation(line: 499, column: 7, scope: !12988)
!12990 = !DILocation(line: 499, column: 14, scope: !12988)
!12991 = !DILocation(line: 499, column: 35, scope: !12988)
!12992 = distinct !{!12992, !12989, !12993}
!12993 = !DILocation(line: 502, column: 7, scope: !12988)
!12994 = !DILocation(line: 506, column: 76, scope: !12982)
!12995 = !DILocation(line: 506, column: 103, scope: !12982)
!12996 = !DILocation(line: 507, column: 54, scope: !12982)
!12997 = !DILocation(line: 506, column: 5, scope: !12982)
!12998 = !DILocation(line: 510, column: 14, scope: !12982)
!12999 = !DILocation(line: 511, column: 3, scope: !12982)
!13000 = !DILocation(line: 0, scope: !12978)
!13001 = !DILocation(line: 518, column: 3, scope: !12954)
!13002 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12836, file: !12836, line: 642, type: !13003, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13005)
!13003 = !DISubroutineType(types: !13004)
!13004 = !{!12879}
!13005 = !{!13006}
!13006 = !DILocalVariable(name: "status", scope: !13002, file: !12836, line: 644, type: !12879)
!13007 = !DILocation(line: 0, scope: !13002)
!13008 = !DILocation(line: 647, column: 6, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !13002, file: !12836, line: 647, column: 6)
!13010 = !DILocation(line: 647, column: 27, scope: !13009)
!13011 = !DILocation(line: 663, column: 6, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !13002, file: !12836, line: 663, column: 6)
!13013 = !DILocation(line: 663, column: 30, scope: !13012)
!13014 = !DILocation(line: 663, column: 6, scope: !13002)
!13015 = !DILocation(line: 669, column: 3, scope: !13002)
!13016 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12836, file: !12836, line: 611, type: !13017, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13019)
!13017 = !DISubroutineType(types: !13018)
!13018 = !{!132, !132, !12957}
!13019 = !{!13020, !13021, !13022}
!13020 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13016, file: !12836, line: 611, type: !132)
!13021 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13016, file: !12836, line: 611, type: !12957)
!13022 = !DILocalVariable(name: "pllfreq", scope: !13016, file: !12836, line: 613, type: !132)
!13023 = !DILocation(line: 0, scope: !13016)
!13024 = !DILocation(line: 622, column: 56, scope: !13016)
!13025 = !DILocation(line: 622, column: 61, scope: !13016)
!13026 = !DILocation(line: 622, column: 32, scope: !13016)
!13027 = !DILocation(line: 626, column: 45, scope: !13016)
!13028 = !DILocation(line: 626, column: 50, scope: !13016)
!13029 = !DILocation(line: 626, column: 21, scope: !13016)
!13030 = !DILocation(line: 630, column: 47, scope: !13016)
!13031 = !DILocation(line: 630, column: 82, scope: !13016)
!13032 = !DILocation(line: 630, column: 21, scope: !13016)
!13033 = !DILocation(line: 633, column: 3, scope: !13016)
!13034 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8877, file: !8877, line: 3007, type: !6924, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !473)
!13035 = !DILocation(line: 3009, column: 11, scope: !13034)
!13036 = !DILocation(line: 3009, column: 44, scope: !13034)
!13037 = !DILocation(line: 3009, column: 3, scope: !13034)
!13038 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8877, file: !8877, line: 2987, type: !3256, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !473)
!13039 = !DILocation(line: 2989, column: 3, scope: !13038)
!13040 = !DILocation(line: 2990, column: 1, scope: !13038)
!13041 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8877, file: !8877, line: 4304, type: !9011, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13042)
!13042 = !{!13043, !13044, !13045, !13046}
!13043 = !DILocalVariable(name: "Source", arg: 1, scope: !13041, file: !8877, line: 4304, type: !132)
!13044 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13041, file: !8877, line: 4304, type: !132)
!13045 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13041, file: !8877, line: 4304, type: !132)
!13046 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13041, file: !8877, line: 4304, type: !132)
!13047 = !DILocation(line: 0, scope: !13041)
!13048 = !DILocation(line: 4306, column: 3, scope: !13041)
!13049 = !DILocation(line: 4308, column: 3, scope: !13041)
!13050 = !DILocation(line: 4312, column: 1, scope: !13041)
!13051 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12836, file: !12836, line: 681, type: !13052, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13054)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{!12879, !132, !12964}
!13054 = !{!13055, !13056, !13057, !13058}
!13055 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13051, file: !12836, line: 681, type: !132)
!13056 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13051, file: !12836, line: 681, type: !12964)
!13057 = !DILocalVariable(name: "status", scope: !13051, file: !12836, line: 683, type: !12879)
!13058 = !DILocalVariable(name: "hclk_frequency", scope: !13051, file: !12836, line: 684, type: !132)
!13059 = !DILocation(line: 0, scope: !13051)
!13060 = !DILocation(line: 691, column: 20, scope: !13051)
!13061 = !DILocation(line: 694, column: 6, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13051, file: !12836, line: 694, column: 6)
!13063 = !DILocation(line: 694, column: 22, scope: !13062)
!13064 = !DILocation(line: 694, column: 6, scope: !13051)
!13065 = !DILocation(line: 697, column: 14, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13062, file: !12836, line: 695, column: 3)
!13067 = !DILocation(line: 701, column: 13, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13051, file: !12836, line: 701, column: 6)
!13069 = !DILocation(line: 701, column: 6, scope: !13051)
!13070 = !DILocation(line: 704, column: 5, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13068, file: !12836, line: 702, column: 3)
!13072 = !DILocation(line: 705, column: 5, scope: !13071)
!13073 = !DILocation(line: 705, column: 12, scope: !13071)
!13074 = !DILocation(line: 705, column: 33, scope: !13071)
!13075 = distinct !{!13075, !13072, !13076}
!13076 = !DILocation(line: 708, column: 5, scope: !13071)
!13077 = !DILocation(line: 711, column: 49, scope: !13071)
!13078 = !DILocation(line: 711, column: 5, scope: !13071)
!13079 = !DILocation(line: 712, column: 5, scope: !13071)
!13080 = !DILocation(line: 713, column: 5, scope: !13071)
!13081 = !DILocation(line: 713, column: 12, scope: !13071)
!13082 = !DILocation(line: 713, column: 37, scope: !13071)
!13083 = distinct !{!13083, !13080, !13084}
!13084 = !DILocation(line: 716, column: 5, scope: !13071)
!13085 = !DILocation(line: 719, column: 50, scope: !13071)
!13086 = !DILocation(line: 719, column: 5, scope: !13071)
!13087 = !DILocation(line: 720, column: 50, scope: !13071)
!13088 = !DILocation(line: 720, column: 5, scope: !13071)
!13089 = !DILocation(line: 721, column: 3, scope: !13071)
!13090 = !DILocation(line: 724, column: 6, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13051, file: !12836, line: 724, column: 6)
!13092 = !DILocation(line: 724, column: 22, scope: !13091)
!13093 = !DILocation(line: 724, column: 6, scope: !13051)
!13094 = !DILocation(line: 727, column: 14, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13091, file: !12836, line: 725, column: 3)
!13096 = !DILocation(line: 728, column: 3, scope: !13095)
!13097 = !DILocation(line: 731, column: 13, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13051, file: !12836, line: 731, column: 6)
!13099 = !DILocation(line: 731, column: 6, scope: !13051)
!13100 = !DILocation(line: 733, column: 5, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13098, file: !12836, line: 732, column: 3)
!13102 = !DILocation(line: 734, column: 3, scope: !13101)
!13103 = !DILocation(line: 736, column: 3, scope: !13051)
!13104 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8877, file: !8877, line: 4184, type: !3256, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !473)
!13105 = !DILocation(line: 4186, column: 3, scope: !13104)
!13106 = !DILocation(line: 4187, column: 1, scope: !13104)
!13107 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8877, file: !8877, line: 4205, type: !6924, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !473)
!13108 = !DILocation(line: 4207, column: 11, scope: !13107)
!13109 = !DILocation(line: 4207, column: 44, scope: !13107)
!13110 = !DILocation(line: 4207, column: 3, scope: !13107)
!13111 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8877, file: !8877, line: 3224, type: !6934, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13112)
!13112 = !{!13113}
!13113 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13111, file: !8877, line: 3224, type: !132)
!13114 = !DILocation(line: 0, scope: !13111)
!13115 = !DILocation(line: 3226, column: 3, scope: !13111)
!13116 = !DILocation(line: 3227, column: 1, scope: !13111)
!13117 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8877, file: !8877, line: 3188, type: !6934, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13118)
!13118 = !{!13119}
!13119 = !DILocalVariable(name: "Source", arg: 1, scope: !13117, file: !8877, line: 3188, type: !132)
!13120 = !DILocation(line: 0, scope: !13117)
!13121 = !DILocation(line: 3190, column: 3, scope: !13117)
!13122 = !DILocation(line: 3191, column: 1, scope: !13117)
!13123 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8877, file: !8877, line: 3204, type: !6924, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !473)
!13124 = !DILocation(line: 3206, column: 21, scope: !13123)
!13125 = !DILocation(line: 3206, column: 3, scope: !13123)
!13126 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8877, file: !8877, line: 3240, type: !6934, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13127)
!13127 = !{!13128}
!13128 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13126, file: !8877, line: 3240, type: !132)
!13129 = !DILocation(line: 0, scope: !13126)
!13130 = !DILocation(line: 3242, column: 3, scope: !13126)
!13131 = !DILocation(line: 3243, column: 1, scope: !13126)
!13132 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8877, file: !8877, line: 3256, type: !6934, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13133)
!13133 = !{!13134}
!13134 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13132, file: !8877, line: 3256, type: !132)
!13135 = !DILocation(line: 0, scope: !13132)
!13136 = !DILocation(line: 3258, column: 3, scope: !13132)
!13137 = !DILocation(line: 3259, column: 1, scope: !13132)
!13138 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8877, file: !8877, line: 5153, type: !6924, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !473)
!13139 = !DILocation(line: 5155, column: 11, scope: !13138)
!13140 = !DILocation(line: 5155, column: 47, scope: !13138)
!13141 = !DILocation(line: 5155, column: 3, scope: !13138)
!13142 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12836, file: !12836, line: 540, type: !13143, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13145)
!13143 = !DISubroutineType(types: !13144)
!13144 = !{!12879, !132, !132, !12957, !12964}
!13145 = !{!13146, !13147, !13148, !13149, !13150, !13151}
!13146 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13142, file: !12836, line: 540, type: !132)
!13147 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13142, file: !12836, line: 540, type: !132)
!13148 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13142, file: !12836, line: 541, type: !12957)
!13149 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13142, file: !12836, line: 541, type: !12964)
!13150 = !DILocalVariable(name: "status", scope: !13142, file: !12836, line: 543, type: !12879)
!13151 = !DILocalVariable(name: "pllfreq", scope: !13142, file: !12836, line: 544, type: !132)
!13152 = !DILocation(line: 0, scope: !13142)
!13153 = !DILocation(line: 551, column: 6, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13142, file: !12836, line: 551, column: 6)
!13155 = !DILocation(line: 551, column: 25, scope: !13154)
!13156 = !DILocation(line: 551, column: 6, scope: !13142)
!13157 = !DILocation(line: 554, column: 15, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13154, file: !12836, line: 552, column: 3)
!13159 = !DILocation(line: 557, column: 8, scope: !13160)
!13160 = distinct !DILexicalBlock(scope: !13158, file: !12836, line: 557, column: 8)
!13161 = !DILocation(line: 557, column: 29, scope: !13160)
!13162 = !DILocation(line: 557, column: 8, scope: !13158)
!13163 = !DILocation(line: 560, column: 20, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13165, file: !12836, line: 560, column: 10)
!13165 = distinct !DILexicalBlock(scope: !13160, file: !12836, line: 558, column: 5)
!13166 = !DILocation(line: 560, column: 10, scope: !13165)
!13167 = !DILocation(line: 562, column: 9, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13164, file: !12836, line: 561, column: 7)
!13169 = !DILocation(line: 563, column: 7, scope: !13168)
!13170 = !DILocation(line: 566, column: 9, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13164, file: !12836, line: 565, column: 7)
!13172 = !DILocation(line: 570, column: 7, scope: !13165)
!13173 = !DILocation(line: 571, column: 7, scope: !13165)
!13174 = !DILocation(line: 571, column: 14, scope: !13165)
!13175 = !DILocation(line: 571, column: 35, scope: !13165)
!13176 = distinct !{!13176, !13173, !13177}
!13177 = !DILocation(line: 574, column: 7, scope: !13165)
!13178 = !DILocation(line: 578, column: 76, scope: !13158)
!13179 = !DILocation(line: 578, column: 103, scope: !13158)
!13180 = !DILocation(line: 579, column: 54, scope: !13158)
!13181 = !DILocation(line: 578, column: 5, scope: !13158)
!13182 = !DILocation(line: 582, column: 14, scope: !13158)
!13183 = !DILocation(line: 583, column: 3, scope: !13158)
!13184 = !DILocation(line: 0, scope: !13154)
!13185 = !DILocation(line: 590, column: 3, scope: !13142)
!13186 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8877, file: !8877, line: 2969, type: !6924, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !473)
!13187 = !DILocation(line: 2971, column: 11, scope: !13186)
!13188 = !DILocation(line: 2971, column: 44, scope: !13186)
!13189 = !DILocation(line: 2971, column: 3, scope: !13186)
!13190 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8877, file: !8877, line: 2929, type: !3256, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !473)
!13191 = !DILocation(line: 2931, column: 3, scope: !13190)
!13192 = !DILocation(line: 2932, column: 1, scope: !13190)
!13193 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8877, file: !8877, line: 2939, type: !3256, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !473)
!13194 = !DILocation(line: 2941, column: 3, scope: !13193)
!13195 = !DILocation(line: 2942, column: 1, scope: !13193)
!13196 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8877, file: !8877, line: 2949, type: !3256, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !473)
!13197 = !DILocation(line: 2951, column: 3, scope: !13196)
!13198 = !DILocation(line: 2952, column: 1, scope: !13196)
!13199 = distinct !DISubprogram(name: "z_device_state_init", scope: !13200, file: !13200, line: 23, type: !3256, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13201)
!13200 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13201 = !{!13202}
!13202 = !DILocalVariable(name: "dev", scope: !13199, file: !13200, line: 25, type: !13203)
!13203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13204, size: 32)
!13204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13205)
!13205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !13206)
!13206 = !{!13207, !13208, !13209, !13210, !13216, !13217}
!13207 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13205, file: !152, line: 380, baseType: !155, size: 32)
!13208 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13205, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!13209 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13205, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!13210 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13205, file: !152, line: 386, baseType: !13211, size: 32, offset: 96)
!13211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13212, size: 32)
!13212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !13213)
!13213 = !{!13214, !13215}
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13212, file: !152, line: 359, baseType: !163, size: 8)
!13215 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13212, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13216 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13205, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!13217 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13205, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!13218 = !DILocation(line: 0, scope: !13199)
!13219 = !DILocation(line: 31, column: 1, scope: !13199)
!13220 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13200, file: !13200, line: 33, type: !13221, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13223)
!13221 = !DISubroutineType(types: !13222)
!13222 = !{!13203, !155}
!13223 = !{!13224, !13225}
!13224 = !DILocalVariable(name: "name", arg: 1, scope: !13220, file: !13200, line: 33, type: !155)
!13225 = !DILocalVariable(name: "dev", scope: !13220, file: !13200, line: 35, type: !13203)
!13226 = !DILocation(line: 0, scope: !13220)
!13227 = !DILocation(line: 40, column: 12, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13220, file: !13200, line: 40, column: 6)
!13229 = !DILocation(line: 40, column: 21, scope: !13228)
!13230 = !DILocation(line: 40, column: 25, scope: !13228)
!13231 = !DILocation(line: 40, column: 33, scope: !13228)
!13232 = !DILocation(line: 40, column: 6, scope: !13220)
!13233 = !DILocation(line: 55, column: 2, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13220, file: !13200, line: 55, column: 2)
!13235 = !DILocation(line: 50, column: 7, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13237, file: !13200, line: 50, column: 7)
!13237 = distinct !DILexicalBlock(scope: !13238, file: !13200, line: 49, column: 57)
!13238 = distinct !DILexicalBlock(scope: !13239, file: !13200, line: 49, column: 2)
!13239 = distinct !DILexicalBlock(scope: !13220, file: !13200, line: 49, column: 2)
!13240 = !DILocation(line: 50, column: 30, scope: !13236)
!13241 = !DILocation(line: 50, column: 39, scope: !13236)
!13242 = !DILocation(line: 50, column: 44, scope: !13236)
!13243 = !DILocation(line: 50, column: 7, scope: !13237)
!13244 = !DILocation(line: 49, column: 53, scope: !13238)
!13245 = !DILocation(line: 49, column: 33, scope: !13238)
!13246 = !DILocation(line: 49, column: 2, scope: !13239)
!13247 = distinct !{!13247, !13246, !13248}
!13248 = !DILocation(line: 53, column: 2, scope: !13239)
!13249 = !DILocation(line: 56, column: 7, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !13251, file: !13200, line: 56, column: 7)
!13251 = distinct !DILexicalBlock(scope: !13252, file: !13200, line: 55, column: 57)
!13252 = distinct !DILexicalBlock(scope: !13234, file: !13200, line: 55, column: 2)
!13253 = !DILocation(line: 56, column: 30, scope: !13250)
!13254 = !DILocation(line: 56, column: 52, scope: !13250)
!13255 = !DILocation(line: 56, column: 34, scope: !13250)
!13256 = !DILocation(line: 56, column: 58, scope: !13250)
!13257 = !DILocation(line: 56, column: 7, scope: !13251)
!13258 = !DILocation(line: 55, column: 53, scope: !13252)
!13259 = !DILocation(line: 55, column: 33, scope: !13252)
!13260 = distinct !{!13260, !13233, !13261}
!13261 = !DILocation(line: 59, column: 2, scope: !13234)
!13262 = !DILocation(line: 62, column: 1, scope: !13220)
!13263 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13200, file: !13200, line: 93, type: !13264, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13266)
!13264 = !DISubroutineType(types: !13265)
!13265 = !{!166, !13203}
!13266 = !{!13267}
!13267 = !DILocalVariable(name: "dev", arg: 1, scope: !13263, file: !13200, line: 93, type: !13203)
!13268 = !DILocation(line: 0, scope: !13263)
!13269 = !DILocation(line: 99, column: 10, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13263, file: !13200, line: 99, column: 6)
!13271 = !DILocation(line: 99, column: 6, scope: !13263)
!13272 = !DILocation(line: 103, column: 14, scope: !13263)
!13273 = !DILocation(line: 103, column: 21, scope: !13263)
!13274 = !DILocation(line: 103, column: 33, scope: !13263)
!13275 = !DILocation(line: 103, column: 49, scope: !13263)
!13276 = !DILocation(line: 103, column: 58, scope: !13263)
!13277 = !DILocation(line: 104, column: 1, scope: !13263)
!13278 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13200, file: !13200, line: 87, type: !13279, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13282)
!13279 = !DISubroutineType(types: !13280)
!13280 = !{!356, !13281}
!13281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13203, size: 32)
!13282 = !{!13283}
!13283 = !DILocalVariable(name: "devices", arg: 1, scope: !13278, file: !13200, line: 87, type: !13281)
!13284 = !DILocation(line: 0, scope: !13278)
!13285 = !DILocation(line: 89, column: 11, scope: !13278)
!13286 = !DILocation(line: 90, column: 2, scope: !13278)
!13287 = distinct !DISubprogram(name: "device_required_foreach", scope: !13200, file: !13200, line: 125, type: !13288, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13294)
!13288 = !DISubroutineType(types: !13289)
!13289 = !{!103, !13203, !13290, !102}
!13290 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !152, line: 471, baseType: !13291)
!13291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13292, size: 32)
!13292 = !DISubroutineType(types: !13293)
!13293 = !{!103, !13203, !102}
!13294 = !{!13295, !13296, !13297, !13298, !13299}
!13295 = !DILocalVariable(name: "dev", arg: 1, scope: !13287, file: !13200, line: 125, type: !13203)
!13296 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13287, file: !13200, line: 126, type: !13290)
!13297 = !DILocalVariable(name: "context", arg: 3, scope: !13287, file: !13200, line: 127, type: !102)
!13298 = !DILocalVariable(name: "handle_count", scope: !13287, file: !13200, line: 129, type: !356)
!13299 = !DILocalVariable(name: "handles", scope: !13287, file: !13200, line: 130, type: !169)
!13300 = !DILocation(line: 0, scope: !13287)
!13301 = !DILocation(line: 129, column: 2, scope: !13287)
!13302 = !DILocation(line: 129, column: 9, scope: !13287)
!13303 = !DILocation(line: 130, column: 35, scope: !13287)
!13304 = !DILocation(line: 132, column: 33, scope: !13287)
!13305 = !DILocation(line: 132, column: 9, scope: !13287)
!13306 = !DILocation(line: 133, column: 1, scope: !13287)
!13307 = !DILocation(line: 132, column: 2, scope: !13287)
!13308 = distinct !DISubprogram(name: "device_required_handles_get", scope: !152, file: !152, line: 493, type: !13309, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13311)
!13309 = !DISubroutineType(types: !13310)
!13310 = !{!169, !13203, !2636}
!13311 = !{!13312, !13313, !13314, !13315}
!13312 = !DILocalVariable(name: "dev", arg: 1, scope: !13308, file: !152, line: 493, type: !13203)
!13313 = !DILocalVariable(name: "count", arg: 2, scope: !13308, file: !152, line: 493, type: !2636)
!13314 = !DILocalVariable(name: "rv", scope: !13308, file: !152, line: 495, type: !169)
!13315 = !DILocalVariable(name: "i", scope: !13316, file: !152, line: 498, type: !356)
!13316 = distinct !DILexicalBlock(scope: !13317, file: !152, line: 497, column: 18)
!13317 = distinct !DILexicalBlock(scope: !13308, file: !152, line: 497, column: 6)
!13318 = !DILocation(line: 0, scope: !13308)
!13319 = !DILocation(line: 495, column: 35, scope: !13308)
!13320 = !DILocation(line: 497, column: 9, scope: !13317)
!13321 = !DILocation(line: 497, column: 6, scope: !13308)
!13322 = !DILocation(line: 0, scope: !13316)
!13323 = !DILocation(line: 500, column: 11, scope: !13316)
!13324 = !DILocation(line: 500, column: 40, scope: !13316)
!13325 = !DILocation(line: 502, column: 4, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13316, file: !152, line: 501, column: 40)
!13327 = distinct !{!13327, !13328, !13329}
!13328 = !DILocation(line: 500, column: 3, scope: !13316)
!13329 = !DILocation(line: 503, column: 3, scope: !13316)
!13330 = !DILocation(line: 504, column: 10, scope: !13316)
!13331 = !DILocation(line: 505, column: 2, scope: !13316)
!13332 = !DILocation(line: 507, column: 2, scope: !13308)
!13333 = distinct !DISubprogram(name: "device_visitor", scope: !13200, file: !13200, line: 106, type: !13334, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13336)
!13334 = !DISubroutineType(types: !13335)
!13335 = !{!103, !169, !356, !13290, !102}
!13336 = !{!13337, !13338, !13339, !13340, !13341, !13343, !13346, !13347}
!13337 = !DILocalVariable(name: "handles", arg: 1, scope: !13333, file: !13200, line: 106, type: !169)
!13338 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13333, file: !13200, line: 107, type: !356)
!13339 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13333, file: !13200, line: 108, type: !13290)
!13340 = !DILocalVariable(name: "context", arg: 4, scope: !13333, file: !13200, line: 109, type: !102)
!13341 = !DILocalVariable(name: "i", scope: !13342, file: !13200, line: 112, type: !356)
!13342 = distinct !DILexicalBlock(scope: !13333, file: !13200, line: 112, column: 2)
!13343 = !DILocalVariable(name: "dh", scope: !13344, file: !13200, line: 113, type: !171)
!13344 = distinct !DILexicalBlock(scope: !13345, file: !13200, line: 112, column: 44)
!13345 = distinct !DILexicalBlock(scope: !13342, file: !13200, line: 112, column: 2)
!13346 = !DILocalVariable(name: "rdev", scope: !13344, file: !13200, line: 114, type: !13203)
!13347 = !DILocalVariable(name: "rc", scope: !13344, file: !13200, line: 115, type: !103)
!13348 = !DILocation(line: 0, scope: !13333)
!13349 = !DILocation(line: 0, scope: !13342)
!13350 = !DILocation(line: 112, column: 23, scope: !13345)
!13351 = !DILocation(line: 112, column: 2, scope: !13342)
!13352 = distinct !{!13352, !13351, !13353}
!13353 = !DILocation(line: 120, column: 2, scope: !13342)
!13354 = !DILocation(line: 113, column: 24, scope: !13344)
!13355 = !DILocation(line: 0, scope: !13344)
!13356 = !DILocation(line: 114, column: 31, scope: !13344)
!13357 = !DILocation(line: 115, column: 12, scope: !13344)
!13358 = !DILocation(line: 117, column: 10, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13344, file: !13200, line: 117, column: 7)
!13360 = !DILocation(line: 112, column: 39, scope: !13345)
!13361 = !DILocation(line: 123, column: 1, scope: !13333)
!13362 = distinct !DISubprogram(name: "device_from_handle", scope: !152, file: !152, line: 439, type: !13363, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13365)
!13363 = !DISubroutineType(types: !13364)
!13364 = !{!13203, !171}
!13365 = !{!13366, !13367, !13368}
!13366 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13362, file: !152, line: 439, type: !171)
!13367 = !DILocalVariable(name: "dev", scope: !13362, file: !152, line: 443, type: !13203)
!13368 = !DILocalVariable(name: "numdev", scope: !13362, file: !152, line: 444, type: !356)
!13369 = !DILocation(line: 0, scope: !13362)
!13370 = !DILocation(line: 446, column: 7, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13362, file: !152, line: 446, column: 6)
!13372 = !DILocation(line: 446, column: 18, scope: !13371)
!13373 = !DILocation(line: 446, column: 23, scope: !13371)
!13374 = !DILocation(line: 450, column: 2, scope: !13362)
!13375 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13200, file: !13200, line: 135, type: !13288, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13376)
!13376 = !{!13377, !13378, !13379, !13380, !13381}
!13377 = !DILocalVariable(name: "dev", arg: 1, scope: !13375, file: !13200, line: 135, type: !13203)
!13378 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13375, file: !13200, line: 136, type: !13290)
!13379 = !DILocalVariable(name: "context", arg: 3, scope: !13375, file: !13200, line: 137, type: !102)
!13380 = !DILocalVariable(name: "handle_count", scope: !13375, file: !13200, line: 139, type: !356)
!13381 = !DILocalVariable(name: "handles", scope: !13375, file: !13200, line: 140, type: !169)
!13382 = !DILocation(line: 0, scope: !13375)
!13383 = !DILocation(line: 139, column: 2, scope: !13375)
!13384 = !DILocation(line: 139, column: 9, scope: !13375)
!13385 = !DILocation(line: 140, column: 35, scope: !13375)
!13386 = !DILocation(line: 142, column: 33, scope: !13375)
!13387 = !DILocation(line: 142, column: 9, scope: !13375)
!13388 = !DILocation(line: 143, column: 1, scope: !13375)
!13389 = !DILocation(line: 142, column: 2, scope: !13375)
!13390 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !152, file: !152, line: 573, type: !13309, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13391)
!13391 = !{!13392, !13393, !13394, !13395, !13396}
!13392 = !DILocalVariable(name: "dev", arg: 1, scope: !13390, file: !152, line: 573, type: !13203)
!13393 = !DILocalVariable(name: "count", arg: 2, scope: !13390, file: !152, line: 573, type: !2636)
!13394 = !DILocalVariable(name: "rv", scope: !13390, file: !152, line: 575, type: !169)
!13395 = !DILocalVariable(name: "region", scope: !13390, file: !152, line: 576, type: !356)
!13396 = !DILocalVariable(name: "i", scope: !13390, file: !152, line: 577, type: !356)
!13397 = !DILocation(line: 0, scope: !13390)
!13398 = !DILocation(line: 575, column: 35, scope: !13390)
!13399 = !DILocation(line: 579, column: 9, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13390, file: !152, line: 579, column: 6)
!13401 = !DILocation(line: 579, column: 6, scope: !13390)
!13402 = !DILocation(line: 582, column: 8, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13404, file: !152, line: 582, column: 8)
!13404 = distinct !DILexicalBlock(scope: !13405, file: !152, line: 581, column: 23)
!13405 = distinct !DILexicalBlock(scope: !13400, file: !152, line: 579, column: 18)
!13406 = !DILocation(line: 582, column: 12, scope: !13403)
!13407 = !DILocation(line: 585, column: 6, scope: !13404)
!13408 = !DILocation(line: 0, scope: !13405)
!13409 = !DILocation(line: 581, column: 17, scope: !13405)
!13410 = !DILocation(line: 581, column: 3, scope: !13405)
!13411 = !DILocation(line: 588, column: 10, scope: !13405)
!13412 = !DILocation(line: 588, column: 16, scope: !13405)
!13413 = !DILocation(line: 589, column: 4, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13405, file: !152, line: 588, column: 39)
!13415 = !DILocation(line: 588, column: 3, scope: !13405)
!13416 = distinct !{!13416, !13415, !13417}
!13417 = !DILocation(line: 590, column: 3, scope: !13405)
!13418 = !DILocation(line: 591, column: 10, scope: !13405)
!13419 = !DILocation(line: 592, column: 2, scope: !13405)
!13420 = !DILocation(line: 575, column: 25, scope: !13390)
!13421 = !DILocation(line: 594, column: 2, scope: !13390)
!13422 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1973, file: !1973, line: 49, type: !6015, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !473)
!13423 = !DILocation(line: 51, column: 10, scope: !13422)
!13424 = !DILocation(line: 51, column: 20, scope: !13422)
!13425 = !DILocation(line: 51, column: 2, scope: !13422)
!13426 = distinct !DISubprogram(name: "coredump", scope: !3223, file: !3223, line: 209, type: !13427, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13573)
!13427 = !DISubroutineType(types: !13428)
!13428 = !{null, !32, !13429, !13473}
!13429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13430, size: 32)
!13430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13431)
!13431 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2843, line: 141, baseType: !13432)
!13432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2843, line: 97, size: 256, elements: !13433)
!13433 = !{!13434}
!13434 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13432, file: !2843, line: 107, baseType: !13435, size: 256)
!13435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2843, line: 98, size: 256, elements: !13436)
!13436 = !{!13437, !13442, !13447, !13452, !13457, !13462, !13467, !13472}
!13437 = !DIDerivedType(tag: DW_TAG_member, scope: !13435, file: !2843, line: 99, baseType: !13438, size: 32)
!13438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13435, file: !2843, line: 99, size: 32, elements: !13439)
!13439 = !{!13440, !13441}
!13440 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13438, file: !2843, line: 99, baseType: !132, size: 32)
!13441 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13438, file: !2843, line: 99, baseType: !132, size: 32)
!13442 = !DIDerivedType(tag: DW_TAG_member, scope: !13435, file: !2843, line: 100, baseType: !13443, size: 32, offset: 32)
!13443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13435, file: !2843, line: 100, size: 32, elements: !13444)
!13444 = !{!13445, !13446}
!13445 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13443, file: !2843, line: 100, baseType: !132, size: 32)
!13446 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13443, file: !2843, line: 100, baseType: !132, size: 32)
!13447 = !DIDerivedType(tag: DW_TAG_member, scope: !13435, file: !2843, line: 101, baseType: !13448, size: 32, offset: 64)
!13448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13435, file: !2843, line: 101, size: 32, elements: !13449)
!13449 = !{!13450, !13451}
!13450 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13448, file: !2843, line: 101, baseType: !132, size: 32)
!13451 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13448, file: !2843, line: 101, baseType: !132, size: 32)
!13452 = !DIDerivedType(tag: DW_TAG_member, scope: !13435, file: !2843, line: 102, baseType: !13453, size: 32, offset: 96)
!13453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13435, file: !2843, line: 102, size: 32, elements: !13454)
!13454 = !{!13455, !13456}
!13455 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13453, file: !2843, line: 102, baseType: !132, size: 32)
!13456 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13453, file: !2843, line: 102, baseType: !132, size: 32)
!13457 = !DIDerivedType(tag: DW_TAG_member, scope: !13435, file: !2843, line: 103, baseType: !13458, size: 32, offset: 128)
!13458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13435, file: !2843, line: 103, size: 32, elements: !13459)
!13459 = !{!13460, !13461}
!13460 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13458, file: !2843, line: 103, baseType: !132, size: 32)
!13461 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13458, file: !2843, line: 103, baseType: !132, size: 32)
!13462 = !DIDerivedType(tag: DW_TAG_member, scope: !13435, file: !2843, line: 104, baseType: !13463, size: 32, offset: 160)
!13463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13435, file: !2843, line: 104, size: 32, elements: !13464)
!13464 = !{!13465, !13466}
!13465 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13463, file: !2843, line: 104, baseType: !132, size: 32)
!13466 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13463, file: !2843, line: 104, baseType: !132, size: 32)
!13467 = !DIDerivedType(tag: DW_TAG_member, scope: !13435, file: !2843, line: 105, baseType: !13468, size: 32, offset: 192)
!13468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13435, file: !2843, line: 105, size: 32, elements: !13469)
!13469 = !{!13470, !13471}
!13470 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13468, file: !2843, line: 105, baseType: !132, size: 32)
!13471 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13468, file: !2843, line: 105, baseType: !132, size: 32)
!13472 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13435, file: !2843, line: 106, baseType: !132, size: 32, offset: 224)
!13473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13474, size: 32)
!13474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !13475)
!13475 = !{!13476, !13534, !13546, !13547, !13548, !13549, !13555, !13568}
!13476 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13474, file: !367, line: 247, baseType: !13477, size: 384)
!13477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !13478)
!13478 = !{!13479, !13503, !13510, !13511, !13512, !13521, !13522, !13523}
!13479 = !DIDerivedType(tag: DW_TAG_member, scope: !13477, file: !367, line: 60, baseType: !13480, size: 64)
!13480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13477, file: !367, line: 60, size: 64, elements: !13481)
!13481 = !{!13482, !13497}
!13482 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13480, file: !367, line: 61, baseType: !13483, size: 64)
!13483 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !13484)
!13484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !13485)
!13485 = !{!13486, !13492}
!13486 = !DIDerivedType(tag: DW_TAG_member, scope: !13484, file: !321, line: 38, baseType: !13487, size: 32)
!13487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13484, file: !321, line: 38, size: 32, elements: !13488)
!13488 = !{!13489, !13491}
!13489 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13487, file: !321, line: 39, baseType: !13490, size: 32)
!13490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13484, size: 32)
!13491 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13487, file: !321, line: 40, baseType: !13490, size: 32)
!13492 = !DIDerivedType(tag: DW_TAG_member, scope: !13484, file: !321, line: 42, baseType: !13493, size: 32, offset: 32)
!13493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13484, file: !321, line: 42, size: 32, elements: !13494)
!13494 = !{!13495, !13496}
!13495 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13493, file: !321, line: 43, baseType: !13490, size: 32)
!13496 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13493, file: !321, line: 44, baseType: !13490, size: 32)
!13497 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13480, file: !367, line: 62, baseType: !13498, size: 64)
!13498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !13499)
!13499 = !{!13500}
!13500 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13498, file: !392, line: 50, baseType: !13501, size: 64)
!13501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13502, size: 64, elements: !397)
!13502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13498, size: 32)
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13477, file: !367, line: 68, baseType: !13504, size: 32, offset: 64)
!13504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13505, size: 32)
!13505 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !13506)
!13506 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !13507)
!13507 = !{!13508}
!13508 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13506, file: !316, line: 232, baseType: !13509, size: 64)
!13509 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !13484)
!13510 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13477, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!13511 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13477, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!13512 = !DIDerivedType(tag: DW_TAG_member, scope: !13477, file: !367, line: 90, baseType: !13513, size: 16, offset: 112)
!13513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13477, file: !367, line: 90, size: 16, elements: !13514)
!13514 = !{!13515, !13520}
!13515 = !DIDerivedType(tag: DW_TAG_member, scope: !13513, file: !367, line: 91, baseType: !13516, size: 16)
!13516 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13513, file: !367, line: 91, size: 16, elements: !13517)
!13517 = !{!13518, !13519}
!13518 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13516, file: !367, line: 96, baseType: !415, size: 8)
!13519 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13516, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!13520 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13513, file: !367, line: 100, baseType: !340, size: 16)
!13521 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13477, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!13522 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13477, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!13523 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13477, file: !367, line: 131, baseType: !13524, size: 192, offset: 192)
!13524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !13525)
!13525 = !{!13526, !13527, !13533}
!13526 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13524, file: !316, line: 245, baseType: !13483, size: 64)
!13527 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13524, file: !316, line: 246, baseType: !13528, size: 32, offset: 64)
!13528 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !13529)
!13529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13530, size: 32)
!13530 = !DISubroutineType(types: !13531)
!13531 = !{null, !13532}
!13532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13524, size: 32)
!13533 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13524, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!13534 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13474, file: !367, line: 250, baseType: !13535, size: 288, offset: 384)
!13535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !13536)
!13536 = !{!13537, !13538, !13539, !13540, !13541, !13542, !13543, !13544, !13545}
!13537 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13535, file: !436, line: 26, baseType: !132, size: 32)
!13538 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13535, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!13539 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13535, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!13540 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13535, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!13541 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13535, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!13542 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13535, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!13543 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13535, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!13544 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13535, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!13545 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13535, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!13546 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13474, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!13547 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13474, file: !367, line: 256, baseType: !13505, size: 64, offset: 704)
!13548 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13474, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!13549 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13474, file: !367, line: 300, baseType: !13550, size: 96, offset: 800)
!13550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !13551)
!13551 = !{!13552, !13553, !13554}
!13552 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13550, file: !367, line: 153, baseType: !22, size: 32)
!13553 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13550, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!13554 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13550, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!13555 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13474, file: !367, line: 325, baseType: !13556, size: 32, offset: 896)
!13556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13557, size: 32)
!13557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !13558)
!13558 = !{!13559, !13565, !13566}
!13559 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13557, file: !312, line: 5074, baseType: !13560, size: 96)
!13560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !13561)
!13561 = !{!13562, !13563, !13564}
!13562 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13560, file: !462, line: 57, baseType: !465, size: 32)
!13563 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13560, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!13564 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13560, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!13565 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13557, file: !312, line: 5075, baseType: !13505, size: 64, offset: 96)
!13566 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13557, file: !312, line: 5076, baseType: !13567, offset: 160)
!13567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!13568 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13474, file: !367, line: 343, baseType: !13569, size: 64, offset: 928)
!13569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !13570)
!13570 = !{!13571, !13572}
!13571 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13569, file: !436, line: 63, baseType: !132, size: 32)
!13572 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13569, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!13573 = !{!13574, !13575, !13576}
!13574 = !DILocalVariable(name: "reason", arg: 1, scope: !13426, file: !3223, line: 209, type: !32)
!13575 = !DILocalVariable(name: "esf", arg: 2, scope: !13426, file: !3223, line: 209, type: !13429)
!13576 = !DILocalVariable(name: "thread", arg: 3, scope: !13426, file: !3223, line: 210, type: !13473)
!13577 = !DILocation(line: 0, scope: !13426)
!13578 = !DILocation(line: 212, column: 1, scope: !13426)
!13579 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3223, file: !3223, line: 214, type: !13580, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13582)
!13580 = !DISubroutineType(types: !13581)
!13581 = !{null, !22, !22}
!13582 = !{!13583, !13584}
!13583 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13579, file: !3223, line: 214, type: !22)
!13584 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13579, file: !3223, line: 214, type: !22)
!13585 = !DILocation(line: 0, scope: !13579)
!13586 = !DILocation(line: 216, column: 1, scope: !13579)
!13587 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3223, file: !3223, line: 218, type: !13588, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13590)
!13588 = !DISubroutineType(types: !13589)
!13589 = !{null, !270, !356}
!13590 = !{!13591, !13592}
!13591 = !DILocalVariable(name: "buf", arg: 1, scope: !13587, file: !3223, line: 218, type: !270)
!13592 = !DILocalVariable(name: "buflen", arg: 2, scope: !13587, file: !3223, line: 218, type: !356)
!13593 = !DILocation(line: 0, scope: !13587)
!13594 = !DILocation(line: 220, column: 1, scope: !13587)
!13595 = distinct !DISubprogram(name: "coredump_query", scope: !3223, file: !3223, line: 222, type: !13596, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13598)
!13596 = !DISubroutineType(types: !13597)
!13597 = !{!103, !3222, !102}
!13598 = !{!13599, !13600}
!13599 = !DILocalVariable(name: "query_id", arg: 1, scope: !13595, file: !3223, line: 222, type: !3222)
!13600 = !DILocalVariable(name: "arg", arg: 2, scope: !13595, file: !3223, line: 222, type: !102)
!13601 = !DILocation(line: 0, scope: !13595)
!13602 = !DILocation(line: 224, column: 2, scope: !13595)
!13603 = distinct !DISubprogram(name: "coredump_cmd", scope: !3223, file: !3223, line: 227, type: !13604, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13606)
!13604 = !DISubroutineType(types: !13605)
!13605 = !{!103, !3229, !102}
!13606 = !{!13607, !13608}
!13607 = !DILocalVariable(name: "query_id", arg: 1, scope: !13603, file: !3223, line: 227, type: !3229)
!13608 = !DILocalVariable(name: "arg", arg: 2, scope: !13603, file: !3223, line: 227, type: !102)
!13609 = !DILocation(line: 0, scope: !13603)
!13610 = !DILocation(line: 229, column: 2, scope: !13603)
!13611 = distinct !DISubprogram(name: "arch_system_halt", scope: !13612, file: !13612, line: 23, type: !5834, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13613)
!13612 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13613 = !{!13614}
!13614 = !DILocalVariable(name: "reason", arg: 1, scope: !13611, file: !13612, line: 23, type: !32)
!13615 = !DILocation(line: 0, scope: !13611)
!13616 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !13621)
!13617 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5823, file: !5823, line: 42, type: !5824, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13618)
!13618 = !{!13619, !13620}
!13619 = !DILocalVariable(name: "key", scope: !13617, file: !5823, line: 44, type: !32)
!13620 = !DILocalVariable(name: "tmp", scope: !13617, file: !5823, line: 53, type: !32)
!13621 = distinct !DILocation(line: 31, column: 8, scope: !13611)
!13622 = !{i64 2224117}
!13623 = !DILocation(line: 0, scope: !13617, inlinedAt: !13621)
!13624 = !DILocation(line: 32, column: 2, scope: !13611)
!13625 = !DILocation(line: 32, column: 2, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13627, file: !13612, line: 32, column: 2)
!13627 = distinct !DILexicalBlock(scope: !13611, file: !13612, line: 32, column: 2)
!13628 = distinct !{!13628, !13629, !13630}
!13629 = !DILocation(line: 32, column: 2, scope: !13627)
!13630 = !DILocation(line: 34, column: 2, scope: !13627)
!13631 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13612, file: !13612, line: 39, type: !13632, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13634)
!13632 = !DISubroutineType(types: !13633)
!13633 = !{null, !32, !13429}
!13634 = !{!13635, !13636}
!13635 = !DILocalVariable(name: "reason", arg: 1, scope: !13631, file: !13612, line: 39, type: !32)
!13636 = !DILocalVariable(name: "esf", arg: 2, scope: !13631, file: !13612, line: 40, type: !13429)
!13637 = !DILocation(line: 0, scope: !13631)
!13638 = !DILocation(line: 46, column: 2, scope: !13631)
!13639 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13612, file: !13612, line: 81, type: !5834, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13640)
!13640 = !{!13641}
!13641 = !DILocalVariable(name: "reason", arg: 1, scope: !13639, file: !13612, line: 81, type: !32)
!13642 = !DILocation(line: 0, scope: !13639)
!13643 = !DILocation(line: 83, column: 2, scope: !13639)
!13644 = distinct !DISubprogram(name: "z_fatal_error", scope: !13612, file: !13612, line: 96, type: !13632, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13645)
!13645 = !{!13646, !13647, !13648, !13649}
!13646 = !DILocalVariable(name: "reason", arg: 1, scope: !13644, file: !13612, line: 96, type: !32)
!13647 = !DILocalVariable(name: "esf", arg: 2, scope: !13644, file: !13612, line: 96, type: !13429)
!13648 = !DILocalVariable(name: "key", scope: !13644, file: !13612, line: 102, type: !32)
!13649 = !DILocalVariable(name: "thread", scope: !13644, file: !13612, line: 103, type: !13473)
!13650 = !DILocation(line: 0, scope: !13644)
!13651 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !13652)
!13652 = distinct !DILocation(line: 102, column: 21, scope: !13644)
!13653 = !DILocation(line: 0, scope: !13617, inlinedAt: !13652)
!13654 = !DILocation(line: 119, column: 11, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13644, file: !13612, line: 119, column: 6)
!13656 = !DILocation(line: 119, column: 20, scope: !13655)
!13657 = !DILocation(line: 131, column: 2, scope: !13644)
!13658 = !DILocation(line: 151, column: 7, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13660, file: !13612, line: 146, column: 32)
!13660 = distinct !DILexicalBlock(scope: !13644, file: !13612, line: 146, column: 6)
!13661 = !DILocation(line: 151, column: 21, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13659, file: !13612, line: 151, column: 7)
!13663 = !DILocation(line: 104, column: 4, scope: !13644)
!13664 = !DILocalVariable(name: "key", arg: 1, scope: !13665, file: !5823, line: 84, type: !32)
!13665 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5823, file: !5823, line: 84, type: !5834, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13666)
!13666 = !{!13664}
!13667 = !DILocation(line: 0, scope: !13665, inlinedAt: !13668)
!13668 = distinct !DILocation(line: 186, column: 2, scope: !13644)
!13669 = !DILocation(line: 95, column: 2, scope: !13665, inlinedAt: !13668)
!13670 = !{i64 2224934}
!13671 = !DILocation(line: 189, column: 3, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13673, file: !13612, line: 188, column: 41)
!13673 = distinct !DILexicalBlock(scope: !13644, file: !13612, line: 188, column: 6)
!13674 = !DILocation(line: 191, column: 1, scope: !13644)
!13675 = distinct !DISubprogram(name: "k_current_get", scope: !312, file: !312, line: 530, type: !13676, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !473)
!13676 = !DISubroutineType(types: !13677)
!13677 = !{!13678}
!13678 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !13473)
!13679 = !DILocation(line: 535, column: 9, scope: !13675)
!13680 = !DILocation(line: 535, column: 2, scope: !13675)
!13681 = distinct !DISubprogram(name: "k_thread_abort", scope: !3696, file: !3696, line: 188, type: !13682, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13684)
!13682 = !DISubroutineType(types: !13683)
!13683 = !{null, !13678}
!13684 = !{!13685}
!13685 = !DILocalVariable(name: "thread", arg: 1, scope: !13681, file: !3696, line: 188, type: !13678)
!13686 = !DILocation(line: 0, scope: !13681)
!13687 = !DILocation(line: 197, column: 2, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13681, file: !3696, line: 197, column: 2)
!13689 = !{i64 2154841879}
!13690 = !DILocation(line: 198, column: 2, scope: !13681)
!13691 = !DILocation(line: 199, column: 1, scope: !13681)
!13692 = distinct !DISubprogram(name: "z_current_get", scope: !3696, file: !3696, line: 173, type: !13676, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !473)
!13693 = !DILocation(line: 180, column: 2, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13692, file: !3696, line: 180, column: 2)
!13695 = !{i64 2154841811}
!13696 = !DILocation(line: 181, column: 9, scope: !13692)
!13697 = !DILocation(line: 181, column: 2, scope: !13692)
!13698 = distinct !DISubprogram(name: "z_early_memset", scope: !1980, file: !1980, line: 108, type: !13699, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13701)
!13699 = !DISubroutineType(types: !13700)
!13700 = !{null, !102, !103, !356}
!13701 = !{!13702, !13703, !13704}
!13702 = !DILocalVariable(name: "dst", arg: 1, scope: !13698, file: !1980, line: 108, type: !102)
!13703 = !DILocalVariable(name: "c", arg: 2, scope: !13698, file: !1980, line: 108, type: !103)
!13704 = !DILocalVariable(name: "n", arg: 3, scope: !13698, file: !1980, line: 108, type: !356)
!13705 = !DILocation(line: 0, scope: !13698)
!13706 = !DILocation(line: 110, column: 9, scope: !13698)
!13707 = !DILocation(line: 111, column: 1, scope: !13698)
!13708 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1980, file: !1980, line: 121, type: !13709, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13711)
!13709 = !DISubroutineType(types: !13710)
!13710 = !{null, !102, !13, !356}
!13711 = !{!13712, !13713, !13714}
!13712 = !DILocalVariable(name: "dst", arg: 1, scope: !13708, file: !1980, line: 121, type: !102)
!13713 = !DILocalVariable(name: "src", arg: 2, scope: !13708, file: !1980, line: 121, type: !13)
!13714 = !DILocalVariable(name: "n", arg: 3, scope: !13708, file: !1980, line: 121, type: !356)
!13715 = !DILocation(line: 0, scope: !13708)
!13716 = !DILocation(line: 123, column: 9, scope: !13708)
!13717 = !DILocation(line: 124, column: 1, scope: !13708)
!13718 = distinct !DISubprogram(name: "z_bss_zero", scope: !1980, file: !1980, line: 132, type: !3256, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !473)
!13719 = !DILocation(line: 143, column: 2, scope: !13718)
!13720 = !DILocation(line: 145, column: 2, scope: !13718)
!13721 = !DILocation(line: 168, column: 1, scope: !13718)
!13722 = distinct !DISubprogram(name: "z_init_cpu", scope: !1980, file: !1980, line: 372, type: !8485, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13723)
!13723 = !{!13724}
!13724 = !DILocalVariable(name: "id", arg: 1, scope: !13722, file: !1980, line: 372, type: !103)
!13725 = !DILocation(line: 0, scope: !13722)
!13726 = !DILocation(line: 374, column: 2, scope: !13722)
!13727 = !DILocation(line: 375, column: 34, scope: !13722)
!13728 = !DILocation(line: 375, column: 19, scope: !13722)
!13729 = !DILocation(line: 375, column: 31, scope: !13722)
!13730 = !DILocation(line: 376, column: 24, scope: !13722)
!13731 = !DILocation(line: 376, column: 19, scope: !13722)
!13732 = !DILocation(line: 376, column: 22, scope: !13722)
!13733 = !DILocation(line: 378, column: 26, scope: !13722)
!13734 = !DILocation(line: 378, column: 4, scope: !13722)
!13735 = !DILocation(line: 378, column: 50, scope: !13722)
!13736 = !DILocation(line: 377, column: 19, scope: !13722)
!13737 = !DILocation(line: 377, column: 29, scope: !13722)
!13738 = !DILocation(line: 384, column: 1, scope: !13722)
!13739 = distinct !DISubprogram(name: "init_idle_thread", scope: !1980, file: !1980, line: 343, type: !8485, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13740)
!13740 = !{!13741, !13742, !13743, !13746}
!13741 = !DILocalVariable(name: "i", arg: 1, scope: !13739, file: !1980, line: 343, type: !103)
!13742 = !DILocalVariable(name: "thread", scope: !13739, file: !1980, line: 345, type: !2072)
!13743 = !DILocalVariable(name: "stack", scope: !13739, file: !1980, line: 346, type: !13744)
!13744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13745, size: 32)
!13745 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3575, line: 44, baseType: !2186)
!13746 = !DILocalVariable(name: "tname", scope: !13739, file: !1980, line: 358, type: !1083)
!13747 = !DILocation(line: 0, scope: !13739)
!13748 = !DILocation(line: 345, column: 29, scope: !13739)
!13749 = !DILocation(line: 346, column: 28, scope: !13739)
!13750 = !DILocation(line: 362, column: 37, scope: !13739)
!13751 = !DILocation(line: 362, column: 36, scope: !13739)
!13752 = !DILocation(line: 361, column: 2, scope: !13739)
!13753 = !DILocation(line: 365, column: 2, scope: !13739)
!13754 = !DILocation(line: 370, column: 1, scope: !13739)
!13755 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2187, file: !2187, line: 331, type: !13756, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13758)
!13756 = !DISubroutineType(types: !13757)
!13757 = !{!1083, !13744}
!13758 = !{!13759}
!13759 = !DILocalVariable(name: "sym", arg: 1, scope: !13755, file: !2187, line: 331, type: !13744)
!13760 = !DILocation(line: 0, scope: !13755)
!13761 = !DILocation(line: 333, column: 21, scope: !13755)
!13762 = !DILocation(line: 333, column: 2, scope: !13755)
!13763 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13764, file: !13764, line: 155, type: !13765, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13767)
!13764 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13765 = !DISubroutineType(types: !13766)
!13766 = !{null, !2072}
!13767 = !{!13768}
!13768 = !DILocalVariable(name: "thread", arg: 1, scope: !13763, file: !13764, line: 155, type: !2072)
!13769 = !DILocation(line: 0, scope: !13763)
!13770 = !DILocation(line: 157, column: 15, scope: !13763)
!13771 = !DILocation(line: 157, column: 28, scope: !13763)
!13772 = !DILocation(line: 158, column: 1, scope: !13763)
!13773 = distinct !DISubprogram(name: "z_cstart", scope: !1980, file: !1980, line: 501, type: !3256, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13774)
!13774 = !{!13775}
!13775 = !DILocalVariable(name: "dummy_thread", scope: !13773, file: !1980, line: 518, type: !2073)
!13776 = !DILocation(line: 507, column: 2, scope: !13773)
!13777 = !DILocation(line: 43, column: 14, scope: !13778, inlinedAt: !13782)
!13778 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13779, file: !13779, line: 40, type: !3256, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13780)
!13779 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13780 = !{!13781}
!13781 = !DILocalVariable(name: "msp", scope: !13778, file: !13779, line: 42, type: !132)
!13782 = distinct !DILocation(line: 44, column: 2, scope: !13783, inlinedAt: !13785)
!13783 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13784, file: !13784, line: 42, type: !3256, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !473)
!13784 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13785 = distinct !DILocation(line: 510, column: 2, scope: !13773)
!13786 = !DILocation(line: 43, column: 3, scope: !13778, inlinedAt: !13782)
!13787 = !DILocation(line: 43, column: 60, scope: !13778, inlinedAt: !13782)
!13788 = !DILocation(line: 0, scope: !13778, inlinedAt: !13782)
!13789 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13790, file: !6843, line: 1153, type: !132)
!13790 = distinct !DISubprogram(name: "__set_MSP", scope: !6843, file: !6843, line: 1153, type: !6934, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13791)
!13791 = !{!13789}
!13792 = !DILocation(line: 0, scope: !13790, inlinedAt: !13793)
!13793 = distinct !DILocation(line: 46, column: 2, scope: !13778, inlinedAt: !13782)
!13794 = !DILocation(line: 1155, column: 3, scope: !13790, inlinedAt: !13793)
!13795 = !{i64 3561235}
!13796 = !DILocation(line: 62, column: 11, scope: !13778, inlinedAt: !13782)
!13797 = !DILocation(line: 102, column: 2, scope: !13798, inlinedAt: !13799)
!13798 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7637, file: !7637, line: 97, type: !3256, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !473)
!13799 = distinct !DILocation(line: 45, column: 2, scope: !13783, inlinedAt: !13785)
!13800 = !DILocation(line: 108, column: 2, scope: !13798, inlinedAt: !13799)
!13801 = !DILocation(line: 112, column: 2, scope: !13798, inlinedAt: !13799)
!13802 = !DILocation(line: 113, column: 2, scope: !13798, inlinedAt: !13799)
!13803 = !DILocation(line: 114, column: 2, scope: !13798, inlinedAt: !13799)
!13804 = !DILocation(line: 116, column: 2, scope: !13798, inlinedAt: !13799)
!13805 = !DILocation(line: 123, column: 13, scope: !13798, inlinedAt: !13799)
!13806 = !DILocation(line: 46, column: 2, scope: !13783, inlinedAt: !13785)
!13807 = !DILocation(line: 47, column: 2, scope: !13783, inlinedAt: !13785)
!13808 = !DILocation(line: 174, column: 12, scope: !13809, inlinedAt: !13810)
!13809 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7637, file: !7637, line: 169, type: !3256, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !473)
!13810 = distinct !DILocation(line: 48, column: 2, scope: !13783, inlinedAt: !13785)
!13811 = !DILocation(line: 179, column: 12, scope: !13809, inlinedAt: !13810)
!13812 = !DILocation(line: 50, column: 2, scope: !13783, inlinedAt: !13785)
!13813 = !DILocation(line: 57, column: 2, scope: !13783, inlinedAt: !13785)
!13814 = !DILocation(line: 518, column: 2, scope: !13773)
!13815 = !DILocation(line: 518, column: 18, scope: !13773)
!13816 = !DILocation(line: 520, column: 2, scope: !13773)
!13817 = !DILocation(line: 523, column: 2, scope: !13773)
!13818 = !DILocation(line: 526, column: 2, scope: !13773)
!13819 = !DILocation(line: 527, column: 2, scope: !13773)
!13820 = !DILocation(line: 543, column: 24, scope: !13773)
!13821 = !DILocation(line: 543, column: 2, scope: !13773)
!13822 = !DILocation(line: 0, scope: !2206)
!13823 = !DILocation(line: 246, column: 15, scope: !2224)
!13824 = !DILocation(line: 246, column: 36, scope: !2223)
!13825 = !DILocation(line: 246, column: 2, scope: !2224)
!13826 = !DILocation(line: 247, column: 37, scope: !2222)
!13827 = !DILocation(line: 0, scope: !2222)
!13828 = !DILocation(line: 248, column: 19, scope: !2222)
!13829 = !DILocation(line: 248, column: 12, scope: !2222)
!13830 = !DILocation(line: 250, column: 11, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !2222, file: !1980, line: 250, column: 7)
!13832 = !DILocation(line: 250, column: 7, scope: !2222)
!13833 = !DILocation(line: 254, column: 11, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13835, file: !1980, line: 254, column: 8)
!13835 = distinct !DILexicalBlock(scope: !13831, file: !1980, line: 250, column: 20)
!13836 = !DILocation(line: 254, column: 8, scope: !13835)
!13837 = !DILocation(line: 255, column: 9, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13834, file: !1980, line: 254, column: 17)
!13839 = !DILocation(line: 258, column: 9, scope: !13838)
!13840 = !DILocation(line: 261, column: 28, scope: !13838)
!13841 = !DILocation(line: 261, column: 10, scope: !13838)
!13842 = !DILocation(line: 261, column: 17, scope: !13838)
!13843 = !DILocation(line: 261, column: 26, scope: !13838)
!13844 = !DILocation(line: 262, column: 4, scope: !13838)
!13845 = !DILocation(line: 263, column: 9, scope: !13835)
!13846 = !DILocation(line: 263, column: 16, scope: !13835)
!13847 = !DILocation(line: 263, column: 28, scope: !13835)
!13848 = !DILocation(line: 264, column: 3, scope: !13835)
!13849 = !DILocation(line: 246, column: 60, scope: !2223)
!13850 = distinct !{!13850, !13825, !13851}
!13851 = !DILocation(line: 265, column: 2, scope: !2224)
!13852 = !DILocation(line: 266, column: 1, scope: !2206)
!13853 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6877, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13854)
!13854 = !{!13855, !13856}
!13855 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13853, file: !507, line: 1814, type: !763)
!13856 = !DILocalVariable(name: "priority", arg: 2, scope: !13853, file: !507, line: 1814, type: !132)
!13857 = !DILocation(line: 0, scope: !13853)
!13858 = !DILocation(line: 1822, column: 48, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13860, file: !507, line: 1821, column: 3)
!13860 = distinct !DILexicalBlock(scope: !13853, file: !507, line: 1816, column: 7)
!13861 = !DILocation(line: 1822, column: 32, scope: !13859)
!13862 = !DILocation(line: 1822, column: 40, scope: !13859)
!13863 = !DILocation(line: 1822, column: 5, scope: !13859)
!13864 = !DILocation(line: 1822, column: 46, scope: !13859)
!13865 = !DILocation(line: 1824, column: 1, scope: !13853)
!13866 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13784, file: !13784, line: 32, type: !3256, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!13867 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13868, file: !13868, line: 215, type: !13765, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13869)
!13868 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13869 = !{!13870}
!13870 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13867, file: !13868, line: 215, type: !2072)
!13871 = !DILocation(line: 0, scope: !13867)
!13872 = !DILocation(line: 217, column: 21, scope: !13867)
!13873 = !DILocation(line: 217, column: 34, scope: !13867)
!13874 = !DILocation(line: 221, column: 21, scope: !13867)
!13875 = !DILocation(line: 221, column: 34, scope: !13867)
!13876 = !DILocation(line: 223, column: 27, scope: !13867)
!13877 = !DILocation(line: 223, column: 33, scope: !13867)
!13878 = !DILocation(line: 224, column: 27, scope: !13867)
!13879 = !DILocation(line: 224, column: 32, scope: !13867)
!13880 = !DILocation(line: 232, column: 16, scope: !13867)
!13881 = !DILocation(line: 232, column: 30, scope: !13867)
!13882 = !DILocation(line: 239, column: 24, scope: !13867)
!13883 = !DILocation(line: 240, column: 1, scope: !13867)
!13884 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1980, file: !1980, line: 399, type: !13885, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13887)
!13885 = !DISubroutineType(types: !13886)
!13886 = !{!1083}
!13887 = !{!13888}
!13888 = !DILocalVariable(name: "stack_ptr", scope: !13884, file: !1980, line: 401, type: !1083)
!13889 = !DILocation(line: 404, column: 2, scope: !13884)
!13890 = !DILocation(line: 416, column: 24, scope: !13884)
!13891 = !DILocation(line: 418, column: 14, scope: !13884)
!13892 = !DILocation(line: 0, scope: !13884)
!13893 = !DILocation(line: 423, column: 2, scope: !13884)
!13894 = !DILocation(line: 424, column: 2, scope: !13884)
!13895 = !DILocation(line: 426, column: 2, scope: !13884)
!13896 = !DILocation(line: 428, column: 2, scope: !13884)
!13897 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1980, file: !1980, line: 432, type: !13898, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13900)
!13898 = !DISubroutineType(types: !13899)
!13899 = !{null, !1083}
!13900 = !{!13901}
!13901 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13897, file: !1980, line: 432, type: !1083)
!13902 = !DILocation(line: 0, scope: !13897)
!13903 = !DILocation(line: 435, column: 2, scope: !13897)
!13904 = !DILocation(line: 445, column: 2, scope: !13897)
!13905 = distinct !DISubprogram(name: "bg_thread_main", scope: !1980, file: !1980, line: 277, type: !3577, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13906)
!13906 = !{!13907, !13908, !13909}
!13907 = !DILocalVariable(name: "unused1", arg: 1, scope: !13905, file: !1980, line: 277, type: !102)
!13908 = !DILocalVariable(name: "unused2", arg: 2, scope: !13905, file: !1980, line: 277, type: !102)
!13909 = !DILocalVariable(name: "unused3", arg: 3, scope: !13905, file: !1980, line: 277, type: !102)
!13910 = !DILocation(line: 0, scope: !13905)
!13911 = !DILocation(line: 291, column: 20, scope: !13905)
!13912 = !DILocation(line: 293, column: 2, scope: !13905)
!13913 = !DILocation(line: 297, column: 2, scope: !13905)
!13914 = !DILocation(line: 305, column: 2, scope: !13905)
!13915 = !DILocation(line: 307, column: 2, scope: !13905)
!13916 = !DILocation(line: 330, column: 8, scope: !13905)
!13917 = !DILocation(line: 333, column: 34, scope: !13905)
!13918 = !DILocation(line: 339, column: 1, scope: !13905)
!13919 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2233, file: !2233, line: 45, type: !13920, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !13928)
!13920 = !DISubroutineType(types: !13921)
!13921 = !{null, !13922, !102}
!13922 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !312, line: 103, baseType: !13923)
!13923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13924, size: 32)
!13924 = !DISubroutineType(types: !13925)
!13925 = !{null, !13926, !102}
!13926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13927, size: 32)
!13927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2238)
!13928 = !{!13929, !13930}
!13929 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13919, file: !2233, line: 45, type: !13922)
!13930 = !DILocalVariable(name: "user_data", arg: 2, scope: !13919, file: !2233, line: 45, type: !102)
!13931 = !DILocation(line: 0, scope: !13919)
!13932 = !DILocation(line: 71, column: 1, scope: !13919)
!13933 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2233, file: !2233, line: 73, type: !13920, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !13934)
!13934 = !{!13935, !13936}
!13935 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13933, file: !2233, line: 73, type: !13922)
!13936 = !DILocalVariable(name: "user_data", arg: 2, scope: !13933, file: !2233, line: 73, type: !102)
!13937 = !DILocation(line: 0, scope: !13933)
!13938 = !DILocation(line: 95, column: 1, scope: !13933)
!13939 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2233, file: !2233, line: 97, type: !7638, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !473)
!13940 = !DILocation(line: 1031, column: 3, scope: !13941, inlinedAt: !13944)
!13941 = distinct !DISubprogram(name: "__get_IPSR", scope: !6843, file: !6843, line: 1027, type: !6924, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !13942)
!13942 = !{!13943}
!13943 = !DILocalVariable(name: "result", scope: !13941, file: !6843, line: 1029, type: !132)
!13944 = distinct !DILocation(line: 48, column: 10, scope: !13945, inlinedAt: !13946)
!13945 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7637, file: !7637, line: 46, type: !7638, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !473)
!13946 = distinct !DILocation(line: 99, column: 9, scope: !13939)
!13947 = !{i64 3566886}
!13948 = !DILocation(line: 0, scope: !13941, inlinedAt: !13944)
!13949 = !DILocation(line: 48, column: 9, scope: !13945, inlinedAt: !13946)
!13950 = !DILocation(line: 99, column: 2, scope: !13939)
!13951 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2233, file: !2233, line: 106, type: !3256, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !473)
!13952 = !DILocation(line: 108, column: 2, scope: !13951)
!13953 = !DILocation(line: 108, column: 17, scope: !13951)
!13954 = !DILocation(line: 108, column: 30, scope: !13951)
!13955 = !DILocation(line: 109, column: 1, scope: !13951)
!13956 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2233, file: !2233, line: 116, type: !3256, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !473)
!13957 = !DILocation(line: 118, column: 2, scope: !13956)
!13958 = !DILocation(line: 118, column: 17, scope: !13956)
!13959 = !DILocation(line: 118, column: 30, scope: !13956)
!13960 = !DILocation(line: 119, column: 1, scope: !13956)
!13961 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2233, file: !2233, line: 126, type: !7638, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !473)
!13962 = !DILocation(line: 128, column: 10, scope: !13961)
!13963 = !DILocation(line: 128, column: 25, scope: !13961)
!13964 = !DILocation(line: 128, column: 38, scope: !13961)
!13965 = !DILocation(line: 128, column: 53, scope: !13961)
!13966 = !DILocation(line: 128, column: 2, scope: !13961)
!13967 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2233, file: !2233, line: 187, type: !13968, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !13970)
!13968 = !DISubroutineType(types: !13969)
!13969 = !{!103, !2237, !155}
!13970 = !{!13971, !13972}
!13971 = !DILocalVariable(name: "thread", arg: 1, scope: !13967, file: !2233, line: 187, type: !2237)
!13972 = !DILocalVariable(name: "value", arg: 2, scope: !13967, file: !2233, line: 187, type: !155)
!13973 = !DILocation(line: 0, scope: !13967)
!13974 = !DILocation(line: 206, column: 2, scope: !13967)
!13975 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2233, file: !2233, line: 238, type: !13976, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !13978)
!13976 = !DISubroutineType(types: !13977)
!13977 = !{!155, !2237}
!13978 = !{!13979}
!13979 = !DILocalVariable(name: "thread", arg: 1, scope: !13975, file: !2233, line: 238, type: !2237)
!13980 = !DILocation(line: 0, scope: !13975)
!13981 = !DILocation(line: 244, column: 2, scope: !13975)
!13982 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2233, file: !2233, line: 248, type: !13983, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !13985)
!13983 = !DISubroutineType(types: !13984)
!13984 = !{!103, !2236, !1083, !356}
!13985 = !{!13986, !13987, !13988}
!13986 = !DILocalVariable(name: "thread", arg: 1, scope: !13982, file: !2233, line: 248, type: !2236)
!13987 = !DILocalVariable(name: "buf", arg: 2, scope: !13982, file: !2233, line: 248, type: !1083)
!13988 = !DILocalVariable(name: "size", arg: 3, scope: !13982, file: !2233, line: 248, type: !356)
!13989 = !DILocation(line: 0, scope: !13982)
!13990 = !DILocation(line: 257, column: 2, scope: !13982)
!13991 = !DILocation(line: 0, scope: !2232)
!13992 = !DILocation(line: 281, column: 11, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !2232, file: !2233, line: 281, column: 6)
!13994 = !DILocation(line: 281, column: 20, scope: !13993)
!13995 = !DILocation(line: 275, column: 45, scope: !2232)
!13996 = !DILocation(line: 285, column: 10, scope: !2232)
!13997 = !DILocation(line: 0, scope: !2353)
!13998 = !DILocation(line: 293, column: 39, scope: !13999)
!13999 = distinct !DILexicalBlock(scope: !2353, file: !2233, line: 293, column: 2)
!14000 = !DILocation(line: 293, column: 2, scope: !2353)
!14001 = !DILocation(line: 273, column: 14, scope: !2232)
!14002 = !DILocation(line: 309, column: 2, scope: !2232)
!14003 = !DILocation(line: 309, column: 11, scope: !2232)
!14004 = !DILocation(line: 311, column: 2, scope: !2232)
!14005 = !DILocation(line: 293, column: 26, scope: !13999)
!14006 = !DILocation(line: 294, column: 9, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !13999, file: !2233, line: 293, column: 54)
!14008 = !DILocation(line: 295, column: 21, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !14007, file: !2233, line: 295, column: 7)
!14010 = !DILocation(line: 295, column: 28, scope: !14009)
!14011 = !DILocation(line: 295, column: 7, scope: !14007)
!14012 = !DILocation(line: 299, column: 25, scope: !14007)
!14013 = !DILocation(line: 299, column: 41, scope: !14007)
!14014 = !DILocation(line: 300, column: 7, scope: !14007)
!14015 = !DILocation(line: 300, column: 26, scope: !14007)
!14016 = !DILocation(line: 299, column: 10, scope: !14007)
!14017 = !DILocation(line: 299, column: 7, scope: !14007)
!14018 = !DILocation(line: 302, column: 16, scope: !14007)
!14019 = !DILocation(line: 304, column: 20, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !14007, file: !2233, line: 304, column: 7)
!14021 = !DILocation(line: 304, column: 7, scope: !14007)
!14022 = !DILocation(line: 305, column: 26, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14020, file: !2233, line: 304, column: 26)
!14024 = !DILocation(line: 305, column: 42, scope: !14023)
!14025 = !DILocation(line: 305, column: 11, scope: !14023)
!14026 = !DILocation(line: 305, column: 8, scope: !14023)
!14027 = !DILocation(line: 306, column: 3, scope: !14023)
!14028 = !DILocation(line: 293, column: 50, scope: !13999)
!14029 = !DILocation(line: 312, column: 1, scope: !2232)
!14030 = distinct !DISubprogram(name: "copy_bytes", scope: !2233, file: !2233, line: 261, type: !14031, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14033)
!14031 = !DISubroutineType(types: !14032)
!14032 = !{!356, !1083, !356, !155, !356}
!14033 = !{!14034, !14035, !14036, !14037, !14038}
!14034 = !DILocalVariable(name: "dest", arg: 1, scope: !14030, file: !2233, line: 261, type: !1083)
!14035 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14030, file: !2233, line: 261, type: !356)
!14036 = !DILocalVariable(name: "src", arg: 3, scope: !14030, file: !2233, line: 261, type: !155)
!14037 = !DILocalVariable(name: "src_size", arg: 4, scope: !14030, file: !2233, line: 261, type: !356)
!14038 = !DILocalVariable(name: "bytes_to_copy", scope: !14030, file: !2233, line: 263, type: !356)
!14039 = !DILocation(line: 0, scope: !14030)
!14040 = !DILocation(line: 265, column: 18, scope: !14030)
!14041 = !DILocation(line: 266, column: 2, scope: !14030)
!14042 = !DILocation(line: 268, column: 2, scope: !14030)
!14043 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2233, file: !2233, line: 383, type: !14044, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14046)
!14044 = !DISubroutineType(types: !14045)
!14045 = !{null, !2237}
!14046 = !{!14047}
!14047 = !DILocalVariable(name: "thread", arg: 1, scope: !14043, file: !2233, line: 383, type: !2237)
!14048 = !DILocation(line: 0, scope: !14043)
!14049 = !DILocation(line: 387, column: 2, scope: !14043)
!14050 = !DILocation(line: 388, column: 1, scope: !14043)
!14051 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2233, file: !2233, line: 528, type: !14052, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14059)
!14052 = !DISubroutineType(types: !14053)
!14053 = !{!1083, !2237, !14054, !356, !3574, !102, !102, !102, !103, !132, !155}
!14054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14055, size: 32)
!14055 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3575, line: 44, baseType: !14056)
!14056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2187, line: 47, size: 8, elements: !14057)
!14057 = !{!14058}
!14058 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14056, file: !2187, line: 48, baseType: !108, size: 8)
!14059 = !{!14060, !14061, !14062, !14063, !14064, !14065, !14066, !14067, !14068, !14069, !14070}
!14060 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14051, file: !2233, line: 528, type: !2237)
!14061 = !DILocalVariable(name: "stack", arg: 2, scope: !14051, file: !2233, line: 529, type: !14054)
!14062 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14051, file: !2233, line: 529, type: !356)
!14063 = !DILocalVariable(name: "entry", arg: 4, scope: !14051, file: !2233, line: 530, type: !3574)
!14064 = !DILocalVariable(name: "p1", arg: 5, scope: !14051, file: !2233, line: 531, type: !102)
!14065 = !DILocalVariable(name: "p2", arg: 6, scope: !14051, file: !2233, line: 531, type: !102)
!14066 = !DILocalVariable(name: "p3", arg: 7, scope: !14051, file: !2233, line: 531, type: !102)
!14067 = !DILocalVariable(name: "prio", arg: 8, scope: !14051, file: !2233, line: 532, type: !103)
!14068 = !DILocalVariable(name: "options", arg: 9, scope: !14051, file: !2233, line: 532, type: !132)
!14069 = !DILocalVariable(name: "name", arg: 10, scope: !14051, file: !2233, line: 532, type: !155)
!14070 = !DILocalVariable(name: "stack_ptr", scope: !14051, file: !2233, line: 534, type: !1083)
!14071 = !DILocation(line: 0, scope: !14051)
!14072 = !DILocation(line: 550, column: 28, scope: !14051)
!14073 = !DILocation(line: 550, column: 2, scope: !14051)
!14074 = !DILocation(line: 553, column: 34, scope: !14051)
!14075 = !DILocation(line: 553, column: 2, scope: !14051)
!14076 = !DILocation(line: 554, column: 14, scope: !14051)
!14077 = !DILocation(line: 564, column: 2, scope: !14051)
!14078 = !DILocation(line: 567, column: 14, scope: !14051)
!14079 = !DILocation(line: 567, column: 24, scope: !14051)
!14080 = !DILocation(line: 612, column: 7, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14051, file: !2233, line: 612, column: 6)
!14082 = !DILocation(line: 612, column: 6, scope: !14051)
!14083 = !DILocation(line: 627, column: 40, scope: !14051)
!14084 = !DILocation(line: 637, column: 2, scope: !14051)
!14085 = !DILocation(line: 613, column: 15, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14081, file: !2233, line: 612, column: 17)
!14087 = !DILocation(line: 613, column: 29, scope: !14086)
!14088 = !DILocation(line: 638, column: 1, scope: !14051)
!14089 = distinct !DISubprogram(name: "z_waitq_init", scope: !14090, file: !14090, line: 47, type: !14091, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14093)
!14090 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14091 = !DISubroutineType(types: !14092)
!14092 = !{null, !2268}
!14093 = !{!14094}
!14094 = !DILocalVariable(name: "w", arg: 1, scope: !14089, file: !14090, line: 47, type: !2268)
!14095 = !DILocation(line: 0, scope: !14089)
!14096 = !DILocation(line: 49, column: 21, scope: !14089)
!14097 = !DILocation(line: 49, column: 2, scope: !14089)
!14098 = !DILocation(line: 50, column: 1, scope: !14089)
!14099 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2233, file: !2233, line: 791, type: !14100, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14103)
!14100 = !DISubroutineType(types: !14101)
!14101 = !{null, !14102, !103, !132, !32}
!14102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!14103 = !{!14104, !14105, !14106, !14107}
!14104 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14099, file: !2233, line: 791, type: !14102)
!14105 = !DILocalVariable(name: "priority", arg: 2, scope: !14099, file: !2233, line: 791, type: !103)
!14106 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14099, file: !2233, line: 792, type: !132)
!14107 = !DILocalVariable(name: "options", arg: 4, scope: !14099, file: !2233, line: 792, type: !32)
!14108 = !DILocation(line: 0, scope: !14099)
!14109 = !DILocation(line: 795, column: 15, scope: !14099)
!14110 = !DILocation(line: 795, column: 25, scope: !14099)
!14111 = !DILocation(line: 796, column: 30, scope: !14099)
!14112 = !DILocation(line: 796, column: 15, scope: !14099)
!14113 = !DILocation(line: 796, column: 28, scope: !14099)
!14114 = !DILocation(line: 797, column: 30, scope: !14099)
!14115 = !DILocation(line: 797, column: 15, scope: !14099)
!14116 = !DILocation(line: 797, column: 28, scope: !14099)
!14117 = !DILocation(line: 799, column: 22, scope: !14099)
!14118 = !DILocation(line: 799, column: 15, scope: !14099)
!14119 = !DILocation(line: 799, column: 20, scope: !14099)
!14120 = !DILocation(line: 801, column: 15, scope: !14099)
!14121 = !DILocation(line: 801, column: 28, scope: !14099)
!14122 = !DILocation(line: 814, column: 2, scope: !14099)
!14123 = !DILocation(line: 815, column: 1, scope: !14099)
!14124 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2233, file: !2233, line: 449, type: !14125, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14127)
!14125 = !DISubroutineType(types: !14126)
!14126 = !{!1083, !2237, !14054, !356}
!14127 = !{!14128, !14129, !14130, !14131, !14132, !14133, !14134, !14135}
!14128 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14124, file: !2233, line: 449, type: !2237)
!14129 = !DILocalVariable(name: "stack", arg: 2, scope: !14124, file: !2233, line: 450, type: !14054)
!14130 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14124, file: !2233, line: 450, type: !356)
!14131 = !DILocalVariable(name: "stack_obj_size", scope: !14124, file: !2233, line: 452, type: !356)
!14132 = !DILocalVariable(name: "stack_buf_size", scope: !14124, file: !2233, line: 452, type: !356)
!14133 = !DILocalVariable(name: "stack_ptr", scope: !14124, file: !2233, line: 453, type: !1083)
!14134 = !DILocalVariable(name: "stack_buf_start", scope: !14124, file: !2233, line: 453, type: !1083)
!14135 = !DILocalVariable(name: "delta", scope: !14124, file: !2233, line: 454, type: !356)
!14136 = !DILocation(line: 0, scope: !14124)
!14137 = !DILocation(line: 465, column: 20, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14124, file: !2233, line: 463, column: 2)
!14139 = !DILocation(line: 466, column: 21, scope: !14138)
!14140 = !DILocation(line: 473, column: 28, scope: !14124)
!14141 = !DILocation(line: 514, column: 33, scope: !14124)
!14142 = !DILocation(line: 514, column: 25, scope: !14124)
!14143 = !DILocation(line: 514, column: 31, scope: !14124)
!14144 = !DILocation(line: 515, column: 25, scope: !14124)
!14145 = !DILocation(line: 515, column: 30, scope: !14124)
!14146 = !DILocation(line: 516, column: 25, scope: !14124)
!14147 = !DILocation(line: 516, column: 31, scope: !14124)
!14148 = !DILocation(line: 520, column: 2, scope: !14124)
!14149 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2187, file: !2187, line: 331, type: !14150, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14152)
!14150 = !DISubroutineType(types: !14151)
!14151 = !{!1083, !14054}
!14152 = !{!14153}
!14153 = !DILocalVariable(name: "sym", arg: 1, scope: !14149, file: !2187, line: 331, type: !14054)
!14154 = !DILocation(line: 0, scope: !14149)
!14155 = !DILocation(line: 333, column: 21, scope: !14149)
!14156 = !DILocation(line: 333, column: 2, scope: !14149)
!14157 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14158, file: !14158, line: 40, type: !14159, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14161)
!14158 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14159 = !DISubroutineType(types: !14160)
!14160 = !{null, !14102}
!14161 = !{!14162}
!14162 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14157, file: !14158, line: 40, type: !14102)
!14163 = !DILocation(line: 0, scope: !14157)
!14164 = !DILocation(line: 42, column: 31, scope: !14157)
!14165 = !DILocation(line: 42, column: 2, scope: !14157)
!14166 = !DILocation(line: 43, column: 1, scope: !14157)
!14167 = distinct !DISubprogram(name: "z_init_timeout", scope: !14158, file: !14158, line: 25, type: !2294, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14168)
!14168 = !{!14169}
!14169 = !DILocalVariable(name: "to", arg: 1, scope: !14167, file: !14158, line: 25, type: !2296)
!14170 = !DILocation(line: 0, scope: !14167)
!14171 = !DILocation(line: 27, column: 22, scope: !14167)
!14172 = !DILocation(line: 27, column: 2, scope: !14167)
!14173 = !DILocation(line: 28, column: 1, scope: !14167)
!14174 = distinct !DISubprogram(name: "sys_dnode_init", scope: !321, file: !321, line: 211, type: !14175, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14177)
!14175 = !DISubroutineType(types: !14176)
!14176 = !{null, !2340}
!14177 = !{!14178}
!14178 = !DILocalVariable(name: "node", arg: 1, scope: !14174, file: !321, line: 211, type: !2340)
!14179 = !DILocation(line: 0, scope: !14174)
!14180 = !DILocation(line: 213, column: 8, scope: !14174)
!14181 = !DILocation(line: 213, column: 13, scope: !14174)
!14182 = !DILocation(line: 214, column: 8, scope: !14174)
!14183 = !DILocation(line: 214, column: 13, scope: !14174)
!14184 = !DILocation(line: 215, column: 1, scope: !14174)
!14185 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !14186, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14189)
!14186 = !DISubroutineType(types: !14187)
!14187 = !{null, !14188}
!14188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 32)
!14189 = !{!14190}
!14190 = !DILocalVariable(name: "list", arg: 1, scope: !14185, file: !321, line: 197, type: !14188)
!14191 = !DILocation(line: 0, scope: !14185)
!14192 = !DILocation(line: 199, column: 8, scope: !14185)
!14193 = !DILocation(line: 199, column: 13, scope: !14185)
!14194 = !DILocation(line: 200, column: 8, scope: !14185)
!14195 = !DILocation(line: 200, column: 13, scope: !14185)
!14196 = !DILocation(line: 201, column: 1, scope: !14185)
!14197 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2233, file: !2233, line: 641, type: !14198, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14204)
!14198 = !DISubroutineType(types: !14199)
!14199 = !{!2236, !2237, !14054, !356, !3574, !102, !102, !102, !103, !132, !14200}
!14200 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1721, line: 67, baseType: !14201)
!14201 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1721, line: 65, size: 64, elements: !14202)
!14202 = !{!14203}
!14203 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14201, file: !1721, line: 66, baseType: !1720, size: 64)
!14204 = !{!14205, !14206, !14207, !14208, !14209, !14210, !14211, !14212, !14213, !14214}
!14205 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14197, file: !2233, line: 641, type: !2237)
!14206 = !DILocalVariable(name: "stack", arg: 2, scope: !14197, file: !2233, line: 642, type: !14054)
!14207 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14197, file: !2233, line: 643, type: !356)
!14208 = !DILocalVariable(name: "entry", arg: 4, scope: !14197, file: !2233, line: 643, type: !3574)
!14209 = !DILocalVariable(name: "p1", arg: 5, scope: !14197, file: !2233, line: 644, type: !102)
!14210 = !DILocalVariable(name: "p2", arg: 6, scope: !14197, file: !2233, line: 644, type: !102)
!14211 = !DILocalVariable(name: "p3", arg: 7, scope: !14197, file: !2233, line: 644, type: !102)
!14212 = !DILocalVariable(name: "prio", arg: 8, scope: !14197, file: !2233, line: 645, type: !103)
!14213 = !DILocalVariable(name: "options", arg: 9, scope: !14197, file: !2233, line: 645, type: !132)
!14214 = !DILocalVariable(name: "delay", arg: 10, scope: !14197, file: !2233, line: 645, type: !14200)
!14215 = !DILocation(line: 0, scope: !14197)
!14216 = !DILocation(line: 649, column: 2, scope: !14197)
!14217 = !DILocation(line: 652, column: 7, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14197, file: !2233, line: 652, column: 6)
!14219 = !DILocation(line: 652, column: 6, scope: !14197)
!14220 = !DILocation(line: 653, column: 3, scope: !14221)
!14221 = distinct !DILexicalBlock(scope: !14218, file: !2233, line: 652, column: 39)
!14222 = !DILocation(line: 654, column: 2, scope: !14221)
!14223 = !DILocation(line: 656, column: 2, scope: !14197)
!14224 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2233, file: !2233, line: 401, type: !14225, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14227)
!14225 = !DISubroutineType(types: !14226)
!14226 = !{null, !2237, !14200}
!14227 = !{!14228, !14229}
!14228 = !DILocalVariable(name: "thread", arg: 1, scope: !14224, file: !2233, line: 401, type: !2237)
!14229 = !DILocalVariable(name: "delay", arg: 2, scope: !14224, file: !2233, line: 401, type: !14200)
!14230 = !DILocation(line: 0, scope: !14224)
!14231 = !DILocation(line: 404, column: 6, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !14224, file: !2233, line: 404, column: 6)
!14233 = !DILocation(line: 404, column: 6, scope: !14224)
!14234 = !DILocation(line: 405, column: 3, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14232, file: !2233, line: 404, column: 38)
!14236 = !DILocation(line: 406, column: 2, scope: !14235)
!14237 = !DILocation(line: 407, column: 3, scope: !14238)
!14238 = distinct !DILexicalBlock(scope: !14232, file: !2233, line: 406, column: 9)
!14239 = !DILocation(line: 413, column: 1, scope: !14224)
!14240 = distinct !DISubprogram(name: "k_thread_start", scope: !3696, file: !3696, line: 205, type: !14241, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14243)
!14241 = !DISubroutineType(types: !14242)
!14242 = !{null, !2236}
!14243 = !{!14244}
!14244 = !DILocalVariable(name: "thread", arg: 1, scope: !14240, file: !3696, line: 205, type: !2236)
!14245 = !DILocation(line: 0, scope: !14240)
!14246 = !DILocation(line: 214, column: 2, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14240, file: !3696, line: 214, column: 2)
!14248 = !{i64 2154867103}
!14249 = !DILocation(line: 215, column: 2, scope: !14240)
!14250 = !DILocation(line: 216, column: 1, scope: !14240)
!14251 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14158, file: !14158, line: 47, type: !14225, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14252)
!14252 = !{!14253, !14254}
!14253 = !DILocalVariable(name: "thread", arg: 1, scope: !14251, file: !14158, line: 47, type: !2237)
!14254 = !DILocalVariable(name: "ticks", arg: 2, scope: !14251, file: !14158, line: 47, type: !14200)
!14255 = !DILocation(line: 0, scope: !14251)
!14256 = !DILocation(line: 49, column: 30, scope: !14251)
!14257 = !DILocation(line: 49, column: 2, scope: !14251)
!14258 = !DILocation(line: 50, column: 1, scope: !14251)
!14259 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2233, file: !2233, line: 748, type: !3256, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14260)
!14260 = !{!14261, !14279}
!14261 = !DILocalVariable(name: "thread_data", scope: !14262, file: !2233, line: 750, type: !14263)
!14262 = distinct !DILexicalBlock(scope: !14259, file: !2233, line: 750, column: 2)
!14263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14264, size: 32)
!14264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !312, line: 620, size: 384, elements: !14265)
!14265 = !{!14266, !14267, !14268, !14269, !14270, !14271, !14272, !14273, !14274, !14275, !14276, !14278}
!14266 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14264, file: !312, line: 621, baseType: !2237, size: 32)
!14267 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14264, file: !312, line: 622, baseType: !14054, size: 32, offset: 32)
!14268 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14264, file: !312, line: 623, baseType: !32, size: 32, offset: 64)
!14269 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14264, file: !312, line: 624, baseType: !3574, size: 32, offset: 96)
!14270 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14264, file: !312, line: 625, baseType: !102, size: 32, offset: 128)
!14271 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14264, file: !312, line: 626, baseType: !102, size: 32, offset: 160)
!14272 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14264, file: !312, line: 627, baseType: !102, size: 32, offset: 192)
!14273 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14264, file: !312, line: 628, baseType: !103, size: 32, offset: 224)
!14274 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14264, file: !312, line: 629, baseType: !132, size: 32, offset: 256)
!14275 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14264, file: !312, line: 630, baseType: !344, size: 32, offset: 288)
!14276 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14264, file: !312, line: 631, baseType: !14277, size: 32, offset: 320)
!14277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 32)
!14278 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14264, file: !312, line: 632, baseType: !155, size: 32, offset: 352)
!14279 = !DILocalVariable(name: "thread_data", scope: !14280, file: !2233, line: 781, type: !14263)
!14280 = distinct !DILexicalBlock(scope: !14259, file: !2233, line: 781, column: 2)
!14281 = !DILocation(line: 0, scope: !14262)
!14282 = !DILocation(line: 750, column: 2, scope: !14262)
!14283 = !DILocation(line: 780, column: 2, scope: !14259)
!14284 = !DILocation(line: 0, scope: !14280)
!14285 = !DILocation(line: 781, column: 2, scope: !14280)
!14286 = !DILocation(line: 752, column: 17, scope: !14287)
!14287 = distinct !DILexicalBlock(scope: !14288, file: !2233, line: 750, column: 38)
!14288 = distinct !DILexicalBlock(scope: !14262, file: !2233, line: 750, column: 2)
!14289 = !DILocation(line: 753, column: 17, scope: !14287)
!14290 = !DILocation(line: 754, column: 17, scope: !14287)
!14291 = !DILocation(line: 755, column: 17, scope: !14287)
!14292 = !DILocation(line: 756, column: 17, scope: !14287)
!14293 = !DILocation(line: 757, column: 17, scope: !14287)
!14294 = !DILocation(line: 758, column: 17, scope: !14287)
!14295 = !DILocation(line: 759, column: 17, scope: !14287)
!14296 = !DILocation(line: 760, column: 17, scope: !14287)
!14297 = !DILocation(line: 751, column: 3, scope: !14287)
!14298 = !DILocation(line: 763, column: 16, scope: !14287)
!14299 = !DILocation(line: 763, column: 29, scope: !14287)
!14300 = !DILocation(line: 763, column: 39, scope: !14287)
!14301 = !DILocation(line: 750, column: 2, scope: !14288)
!14302 = !DILocation(line: 750, column: 2, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14288, file: !2233, line: 750, column: 2)
!14304 = distinct !{!14304, !14282, !14305}
!14305 = !DILocation(line: 764, column: 2, scope: !14262)
!14306 = !DILocation(line: 787, column: 2, scope: !14259)
!14307 = !DILocation(line: 788, column: 1, scope: !14259)
!14308 = !DILocation(line: 782, column: 20, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14310, file: !2233, line: 782, column: 7)
!14310 = distinct !DILexicalBlock(scope: !14311, file: !2233, line: 781, column: 38)
!14311 = distinct !DILexicalBlock(scope: !14280, file: !2233, line: 781, column: 2)
!14312 = !DILocation(line: 782, column: 31, scope: !14309)
!14313 = !DILocation(line: 782, column: 7, scope: !14310)
!14314 = !DILocation(line: 783, column: 37, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14309, file: !2233, line: 782, column: 51)
!14316 = !DILocation(line: 784, column: 10, scope: !14315)
!14317 = !DILocation(line: 783, column: 4, scope: !14315)
!14318 = !DILocation(line: 785, column: 3, scope: !14315)
!14319 = !DILocation(line: 781, column: 2, scope: !14311)
!14320 = !DILocation(line: 781, column: 2, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14311, file: !2233, line: 781, column: 2)
!14322 = distinct !{!14322, !14285, !14323}
!14323 = !DILocation(line: 786, column: 2, scope: !14280)
!14324 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !6023, file: !6023, line: 403, type: !6024, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14325)
!14325 = !{!14326}
!14326 = !DILocalVariable(name: "t", arg: 1, scope: !14324, file: !6023, line: 403, type: !1617)
!14327 = !DILocation(line: 0, scope: !14324)
!14328 = !DILocalVariable(name: "t", arg: 1, scope: !14329, file: !6023, line: 102, type: !1617)
!14329 = distinct !DISubprogram(name: "z_tmcvt", scope: !6023, file: !6023, line: 102, type: !6031, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14330)
!14330 = !{!14328, !14331, !14332, !14333, !14334, !14335, !14336, !14337, !14338, !14339, !14340}
!14331 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14329, file: !6023, line: 102, type: !132)
!14332 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14329, file: !6023, line: 103, type: !132)
!14333 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14329, file: !6023, line: 103, type: !166)
!14334 = !DILocalVariable(name: "result32", arg: 5, scope: !14329, file: !6023, line: 104, type: !166)
!14335 = !DILocalVariable(name: "round_up", arg: 6, scope: !14329, file: !6023, line: 104, type: !166)
!14336 = !DILocalVariable(name: "round_off", arg: 7, scope: !14329, file: !6023, line: 105, type: !166)
!14337 = !DILocalVariable(name: "mul_ratio", scope: !14329, file: !6023, line: 107, type: !166)
!14338 = !DILocalVariable(name: "div_ratio", scope: !14329, file: !6023, line: 109, type: !166)
!14339 = !DILocalVariable(name: "off", scope: !14329, file: !6023, line: 116, type: !1617)
!14340 = !DILocalVariable(name: "rdivisor", scope: !14341, file: !6023, line: 119, type: !132)
!14341 = distinct !DILexicalBlock(scope: !14342, file: !6023, line: 118, column: 18)
!14342 = distinct !DILexicalBlock(scope: !14329, file: !6023, line: 118, column: 6)
!14343 = !DILocation(line: 0, scope: !14329, inlinedAt: !14344)
!14344 = distinct !DILocation(line: 406, column: 9, scope: !14324)
!14345 = !DILocation(line: 145, column: 13, scope: !14346, inlinedAt: !14344)
!14346 = distinct !DILexicalBlock(scope: !14347, file: !6023, line: 144, column: 10)
!14347 = distinct !DILexicalBlock(scope: !14348, file: !6023, line: 142, column: 7)
!14348 = distinct !DILexicalBlock(scope: !14349, file: !6023, line: 141, column: 24)
!14349 = distinct !DILexicalBlock(scope: !14350, file: !6023, line: 141, column: 13)
!14350 = distinct !DILexicalBlock(scope: !14329, file: !6023, line: 134, column: 6)
!14351 = !DILocation(line: 406, column: 2, scope: !14324)
!14352 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2233, file: !2233, line: 817, type: !3572, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14353)
!14353 = !{!14354, !14355, !14356, !14357}
!14354 = !DILocalVariable(name: "entry", arg: 1, scope: !14352, file: !2233, line: 817, type: !3574)
!14355 = !DILocalVariable(name: "p1", arg: 2, scope: !14352, file: !2233, line: 818, type: !102)
!14356 = !DILocalVariable(name: "p2", arg: 3, scope: !14352, file: !2233, line: 818, type: !102)
!14357 = !DILocalVariable(name: "p3", arg: 4, scope: !14352, file: !2233, line: 818, type: !102)
!14358 = !DILocation(line: 0, scope: !14352)
!14359 = !DILocation(line: 822, column: 2, scope: !14352)
!14360 = !DILocation(line: 822, column: 17, scope: !14352)
!14361 = !DILocation(line: 822, column: 30, scope: !14352)
!14362 = !DILocation(line: 823, column: 2, scope: !14352)
!14363 = !DILocation(line: 845, column: 2, scope: !14352)
!14364 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2233, file: !2233, line: 888, type: !14365, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14367)
!14365 = !DISubroutineType(types: !14366)
!14366 = !{!103, !2237}
!14367 = !{!14368}
!14368 = !DILocalVariable(name: "thread", arg: 1, scope: !14364, file: !2233, line: 888, type: !2237)
!14369 = !DILocation(line: 0, scope: !14364)
!14370 = !DILocation(line: 893, column: 2, scope: !14364)
!14371 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2233, file: !2233, line: 897, type: !14372, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14374)
!14372 = !DISubroutineType(types: !14373)
!14373 = !{!103, !2237, !32}
!14374 = !{!14375, !14376}
!14375 = !DILocalVariable(name: "thread", arg: 1, scope: !14371, file: !2233, line: 897, type: !2237)
!14376 = !DILocalVariable(name: "options", arg: 2, scope: !14371, file: !2233, line: 897, type: !32)
!14377 = !DILocation(line: 0, scope: !14371)
!14378 = !DILocation(line: 902, column: 2, scope: !14371)
!14379 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2233, file: !2233, line: 1072, type: !14380, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14385)
!14380 = !DISubroutineType(types: !14381)
!14381 = !{!103, !2236, !14382}
!14382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14383, size: 32)
!14383 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !367, line: 234, baseType: !14384)
!14384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !367, line: 192, elements: !473)
!14385 = !{!14386, !14387}
!14386 = !DILocalVariable(name: "thread", arg: 1, scope: !14379, file: !2233, line: 1072, type: !2236)
!14387 = !DILocalVariable(name: "stats", arg: 2, scope: !14379, file: !2233, line: 1073, type: !14382)
!14388 = !DILocation(line: 0, scope: !14379)
!14389 = !DILocation(line: 1075, column: 14, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14379, file: !2233, line: 1075, column: 6)
!14391 = !DILocation(line: 1075, column: 23, scope: !14390)
!14392 = !DILocation(line: 1086, column: 1, scope: !14379)
!14393 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2233, file: !2233, line: 1088, type: !14394, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14396)
!14394 = !DISubroutineType(types: !14395)
!14395 = !{!103, !14382}
!14396 = !{!14397}
!14397 = !DILocalVariable(name: "stats", arg: 1, scope: !14393, file: !2233, line: 1088, type: !14382)
!14398 = !DILocation(line: 0, scope: !14393)
!14399 = !DILocation(line: 1094, column: 12, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14393, file: !2233, line: 1094, column: 6)
!14401 = !DILocation(line: 1120, column: 1, scope: !14393)
!14402 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14403, file: !14403, line: 20, type: !3256, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !473)
!14403 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14404 = !DILocation(line: 30, column: 2, scope: !14402)
!14405 = !DILocation(line: 31, column: 1, scope: !14402)
!14406 = distinct !DISubprogram(name: "idle", scope: !14403, file: !14403, line: 33, type: !3577, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14407)
!14407 = !{!14408, !14409, !14410}
!14408 = !DILocalVariable(name: "unused1", arg: 1, scope: !14406, file: !14403, line: 33, type: !102)
!14409 = !DILocalVariable(name: "unused2", arg: 2, scope: !14406, file: !14403, line: 33, type: !102)
!14410 = !DILocalVariable(name: "unused3", arg: 3, scope: !14406, file: !14403, line: 33, type: !102)
!14411 = !DILocation(line: 0, scope: !14406)
!14412 = !DILocation(line: 41, column: 2, scope: !14406)
!14413 = !DILocation(line: 55, column: 2, scope: !14414, inlinedAt: !14418)
!14414 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5823, file: !5823, line: 42, type: !5824, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14415)
!14415 = !{!14416, !14417}
!14416 = !DILocalVariable(name: "key", scope: !14414, file: !5823, line: 44, type: !32)
!14417 = !DILocalVariable(name: "tmp", scope: !14414, file: !5823, line: 53, type: !32)
!14418 = distinct !DILocation(line: 62, column: 10, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14406, file: !14403, line: 41, column: 15)
!14420 = !{i64 2222459}
!14421 = !DILocation(line: 0, scope: !14414, inlinedAt: !14418)
!14422 = !DILocation(line: 86, column: 3, scope: !14419)
!14423 = distinct !{!14423, !14412, !14424}
!14424 = !DILocation(line: 105, column: 2, scope: !14406)
!14425 = distinct !DISubprogram(name: "k_cpu_idle", scope: !312, file: !312, line: 5627, type: !3256, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !473)
!14426 = !DILocation(line: 5629, column: 2, scope: !14425)
!14427 = !DILocation(line: 5630, column: 1, scope: !14425)
!14428 = !DISubprogram(name: "arch_cpu_idle", scope: !3575, file: !3575, line: 167, type: !3256, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!14429 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2376, file: !2376, line: 41, type: !14430, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !14443)
!14430 = !DISubroutineType(types: !14431)
!14431 = !{!103, !14432, !32, !32}
!14432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14433, size: 32)
!14433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !312, line: 2909, size: 128, elements: !14434)
!14434 = !{!14435, !14441, !14442}
!14435 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14433, file: !312, line: 2910, baseType: !14436, size: 64)
!14436 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !14437)
!14437 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !14438)
!14438 = !{!14439}
!14439 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14437, file: !316, line: 232, baseType: !14440, size: 64)
!14440 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2362)
!14441 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !14433, file: !312, line: 2911, baseType: !32, size: 32, offset: 64)
!14442 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !14433, file: !312, line: 2912, baseType: !32, size: 32, offset: 96)
!14443 = !{!14444, !14445, !14446}
!14444 = !DILocalVariable(name: "sem", arg: 1, scope: !14429, file: !2376, line: 41, type: !14432)
!14445 = !DILocalVariable(name: "initial_count", arg: 2, scope: !14429, file: !2376, line: 41, type: !32)
!14446 = !DILocalVariable(name: "limit", arg: 3, scope: !14429, file: !2376, line: 42, type: !32)
!14447 = !DILocation(line: 0, scope: !14429)
!14448 = !DILocation(line: 47, column: 2, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14429, file: !2376, line: 47, column: 2)
!14450 = !DILocation(line: 53, column: 7, scope: !14429)
!14451 = !DILocation(line: 53, column: 13, scope: !14429)
!14452 = !DILocation(line: 54, column: 7, scope: !14429)
!14453 = !DILocation(line: 54, column: 13, scope: !14429)
!14454 = !DILocation(line: 58, column: 21, scope: !14429)
!14455 = !DILocation(line: 58, column: 2, scope: !14429)
!14456 = !DILocation(line: 64, column: 2, scope: !14429)
!14457 = !DILocation(line: 65, column: 1, scope: !14429)
!14458 = distinct !DISubprogram(name: "z_waitq_init", scope: !14090, file: !14090, line: 47, type: !14459, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !14462)
!14459 = !DISubroutineType(types: !14460)
!14460 = !{null, !14461}
!14461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14436, size: 32)
!14462 = !{!14463}
!14463 = !DILocalVariable(name: "w", arg: 1, scope: !14458, file: !14090, line: 47, type: !14461)
!14464 = !DILocation(line: 0, scope: !14458)
!14465 = !DILocation(line: 49, column: 21, scope: !14458)
!14466 = !DILocation(line: 49, column: 2, scope: !14458)
!14467 = !DILocation(line: 50, column: 1, scope: !14458)
!14468 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !14469, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !14472)
!14469 = !DISubroutineType(types: !14470)
!14470 = !{null, !14471}
!14471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14440, size: 32)
!14472 = !{!14473}
!14473 = !DILocalVariable(name: "list", arg: 1, scope: !14468, file: !321, line: 197, type: !14471)
!14474 = !DILocation(line: 0, scope: !14468)
!14475 = !DILocation(line: 199, column: 8, scope: !14468)
!14476 = !DILocation(line: 199, column: 13, scope: !14468)
!14477 = !DILocation(line: 200, column: 8, scope: !14468)
!14478 = !DILocation(line: 200, column: 13, scope: !14468)
!14479 = !DILocation(line: 201, column: 1, scope: !14468)
!14480 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2376, file: !2376, line: 86, type: !14481, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !14483)
!14481 = !DISubroutineType(types: !14482)
!14482 = !{null, !14432}
!14483 = !{!14484, !14485, !14490}
!14484 = !DILocalVariable(name: "sem", arg: 1, scope: !14480, file: !2376, line: 86, type: !14432)
!14485 = !DILocalVariable(name: "key", scope: !14480, file: !2376, line: 88, type: !14486)
!14486 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !14487)
!14487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !14488)
!14488 = !{!14489}
!14489 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14487, file: !472, line: 33, baseType: !103, size: 32)
!14490 = !DILocalVariable(name: "thread", scope: !14480, file: !2376, line: 89, type: !14491)
!14491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14492, size: 32)
!14492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !14493)
!14493 = !{!14494, !14532, !14544, !14545, !14546, !14547, !14553, !14565}
!14494 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14492, file: !367, line: 247, baseType: !14495, size: 384)
!14495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !14496)
!14496 = !{!14497, !14507, !14508, !14509, !14510, !14519, !14520, !14521}
!14497 = !DIDerivedType(tag: DW_TAG_member, scope: !14495, file: !367, line: 60, baseType: !14498, size: 64)
!14498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14495, file: !367, line: 60, size: 64, elements: !14499)
!14499 = !{!14500, !14501}
!14500 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14498, file: !367, line: 61, baseType: !2361, size: 64)
!14501 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14498, file: !367, line: 62, baseType: !14502, size: 64)
!14502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !14503)
!14503 = !{!14504}
!14504 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14502, file: !392, line: 50, baseType: !14505, size: 64)
!14505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14506, size: 64, elements: !397)
!14506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14502, size: 32)
!14507 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14495, file: !367, line: 68, baseType: !14461, size: 32, offset: 64)
!14508 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14495, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!14509 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14495, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!14510 = !DIDerivedType(tag: DW_TAG_member, scope: !14495, file: !367, line: 90, baseType: !14511, size: 16, offset: 112)
!14511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14495, file: !367, line: 90, size: 16, elements: !14512)
!14512 = !{!14513, !14518}
!14513 = !DIDerivedType(tag: DW_TAG_member, scope: !14511, file: !367, line: 91, baseType: !14514, size: 16)
!14514 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14511, file: !367, line: 91, size: 16, elements: !14515)
!14515 = !{!14516, !14517}
!14516 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14514, file: !367, line: 96, baseType: !415, size: 8)
!14517 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14514, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!14518 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14511, file: !367, line: 100, baseType: !340, size: 16)
!14519 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14495, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!14520 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14495, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!14521 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14495, file: !367, line: 131, baseType: !14522, size: 192, offset: 192)
!14522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !14523)
!14523 = !{!14524, !14525, !14531}
!14524 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14522, file: !316, line: 245, baseType: !2361, size: 64)
!14525 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14522, file: !316, line: 246, baseType: !14526, size: 32, offset: 64)
!14526 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !14527)
!14527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14528, size: 32)
!14528 = !DISubroutineType(types: !14529)
!14529 = !{null, !14530}
!14530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14522, size: 32)
!14531 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14522, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!14532 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14492, file: !367, line: 250, baseType: !14533, size: 288, offset: 384)
!14533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !14534)
!14534 = !{!14535, !14536, !14537, !14538, !14539, !14540, !14541, !14542, !14543}
!14535 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14533, file: !436, line: 26, baseType: !132, size: 32)
!14536 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14533, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!14537 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14533, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!14538 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14533, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!14539 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14533, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!14540 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14533, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!14541 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14533, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!14542 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14533, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!14543 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14533, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!14544 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14492, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!14545 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14492, file: !367, line: 256, baseType: !14436, size: 64, offset: 704)
!14546 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14492, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!14547 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14492, file: !367, line: 300, baseType: !14548, size: 96, offset: 800)
!14548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !14549)
!14549 = !{!14550, !14551, !14552}
!14550 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14548, file: !367, line: 153, baseType: !22, size: 32)
!14551 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14548, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!14552 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14548, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!14553 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14492, file: !367, line: 325, baseType: !14554, size: 32, offset: 896)
!14554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14555, size: 32)
!14555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !14556)
!14556 = !{!14557, !14563, !14564}
!14557 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14555, file: !312, line: 5074, baseType: !14558, size: 96)
!14558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !14559)
!14559 = !{!14560, !14561, !14562}
!14560 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14558, file: !462, line: 57, baseType: !465, size: 32)
!14561 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14558, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!14562 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14558, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!14563 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14555, file: !312, line: 5075, baseType: !14436, size: 64, offset: 96)
!14564 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14555, file: !312, line: 5076, baseType: !2377, offset: 160)
!14565 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14492, file: !367, line: 343, baseType: !14566, size: 64, offset: 928)
!14566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !14567)
!14567 = !{!14568, !14569}
!14568 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14566, file: !436, line: 63, baseType: !132, size: 32)
!14569 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14566, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!14570 = !DILocation(line: 0, scope: !14480)
!14571 = !DILocalVariable(name: "l", arg: 1, scope: !14572, file: !472, line: 136, type: !14575)
!14572 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !14573, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !14576)
!14573 = !DISubroutineType(types: !14574)
!14574 = !{!14486, !14575}
!14575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!14576 = !{!14571, !14577}
!14577 = !DILocalVariable(name: "k", scope: !14572, file: !472, line: 139, type: !14486)
!14578 = !DILocation(line: 0, scope: !14572, inlinedAt: !14579)
!14579 = distinct !DILocation(line: 88, column: 25, scope: !14480)
!14580 = !DILocation(line: 55, column: 2, scope: !14581, inlinedAt: !14585)
!14581 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5823, file: !5823, line: 42, type: !5824, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !14582)
!14582 = !{!14583, !14584}
!14583 = !DILocalVariable(name: "key", scope: !14581, file: !5823, line: 44, type: !32)
!14584 = !DILocalVariable(name: "tmp", scope: !14581, file: !5823, line: 53, type: !32)
!14585 = distinct !DILocation(line: 145, column: 10, scope: !14572, inlinedAt: !14579)
!14586 = !{i64 2224021}
!14587 = !DILocation(line: 0, scope: !14581, inlinedAt: !14585)
!14588 = !DILocation(line: 93, column: 39, scope: !14480)
!14589 = !DILocation(line: 93, column: 11, scope: !14480)
!14590 = !DILocation(line: 95, column: 13, scope: !14591)
!14591 = distinct !DILexicalBlock(scope: !14480, file: !2376, line: 95, column: 6)
!14592 = !DILocation(line: 95, column: 6, scope: !14480)
!14593 = !DILocalVariable(name: "thread", arg: 1, scope: !14594, file: !13784, line: 65, type: !14491)
!14594 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13784, file: !13784, line: 65, type: !14595, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !14597)
!14595 = !DISubroutineType(types: !14596)
!14596 = !{null, !14491, !32}
!14597 = !{!14593, !14598}
!14598 = !DILocalVariable(name: "value", arg: 2, scope: !14594, file: !13784, line: 65, type: !32)
!14599 = !DILocation(line: 0, scope: !14594, inlinedAt: !14600)
!14600 = distinct !DILocation(line: 96, column: 3, scope: !14601)
!14601 = distinct !DILexicalBlock(scope: !14591, file: !2376, line: 95, column: 22)
!14602 = !DILocation(line: 67, column: 15, scope: !14594, inlinedAt: !14600)
!14603 = !DILocation(line: 67, column: 33, scope: !14594, inlinedAt: !14600)
!14604 = !DILocation(line: 97, column: 3, scope: !14601)
!14605 = !DILocation(line: 98, column: 2, scope: !14601)
!14606 = !DILocation(line: 99, column: 23, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14591, file: !2376, line: 98, column: 9)
!14608 = !DILocation(line: 99, column: 37, scope: !14607)
!14609 = !DILocation(line: 99, column: 29, scope: !14607)
!14610 = !DILocation(line: 99, column: 17, scope: !14607)
!14611 = !DILocation(line: 99, column: 14, scope: !14607)
!14612 = !DILocation(line: 103, column: 2, scope: !14480)
!14613 = !DILocation(line: 106, column: 1, scope: !14480)
!14614 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2376, file: !2376, line: 117, type: !14615, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !14621)
!14615 = !DISubroutineType(types: !14616)
!14616 = !{!103, !14432, !14617}
!14617 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1721, line: 67, baseType: !14618)
!14618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1721, line: 65, size: 64, elements: !14619)
!14619 = !{!14620}
!14620 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14618, file: !1721, line: 66, baseType: !1720, size: 64)
!14621 = !{!14622, !14623, !14624, !14625, !14626}
!14622 = !DILocalVariable(name: "sem", arg: 1, scope: !14614, file: !2376, line: 117, type: !14432)
!14623 = !DILocalVariable(name: "timeout", arg: 2, scope: !14614, file: !2376, line: 117, type: !14617)
!14624 = !DILocalVariable(name: "ret", scope: !14614, file: !2376, line: 119, type: !103)
!14625 = !DILocalVariable(name: "key", scope: !14614, file: !2376, line: 124, type: !14486)
!14626 = !DILabel(scope: !14614, name: "out", file: !2376, line: 145)
!14627 = !DILocation(line: 0, scope: !14614)
!14628 = !DILocation(line: 0, scope: !14572, inlinedAt: !14629)
!14629 = distinct !DILocation(line: 124, column: 25, scope: !14614)
!14630 = !DILocation(line: 55, column: 2, scope: !14581, inlinedAt: !14631)
!14631 = distinct !DILocation(line: 145, column: 10, scope: !14572, inlinedAt: !14629)
!14632 = !DILocation(line: 0, scope: !14581, inlinedAt: !14631)
!14633 = !DILocation(line: 128, column: 6, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14614, file: !2376, line: 128, column: 6)
!14635 = !DILocation(line: 128, column: 6, scope: !14614)
!14636 = !{!"branch_weights", i32 1, i32 2000}
!14637 = !DILocation(line: 129, column: 13, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14634, file: !2376, line: 128, column: 31)
!14639 = !DILocalVariable(name: "key", arg: 2, scope: !14640, file: !472, line: 190, type: !14486)
!14640 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !14641, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !14643)
!14641 = !DISubroutineType(types: !14642)
!14642 = !{null, !14575, !14486}
!14643 = !{!14644, !14639}
!14644 = !DILocalVariable(name: "l", arg: 1, scope: !14640, file: !472, line: 189, type: !14575)
!14645 = !DILocation(line: 0, scope: !14640, inlinedAt: !14646)
!14646 = distinct !DILocation(line: 130, column: 3, scope: !14638)
!14647 = !DILocalVariable(name: "key", arg: 1, scope: !14648, file: !5823, line: 84, type: !32)
!14648 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5823, file: !5823, line: 84, type: !5834, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !14649)
!14649 = !{!14647}
!14650 = !DILocation(line: 0, scope: !14648, inlinedAt: !14651)
!14651 = distinct !DILocation(line: 215, column: 2, scope: !14640, inlinedAt: !14646)
!14652 = !DILocation(line: 95, column: 2, scope: !14648, inlinedAt: !14651)
!14653 = !{i64 2224838}
!14654 = !DILocation(line: 132, column: 3, scope: !14638)
!14655 = !DILocation(line: 135, column: 6, scope: !14656)
!14656 = distinct !DILexicalBlock(scope: !14614, file: !2376, line: 135, column: 6)
!14657 = !DILocation(line: 135, column: 6, scope: !14614)
!14658 = !DILocation(line: 0, scope: !14640, inlinedAt: !14659)
!14659 = distinct !DILocation(line: 136, column: 3, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14656, file: !2376, line: 135, column: 40)
!14661 = !DILocation(line: 0, scope: !14648, inlinedAt: !14662)
!14662 = distinct !DILocation(line: 215, column: 2, scope: !14640, inlinedAt: !14659)
!14663 = !DILocation(line: 95, column: 2, scope: !14648, inlinedAt: !14662)
!14664 = !DILocation(line: 138, column: 3, scope: !14660)
!14665 = !DILocation(line: 143, column: 38, scope: !14614)
!14666 = !DILocation(line: 143, column: 8, scope: !14614)
!14667 = !DILocation(line: 143, column: 2, scope: !14614)
!14668 = !DILocation(line: 145, column: 1, scope: !14614)
!14669 = !DILocation(line: 148, column: 2, scope: !14614)
!14670 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2376, file: !2376, line: 151, type: !14481, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !14671)
!14671 = !{!14672, !14673, !14674}
!14672 = !DILocalVariable(name: "sem", arg: 1, scope: !14670, file: !2376, line: 151, type: !14432)
!14673 = !DILocalVariable(name: "thread", scope: !14670, file: !2376, line: 153, type: !14491)
!14674 = !DILocalVariable(name: "key", scope: !14670, file: !2376, line: 154, type: !14486)
!14675 = !DILocation(line: 0, scope: !14670)
!14676 = !DILocation(line: 0, scope: !14572, inlinedAt: !14677)
!14677 = distinct !DILocation(line: 154, column: 25, scope: !14670)
!14678 = !DILocation(line: 55, column: 2, scope: !14581, inlinedAt: !14679)
!14679 = distinct !DILocation(line: 145, column: 10, scope: !14572, inlinedAt: !14677)
!14680 = !DILocation(line: 0, scope: !14581, inlinedAt: !14679)
!14681 = !DILocation(line: 157, column: 12, scope: !14682)
!14682 = distinct !DILexicalBlock(scope: !14670, file: !2376, line: 156, column: 15)
!14683 = !DILocation(line: 158, column: 14, scope: !14684)
!14684 = distinct !DILexicalBlock(scope: !14682, file: !2376, line: 158, column: 7)
!14685 = !DILocation(line: 158, column: 7, scope: !14682)
!14686 = !DILocation(line: 0, scope: !14594, inlinedAt: !14687)
!14687 = distinct !DILocation(line: 161, column: 3, scope: !14682)
!14688 = !DILocation(line: 67, column: 15, scope: !14594, inlinedAt: !14687)
!14689 = !DILocation(line: 67, column: 33, scope: !14594, inlinedAt: !14687)
!14690 = !DILocation(line: 162, column: 3, scope: !14682)
!14691 = distinct !{!14691, !14692, !14693}
!14692 = !DILocation(line: 156, column: 2, scope: !14670)
!14693 = !DILocation(line: 163, column: 2, scope: !14670)
!14694 = !DILocation(line: 164, column: 7, scope: !14670)
!14695 = !DILocation(line: 164, column: 13, scope: !14670)
!14696 = !DILocation(line: 170, column: 2, scope: !14670)
!14697 = !DILocation(line: 171, column: 1, scope: !14670)
!14698 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2488, file: !2488, line: 93, type: !14699, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14701)
!14699 = !DISubroutineType(types: !14700)
!14700 = !{!344, !2383, !2383}
!14701 = !{!14702, !14703, !14704, !14705}
!14702 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14698, file: !2488, line: 93, type: !2383)
!14703 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14698, file: !2488, line: 94, type: !2383)
!14704 = !DILocalVariable(name: "b1", scope: !14698, file: !2488, line: 97, type: !344)
!14705 = !DILocalVariable(name: "b2", scope: !14698, file: !2488, line: 98, type: !344)
!14706 = !DILocation(line: 0, scope: !14698)
!14707 = !DILocation(line: 97, column: 30, scope: !14698)
!14708 = !DILocation(line: 98, column: 30, scope: !14698)
!14709 = !DILocation(line: 100, column: 9, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14698, file: !2488, line: 100, column: 6)
!14711 = !DILocation(line: 100, column: 6, scope: !14698)
!14712 = !DILocation(line: 125, column: 1, scope: !14698)
!14713 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2488, file: !2488, line: 428, type: !14714, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14716)
!14714 = !DISubroutineType(types: !14715)
!14715 = !{null, !2383}
!14716 = !{!14717}
!14717 = !DILocalVariable(name: "curr", arg: 1, scope: !14713, file: !2488, line: 428, type: !2383)
!14718 = !DILocation(line: 0, scope: !14713)
!14719 = !DILocation(line: 434, column: 6, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14713, file: !2488, line: 434, column: 6)
!14721 = !DILocation(line: 434, column: 23, scope: !14720)
!14722 = !DILocation(line: 434, column: 6, scope: !14713)
!14723 = !DILocation(line: 435, column: 50, scope: !14724)
!14724 = distinct !DILexicalBlock(scope: !14720, file: !2488, line: 434, column: 29)
!14725 = !DILocation(line: 435, column: 48, scope: !14724)
!14726 = !DILocation(line: 435, column: 29, scope: !14724)
!14727 = !DILocation(line: 436, column: 24, scope: !14724)
!14728 = !DILocation(line: 436, column: 3, scope: !14724)
!14729 = !DILocation(line: 437, column: 2, scope: !14724)
!14730 = !DILocation(line: 438, column: 1, scope: !14713)
!14731 = distinct !DISubprogram(name: "slice_time", scope: !2488, file: !2488, line: 407, type: !14732, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14734)
!14732 = !DISubroutineType(types: !14733)
!14733 = !{!103, !2383}
!14734 = !{!14735, !14736}
!14735 = !DILocalVariable(name: "curr", arg: 1, scope: !14731, file: !2488, line: 407, type: !2383)
!14736 = !DILocalVariable(name: "ret", scope: !14731, file: !2488, line: 409, type: !103)
!14737 = !DILocation(line: 0, scope: !14731)
!14738 = !DILocation(line: 409, column: 12, scope: !14731)
!14739 = !DILocation(line: 416, column: 2, scope: !14731)
!14740 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2488, file: !2488, line: 440, type: !14741, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14743)
!14741 = !DISubroutineType(types: !14742)
!14742 = !{null, !344, !103}
!14743 = !{!14744, !14745, !14746, !14752}
!14744 = !DILocalVariable(name: "slice", arg: 1, scope: !14740, file: !2488, line: 440, type: !344)
!14745 = !DILocalVariable(name: "prio", arg: 2, scope: !14740, file: !2488, line: 440, type: !103)
!14746 = !DILocalVariable(name: "__i", scope: !14747, file: !2488, line: 442, type: !14748)
!14747 = distinct !DILexicalBlock(scope: !14740, file: !2488, line: 442, column: 2)
!14748 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !14749)
!14749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !14750)
!14750 = !{!14751}
!14751 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14749, file: !472, line: 33, baseType: !103, size: 32)
!14752 = !DILocalVariable(name: "__key", scope: !14747, file: !2488, line: 442, type: !14748)
!14753 = !DILocation(line: 0, scope: !14740)
!14754 = !DILocation(line: 0, scope: !14747)
!14755 = !DILocalVariable(name: "l", arg: 1, scope: !14756, file: !472, line: 136, type: !14759)
!14756 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !14757, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14760)
!14757 = !DISubroutineType(types: !14758)
!14758 = !{!14748, !14759}
!14759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 32)
!14760 = !{!14755, !14761}
!14761 = !DILocalVariable(name: "k", scope: !14756, file: !472, line: 139, type: !14748)
!14762 = !DILocation(line: 0, scope: !14756, inlinedAt: !14763)
!14763 = distinct !DILocation(line: 442, column: 2, scope: !14747)
!14764 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !14769)
!14765 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5823, file: !5823, line: 42, type: !5824, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14766)
!14766 = !{!14767, !14768}
!14767 = !DILocalVariable(name: "key", scope: !14765, file: !5823, line: 44, type: !32)
!14768 = !DILocalVariable(name: "tmp", scope: !14765, file: !5823, line: 53, type: !32)
!14769 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !14763)
!14770 = !{i64 2266430}
!14771 = !DILocation(line: 0, scope: !14765, inlinedAt: !14769)
!14772 = !DILocation(line: 443, column: 29, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14774, file: !2488, line: 442, column: 26)
!14774 = distinct !DILexicalBlock(scope: !14747, file: !2488, line: 442, column: 2)
!14775 = !DILocation(line: 444, column: 17, scope: !14773)
!14776 = !DILocation(line: 445, column: 51, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14773, file: !2488, line: 445, column: 7)
!14778 = !DILocation(line: 445, column: 7, scope: !14773)
!14779 = !DILocation(line: 0, scope: !14773)
!14780 = !DILocation(line: 451, column: 18, scope: !14773)
!14781 = !DILocation(line: 452, column: 3, scope: !14773)
!14782 = !DILocalVariable(name: "key", arg: 2, scope: !14783, file: !472, line: 190, type: !14748)
!14783 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !14784, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14786)
!14784 = !DISubroutineType(types: !14785)
!14785 = !{null, !14759, !14748}
!14786 = !{!14787, !14782}
!14787 = !DILocalVariable(name: "l", arg: 1, scope: !14783, file: !472, line: 189, type: !14759)
!14788 = !DILocation(line: 0, scope: !14783, inlinedAt: !14789)
!14789 = distinct !DILocation(line: 442, column: 2, scope: !14774)
!14790 = !DILocalVariable(name: "key", arg: 1, scope: !14791, file: !5823, line: 84, type: !32)
!14791 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5823, file: !5823, line: 84, type: !5834, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14792)
!14792 = !{!14790}
!14793 = !DILocation(line: 0, scope: !14791, inlinedAt: !14794)
!14794 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !14789)
!14795 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !14794)
!14796 = !{i64 2267247}
!14797 = !DILocation(line: 454, column: 1, scope: !14740)
!14798 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !6023, file: !6023, line: 389, type: !7850, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14799)
!14799 = !{!14800}
!14800 = !DILocalVariable(name: "t", arg: 1, scope: !14798, file: !6023, line: 389, type: !132)
!14801 = !DILocation(line: 0, scope: !14798)
!14802 = !DILocalVariable(name: "t", arg: 1, scope: !14803, file: !6023, line: 102, type: !1617)
!14803 = distinct !DISubprogram(name: "z_tmcvt", scope: !6023, file: !6023, line: 102, type: !6031, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14804)
!14804 = !{!14802, !14805, !14806, !14807, !14808, !14809, !14810, !14811, !14812, !14813, !14814}
!14805 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14803, file: !6023, line: 102, type: !132)
!14806 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14803, file: !6023, line: 103, type: !132)
!14807 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14803, file: !6023, line: 103, type: !166)
!14808 = !DILocalVariable(name: "result32", arg: 5, scope: !14803, file: !6023, line: 104, type: !166)
!14809 = !DILocalVariable(name: "round_up", arg: 6, scope: !14803, file: !6023, line: 104, type: !166)
!14810 = !DILocalVariable(name: "round_off", arg: 7, scope: !14803, file: !6023, line: 105, type: !166)
!14811 = !DILocalVariable(name: "mul_ratio", scope: !14803, file: !6023, line: 107, type: !166)
!14812 = !DILocalVariable(name: "div_ratio", scope: !14803, file: !6023, line: 109, type: !166)
!14813 = !DILocalVariable(name: "off", scope: !14803, file: !6023, line: 116, type: !1617)
!14814 = !DILocalVariable(name: "rdivisor", scope: !14815, file: !6023, line: 119, type: !132)
!14815 = distinct !DILexicalBlock(scope: !14816, file: !6023, line: 118, column: 18)
!14816 = distinct !DILexicalBlock(scope: !14803, file: !6023, line: 118, column: 6)
!14817 = !DILocation(line: 0, scope: !14803, inlinedAt: !14818)
!14818 = distinct !DILocation(line: 392, column: 9, scope: !14798)
!14819 = !DILocation(line: 143, column: 25, scope: !14820, inlinedAt: !14818)
!14820 = distinct !DILexicalBlock(scope: !14821, file: !6023, line: 142, column: 17)
!14821 = distinct !DILexicalBlock(scope: !14822, file: !6023, line: 142, column: 7)
!14822 = distinct !DILexicalBlock(scope: !14823, file: !6023, line: 141, column: 24)
!14823 = distinct !DILexicalBlock(scope: !14824, file: !6023, line: 141, column: 13)
!14824 = distinct !DILexicalBlock(scope: !14803, file: !6023, line: 134, column: 6)
!14825 = !DILocation(line: 392, column: 2, scope: !14798)
!14826 = distinct !DISubprogram(name: "z_time_slice", scope: !2488, file: !2488, line: 502, type: !8485, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14827)
!14827 = !{!14828, !14829}
!14828 = !DILocalVariable(name: "ticks", arg: 1, scope: !14826, file: !2488, line: 502, type: !103)
!14829 = !DILocalVariable(name: "key", scope: !14826, file: !2488, line: 511, type: !14748)
!14830 = !DILocation(line: 0, scope: !14826)
!14831 = !DILocation(line: 0, scope: !14756, inlinedAt: !14832)
!14832 = distinct !DILocation(line: 511, column: 25, scope: !14826)
!14833 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !14834)
!14834 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !14832)
!14835 = !DILocation(line: 0, scope: !14765, inlinedAt: !14834)
!14836 = !DILocation(line: 514, column: 6, scope: !14837)
!14837 = distinct !DILexicalBlock(scope: !14826, file: !2488, line: 514, column: 6)
!14838 = !DILocation(line: 514, column: 25, scope: !14837)
!14839 = !DILocation(line: 514, column: 22, scope: !14837)
!14840 = !DILocation(line: 514, column: 6, scope: !14826)
!14841 = !DILocation(line: 515, column: 3, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14837, file: !2488, line: 514, column: 35)
!14843 = !DILocation(line: 0, scope: !14783, inlinedAt: !14844)
!14844 = distinct !DILocation(line: 516, column: 3, scope: !14842)
!14845 = !DILocation(line: 0, scope: !14791, inlinedAt: !14846)
!14846 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !14844)
!14847 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !14846)
!14848 = !DILocation(line: 517, column: 3, scope: !14842)
!14849 = !DILocation(line: 519, column: 18, scope: !14826)
!14850 = !DILocation(line: 522, column: 6, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14826, file: !2488, line: 522, column: 6)
!14852 = !DILocation(line: 522, column: 27, scope: !14851)
!14853 = !DILocation(line: 522, column: 30, scope: !14851)
!14854 = !DILocation(line: 522, column: 6, scope: !14826)
!14855 = !DILocation(line: 523, column: 30, scope: !14856)
!14856 = distinct !DILexicalBlock(scope: !14857, file: !2488, line: 523, column: 7)
!14857 = distinct !DILexicalBlock(scope: !14851, file: !2488, line: 522, column: 51)
!14858 = !DILocation(line: 523, column: 13, scope: !14856)
!14859 = !DILocation(line: 523, column: 7, scope: !14857)
!14860 = !DILocation(line: 530, column: 10, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14856, file: !2488, line: 523, column: 43)
!14862 = !DILocation(line: 531, column: 3, scope: !14861)
!14863 = !DILocation(line: 532, column: 30, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14856, file: !2488, line: 531, column: 10)
!14865 = !DILocation(line: 535, column: 29, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14851, file: !2488, line: 534, column: 9)
!14867 = !DILocation(line: 0, scope: !14783, inlinedAt: !14868)
!14868 = distinct !DILocation(line: 537, column: 2, scope: !14826)
!14869 = !DILocation(line: 0, scope: !14791, inlinedAt: !14870)
!14870 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !14868)
!14871 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !14870)
!14872 = !DILocation(line: 538, column: 1, scope: !14826)
!14873 = distinct !DISubprogram(name: "sliceable", scope: !2488, file: !2488, line: 468, type: !14874, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14876)
!14874 = !DISubroutineType(types: !14875)
!14875 = !{!166, !2383}
!14876 = !{!14877, !14878}
!14877 = !DILocalVariable(name: "thread", arg: 1, scope: !14873, file: !2488, line: 468, type: !2383)
!14878 = !DILocalVariable(name: "ret", scope: !14873, file: !2488, line: 470, type: !166)
!14879 = !DILocation(line: 0, scope: !14873)
!14880 = !DILocation(line: 470, column: 13, scope: !14873)
!14881 = !DILocation(line: 471, column: 3, scope: !14873)
!14882 = !DILocation(line: 471, column: 7, scope: !14873)
!14883 = !DILocation(line: 472, column: 3, scope: !14873)
!14884 = !DILocation(line: 472, column: 37, scope: !14873)
!14885 = !DILocation(line: 472, column: 24, scope: !14873)
!14886 = !DILocation(line: 472, column: 43, scope: !14873)
!14887 = !DILocation(line: 472, column: 7, scope: !14873)
!14888 = !DILocation(line: 473, column: 3, scope: !14873)
!14889 = !DILocation(line: 473, column: 7, scope: !14873)
!14890 = !DILocation(line: 473, column: 6, scope: !14873)
!14891 = !DILocation(line: 479, column: 2, scope: !14873)
!14892 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2488, file: !2488, line: 482, type: !14893, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14895)
!14893 = !DISubroutineType(types: !14894)
!14894 = !{!14748, !14748}
!14895 = !{!14896, !14897}
!14896 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14892, file: !2488, line: 482, type: !14748)
!14897 = !DILocalVariable(name: "curr", scope: !14892, file: !2488, line: 484, type: !2383)
!14898 = !DILocation(line: 0, scope: !14892)
!14899 = !DILocation(line: 484, column: 26, scope: !14892)
!14900 = !DILocation(line: 493, column: 7, scope: !14901)
!14901 = distinct !DILexicalBlock(scope: !14892, file: !2488, line: 493, column: 6)
!14902 = !DILocation(line: 493, column: 6, scope: !14892)
!14903 = !DILocation(line: 494, column: 3, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14901, file: !2488, line: 493, column: 49)
!14905 = !DILocation(line: 495, column: 2, scope: !14904)
!14906 = !DILocation(line: 496, column: 2, scope: !14892)
!14907 = !DILocation(line: 499, column: 1, scope: !14892)
!14908 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13764, file: !13764, line: 106, type: !14874, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14909)
!14909 = !{!14910, !14911}
!14910 = !DILocalVariable(name: "thread", arg: 1, scope: !14908, file: !13764, line: 106, type: !2383)
!14911 = !DILocalVariable(name: "state", scope: !14908, file: !13764, line: 108, type: !163)
!14912 = !DILocation(line: 0, scope: !14908)
!14913 = !DILocation(line: 108, column: 31, scope: !14908)
!14914 = !DILocation(line: 110, column: 16, scope: !14908)
!14915 = !DILocation(line: 111, column: 41, scope: !14908)
!14916 = !DILocation(line: 110, column: 2, scope: !14908)
!14917 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2488, file: !2488, line: 393, type: !14714, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14918)
!14918 = !{!14919}
!14919 = !DILocalVariable(name: "thread", arg: 1, scope: !14917, file: !2488, line: 393, type: !2383)
!14920 = !DILocation(line: 0, scope: !14917)
!14921 = !DILocation(line: 395, column: 6, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14917, file: !2488, line: 395, column: 6)
!14923 = !DILocation(line: 395, column: 6, scope: !14917)
!14924 = !DILocalVariable(name: "thread", arg: 1, scope: !14925, file: !2488, line: 264, type: !2383)
!14925 = distinct !DISubprogram(name: "dequeue_thread", scope: !2488, file: !2488, line: 264, type: !14714, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14926)
!14926 = !{!14924}
!14927 = !DILocation(line: 0, scope: !14925, inlinedAt: !14928)
!14928 = distinct !DILocation(line: 396, column: 3, scope: !14929)
!14929 = distinct !DILexicalBlock(scope: !14922, file: !2488, line: 395, column: 34)
!14930 = !DILocation(line: 266, column: 15, scope: !14925, inlinedAt: !14928)
!14931 = !DILocation(line: 266, column: 28, scope: !14925, inlinedAt: !14928)
!14932 = !DILocalVariable(name: "thread", arg: 1, scope: !14933, file: !2488, line: 232, type: !2383)
!14933 = distinct !DISubprogram(name: "runq_remove", scope: !2488, file: !2488, line: 232, type: !14714, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14934)
!14934 = !{!14932}
!14935 = !DILocation(line: 0, scope: !14933, inlinedAt: !14936)
!14936 = distinct !DILocation(line: 268, column: 3, scope: !14937, inlinedAt: !14928)
!14937 = distinct !DILexicalBlock(scope: !14938, file: !2488, line: 267, column: 35)
!14938 = distinct !DILexicalBlock(scope: !14925, file: !2488, line: 267, column: 6)
!14939 = !DILocation(line: 234, column: 2, scope: !14933, inlinedAt: !14936)
!14940 = !DILocation(line: 397, column: 2, scope: !14929)
!14941 = !DILocalVariable(name: "thread", arg: 1, scope: !14942, file: !2488, line: 250, type: !2383)
!14942 = distinct !DISubprogram(name: "queue_thread", scope: !2488, file: !2488, line: 250, type: !14714, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14943)
!14943 = !{!14941}
!14944 = !DILocation(line: 0, scope: !14942, inlinedAt: !14945)
!14945 = distinct !DILocation(line: 398, column: 2, scope: !14917)
!14946 = !DILocation(line: 252, column: 15, scope: !14942, inlinedAt: !14945)
!14947 = !DILocation(line: 252, column: 28, scope: !14942, inlinedAt: !14945)
!14948 = !DILocalVariable(name: "thread", arg: 1, scope: !14949, file: !2488, line: 227, type: !2383)
!14949 = distinct !DISubprogram(name: "runq_add", scope: !2488, file: !2488, line: 227, type: !14714, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14950)
!14950 = !{!14948}
!14951 = !DILocation(line: 0, scope: !14949, inlinedAt: !14952)
!14952 = distinct !DILocation(line: 254, column: 3, scope: !14953, inlinedAt: !14945)
!14953 = distinct !DILexicalBlock(scope: !14954, file: !2488, line: 253, column: 35)
!14954 = distinct !DILexicalBlock(scope: !14942, file: !2488, line: 253, column: 6)
!14955 = !DILocalVariable(name: "pq", arg: 1, scope: !14956, file: !2488, line: 181, type: !14959)
!14956 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2488, file: !2488, line: 181, type: !14957, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14960)
!14957 = !DISubroutineType(types: !14958)
!14958 = !{null, !14959, !2383}
!14959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 32)
!14960 = !{!14955, !14961, !14962}
!14961 = !DILocalVariable(name: "thread", arg: 2, scope: !14956, file: !2488, line: 182, type: !2383)
!14962 = !DILocalVariable(name: "t", scope: !14956, file: !2488, line: 184, type: !2383)
!14963 = !DILocation(line: 0, scope: !14956, inlinedAt: !14964)
!14964 = distinct !DILocation(line: 229, column: 2, scope: !14949, inlinedAt: !14952)
!14965 = !DILocation(line: 188, column: 2, scope: !14966, inlinedAt: !14964)
!14966 = distinct !DILexicalBlock(scope: !14956, file: !2488, line: 188, column: 2)
!14967 = !DILocation(line: 188, column: 2, scope: !14968, inlinedAt: !14964)
!14968 = distinct !DILexicalBlock(scope: !14966, file: !2488, line: 188, column: 2)
!14969 = !DILocation(line: 0, scope: !14966, inlinedAt: !14964)
!14970 = !DILocation(line: 189, column: 7, scope: !14971, inlinedAt: !14964)
!14971 = distinct !DILexicalBlock(scope: !14972, file: !2488, line: 189, column: 7)
!14972 = distinct !DILexicalBlock(scope: !14968, file: !2488, line: 188, column: 56)
!14973 = !DILocation(line: 189, column: 35, scope: !14971, inlinedAt: !14964)
!14974 = !DILocation(line: 189, column: 7, scope: !14972, inlinedAt: !14964)
!14975 = !DILocation(line: 191, column: 21, scope: !14976, inlinedAt: !14964)
!14976 = distinct !DILexicalBlock(scope: !14971, file: !2488, line: 189, column: 40)
!14977 = !DILocation(line: 190, column: 4, scope: !14976, inlinedAt: !14964)
!14978 = !DILocation(line: 192, column: 4, scope: !14976, inlinedAt: !14964)
!14979 = distinct !{!14979, !14965, !14980}
!14980 = !DILocation(line: 194, column: 2, scope: !14966, inlinedAt: !14964)
!14981 = !DILocation(line: 196, column: 37, scope: !14956, inlinedAt: !14964)
!14982 = !DILocation(line: 196, column: 2, scope: !14956, inlinedAt: !14964)
!14983 = !DILocation(line: 197, column: 1, scope: !14956, inlinedAt: !14964)
!14984 = !DILocation(line: 399, column: 25, scope: !14917)
!14985 = !DILocation(line: 399, column: 22, scope: !14917)
!14986 = !DILocation(line: 399, column: 2, scope: !14917)
!14987 = !DILocation(line: 400, column: 1, scope: !14917)
!14988 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13764, file: !13764, line: 136, type: !14874, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14989)
!14989 = !{!14990}
!14990 = !DILocalVariable(name: "thread", arg: 1, scope: !14988, file: !13764, line: 136, type: !2383)
!14991 = !DILocation(line: 0, scope: !14988)
!14992 = !DILocation(line: 138, column: 9, scope: !14988)
!14993 = !DILocation(line: 138, column: 2, scope: !14988)
!14994 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2488, file: !2488, line: 1137, type: !14957, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14995)
!14995 = !{!14996, !14997}
!14996 = !DILocalVariable(name: "pq", arg: 1, scope: !14994, file: !2488, line: 1137, type: !14959)
!14997 = !DILocalVariable(name: "thread", arg: 2, scope: !14994, file: !2488, line: 1137, type: !2383)
!14998 = !DILocation(line: 0, scope: !14994)
!14999 = !DILocation(line: 1141, column: 33, scope: !14994)
!15000 = !DILocation(line: 1141, column: 2, scope: !14994)
!15001 = !DILocation(line: 1142, column: 1, scope: !14994)
!15002 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !321, file: !321, line: 294, type: !15003, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15005)
!15003 = !DISubroutineType(types: !15004)
!15004 = !{!2484, !14959}
!15005 = !{!15006}
!15006 = !DILocalVariable(name: "list", arg: 1, scope: !15002, file: !321, line: 294, type: !14959)
!15007 = !DILocation(line: 0, scope: !15002)
!15008 = !DILocation(line: 296, column: 9, scope: !15002)
!15009 = !DILocation(line: 296, column: 49, scope: !15002)
!15010 = !DILocation(line: 296, column: 2, scope: !15002)
!15011 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !321, file: !321, line: 443, type: !15012, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15014)
!15012 = !DISubroutineType(types: !15013)
!15013 = !{null, !2484, !2484}
!15014 = !{!15015, !15016, !15017}
!15015 = !DILocalVariable(name: "successor", arg: 1, scope: !15011, file: !321, line: 443, type: !2484)
!15016 = !DILocalVariable(name: "node", arg: 2, scope: !15011, file: !321, line: 443, type: !2484)
!15017 = !DILocalVariable(name: "prev", scope: !15011, file: !321, line: 445, type: !15018)
!15018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2484)
!15019 = !DILocation(line: 0, scope: !15011)
!15020 = !DILocation(line: 445, column: 39, scope: !15011)
!15021 = !DILocation(line: 447, column: 8, scope: !15011)
!15022 = !DILocation(line: 447, column: 13, scope: !15011)
!15023 = !DILocation(line: 448, column: 8, scope: !15011)
!15024 = !DILocation(line: 448, column: 13, scope: !15011)
!15025 = !DILocation(line: 449, column: 8, scope: !15011)
!15026 = !DILocation(line: 449, column: 13, scope: !15011)
!15027 = !DILocation(line: 450, column: 18, scope: !15011)
!15028 = !DILocation(line: 451, column: 1, scope: !15011)
!15029 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !321, file: !321, line: 341, type: !15030, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15032)
!15030 = !DISubroutineType(types: !15031)
!15031 = !{!2484, !14959, !2484}
!15032 = !{!15033, !15034}
!15033 = !DILocalVariable(name: "list", arg: 1, scope: !15029, file: !321, line: 341, type: !14959)
!15034 = !DILocalVariable(name: "node", arg: 2, scope: !15029, file: !321, line: 342, type: !2484)
!15035 = !DILocation(line: 0, scope: !15029)
!15036 = !DILocation(line: 344, column: 15, scope: !15029)
!15037 = !DILocation(line: 344, column: 9, scope: !15029)
!15038 = !DILocation(line: 344, column: 26, scope: !15029)
!15039 = !DILocation(line: 344, column: 2, scope: !15029)
!15040 = distinct !DISubprogram(name: "sys_dlist_append", scope: !321, file: !321, line: 404, type: !15041, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15043)
!15041 = !DISubroutineType(types: !15042)
!15042 = !{null, !14959, !2484}
!15043 = !{!15044, !15045, !15046}
!15044 = !DILocalVariable(name: "list", arg: 1, scope: !15040, file: !321, line: 404, type: !14959)
!15045 = !DILocalVariable(name: "node", arg: 2, scope: !15040, file: !321, line: 404, type: !2484)
!15046 = !DILocalVariable(name: "tail", scope: !15040, file: !321, line: 406, type: !15018)
!15047 = !DILocation(line: 0, scope: !15040)
!15048 = !DILocation(line: 406, column: 34, scope: !15040)
!15049 = !DILocation(line: 408, column: 8, scope: !15040)
!15050 = !DILocation(line: 408, column: 13, scope: !15040)
!15051 = !DILocation(line: 409, column: 8, scope: !15040)
!15052 = !DILocation(line: 409, column: 13, scope: !15040)
!15053 = !DILocation(line: 411, column: 8, scope: !15040)
!15054 = !DILocation(line: 411, column: 13, scope: !15040)
!15055 = !DILocation(line: 412, column: 13, scope: !15040)
!15056 = !DILocation(line: 413, column: 1, scope: !15040)
!15057 = distinct !DISubprogram(name: "update_cache", scope: !2488, file: !2488, line: 559, type: !8485, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15058)
!15058 = !{!15059, !15060}
!15059 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15057, file: !2488, line: 559, type: !103)
!15060 = !DILocalVariable(name: "thread", scope: !15057, file: !2488, line: 562, type: !2383)
!15061 = !DILocation(line: 0, scope: !15057)
!15062 = !DILocation(line: 239, column: 9, scope: !15063, inlinedAt: !15066)
!15063 = distinct !DISubprogram(name: "runq_best", scope: !2488, file: !2488, line: 237, type: !15064, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !473)
!15064 = !DISubroutineType(types: !15065)
!15065 = !{!2383}
!15066 = distinct !DILocation(line: 314, column: 28, scope: !15067, inlinedAt: !15070)
!15067 = distinct !DISubprogram(name: "next_up", scope: !2488, file: !2488, line: 312, type: !15064, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15068)
!15068 = !{!15069}
!15069 = !DILocalVariable(name: "thread", scope: !15067, file: !2488, line: 314, type: !2383)
!15070 = distinct !DILocation(line: 562, column: 28, scope: !15057)
!15071 = !DILocation(line: 0, scope: !15067, inlinedAt: !15070)
!15072 = !DILocation(line: 340, column: 17, scope: !15067, inlinedAt: !15070)
!15073 = !DILocation(line: 340, column: 9, scope: !15067, inlinedAt: !15070)
!15074 = !DILocalVariable(name: "thread", arg: 1, scope: !15075, file: !2488, line: 127, type: !2383)
!15075 = distinct !DISubprogram(name: "should_preempt", scope: !2488, file: !2488, line: 127, type: !15076, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15078)
!15076 = !DISubroutineType(types: !15077)
!15077 = !{!166, !2383, !103}
!15078 = !{!15074, !15079}
!15079 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15075, file: !2488, line: 128, type: !103)
!15080 = !DILocation(line: 0, scope: !15075, inlinedAt: !15081)
!15081 = distinct !DILocation(line: 564, column: 6, scope: !15082)
!15082 = distinct !DILexicalBlock(scope: !15057, file: !2488, line: 564, column: 6)
!15083 = !DILocation(line: 133, column: 17, scope: !15084, inlinedAt: !15081)
!15084 = distinct !DILexicalBlock(scope: !15075, file: !2488, line: 133, column: 6)
!15085 = !DILocation(line: 0, scope: !15082)
!15086 = !DILocation(line: 133, column: 6, scope: !15075, inlinedAt: !15081)
!15087 = !DILocation(line: 140, column: 6, scope: !15088, inlinedAt: !15081)
!15088 = distinct !DILexicalBlock(scope: !15075, file: !2488, line: 140, column: 6)
!15089 = !DILocation(line: 140, column: 6, scope: !15075, inlinedAt: !15081)
!15090 = !DILocation(line: 150, column: 9, scope: !15091, inlinedAt: !15081)
!15091 = distinct !DILexicalBlock(scope: !15075, file: !2488, line: 149, column: 6)
!15092 = !DILocation(line: 149, column: 6, scope: !15075, inlinedAt: !15081)
!15093 = !DILocation(line: 157, column: 6, scope: !15094, inlinedAt: !15081)
!15094 = distinct !DILexicalBlock(scope: !15075, file: !2488, line: 157, column: 6)
!15095 = !DILocation(line: 564, column: 6, scope: !15057)
!15096 = !DILocation(line: 566, column: 14, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15098, file: !2488, line: 566, column: 7)
!15098 = distinct !DILexicalBlock(scope: !15082, file: !2488, line: 564, column: 42)
!15099 = !DILocation(line: 566, column: 7, scope: !15098)
!15100 = !DILocation(line: 567, column: 4, scope: !15101)
!15101 = distinct !DILexicalBlock(scope: !15097, file: !2488, line: 566, column: 27)
!15102 = !DILocation(line: 568, column: 3, scope: !15101)
!15103 = !DILocation(line: 585, column: 1, scope: !15057)
!15104 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2488, file: !2488, line: 1144, type: !15105, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15107)
!15105 = !DISubroutineType(types: !15106)
!15106 = !{!2383, !14959}
!15107 = !{!15108, !15109, !15110}
!15108 = !DILocalVariable(name: "pq", arg: 1, scope: !15104, file: !2488, line: 1144, type: !14959)
!15109 = !DILocalVariable(name: "thread", scope: !15104, file: !2488, line: 1146, type: !2383)
!15110 = !DILocalVariable(name: "n", scope: !15104, file: !2488, line: 1147, type: !2484)
!15111 = !DILocation(line: 0, scope: !15104)
!15112 = !DILocation(line: 1147, column: 19, scope: !15104)
!15113 = !DILocation(line: 1152, column: 2, scope: !15104)
!15114 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13764, file: !13764, line: 115, type: !14874, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15115)
!15115 = !{!15116}
!15116 = !DILocalVariable(name: "thread", arg: 1, scope: !15114, file: !13764, line: 115, type: !2383)
!15117 = !DILocation(line: 0, scope: !15114)
!15118 = !DILocation(line: 117, column: 46, scope: !15114)
!15119 = !DILocation(line: 117, column: 10, scope: !15114)
!15120 = !DILocation(line: 117, column: 9, scope: !15114)
!15121 = !DILocation(line: 117, column: 2, scope: !15114)
!15122 = distinct !DISubprogram(name: "is_preempt", scope: !2488, file: !2488, line: 62, type: !14732, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15123)
!15123 = !{!15124}
!15124 = !DILocalVariable(name: "thread", arg: 1, scope: !15122, file: !2488, line: 62, type: !2383)
!15125 = !DILocation(line: 0, scope: !15122)
!15126 = !DILocation(line: 65, column: 22, scope: !15122)
!15127 = !DILocation(line: 65, column: 30, scope: !15122)
!15128 = !DILocation(line: 65, column: 2, scope: !15122)
!15129 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14158, file: !14158, line: 35, type: !15130, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15134)
!15130 = !DISubroutineType(types: !15131)
!15131 = !{!166, !15132}
!15132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15133, size: 32)
!15133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2434)
!15134 = !{!15135}
!15135 = !DILocalVariable(name: "to", arg: 1, scope: !15129, file: !14158, line: 35, type: !15132)
!15136 = !DILocation(line: 0, scope: !15129)
!15137 = !DILocation(line: 37, column: 35, scope: !15129)
!15138 = !DILocation(line: 37, column: 10, scope: !15129)
!15139 = !DILocation(line: 37, column: 9, scope: !15129)
!15140 = !DILocation(line: 37, column: 2, scope: !15129)
!15141 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !321, file: !321, line: 225, type: !15142, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15146)
!15142 = !DISubroutineType(types: !15143)
!15143 = !{!166, !15144}
!15144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15145, size: 32)
!15145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2393)
!15146 = !{!15147}
!15147 = !DILocalVariable(name: "node", arg: 1, scope: !15141, file: !321, line: 225, type: !15144)
!15148 = !DILocation(line: 0, scope: !15141)
!15149 = !DILocation(line: 227, column: 15, scope: !15141)
!15150 = !DILocation(line: 227, column: 20, scope: !15141)
!15151 = !DILocation(line: 227, column: 2, scope: !15141)
!15152 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !321, file: !321, line: 325, type: !15030, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15153)
!15153 = !{!15154, !15155}
!15154 = !DILocalVariable(name: "list", arg: 1, scope: !15152, file: !321, line: 325, type: !14959)
!15155 = !DILocalVariable(name: "node", arg: 2, scope: !15152, file: !321, line: 326, type: !2484)
!15156 = !DILocation(line: 0, scope: !15152)
!15157 = !DILocation(line: 328, column: 24, scope: !15152)
!15158 = !DILocation(line: 328, column: 15, scope: !15152)
!15159 = !DILocation(line: 328, column: 9, scope: !15152)
!15160 = !DILocation(line: 328, column: 45, scope: !15152)
!15161 = !DILocation(line: 328, column: 2, scope: !15152)
!15162 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !321, file: !321, line: 266, type: !15163, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15165)
!15163 = !DISubroutineType(types: !15164)
!15164 = !{!166, !14959}
!15165 = !{!15166}
!15166 = !DILocalVariable(name: "list", arg: 1, scope: !15162, file: !321, line: 266, type: !14959)
!15167 = !DILocation(line: 0, scope: !15162)
!15168 = !DILocation(line: 268, column: 15, scope: !15162)
!15169 = !DILocation(line: 268, column: 20, scope: !15162)
!15170 = !DILocation(line: 268, column: 2, scope: !15162)
!15171 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !321, file: !321, line: 496, type: !15172, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15174)
!15172 = !DISubroutineType(types: !15173)
!15173 = !{null, !2484}
!15174 = !{!15175, !15176, !15177}
!15175 = !DILocalVariable(name: "node", arg: 1, scope: !15171, file: !321, line: 496, type: !2484)
!15176 = !DILocalVariable(name: "prev", scope: !15171, file: !321, line: 498, type: !15018)
!15177 = !DILocalVariable(name: "next", scope: !15171, file: !321, line: 499, type: !15018)
!15178 = !DILocation(line: 0, scope: !15171)
!15179 = !DILocation(line: 498, column: 34, scope: !15171)
!15180 = !DILocation(line: 499, column: 34, scope: !15171)
!15181 = !DILocation(line: 501, column: 8, scope: !15171)
!15182 = !DILocation(line: 501, column: 13, scope: !15171)
!15183 = !DILocation(line: 502, column: 8, scope: !15171)
!15184 = !DILocation(line: 502, column: 13, scope: !15171)
!15185 = !DILocation(line: 503, column: 2, scope: !15171)
!15186 = !DILocation(line: 504, column: 1, scope: !15171)
!15187 = distinct !DISubprogram(name: "sys_dnode_init", scope: !321, file: !321, line: 211, type: !15172, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15188)
!15188 = !{!15189}
!15189 = !DILocalVariable(name: "node", arg: 1, scope: !15187, file: !321, line: 211, type: !2484)
!15190 = !DILocation(line: 0, scope: !15187)
!15191 = !DILocation(line: 213, column: 8, scope: !15187)
!15192 = !DILocation(line: 213, column: 13, scope: !15187)
!15193 = !DILocation(line: 214, column: 8, scope: !15187)
!15194 = !DILocation(line: 214, column: 13, scope: !15187)
!15195 = !DILocation(line: 215, column: 1, scope: !15187)
!15196 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13764, file: !13764, line: 131, type: !15197, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15199)
!15197 = !DISubroutineType(types: !15198)
!15198 = !{!166, !2383, !132}
!15199 = !{!15200, !15201}
!15200 = !DILocalVariable(name: "thread", arg: 1, scope: !15196, file: !13764, line: 131, type: !2383)
!15201 = !DILocalVariable(name: "state", arg: 2, scope: !15196, file: !13764, line: 131, type: !132)
!15202 = !DILocation(line: 0, scope: !15196)
!15203 = !DILocation(line: 133, column: 23, scope: !15196)
!15204 = !DILocation(line: 133, column: 45, scope: !15196)
!15205 = !DILocation(line: 133, column: 2, scope: !15196)
!15206 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13764, file: !13764, line: 211, type: !15207, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15209)
!15207 = !DISubroutineType(types: !15208)
!15208 = !{!166, !103, !103}
!15209 = !{!15210, !15211}
!15210 = !DILocalVariable(name: "prio", arg: 1, scope: !15206, file: !13764, line: 211, type: !103)
!15211 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15206, file: !13764, line: 211, type: !103)
!15212 = !DILocation(line: 0, scope: !15206)
!15213 = !DILocation(line: 213, column: 9, scope: !15206)
!15214 = !DILocation(line: 213, column: 2, scope: !15206)
!15215 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13764, file: !13764, line: 83, type: !14874, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15216)
!15216 = !{!15217}
!15217 = !DILocalVariable(name: "thread", arg: 1, scope: !15215, file: !13764, line: 83, type: !2383)
!15218 = !DILocation(line: 0, scope: !15215)
!15219 = !DILocation(line: 89, column: 16, scope: !15215)
!15220 = !DILocation(line: 89, column: 2, scope: !15215)
!15221 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13764, file: !13764, line: 206, type: !15207, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15222)
!15222 = !{!15223, !15224}
!15223 = !DILocalVariable(name: "prio1", arg: 1, scope: !15221, file: !13764, line: 206, type: !103)
!15224 = !DILocalVariable(name: "prio2", arg: 2, scope: !15221, file: !13764, line: 206, type: !103)
!15225 = !DILocation(line: 0, scope: !15221)
!15226 = !DILocation(line: 208, column: 15, scope: !15221)
!15227 = !DILocation(line: 208, column: 2, scope: !15221)
!15228 = distinct !DISubprogram(name: "z_ready_thread", scope: !2488, file: !2488, line: 635, type: !14714, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15229)
!15229 = !{!15230, !15231, !15233}
!15230 = !DILocalVariable(name: "thread", arg: 1, scope: !15228, file: !2488, line: 635, type: !2383)
!15231 = !DILocalVariable(name: "__i", scope: !15232, file: !2488, line: 637, type: !14748)
!15232 = distinct !DILexicalBlock(scope: !15228, file: !2488, line: 637, column: 2)
!15233 = !DILocalVariable(name: "__key", scope: !15232, file: !2488, line: 637, type: !14748)
!15234 = !DILocation(line: 0, scope: !15228)
!15235 = !DILocation(line: 0, scope: !15232)
!15236 = !DILocation(line: 0, scope: !14756, inlinedAt: !15237)
!15237 = distinct !DILocation(line: 637, column: 2, scope: !15232)
!15238 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15239)
!15239 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15237)
!15240 = !DILocation(line: 0, scope: !14765, inlinedAt: !15239)
!15241 = !DILocation(line: 639, column: 4, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15243, file: !2488, line: 638, column: 41)
!15243 = distinct !DILexicalBlock(scope: !15244, file: !2488, line: 638, column: 7)
!15244 = distinct !DILexicalBlock(scope: !15245, file: !2488, line: 637, column: 26)
!15245 = distinct !DILexicalBlock(scope: !15232, file: !2488, line: 637, column: 2)
!15246 = !DILocation(line: 0, scope: !14783, inlinedAt: !15247)
!15247 = distinct !DILocation(line: 637, column: 2, scope: !15245)
!15248 = !DILocation(line: 0, scope: !14791, inlinedAt: !15249)
!15249 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15247)
!15250 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15249)
!15251 = !DILocation(line: 642, column: 1, scope: !15228)
!15252 = distinct !DISubprogram(name: "ready_thread", scope: !2488, file: !2488, line: 617, type: !14714, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15253)
!15253 = !{!15254}
!15254 = !DILocalVariable(name: "thread", arg: 1, scope: !15252, file: !2488, line: 617, type: !2383)
!15255 = !DILocation(line: 0, scope: !15252)
!15256 = !DILocation(line: 626, column: 7, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15252, file: !2488, line: 626, column: 6)
!15258 = !DILocation(line: 626, column: 34, scope: !15257)
!15259 = !DILocation(line: 626, column: 37, scope: !15257)
!15260 = !DILocation(line: 626, column: 6, scope: !15252)
!15261 = !DILocation(line: 0, scope: !14942, inlinedAt: !15262)
!15262 = distinct !DILocation(line: 629, column: 3, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15257, file: !2488, line: 626, column: 64)
!15264 = !DILocation(line: 252, column: 15, scope: !14942, inlinedAt: !15262)
!15265 = !DILocation(line: 252, column: 28, scope: !14942, inlinedAt: !15262)
!15266 = !DILocation(line: 0, scope: !14949, inlinedAt: !15267)
!15267 = distinct !DILocation(line: 254, column: 3, scope: !14953, inlinedAt: !15262)
!15268 = !DILocation(line: 0, scope: !14956, inlinedAt: !15269)
!15269 = distinct !DILocation(line: 229, column: 2, scope: !14949, inlinedAt: !15267)
!15270 = !DILocation(line: 188, column: 2, scope: !14966, inlinedAt: !15269)
!15271 = !DILocation(line: 188, column: 2, scope: !14968, inlinedAt: !15269)
!15272 = !DILocation(line: 0, scope: !14966, inlinedAt: !15269)
!15273 = !DILocation(line: 189, column: 7, scope: !14971, inlinedAt: !15269)
!15274 = !DILocation(line: 189, column: 35, scope: !14971, inlinedAt: !15269)
!15275 = !DILocation(line: 189, column: 7, scope: !14972, inlinedAt: !15269)
!15276 = !DILocation(line: 191, column: 21, scope: !14976, inlinedAt: !15269)
!15277 = !DILocation(line: 190, column: 4, scope: !14976, inlinedAt: !15269)
!15278 = !DILocation(line: 192, column: 4, scope: !14976, inlinedAt: !15269)
!15279 = distinct !{!15279, !15270, !15280}
!15280 = !DILocation(line: 194, column: 2, scope: !14966, inlinedAt: !15269)
!15281 = !DILocation(line: 196, column: 37, scope: !14956, inlinedAt: !15269)
!15282 = !DILocation(line: 196, column: 2, scope: !14956, inlinedAt: !15269)
!15283 = !DILocation(line: 197, column: 1, scope: !14956, inlinedAt: !15269)
!15284 = !DILocation(line: 630, column: 3, scope: !15263)
!15285 = !DILocation(line: 632, column: 2, scope: !15263)
!15286 = !DILocation(line: 633, column: 1, scope: !15252)
!15287 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13764, file: !13764, line: 120, type: !14874, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15288)
!15288 = !{!15289}
!15289 = !DILocalVariable(name: "thread", arg: 1, scope: !15287, file: !13764, line: 120, type: !2383)
!15290 = !DILocation(line: 0, scope: !15287)
!15291 = !DILocation(line: 122, column: 12, scope: !15287)
!15292 = !DILocation(line: 122, column: 62, scope: !15287)
!15293 = !DILocation(line: 123, column: 4, scope: !15287)
!15294 = !DILocation(line: 122, column: 2, scope: !15287)
!15295 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2488, file: !2488, line: 644, type: !14714, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15296)
!15296 = !{!15297, !15298, !15300}
!15297 = !DILocalVariable(name: "thread", arg: 1, scope: !15295, file: !2488, line: 644, type: !2383)
!15298 = !DILocalVariable(name: "__i", scope: !15299, file: !2488, line: 646, type: !14748)
!15299 = distinct !DILexicalBlock(scope: !15295, file: !2488, line: 646, column: 2)
!15300 = !DILocalVariable(name: "__key", scope: !15299, file: !2488, line: 646, type: !14748)
!15301 = !DILocation(line: 0, scope: !15295)
!15302 = !DILocation(line: 0, scope: !15299)
!15303 = !DILocation(line: 0, scope: !14756, inlinedAt: !15304)
!15304 = distinct !DILocation(line: 646, column: 2, scope: !15299)
!15305 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15306)
!15306 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15304)
!15307 = !DILocation(line: 0, scope: !14765, inlinedAt: !15306)
!15308 = !DILocation(line: 647, column: 3, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15310, file: !2488, line: 646, column: 26)
!15310 = distinct !DILexicalBlock(scope: !15299, file: !2488, line: 646, column: 2)
!15311 = !DILocation(line: 0, scope: !14783, inlinedAt: !15312)
!15312 = distinct !DILocation(line: 646, column: 2, scope: !15310)
!15313 = !DILocation(line: 0, scope: !14791, inlinedAt: !15314)
!15314 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15312)
!15315 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15314)
!15316 = !DILocation(line: 649, column: 1, scope: !15295)
!15317 = distinct !DISubprogram(name: "z_sched_start", scope: !2488, file: !2488, line: 651, type: !14714, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15318)
!15318 = !{!15319, !15320}
!15319 = !DILocalVariable(name: "thread", arg: 1, scope: !15317, file: !2488, line: 651, type: !2383)
!15320 = !DILocalVariable(name: "key", scope: !15317, file: !2488, line: 653, type: !14748)
!15321 = !DILocation(line: 0, scope: !15317)
!15322 = !DILocation(line: 0, scope: !14756, inlinedAt: !15323)
!15323 = distinct !DILocation(line: 653, column: 25, scope: !15317)
!15324 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15325)
!15325 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15323)
!15326 = !DILocation(line: 0, scope: !14765, inlinedAt: !15325)
!15327 = !DILocation(line: 655, column: 6, scope: !15328)
!15328 = distinct !DILexicalBlock(scope: !15317, file: !2488, line: 655, column: 6)
!15329 = !DILocation(line: 655, column: 6, scope: !15317)
!15330 = !DILocation(line: 0, scope: !14783, inlinedAt: !15331)
!15331 = distinct !DILocation(line: 656, column: 3, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15328, file: !2488, line: 655, column: 36)
!15333 = !DILocation(line: 0, scope: !14791, inlinedAt: !15334)
!15334 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15331)
!15335 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15334)
!15336 = !DILocation(line: 657, column: 3, scope: !15332)
!15337 = !DILocation(line: 660, column: 2, scope: !15317)
!15338 = !DILocation(line: 661, column: 2, scope: !15317)
!15339 = !DILocation(line: 662, column: 2, scope: !15317)
!15340 = !DILocation(line: 663, column: 1, scope: !15317)
!15341 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13764, file: !13764, line: 126, type: !14874, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15342)
!15342 = !{!15343}
!15343 = !DILocalVariable(name: "thread", arg: 1, scope: !15341, file: !13764, line: 126, type: !2383)
!15344 = !DILocation(line: 0, scope: !15341)
!15345 = !DILocation(line: 128, column: 23, scope: !15341)
!15346 = !DILocation(line: 128, column: 36, scope: !15341)
!15347 = !DILocation(line: 128, column: 56, scope: !15341)
!15348 = !DILocation(line: 128, column: 2, scope: !15341)
!15349 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13764, file: !13764, line: 155, type: !14714, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15350)
!15350 = !{!15351}
!15351 = !DILocalVariable(name: "thread", arg: 1, scope: !15349, file: !13764, line: 155, type: !2383)
!15352 = !DILocation(line: 0, scope: !15349)
!15353 = !DILocation(line: 157, column: 15, scope: !15349)
!15354 = !DILocation(line: 157, column: 28, scope: !15349)
!15355 = !DILocation(line: 158, column: 1, scope: !15349)
!15356 = distinct !DISubprogram(name: "z_reschedule", scope: !2488, file: !2488, line: 967, type: !14784, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15357)
!15357 = !{!15358, !15359}
!15358 = !DILocalVariable(name: "lock", arg: 1, scope: !15356, file: !2488, line: 967, type: !14759)
!15359 = !DILocalVariable(name: "key", arg: 2, scope: !15356, file: !2488, line: 967, type: !14748)
!15360 = !DILocation(line: 0, scope: !15356)
!15361 = !DILocation(line: 969, column: 6, scope: !15362)
!15362 = distinct !DILexicalBlock(scope: !15356, file: !2488, line: 969, column: 6)
!15363 = !DILocation(line: 969, column: 23, scope: !15362)
!15364 = !DILocation(line: 969, column: 26, scope: !15362)
!15365 = !DILocation(line: 969, column: 6, scope: !15356)
!15366 = !DILocalVariable(name: "key", arg: 2, scope: !15367, file: !13868, line: 193, type: !14748)
!15367 = distinct !DISubprogram(name: "z_swap", scope: !13868, file: !13868, line: 193, type: !15368, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15370)
!15368 = !DISubroutineType(types: !15369)
!15369 = !{!103, !14759, !14748}
!15370 = !{!15371, !15366}
!15371 = !DILocalVariable(name: "lock", arg: 1, scope: !15367, file: !13868, line: 193, type: !14759)
!15372 = !DILocation(line: 0, scope: !15367, inlinedAt: !15373)
!15373 = distinct !DILocation(line: 970, column: 3, scope: !15374)
!15374 = distinct !DILexicalBlock(scope: !15362, file: !2488, line: 969, column: 39)
!15375 = !DILocation(line: 196, column: 9, scope: !15367, inlinedAt: !15373)
!15376 = !DILocation(line: 971, column: 2, scope: !15374)
!15377 = !DILocation(line: 0, scope: !14783, inlinedAt: !15378)
!15378 = distinct !DILocation(line: 972, column: 3, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15362, file: !2488, line: 971, column: 9)
!15380 = !DILocation(line: 0, scope: !14791, inlinedAt: !15381)
!15381 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15378)
!15382 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15381)
!15383 = !DILocation(line: 975, column: 1, scope: !15356)
!15384 = distinct !DISubprogram(name: "resched", scope: !2488, file: !2488, line: 940, type: !15385, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15387)
!15385 = !DISubroutineType(types: !15386)
!15386 = !{!166, !132}
!15387 = !{!15388}
!15388 = !DILocalVariable(name: "key", arg: 1, scope: !15384, file: !2488, line: 940, type: !132)
!15389 = !DILocation(line: 0, scope: !15384)
!15390 = !DILocalVariable(name: "key", arg: 1, scope: !15391, file: !5823, line: 112, type: !32)
!15391 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5823, file: !5823, line: 112, type: !15392, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15394)
!15392 = !DISubroutineType(types: !15393)
!15393 = !{!166, !32}
!15394 = !{!15390}
!15395 = !DILocation(line: 0, scope: !15391, inlinedAt: !15396)
!15396 = distinct !DILocation(line: 946, column: 9, scope: !15384)
!15397 = !DILocation(line: 115, column: 13, scope: !15391, inlinedAt: !15396)
!15398 = !DILocation(line: 946, column: 32, scope: !15384)
!15399 = !DILocation(line: 1031, column: 3, scope: !15400, inlinedAt: !15403)
!15400 = distinct !DISubprogram(name: "__get_IPSR", scope: !6843, file: !6843, line: 1027, type: !6924, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15401)
!15401 = !{!15402}
!15402 = !DILocalVariable(name: "result", scope: !15400, file: !6843, line: 1029, type: !132)
!15403 = distinct !DILocation(line: 48, column: 10, scope: !15404, inlinedAt: !15405)
!15404 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7637, file: !7637, line: 46, type: !7638, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !473)
!15405 = distinct !DILocation(line: 946, column: 36, scope: !15384)
!15406 = !{i64 3584043}
!15407 = !DILocation(line: 0, scope: !15400, inlinedAt: !15403)
!15408 = !DILocation(line: 48, column: 9, scope: !15404, inlinedAt: !15405)
!15409 = !DILocation(line: 946, column: 2, scope: !15384)
!15410 = distinct !DISubprogram(name: "need_swap", scope: !2488, file: !2488, line: 953, type: !7638, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15411)
!15411 = !{!15412}
!15412 = !DILocalVariable(name: "new_thread", scope: !15410, file: !2488, line: 959, type: !2383)
!15413 = !DILocation(line: 962, column: 31, scope: !15410)
!15414 = !DILocation(line: 0, scope: !15410)
!15415 = !DILocation(line: 963, column: 23, scope: !15410)
!15416 = !DILocation(line: 963, column: 20, scope: !15410)
!15417 = !DILocation(line: 963, column: 2, scope: !15410)
!15418 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13868, file: !13868, line: 181, type: !6853, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15419)
!15419 = !{!15420, !15421}
!15420 = !DILocalVariable(name: "key", arg: 1, scope: !15418, file: !13868, line: 181, type: !32)
!15421 = !DILocalVariable(name: "ret", scope: !15418, file: !13868, line: 183, type: !103)
!15422 = !DILocation(line: 0, scope: !15418)
!15423 = !DILocation(line: 185, column: 8, scope: !15418)
!15424 = !DILocation(line: 186, column: 2, scope: !15418)
!15425 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2488, file: !2488, line: 665, type: !14714, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15426)
!15426 = !{!15427, !15428, !15430}
!15427 = !DILocalVariable(name: "thread", arg: 1, scope: !15425, file: !2488, line: 665, type: !2383)
!15428 = !DILocalVariable(name: "__i", scope: !15429, file: !2488, line: 671, type: !14748)
!15429 = distinct !DILexicalBlock(scope: !15425, file: !2488, line: 671, column: 2)
!15430 = !DILocalVariable(name: "__key", scope: !15429, file: !2488, line: 671, type: !14748)
!15431 = !DILocation(line: 0, scope: !15425)
!15432 = !DILocation(line: 669, column: 8, scope: !15425)
!15433 = !DILocation(line: 0, scope: !15429)
!15434 = !DILocation(line: 0, scope: !14756, inlinedAt: !15435)
!15435 = distinct !DILocation(line: 671, column: 2, scope: !15429)
!15436 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15437)
!15437 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15435)
!15438 = !DILocation(line: 0, scope: !14765, inlinedAt: !15437)
!15439 = !DILocation(line: 672, column: 7, scope: !15440)
!15440 = distinct !DILexicalBlock(scope: !15441, file: !2488, line: 672, column: 7)
!15441 = distinct !DILexicalBlock(scope: !15442, file: !2488, line: 671, column: 26)
!15442 = distinct !DILexicalBlock(scope: !15429, file: !2488, line: 671, column: 2)
!15443 = !DILocation(line: 672, column: 7, scope: !15441)
!15444 = !DILocation(line: 0, scope: !14925, inlinedAt: !15445)
!15445 = distinct !DILocation(line: 673, column: 4, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15440, file: !2488, line: 672, column: 35)
!15447 = !DILocation(line: 266, column: 15, scope: !14925, inlinedAt: !15445)
!15448 = !DILocation(line: 266, column: 28, scope: !14925, inlinedAt: !15445)
!15449 = !DILocation(line: 0, scope: !14933, inlinedAt: !15450)
!15450 = distinct !DILocation(line: 268, column: 3, scope: !14937, inlinedAt: !15445)
!15451 = !DILocation(line: 234, column: 2, scope: !14933, inlinedAt: !15450)
!15452 = !DILocation(line: 674, column: 3, scope: !15446)
!15453 = !DILocation(line: 675, column: 3, scope: !15441)
!15454 = !DILocation(line: 676, column: 26, scope: !15441)
!15455 = !DILocation(line: 676, column: 23, scope: !15441)
!15456 = !DILocation(line: 676, column: 3, scope: !15441)
!15457 = !DILocation(line: 0, scope: !14783, inlinedAt: !15458)
!15458 = distinct !DILocation(line: 671, column: 2, scope: !15442)
!15459 = !DILocation(line: 0, scope: !14791, inlinedAt: !15460)
!15460 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15458)
!15461 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15460)
!15462 = !DILocation(line: 679, column: 16, scope: !15463)
!15463 = distinct !DILexicalBlock(scope: !15425, file: !2488, line: 679, column: 6)
!15464 = !DILocation(line: 679, column: 13, scope: !15463)
!15465 = !DILocation(line: 679, column: 6, scope: !15425)
!15466 = !DILocation(line: 680, column: 3, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !15463, file: !2488, line: 679, column: 26)
!15468 = !DILocation(line: 681, column: 2, scope: !15467)
!15469 = !DILocation(line: 684, column: 1, scope: !15425)
!15470 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14158, file: !14158, line: 52, type: !14732, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15471)
!15471 = !{!15472}
!15472 = !DILocalVariable(name: "thread", arg: 1, scope: !15470, file: !14158, line: 52, type: !2383)
!15473 = !DILocation(line: 0, scope: !15470)
!15474 = !DILocation(line: 54, column: 39, scope: !15470)
!15475 = !DILocation(line: 54, column: 9, scope: !15470)
!15476 = !DILocation(line: 54, column: 2, scope: !15470)
!15477 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13764, file: !13764, line: 141, type: !14714, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15478)
!15478 = !{!15479}
!15479 = !DILocalVariable(name: "thread", arg: 1, scope: !15477, file: !13764, line: 141, type: !2383)
!15480 = !DILocation(line: 0, scope: !15477)
!15481 = !DILocation(line: 143, column: 15, scope: !15477)
!15482 = !DILocation(line: 143, column: 28, scope: !15477)
!15483 = !DILocation(line: 146, column: 1, scope: !15477)
!15484 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13764, file: !13764, line: 73, type: !3256, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !473)
!15485 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15486)
!15486 = distinct !DILocation(line: 75, column: 30, scope: !15484)
!15487 = !DILocation(line: 0, scope: !14765, inlinedAt: !15486)
!15488 = !DILocation(line: 75, column: 9, scope: !15484)
!15489 = !DILocation(line: 76, column: 1, scope: !15484)
!15490 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2488, file: !2488, line: 977, type: !6934, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15491)
!15491 = !{!15492}
!15492 = !DILocalVariable(name: "key", arg: 1, scope: !15490, file: !2488, line: 977, type: !132)
!15493 = !DILocation(line: 0, scope: !15490)
!15494 = !DILocation(line: 979, column: 6, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15490, file: !2488, line: 979, column: 6)
!15496 = !DILocation(line: 979, column: 6, scope: !15490)
!15497 = !DILocation(line: 980, column: 3, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15495, file: !2488, line: 979, column: 20)
!15499 = !DILocation(line: 981, column: 2, scope: !15498)
!15500 = !DILocation(line: 0, scope: !14791, inlinedAt: !15501)
!15501 = distinct !DILocation(line: 982, column: 3, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15495, file: !2488, line: 981, column: 9)
!15503 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15501)
!15504 = !DILocation(line: 985, column: 1, scope: !15490)
!15505 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2488, file: !2488, line: 695, type: !14714, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15506)
!15506 = !{!15507, !15508}
!15507 = !DILocalVariable(name: "thread", arg: 1, scope: !15505, file: !2488, line: 695, type: !2383)
!15508 = !DILocalVariable(name: "key", scope: !15505, file: !2488, line: 699, type: !14748)
!15509 = !DILocation(line: 0, scope: !15505)
!15510 = !DILocation(line: 0, scope: !14756, inlinedAt: !15511)
!15511 = distinct !DILocation(line: 699, column: 25, scope: !15505)
!15512 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15513)
!15513 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15511)
!15514 = !DILocation(line: 0, scope: !14765, inlinedAt: !15513)
!15515 = !DILocation(line: 702, column: 7, scope: !15516)
!15516 = distinct !DILexicalBlock(scope: !15505, file: !2488, line: 702, column: 6)
!15517 = !DILocation(line: 702, column: 6, scope: !15505)
!15518 = !DILocation(line: 0, scope: !14783, inlinedAt: !15519)
!15519 = distinct !DILocation(line: 703, column: 3, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15516, file: !2488, line: 702, column: 38)
!15521 = !DILocation(line: 0, scope: !14791, inlinedAt: !15522)
!15522 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15519)
!15523 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15522)
!15524 = !DILocation(line: 704, column: 3, scope: !15520)
!15525 = !DILocation(line: 707, column: 2, scope: !15505)
!15526 = !DILocation(line: 708, column: 2, scope: !15505)
!15527 = !DILocation(line: 710, column: 2, scope: !15505)
!15528 = !DILocation(line: 713, column: 1, scope: !15505)
!15529 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13764, file: !13764, line: 96, type: !14874, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15530)
!15530 = !{!15531}
!15531 = !DILocalVariable(name: "thread", arg: 1, scope: !15529, file: !13764, line: 96, type: !2383)
!15532 = !DILocation(line: 0, scope: !15529)
!15533 = !DILocation(line: 98, column: 23, scope: !15529)
!15534 = !DILocation(line: 98, column: 36, scope: !15529)
!15535 = !DILocation(line: 98, column: 57, scope: !15529)
!15536 = !DILocation(line: 98, column: 2, scope: !15529)
!15537 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13764, file: !13764, line: 148, type: !14714, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15538)
!15538 = !{!15539}
!15539 = !DILocalVariable(name: "thread", arg: 1, scope: !15537, file: !13764, line: 148, type: !2383)
!15540 = !DILocation(line: 0, scope: !15537)
!15541 = !DILocation(line: 150, column: 15, scope: !15537)
!15542 = !DILocation(line: 150, column: 28, scope: !15537)
!15543 = !DILocation(line: 153, column: 1, scope: !15537)
!15544 = distinct !DISubprogram(name: "z_pend_thread", scope: !2488, file: !2488, line: 770, type: !15545, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15551)
!15545 = !DISubroutineType(types: !15546)
!15546 = !{null, !2383, !2414, !15547}
!15547 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1721, line: 67, baseType: !15548)
!15548 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1721, line: 65, size: 64, elements: !15549)
!15549 = !{!15550}
!15550 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15548, file: !1721, line: 66, baseType: !1720, size: 64)
!15551 = !{!15552, !15553, !15554, !15555, !15557}
!15552 = !DILocalVariable(name: "thread", arg: 1, scope: !15544, file: !2488, line: 770, type: !2383)
!15553 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15544, file: !2488, line: 770, type: !2414)
!15554 = !DILocalVariable(name: "timeout", arg: 3, scope: !15544, file: !2488, line: 771, type: !15547)
!15555 = !DILocalVariable(name: "__i", scope: !15556, file: !2488, line: 774, type: !14748)
!15556 = distinct !DILexicalBlock(scope: !15544, file: !2488, line: 774, column: 2)
!15557 = !DILocalVariable(name: "__key", scope: !15556, file: !2488, line: 774, type: !14748)
!15558 = !DILocation(line: 0, scope: !15544)
!15559 = !DILocation(line: 0, scope: !15556)
!15560 = !DILocation(line: 0, scope: !14756, inlinedAt: !15561)
!15561 = distinct !DILocation(line: 774, column: 2, scope: !15556)
!15562 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15563)
!15563 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15561)
!15564 = !DILocation(line: 0, scope: !14765, inlinedAt: !15563)
!15565 = !DILocation(line: 775, column: 3, scope: !15566)
!15566 = distinct !DILexicalBlock(scope: !15567, file: !2488, line: 774, column: 26)
!15567 = distinct !DILexicalBlock(scope: !15556, file: !2488, line: 774, column: 2)
!15568 = !DILocation(line: 0, scope: !14783, inlinedAt: !15569)
!15569 = distinct !DILocation(line: 774, column: 2, scope: !15567)
!15570 = !DILocation(line: 0, scope: !14791, inlinedAt: !15571)
!15571 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15569)
!15572 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15571)
!15573 = !DILocation(line: 777, column: 1, scope: !15544)
!15574 = distinct !DISubprogram(name: "pend_locked", scope: !2488, file: !2488, line: 760, type: !15545, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15575)
!15575 = !{!15576, !15577, !15578}
!15576 = !DILocalVariable(name: "thread", arg: 1, scope: !15574, file: !2488, line: 760, type: !2383)
!15577 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15574, file: !2488, line: 760, type: !2414)
!15578 = !DILocalVariable(name: "timeout", arg: 3, scope: !15574, file: !2488, line: 761, type: !15547)
!15579 = !DILocation(line: 0, scope: !15574)
!15580 = !DILocation(line: 766, column: 2, scope: !15574)
!15581 = !DILocation(line: 767, column: 2, scope: !15574)
!15582 = !DILocation(line: 768, column: 1, scope: !15574)
!15583 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2488, file: !2488, line: 740, type: !15584, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15586)
!15584 = !DISubroutineType(types: !15585)
!15585 = !{null, !2383, !2414}
!15586 = !{!15587, !15588}
!15587 = !DILocalVariable(name: "thread", arg: 1, scope: !15583, file: !2488, line: 740, type: !2383)
!15588 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15583, file: !2488, line: 740, type: !2414)
!15589 = !DILocation(line: 0, scope: !15583)
!15590 = !DILocation(line: 742, column: 2, scope: !15583)
!15591 = !DILocation(line: 743, column: 2, scope: !15583)
!15592 = !DILocation(line: 747, column: 13, scope: !15593)
!15593 = distinct !DILexicalBlock(scope: !15583, file: !2488, line: 747, column: 6)
!15594 = !DILocation(line: 747, column: 6, scope: !15583)
!15595 = !DILocation(line: 748, column: 16, scope: !15596)
!15596 = distinct !DILexicalBlock(scope: !15593, file: !2488, line: 747, column: 22)
!15597 = !DILocation(line: 748, column: 26, scope: !15596)
!15598 = !DILocation(line: 749, column: 28, scope: !15596)
!15599 = !DILocation(line: 0, scope: !14956, inlinedAt: !15600)
!15600 = distinct !DILocation(line: 749, column: 3, scope: !15596)
!15601 = !DILocation(line: 188, column: 2, scope: !14966, inlinedAt: !15600)
!15602 = !DILocation(line: 188, column: 2, scope: !14968, inlinedAt: !15600)
!15603 = !DILocation(line: 0, scope: !14966, inlinedAt: !15600)
!15604 = !DILocation(line: 189, column: 7, scope: !14971, inlinedAt: !15600)
!15605 = !DILocation(line: 189, column: 35, scope: !14971, inlinedAt: !15600)
!15606 = !DILocation(line: 189, column: 7, scope: !14972, inlinedAt: !15600)
!15607 = !DILocation(line: 191, column: 21, scope: !14976, inlinedAt: !15600)
!15608 = !DILocation(line: 190, column: 4, scope: !14976, inlinedAt: !15600)
!15609 = !DILocation(line: 192, column: 4, scope: !14976, inlinedAt: !15600)
!15610 = distinct !{!15610, !15601, !15611}
!15611 = !DILocation(line: 194, column: 2, scope: !14966, inlinedAt: !15600)
!15612 = !DILocation(line: 196, column: 37, scope: !14956, inlinedAt: !15600)
!15613 = !DILocation(line: 196, column: 2, scope: !14956, inlinedAt: !15600)
!15614 = !DILocation(line: 197, column: 1, scope: !14956, inlinedAt: !15600)
!15615 = !DILocation(line: 751, column: 1, scope: !15583)
!15616 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2488, file: !2488, line: 753, type: !15617, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15619)
!15617 = !DISubroutineType(types: !15618)
!15618 = !{null, !2383, !15547}
!15619 = !{!15620, !15621}
!15620 = !DILocalVariable(name: "thread", arg: 1, scope: !15616, file: !2488, line: 753, type: !2383)
!15621 = !DILocalVariable(name: "timeout", arg: 2, scope: !15616, file: !2488, line: 753, type: !15547)
!15622 = !DILocation(line: 0, scope: !15616)
!15623 = !DILocation(line: 755, column: 7, scope: !15624)
!15624 = distinct !DILexicalBlock(scope: !15616, file: !2488, line: 755, column: 6)
!15625 = !DILocation(line: 755, column: 6, scope: !15616)
!15626 = !DILocation(line: 756, column: 3, scope: !15627)
!15627 = distinct !DILexicalBlock(scope: !15624, file: !2488, line: 755, column: 41)
!15628 = !DILocation(line: 757, column: 2, scope: !15627)
!15629 = !DILocation(line: 758, column: 1, scope: !15616)
!15630 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14158, file: !14158, line: 47, type: !15617, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15631)
!15631 = !{!15632, !15633}
!15632 = !DILocalVariable(name: "thread", arg: 1, scope: !15630, file: !14158, line: 47, type: !2383)
!15633 = !DILocalVariable(name: "ticks", arg: 2, scope: !15630, file: !14158, line: 47, type: !15547)
!15634 = !DILocation(line: 0, scope: !15630)
!15635 = !DILocation(line: 49, column: 30, scope: !15630)
!15636 = !DILocation(line: 49, column: 2, scope: !15630)
!15637 = !DILocation(line: 50, column: 1, scope: !15630)
!15638 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2488, file: !2488, line: 795, type: !2440, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15639)
!15639 = !{!15640, !15641, !15642, !15644, !15645}
!15640 = !DILocalVariable(name: "timeout", arg: 1, scope: !15638, file: !2488, line: 795, type: !2442)
!15641 = !DILocalVariable(name: "thread", scope: !15638, file: !2488, line: 797, type: !2383)
!15642 = !DILocalVariable(name: "__i", scope: !15643, file: !2488, line: 800, type: !14748)
!15643 = distinct !DILexicalBlock(scope: !15638, file: !2488, line: 800, column: 2)
!15644 = !DILocalVariable(name: "__key", scope: !15643, file: !2488, line: 800, type: !14748)
!15645 = !DILocalVariable(name: "killed", scope: !15646, file: !2488, line: 801, type: !166)
!15646 = distinct !DILexicalBlock(scope: !15647, file: !2488, line: 800, column: 26)
!15647 = distinct !DILexicalBlock(scope: !15643, file: !2488, line: 800, column: 2)
!15648 = !DILocation(line: 0, scope: !15638)
!15649 = !DILocation(line: 797, column: 28, scope: !15638)
!15650 = !DILocation(line: 0, scope: !15643)
!15651 = !DILocation(line: 0, scope: !14756, inlinedAt: !15652)
!15652 = distinct !DILocation(line: 800, column: 2, scope: !15643)
!15653 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15654)
!15654 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15652)
!15655 = !DILocation(line: 0, scope: !14765, inlinedAt: !15654)
!15656 = !DILocation(line: 801, column: 27, scope: !15646)
!15657 = !DILocation(line: 801, column: 32, scope: !15646)
!15658 = !DILocation(line: 801, column: 61, scope: !15646)
!15659 = !DILocation(line: 0, scope: !15646)
!15660 = !DILocation(line: 804, column: 7, scope: !15646)
!15661 = !DILocation(line: 805, column: 21, scope: !15662)
!15662 = distinct !DILexicalBlock(scope: !15663, file: !2488, line: 805, column: 8)
!15663 = distinct !DILexicalBlock(scope: !15664, file: !2488, line: 804, column: 16)
!15664 = distinct !DILexicalBlock(scope: !15646, file: !2488, line: 804, column: 7)
!15665 = !DILocation(line: 805, column: 31, scope: !15662)
!15666 = !DILocation(line: 805, column: 8, scope: !15663)
!15667 = !DILocation(line: 806, column: 5, scope: !15668)
!15668 = distinct !DILexicalBlock(scope: !15662, file: !2488, line: 805, column: 40)
!15669 = !DILocation(line: 807, column: 4, scope: !15668)
!15670 = !DILocation(line: 808, column: 4, scope: !15663)
!15671 = !DILocation(line: 809, column: 4, scope: !15663)
!15672 = !DILocation(line: 810, column: 4, scope: !15663)
!15673 = !DILocation(line: 811, column: 3, scope: !15663)
!15674 = !DILocation(line: 0, scope: !14783, inlinedAt: !15675)
!15675 = distinct !DILocation(line: 800, column: 2, scope: !15647)
!15676 = !DILocation(line: 0, scope: !14791, inlinedAt: !15677)
!15677 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15675)
!15678 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15677)
!15679 = !DILocation(line: 813, column: 1, scope: !15638)
!15680 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2488, file: !2488, line: 779, type: !14714, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15681)
!15681 = !{!15682}
!15682 = !DILocalVariable(name: "thread", arg: 1, scope: !15680, file: !2488, line: 779, type: !2383)
!15683 = !DILocation(line: 0, scope: !15680)
!15684 = !DILocation(line: 781, column: 2, scope: !15680)
!15685 = !DILocation(line: 782, column: 2, scope: !15680)
!15686 = !DILocation(line: 783, column: 15, scope: !15680)
!15687 = !DILocation(line: 783, column: 25, scope: !15680)
!15688 = !DILocation(line: 784, column: 1, scope: !15680)
!15689 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13764, file: !13764, line: 165, type: !14714, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15690)
!15690 = !{!15691}
!15691 = !DILocalVariable(name: "thread", arg: 1, scope: !15689, file: !13764, line: 165, type: !2383)
!15692 = !DILocation(line: 0, scope: !15689)
!15693 = !DILocation(line: 167, column: 15, scope: !15689)
!15694 = !DILocation(line: 167, column: 28, scope: !15689)
!15695 = !DILocation(line: 168, column: 1, scope: !15689)
!15696 = distinct !DISubprogram(name: "unready_thread", scope: !2488, file: !2488, line: 731, type: !14714, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15697)
!15697 = !{!15698}
!15698 = !DILocalVariable(name: "thread", arg: 1, scope: !15696, file: !2488, line: 731, type: !2383)
!15699 = !DILocation(line: 0, scope: !15696)
!15700 = !DILocation(line: 733, column: 6, scope: !15701)
!15701 = distinct !DILexicalBlock(scope: !15696, file: !2488, line: 733, column: 6)
!15702 = !DILocation(line: 733, column: 6, scope: !15696)
!15703 = !DILocation(line: 0, scope: !14925, inlinedAt: !15704)
!15704 = distinct !DILocation(line: 734, column: 3, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15701, file: !2488, line: 733, column: 34)
!15706 = !DILocation(line: 266, column: 15, scope: !14925, inlinedAt: !15704)
!15707 = !DILocation(line: 266, column: 28, scope: !14925, inlinedAt: !15704)
!15708 = !DILocation(line: 0, scope: !14933, inlinedAt: !15709)
!15709 = distinct !DILocation(line: 268, column: 3, scope: !14937, inlinedAt: !15704)
!15710 = !DILocation(line: 234, column: 2, scope: !14933, inlinedAt: !15709)
!15711 = !DILocation(line: 735, column: 2, scope: !15705)
!15712 = !DILocation(line: 736, column: 25, scope: !15696)
!15713 = !DILocation(line: 736, column: 22, scope: !15696)
!15714 = !DILocation(line: 736, column: 2, scope: !15696)
!15715 = !DILocation(line: 737, column: 1, scope: !15696)
!15716 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13764, file: !13764, line: 160, type: !14714, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15717)
!15717 = !{!15718}
!15718 = !DILocalVariable(name: "thread", arg: 1, scope: !15716, file: !13764, line: 160, type: !2383)
!15719 = !DILocation(line: 0, scope: !15716)
!15720 = !DILocation(line: 162, column: 15, scope: !15716)
!15721 = !DILocation(line: 162, column: 28, scope: !15716)
!15722 = !DILocation(line: 163, column: 1, scope: !15716)
!15723 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2488, file: !2488, line: 786, type: !14714, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15724)
!15724 = !{!15725, !15726, !15728}
!15725 = !DILocalVariable(name: "thread", arg: 1, scope: !15723, file: !2488, line: 786, type: !2383)
!15726 = !DILocalVariable(name: "__i", scope: !15727, file: !2488, line: 788, type: !14748)
!15727 = distinct !DILexicalBlock(scope: !15723, file: !2488, line: 788, column: 2)
!15728 = !DILocalVariable(name: "__key", scope: !15727, file: !2488, line: 788, type: !14748)
!15729 = !DILocation(line: 0, scope: !15723)
!15730 = !DILocation(line: 0, scope: !15727)
!15731 = !DILocation(line: 0, scope: !14756, inlinedAt: !15732)
!15732 = distinct !DILocation(line: 788, column: 2, scope: !15727)
!15733 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15734)
!15734 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15732)
!15735 = !DILocation(line: 0, scope: !14765, inlinedAt: !15734)
!15736 = !DILocation(line: 789, column: 3, scope: !15737)
!15737 = distinct !DILexicalBlock(scope: !15738, file: !2488, line: 788, column: 26)
!15738 = distinct !DILexicalBlock(scope: !15727, file: !2488, line: 788, column: 2)
!15739 = !DILocation(line: 0, scope: !14783, inlinedAt: !15740)
!15740 = distinct !DILocation(line: 788, column: 2, scope: !15738)
!15741 = !DILocation(line: 0, scope: !14791, inlinedAt: !15742)
!15742 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15740)
!15743 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15742)
!15744 = !DILocation(line: 791, column: 1, scope: !15723)
!15745 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2488, file: !2488, line: 816, type: !15746, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15748)
!15746 = !DISubroutineType(types: !15747)
!15747 = !{!103, !132, !2414, !15547}
!15748 = !{!15749, !15750, !15751, !15752, !15753, !15755}
!15749 = !DILocalVariable(name: "key", arg: 1, scope: !15745, file: !2488, line: 816, type: !132)
!15750 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15745, file: !2488, line: 816, type: !2414)
!15751 = !DILocalVariable(name: "timeout", arg: 3, scope: !15745, file: !2488, line: 816, type: !15547)
!15752 = !DILocalVariable(name: "ret", scope: !15745, file: !2488, line: 828, type: !103)
!15753 = !DILocalVariable(name: "__i", scope: !15754, file: !2488, line: 829, type: !14748)
!15754 = distinct !DILexicalBlock(scope: !15745, file: !2488, line: 829, column: 2)
!15755 = !DILocalVariable(name: "__key", scope: !15754, file: !2488, line: 829, type: !14748)
!15756 = !DILocation(line: 0, scope: !15745)
!15757 = !DILocation(line: 823, column: 14, scope: !15745)
!15758 = !DILocation(line: 823, column: 2, scope: !15745)
!15759 = !DILocation(line: 826, column: 20, scope: !15745)
!15760 = !DILocation(line: 826, column: 18, scope: !15745)
!15761 = !DILocation(line: 828, column: 12, scope: !15745)
!15762 = !DILocation(line: 0, scope: !15754)
!15763 = !DILocation(line: 0, scope: !14756, inlinedAt: !15764)
!15764 = distinct !DILocation(line: 829, column: 2, scope: !15754)
!15765 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15766)
!15766 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15764)
!15767 = !DILocation(line: 0, scope: !14765, inlinedAt: !15766)
!15768 = !DILocation(line: 830, column: 7, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15770, file: !2488, line: 830, column: 7)
!15770 = distinct !DILexicalBlock(scope: !15771, file: !2488, line: 829, column: 26)
!15771 = distinct !DILexicalBlock(scope: !15754, file: !2488, line: 829, column: 2)
!15772 = !DILocation(line: 830, column: 26, scope: !15769)
!15773 = !DILocation(line: 830, column: 23, scope: !15769)
!15774 = !DILocation(line: 830, column: 7, scope: !15770)
!15775 = !DILocation(line: 831, column: 20, scope: !15776)
!15776 = distinct !DILexicalBlock(scope: !15769, file: !2488, line: 830, column: 36)
!15777 = !DILocation(line: 832, column: 3, scope: !15776)
!15778 = !DILocation(line: 0, scope: !14783, inlinedAt: !15779)
!15779 = distinct !DILocation(line: 829, column: 2, scope: !15771)
!15780 = !DILocation(line: 0, scope: !14791, inlinedAt: !15781)
!15781 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15779)
!15782 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15781)
!15783 = !DILocation(line: 834, column: 2, scope: !15745)
!15784 = distinct !DISubprogram(name: "z_pend_curr", scope: !2488, file: !2488, line: 840, type: !15785, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15787)
!15785 = !DISubroutineType(types: !15786)
!15786 = !{!103, !14759, !14748, !2414, !15547}
!15787 = !{!15788, !15789, !15790, !15791}
!15788 = !DILocalVariable(name: "lock", arg: 1, scope: !15784, file: !2488, line: 840, type: !14759)
!15789 = !DILocalVariable(name: "key", arg: 2, scope: !15784, file: !2488, line: 840, type: !14748)
!15790 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15784, file: !2488, line: 841, type: !2414)
!15791 = !DILocalVariable(name: "timeout", arg: 4, scope: !15784, file: !2488, line: 841, type: !15547)
!15792 = !DILocation(line: 0, scope: !15784)
!15793 = !DILocation(line: 844, column: 20, scope: !15784)
!15794 = !DILocation(line: 844, column: 18, scope: !15784)
!15795 = !DILocation(line: 0, scope: !14756, inlinedAt: !15796)
!15796 = distinct !DILocation(line: 856, column: 9, scope: !15784)
!15797 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15798)
!15798 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15796)
!15799 = !DILocation(line: 0, scope: !14765, inlinedAt: !15798)
!15800 = !DILocation(line: 857, column: 14, scope: !15784)
!15801 = !DILocation(line: 857, column: 2, scope: !15784)
!15802 = !DILocation(line: 0, scope: !15367, inlinedAt: !15803)
!15803 = distinct !DILocation(line: 859, column: 9, scope: !15784)
!15804 = !DILocation(line: 196, column: 9, scope: !15367, inlinedAt: !15803)
!15805 = !DILocation(line: 859, column: 2, scope: !15784)
!15806 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2488, file: !2488, line: 862, type: !15807, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15809)
!15807 = !DISubroutineType(types: !15808)
!15808 = !{!2383, !2414}
!15809 = !{!15810, !15811, !15812, !15814}
!15810 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15806, file: !2488, line: 862, type: !2414)
!15811 = !DILocalVariable(name: "thread", scope: !15806, file: !2488, line: 864, type: !2383)
!15812 = !DILocalVariable(name: "__i", scope: !15813, file: !2488, line: 866, type: !14748)
!15813 = distinct !DILexicalBlock(scope: !15806, file: !2488, line: 866, column: 2)
!15814 = !DILocalVariable(name: "__key", scope: !15813, file: !2488, line: 866, type: !14748)
!15815 = !DILocation(line: 0, scope: !15806)
!15816 = !DILocation(line: 0, scope: !15813)
!15817 = !DILocation(line: 0, scope: !14756, inlinedAt: !15818)
!15818 = distinct !DILocation(line: 866, column: 2, scope: !15813)
!15819 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15820)
!15820 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15818)
!15821 = !DILocation(line: 0, scope: !14765, inlinedAt: !15820)
!15822 = !DILocation(line: 867, column: 12, scope: !15823)
!15823 = distinct !DILexicalBlock(scope: !15824, file: !2488, line: 866, column: 26)
!15824 = distinct !DILexicalBlock(scope: !15813, file: !2488, line: 866, column: 2)
!15825 = !DILocation(line: 869, column: 14, scope: !15826)
!15826 = distinct !DILexicalBlock(scope: !15823, file: !2488, line: 869, column: 7)
!15827 = !DILocation(line: 869, column: 7, scope: !15823)
!15828 = !DILocation(line: 870, column: 4, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15826, file: !2488, line: 869, column: 23)
!15830 = !DILocation(line: 871, column: 3, scope: !15829)
!15831 = !DILocation(line: 0, scope: !14783, inlinedAt: !15832)
!15832 = distinct !DILocation(line: 866, column: 2, scope: !15824)
!15833 = !DILocation(line: 0, scope: !14791, inlinedAt: !15834)
!15834 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15832)
!15835 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15834)
!15836 = !DILocation(line: 874, column: 2, scope: !15806)
!15837 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2488, file: !2488, line: 877, type: !15807, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15838)
!15838 = !{!15839, !15840, !15841, !15843}
!15839 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15837, file: !2488, line: 877, type: !2414)
!15840 = !DILocalVariable(name: "thread", scope: !15837, file: !2488, line: 879, type: !2383)
!15841 = !DILocalVariable(name: "__i", scope: !15842, file: !2488, line: 881, type: !14748)
!15842 = distinct !DILexicalBlock(scope: !15837, file: !2488, line: 881, column: 2)
!15843 = !DILocalVariable(name: "__key", scope: !15842, file: !2488, line: 881, type: !14748)
!15844 = !DILocation(line: 0, scope: !15837)
!15845 = !DILocation(line: 0, scope: !15842)
!15846 = !DILocation(line: 0, scope: !14756, inlinedAt: !15847)
!15847 = distinct !DILocation(line: 881, column: 2, scope: !15842)
!15848 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15849)
!15849 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15847)
!15850 = !DILocation(line: 0, scope: !14765, inlinedAt: !15849)
!15851 = !DILocation(line: 882, column: 12, scope: !15852)
!15852 = distinct !DILexicalBlock(scope: !15853, file: !2488, line: 881, column: 26)
!15853 = distinct !DILexicalBlock(scope: !15842, file: !2488, line: 881, column: 2)
!15854 = !DILocation(line: 884, column: 14, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15852, file: !2488, line: 884, column: 7)
!15856 = !DILocation(line: 884, column: 7, scope: !15852)
!15857 = !DILocation(line: 885, column: 4, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15855, file: !2488, line: 884, column: 23)
!15859 = !DILocation(line: 886, column: 10, scope: !15858)
!15860 = !DILocation(line: 887, column: 3, scope: !15858)
!15861 = !DILocation(line: 0, scope: !14783, inlinedAt: !15862)
!15862 = distinct !DILocation(line: 881, column: 2, scope: !15853)
!15863 = !DILocation(line: 0, scope: !14791, inlinedAt: !15864)
!15864 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15862)
!15865 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15864)
!15866 = !DILocation(line: 890, column: 2, scope: !15837)
!15867 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2488, file: !2488, line: 893, type: !14714, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15868)
!15868 = !{!15869}
!15869 = !DILocalVariable(name: "thread", arg: 1, scope: !15867, file: !2488, line: 893, type: !2383)
!15870 = !DILocation(line: 0, scope: !15867)
!15871 = !DILocation(line: 0, scope: !15723, inlinedAt: !15872)
!15872 = distinct !DILocation(line: 895, column: 2, scope: !15867)
!15873 = !DILocation(line: 0, scope: !15727, inlinedAt: !15872)
!15874 = !DILocation(line: 0, scope: !14756, inlinedAt: !15875)
!15875 = distinct !DILocation(line: 788, column: 2, scope: !15727, inlinedAt: !15872)
!15876 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15877)
!15877 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15875)
!15878 = !DILocation(line: 0, scope: !14765, inlinedAt: !15877)
!15879 = !DILocation(line: 789, column: 3, scope: !15737, inlinedAt: !15872)
!15880 = !DILocation(line: 0, scope: !14783, inlinedAt: !15881)
!15881 = distinct !DILocation(line: 788, column: 2, scope: !15738, inlinedAt: !15872)
!15882 = !DILocation(line: 0, scope: !14791, inlinedAt: !15883)
!15883 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15881)
!15884 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15883)
!15885 = !DILocation(line: 896, column: 8, scope: !15867)
!15886 = !DILocation(line: 897, column: 1, scope: !15867)
!15887 = distinct !DISubprogram(name: "z_set_prio", scope: !2488, file: !2488, line: 902, type: !15076, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15888)
!15888 = !{!15889, !15890, !15891, !15892, !15894}
!15889 = !DILocalVariable(name: "thread", arg: 1, scope: !15887, file: !2488, line: 902, type: !2383)
!15890 = !DILocalVariable(name: "prio", arg: 2, scope: !15887, file: !2488, line: 902, type: !103)
!15891 = !DILocalVariable(name: "need_sched", scope: !15887, file: !2488, line: 904, type: !166)
!15892 = !DILocalVariable(name: "__i", scope: !15893, file: !2488, line: 906, type: !14748)
!15893 = distinct !DILexicalBlock(scope: !15887, file: !2488, line: 906, column: 2)
!15894 = !DILocalVariable(name: "__key", scope: !15893, file: !2488, line: 906, type: !14748)
!15895 = !DILocation(line: 0, scope: !15887)
!15896 = !DILocation(line: 0, scope: !15893)
!15897 = !DILocation(line: 0, scope: !14756, inlinedAt: !15898)
!15898 = distinct !DILocation(line: 906, column: 2, scope: !15893)
!15899 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15900)
!15900 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15898)
!15901 = !DILocation(line: 0, scope: !14765, inlinedAt: !15900)
!15902 = !DILocation(line: 907, column: 16, scope: !15903)
!15903 = distinct !DILexicalBlock(scope: !15904, file: !2488, line: 906, column: 26)
!15904 = distinct !DILexicalBlock(scope: !15893, file: !2488, line: 906, column: 2)
!15905 = !DILocation(line: 909, column: 7, scope: !15903)
!15906 = !DILocation(line: 0, scope: !14925, inlinedAt: !15907)
!15907 = distinct !DILocation(line: 912, column: 5, scope: !15908)
!15908 = distinct !DILexicalBlock(scope: !15909, file: !2488, line: 911, column: 63)
!15909 = distinct !DILexicalBlock(scope: !15910, file: !2488, line: 911, column: 8)
!15910 = distinct !DILexicalBlock(scope: !15911, file: !2488, line: 909, column: 19)
!15911 = distinct !DILexicalBlock(scope: !15903, file: !2488, line: 909, column: 7)
!15912 = !DILocation(line: 266, column: 28, scope: !14925, inlinedAt: !15907)
!15913 = !DILocation(line: 0, scope: !14933, inlinedAt: !15914)
!15914 = distinct !DILocation(line: 268, column: 3, scope: !14937, inlinedAt: !15907)
!15915 = !DILocation(line: 234, column: 2, scope: !14933, inlinedAt: !15914)
!15916 = !DILocation(line: 913, column: 23, scope: !15908)
!15917 = !DILocation(line: 0, scope: !14942, inlinedAt: !15918)
!15918 = distinct !DILocation(line: 914, column: 5, scope: !15908)
!15919 = !DILocation(line: 252, column: 28, scope: !14942, inlinedAt: !15918)
!15920 = !DILocation(line: 0, scope: !14949, inlinedAt: !15921)
!15921 = distinct !DILocation(line: 254, column: 3, scope: !14953, inlinedAt: !15918)
!15922 = !DILocation(line: 0, scope: !14956, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 229, column: 2, scope: !14949, inlinedAt: !15921)
!15924 = !DILocation(line: 188, column: 2, scope: !14966, inlinedAt: !15923)
!15925 = !DILocation(line: 188, column: 2, scope: !14968, inlinedAt: !15923)
!15926 = !DILocation(line: 0, scope: !14966, inlinedAt: !15923)
!15927 = !DILocation(line: 189, column: 7, scope: !14971, inlinedAt: !15923)
!15928 = !DILocation(line: 189, column: 35, scope: !14971, inlinedAt: !15923)
!15929 = !DILocation(line: 189, column: 7, scope: !14972, inlinedAt: !15923)
!15930 = !DILocation(line: 190, column: 4, scope: !14976, inlinedAt: !15923)
!15931 = !DILocation(line: 192, column: 4, scope: !14976, inlinedAt: !15923)
!15932 = distinct !{!15932, !15924, !15933}
!15933 = !DILocation(line: 194, column: 2, scope: !14966, inlinedAt: !15923)
!15934 = !DILocation(line: 196, column: 2, scope: !14956, inlinedAt: !15923)
!15935 = !DILocation(line: 197, column: 1, scope: !14956, inlinedAt: !15923)
!15936 = !DILocation(line: 918, column: 4, scope: !15910)
!15937 = !DILocation(line: 919, column: 3, scope: !15910)
!15938 = !DILocation(line: 920, column: 22, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15911, file: !2488, line: 919, column: 10)
!15940 = !DILocation(line: 0, scope: !14783, inlinedAt: !15941)
!15941 = distinct !DILocation(line: 906, column: 2, scope: !15904)
!15942 = !DILocation(line: 0, scope: !14791, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15941)
!15944 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15943)
!15945 = !DILocation(line: 926, column: 2, scope: !15887)
!15946 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2488, file: !2488, line: 929, type: !15947, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15949)
!15947 = !DISubroutineType(types: !15948)
!15948 = !{null, !2383, !103}
!15949 = !{!15950, !15951, !15952}
!15950 = !DILocalVariable(name: "thread", arg: 1, scope: !15946, file: !2488, line: 929, type: !2383)
!15951 = !DILocalVariable(name: "prio", arg: 2, scope: !15946, file: !2488, line: 929, type: !103)
!15952 = !DILocalVariable(name: "need_sched", scope: !15946, file: !2488, line: 931, type: !166)
!15953 = !DILocation(line: 0, scope: !15946)
!15954 = !DILocation(line: 931, column: 20, scope: !15946)
!15955 = !DILocation(line: 935, column: 17, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !15946, file: !2488, line: 935, column: 6)
!15957 = !DILocation(line: 935, column: 20, scope: !15956)
!15958 = !DILocation(line: 935, column: 35, scope: !15956)
!15959 = !DILocation(line: 935, column: 48, scope: !15956)
!15960 = !DILocation(line: 935, column: 6, scope: !15946)
!15961 = !DILocation(line: 936, column: 3, scope: !15962)
!15962 = distinct !DILexicalBlock(scope: !15956, file: !2488, line: 935, column: 55)
!15963 = !DILocation(line: 937, column: 2, scope: !15962)
!15964 = !DILocation(line: 938, column: 1, scope: !15946)
!15965 = distinct !DISubprogram(name: "k_sched_lock", scope: !2488, file: !2488, line: 987, type: !3256, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15966)
!15966 = !{!15967, !15969}
!15967 = !DILocalVariable(name: "__i", scope: !15968, file: !2488, line: 989, type: !14748)
!15968 = distinct !DILexicalBlock(scope: !15965, file: !2488, line: 989, column: 2)
!15969 = !DILocalVariable(name: "__key", scope: !15968, file: !2488, line: 989, type: !14748)
!15970 = !DILocation(line: 0, scope: !15968)
!15971 = !DILocation(line: 0, scope: !14756, inlinedAt: !15972)
!15972 = distinct !DILocation(line: 989, column: 2, scope: !15968)
!15973 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !15974)
!15974 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !15972)
!15975 = !DILocation(line: 0, scope: !14765, inlinedAt: !15974)
!15976 = !DILocation(line: 992, column: 3, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15978, file: !2488, line: 989, column: 26)
!15978 = distinct !DILexicalBlock(scope: !15968, file: !2488, line: 989, column: 2)
!15979 = !DILocation(line: 0, scope: !14783, inlinedAt: !15980)
!15980 = distinct !DILocation(line: 989, column: 2, scope: !15978)
!15981 = !DILocation(line: 0, scope: !14791, inlinedAt: !15982)
!15982 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !15980)
!15983 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !15982)
!15984 = !DILocation(line: 994, column: 1, scope: !15965)
!15985 = distinct !DISubprogram(name: "z_sched_lock", scope: !13764, file: !13764, line: 251, type: !3256, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !473)
!15986 = !DILocation(line: 256, column: 4, scope: !15985)
!15987 = !DILocation(line: 256, column: 19, scope: !15985)
!15988 = !DILocation(line: 256, column: 2, scope: !15985)
!15989 = !DILocation(line: 258, column: 2, scope: !15990)
!15990 = distinct !DILexicalBlock(scope: !15985, file: !13764, line: 258, column: 2)
!15991 = !{i64 2154966279}
!15992 = !DILocation(line: 259, column: 1, scope: !15985)
!15993 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2488, file: !2488, line: 996, type: !3256, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15994)
!15994 = !{!15995, !15997}
!15995 = !DILocalVariable(name: "__i", scope: !15996, file: !2488, line: 998, type: !14748)
!15996 = distinct !DILexicalBlock(scope: !15993, file: !2488, line: 998, column: 2)
!15997 = !DILocalVariable(name: "__key", scope: !15996, file: !2488, line: 998, type: !14748)
!15998 = !DILocation(line: 0, scope: !15996)
!15999 = !DILocation(line: 0, scope: !14756, inlinedAt: !16000)
!16000 = distinct !DILocation(line: 998, column: 2, scope: !15996)
!16001 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !16002)
!16002 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !16000)
!16003 = !DILocation(line: 0, scope: !14765, inlinedAt: !16002)
!16004 = !DILocation(line: 1002, column: 5, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !16006, file: !2488, line: 998, column: 26)
!16006 = distinct !DILexicalBlock(scope: !15996, file: !2488, line: 998, column: 2)
!16007 = !DILocation(line: 1002, column: 20, scope: !16005)
!16008 = !DILocation(line: 1002, column: 3, scope: !16005)
!16009 = !DILocation(line: 1003, column: 3, scope: !16005)
!16010 = !DILocation(line: 0, scope: !14783, inlinedAt: !16011)
!16011 = distinct !DILocation(line: 998, column: 2, scope: !16006)
!16012 = !DILocation(line: 0, scope: !14791, inlinedAt: !16013)
!16013 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !16011)
!16014 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !16013)
!16015 = !DILocation(line: 1011, column: 2, scope: !15993)
!16016 = !DILocation(line: 1012, column: 1, scope: !15993)
!16017 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2488, file: !2488, line: 1014, type: !15064, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !473)
!16018 = !DILocation(line: 1028, column: 25, scope: !16017)
!16019 = !DILocation(line: 1028, column: 2, scope: !16017)
!16020 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2488, file: !2488, line: 1155, type: !16021, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16023)
!16021 = !DISubroutineType(types: !16022)
!16022 = !{!166, !2412, !2412}
!16023 = !{!16024, !16025, !16026, !16027, !16028}
!16024 = !DILocalVariable(name: "a", arg: 1, scope: !16020, file: !2488, line: 1155, type: !2412)
!16025 = !DILocalVariable(name: "b", arg: 2, scope: !16020, file: !2488, line: 1155, type: !2412)
!16026 = !DILocalVariable(name: "thread_a", scope: !16020, file: !2488, line: 1157, type: !2383)
!16027 = !DILocalVariable(name: "thread_b", scope: !16020, file: !2488, line: 1157, type: !2383)
!16028 = !DILocalVariable(name: "cmp", scope: !16020, file: !2488, line: 1158, type: !344)
!16029 = !DILocation(line: 0, scope: !16020)
!16030 = !DILocation(line: 1160, column: 13, scope: !16020)
!16031 = !DILocation(line: 1161, column: 13, scope: !16020)
!16032 = !DILocation(line: 1163, column: 8, scope: !16020)
!16033 = !DILocation(line: 1165, column: 10, scope: !16034)
!16034 = distinct !DILexicalBlock(scope: !16020, file: !2488, line: 1165, column: 6)
!16035 = !DILocation(line: 1165, column: 6, scope: !16020)
!16036 = !DILocation(line: 1167, column: 17, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !16034, file: !2488, line: 1167, column: 13)
!16038 = !DILocation(line: 1167, column: 13, scope: !16034)
!16039 = !DILocation(line: 1170, column: 25, scope: !16040)
!16040 = distinct !DILexicalBlock(scope: !16037, file: !2488, line: 1169, column: 9)
!16041 = !DILocation(line: 1170, column: 52, scope: !16040)
!16042 = !DILocation(line: 1170, column: 35, scope: !16040)
!16043 = !DILocation(line: 1170, column: 3, scope: !16040)
!16044 = !DILocation(line: 0, scope: !16034)
!16045 = !DILocation(line: 1173, column: 1, scope: !16020)
!16046 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2488, file: !2488, line: 1175, type: !16047, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16062)
!16047 = !DISubroutineType(types: !16048)
!16048 = !{null, !16049, !2383}
!16049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16050, size: 32)
!16050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16051, line: 37, size: 128, elements: !16052)
!16051 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16052 = !{!16053, !16061}
!16053 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16050, file: !16051, line: 38, baseType: !16054, size: 96)
!16054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !392, line: 83, size: 96, elements: !16055)
!16055 = !{!16056, !16057, !16060}
!16056 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16054, file: !392, line: 84, baseType: !2412, size: 32)
!16057 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16054, file: !392, line: 85, baseType: !16058, size: 32, offset: 32)
!16058 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !392, line: 81, baseType: !16059)
!16059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16021, size: 32)
!16060 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16054, file: !392, line: 86, baseType: !103, size: 32, offset: 64)
!16061 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16050, file: !16051, line: 39, baseType: !103, size: 32, offset: 96)
!16062 = !{!16063, !16064, !16065, !16066, !16075}
!16063 = !DILocalVariable(name: "pq", arg: 1, scope: !16046, file: !2488, line: 1175, type: !16049)
!16064 = !DILocalVariable(name: "thread", arg: 2, scope: !16046, file: !2488, line: 1175, type: !2383)
!16065 = !DILocalVariable(name: "t", scope: !16046, file: !2488, line: 1177, type: !2383)
!16066 = !DILocalVariable(name: "__f", scope: !16067, file: !2488, line: 1190, type: !16070)
!16067 = distinct !DILexicalBlock(scope: !16068, file: !2488, line: 1190, column: 3)
!16068 = distinct !DILexicalBlock(scope: !16069, file: !2488, line: 1189, column: 27)
!16069 = distinct !DILexicalBlock(scope: !16046, file: !2488, line: 1189, column: 6)
!16070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !392, line: 155, size: 96, elements: !16071)
!16071 = !{!16072, !16073, !16074}
!16072 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16070, file: !392, line: 156, baseType: !2483, size: 32)
!16073 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16070, file: !392, line: 157, baseType: !270, size: 32, offset: 32)
!16074 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16070, file: !392, line: 158, baseType: !344, size: 32, offset: 64)
!16075 = !DILocalVariable(name: "n", scope: !16076, file: !2488, line: 1190, type: !2412)
!16076 = distinct !DILexicalBlock(scope: !16077, file: !2488, line: 1190, column: 3)
!16077 = distinct !DILexicalBlock(scope: !16067, file: !2488, line: 1190, column: 3)
!16078 = !DILocation(line: 0, scope: !16046)
!16079 = !DILocation(line: 1181, column: 31, scope: !16046)
!16080 = !DILocation(line: 1181, column: 45, scope: !16046)
!16081 = !DILocation(line: 1181, column: 15, scope: !16046)
!16082 = !DILocation(line: 1181, column: 25, scope: !16046)
!16083 = !DILocation(line: 1189, column: 11, scope: !16069)
!16084 = !DILocation(line: 1189, column: 7, scope: !16069)
!16085 = !DILocation(line: 1189, column: 6, scope: !16046)
!16086 = !DILocation(line: 1190, column: 3, scope: !16067)
!16087 = !DILocation(line: 1190, column: 3, scope: !16076)
!16088 = !DILocation(line: 0, scope: !16076)
!16089 = !DILocation(line: 1190, column: 3, scope: !16077)
!16090 = !DILocation(line: 1193, column: 2, scope: !16068)
!16091 = !DILocation(line: 1191, column: 42, scope: !16092)
!16092 = distinct !DILexicalBlock(scope: !16077, file: !2488, line: 1190, column: 54)
!16093 = !DILocation(line: 1191, column: 12, scope: !16092)
!16094 = !DILocation(line: 1191, column: 22, scope: !16092)
!16095 = distinct !{!16095, !16086, !16096}
!16096 = !DILocation(line: 1192, column: 3, scope: !16067)
!16097 = !DILocation(line: 1195, column: 17, scope: !16046)
!16098 = !DILocation(line: 1195, column: 37, scope: !16046)
!16099 = !DILocation(line: 1195, column: 2, scope: !16046)
!16100 = !DILocation(line: 1196, column: 1, scope: !16046)
!16101 = !DISubprogram(name: "z_rb_foreach_next", scope: !392, file: !392, line: 176, type: !16102, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16102 = !DISubroutineType(types: !16103)
!16103 = !{!2412, !16104, !16105}
!16104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16054, size: 32)
!16105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16070, size: 32)
!16106 = !DISubprogram(name: "rb_insert", scope: !392, file: !392, line: 105, type: !16107, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16107 = !DISubroutineType(types: !16108)
!16108 = !{null, !16104, !2412}
!16109 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2488, file: !2488, line: 1198, type: !16047, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16110)
!16110 = !{!16111, !16112}
!16111 = !DILocalVariable(name: "pq", arg: 1, scope: !16109, file: !2488, line: 1198, type: !16049)
!16112 = !DILocalVariable(name: "thread", arg: 2, scope: !16109, file: !2488, line: 1198, type: !2383)
!16113 = !DILocation(line: 0, scope: !16109)
!16114 = !DILocation(line: 1202, column: 17, scope: !16109)
!16115 = !DILocation(line: 1202, column: 37, scope: !16109)
!16116 = !DILocation(line: 1202, column: 2, scope: !16109)
!16117 = !DILocation(line: 1204, column: 16, scope: !16118)
!16118 = distinct !DILexicalBlock(scope: !16109, file: !2488, line: 1204, column: 6)
!16119 = !DILocation(line: 1204, column: 7, scope: !16118)
!16120 = !DILocation(line: 1204, column: 6, scope: !16109)
!16121 = !DILocation(line: 1205, column: 7, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16118, file: !2488, line: 1204, column: 22)
!16123 = !DILocation(line: 1205, column: 22, scope: !16122)
!16124 = !DILocation(line: 1206, column: 2, scope: !16122)
!16125 = !DILocation(line: 1207, column: 1, scope: !16109)
!16126 = !DISubprogram(name: "rb_remove", scope: !392, file: !392, line: 110, type: !16107, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16127 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2488, file: !2488, line: 1209, type: !16128, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16130)
!16128 = !DISubroutineType(types: !16129)
!16129 = !{!2383, !16049}
!16130 = !{!16131, !16132, !16133}
!16131 = !DILocalVariable(name: "pq", arg: 1, scope: !16127, file: !2488, line: 1209, type: !16049)
!16132 = !DILocalVariable(name: "thread", scope: !16127, file: !2488, line: 1211, type: !2383)
!16133 = !DILocalVariable(name: "n", scope: !16127, file: !2488, line: 1212, type: !2412)
!16134 = !DILocation(line: 0, scope: !16127)
!16135 = !DILocation(line: 1212, column: 37, scope: !16127)
!16136 = !DILocation(line: 1212, column: 21, scope: !16127)
!16137 = !DILocation(line: 1217, column: 2, scope: !16127)
!16138 = distinct !DISubprogram(name: "rb_get_min", scope: !392, file: !392, line: 115, type: !16139, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16141)
!16139 = !DISubroutineType(types: !16140)
!16140 = !{!2412, !16104}
!16141 = !{!16142}
!16142 = !DILocalVariable(name: "tree", arg: 1, scope: !16138, file: !392, line: 115, type: !16104)
!16143 = !DILocation(line: 0, scope: !16138)
!16144 = !DILocation(line: 117, column: 9, scope: !16138)
!16145 = !DILocation(line: 117, column: 2, scope: !16138)
!16146 = !DISubprogram(name: "z_rb_get_minmax", scope: !392, file: !392, line: 100, type: !16147, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16147 = !DISubroutineType(types: !16148)
!16148 = !{!2412, !16104, !163}
!16149 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2488, file: !2488, line: 1246, type: !16150, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16160)
!16150 = !DISubroutineType(types: !16151)
!16151 = !{!2383, !16152}
!16152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16153, size: 32)
!16153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16051, line: 53, size: 2080, elements: !16154)
!16154 = !{!16155, !16159}
!16155 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16153, file: !16051, line: 54, baseType: !16156, size: 2048)
!16156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2419, size: 2048, elements: !16157)
!16157 = !{!16158}
!16158 = !DISubrange(count: 32)
!16159 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16153, file: !16051, line: 55, baseType: !32, size: 32, offset: 2048)
!16160 = !{!16161, !16162, !16163, !16164}
!16161 = !DILocalVariable(name: "pq", arg: 1, scope: !16149, file: !2488, line: 1246, type: !16152)
!16162 = !DILocalVariable(name: "thread", scope: !16149, file: !2488, line: 1252, type: !2383)
!16163 = !DILocalVariable(name: "l", scope: !16149, file: !2488, line: 1253, type: !14959)
!16164 = !DILocalVariable(name: "n", scope: !16149, file: !2488, line: 1254, type: !2484)
!16165 = !DILocation(line: 0, scope: !16149)
!16166 = !DILocation(line: 1248, column: 11, scope: !16167)
!16167 = distinct !DILexicalBlock(scope: !16149, file: !2488, line: 1248, column: 6)
!16168 = !DILocation(line: 1248, column: 7, scope: !16167)
!16169 = !DILocation(line: 1248, column: 6, scope: !16149)
!16170 = !DILocation(line: 1253, column: 31, scope: !16149)
!16171 = !DILocation(line: 1253, column: 20, scope: !16149)
!16172 = !DILocation(line: 1254, column: 19, scope: !16149)
!16173 = !DILocation(line: 1260, column: 1, scope: !16149)
!16174 = distinct !DISubprogram(name: "z_unpend_all", scope: !2488, file: !2488, line: 1262, type: !16175, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16177)
!16175 = !DISubroutineType(types: !16176)
!16176 = !{!103, !2414}
!16177 = !{!16178, !16179, !16180}
!16178 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16174, file: !2488, line: 1262, type: !2414)
!16179 = !DILocalVariable(name: "need_sched", scope: !16174, file: !2488, line: 1264, type: !103)
!16180 = !DILocalVariable(name: "thread", scope: !16174, file: !2488, line: 1265, type: !2383)
!16181 = !DILocation(line: 0, scope: !16174)
!16182 = !DILocation(line: 1267, column: 19, scope: !16174)
!16183 = !DILocation(line: 1267, column: 41, scope: !16174)
!16184 = !DILocation(line: 1267, column: 2, scope: !16174)
!16185 = !DILocation(line: 1268, column: 3, scope: !16186)
!16186 = distinct !DILexicalBlock(scope: !16174, file: !2488, line: 1267, column: 50)
!16187 = !DILocation(line: 1269, column: 3, scope: !16186)
!16188 = distinct !{!16188, !16184, !16189}
!16189 = !DILocation(line: 1271, column: 2, scope: !16174)
!16190 = !DILocation(line: 1273, column: 2, scope: !16174)
!16191 = distinct !DISubprogram(name: "z_waitq_head", scope: !14090, file: !14090, line: 52, type: !15807, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16192)
!16192 = !{!16193}
!16193 = !DILocalVariable(name: "w", arg: 1, scope: !16191, file: !14090, line: 52, type: !2414)
!16194 = !DILocation(line: 0, scope: !16191)
!16195 = !DILocation(line: 54, column: 52, scope: !16191)
!16196 = !DILocation(line: 54, column: 28, scope: !16191)
!16197 = !DILocation(line: 54, column: 9, scope: !16191)
!16198 = !DILocation(line: 54, column: 2, scope: !16191)
!16199 = distinct !DISubprogram(name: "init_ready_q", scope: !2488, file: !2488, line: 1276, type: !16200, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16207)
!16200 = !DISubroutineType(types: !16201)
!16201 = !{null, !16202}
!16202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16203, size: 32)
!16203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !316, line: 83, size: 96, elements: !16204)
!16204 = !{!16205, !16206}
!16205 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16203, file: !316, line: 86, baseType: !2383, size: 32)
!16206 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16203, file: !316, line: 90, baseType: !2419, size: 64, offset: 32)
!16207 = !{!16208}
!16208 = !DILocalVariable(name: "rq", arg: 1, scope: !16199, file: !2488, line: 1276, type: !16202)
!16209 = !DILocation(line: 0, scope: !16199)
!16210 = !DILocation(line: 1289, column: 22, scope: !16199)
!16211 = !DILocation(line: 1289, column: 2, scope: !16199)
!16212 = !DILocation(line: 1291, column: 1, scope: !16199)
!16213 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !16214, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16216)
!16214 = !DISubroutineType(types: !16215)
!16215 = !{null, !14959}
!16216 = !{!16217}
!16217 = !DILocalVariable(name: "list", arg: 1, scope: !16213, file: !321, line: 197, type: !14959)
!16218 = !DILocation(line: 0, scope: !16213)
!16219 = !DILocation(line: 199, column: 8, scope: !16213)
!16220 = !DILocation(line: 199, column: 13, scope: !16213)
!16221 = !DILocation(line: 200, column: 8, scope: !16213)
!16222 = !DILocation(line: 200, column: 13, scope: !16213)
!16223 = !DILocation(line: 201, column: 1, scope: !16213)
!16224 = distinct !DISubprogram(name: "z_sched_init", scope: !2488, file: !2488, line: 1293, type: !3256, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !473)
!16225 = !DILocation(line: 1302, column: 2, scope: !16224)
!16226 = !DILocation(line: 1306, column: 2, scope: !16224)
!16227 = !DILocation(line: 1309, column: 1, scope: !16224)
!16228 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2488, file: !2488, line: 1311, type: !16229, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16232)
!16229 = !DISubroutineType(types: !16230)
!16230 = !{!103, !16231}
!16231 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !2383)
!16232 = !{!16233}
!16233 = !DILocalVariable(name: "thread", arg: 1, scope: !16228, file: !2488, line: 1311, type: !16231)
!16234 = !DILocation(line: 0, scope: !16228)
!16235 = !DILocation(line: 1313, column: 22, scope: !16228)
!16236 = !DILocation(line: 1313, column: 9, scope: !16228)
!16237 = !DILocation(line: 1313, column: 2, scope: !16228)
!16238 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2488, file: !2488, line: 1325, type: !16239, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16241)
!16239 = !DISubroutineType(types: !16240)
!16240 = !{null, !16231, !103}
!16241 = !{!16242, !16243, !16244}
!16242 = !DILocalVariable(name: "thread", arg: 1, scope: !16238, file: !2488, line: 1325, type: !16231)
!16243 = !DILocalVariable(name: "prio", arg: 2, scope: !16238, file: !2488, line: 1325, type: !103)
!16244 = !DILocalVariable(name: "th", scope: !16238, file: !2488, line: 1334, type: !2383)
!16245 = !DILocation(line: 0, scope: !16238)
!16246 = !DILocation(line: 1336, column: 2, scope: !16238)
!16247 = !DILocation(line: 1337, column: 1, scope: !16238)
!16248 = distinct !DISubprogram(name: "k_can_yield", scope: !2488, file: !2488, line: 1384, type: !7638, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !473)
!16249 = !DILocation(line: 1386, column: 11, scope: !16248)
!16250 = !DILocation(line: 1386, column: 29, scope: !16248)
!16251 = !DILocation(line: 1386, column: 32, scope: !16248)
!16252 = !DILocation(line: 1386, column: 46, scope: !16248)
!16253 = !DILocation(line: 1387, column: 28, scope: !16248)
!16254 = !DILocation(line: 1387, column: 4, scope: !16248)
!16255 = !DILocation(line: 1386, column: 2, scope: !16248)
!16256 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !312, file: !312, line: 989, type: !7638, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !473)
!16257 = !DILocation(line: 993, column: 10, scope: !16256)
!16258 = !DILocation(line: 993, column: 2, scope: !16256)
!16259 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2488, file: !2488, line: 1390, type: !3256, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16260)
!16260 = !{!16261}
!16261 = !DILocalVariable(name: "key", scope: !16259, file: !2488, line: 1396, type: !14748)
!16262 = !DILocation(line: 0, scope: !14756, inlinedAt: !16263)
!16263 = distinct !DILocation(line: 1396, column: 25, scope: !16259)
!16264 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !16265)
!16265 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !16263)
!16266 = !DILocation(line: 0, scope: !14765, inlinedAt: !16265)
!16267 = !DILocation(line: 0, scope: !16259)
!16268 = !DILocation(line: 1400, column: 18, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16270, file: !2488, line: 1399, column: 36)
!16270 = distinct !DILexicalBlock(scope: !16259, file: !2488, line: 1398, column: 6)
!16271 = !DILocation(line: 0, scope: !14925, inlinedAt: !16272)
!16272 = distinct !DILocation(line: 1400, column: 3, scope: !16269)
!16273 = !DILocation(line: 266, column: 15, scope: !14925, inlinedAt: !16272)
!16274 = !DILocation(line: 266, column: 28, scope: !14925, inlinedAt: !16272)
!16275 = !DILocation(line: 0, scope: !14933, inlinedAt: !16276)
!16276 = distinct !DILocation(line: 268, column: 3, scope: !14937, inlinedAt: !16272)
!16277 = !DILocation(line: 234, column: 2, scope: !14933, inlinedAt: !16276)
!16278 = !DILocation(line: 1402, column: 15, scope: !16259)
!16279 = !DILocation(line: 0, scope: !14942, inlinedAt: !16280)
!16280 = distinct !DILocation(line: 1402, column: 2, scope: !16259)
!16281 = !DILocation(line: 252, column: 15, scope: !14942, inlinedAt: !16280)
!16282 = !DILocation(line: 252, column: 28, scope: !14942, inlinedAt: !16280)
!16283 = !DILocation(line: 0, scope: !14949, inlinedAt: !16284)
!16284 = distinct !DILocation(line: 254, column: 3, scope: !14953, inlinedAt: !16280)
!16285 = !DILocation(line: 0, scope: !14956, inlinedAt: !16286)
!16286 = distinct !DILocation(line: 229, column: 2, scope: !14949, inlinedAt: !16284)
!16287 = !DILocation(line: 188, column: 2, scope: !14966, inlinedAt: !16286)
!16288 = !DILocation(line: 188, column: 2, scope: !14968, inlinedAt: !16286)
!16289 = !DILocation(line: 0, scope: !14966, inlinedAt: !16286)
!16290 = !DILocation(line: 189, column: 7, scope: !14971, inlinedAt: !16286)
!16291 = !DILocation(line: 189, column: 35, scope: !14971, inlinedAt: !16286)
!16292 = !DILocation(line: 189, column: 7, scope: !14972, inlinedAt: !16286)
!16293 = !DILocation(line: 191, column: 21, scope: !14976, inlinedAt: !16286)
!16294 = !DILocation(line: 190, column: 4, scope: !14976, inlinedAt: !16286)
!16295 = !DILocation(line: 192, column: 4, scope: !14976, inlinedAt: !16286)
!16296 = distinct !{!16296, !16287, !16297}
!16297 = !DILocation(line: 194, column: 2, scope: !14966, inlinedAt: !16286)
!16298 = !DILocation(line: 196, column: 37, scope: !14956, inlinedAt: !16286)
!16299 = !DILocation(line: 196, column: 2, scope: !14956, inlinedAt: !16286)
!16300 = !DILocation(line: 197, column: 1, scope: !14956, inlinedAt: !16286)
!16301 = !DILocation(line: 1403, column: 2, scope: !16259)
!16302 = !DILocation(line: 0, scope: !15367, inlinedAt: !16303)
!16303 = distinct !DILocation(line: 1404, column: 2, scope: !16259)
!16304 = !DILocation(line: 196, column: 9, scope: !15367, inlinedAt: !16303)
!16305 = !DILocation(line: 1405, column: 1, scope: !16259)
!16306 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2488, file: !2488, line: 1459, type: !16307, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16309)
!16307 = !DISubroutineType(types: !16308)
!16308 = !{!344, !15547}
!16309 = !{!16310, !16311, !16312}
!16310 = !DILocalVariable(name: "timeout", arg: 1, scope: !16306, file: !2488, line: 1459, type: !15547)
!16311 = !DILocalVariable(name: "ticks", scope: !16306, file: !2488, line: 1461, type: !1720)
!16312 = !DILocalVariable(name: "ret", scope: !16306, file: !2488, line: 1480, type: !344)
!16313 = !DILocation(line: 0, scope: !16306)
!16314 = !DILocation(line: 1468, column: 6, scope: !16315)
!16315 = distinct !DILexicalBlock(scope: !16306, file: !2488, line: 1468, column: 6)
!16316 = !DILocation(line: 1468, column: 6, scope: !16306)
!16317 = !DILocation(line: 1469, column: 20, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16315, file: !2488, line: 1468, column: 40)
!16319 = !DILocation(line: 1469, column: 3, scope: !16318)
!16320 = !DILocation(line: 1473, column: 3, scope: !16318)
!16321 = !DILocation(line: 1478, column: 10, scope: !16306)
!16322 = !DILocation(line: 1480, column: 16, scope: !16306)
!16323 = !DILocation(line: 1485, column: 1, scope: !16306)
!16324 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3696, file: !3696, line: 310, type: !16325, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16327)
!16325 = !DISubroutineType(types: !16326)
!16326 = !{null, !16231}
!16327 = !{!16328}
!16328 = !DILocalVariable(name: "thread", arg: 1, scope: !16324, file: !3696, line: 310, type: !16231)
!16329 = !DILocation(line: 0, scope: !16324)
!16330 = !DILocation(line: 319, column: 2, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16324, file: !3696, line: 319, column: 2)
!16332 = !{i64 2154884668}
!16333 = !DILocation(line: 320, column: 2, scope: !16324)
!16334 = !DILocation(line: 321, column: 1, scope: !16324)
!16335 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2488, file: !2488, line: 1415, type: !16336, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16338)
!16336 = !DISubroutineType(types: !16337)
!16337 = !{!344, !1720}
!16338 = !{!16339, !16340, !16341, !16342}
!16339 = !DILocalVariable(name: "ticks", arg: 1, scope: !16335, file: !2488, line: 1415, type: !1720)
!16340 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16335, file: !2488, line: 1418, type: !132)
!16341 = !DILocalVariable(name: "timeout", scope: !16335, file: !2488, line: 1430, type: !15547)
!16342 = !DILocalVariable(name: "key", scope: !16335, file: !2488, line: 1437, type: !14748)
!16343 = !DILocation(line: 0, scope: !16335)
!16344 = !DILocation(line: 1425, column: 12, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16335, file: !2488, line: 1425, column: 6)
!16346 = !DILocation(line: 1425, column: 6, scope: !16335)
!16347 = !DILocation(line: 1426, column: 3, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16345, file: !2488, line: 1425, column: 18)
!16349 = !DILocation(line: 1427, column: 3, scope: !16348)
!16350 = !DILocation(line: 1431, column: 24, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !16335, file: !2488, line: 1431, column: 6)
!16352 = !DILocation(line: 1431, column: 6, scope: !16335)
!16353 = !DILocation(line: 1432, column: 35, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16351, file: !2488, line: 1431, column: 30)
!16355 = !DILocation(line: 1432, column: 27, scope: !16354)
!16356 = !DILocation(line: 1433, column: 2, scope: !16354)
!16357 = !DILocation(line: 1434, column: 27, scope: !16358)
!16358 = distinct !DILexicalBlock(scope: !16351, file: !2488, line: 1433, column: 9)
!16359 = !DILocation(line: 0, scope: !16351)
!16360 = !DILocation(line: 0, scope: !14756, inlinedAt: !16361)
!16361 = distinct !DILocation(line: 1437, column: 25, scope: !16335)
!16362 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !16363)
!16363 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !16361)
!16364 = !DILocation(line: 0, scope: !14765, inlinedAt: !16363)
!16365 = !DILocation(line: 1440, column: 20, scope: !16335)
!16366 = !DILocation(line: 1440, column: 18, scope: !16335)
!16367 = !DILocation(line: 1442, column: 2, scope: !16335)
!16368 = !DILocation(line: 1443, column: 23, scope: !16335)
!16369 = !DILocation(line: 1443, column: 2, scope: !16335)
!16370 = !DILocation(line: 1444, column: 29, scope: !16335)
!16371 = !DILocation(line: 1444, column: 2, scope: !16335)
!16372 = !DILocation(line: 0, scope: !15367, inlinedAt: !16373)
!16373 = distinct !DILocation(line: 1446, column: 8, scope: !16335)
!16374 = !DILocation(line: 196, column: 9, scope: !15367, inlinedAt: !16373)
!16375 = !DILocation(line: 1450, column: 10, scope: !16335)
!16376 = !DILocation(line: 1450, column: 45, scope: !16335)
!16377 = !DILocation(line: 1450, column: 43, scope: !16335)
!16378 = !DILocation(line: 1451, column: 6, scope: !16335)
!16379 = !DILocation(line: 1457, column: 1, scope: !16335)
!16380 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !6023, file: !6023, line: 1103, type: !6024, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16381)
!16381 = !{!16382}
!16382 = !DILocalVariable(name: "t", arg: 1, scope: !16380, file: !6023, line: 1103, type: !1617)
!16383 = !DILocation(line: 0, scope: !16380)
!16384 = !DILocation(line: 0, scope: !14803, inlinedAt: !16385)
!16385 = distinct !DILocation(line: 1106, column: 9, scope: !16380)
!16386 = !DILocation(line: 139, column: 13, scope: !16387, inlinedAt: !16385)
!16387 = distinct !DILexicalBlock(scope: !16388, file: !6023, line: 138, column: 10)
!16388 = distinct !DILexicalBlock(scope: !16389, file: !6023, line: 136, column: 7)
!16389 = distinct !DILexicalBlock(scope: !14824, file: !6023, line: 134, column: 17)
!16390 = !DILocation(line: 1106, column: 2, scope: !16380)
!16391 = distinct !DISubprogram(name: "k_yield", scope: !3696, file: !3696, line: 140, type: !3256, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !473)
!16392 = !DILocation(line: 148, column: 2, scope: !16393)
!16393 = distinct !DILexicalBlock(scope: !16391, file: !3696, line: 148, column: 2)
!16394 = !{i64 2154883988}
!16395 = !DILocation(line: 149, column: 2, scope: !16391)
!16396 = !DILocation(line: 150, column: 1, scope: !16391)
!16397 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2488, file: !2488, line: 1495, type: !16398, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16400)
!16398 = !DISubroutineType(types: !16399)
!16399 = !{!344, !103}
!16400 = !{!16401, !16402}
!16401 = !DILocalVariable(name: "us", arg: 1, scope: !16397, file: !2488, line: 1495, type: !103)
!16402 = !DILocalVariable(name: "ticks", scope: !16397, file: !2488, line: 1497, type: !344)
!16403 = !DILocation(line: 0, scope: !16397)
!16404 = !DILocation(line: 1501, column: 31, scope: !16397)
!16405 = !DILocation(line: 1501, column: 10, scope: !16397)
!16406 = !DILocation(line: 1502, column: 23, scope: !16397)
!16407 = !DILocation(line: 1502, column: 10, scope: !16397)
!16408 = !DILocation(line: 1506, column: 31, scope: !16397)
!16409 = !DILocation(line: 1506, column: 9, scope: !16397)
!16410 = !DILocation(line: 1506, column: 2, scope: !16397)
!16411 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !6023, file: !6023, line: 571, type: !6024, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16412)
!16412 = !{!16413}
!16413 = !DILocalVariable(name: "t", arg: 1, scope: !16411, file: !6023, line: 571, type: !1617)
!16414 = !DILocation(line: 0, scope: !16411)
!16415 = !DILocation(line: 0, scope: !14803, inlinedAt: !16416)
!16416 = distinct !DILocation(line: 574, column: 9, scope: !16411)
!16417 = !DILocation(line: 135, column: 5, scope: !16389, inlinedAt: !16416)
!16418 = !DILocation(line: 139, column: 13, scope: !16387, inlinedAt: !16416)
!16419 = !DILocation(line: 574, column: 2, scope: !16411)
!16420 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !6023, file: !6023, line: 1187, type: !6024, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16421)
!16421 = !{!16422}
!16422 = !DILocalVariable(name: "t", arg: 1, scope: !16420, file: !6023, line: 1187, type: !1617)
!16423 = !DILocation(line: 0, scope: !16420)
!16424 = !DILocation(line: 0, scope: !14803, inlinedAt: !16425)
!16425 = distinct !DILocation(line: 1190, column: 9, scope: !16420)
!16426 = !DILocation(line: 145, column: 13, scope: !16427, inlinedAt: !16425)
!16427 = distinct !DILexicalBlock(scope: !14821, file: !6023, line: 144, column: 10)
!16428 = !DILocation(line: 1190, column: 2, scope: !16420)
!16429 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2488, file: !2488, line: 1517, type: !16325, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16430)
!16430 = !{!16431}
!16431 = !DILocalVariable(name: "thread", arg: 1, scope: !16429, file: !2488, line: 1517, type: !16231)
!16432 = !DILocation(line: 0, scope: !16429)
!16433 = !DILocation(line: 1521, column: 6, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !16429, file: !2488, line: 1521, column: 6)
!16435 = !DILocation(line: 1521, column: 6, scope: !16429)
!16436 = !DILocation(line: 1525, column: 6, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16429, file: !2488, line: 1525, column: 6)
!16438 = !DILocation(line: 1525, column: 37, scope: !16437)
!16439 = !DILocation(line: 1525, column: 6, scope: !16429)
!16440 = !DILocation(line: 1527, column: 20, scope: !16441)
!16441 = distinct !DILexicalBlock(scope: !16442, file: !2488, line: 1527, column: 7)
!16442 = distinct !DILexicalBlock(scope: !16437, file: !2488, line: 1525, column: 42)
!16443 = !DILocation(line: 1527, column: 33, scope: !16441)
!16444 = !DILocation(line: 1527, column: 7, scope: !16442)
!16445 = !DILocation(line: 1532, column: 2, scope: !16429)
!16446 = !DILocation(line: 1533, column: 2, scope: !16429)
!16447 = !DILocation(line: 1031, column: 3, scope: !15400, inlinedAt: !16448)
!16448 = distinct !DILocation(line: 48, column: 10, scope: !15404, inlinedAt: !16449)
!16449 = distinct !DILocation(line: 1537, column: 7, scope: !16450)
!16450 = distinct !DILexicalBlock(scope: !16429, file: !2488, line: 1537, column: 6)
!16451 = !DILocation(line: 0, scope: !15400, inlinedAt: !16448)
!16452 = !DILocation(line: 48, column: 9, scope: !15404, inlinedAt: !16449)
!16453 = !DILocation(line: 1537, column: 6, scope: !16429)
!16454 = !DILocation(line: 1538, column: 3, scope: !16455)
!16455 = distinct !DILexicalBlock(scope: !16450, file: !2488, line: 1537, column: 25)
!16456 = !DILocation(line: 1539, column: 2, scope: !16455)
!16457 = !DILocation(line: 1540, column: 1, scope: !16429)
!16458 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13764, file: !13764, line: 101, type: !14874, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16459)
!16459 = !{!16460}
!16460 = !DILocalVariable(name: "thread", arg: 1, scope: !16458, file: !13764, line: 101, type: !2383)
!16461 = !DILocation(line: 0, scope: !16458)
!16462 = !DILocation(line: 103, column: 23, scope: !16458)
!16463 = !DILocation(line: 103, column: 36, scope: !16458)
!16464 = !DILocation(line: 103, column: 55, scope: !16458)
!16465 = !DILocation(line: 103, column: 2, scope: !16458)
!16466 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2488, file: !2488, line: 1567, type: !16467, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16469)
!16467 = !DISubroutineType(types: !16468)
!16468 = !{!16231}
!16469 = !{!16470}
!16470 = !DILocalVariable(name: "ret", scope: !16466, file: !2488, line: 1577, type: !16231)
!16471 = !DILocation(line: 1577, column: 30, scope: !16466)
!16472 = !DILocation(line: 0, scope: !16466)
!16473 = !DILocation(line: 1582, column: 2, scope: !16466)
!16474 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2488, file: !2488, line: 1593, type: !6647, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !473)
!16475 = !DILocation(line: 1031, column: 3, scope: !15400, inlinedAt: !16476)
!16476 = distinct !DILocation(line: 48, column: 10, scope: !15404, inlinedAt: !16477)
!16477 = distinct !DILocation(line: 1595, column: 10, scope: !16474)
!16478 = !DILocation(line: 0, scope: !15400, inlinedAt: !16476)
!16479 = !DILocation(line: 48, column: 9, scope: !15404, inlinedAt: !16477)
!16480 = !DILocation(line: 1595, column: 27, scope: !16474)
!16481 = !DILocation(line: 1595, column: 41, scope: !16474)
!16482 = !DILocation(line: 1595, column: 30, scope: !16474)
!16483 = !DILocation(line: 1595, column: 2, scope: !16474)
!16484 = distinct !DISubprogram(name: "z_thread_abort", scope: !2488, file: !2488, line: 1725, type: !14714, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16485)
!16485 = !{!16486, !16487}
!16486 = !DILocalVariable(name: "thread", arg: 1, scope: !16484, file: !2488, line: 1725, type: !2383)
!16487 = !DILocalVariable(name: "key", scope: !16484, file: !2488, line: 1727, type: !14748)
!16488 = !DILocation(line: 0, scope: !16484)
!16489 = !DILocation(line: 0, scope: !14756, inlinedAt: !16490)
!16490 = distinct !DILocation(line: 1727, column: 25, scope: !16484)
!16491 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !16492)
!16492 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !16490)
!16493 = !DILocation(line: 0, scope: !14765, inlinedAt: !16492)
!16494 = !DILocation(line: 1729, column: 20, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16484, file: !2488, line: 1729, column: 6)
!16496 = !DILocation(line: 1729, column: 33, scope: !16495)
!16497 = !DILocation(line: 1729, column: 48, scope: !16495)
!16498 = !DILocation(line: 1729, column: 6, scope: !16484)
!16499 = !DILocation(line: 0, scope: !14783, inlinedAt: !16500)
!16500 = distinct !DILocation(line: 1730, column: 3, scope: !16501)
!16501 = distinct !DILexicalBlock(scope: !16495, file: !2488, line: 1729, column: 54)
!16502 = !DILocation(line: 0, scope: !14791, inlinedAt: !16503)
!16503 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !16500)
!16504 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !16503)
!16505 = !DILocation(line: 1732, column: 3, scope: !16506)
!16506 = distinct !DILexicalBlock(scope: !16501, file: !2488, line: 1732, column: 3)
!16507 = !{i64 2155621398, i64 2155621414, i64 2155621440, i64 2155621468, i64 2155621488}
!16508 = !DILocation(line: 1733, column: 3, scope: !16501)
!16509 = !DILocation(line: 1736, column: 20, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16484, file: !2488, line: 1736, column: 6)
!16511 = !DILocation(line: 1736, column: 33, scope: !16510)
!16512 = !DILocation(line: 1736, column: 49, scope: !16510)
!16513 = !DILocation(line: 1736, column: 6, scope: !16484)
!16514 = !DILocation(line: 0, scope: !14783, inlinedAt: !16515)
!16515 = distinct !DILocation(line: 1737, column: 3, scope: !16516)
!16516 = distinct !DILexicalBlock(scope: !16510, file: !2488, line: 1736, column: 56)
!16517 = !DILocation(line: 0, scope: !14791, inlinedAt: !16518)
!16518 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !16515)
!16519 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !16518)
!16520 = !DILocation(line: 1738, column: 3, scope: !16516)
!16521 = !DILocation(line: 1775, column: 2, scope: !16484)
!16522 = !DILocation(line: 1776, column: 16, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16484, file: !2488, line: 1776, column: 6)
!16524 = !DILocation(line: 1776, column: 13, scope: !16523)
!16525 = !DILocation(line: 1776, column: 25, scope: !16523)
!16526 = !DILocation(line: 1031, column: 3, scope: !15400, inlinedAt: !16527)
!16527 = distinct !DILocation(line: 48, column: 10, scope: !15404, inlinedAt: !16528)
!16528 = distinct !DILocation(line: 1776, column: 29, scope: !16523)
!16529 = !DILocation(line: 0, scope: !15400, inlinedAt: !16527)
!16530 = !DILocation(line: 48, column: 9, scope: !15404, inlinedAt: !16528)
!16531 = !DILocation(line: 1776, column: 6, scope: !16484)
!16532 = !DILocation(line: 0, scope: !15367, inlinedAt: !16533)
!16533 = distinct !DILocation(line: 1777, column: 3, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16523, file: !2488, line: 1776, column: 47)
!16535 = !DILocation(line: 196, column: 9, scope: !15367, inlinedAt: !16533)
!16536 = !DILocation(line: 1779, column: 2, scope: !16534)
!16537 = !DILocation(line: 0, scope: !14783, inlinedAt: !16538)
!16538 = distinct !DILocation(line: 1780, column: 2, scope: !16484)
!16539 = !DILocation(line: 0, scope: !14791, inlinedAt: !16540)
!16540 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !16538)
!16541 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !16540)
!16542 = !DILocation(line: 1781, column: 1, scope: !16484)
!16543 = distinct !DISubprogram(name: "end_thread", scope: !2488, file: !2488, line: 1690, type: !14714, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16544)
!16544 = !{!16545}
!16545 = !DILocalVariable(name: "thread", arg: 1, scope: !16543, file: !2488, line: 1690, type: !2383)
!16546 = !DILocation(line: 0, scope: !16543)
!16547 = !DILocation(line: 1695, column: 20, scope: !16548)
!16548 = distinct !DILexicalBlock(scope: !16543, file: !2488, line: 1695, column: 6)
!16549 = !DILocation(line: 1695, column: 33, scope: !16548)
!16550 = !DILocation(line: 1695, column: 49, scope: !16548)
!16551 = !DILocation(line: 1695, column: 6, scope: !16543)
!16552 = !DILocation(line: 1697, column: 29, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !16548, file: !2488, line: 1695, column: 56)
!16554 = !DILocation(line: 1698, column: 7, scope: !16555)
!16555 = distinct !DILexicalBlock(scope: !16553, file: !2488, line: 1698, column: 7)
!16556 = !DILocation(line: 1698, column: 7, scope: !16553)
!16557 = !DILocation(line: 0, scope: !14925, inlinedAt: !16558)
!16558 = distinct !DILocation(line: 1699, column: 4, scope: !16559)
!16559 = distinct !DILexicalBlock(scope: !16555, file: !2488, line: 1698, column: 35)
!16560 = !DILocation(line: 266, column: 28, scope: !14925, inlinedAt: !16558)
!16561 = !DILocation(line: 0, scope: !14933, inlinedAt: !16562)
!16562 = distinct !DILocation(line: 268, column: 3, scope: !14937, inlinedAt: !16558)
!16563 = !DILocation(line: 234, column: 2, scope: !14933, inlinedAt: !16562)
!16564 = !DILocation(line: 1700, column: 3, scope: !16559)
!16565 = !DILocation(line: 1701, column: 20, scope: !16566)
!16566 = distinct !DILexicalBlock(scope: !16553, file: !2488, line: 1701, column: 7)
!16567 = !DILocation(line: 1701, column: 30, scope: !16566)
!16568 = !DILocation(line: 1701, column: 7, scope: !16553)
!16569 = !DILocation(line: 1702, column: 4, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16566, file: !2488, line: 1701, column: 39)
!16571 = !DILocation(line: 1703, column: 3, scope: !16570)
!16572 = !DILocation(line: 1704, column: 9, scope: !16553)
!16573 = !DILocation(line: 1705, column: 23, scope: !16553)
!16574 = !DILocation(line: 1705, column: 3, scope: !16553)
!16575 = !DILocation(line: 1706, column: 3, scope: !16553)
!16576 = !DILocation(line: 1722, column: 2, scope: !16553)
!16577 = !DILocation(line: 1723, column: 1, scope: !16543)
!16578 = distinct !DISubprogram(name: "unpend_all", scope: !2488, file: !2488, line: 1674, type: !16579, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16581)
!16579 = !DISubroutineType(types: !16580)
!16580 = !{null, !2414}
!16581 = !{!16582, !16583}
!16582 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16578, file: !2488, line: 1674, type: !2414)
!16583 = !DILocalVariable(name: "thread", scope: !16578, file: !2488, line: 1676, type: !2383)
!16584 = !DILocation(line: 0, scope: !16578)
!16585 = !DILocation(line: 1678, column: 19, scope: !16578)
!16586 = !DILocation(line: 1678, column: 41, scope: !16578)
!16587 = !DILocation(line: 1678, column: 2, scope: !16578)
!16588 = !DILocation(line: 1679, column: 3, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16578, file: !2488, line: 1678, column: 50)
!16590 = !DILocation(line: 1680, column: 9, scope: !16589)
!16591 = !DILocalVariable(name: "thread", arg: 1, scope: !16592, file: !13784, line: 65, type: !2383)
!16592 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13784, file: !13784, line: 65, type: !16593, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16595)
!16593 = !DISubroutineType(types: !16594)
!16594 = !{null, !2383, !32}
!16595 = !{!16591, !16596}
!16596 = !DILocalVariable(name: "value", arg: 2, scope: !16592, file: !13784, line: 65, type: !32)
!16597 = !DILocation(line: 0, scope: !16592, inlinedAt: !16598)
!16598 = distinct !DILocation(line: 1681, column: 3, scope: !16589)
!16599 = !DILocation(line: 67, column: 15, scope: !16592, inlinedAt: !16598)
!16600 = !DILocation(line: 67, column: 33, scope: !16592, inlinedAt: !16598)
!16601 = !DILocation(line: 1682, column: 3, scope: !16589)
!16602 = distinct !{!16602, !16587, !16603}
!16603 = !DILocation(line: 1683, column: 2, scope: !16578)
!16604 = !DILocation(line: 1684, column: 1, scope: !16578)
!16605 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2488, file: !2488, line: 1794, type: !16606, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16608)
!16606 = !DISubroutineType(types: !16607)
!16607 = !{!103, !2383, !15547}
!16608 = !{!16609, !16610, !16611, !16612}
!16609 = !DILocalVariable(name: "thread", arg: 1, scope: !16605, file: !2488, line: 1794, type: !2383)
!16610 = !DILocalVariable(name: "timeout", arg: 2, scope: !16605, file: !2488, line: 1794, type: !15547)
!16611 = !DILocalVariable(name: "key", scope: !16605, file: !2488, line: 1796, type: !14748)
!16612 = !DILocalVariable(name: "ret", scope: !16605, file: !2488, line: 1797, type: !103)
!16613 = !DILocation(line: 0, scope: !16605)
!16614 = !DILocation(line: 0, scope: !14756, inlinedAt: !16615)
!16615 = distinct !DILocation(line: 1796, column: 25, scope: !16605)
!16616 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !16617)
!16617 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !16615)
!16618 = !DILocation(line: 0, scope: !14765, inlinedAt: !16617)
!16619 = !DILocation(line: 1801, column: 20, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16605, file: !2488, line: 1801, column: 6)
!16621 = !DILocation(line: 1801, column: 33, scope: !16620)
!16622 = !DILocation(line: 1801, column: 49, scope: !16620)
!16623 = !DILocation(line: 1801, column: 6, scope: !16605)
!16624 = !DILocation(line: 1803, column: 13, scope: !16625)
!16625 = distinct !DILexicalBlock(scope: !16620, file: !2488, line: 1803, column: 13)
!16626 = !DILocation(line: 1803, column: 13, scope: !16620)
!16627 = !DILocation(line: 1805, column: 24, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16625, file: !2488, line: 1805, column: 13)
!16629 = !DILocation(line: 1805, column: 21, scope: !16628)
!16630 = !DILocation(line: 1805, column: 34, scope: !16628)
!16631 = !DILocation(line: 1806, column: 20, scope: !16628)
!16632 = !DILocation(line: 1806, column: 44, scope: !16628)
!16633 = !DILocation(line: 1806, column: 30, scope: !16628)
!16634 = !DILocation(line: 1805, column: 13, scope: !16625)
!16635 = !DILocation(line: 1810, column: 42, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16628, file: !2488, line: 1808, column: 9)
!16637 = !DILocation(line: 1810, column: 3, scope: !16636)
!16638 = !DILocation(line: 1811, column: 22, scope: !16636)
!16639 = !DILocation(line: 1811, column: 3, scope: !16636)
!16640 = !DILocation(line: 0, scope: !15367, inlinedAt: !16641)
!16641 = distinct !DILocation(line: 1814, column: 9, scope: !16636)
!16642 = !DILocation(line: 196, column: 9, scope: !15367, inlinedAt: !16641)
!16643 = !DILocation(line: 1817, column: 3, scope: !16636)
!16644 = !DILocation(line: 0, scope: !16620)
!16645 = !DILocation(line: 0, scope: !14783, inlinedAt: !16646)
!16646 = distinct !DILocation(line: 1822, column: 2, scope: !16605)
!16647 = !DILocation(line: 0, scope: !14791, inlinedAt: !16648)
!16648 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !16646)
!16649 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !16648)
!16650 = !DILocation(line: 1823, column: 2, scope: !16605)
!16651 = !DILocation(line: 1824, column: 1, scope: !16605)
!16652 = distinct !DISubprogram(name: "z_sched_wake", scope: !2488, file: !2488, line: 1882, type: !16653, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16655)
!16653 = !DISubroutineType(types: !16654)
!16654 = !{!166, !2414, !103, !102}
!16655 = !{!16656, !16657, !16658, !16659, !16660, !16661, !16663}
!16656 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16652, file: !2488, line: 1882, type: !2414)
!16657 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16652, file: !2488, line: 1882, type: !103)
!16658 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16652, file: !2488, line: 1882, type: !102)
!16659 = !DILocalVariable(name: "thread", scope: !16652, file: !2488, line: 1884, type: !2383)
!16660 = !DILocalVariable(name: "ret", scope: !16652, file: !2488, line: 1885, type: !166)
!16661 = !DILocalVariable(name: "__i", scope: !16662, file: !2488, line: 1887, type: !14748)
!16662 = distinct !DILexicalBlock(scope: !16652, file: !2488, line: 1887, column: 2)
!16663 = !DILocalVariable(name: "__key", scope: !16662, file: !2488, line: 1887, type: !14748)
!16664 = !DILocation(line: 0, scope: !16652)
!16665 = !DILocation(line: 0, scope: !16662)
!16666 = !DILocation(line: 0, scope: !14756, inlinedAt: !16667)
!16667 = distinct !DILocation(line: 1887, column: 2, scope: !16662)
!16668 = !DILocation(line: 55, column: 2, scope: !14765, inlinedAt: !16669)
!16669 = distinct !DILocation(line: 145, column: 10, scope: !14756, inlinedAt: !16667)
!16670 = !DILocation(line: 0, scope: !14765, inlinedAt: !16669)
!16671 = !DILocation(line: 1888, column: 12, scope: !16672)
!16672 = distinct !DILexicalBlock(scope: !16673, file: !2488, line: 1887, column: 26)
!16673 = distinct !DILexicalBlock(scope: !16662, file: !2488, line: 1887, column: 2)
!16674 = !DILocation(line: 1890, column: 14, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16672, file: !2488, line: 1890, column: 7)
!16676 = !DILocation(line: 1890, column: 7, scope: !16672)
!16677 = !DILocalVariable(name: "thread", arg: 1, scope: !16678, file: !16679, line: 134, type: !2383)
!16678 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16679, file: !16679, line: 134, type: !16680, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16682)
!16679 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16680 = !DISubroutineType(types: !16681)
!16681 = !{null, !2383, !32, !102}
!16682 = !{!16677, !16683, !16684}
!16683 = !DILocalVariable(name: "value", arg: 2, scope: !16678, file: !16679, line: 135, type: !32)
!16684 = !DILocalVariable(name: "data", arg: 3, scope: !16678, file: !16679, line: 136, type: !102)
!16685 = !DILocation(line: 0, scope: !16678, inlinedAt: !16686)
!16686 = distinct !DILocation(line: 1891, column: 4, scope: !16687)
!16687 = distinct !DILexicalBlock(scope: !16675, file: !2488, line: 1890, column: 23)
!16688 = !DILocation(line: 0, scope: !16592, inlinedAt: !16689)
!16689 = distinct !DILocation(line: 138, column: 2, scope: !16678, inlinedAt: !16686)
!16690 = !DILocation(line: 67, column: 15, scope: !16592, inlinedAt: !16689)
!16691 = !DILocation(line: 67, column: 33, scope: !16592, inlinedAt: !16689)
!16692 = !DILocation(line: 139, column: 15, scope: !16678, inlinedAt: !16686)
!16693 = !DILocation(line: 139, column: 25, scope: !16678, inlinedAt: !16686)
!16694 = !DILocation(line: 1894, column: 4, scope: !16687)
!16695 = !DILocation(line: 1895, column: 10, scope: !16687)
!16696 = !DILocation(line: 1896, column: 4, scope: !16687)
!16697 = !DILocation(line: 1898, column: 3, scope: !16687)
!16698 = !DILocation(line: 0, scope: !14783, inlinedAt: !16699)
!16699 = distinct !DILocation(line: 1887, column: 2, scope: !16673)
!16700 = !DILocation(line: 0, scope: !14791, inlinedAt: !16701)
!16701 = distinct !DILocation(line: 215, column: 2, scope: !14783, inlinedAt: !16699)
!16702 = !DILocation(line: 95, column: 2, scope: !14791, inlinedAt: !16701)
!16703 = !DILocation(line: 1901, column: 2, scope: !16652)
!16704 = distinct !DISubprogram(name: "z_sched_wait", scope: !2488, file: !2488, line: 1904, type: !16705, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !16708)
!16705 = !DISubroutineType(types: !16706)
!16706 = !{!103, !14759, !14748, !2414, !15547, !16707}
!16707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!16708 = !{!16709, !16710, !16711, !16712, !16713, !16714}
!16709 = !DILocalVariable(name: "lock", arg: 1, scope: !16704, file: !2488, line: 1904, type: !14759)
!16710 = !DILocalVariable(name: "key", arg: 2, scope: !16704, file: !2488, line: 1904, type: !14748)
!16711 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16704, file: !2488, line: 1905, type: !2414)
!16712 = !DILocalVariable(name: "timeout", arg: 4, scope: !16704, file: !2488, line: 1905, type: !15547)
!16713 = !DILocalVariable(name: "data", arg: 5, scope: !16704, file: !2488, line: 1905, type: !16707)
!16714 = !DILocalVariable(name: "ret", scope: !16704, file: !2488, line: 1907, type: !103)
!16715 = !DILocation(line: 0, scope: !16704)
!16716 = !DILocation(line: 1907, column: 12, scope: !16704)
!16717 = !DILocation(line: 1909, column: 11, scope: !16718)
!16718 = distinct !DILexicalBlock(scope: !16704, file: !2488, line: 1909, column: 6)
!16719 = !DILocation(line: 1909, column: 6, scope: !16704)
!16720 = !DILocation(line: 1910, column: 11, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16718, file: !2488, line: 1909, column: 20)
!16722 = !DILocation(line: 1910, column: 26, scope: !16721)
!16723 = !DILocation(line: 1910, column: 9, scope: !16721)
!16724 = !DILocation(line: 1911, column: 2, scope: !16721)
!16725 = !DILocation(line: 1912, column: 2, scope: !16704)
!16726 = distinct !DISubprogram(name: "z_data_copy", scope: !16727, file: !16727, line: 22, type: !3256, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !473)
!16727 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16728 = !DILocation(line: 24, column: 2, scope: !16726)
!16729 = !DILocation(line: 27, column: 2, scope: !16726)
!16730 = !DILocation(line: 31, column: 2, scope: !16726)
!16731 = !DILocation(line: 71, column: 1, scope: !16726)
!16732 = distinct !DISubprogram(name: "z_add_timeout", scope: !2525, file: !2525, line: 88, type: !16733, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16739)
!16733 = !DISubroutineType(types: !16734)
!16734 = !{null, !2498, !2517, !16735}
!16735 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1721, line: 67, baseType: !16736)
!16736 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1721, line: 65, size: 64, elements: !16737)
!16737 = !{!16738}
!16738 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16736, file: !1721, line: 66, baseType: !1720, size: 64)
!16739 = !{!16740, !16741, !16742, !16743, !16749, !16750, !16753, !16756}
!16740 = !DILocalVariable(name: "to", arg: 1, scope: !16732, file: !2525, line: 88, type: !2498)
!16741 = !DILocalVariable(name: "fn", arg: 2, scope: !16732, file: !2525, line: 88, type: !2517)
!16742 = !DILocalVariable(name: "timeout", arg: 3, scope: !16732, file: !2525, line: 89, type: !16735)
!16743 = !DILocalVariable(name: "__i", scope: !16744, file: !2525, line: 102, type: !16745)
!16744 = distinct !DILexicalBlock(scope: !16732, file: !2525, line: 102, column: 2)
!16745 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !16746)
!16746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !16747)
!16747 = !{!16748}
!16748 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16746, file: !472, line: 33, baseType: !103, size: 32)
!16749 = !DILocalVariable(name: "__key", scope: !16744, file: !2525, line: 102, type: !16745)
!16750 = !DILocalVariable(name: "t", scope: !16751, file: !2525, line: 103, type: !2498)
!16751 = distinct !DILexicalBlock(scope: !16752, file: !2525, line: 102, column: 24)
!16752 = distinct !DILexicalBlock(scope: !16744, file: !2525, line: 102, column: 2)
!16753 = !DILocalVariable(name: "ticks", scope: !16754, file: !2525, line: 107, type: !1720)
!16754 = distinct !DILexicalBlock(scope: !16755, file: !2525, line: 106, column: 39)
!16755 = distinct !DILexicalBlock(scope: !16751, file: !2525, line: 105, column: 7)
!16756 = !DILocalVariable(name: "next_time", scope: !16757, file: !2525, line: 137, type: !344)
!16757 = distinct !DILexicalBlock(scope: !16758, file: !2525, line: 127, column: 22)
!16758 = distinct !DILexicalBlock(scope: !16751, file: !2525, line: 127, column: 7)
!16759 = !DILocation(line: 0, scope: !16732)
!16760 = !DILocation(line: 91, column: 6, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16732, file: !2525, line: 91, column: 6)
!16762 = !DILocation(line: 91, column: 6, scope: !16732)
!16763 = !DILocation(line: 100, column: 6, scope: !16732)
!16764 = !DILocation(line: 100, column: 9, scope: !16732)
!16765 = !DILocation(line: 0, scope: !16744)
!16766 = !DILocalVariable(name: "l", arg: 1, scope: !16767, file: !472, line: 136, type: !16770)
!16767 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !16768, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16771)
!16768 = !DISubroutineType(types: !16769)
!16769 = !{!16745, !16770}
!16770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 32)
!16771 = !{!16766, !16772}
!16772 = !DILocalVariable(name: "k", scope: !16767, file: !472, line: 139, type: !16745)
!16773 = !DILocation(line: 0, scope: !16767, inlinedAt: !16774)
!16774 = distinct !DILocation(line: 102, column: 2, scope: !16744)
!16775 = !DILocation(line: 55, column: 2, scope: !16776, inlinedAt: !16780)
!16776 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5823, file: !5823, line: 42, type: !5824, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16777)
!16777 = !{!16778, !16779}
!16778 = !DILocalVariable(name: "key", scope: !16776, file: !5823, line: 44, type: !32)
!16779 = !DILocalVariable(name: "tmp", scope: !16776, file: !5823, line: 53, type: !32)
!16780 = distinct !DILocation(line: 145, column: 10, scope: !16767, inlinedAt: !16774)
!16781 = !{i64 2227972}
!16782 = !DILocation(line: 0, scope: !16776, inlinedAt: !16780)
!16783 = !DILocation(line: 106, column: 33, scope: !16755)
!16784 = !DILocation(line: 105, column: 7, scope: !16751)
!16785 = !DILocation(line: 107, column: 50, scope: !16754)
!16786 = !DILocation(line: 107, column: 48, scope: !16754)
!16787 = !DILocation(line: 0, scope: !16754)
!16788 = !DILocation(line: 109, column: 17, scope: !16754)
!16789 = !DILocation(line: 110, column: 3, scope: !16754)
!16790 = !DILocation(line: 111, column: 31, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16755, file: !2525, line: 110, column: 10)
!16792 = !DILocation(line: 111, column: 37, scope: !16791)
!16793 = !DILocation(line: 111, column: 35, scope: !16791)
!16794 = !DILocation(line: 0, scope: !16755)
!16795 = !DILocation(line: 109, column: 8, scope: !16754)
!16796 = !DILocation(line: 109, column: 15, scope: !16754)
!16797 = !DILocation(line: 114, column: 12, scope: !16798)
!16798 = distinct !DILexicalBlock(scope: !16751, file: !2525, line: 114, column: 3)
!16799 = !DILocation(line: 0, scope: !16751)
!16800 = !DILocation(line: 114, column: 3, scope: !16798)
!16801 = !DILocation(line: 115, column: 24, scope: !16802)
!16802 = distinct !DILexicalBlock(scope: !16803, file: !2525, line: 115, column: 8)
!16803 = distinct !DILexicalBlock(scope: !16804, file: !2525, line: 114, column: 45)
!16804 = distinct !DILexicalBlock(scope: !16798, file: !2525, line: 114, column: 3)
!16805 = !DILocation(line: 115, column: 11, scope: !16802)
!16806 = !DILocation(line: 115, column: 18, scope: !16802)
!16807 = !DILocation(line: 115, column: 8, scope: !16803)
!16808 = !DILocation(line: 116, column: 15, scope: !16809)
!16809 = distinct !DILexicalBlock(scope: !16802, file: !2525, line: 115, column: 32)
!16810 = !DILocation(line: 117, column: 26, scope: !16809)
!16811 = !DILocation(line: 117, column: 37, scope: !16809)
!16812 = !DILocation(line: 117, column: 5, scope: !16809)
!16813 = !DILocation(line: 123, column: 7, scope: !16751)
!16814 = !DILocation(line: 120, column: 15, scope: !16803)
!16815 = !DILocation(line: 114, column: 36, scope: !16804)
!16816 = distinct !{!16816, !16800, !16817}
!16817 = !DILocation(line: 121, column: 3, scope: !16798)
!16818 = !DILocation(line: 124, column: 41, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16820, file: !2525, line: 123, column: 18)
!16820 = distinct !DILexicalBlock(scope: !16751, file: !2525, line: 123, column: 7)
!16821 = !DILocation(line: 124, column: 4, scope: !16819)
!16822 = !DILocation(line: 125, column: 3, scope: !16819)
!16823 = !DILocation(line: 127, column: 13, scope: !16758)
!16824 = !DILocation(line: 127, column: 10, scope: !16758)
!16825 = !DILocation(line: 127, column: 7, scope: !16751)
!16826 = !DILocation(line: 137, column: 24, scope: !16757)
!16827 = !DILocation(line: 0, scope: !16757)
!16828 = !DILocation(line: 139, column: 18, scope: !16829)
!16829 = distinct !DILexicalBlock(scope: !16757, file: !2525, line: 139, column: 8)
!16830 = !DILocation(line: 139, column: 23, scope: !16829)
!16831 = !DILocation(line: 141, column: 5, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16829, file: !2525, line: 140, column: 48)
!16833 = !DILocation(line: 142, column: 4, scope: !16832)
!16834 = !DILocalVariable(name: "key", arg: 2, scope: !16835, file: !472, line: 190, type: !16745)
!16835 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !16836, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16838)
!16836 = !DISubroutineType(types: !16837)
!16837 = !{null, !16770, !16745}
!16838 = !{!16839, !16834}
!16839 = !DILocalVariable(name: "l", arg: 1, scope: !16835, file: !472, line: 189, type: !16770)
!16840 = !DILocation(line: 0, scope: !16835, inlinedAt: !16841)
!16841 = distinct !DILocation(line: 102, column: 2, scope: !16752)
!16842 = !DILocalVariable(name: "key", arg: 1, scope: !16843, file: !5823, line: 84, type: !32)
!16843 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5823, file: !5823, line: 84, type: !5834, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16844)
!16844 = !{!16842}
!16845 = !DILocation(line: 0, scope: !16843, inlinedAt: !16846)
!16846 = distinct !DILocation(line: 215, column: 2, scope: !16835, inlinedAt: !16841)
!16847 = !DILocation(line: 95, column: 2, scope: !16843, inlinedAt: !16846)
!16848 = !{i64 2228789}
!16849 = !DILocation(line: 148, column: 1, scope: !16732)
!16850 = distinct !DISubprogram(name: "elapsed", scope: !2525, file: !2525, line: 62, type: !16851, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !473)
!16851 = !DISubroutineType(types: !16852)
!16852 = !{!344}
!16853 = !DILocation(line: 64, column: 9, scope: !16850)
!16854 = !DILocation(line: 64, column: 28, scope: !16850)
!16855 = !DILocation(line: 64, column: 35, scope: !16850)
!16856 = !DILocation(line: 64, column: 2, scope: !16850)
!16857 = distinct !DISubprogram(name: "first", scope: !2525, file: !2525, line: 39, type: !16858, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16860)
!16858 = !DISubroutineType(types: !16859)
!16859 = !{!2498}
!16860 = !{!16861}
!16861 = !DILocalVariable(name: "t", scope: !16857, file: !2525, line: 41, type: !16862)
!16862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 32)
!16863 = !DILocation(line: 41, column: 19, scope: !16857)
!16864 = !DILocation(line: 0, scope: !16857)
!16865 = !DILocation(line: 43, column: 9, scope: !16857)
!16866 = !DILocation(line: 43, column: 2, scope: !16857)
!16867 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !321, file: !321, line: 443, type: !16868, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16870)
!16868 = !DISubroutineType(types: !16869)
!16869 = !{null, !16862, !16862}
!16870 = !{!16871, !16872, !16873}
!16871 = !DILocalVariable(name: "successor", arg: 1, scope: !16867, file: !321, line: 443, type: !16862)
!16872 = !DILocalVariable(name: "node", arg: 2, scope: !16867, file: !321, line: 443, type: !16862)
!16873 = !DILocalVariable(name: "prev", scope: !16867, file: !321, line: 445, type: !16874)
!16874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16862)
!16875 = !DILocation(line: 0, scope: !16867)
!16876 = !DILocation(line: 445, column: 39, scope: !16867)
!16877 = !DILocation(line: 447, column: 8, scope: !16867)
!16878 = !DILocation(line: 447, column: 13, scope: !16867)
!16879 = !DILocation(line: 448, column: 8, scope: !16867)
!16880 = !DILocation(line: 448, column: 13, scope: !16867)
!16881 = !DILocation(line: 449, column: 8, scope: !16867)
!16882 = !DILocation(line: 449, column: 13, scope: !16867)
!16883 = !DILocation(line: 450, column: 18, scope: !16867)
!16884 = !DILocation(line: 451, column: 1, scope: !16867)
!16885 = distinct !DISubprogram(name: "next", scope: !2525, file: !2525, line: 46, type: !16886, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16888)
!16886 = !DISubroutineType(types: !16887)
!16887 = !{!2498, !2498}
!16888 = !{!16889, !16890}
!16889 = !DILocalVariable(name: "t", arg: 1, scope: !16885, file: !2525, line: 46, type: !2498)
!16890 = !DILocalVariable(name: "n", scope: !16885, file: !2525, line: 48, type: !16862)
!16891 = !DILocation(line: 0, scope: !16885)
!16892 = !DILocation(line: 48, column: 58, scope: !16885)
!16893 = !DILocation(line: 48, column: 19, scope: !16885)
!16894 = !DILocation(line: 50, column: 9, scope: !16885)
!16895 = !DILocation(line: 50, column: 2, scope: !16885)
!16896 = distinct !DISubprogram(name: "sys_dlist_append", scope: !321, file: !321, line: 404, type: !16897, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16900)
!16897 = !DISubroutineType(types: !16898)
!16898 = !{null, !16899, !16862}
!16899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 32)
!16900 = !{!16901, !16902, !16903}
!16901 = !DILocalVariable(name: "list", arg: 1, scope: !16896, file: !321, line: 404, type: !16899)
!16902 = !DILocalVariable(name: "node", arg: 2, scope: !16896, file: !321, line: 404, type: !16862)
!16903 = !DILocalVariable(name: "tail", scope: !16896, file: !321, line: 406, type: !16874)
!16904 = !DILocation(line: 0, scope: !16896)
!16905 = !DILocation(line: 406, column: 34, scope: !16896)
!16906 = !DILocation(line: 408, column: 8, scope: !16896)
!16907 = !DILocation(line: 408, column: 13, scope: !16896)
!16908 = !DILocation(line: 409, column: 8, scope: !16896)
!16909 = !DILocation(line: 409, column: 13, scope: !16896)
!16910 = !DILocation(line: 411, column: 8, scope: !16896)
!16911 = !DILocation(line: 411, column: 13, scope: !16896)
!16912 = !DILocation(line: 412, column: 13, scope: !16896)
!16913 = !DILocation(line: 413, column: 1, scope: !16896)
!16914 = distinct !DISubprogram(name: "next_timeout", scope: !2525, file: !2525, line: 67, type: !16851, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16915)
!16915 = !{!16916, !16917, !16918}
!16916 = !DILocalVariable(name: "to", scope: !16914, file: !2525, line: 69, type: !2498)
!16917 = !DILocalVariable(name: "ticks_elapsed", scope: !16914, file: !2525, line: 70, type: !344)
!16918 = !DILocalVariable(name: "ret", scope: !16914, file: !2525, line: 71, type: !344)
!16919 = !DILocation(line: 69, column: 24, scope: !16914)
!16920 = !DILocation(line: 0, scope: !16914)
!16921 = !DILocation(line: 70, column: 26, scope: !16914)
!16922 = !DILocation(line: 73, column: 10, scope: !16923)
!16923 = distinct !DILexicalBlock(scope: !16914, file: !2525, line: 73, column: 6)
!16924 = !DILocation(line: 73, column: 19, scope: !16923)
!16925 = !DILocation(line: 74, column: 21, scope: !16923)
!16926 = !DILocation(line: 74, column: 30, scope: !16923)
!16927 = !DILocation(line: 74, column: 28, scope: !16923)
!16928 = !DILocation(line: 74, column: 45, scope: !16923)
!16929 = !DILocation(line: 73, column: 6, scope: !16914)
!16930 = !DILocation(line: 77, column: 9, scope: !16931)
!16931 = distinct !DILexicalBlock(scope: !16923, file: !2525, line: 76, column: 9)
!16932 = !DILocation(line: 0, scope: !16923)
!16933 = !DILocation(line: 81, column: 20, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16914, file: !2525, line: 81, column: 6)
!16935 = !DILocation(line: 81, column: 6, scope: !16934)
!16936 = !DILocation(line: 81, column: 32, scope: !16934)
!16937 = !DILocation(line: 85, column: 2, scope: !16914)
!16938 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !321, file: !321, line: 341, type: !16939, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16941)
!16939 = !DISubroutineType(types: !16940)
!16940 = !{!16862, !16899, !16862}
!16941 = !{!16942, !16943}
!16942 = !DILocalVariable(name: "list", arg: 1, scope: !16938, file: !321, line: 341, type: !16899)
!16943 = !DILocalVariable(name: "node", arg: 2, scope: !16938, file: !321, line: 342, type: !16862)
!16944 = !DILocation(line: 0, scope: !16938)
!16945 = !DILocation(line: 344, column: 15, scope: !16938)
!16946 = !DILocation(line: 344, column: 9, scope: !16938)
!16947 = !DILocation(line: 344, column: 26, scope: !16938)
!16948 = !DILocation(line: 344, column: 2, scope: !16938)
!16949 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !321, file: !321, line: 325, type: !16939, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16950)
!16950 = !{!16951, !16952}
!16951 = !DILocalVariable(name: "list", arg: 1, scope: !16949, file: !321, line: 325, type: !16899)
!16952 = !DILocalVariable(name: "node", arg: 2, scope: !16949, file: !321, line: 326, type: !16862)
!16953 = !DILocation(line: 0, scope: !16949)
!16954 = !DILocation(line: 328, column: 24, scope: !16949)
!16955 = !DILocation(line: 328, column: 15, scope: !16949)
!16956 = !DILocation(line: 328, column: 9, scope: !16949)
!16957 = !DILocation(line: 328, column: 45, scope: !16949)
!16958 = !DILocation(line: 328, column: 2, scope: !16949)
!16959 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !321, file: !321, line: 294, type: !16960, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16962)
!16960 = !DISubroutineType(types: !16961)
!16961 = !{!16862, !16899}
!16962 = !{!16963}
!16963 = !DILocalVariable(name: "list", arg: 1, scope: !16959, file: !321, line: 294, type: !16899)
!16964 = !DILocation(line: 0, scope: !16959)
!16965 = !DILocation(line: 296, column: 9, scope: !16959)
!16966 = !DILocation(line: 296, column: 2, scope: !16959)
!16967 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !321, file: !321, line: 266, type: !16968, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16970)
!16968 = !DISubroutineType(types: !16969)
!16969 = !{!166, !16899}
!16970 = !{!16971}
!16971 = !DILocalVariable(name: "list", arg: 1, scope: !16967, file: !321, line: 266, type: !16899)
!16972 = !DILocation(line: 0, scope: !16967)
!16973 = !DILocation(line: 268, column: 15, scope: !16967)
!16974 = !DILocation(line: 268, column: 20, scope: !16967)
!16975 = !DILocation(line: 268, column: 2, scope: !16967)
!16976 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2525, file: !2525, line: 150, type: !16977, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16979)
!16977 = !DISubroutineType(types: !16978)
!16978 = !{!103, !2498}
!16979 = !{!16980, !16981, !16982, !16984}
!16980 = !DILocalVariable(name: "to", arg: 1, scope: !16976, file: !2525, line: 150, type: !2498)
!16981 = !DILocalVariable(name: "ret", scope: !16976, file: !2525, line: 152, type: !103)
!16982 = !DILocalVariable(name: "__i", scope: !16983, file: !2525, line: 154, type: !16745)
!16983 = distinct !DILexicalBlock(scope: !16976, file: !2525, line: 154, column: 2)
!16984 = !DILocalVariable(name: "__key", scope: !16983, file: !2525, line: 154, type: !16745)
!16985 = !DILocation(line: 0, scope: !16976)
!16986 = !DILocation(line: 0, scope: !16983)
!16987 = !DILocation(line: 0, scope: !16767, inlinedAt: !16988)
!16988 = distinct !DILocation(line: 154, column: 2, scope: !16983)
!16989 = !DILocation(line: 55, column: 2, scope: !16776, inlinedAt: !16990)
!16990 = distinct !DILocation(line: 145, column: 10, scope: !16767, inlinedAt: !16988)
!16991 = !DILocation(line: 0, scope: !16776, inlinedAt: !16990)
!16992 = !DILocation(line: 155, column: 7, scope: !16993)
!16993 = distinct !DILexicalBlock(scope: !16994, file: !2525, line: 155, column: 7)
!16994 = distinct !DILexicalBlock(scope: !16995, file: !2525, line: 154, column: 24)
!16995 = distinct !DILexicalBlock(scope: !16983, file: !2525, line: 154, column: 2)
!16996 = !DILocation(line: 155, column: 7, scope: !16994)
!16997 = !DILocation(line: 156, column: 4, scope: !16998)
!16998 = distinct !DILexicalBlock(scope: !16993, file: !2525, line: 155, column: 39)
!16999 = !DILocation(line: 158, column: 3, scope: !16998)
!17000 = !DILocation(line: 0, scope: !16835, inlinedAt: !17001)
!17001 = distinct !DILocation(line: 154, column: 2, scope: !16995)
!17002 = !DILocation(line: 0, scope: !16843, inlinedAt: !17003)
!17003 = distinct !DILocation(line: 215, column: 2, scope: !16835, inlinedAt: !17001)
!17004 = !DILocation(line: 95, column: 2, scope: !16843, inlinedAt: !17003)
!17005 = !DILocation(line: 161, column: 2, scope: !16976)
!17006 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !321, file: !321, line: 225, type: !17007, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17011)
!17007 = !DISubroutineType(types: !17008)
!17008 = !{!166, !17009}
!17009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17010, size: 32)
!17010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2502)
!17011 = !{!17012}
!17012 = !DILocalVariable(name: "node", arg: 1, scope: !17006, file: !321, line: 225, type: !17009)
!17013 = !DILocation(line: 0, scope: !17006)
!17014 = !DILocation(line: 227, column: 15, scope: !17006)
!17015 = !DILocation(line: 227, column: 20, scope: !17006)
!17016 = !DILocation(line: 227, column: 2, scope: !17006)
!17017 = distinct !DISubprogram(name: "remove_timeout", scope: !2525, file: !2525, line: 53, type: !2519, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17018)
!17018 = !{!17019}
!17019 = !DILocalVariable(name: "t", arg: 1, scope: !17017, file: !2525, line: 53, type: !2498)
!17020 = !DILocation(line: 0, scope: !17017)
!17021 = !DILocation(line: 55, column: 6, scope: !17022)
!17022 = distinct !DILexicalBlock(scope: !17017, file: !2525, line: 55, column: 6)
!17023 = !DILocation(line: 55, column: 14, scope: !17022)
!17024 = !DILocation(line: 55, column: 6, scope: !17017)
!17025 = !DILocation(line: 56, column: 25, scope: !17026)
!17026 = distinct !DILexicalBlock(scope: !17022, file: !2525, line: 55, column: 23)
!17027 = !DILocation(line: 56, column: 12, scope: !17026)
!17028 = !DILocation(line: 56, column: 19, scope: !17026)
!17029 = !DILocation(line: 57, column: 2, scope: !17026)
!17030 = !DILocation(line: 59, column: 23, scope: !17017)
!17031 = !DILocation(line: 59, column: 2, scope: !17017)
!17032 = !DILocation(line: 60, column: 1, scope: !17017)
!17033 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !321, file: !321, line: 496, type: !17034, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17036)
!17034 = !DISubroutineType(types: !17035)
!17035 = !{null, !16862}
!17036 = !{!17037, !17038, !17039}
!17037 = !DILocalVariable(name: "node", arg: 1, scope: !17033, file: !321, line: 496, type: !16862)
!17038 = !DILocalVariable(name: "prev", scope: !17033, file: !321, line: 498, type: !16874)
!17039 = !DILocalVariable(name: "next", scope: !17033, file: !321, line: 499, type: !16874)
!17040 = !DILocation(line: 0, scope: !17033)
!17041 = !DILocation(line: 498, column: 34, scope: !17033)
!17042 = !DILocation(line: 499, column: 34, scope: !17033)
!17043 = !DILocation(line: 501, column: 8, scope: !17033)
!17044 = !DILocation(line: 501, column: 13, scope: !17033)
!17045 = !DILocation(line: 502, column: 8, scope: !17033)
!17046 = !DILocation(line: 502, column: 13, scope: !17033)
!17047 = !DILocation(line: 503, column: 2, scope: !17033)
!17048 = !DILocation(line: 504, column: 1, scope: !17033)
!17049 = distinct !DISubprogram(name: "sys_dnode_init", scope: !321, file: !321, line: 211, type: !17034, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17050)
!17050 = !{!17051}
!17051 = !DILocalVariable(name: "node", arg: 1, scope: !17049, file: !321, line: 211, type: !16862)
!17052 = !DILocation(line: 0, scope: !17049)
!17053 = !DILocation(line: 213, column: 8, scope: !17049)
!17054 = !DILocation(line: 213, column: 13, scope: !17049)
!17055 = !DILocation(line: 214, column: 8, scope: !17049)
!17056 = !DILocation(line: 214, column: 13, scope: !17049)
!17057 = !DILocation(line: 215, column: 1, scope: !17049)
!17058 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2525, file: !2525, line: 183, type: !17059, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17063)
!17059 = !DISubroutineType(types: !17060)
!17060 = !{!1720, !17061}
!17061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17062, size: 32)
!17062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2499)
!17063 = !{!17064, !17065, !17066, !17068}
!17064 = !DILocalVariable(name: "timeout", arg: 1, scope: !17058, file: !2525, line: 183, type: !17061)
!17065 = !DILocalVariable(name: "ticks", scope: !17058, file: !2525, line: 185, type: !1720)
!17066 = !DILocalVariable(name: "__i", scope: !17067, file: !2525, line: 187, type: !16745)
!17067 = distinct !DILexicalBlock(scope: !17058, file: !2525, line: 187, column: 2)
!17068 = !DILocalVariable(name: "__key", scope: !17067, file: !2525, line: 187, type: !16745)
!17069 = !DILocation(line: 0, scope: !17058)
!17070 = !DILocation(line: 0, scope: !17067)
!17071 = !DILocation(line: 0, scope: !16767, inlinedAt: !17072)
!17072 = distinct !DILocation(line: 187, column: 2, scope: !17067)
!17073 = !DILocation(line: 55, column: 2, scope: !16776, inlinedAt: !17074)
!17074 = distinct !DILocation(line: 145, column: 10, scope: !16767, inlinedAt: !17072)
!17075 = !DILocation(line: 0, scope: !16776, inlinedAt: !17074)
!17076 = !DILocation(line: 188, column: 11, scope: !17077)
!17077 = distinct !DILexicalBlock(scope: !17078, file: !2525, line: 187, column: 24)
!17078 = distinct !DILexicalBlock(scope: !17067, file: !2525, line: 187, column: 2)
!17079 = !DILocation(line: 0, scope: !16835, inlinedAt: !17080)
!17080 = distinct !DILocation(line: 187, column: 2, scope: !17078)
!17081 = !DILocation(line: 0, scope: !16843, inlinedAt: !17082)
!17082 = distinct !DILocation(line: 215, column: 2, scope: !16835, inlinedAt: !17080)
!17083 = !DILocation(line: 95, column: 2, scope: !16843, inlinedAt: !17082)
!17084 = !DILocation(line: 191, column: 2, scope: !17058)
!17085 = distinct !DISubprogram(name: "timeout_rem", scope: !2525, file: !2525, line: 165, type: !17059, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17086)
!17086 = !{!17087, !17088, !17089}
!17087 = !DILocalVariable(name: "timeout", arg: 1, scope: !17085, file: !2525, line: 165, type: !17061)
!17088 = !DILocalVariable(name: "ticks", scope: !17085, file: !2525, line: 167, type: !1720)
!17089 = !DILocalVariable(name: "t", scope: !17090, file: !2525, line: 173, type: !2498)
!17090 = distinct !DILexicalBlock(scope: !17085, file: !2525, line: 173, column: 2)
!17091 = !DILocation(line: 0, scope: !17085)
!17092 = !DILocation(line: 169, column: 6, scope: !17093)
!17093 = distinct !DILexicalBlock(scope: !17085, file: !2525, line: 169, column: 6)
!17094 = !DILocation(line: 169, column: 6, scope: !17085)
!17095 = !DILocation(line: 173, column: 28, scope: !17090)
!17096 = !DILocation(line: 0, scope: !17090)
!17097 = !DILocation(line: 173, column: 39, scope: !17098)
!17098 = distinct !DILexicalBlock(scope: !17090, file: !2525, line: 173, column: 2)
!17099 = !DILocation(line: 173, column: 2, scope: !17090)
!17100 = !DILocation(line: 174, column: 15, scope: !17101)
!17101 = distinct !DILexicalBlock(scope: !17098, file: !2525, line: 173, column: 61)
!17102 = !DILocation(line: 174, column: 9, scope: !17101)
!17103 = !DILocation(line: 175, column: 15, scope: !17104)
!17104 = distinct !DILexicalBlock(scope: !17101, file: !2525, line: 175, column: 7)
!17105 = !DILocation(line: 175, column: 7, scope: !17101)
!17106 = !DILocation(line: 173, column: 52, scope: !17098)
!17107 = distinct !{!17107, !17099, !17108}
!17108 = !DILocation(line: 178, column: 2, scope: !17090)
!17109 = !DILocation(line: 180, column: 17, scope: !17085)
!17110 = !DILocation(line: 180, column: 15, scope: !17085)
!17111 = !DILocation(line: 180, column: 2, scope: !17085)
!17112 = !DILocation(line: 181, column: 1, scope: !17085)
!17113 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14158, file: !14158, line: 35, type: !17114, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17116)
!17114 = !DISubroutineType(types: !17115)
!17115 = !{!166, !17061}
!17116 = !{!17117}
!17117 = !DILocalVariable(name: "to", arg: 1, scope: !17113, file: !14158, line: 35, type: !17061)
!17118 = !DILocation(line: 0, scope: !17113)
!17119 = !DILocation(line: 37, column: 35, scope: !17113)
!17120 = !DILocation(line: 37, column: 10, scope: !17113)
!17121 = !DILocation(line: 37, column: 9, scope: !17113)
!17122 = !DILocation(line: 37, column: 2, scope: !17113)
!17123 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2525, file: !2525, line: 194, type: !17059, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17124)
!17124 = !{!17125, !17126, !17127, !17129}
!17125 = !DILocalVariable(name: "timeout", arg: 1, scope: !17123, file: !2525, line: 194, type: !17061)
!17126 = !DILocalVariable(name: "ticks", scope: !17123, file: !2525, line: 196, type: !1720)
!17127 = !DILocalVariable(name: "__i", scope: !17128, file: !2525, line: 198, type: !16745)
!17128 = distinct !DILexicalBlock(scope: !17123, file: !2525, line: 198, column: 2)
!17129 = !DILocalVariable(name: "__key", scope: !17128, file: !2525, line: 198, type: !16745)
!17130 = !DILocation(line: 0, scope: !17123)
!17131 = !DILocation(line: 0, scope: !17128)
!17132 = !DILocation(line: 0, scope: !16767, inlinedAt: !17133)
!17133 = distinct !DILocation(line: 198, column: 2, scope: !17128)
!17134 = !DILocation(line: 55, column: 2, scope: !16776, inlinedAt: !17135)
!17135 = distinct !DILocation(line: 145, column: 10, scope: !16767, inlinedAt: !17133)
!17136 = !DILocation(line: 0, scope: !16776, inlinedAt: !17135)
!17137 = !DILocation(line: 199, column: 11, scope: !17138)
!17138 = distinct !DILexicalBlock(scope: !17139, file: !2525, line: 198, column: 24)
!17139 = distinct !DILexicalBlock(scope: !17128, file: !2525, line: 198, column: 2)
!17140 = !DILocation(line: 199, column: 23, scope: !17138)
!17141 = !DILocation(line: 0, scope: !16835, inlinedAt: !17142)
!17142 = distinct !DILocation(line: 198, column: 2, scope: !17139)
!17143 = !DILocation(line: 0, scope: !16843, inlinedAt: !17144)
!17144 = distinct !DILocation(line: 215, column: 2, scope: !16835, inlinedAt: !17142)
!17145 = !DILocation(line: 95, column: 2, scope: !16843, inlinedAt: !17144)
!17146 = !DILocation(line: 199, column: 21, scope: !17138)
!17147 = !DILocation(line: 202, column: 2, scope: !17123)
!17148 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2525, file: !2525, line: 205, type: !16851, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17149)
!17149 = !{!17150, !17151, !17153}
!17150 = !DILocalVariable(name: "ret", scope: !17148, file: !2525, line: 207, type: !344)
!17151 = !DILocalVariable(name: "__i", scope: !17152, file: !2525, line: 209, type: !16745)
!17152 = distinct !DILexicalBlock(scope: !17148, file: !2525, line: 209, column: 2)
!17153 = !DILocalVariable(name: "__key", scope: !17152, file: !2525, line: 209, type: !16745)
!17154 = !DILocation(line: 0, scope: !17148)
!17155 = !DILocation(line: 0, scope: !17152)
!17156 = !DILocation(line: 0, scope: !16767, inlinedAt: !17157)
!17157 = distinct !DILocation(line: 209, column: 2, scope: !17152)
!17158 = !DILocation(line: 55, column: 2, scope: !16776, inlinedAt: !17159)
!17159 = distinct !DILocation(line: 145, column: 10, scope: !16767, inlinedAt: !17157)
!17160 = !DILocation(line: 0, scope: !16776, inlinedAt: !17159)
!17161 = !DILocation(line: 210, column: 9, scope: !17162)
!17162 = distinct !DILexicalBlock(scope: !17163, file: !2525, line: 209, column: 24)
!17163 = distinct !DILexicalBlock(scope: !17152, file: !2525, line: 209, column: 2)
!17164 = !DILocation(line: 0, scope: !16835, inlinedAt: !17165)
!17165 = distinct !DILocation(line: 209, column: 2, scope: !17163)
!17166 = !DILocation(line: 0, scope: !16843, inlinedAt: !17167)
!17167 = distinct !DILocation(line: 215, column: 2, scope: !16835, inlinedAt: !17165)
!17168 = !DILocation(line: 95, column: 2, scope: !16843, inlinedAt: !17167)
!17169 = !DILocation(line: 212, column: 2, scope: !17148)
!17170 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2525, file: !2525, line: 215, type: !11780, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17171)
!17171 = !{!17172, !17173, !17174, !17176, !17177, !17180, !17181}
!17172 = !DILocalVariable(name: "ticks", arg: 1, scope: !17170, file: !2525, line: 215, type: !344)
!17173 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17170, file: !2525, line: 215, type: !166)
!17174 = !DILocalVariable(name: "__i", scope: !17175, file: !2525, line: 217, type: !16745)
!17175 = distinct !DILexicalBlock(scope: !17170, file: !2525, line: 217, column: 2)
!17176 = !DILocalVariable(name: "__key", scope: !17175, file: !2525, line: 217, type: !16745)
!17177 = !DILocalVariable(name: "next_to", scope: !17178, file: !2525, line: 218, type: !103)
!17178 = distinct !DILexicalBlock(scope: !17179, file: !2525, line: 217, column: 24)
!17179 = distinct !DILexicalBlock(scope: !17175, file: !2525, line: 217, column: 2)
!17180 = !DILocalVariable(name: "sooner", scope: !17178, file: !2525, line: 219, type: !166)
!17181 = !DILocalVariable(name: "imminent", scope: !17178, file: !2525, line: 221, type: !166)
!17182 = !DILocation(line: 0, scope: !17170)
!17183 = !DILocation(line: 0, scope: !17175)
!17184 = !DILocation(line: 0, scope: !16767, inlinedAt: !17185)
!17185 = distinct !DILocation(line: 217, column: 2, scope: !17175)
!17186 = !DILocation(line: 55, column: 2, scope: !16776, inlinedAt: !17187)
!17187 = distinct !DILocation(line: 145, column: 10, scope: !16767, inlinedAt: !17185)
!17188 = !DILocation(line: 0, scope: !16776, inlinedAt: !17187)
!17189 = !DILocation(line: 218, column: 17, scope: !17178)
!17190 = !DILocation(line: 0, scope: !17178)
!17191 = !DILocation(line: 221, column: 27, scope: !17178)
!17192 = !DILocation(line: 233, column: 17, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !17178, file: !2525, line: 233, column: 7)
!17194 = !DILocation(line: 234, column: 26, scope: !17195)
!17195 = distinct !DILexicalBlock(scope: !17193, file: !2525, line: 233, column: 56)
!17196 = !DILocation(line: 234, column: 4, scope: !17195)
!17197 = !DILocation(line: 235, column: 3, scope: !17195)
!17198 = !DILocation(line: 0, scope: !16835, inlinedAt: !17199)
!17199 = distinct !DILocation(line: 217, column: 2, scope: !17179)
!17200 = !DILocation(line: 0, scope: !16843, inlinedAt: !17201)
!17201 = distinct !DILocation(line: 215, column: 2, scope: !16835, inlinedAt: !17199)
!17202 = !DILocation(line: 95, column: 2, scope: !16843, inlinedAt: !17201)
!17203 = !DILocation(line: 237, column: 1, scope: !17170)
!17204 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2525, file: !2525, line: 239, type: !17205, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17207)
!17205 = !DISubroutineType(types: !17206)
!17206 = !{null, !344}
!17207 = !{!17208, !17209, !17210, !17212}
!17208 = !DILocalVariable(name: "ticks", arg: 1, scope: !17204, file: !2525, line: 239, type: !344)
!17209 = !DILocalVariable(name: "key", scope: !17204, file: !2525, line: 245, type: !16745)
!17210 = !DILocalVariable(name: "t", scope: !17211, file: !2525, line: 262, type: !2498)
!17211 = distinct !DILexicalBlock(scope: !17204, file: !2525, line: 261, column: 67)
!17212 = !DILocalVariable(name: "dt", scope: !17211, file: !2525, line: 263, type: !103)
!17213 = !DILocation(line: 0, scope: !17204)
!17214 = !DILocation(line: 242, column: 2, scope: !17204)
!17215 = !DILocation(line: 0, scope: !16767, inlinedAt: !17216)
!17216 = distinct !DILocation(line: 245, column: 25, scope: !17204)
!17217 = !DILocation(line: 55, column: 2, scope: !16776, inlinedAt: !17218)
!17218 = distinct !DILocation(line: 145, column: 10, scope: !16767, inlinedAt: !17216)
!17219 = !DILocation(line: 0, scope: !16776, inlinedAt: !17218)
!17220 = !DILocation(line: 261, column: 9, scope: !17204)
!17221 = !DILocation(line: 261, column: 17, scope: !17204)
!17222 = !DILocation(line: 261, column: 25, scope: !17204)
!17223 = !DILocation(line: 261, column: 37, scope: !17204)
!17224 = !DILocation(line: 261, column: 47, scope: !17204)
!17225 = !DILocation(line: 261, column: 44, scope: !17204)
!17226 = !DILocation(line: 261, column: 2, scope: !17204)
!17227 = !DILocation(line: 0, scope: !17211)
!17228 = !DILocation(line: 263, column: 12, scope: !17211)
!17229 = !DILocation(line: 265, column: 16, scope: !17211)
!17230 = !DILocation(line: 265, column: 13, scope: !17211)
!17231 = !DILocation(line: 266, column: 13, scope: !17211)
!17232 = !DILocation(line: 267, column: 3, scope: !17211)
!17233 = !DILocation(line: 0, scope: !16835, inlinedAt: !17234)
!17234 = distinct !DILocation(line: 269, column: 3, scope: !17211)
!17235 = !DILocation(line: 0, scope: !16843, inlinedAt: !17236)
!17236 = distinct !DILocation(line: 215, column: 2, scope: !16835, inlinedAt: !17234)
!17237 = !DILocation(line: 95, column: 2, scope: !16843, inlinedAt: !17236)
!17238 = !DILocation(line: 270, column: 6, scope: !17211)
!17239 = !DILocation(line: 270, column: 3, scope: !17211)
!17240 = !DILocation(line: 0, scope: !16767, inlinedAt: !17241)
!17241 = distinct !DILocation(line: 271, column: 9, scope: !17211)
!17242 = !DILocation(line: 55, column: 2, scope: !16776, inlinedAt: !17243)
!17243 = distinct !DILocation(line: 145, column: 10, scope: !16767, inlinedAt: !17241)
!17244 = !DILocation(line: 0, scope: !16776, inlinedAt: !17243)
!17245 = !DILocation(line: 272, column: 22, scope: !17211)
!17246 = distinct !{!17246, !17226, !17247}
!17247 = !DILocation(line: 273, column: 2, scope: !17204)
!17248 = !DILocation(line: 276, column: 19, scope: !17249)
!17249 = distinct !DILexicalBlock(scope: !17250, file: !2525, line: 275, column: 23)
!17250 = distinct !DILexicalBlock(scope: !17204, file: !2525, line: 275, column: 6)
!17251 = !DILocation(line: 277, column: 2, scope: !17249)
!17252 = !DILocation(line: 279, column: 15, scope: !17204)
!17253 = !DILocation(line: 279, column: 12, scope: !17204)
!17254 = !DILocation(line: 280, column: 21, scope: !17204)
!17255 = !DILocation(line: 282, column: 24, scope: !17204)
!17256 = !DILocation(line: 282, column: 2, scope: !17204)
!17257 = !DILocation(line: 0, scope: !16835, inlinedAt: !17258)
!17258 = distinct !DILocation(line: 284, column: 2, scope: !17204)
!17259 = !DILocation(line: 0, scope: !16843, inlinedAt: !17260)
!17260 = distinct !DILocation(line: 215, column: 2, scope: !16835, inlinedAt: !17258)
!17261 = !DILocation(line: 95, column: 2, scope: !16843, inlinedAt: !17260)
!17262 = !DILocation(line: 285, column: 1, scope: !17204)
!17263 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2525, file: !2525, line: 287, type: !17264, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17266)
!17264 = !DISubroutineType(types: !17265)
!17265 = !{!432}
!17266 = !{!17267, !17268, !17270}
!17267 = !DILocalVariable(name: "t", scope: !17263, file: !2525, line: 289, type: !1617)
!17268 = !DILocalVariable(name: "__i", scope: !17269, file: !2525, line: 291, type: !16745)
!17269 = distinct !DILexicalBlock(scope: !17263, file: !2525, line: 291, column: 2)
!17270 = !DILocalVariable(name: "__key", scope: !17269, file: !2525, line: 291, type: !16745)
!17271 = !DILocation(line: 0, scope: !17263)
!17272 = !DILocation(line: 0, scope: !17269)
!17273 = !DILocation(line: 0, scope: !16767, inlinedAt: !17274)
!17274 = distinct !DILocation(line: 291, column: 2, scope: !17269)
!17275 = !DILocation(line: 55, column: 2, scope: !16776, inlinedAt: !17276)
!17276 = distinct !DILocation(line: 145, column: 10, scope: !16767, inlinedAt: !17274)
!17277 = !DILocation(line: 0, scope: !16776, inlinedAt: !17276)
!17278 = !DILocation(line: 292, column: 7, scope: !17279)
!17279 = distinct !DILexicalBlock(scope: !17280, file: !2525, line: 291, column: 24)
!17280 = distinct !DILexicalBlock(scope: !17269, file: !2525, line: 291, column: 2)
!17281 = !DILocation(line: 292, column: 19, scope: !17279)
!17282 = !DILocation(line: 0, scope: !16835, inlinedAt: !17283)
!17283 = distinct !DILocation(line: 291, column: 2, scope: !17280)
!17284 = !DILocation(line: 0, scope: !16843, inlinedAt: !17285)
!17285 = distinct !DILocation(line: 215, column: 2, scope: !16835, inlinedAt: !17283)
!17286 = !DILocation(line: 95, column: 2, scope: !16843, inlinedAt: !17285)
!17287 = !DILocation(line: 292, column: 17, scope: !17279)
!17288 = !DILocation(line: 294, column: 2, scope: !17263)
!17289 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2525, file: !2525, line: 297, type: !6924, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !473)
!17290 = !DILocation(line: 300, column: 19, scope: !17289)
!17291 = !DILocation(line: 300, column: 9, scope: !17289)
!17292 = !DILocation(line: 300, column: 2, scope: !17289)
!17293 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2525, file: !2525, line: 306, type: !17264, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !473)
!17294 = !DILocation(line: 308, column: 9, scope: !17293)
!17295 = !DILocation(line: 308, column: 2, scope: !17293)
!17296 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2525, file: !2525, line: 319, type: !6934, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17297)
!17297 = !{!17298, !17299, !17300, !17301}
!17298 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17296, file: !2525, line: 319, type: !132)
!17299 = !DILocalVariable(name: "start_cycles", scope: !17296, file: !2525, line: 328, type: !132)
!17300 = !DILocalVariable(name: "cycles_to_wait", scope: !17296, file: !2525, line: 331, type: !132)
!17301 = !DILocalVariable(name: "current_cycles", scope: !17302, file: !2525, line: 338, type: !132)
!17302 = distinct !DILexicalBlock(scope: !17303, file: !2525, line: 337, column: 11)
!17303 = distinct !DILexicalBlock(scope: !17304, file: !2525, line: 337, column: 2)
!17304 = distinct !DILexicalBlock(scope: !17296, file: !2525, line: 337, column: 2)
!17305 = !DILocation(line: 0, scope: !17296)
!17306 = !DILocation(line: 322, column: 19, scope: !17307)
!17307 = distinct !DILexicalBlock(scope: !17296, file: !2525, line: 322, column: 6)
!17308 = !DILocation(line: 322, column: 6, scope: !17296)
!17309 = !DILocation(line: 328, column: 26, scope: !17296)
!17310 = !DILocation(line: 333, column: 43, scope: !17296)
!17311 = !DILocation(line: 337, column: 2, scope: !17296)
!17312 = !DILocation(line: 338, column: 29, scope: !17302)
!17313 = !DILocation(line: 0, scope: !17302)
!17314 = !DILocation(line: 341, column: 23, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17302, file: !2525, line: 341, column: 7)
!17316 = !DILocation(line: 341, column: 39, scope: !17315)
!17317 = !DILocation(line: 349, column: 1, scope: !17296)
!17318 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !312, file: !312, line: 1675, type: !6924, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !473)
!17319 = !DILocation(line: 1677, column: 9, scope: !17318)
!17320 = !DILocation(line: 1677, column: 2, scope: !17318)
!17321 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17322, file: !17322, line: 24, type: !6924, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !473)
!17322 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17323 = !DILocation(line: 26, column: 9, scope: !17321)
!17324 = !DILocation(line: 26, column: 2, scope: !17321)
!17325 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2525, file: !2525, line: 364, type: !17326, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !17328)
!17326 = !DISubroutineType(types: !17327)
!17327 = !{!1617, !16735}
!17328 = !{!17329, !17330}
!17329 = !DILocalVariable(name: "timeout", arg: 1, scope: !17325, file: !2525, line: 364, type: !16735)
!17330 = !DILocalVariable(name: "dt", scope: !17325, file: !2525, line: 366, type: !1720)
!17331 = !DILocation(line: 0, scope: !17325)
!17332 = !DILocation(line: 368, column: 6, scope: !17325)
!17333 = !DILocation(line: 371, column: 10, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !17335, file: !2525, line: 370, column: 47)
!17335 = distinct !DILexicalBlock(scope: !17336, file: !2525, line: 370, column: 13)
!17336 = distinct !DILexicalBlock(scope: !17325, file: !2525, line: 368, column: 6)
!17337 = !DILocation(line: 371, column: 3, scope: !17334)
!17338 = !DILocation(line: 376, column: 58, scope: !17339)
!17339 = distinct !DILexicalBlock(scope: !17340, file: !2525, line: 376, column: 7)
!17340 = distinct !DILexicalBlock(scope: !17335, file: !2525, line: 372, column: 9)
!17341 = !DILocation(line: 376, column: 7, scope: !17340)
!17342 = !DILocation(line: 376, column: 43, scope: !17339)
!17343 = !DILocation(line: 377, column: 4, scope: !17344)
!17344 = distinct !DILexicalBlock(scope: !17339, file: !2525, line: 376, column: 64)
!17345 = !DILocation(line: 379, column: 10, scope: !17340)
!17346 = !DILocation(line: 379, column: 33, scope: !17340)
!17347 = !DILocation(line: 379, column: 31, scope: !17340)
!17348 = !DILocation(line: 379, column: 3, scope: !17340)
!17349 = !DILocation(line: 0, scope: !17336)
!17350 = !DILocation(line: 381, column: 1, scope: !17325)
!17351 = distinct !DISubprogram(name: "boot_banner", scope: !17352, file: !17352, line: 26, type: !3256, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3242, retainedNodes: !473)
!17352 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17353 = !DILocation(line: 34, column: 2, scope: !17351)
!17354 = !DILocation(line: 36, column: 1, scope: !17351)
!17355 = distinct !DISubprogram(name: "statics_init", scope: !2553, file: !2553, line: 21, type: !2559, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !17356)
!17356 = !{!17357, !17358}
!17357 = !DILocalVariable(name: "unused", arg: 1, scope: !17355, file: !2553, line: 21, type: !2561)
!17358 = !DILocalVariable(name: "h", scope: !17359, file: !2553, line: 24, type: !17360)
!17359 = distinct !DILexicalBlock(scope: !17355, file: !2553, line: 24, column: 2)
!17360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17361, size: 32)
!17361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !17362)
!17362 = !{!17363, !17369, !17375}
!17363 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17361, file: !312, line: 5074, baseType: !17364, size: 96)
!17364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !17365)
!17365 = !{!17366, !17367, !17368}
!17366 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17364, file: !462, line: 57, baseType: !465, size: 32)
!17367 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17364, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!17368 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17364, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!17369 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17361, file: !312, line: 5075, baseType: !17370, size: 64, offset: 96)
!17370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !17371)
!17371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !17372)
!17372 = !{!17373}
!17373 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17371, file: !316, line: 232, baseType: !17374, size: 64)
!17374 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2539)
!17375 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17361, file: !312, line: 5076, baseType: !17376, offset: 160)
!17376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!17377 = !DILocation(line: 0, scope: !17355)
!17378 = !DILocation(line: 0, scope: !17359)
!17379 = !DILocation(line: 24, column: 2, scope: !17359)
!17380 = !DILocation(line: 52, column: 2, scope: !17355)
!17381 = !DILocation(line: 49, column: 27, scope: !17382)
!17382 = distinct !DILexicalBlock(scope: !17383, file: !2553, line: 48, column: 3)
!17383 = distinct !DILexicalBlock(scope: !17384, file: !2553, line: 24, column: 36)
!17384 = distinct !DILexicalBlock(scope: !17359, file: !2553, line: 24, column: 2)
!17385 = !DILocation(line: 49, column: 45, scope: !17382)
!17386 = !DILocation(line: 49, column: 4, scope: !17382)
!17387 = !DILocation(line: 24, column: 2, scope: !17384)
!17388 = !DILocation(line: 24, column: 2, scope: !17389)
!17389 = distinct !DILexicalBlock(scope: !17384, file: !2553, line: 24, column: 2)
!17390 = distinct !{!17390, !17379, !17391}
!17391 = !DILocation(line: 51, column: 2, scope: !17359)
!17392 = distinct !DISubprogram(name: "k_heap_init", scope: !2553, file: !2553, line: 13, type: !17393, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !17395)
!17393 = !DISubroutineType(types: !17394)
!17394 = !{null, !17360, !102, !356}
!17395 = !{!17396, !17397, !17398}
!17396 = !DILocalVariable(name: "h", arg: 1, scope: !17392, file: !2553, line: 13, type: !17360)
!17397 = !DILocalVariable(name: "mem", arg: 2, scope: !17392, file: !2553, line: 13, type: !102)
!17398 = !DILocalVariable(name: "bytes", arg: 3, scope: !17392, file: !2553, line: 13, type: !356)
!17399 = !DILocation(line: 0, scope: !17392)
!17400 = !DILocation(line: 15, column: 19, scope: !17392)
!17401 = !DILocation(line: 15, column: 2, scope: !17392)
!17402 = !DILocation(line: 16, column: 20, scope: !17392)
!17403 = !DILocation(line: 16, column: 2, scope: !17392)
!17404 = !DILocation(line: 19, column: 1, scope: !17392)
!17405 = distinct !DISubprogram(name: "z_waitq_init", scope: !14090, file: !14090, line: 47, type: !17406, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !17409)
!17406 = !DISubroutineType(types: !17407)
!17407 = !{null, !17408}
!17408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17370, size: 32)
!17409 = !{!17410}
!17410 = !DILocalVariable(name: "w", arg: 1, scope: !17405, file: !14090, line: 47, type: !17408)
!17411 = !DILocation(line: 0, scope: !17405)
!17412 = !DILocation(line: 49, column: 21, scope: !17405)
!17413 = !DILocation(line: 49, column: 2, scope: !17405)
!17414 = !DILocation(line: 50, column: 1, scope: !17405)
!17415 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !17416, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !17419)
!17416 = !DISubroutineType(types: !17417)
!17417 = !{null, !17418}
!17418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17374, size: 32)
!17419 = !{!17420}
!17420 = !DILocalVariable(name: "list", arg: 1, scope: !17415, file: !321, line: 197, type: !17418)
!17421 = !DILocation(line: 0, scope: !17415)
!17422 = !DILocation(line: 199, column: 8, scope: !17415)
!17423 = !DILocation(line: 199, column: 13, scope: !17415)
!17424 = !DILocation(line: 200, column: 8, scope: !17415)
!17425 = !DILocation(line: 200, column: 13, scope: !17415)
!17426 = !DILocation(line: 201, column: 1, scope: !17415)
!17427 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2553, file: !2553, line: 64, type: !17428, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !17434)
!17428 = !DISubroutineType(types: !17429)
!17429 = !{!102, !17360, !356, !356, !17430}
!17430 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1721, line: 67, baseType: !17431)
!17431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1721, line: 65, size: 64, elements: !17432)
!17432 = !{!17433}
!17433 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17431, file: !1721, line: 66, baseType: !1720, size: 64)
!17434 = !{!17435, !17436, !17437, !17438, !17439, !17440, !17441, !17442, !17447}
!17435 = !DILocalVariable(name: "h", arg: 1, scope: !17427, file: !2553, line: 64, type: !17360)
!17436 = !DILocalVariable(name: "align", arg: 2, scope: !17427, file: !2553, line: 64, type: !356)
!17437 = !DILocalVariable(name: "bytes", arg: 3, scope: !17427, file: !2553, line: 64, type: !356)
!17438 = !DILocalVariable(name: "timeout", arg: 4, scope: !17427, file: !2553, line: 65, type: !17430)
!17439 = !DILocalVariable(name: "now", scope: !17427, file: !2553, line: 67, type: !432)
!17440 = !DILocalVariable(name: "end", scope: !17427, file: !2553, line: 67, type: !432)
!17441 = !DILocalVariable(name: "ret", scope: !17427, file: !2553, line: 68, type: !102)
!17442 = !DILocalVariable(name: "key", scope: !17427, file: !2553, line: 72, type: !17443)
!17443 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !17444)
!17444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !17445)
!17445 = !{!17446}
!17446 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17444, file: !472, line: 33, baseType: !103, size: 32)
!17447 = !DILocalVariable(name: "blocked_alloc", scope: !17427, file: !2553, line: 78, type: !166)
!17448 = !DILocation(line: 0, scope: !17427)
!17449 = !DILocation(line: 67, column: 21, scope: !17427)
!17450 = !DILocation(line: 70, column: 8, scope: !17427)
!17451 = !DILocation(line: 72, column: 41, scope: !17427)
!17452 = !DILocalVariable(name: "l", arg: 1, scope: !17453, file: !472, line: 136, type: !17456)
!17453 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !17454, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !17457)
!17454 = !DISubroutineType(types: !17455)
!17455 = !{!17443, !17456}
!17456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17376, size: 32)
!17457 = !{!17452, !17458}
!17458 = !DILocalVariable(name: "k", scope: !17453, file: !472, line: 139, type: !17443)
!17459 = !DILocation(line: 0, scope: !17453, inlinedAt: !17460)
!17460 = distinct !DILocation(line: 72, column: 25, scope: !17427)
!17461 = !DILocation(line: 55, column: 2, scope: !17462, inlinedAt: !17466)
!17462 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5823, file: !5823, line: 42, type: !5824, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !17463)
!17463 = !{!17464, !17465}
!17464 = !DILocalVariable(name: "key", scope: !17462, file: !5823, line: 44, type: !32)
!17465 = !DILocalVariable(name: "tmp", scope: !17462, file: !5823, line: 53, type: !32)
!17466 = distinct !DILocation(line: 145, column: 10, scope: !17453, inlinedAt: !17460)
!17467 = !{i64 2223026}
!17468 = !DILocation(line: 0, scope: !17462, inlinedAt: !17466)
!17469 = !DILocation(line: 81, column: 9, scope: !17470)
!17470 = distinct !DILexicalBlock(scope: !17427, file: !2553, line: 80, column: 22)
!17471 = !DILocation(line: 83, column: 9, scope: !17470)
!17472 = !DILocation(line: 85, column: 12, scope: !17473)
!17473 = distinct !DILexicalBlock(scope: !17470, file: !2553, line: 84, column: 7)
!17474 = !DILocation(line: 85, column: 21, scope: !17473)
!17475 = !DILocation(line: 85, column: 30, scope: !17473)
!17476 = !DILocation(line: 85, column: 37, scope: !17473)
!17477 = !DILocation(line: 84, column: 7, scope: !17470)
!17478 = !DILocation(line: 99, column: 10, scope: !17470)
!17479 = !DILocation(line: 0, scope: !17453, inlinedAt: !17480)
!17480 = distinct !DILocation(line: 101, column: 9, scope: !17470)
!17481 = !DILocation(line: 55, column: 2, scope: !17462, inlinedAt: !17482)
!17482 = distinct !DILocation(line: 145, column: 10, scope: !17453, inlinedAt: !17480)
!17483 = !DILocation(line: 0, scope: !17462, inlinedAt: !17482)
!17484 = distinct !{!17484, !17485, !17486}
!17485 = !DILocation(line: 80, column: 2, scope: !17427)
!17486 = !DILocation(line: 102, column: 2, scope: !17427)
!17487 = !DILocalVariable(name: "key", arg: 2, scope: !17488, file: !472, line: 190, type: !17443)
!17488 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !17489, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !17491)
!17489 = !DISubroutineType(types: !17490)
!17490 = !{null, !17456, !17443}
!17491 = !{!17492, !17487}
!17492 = !DILocalVariable(name: "l", arg: 1, scope: !17488, file: !472, line: 189, type: !17456)
!17493 = !DILocation(line: 0, scope: !17488, inlinedAt: !17494)
!17494 = distinct !DILocation(line: 106, column: 2, scope: !17427)
!17495 = !DILocalVariable(name: "key", arg: 1, scope: !17496, file: !5823, line: 84, type: !32)
!17496 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5823, file: !5823, line: 84, type: !5834, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !17497)
!17497 = !{!17495}
!17498 = !DILocation(line: 0, scope: !17496, inlinedAt: !17499)
!17499 = distinct !DILocation(line: 215, column: 2, scope: !17488, inlinedAt: !17494)
!17500 = !DILocation(line: 95, column: 2, scope: !17496, inlinedAt: !17499)
!17501 = !{i64 2223843}
!17502 = !DILocation(line: 107, column: 2, scope: !17427)
!17503 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2553, file: !2553, line: 110, type: !17504, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !17506)
!17504 = !DISubroutineType(types: !17505)
!17505 = !{!102, !17360, !356, !17430}
!17506 = !{!17507, !17508, !17509, !17510}
!17507 = !DILocalVariable(name: "h", arg: 1, scope: !17503, file: !2553, line: 110, type: !17360)
!17508 = !DILocalVariable(name: "bytes", arg: 2, scope: !17503, file: !2553, line: 110, type: !356)
!17509 = !DILocalVariable(name: "timeout", arg: 3, scope: !17503, file: !2553, line: 110, type: !17430)
!17510 = !DILocalVariable(name: "ret", scope: !17503, file: !2553, line: 114, type: !102)
!17511 = !DILocation(line: 0, scope: !17503)
!17512 = !DILocation(line: 114, column: 14, scope: !17503)
!17513 = !DILocation(line: 118, column: 2, scope: !17503)
!17514 = distinct !DISubprogram(name: "k_heap_free", scope: !2553, file: !2553, line: 121, type: !17515, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !17517)
!17515 = !DISubroutineType(types: !17516)
!17516 = !{null, !17360, !102}
!17517 = !{!17518, !17519, !17520}
!17518 = !DILocalVariable(name: "h", arg: 1, scope: !17514, file: !2553, line: 121, type: !17360)
!17519 = !DILocalVariable(name: "mem", arg: 2, scope: !17514, file: !2553, line: 121, type: !102)
!17520 = !DILocalVariable(name: "key", scope: !17514, file: !2553, line: 123, type: !17443)
!17521 = !DILocation(line: 0, scope: !17514)
!17522 = !DILocation(line: 0, scope: !17453, inlinedAt: !17523)
!17523 = distinct !DILocation(line: 123, column: 25, scope: !17514)
!17524 = !DILocation(line: 55, column: 2, scope: !17462, inlinedAt: !17525)
!17525 = distinct !DILocation(line: 145, column: 10, scope: !17453, inlinedAt: !17523)
!17526 = !DILocation(line: 0, scope: !17462, inlinedAt: !17525)
!17527 = !DILocation(line: 125, column: 20, scope: !17514)
!17528 = !DILocation(line: 125, column: 2, scope: !17514)
!17529 = !DILocation(line: 128, column: 60, scope: !17530)
!17530 = distinct !DILexicalBlock(scope: !17514, file: !2553, line: 128, column: 6)
!17531 = !DILocation(line: 128, column: 43, scope: !17530)
!17532 = !DILocation(line: 128, column: 68, scope: !17530)
!17533 = !DILocation(line: 128, column: 6, scope: !17514)
!17534 = !DILocation(line: 123, column: 41, scope: !17514)
!17535 = !DILocation(line: 129, column: 3, scope: !17536)
!17536 = distinct !DILexicalBlock(scope: !17530, file: !2553, line: 128, column: 74)
!17537 = !DILocation(line: 130, column: 2, scope: !17536)
!17538 = !DILocation(line: 0, scope: !17488, inlinedAt: !17539)
!17539 = distinct !DILocation(line: 131, column: 3, scope: !17540)
!17540 = distinct !DILexicalBlock(scope: !17530, file: !2553, line: 130, column: 9)
!17541 = !DILocation(line: 0, scope: !17496, inlinedAt: !17542)
!17542 = distinct !DILocation(line: 215, column: 2, scope: !17488, inlinedAt: !17539)
!17543 = !DILocation(line: 95, column: 2, scope: !17496, inlinedAt: !17542)
!17544 = !DILocation(line: 133, column: 1, scope: !17514)
