; ModuleID = 'build/adafruit_feather_stm32f405/subsys/testsuite/integration/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.k_spinlock = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.ztest_suite_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236372 to i8*), void (i8*)* inttoptr (i32 134235039 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236372 to i8*), void (i8*)* inttoptr (i32 134235019 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236372 to i8*), void (i8*)* inttoptr (i32 134235009 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236372 to i8*), void (i8*)* inttoptr (i32 134235109 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236372 to i8*), void (i8*)* inttoptr (i32 134235099 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236372 to i8*), void (i8*)* inttoptr (i32 134235089 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236372 to i8*), void (i8*)* inttoptr (i32 134235079 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236372 to i8*), void (i8*)* inttoptr (i32 134235069 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236372 to i8*), void (i8*)* inttoptr (i32 134235059 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236372 to i8*), void (i8*)* inttoptr (i32 134235049 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236372 to i8*), void (i8*)* inttoptr (i32 134235029 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [45 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_framework_tests to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__framework_tests__test_assert to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [16 x i8] c"framework_tests\00", align 1
@z_ztest_suite_node_stats_framework_tests = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_framework_tests = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_framework_tests }, section "._ztest_suite_node.static.z_ztest_test_node_framework_tests", align 4, !dbg !109
@.str.1 = private unnamed_addr constant [12 x i8] c"test_assert\00", align 1
@z_ztest_unit_test_stats_framework_tests_test_assert = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__framework_tests__test_assert = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), void (i8*)* @_framework_tests_test_assert_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_framework_tests_test_assert }, section "._ztest_unit_test.static.z_ztest_unit_test__framework_tests__test_assert", align 4, !dbg !155
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !266
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !295
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !447
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !301
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !456
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !492
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.88, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !502
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !507
@.str.87 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.88 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !527
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !582
@.str.89 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.92 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.91 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.90 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !693
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !569
@.str.4.104 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.105 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.93 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.120 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.121 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.122 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 64, !dbg !573
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !584
@.str.10.95 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.96 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.97 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.98 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.99 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.100 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.94 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.106 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.108 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.107 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.109 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !691
@.str.21.110 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !688
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.112 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.113 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.114 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.111 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.115 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.116 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.117 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.118 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.119 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.95, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.99, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.100, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.114, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !694
@.str.127 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.128 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.129 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !729
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !923
@.str.4.125 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !884
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !867
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.125, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !840
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !856
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !886
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !900
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !902
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !904
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !906
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !908
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !910
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !912
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !914
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !916
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !918
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !928
@.str.130 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !957
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1051
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1040
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1092
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !950
@.str.139 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1158
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1444
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1410
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1396
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1335
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !948
@.str.1.147 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1446
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1414
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1412
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1352
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !946
@.str.2.148 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1459
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1418
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1416
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1358
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !944
@.str.3.149 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1461
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1422
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1420
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1364
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !942
@.str.4.150 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1463
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1426
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1424
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1370
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !940
@.str.5.151 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1465
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1430
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1428
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1376
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !938
@.str.6.152 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1467
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1434
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1432
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1382
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !936
@.str.7.153 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1469
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1438
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1436
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1388
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !934
@.str.8.154 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1471
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1442
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1440
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1394
@.str.9.140 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.32.146 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.33.142 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.34.145 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.35.141 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.36.143 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.37.144 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.158 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.158, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1473
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !952
@.str.1.161 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1629
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1684
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1627
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1686
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.161, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1618
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1620
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1673
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1676
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1678
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1681
@.str.2.163 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.164 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.165 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.166 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.167 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.170 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.172 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.173 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1024
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1697
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1808
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1810
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1806
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1801
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1775
@.str.177 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.178 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.179 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.180 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.181 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.182 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1812
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1333
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.147, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1350
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.148, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1356
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1362
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.150, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1368
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.151, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1374
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.152, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1380
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.153, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1386
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.154, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1392
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1902
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1942
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1945
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1952
@.str.216 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.220 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.221 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.222 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.226 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.227 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.228 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.229 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.230 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.225 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.224 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.226, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.227, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.228, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.229, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.230, i32 0, i32 0)], align 4
@.str.232 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.232, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1959
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2183
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2172
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2178
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2190
@.str.5.238 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2195
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.242 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.249, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.250, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.251, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.252, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.254, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.255, i32 0, i32 0)], align 4, !dbg !2223
@.str.249 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.250 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.251 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.252 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.253 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.254 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.248 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.255 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2338
@.str.8.247 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.260 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.261 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.262 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.263 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.267 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.268 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.272 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.273 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.282 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.283 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.284 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2351
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2462
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2465
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2467
@.str.285 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.301 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.292 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.306 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.314 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.294 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.309 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.291 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.318 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.319 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.325 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.326 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.327 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.330 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.286 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.287 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.288 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.289 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.290 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.293 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.305 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.310 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.311 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2180
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2188
@.str.23.320 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@.str.336 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.337 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.338 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.339 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2469
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2499
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2504
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2046
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2502
@.str.4.340 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.341 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.342 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.346 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.347 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.367 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3087 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3091, !srcloc !3092
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3093, !srcloc !3094
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3095, !srcloc !3096
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3097, !srcloc !3098
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3099, !srcloc !3100
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3101, !srcloc !3102
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3103, !srcloc !3104
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3105, !srcloc !3106
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3107, !srcloc !3108
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3109, !srcloc !3110
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3111, !srcloc !3112
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3113, !srcloc !3114
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3121, !srcloc !3122
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3123, !srcloc !3124
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3145, !srcloc !3148
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3195, !srcloc !3196
  ret void, !dbg !3197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal void @_framework_tests_test_assert_wrapper(i8* nocapture noundef %0) #2 !dbg !3200 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3202, metadata !DIExpression()), !dbg !3203
  ret void, !dbg !3204
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3205 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3220, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %0, metadata !3216, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %1, metadata !3217, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %2, metadata !3218, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %3, metadata !3219, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %0, metadata !3221, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %0, metadata !3222, metadata !DIExpression()), !dbg !3283
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3284
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3284
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3225, metadata !DIExpression()), !dbg !3285
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3286
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3286
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3227, metadata !DIExpression()), !dbg !3287
  call void @llvm.dbg.value(metadata i32 0, metadata !3228, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 0, metadata !3229, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 0, metadata !3230, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 -1, metadata !3231, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8 0, metadata !3234, metadata !DIExpression()), !dbg !3283
  %12 = and i32 %2, 4, !dbg !3288
  %13 = icmp eq i32 %12, 0, !dbg !3289
  call void @llvm.dbg.value(metadata i1 %13, metadata !3235, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3283
  %14 = lshr i32 %2, 3, !dbg !3290
  %15 = and i32 %14, 7, !dbg !3290
  %16 = add nuw nsw i32 %15, 1, !dbg !3291
  call void @llvm.dbg.value(metadata i32 %16, metadata !3236, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8 0, metadata !3237, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %0, metadata !3238, metadata !DIExpression()), !dbg !3283
  %17 = ptrtoint i8* %0 to i32, !dbg !3292
  %18 = and i32 %17, 3, !dbg !3294
  %19 = icmp eq i32 %18, 0, !dbg !3294
  br i1 %19, label %20, label %320, !dbg !3295

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3296
  call void @llvm.dbg.value(metadata i8* %21, metadata !3222, metadata !DIExpression()), !dbg !3283
  %22 = icmp eq i8* %0, null, !dbg !3297
  %23 = and i32 %1, 7, !dbg !3299
  %24 = sub nuw nsw i32 8, %23, !dbg !3299
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3299
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3299
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3299
  call void @llvm.dbg.value(metadata i32 %27, metadata !3217, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %26, metadata !3222, metadata !DIExpression()), !dbg !3283
  br i1 %22, label %33, label %28, !dbg !3300

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3302
  %30 = sub i32 4, %17, !dbg !3302
  %31 = add i32 %30, %29, !dbg !3303
  %32 = icmp ugt i32 %31, %27, !dbg !3304
  br i1 %32, label %320, label %33, !dbg !3305

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3306
  call void @llvm.dbg.value(metadata i8* %34, metadata !3219, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %3, metadata !3233, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 4, metadata !3224, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 4, metadata !3223, metadata !DIExpression()), !dbg !3283
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3307

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3220, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %42, metadata !3219, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %43, metadata !3222, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %44, metadata !3223, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %45, metadata !3224, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %72, metadata !3231, metadata !DIExpression()), !dbg !3283
  br i1 %46, label %73, label %47, !dbg !3308

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3309
  %49 = zext i1 %48 to i32, !dbg !3313
  %50 = add nsw i32 %72, %49, !dbg !3313
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3313
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3313
  call void @llvm.dbg.value(metadata i32 %52, metadata !3223, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %51, metadata !3224, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8 poison, metadata !3234, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %50, metadata !3231, metadata !DIExpression()), !dbg !3283
  br label %53, !dbg !3314

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3220, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %40, metadata !3219, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %58, metadata !3222, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %57, metadata !3223, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %56, metadata !3224, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8 poison, metadata !3234, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %54, metadata !3231, metadata !DIExpression()), !dbg !3283
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3315
  call void @llvm.dbg.value(metadata i8* %60, metadata !3219, metadata !DIExpression()), !dbg !3283
  %61 = load i8, i8* %60, align 1, !dbg !3317
  %62 = icmp eq i8 %61, 0, !dbg !3318
  br i1 %62, label %226, label %63, !dbg !3319, !llvm.loop !3320

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3308

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3323

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3234, metadata !DIExpression()), !dbg !3283
  %75 = add nsw i32 %72, -1, !dbg !3324
  call void @llvm.dbg.value(metadata i32 %75, metadata !3231, metadata !DIExpression()), !dbg !3283
  br label %53, !dbg !3325

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3326

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3224, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 4, metadata !3223, metadata !DIExpression()), !dbg !3283
  br label %53, !dbg !3327

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3224, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 4, metadata !3223, metadata !DIExpression()), !dbg !3283
  br label %53, !dbg !3328

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3329
  %81 = icmp eq i8 %80, 108, !dbg !3331
  br i1 %81, label %82, label %109, !dbg !3332

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3333
  %84 = load i8, i8* %83, align 1, !dbg !3333
  %85 = icmp eq i8 %84, 108, !dbg !3336
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3337
  %89 = add i32 %88, 7, !dbg !3337
  %90 = and i32 %89, -8, !dbg !3337
  %91 = inttoptr i32 %90 to i8*, !dbg !3337
  %92 = inttoptr i32 %90 to double*, !dbg !3337
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3337
  %94 = load double, double* %92, align 8, !dbg !3337
  call void @llvm.dbg.value(metadata i8* %93, metadata !3220, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 8, metadata !3223, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 8, metadata !3224, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata double %94, metadata !3251, metadata !DIExpression()), !dbg !3339
  %95 = ptrtoint i8* %43 to i32, !dbg !3340
  %96 = add i32 %95, 7, !dbg !3340
  %97 = and i32 %96, -8, !dbg !3340
  %98 = inttoptr i32 %97 to i8*, !dbg !3341
  call void @llvm.dbg.value(metadata i8* %98, metadata !3222, metadata !DIExpression()), !dbg !3283
  br i1 %22, label %104, label %99, !dbg !3342

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3343
  %101 = icmp ugt i32 %100, %196, !dbg !3347
  br i1 %101, label %320, label %102, !dbg !3348

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3349
  store double %94, double* %103, align 8, !dbg !3349
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3352
  call void @llvm.dbg.value(metadata i8* %105, metadata !3222, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8 poison, metadata !3234, metadata !DIExpression()), !dbg !3283
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3234, metadata !DIExpression()), !dbg !3283
  br label %53, !dbg !3353

107:                                              ; preds = %73, %73
  br label %109, !dbg !3354

108:                                              ; preds = %73
  br label %109, !dbg !3354

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3283
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3283
  call void @llvm.dbg.value(metadata i32 %113, metadata !3223, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %112, metadata !3224, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8 poison, metadata !3237, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8 poison, metadata !3234, metadata !DIExpression()), !dbg !3283
  %114 = ptrtoint i8* %43 to i32, !dbg !3354
  %115 = add i32 %114, -1, !dbg !3354
  %116 = add i32 %115, %112, !dbg !3354
  %117 = sub i32 0, %112, !dbg !3354
  %118 = and i32 %116, %117, !dbg !3354
  %119 = inttoptr i32 %118 to i8*, !dbg !3355
  call void @llvm.dbg.value(metadata i8* %119, metadata !3222, metadata !DIExpression()), !dbg !3283
  br i1 %22, label %124, label %120, !dbg !3356

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3358
  %122 = add i32 %121, %118, !dbg !3359
  %123 = icmp ugt i32 %122, %196, !dbg !3360
  br i1 %123, label %320, label %124, !dbg !3361

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3362

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3355
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3363
  call void @llvm.dbg.value(metadata i8* %127, metadata !3220, metadata !DIExpression()), !dbg !3283
  %128 = bitcast i8* %41 to i8**, !dbg !3363
  %129 = load i8*, i8** %128, align 4, !dbg !3363
  call void @llvm.dbg.value(metadata i8* %129, metadata !3233, metadata !DIExpression()), !dbg !3283
  br label %130, !dbg !3364

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3283
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3365
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3283
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3366
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3283
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3283
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3283
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3283
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3283
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3283
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3367
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3220, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %142, metadata !3217, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %141, metadata !3219, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %140, metadata !3222, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %139, metadata !3223, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %138, metadata !3224, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %137, metadata !3228, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %136, metadata !3236, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %135, metadata !3229, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8 poison, metadata !3234, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %133, metadata !3233, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %132, metadata !3231, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %131, metadata !3230, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.label(metadata !3282), !dbg !3369
  br i1 %22, label %146, label %144, !dbg !3370

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3371
  store i8* %133, i8** %145, align 4, !dbg !3374
  br label %146, !dbg !3375

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3376
  call void @llvm.dbg.value(metadata i32 %147, metadata !3236, metadata !DIExpression()), !dbg !3283
  %148 = icmp sgt i32 %136, 0, !dbg !3377
  br i1 %148, label %152, label %149, !dbg !3378

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3379
  %151 = zext i1 %150 to i32, !dbg !3379
  br label %152, !dbg !3378

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3378
  %154 = icmp eq i32 %153, 0, !dbg !3378
  call void @llvm.dbg.value(metadata i1 %154, metadata !3260, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3380
  call void @llvm.dbg.value(metadata i1 %36, metadata !3263, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3380
  %155 = or i1 %36, %154, !dbg !3381
  br i1 %155, label %156, label %192, !dbg !3381

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3382
  %158 = sub i32 %157, %17, !dbg !3382
  %159 = lshr i32 %158, 2, !dbg !3383
  call void @llvm.dbg.value(metadata i32 %159, metadata !3264, metadata !DIExpression()), !dbg !3384
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3385
  br i1 %161, label %162, label %163, !dbg !3385

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3387
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3387
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3387
  unreachable, !dbg !3387

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3392
  br i1 %164, label %165, label %166, !dbg !3394

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3395
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #25, !dbg !3395
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3395
  unreachable, !dbg !3395

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3400

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3401
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3404
  store i8 %168, i8* %169, align 1, !dbg !3405
  %170 = trunc i32 %132 to i8, !dbg !3406
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3407
  store i8 %170, i8* %171, align 1, !dbg !3408
  br i1 %154, label %175, label %172, !dbg !3409

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3410
  store i8 %173, i8* %169, align 1, !dbg !3410
  %174 = add i32 %131, 1, !dbg !3413
  call void @llvm.dbg.value(metadata i32 %174, metadata !3230, metadata !DIExpression()), !dbg !3283
  br label %187, !dbg !3414

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3415
  call void @llvm.dbg.value(metadata i32 %176, metadata !3229, metadata !DIExpression()), !dbg !3283
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3417

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3418
  call void @llvm.dbg.value(metadata i32 %179, metadata !3217, metadata !DIExpression()), !dbg !3283
  br label %187, !dbg !3421

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3422

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3423
  call void @llvm.dbg.value(metadata i32 %182, metadata !3217, metadata !DIExpression()), !dbg !3283
  br label %187, !dbg !3426

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3427
  %185 = add i32 %142, 2, !dbg !3429
  %186 = add i32 %185, %184, !dbg !3430
  call void @llvm.dbg.value(metadata i32 %186, metadata !3217, metadata !DIExpression()), !dbg !3283
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3283
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3283
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3283
  call void @llvm.dbg.value(metadata i32 %190, metadata !3217, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %189, metadata !3229, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %188, metadata !3230, metadata !DIExpression()), !dbg !3283
  %191 = add nuw nsw i32 %137, 1, !dbg !3431
  call void @llvm.dbg.value(metadata i32 %191, metadata !3228, metadata !DIExpression()), !dbg !3283
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3283
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3366
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3283
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3367
  call void @llvm.dbg.value(metadata i32 %196, metadata !3217, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %195, metadata !3228, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %194, metadata !3229, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %193, metadata !3230, metadata !DIExpression()), !dbg !3283
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3432
  call void @llvm.dbg.value(metadata i8* %197, metadata !3222, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %143, metadata !3220, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %141, metadata !3219, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %139, metadata !3223, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %138, metadata !3224, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8 poison, metadata !3237, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8 poison, metadata !3234, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %132, metadata !3231, metadata !DIExpression()), !dbg !3283
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3315
  call void @llvm.dbg.value(metadata i8* %198, metadata !3219, metadata !DIExpression()), !dbg !3283
  %199 = load i8, i8* %198, align 1, !dbg !3317
  %200 = icmp eq i8 %199, 0, !dbg !3318
  br i1 %200, label %226, label %63, !dbg !3319

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3433

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3434
  call void @llvm.dbg.value(metadata i8* %203, metadata !3220, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 undef, metadata !3267, metadata !DIExpression()), !dbg !3435
  br i1 %22, label %219, label %204, !dbg !3436

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3434
  %206 = load i32, i32* %205, align 4, !dbg !3434
  call void @llvm.dbg.value(metadata i32 %206, metadata !3267, metadata !DIExpression()), !dbg !3435
  %207 = inttoptr i32 %118 to i32*, !dbg !3437
  store i32 %206, i32* %207, align 4, !dbg !3440
  br label %219, !dbg !3441

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3442
  %210 = add i32 %209, 7, !dbg !3442
  %211 = and i32 %210, -8, !dbg !3442
  %212 = inttoptr i32 %211 to i8*, !dbg !3442
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3442
  call void @llvm.dbg.value(metadata i8* %213, metadata !3220, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i64 undef, metadata !3273, metadata !DIExpression()), !dbg !3443
  br i1 %22, label %219, label %214, !dbg !3444

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3442
  %216 = load i64, i64* %215, align 8, !dbg !3442
  call void @llvm.dbg.value(metadata i64 %216, metadata !3273, metadata !DIExpression()), !dbg !3443
  %217 = inttoptr i32 %118 to i64*, !dbg !3445
  store i64 %216, i64* %217, align 8, !dbg !3450
  br label %219, !dbg !3451

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3452
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3452
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3452
  unreachable, !dbg !3452

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3457
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3457
  call void @llvm.dbg.value(metadata i8* %221, metadata !3220, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %40, metadata !3219, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %222, metadata !3222, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %113, metadata !3223, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %112, metadata !3224, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8 poison, metadata !3237, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8 poison, metadata !3234, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %72, metadata !3231, metadata !DIExpression()), !dbg !3283
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3315
  call void @llvm.dbg.value(metadata i8* %223, metadata !3219, metadata !DIExpression()), !dbg !3283
  %224 = load i8, i8* %223, align 1, !dbg !3317
  %225 = icmp eq i8 %224, 0, !dbg !3318
  br i1 %225, label %226, label %38, !dbg !3319

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3458
  %228 = ptrtoint i8* %227 to i32, !dbg !3459
  %229 = sub i32 %228, %17, !dbg !3459
  %230 = lshr i32 %229, 2, !dbg !3461
  %231 = icmp ugt i32 %229, 1023, !dbg !3462
  br i1 %231, label %232, label %233, !dbg !3463

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3464
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3464
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3464
  unreachable, !dbg !3464

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3469

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3470
  %236 = add i32 %235, %229, !dbg !3473
  br label %320, !dbg !3474

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3475
  store i8 %238, i8* %0, align 1, !dbg !3476
  %239 = trunc i32 %194 to i8, !dbg !3477
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3479
  store i8 %240, i8* %242, align 1, !dbg !3481
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3482
  store i8 %241, i8* %243, align 1, !dbg !3483
  %244 = trunc i32 %193 to i8, !dbg !3484
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3485
  store i8 %244, i8* %245, align 1, !dbg !3486
  %246 = icmp eq i32 %193, 0, !dbg !3487
  %247 = xor i1 %246, true, !dbg !3488
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3488
  call void @llvm.dbg.value(metadata i8* %227, metadata !3222, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 0, metadata !3232, metadata !DIExpression()), !dbg !3283
  br i1 %249, label %250, label %269, !dbg !3488

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3489

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3222, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %254, metadata !3232, metadata !DIExpression()), !dbg !3283
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3490
  %256 = load i8, i8* %255, align 1, !dbg !3490
  %257 = icmp sgt i8 %256, -1, !dbg !3492
  br i1 %257, label %265, label %258, !dbg !3493

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3276, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3494
  %259 = ptrtoint i8* %253 to i32, !dbg !3495
  %260 = add i32 %251, %259, !dbg !3497
  %261 = icmp ugt i32 %260, %196, !dbg !3498
  br i1 %261, label %320, label %262, !dbg !3499

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3500
  call void @llvm.dbg.value(metadata i8 %263, metadata !3276, metadata !DIExpression()), !dbg !3494
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3501
  call void @llvm.dbg.value(metadata i8* %264, metadata !3222, metadata !DIExpression()), !dbg !3283
  store i8 %263, i8* %253, align 1, !dbg !3502
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3432
  call void @llvm.dbg.value(metadata i8* %266, metadata !3222, metadata !DIExpression()), !dbg !3283
  %267 = add nuw i32 %254, 1, !dbg !3503
  call void @llvm.dbg.value(metadata i32 %267, metadata !3232, metadata !DIExpression()), !dbg !3283
  %268 = icmp eq i32 %267, %195, !dbg !3504
  br i1 %268, label %269, label %252, !dbg !3489, !llvm.loop !3505

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3432
  call void @llvm.dbg.value(metadata i8* %270, metadata !3222, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 0, metadata !3232, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %133, metadata !3233, metadata !DIExpression()), !dbg !3283
  %271 = icmp eq i32 %195, 0, !dbg !3507
  br i1 %271, label %316, label %272, !dbg !3510

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3510

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3222, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %276, metadata !3233, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %277, metadata !3232, metadata !DIExpression()), !dbg !3283
  br i1 %246, label %282, label %278, !dbg !3511

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3514
  %280 = load i8, i8* %279, align 1, !dbg !3514
  %281 = icmp sgt i8 %280, -1, !dbg !3515
  br i1 %281, label %282, label %311, !dbg !3516

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3517

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3223, metadata !DIExpression()), !dbg !3283
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3518
  %285 = load i8, i8* %284, align 1, !dbg !3518
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3521
  call void @llvm.dbg.value(metadata i8* %286, metadata !3222, metadata !DIExpression()), !dbg !3283
  store i8 %285, i8* %275, align 1, !dbg !3522
  br label %297, !dbg !3523

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3524
  %289 = load i8, i8* %288, align 1, !dbg !3524
  %290 = zext i8 %289 to i32, !dbg !3524
  %291 = shl nuw nsw i32 %290, 2, !dbg !3526
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3527
  %293 = bitcast i8* %292 to i8**, !dbg !3528
  %294 = load i8*, i8** %293, align 4, !dbg !3528
  call void @llvm.dbg.value(metadata i8* %294, metadata !3233, metadata !DIExpression()), !dbg !3283
  store i8* null, i8** %293, align 4, !dbg !3529
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3530
  %296 = add i32 %295, 1, !dbg !3531
  call void @llvm.dbg.value(metadata i32 %296, metadata !3223, metadata !DIExpression()), !dbg !3283
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3283
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3532
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3283
  call void @llvm.dbg.value(metadata i8* %300, metadata !3222, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %299, metadata !3223, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %298, metadata !3233, metadata !DIExpression()), !dbg !3283
  %301 = ptrtoint i8* %300 to i32, !dbg !3533
  %302 = add i32 %273, %299, !dbg !3535
  %303 = add i32 %302, %301, !dbg !3536
  %304 = icmp ugt i32 %303, %196, !dbg !3537
  br i1 %304, label %320, label %305, !dbg !3538

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3539
  %307 = load i8, i8* %306, align 1, !dbg !3539
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3540
  call void @llvm.dbg.value(metadata i8* %308, metadata !3222, metadata !DIExpression()), !dbg !3283
  store i8 %307, i8* %300, align 1, !dbg !3541
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3542
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3543
  call void @llvm.dbg.value(metadata i8* %310, metadata !3222, metadata !DIExpression()), !dbg !3283
  br label %311, !dbg !3544

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3545
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3283
  call void @llvm.dbg.value(metadata i8* %313, metadata !3222, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i8* %312, metadata !3233, metadata !DIExpression()), !dbg !3283
  %314 = add nuw i32 %277, 1, !dbg !3546
  call void @llvm.dbg.value(metadata i32 %314, metadata !3232, metadata !DIExpression()), !dbg !3283
  %315 = icmp eq i32 %314, %195, !dbg !3507
  br i1 %315, label %316, label %274, !dbg !3510, !llvm.loop !3547

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3432
  %318 = ptrtoint i8* %317 to i32, !dbg !3549
  %319 = sub i32 %318, %17, !dbg !3549
  br label %320, !dbg !3550

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3551
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3551
  ret i32 %321, !dbg !3551
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3552 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3556, metadata !DIExpression()), !dbg !3557
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3558
  ret i1 %2, !dbg !3559
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3560 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3563, metadata !DIExpression()), !dbg !3564
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3565
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3566
  %4 = and i1 %2, %3, !dbg !3566
  ret i1 %4, !dbg !3567
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3568 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3572, metadata !DIExpression()), !dbg !3578
  call void @llvm.dbg.value(metadata i32 %1, metadata !3573, metadata !DIExpression()), !dbg !3578
  call void @llvm.dbg.value(metadata i32 %2, metadata !3574, metadata !DIExpression()), !dbg !3578
  call void @llvm.dbg.value(metadata i8* %3, metadata !3575, metadata !DIExpression()), !dbg !3578
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3579
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3579
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3576, metadata !DIExpression()), !dbg !3580
  call void @llvm.va_start(i8* nonnull %6), !dbg !3581
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3582
  %8 = load i32, i32* %7, align 4, !dbg !3582
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3582
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3582
  call void @llvm.dbg.value(metadata i32 %10, metadata !3577, metadata !DIExpression()), !dbg !3578
  call void @llvm.va_end(i8* nonnull %6), !dbg !3583
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3584
  ret i32 %10, !dbg !3585
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3586 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3598, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3599, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i8* %2, metadata !3600, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i8* %3, metadata !3601, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i8* %3, metadata !3602, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i8* %3, metadata !3603, metadata !DIExpression()), !dbg !3617
  %5 = icmp eq i8* %3, null, !dbg !3618
  br i1 %5, label %45, label %6, !dbg !3620

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3612, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3617
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3621
  %8 = load i8, i8* %7, align 1, !dbg !3621
  %9 = zext i8 %8 to i32, !dbg !3622
  call void @llvm.dbg.value(metadata i32 %9, metadata !3613, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i8 undef, metadata !3614, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3617
  call void @llvm.dbg.value(metadata i8 undef, metadata !3615, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3617
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3609, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3617
  call void @llvm.dbg.value(metadata i32 0, metadata !3611, metadata !DIExpression()), !dbg !3617
  %10 = icmp eq i8 %8, 0, !dbg !3623
  br i1 %10, label %39, label %11, !dbg !3626

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3627
  call void @llvm.dbg.value(metadata i8 %12, metadata !3612, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3617
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3609, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3617
  %13 = zext i8 %12 to i32, !dbg !3628
  call void @llvm.dbg.value(metadata i32 %13, metadata !3612, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3617
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3609, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3617
  %14 = shl nuw nsw i32 %13, 2, !dbg !3629
  call void @llvm.dbg.value(metadata i32 %14, metadata !3612, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3609, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3617
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3630
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3609, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3617
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3631
  %17 = load i8, i8* %16, align 1, !dbg !3631
  call void @llvm.dbg.value(metadata i8 %17, metadata !3614, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3617
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3609, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3617
  %18 = zext i8 %17 to i32, !dbg !3632
  call void @llvm.dbg.value(metadata i32 %18, metadata !3614, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3609, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3617
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3633
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3609, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3617
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3634
  %21 = load i8, i8* %20, align 1, !dbg !3634
  call void @llvm.dbg.value(metadata i8 %21, metadata !3615, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3617
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3609, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3617
  %22 = zext i8 %21 to i32, !dbg !3635
  call void @llvm.dbg.value(metadata i32 %22, metadata !3615, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3609, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3617
  %23 = shl nuw nsw i32 %22, 1, !dbg !3636
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3609, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3617
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3637
  call void @llvm.dbg.value(metadata i8* %24, metadata !3609, metadata !DIExpression()), !dbg !3617
  br label %25, !dbg !3626

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3609, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 %27, metadata !3611, metadata !DIExpression()), !dbg !3617
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3638
  call void @llvm.dbg.value(metadata i8* %28, metadata !3609, metadata !DIExpression()), !dbg !3617
  %29 = load i8, i8* %26, align 1, !dbg !3640
  %30 = zext i8 %29 to i32, !dbg !3640
  call void @llvm.dbg.value(metadata i32 %30, metadata !3616, metadata !DIExpression()), !dbg !3617
  %31 = shl nuw nsw i32 %30, 2, !dbg !3641
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3642
  %33 = bitcast i8* %32 to i8**, !dbg !3643
  call void @llvm.dbg.value(metadata i8** %33, metadata !3610, metadata !DIExpression()), !dbg !3617
  store i8* %28, i8** %33, align 4, !dbg !3644
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3645
  %35 = add i32 %34, 1, !dbg !3646
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3647
  call void @llvm.dbg.value(metadata i8* %36, metadata !3609, metadata !DIExpression()), !dbg !3617
  %37 = add nuw nsw i32 %27, 1, !dbg !3648
  call void @llvm.dbg.value(metadata i32 %37, metadata !3611, metadata !DIExpression()), !dbg !3617
  %38 = icmp eq i32 %37, %9, !dbg !3623
  br i1 %38, label %39, label %25, !dbg !3626, !llvm.loop !3649

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3651
  call void @llvm.dbg.value(metadata i8* %40, metadata !3602, metadata !DIExpression()), !dbg !3617
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3652
  %42 = bitcast i8* %41 to i8**, !dbg !3652
  %43 = load i8*, i8** %42, align 1, !dbg !3652
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3653
  br label %45, !dbg !3654

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3617
  ret i32 %46, !dbg !3655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3656 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3660, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3661, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i8* %2, metadata !3662, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i8* %3, metadata !3663, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i8* %4, metadata !3664, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i8* %4, metadata !3665, metadata !DIExpression()), !dbg !3670
  %6 = ptrtoint i8* %4 to i32, !dbg !3671
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3671
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3671
  ret i32 %8, !dbg !3672
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3673 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3677, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.value(metadata i32 %1, metadata !3678, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.value(metadata i8 0, metadata !3680, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.value(metadata i32 0, metadata !3681, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.value(metadata i8 poison, metadata !3680, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.value(metadata i8* %0, metadata !3677, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3682
  %3 = load i8, i8* %0, align 1, !dbg !3683
  call void @llvm.dbg.value(metadata i8 %3, metadata !3679, metadata !DIExpression()), !dbg !3682
  %4 = icmp eq i8 %3, 0, !dbg !3684
  br i1 %4, label %29, label %5, !dbg !3685

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3686
  call void @llvm.dbg.value(metadata i32 %8, metadata !3681, metadata !DIExpression()), !dbg !3682
  br i1 %9, label %11, label %22, !dbg !3687

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3689
  br i1 %12, label %13, label %17, !dbg !3693

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3694
  br i1 %14, label %29, label %15, !dbg !3697

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3698
  br i1 %16, label %29, label %22, !dbg !3700

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3701
  %19 = xor i1 %18, true, !dbg !3703
  %20 = zext i1 %18 to i32, !dbg !3703
  %21 = add nsw i32 %8, %20, !dbg !3703
  br label %22, !dbg !3703

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3682
  call void @llvm.dbg.value(metadata i32 %24, metadata !3681, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.value(metadata i8 poison, metadata !3680, metadata !DIExpression()), !dbg !3682
  %25 = icmp eq i8 %6, 37, !dbg !3704
  %26 = xor i1 %25, %23, !dbg !3706
  call void @llvm.dbg.value(metadata i8* %10, metadata !3677, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.value(metadata i8* %10, metadata !3677, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3682
  %27 = load i8, i8* %10, align 1, !dbg !3683
  call void @llvm.dbg.value(metadata i8 %27, metadata !3679, metadata !DIExpression()), !dbg !3682
  %28 = icmp eq i8 %27, 0, !dbg !3684
  br i1 %28, label %29, label %5, !dbg !3685, !llvm.loop !3707

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3682
  ret i1 %30, !dbg !3709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #2 !dbg !3710 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3714, metadata !DIExpression()), !dbg !3715
  %2 = add i8 %0, -64, !dbg !3716
  %3 = icmp ult i8 %2, 59, !dbg !3716
  ret i1 %3, !dbg !3717
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3718 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3726, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %1, metadata !3727, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3728, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i8* %3, metadata !3729, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %4, metadata !3730, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i16* %5, metadata !3731, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %6, metadata !3732, metadata !DIExpression()), !dbg !3795
  %11 = icmp eq i8* %0, null, !dbg !3796
  br i1 %11, label %12, label %13, !dbg !3799

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3800
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3800
  unreachable, !dbg !3800

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3733, metadata !DIExpression()), !dbg !3795
  %14 = bitcast i8* %0 to i32*, !dbg !3802
  call void @llvm.dbg.value(metadata i32* %14, metadata !3734, metadata !DIExpression()), !dbg !3795
  %15 = and i32 %4, 8, !dbg !3803
  %16 = icmp eq i32 %15, 0, !dbg !3804
  call void @llvm.dbg.value(metadata i1 %16, metadata !3738, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3795
  call void @llvm.dbg.value(metadata i8* %0, metadata !3741, metadata !DIExpression()), !dbg !3795
  %17 = icmp eq i32 %1, 0, !dbg !3805
  br i1 %17, label %18, label %20, !dbg !3806

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3807
  br label %20, !dbg !3806

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3806
  call void @llvm.dbg.value(metadata i32 %21, metadata !3727, metadata !DIExpression()), !dbg !3795
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3808
  %23 = load i8, i8* %22, align 1, !dbg !3808
  %24 = zext i8 %23 to i32, !dbg !3809
  call void @llvm.dbg.value(metadata i32 %24, metadata !3736, metadata !DIExpression()), !dbg !3795
  %25 = icmp ne i8 %23, 0, !dbg !3810
  %26 = and i32 %4, 1, !dbg !3811
  %27 = icmp ne i32 %26, 0, !dbg !3811
  %28 = and i1 %27, %25, !dbg !3811
  call void @llvm.dbg.value(metadata i1 %28, metadata !3740, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3795
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3812
  %30 = load i8, i8* %29, align 1, !dbg !3812
  %31 = zext i8 %30 to i32, !dbg !3813
  call void @llvm.dbg.value(metadata i32 %31, metadata !3737, metadata !DIExpression()), !dbg !3795
  %32 = icmp ne i8 %30, 0, !dbg !3814
  %33 = and i32 %4, 2, !dbg !3815
  %34 = icmp ne i32 %33, 0, !dbg !3815
  %35 = and i1 %34, %32, !dbg !3815
  call void @llvm.dbg.value(metadata i1 %35, metadata !3739, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3795
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3816
  br i1 %36, label %41, label %37, !dbg !3816

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3818
  br i1 %38, label %287, label %39, !dbg !3821

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3822
  br label %287, !dbg !3824

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3825
  %43 = zext i8 %42 to i32, !dbg !3826
  %44 = shl nuw nsw i32 %43, 2, !dbg !3827
  call void @llvm.dbg.value(metadata i32 %44, metadata !3735, metadata !DIExpression()), !dbg !3795
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3828
  %46 = bitcast i8* %45 to i8**, !dbg !3829
  %47 = load i8*, i8** %46, align 4, !dbg !3829
  call void @llvm.dbg.value(metadata i8* %47, metadata !3744, metadata !DIExpression()), !dbg !3795
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3830
  call void @llvm.dbg.value(metadata i8* %48, metadata !3745, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 0, metadata !3746, metadata !DIExpression()), !dbg !3795
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3831
  br i1 %49, label %50, label %135, !dbg !3832

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3743, metadata !DIExpression()), !dbg !3795
  br i1 %28, label %51, label %76, !dbg !3833

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3743, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i8* %48, metadata !3745, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 0, metadata !3746, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 0, metadata !3747, metadata !DIExpression()), !dbg !3834
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3835

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3743, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i8* %55, metadata !3745, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %56, metadata !3746, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %57, metadata !3747, metadata !DIExpression()), !dbg !3834
  %58 = load i8, i8* %55, align 1, !dbg !3836
  %59 = zext i8 %58 to i32, !dbg !3837
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3837
  %61 = bitcast i32* %60 to i8**, !dbg !3838
  %62 = load i8*, i8** %61, align 4, !dbg !3838
  call void @llvm.dbg.value(metadata i8* %62, metadata !3753, metadata !DIExpression()), !dbg !3839
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3840
  call void @llvm.dbg.value(metadata i32 %63, metadata !3756, metadata !DIExpression()), !dbg !3839
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3841
  br i1 %65, label %66, label %70, !dbg !3841

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3843
  %68 = add nuw i32 %56, 1, !dbg !3845
  call void @llvm.dbg.value(metadata i32 %68, metadata !3746, metadata !DIExpression()), !dbg !3795
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3846
  store i16 %67, i16* %69, align 2, !dbg !3847
  br label %70, !dbg !3848

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3795
  call void @llvm.dbg.value(metadata i32 %71, metadata !3746, metadata !DIExpression()), !dbg !3795
  %72 = add nsw i32 %63, %54, !dbg !3849
  call void @llvm.dbg.value(metadata i32 %72, metadata !3743, metadata !DIExpression()), !dbg !3795
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3850
  call void @llvm.dbg.value(metadata i8* %73, metadata !3745, metadata !DIExpression()), !dbg !3795
  %74 = add nuw nsw i32 %57, 1, !dbg !3851
  call void @llvm.dbg.value(metadata i32 %74, metadata !3747, metadata !DIExpression()), !dbg !3834
  %75 = icmp eq i32 %74, %24, !dbg !3852
  br i1 %75, label %82, label %53, !dbg !3835, !llvm.loop !3853

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3855
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3855
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3855
  br label %82, !dbg !3855

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3858
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3795
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3859
  call void @llvm.dbg.value(metadata i1 undef, metadata !3757, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3860
  call void @llvm.dbg.value(metadata i32 0, metadata !3758, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.value(metadata i32 %85, metadata !3743, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i8* %84, metadata !3745, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %83, metadata !3746, metadata !DIExpression()), !dbg !3795
  %86 = icmp eq i8 %30, 0, !dbg !3862
  br i1 %86, label %287, label %87, !dbg !3863

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3864
  %89 = icmp eq i32 %88, 0, !dbg !3865
  call void @llvm.dbg.value(metadata i1 %89, metadata !3757, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3860
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3863

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3743, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i8* %96, metadata !3745, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %97, metadata !3746, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %98, metadata !3758, metadata !DIExpression()), !dbg !3861
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3866
  call void @llvm.dbg.value(metadata i8* %99, metadata !3745, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i8 undef, metadata !3760, metadata !DIExpression()), !dbg !3867
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3868
  call void @llvm.dbg.value(metadata i8* %100, metadata !3745, metadata !DIExpression()), !dbg !3795
  %101 = load i8, i8* %99, align 1, !dbg !3869
  call void @llvm.dbg.value(metadata i8 %101, metadata !3763, metadata !DIExpression()), !dbg !3867
  %102 = zext i8 %101 to i32, !dbg !3870
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3870
  %104 = bitcast i32* %103 to i8**, !dbg !3871
  %105 = load i8*, i8** %104, align 4, !dbg !3871
  call void @llvm.dbg.value(metadata i8* %105, metadata !3764, metadata !DIExpression()), !dbg !3867
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !3872
  call void @llvm.dbg.value(metadata i1 %106, metadata !3765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3867
  br i1 %16, label %113, label %107, !dbg !3873

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3875
  call void @llvm.dbg.value(metadata i8 %108, metadata !3760, metadata !DIExpression()), !dbg !3867
  %109 = zext i8 %108 to i32, !dbg !3876
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !3877
  br i1 %110, label %111, label %113, !dbg !3878

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !3879
  %112 = add nsw i32 %95, -2, !dbg !3885
  call void @llvm.dbg.value(metadata i32 %112, metadata !3743, metadata !DIExpression()), !dbg !3795
  br label %130, !dbg !3886

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3887

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3888

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3890
  call void @llvm.dbg.value(metadata i32 %116, metadata !3743, metadata !DIExpression()), !dbg !3795
  br label %130, !dbg !3893

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3894

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3791), !dbg !3895
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !3896
  call void @llvm.dbg.value(metadata i32 %119, metadata !3766, metadata !DIExpression()), !dbg !3867
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3897
  br i1 %121, label %122, label %126, !dbg !3897

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3899
  %124 = add nuw i32 %97, 1, !dbg !3901
  call void @llvm.dbg.value(metadata i32 %124, metadata !3746, metadata !DIExpression()), !dbg !3795
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3902
  store i16 %123, i16* %125, align 2, !dbg !3903
  br label %126, !dbg !3904

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3795
  call void @llvm.dbg.value(metadata i32 %127, metadata !3746, metadata !DIExpression()), !dbg !3795
  %128 = add i32 %95, -1, !dbg !3905
  %129 = add i32 %128, %119, !dbg !3906
  call void @llvm.dbg.value(metadata i32 %129, metadata !3743, metadata !DIExpression()), !dbg !3795
  br label %130, !dbg !3907

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3795
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3867
  call void @llvm.dbg.value(metadata i32 %132, metadata !3743, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %131, metadata !3746, metadata !DIExpression()), !dbg !3795
  %133 = add nuw nsw i32 %98, 1, !dbg !3908
  call void @llvm.dbg.value(metadata i8* %100, metadata !3745, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %133, metadata !3758, metadata !DIExpression()), !dbg !3861
  %134 = icmp eq i32 %133, %31, !dbg !3862
  br i1 %134, label %287, label %94, !dbg !3863, !llvm.loop !3909

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3768, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3769, metadata !DIExpression()), !dbg !3912
  br i1 %28, label %136, label %138, !dbg !3913

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3770, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i8 0, metadata !3771, metadata !DIExpression()), !dbg !3795
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3914
  call void @llvm.dbg.value(metadata i8* %137, metadata !3772, metadata !DIExpression()), !dbg !3795
  br label %143, !dbg !3917

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3918
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3918

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3772, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i8 undef, metadata !3771, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i8 0, metadata !3770, metadata !DIExpression()), !dbg !3795
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !3920
  br label %148, !dbg !3923

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3924
  call void @llvm.dbg.value(metadata i8* %151, metadata !3745, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 0, metadata !3774, metadata !DIExpression()), !dbg !3925
  call void @llvm.dbg.value(metadata i8 %149, metadata !3771, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i8 %150, metadata !3770, metadata !DIExpression()), !dbg !3795
  %152 = icmp eq i8 %30, 0, !dbg !3926
  br i1 %152, label %153, label %155, !dbg !3927

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3928
  br label %160, !dbg !3927

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3927

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3928
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3929
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3930
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3795
  call void @llvm.dbg.value(metadata i8 undef, metadata !3767, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3795
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3931
  %166 = load i8, i8* %165, align 1, !dbg !3931
  %167 = zext i8 %162 to i32, !dbg !3932
  %168 = add i8 %166, %162, !dbg !3933
  call void @llvm.dbg.value(metadata i8 %168, metadata !3767, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3795
  %169 = icmp eq i32 %33, 0, !dbg !3934
  %170 = lshr i8 %163, 1, !dbg !3935
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3935
  call void @llvm.dbg.value(metadata i8 %171, metadata !3767, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3795
  %172 = icmp eq i32 %26, 0, !dbg !3936
  %173 = icmp eq i32 %161, 0, !dbg !3928
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3928
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3928
  call void @llvm.dbg.value(metadata i8 %175, metadata !3767, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3795
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3782, metadata !DIExpression()), !dbg !3937
  %176 = load i32, i32* %14, align 1, !dbg !3938
  store i8 %168, i8* %165, align 1, !dbg !3939
  store i8 %175, i8* %22, align 1, !dbg !3939
  store i8 %171, i8* %29, align 1, !dbg !3939
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !3940
  call void @llvm.dbg.value(metadata i32 %177, metadata !3773, metadata !DIExpression()), !dbg !3795
  %178 = icmp slt i32 %177, 0, !dbg !3941
  br i1 %178, label %287, label %240, !dbg !3943

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3745, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %181, metadata !3774, metadata !DIExpression()), !dbg !3925
  call void @llvm.dbg.value(metadata i8 %182, metadata !3771, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i8 %183, metadata !3770, metadata !DIExpression()), !dbg !3795
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !3944
  call void @llvm.dbg.value(metadata i8* %184, metadata !3745, metadata !DIExpression()), !dbg !3795
  %185 = load i8, i8* %180, align 1, !dbg !3945
  call void @llvm.dbg.value(metadata i8 %185, metadata !3776, metadata !DIExpression()), !dbg !3946
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !3947
  call void @llvm.dbg.value(metadata i8* %186, metadata !3745, metadata !DIExpression()), !dbg !3795
  %187 = load i8, i8* %184, align 1, !dbg !3948
  call void @llvm.dbg.value(metadata i8 %187, metadata !3779, metadata !DIExpression()), !dbg !3946
  %188 = zext i8 %187 to i32, !dbg !3949
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !3949
  %190 = bitcast i32* %189 to i8**, !dbg !3950
  %191 = load i8*, i8** %190, align 4, !dbg !3950
  call void @llvm.dbg.value(metadata i8* %191, metadata !3780, metadata !DIExpression()), !dbg !3946
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !3951
  call void @llvm.dbg.value(metadata i1 %192, metadata !3781, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3946
  br i1 %16, label %196, label %193, !dbg !3952

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !3954
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !3955
  br i1 %195, label %235, label %196, !dbg !3956

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !3957

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !3958

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !3961
  br i1 %199, label %201, label %200, !dbg !3966

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3967
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3967
  unreachable, !dbg !3967

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !3961
  %203 = add nuw nsw i8 %183, 1, !dbg !3969
  call void @llvm.dbg.value(metadata i8 %203, metadata !3770, metadata !DIExpression()), !dbg !3795
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !3970
  br label %231, !dbg !3971

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !3972

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !3973
  br i1 %207, label %209, label %208, !dbg !3978

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3979
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3979
  unreachable, !dbg !3979

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !3973
  %211 = add nuw nsw i8 %182, 1, !dbg !3981
  call void @llvm.dbg.value(metadata i8 %211, metadata !3771, metadata !DIExpression()), !dbg !3795
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !3982
  br label %231, !dbg !3983

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !3984

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !3986
  br i1 %215, label %217, label %216, !dbg !3991

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3992
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3992
  unreachable, !dbg !3992

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !3986
  %219 = add nuw nsw i8 %183, 1, !dbg !3994
  call void @llvm.dbg.value(metadata i8 %219, metadata !3770, metadata !DIExpression()), !dbg !3795
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !3995
  br label %231, !dbg !3996

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !3997
  br i1 %222, label %224, label %223, !dbg !4001

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4002
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4002
  unreachable, !dbg !4002

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !3997
  %226 = add nuw nsw i8 %182, 1, !dbg !4004
  call void @llvm.dbg.value(metadata i8 %226, metadata !3771, metadata !DIExpression()), !dbg !3795
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4005
  store i8 %185, i8* %227, align 1, !dbg !4006
  %228 = add nuw nsw i8 %182, 2, !dbg !4007
  call void @llvm.dbg.value(metadata i8 %228, metadata !3771, metadata !DIExpression()), !dbg !3795
  %229 = zext i8 %226 to i32, !dbg !4008
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4008
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4009
  br label %235, !dbg !4010

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3795
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3930
  call void @llvm.dbg.value(metadata i8 %237, metadata !3771, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i8 %236, metadata !3770, metadata !DIExpression()), !dbg !3795
  %238 = add nuw nsw i32 %181, 1, !dbg !4010
  call void @llvm.dbg.value(metadata i8* %186, metadata !3745, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %238, metadata !3774, metadata !DIExpression()), !dbg !3925
  %239 = icmp eq i32 %238, %31, !dbg !3926
  br i1 %239, label %160, label %179, !dbg !3927, !llvm.loop !4011

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3935
  call void @llvm.dbg.value(metadata i32 %177, metadata !3743, metadata !DIExpression()), !dbg !3795
  store i32 %176, i32* %14, align 1, !dbg !4013
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4014
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4015
  call void @llvm.dbg.value(metadata i32 %243, metadata !3773, metadata !DIExpression()), !dbg !3795
  %244 = icmp slt i32 %243, 0, !dbg !4016
  br i1 %244, label %287, label %245, !dbg !4018

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3743, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3795
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4019
  %248 = add nuw nsw i32 %44, %24, !dbg !4019
  %249 = sub i32 %247, %248, !dbg !4019
  call void @llvm.dbg.value(metadata i32 %249, metadata !3783, metadata !DIExpression()), !dbg !3795
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4020
  call void @llvm.dbg.value(metadata i32 %250, metadata !3773, metadata !DIExpression()), !dbg !3795
  %251 = icmp slt i32 %250, 0, !dbg !4021
  br i1 %251, label %287, label %252, !dbg !4023

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %253, metadata !3743, metadata !DIExpression()), !dbg !3795
  %254 = add nuw nsw i32 %253, %250, !dbg !4025
  call void @llvm.dbg.value(metadata i32 %254, metadata !3743, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 0, metadata !3784, metadata !DIExpression()), !dbg !4026
  %255 = icmp eq i8 %162, 0, !dbg !4027
  br i1 %255, label %284, label %256, !dbg !4028

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4028

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3784, metadata !DIExpression()), !dbg !4026
  call void @llvm.dbg.value(metadata i32 %260, metadata !3743, metadata !DIExpression()), !dbg !3795
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4029
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4030
  %262 = load i8, i8* %261, align 1, !dbg !4030
  call void @llvm.dbg.value(metadata i8 %262, metadata !3786, metadata !DIExpression()), !dbg !4031
  store i8 %262, i8* %10, align 1, !dbg !4032
  %263 = zext i8 %262 to i32, !dbg !4033
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4033
  %265 = bitcast i32* %264 to i8**, !dbg !4034
  %266 = load i8*, i8** %265, align 4, !dbg !4034
  call void @llvm.dbg.value(metadata i8* %266, metadata !3789, metadata !DIExpression()), !dbg !4031
  br i1 %257, label %270, label %267, !dbg !4035

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4036
  %269 = load i16, i16* %268, align 2, !dbg !4036
  br label %270, !dbg !4035

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4035
  call void @llvm.dbg.value(metadata i32 undef, metadata !3790, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4031
  call void @llvm.dbg.value(metadata i8* %10, metadata !3786, metadata !DIExpression(DW_OP_deref)), !dbg !4031
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4037
  call void @llvm.dbg.value(metadata i32 %272, metadata !3773, metadata !DIExpression()), !dbg !3795
  %273 = icmp slt i32 %272, 0, !dbg !4038
  br i1 %273, label %277, label %274, !dbg !4040

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3790, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3743, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3795
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4041
  call void @llvm.dbg.value(metadata i32 %275, metadata !3773, metadata !DIExpression()), !dbg !3795
  %276 = icmp slt i32 %275, 0, !dbg !4042
  br i1 %276, label %277, label %279, !dbg !4044

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3743, metadata !DIExpression()), !dbg !3795
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4045
  call void @llvm.dbg.value(metadata i32 undef, metadata !3743, metadata !DIExpression()), !dbg !3795
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4046
  call void @llvm.dbg.value(metadata i32 %280, metadata !3743, metadata !DIExpression()), !dbg !3795
  %281 = add nsw i32 %280, %275, !dbg !4047
  call void @llvm.dbg.value(metadata i32 %281, metadata !3743, metadata !DIExpression()), !dbg !3795
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4045
  %282 = add nuw nsw i32 %259, 1, !dbg !4048
  call void @llvm.dbg.value(metadata i32 %282, metadata !3784, metadata !DIExpression()), !dbg !4026
  %283 = icmp eq i32 %282, %167, !dbg !4027
  br i1 %283, label %284, label %258, !dbg !4028, !llvm.loop !4049

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4025
  call void @llvm.dbg.value(metadata i32 %285, metadata !3743, metadata !DIExpression()), !dbg !3795
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4051
  br label %287, !dbg !4052

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3795
  ret i32 %288, !dbg !4053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4054 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4058, metadata !DIExpression()), !dbg !4066
  %2 = icmp eq i8* %0, null, !dbg !4067
  br i1 %2, label %3, label %4, !dbg !4070

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4071
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4071
  unreachable, !dbg !4071

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4059, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %0, metadata !4060, metadata !DIExpression()), !dbg !4066
  %5 = load i8, i8* %0, align 1, !dbg !4073
  %6 = zext i8 %5 to i32, !dbg !4073
  %7 = shl nuw nsw i32 %6, 2, !dbg !4074
  call void @llvm.dbg.value(metadata i32 %7, metadata !4061, metadata !DIExpression()), !dbg !4066
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4075
  %9 = load i8, i8* %8, align 1, !dbg !4075
  %10 = zext i8 %9 to i32, !dbg !4075
  call void @llvm.dbg.value(metadata i32 %10, metadata !4062, metadata !DIExpression()), !dbg !4066
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4076
  %12 = load i8, i8* %11, align 1, !dbg !4076
  %13 = zext i8 %12 to i32, !dbg !4076
  call void @llvm.dbg.value(metadata i32 %13, metadata !4063, metadata !DIExpression()), !dbg !4066
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4077
  call void @llvm.dbg.value(metadata i8* %14, metadata !4059, metadata !DIExpression()), !dbg !4066
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4078
  call void @llvm.dbg.value(metadata i8* %15, metadata !4059, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 0, metadata !4064, metadata !DIExpression()), !dbg !4079
  %16 = icmp eq i8 %9, 0, !dbg !4080
  br i1 %16, label %17, label %22, !dbg !4082

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4066
  %19 = ptrtoint i8* %18 to i32, !dbg !4083
  %20 = ptrtoint i8* %0 to i32, !dbg !4083
  %21 = sub i32 %19, %20, !dbg !4083
  ret i32 %21, !dbg !4084

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4064, metadata !DIExpression()), !dbg !4079
  call void @llvm.dbg.value(metadata i8* %24, metadata !4059, metadata !DIExpression()), !dbg !4066
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4085
  call void @llvm.dbg.value(metadata i8* %25, metadata !4059, metadata !DIExpression()), !dbg !4066
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4087
  %27 = add i32 %26, 1, !dbg !4088
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4089
  call void @llvm.dbg.value(metadata i8* %28, metadata !4059, metadata !DIExpression()), !dbg !4066
  %29 = add nuw nsw i32 %23, 1, !dbg !4090
  call void @llvm.dbg.value(metadata i32 %29, metadata !4064, metadata !DIExpression()), !dbg !4079
  %30 = icmp eq i32 %29, %10, !dbg !4080
  br i1 %30, label %17, label %22, !dbg !4082, !llvm.loop !4091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4093 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4097, metadata !DIExpression()), !dbg !4101
  call void @llvm.dbg.value(metadata i8* %1, metadata !4098, metadata !DIExpression()), !dbg !4101
  call void @llvm.dbg.value(metadata i8* %2, metadata !4099, metadata !DIExpression()), !dbg !4101
  call void @llvm.dbg.value(metadata i16 %3, metadata !4100, metadata !DIExpression()), !dbg !4101
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4102
  br i1 %5, label %6, label %9, !dbg !4104

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4105
  %8 = add i32 %7, 1, !dbg !4107
  br label %20, !dbg !4108

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4109
  br i1 %10, label %13, label %11, !dbg !4110

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4110
  br label %16, !dbg !4110

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4111
  %15 = add i32 %14, 1, !dbg !4112
  br label %16, !dbg !4110

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4110
  %18 = and i32 %17, 65535, !dbg !4113
  call void @llvm.dbg.value(metadata i32 %17, metadata !4100, metadata !DIExpression()), !dbg !4101
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4114
  br label %20, !dbg !4115

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4101
  ret i32 %21, !dbg !4116
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4119, metadata !DIExpression()), !dbg !4120
  ret i32 0, !dbg !4121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4122 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4126, metadata !DIExpression()), !dbg !4127
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4128
  ret void, !dbg !4129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4130 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4131
  ret i8* %1, !dbg !4132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4133 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4144, metadata !DIExpression()), !dbg !4155
  call void @llvm.dbg.value(metadata i8* %0, metadata !4143, metadata !DIExpression()), !dbg !4155
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4156
  ret void, !dbg !4158
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4163, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i8* %1, metadata !4164, metadata !DIExpression()), !dbg !4165
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4166
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4166
  ret i32 %4, !dbg !4167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4168 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4175, metadata !DIExpression()), !dbg !4176
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4172, metadata !DIExpression()), !dbg !4176
  call void @llvm.dbg.value(metadata i8* %1, metadata !4173, metadata !DIExpression()), !dbg !4176
  call void @llvm.dbg.value(metadata i8* %2, metadata !4174, metadata !DIExpression()), !dbg !4176
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4177
  ret void, !dbg !4178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4179 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4183, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.value(metadata i32 %1, metadata !4184, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.value(metadata i32 0, metadata !4185, metadata !DIExpression()), !dbg !4186
  %3 = icmp eq i32 %1, 0, !dbg !4187
  br i1 %3, label %13, label %4, !dbg !4190

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4185, metadata !DIExpression()), !dbg !4186
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4191
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4193
  %8 = load i8, i8* %7, align 1, !dbg !4193
  %9 = zext i8 %8 to i32, !dbg !4193
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4191
  %11 = add nuw i32 %5, 1, !dbg !4194
  call void @llvm.dbg.value(metadata i32 %11, metadata !4185, metadata !DIExpression()), !dbg !4186
  %12 = icmp eq i32 %11, %1, !dbg !4187
  br i1 %12, label %13, label %4, !dbg !4190, !llvm.loop !4195

13:                                               ; preds = %4, %2
  ret void, !dbg !4197
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4198 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4202, metadata !DIExpression()), !dbg !4204
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4205
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4205
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4203, metadata !DIExpression()), !dbg !4206
  call void @llvm.va_start(i8* nonnull %3), !dbg !4207
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4208
  %5 = load i32, i32* %4, align 4, !dbg !4208
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4208
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4208
  call void @llvm.va_end(i8* nonnull %3), !dbg !4209
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4210
  ret void, !dbg !4210
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4211 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4215, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.value(metadata i32 %1, metadata !4216, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.value(metadata i8* %2, metadata !4217, metadata !DIExpression()), !dbg !4220
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4221
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4221
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4218, metadata !DIExpression()), !dbg !4222
  call void @llvm.va_start(i8* nonnull %5), !dbg !4223
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4224
  %7 = load i32, i32* %6, align 4, !dbg !4224
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4224
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4224
  call void @llvm.dbg.value(metadata i32 %9, metadata !4219, metadata !DIExpression()), !dbg !4220
  call void @llvm.va_end(i8* nonnull %5), !dbg !4225
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4226
  ret i32 %9, !dbg !4227
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4228 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4235, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i8* %0, metadata !4232, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i32 %1, metadata !4233, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i8* %2, metadata !4234, metadata !DIExpression()), !dbg !4242
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4243
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4243
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4236, metadata !DIExpression()), !dbg !4244
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4245
  store i8* %0, i8** %7, align 4, !dbg !4245
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4245
  store i32 %1, i32* %8, align 4, !dbg !4245
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4245
  store i32 0, i32* %9, align 4, !dbg !4245
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4246
  %10 = load i32, i32* %9, align 4, !dbg !4247
  %11 = load i32, i32* %8, align 4, !dbg !4249
  %12 = icmp slt i32 %10, %11, !dbg !4250
  br i1 %12, label %13, label %15, !dbg !4251

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4252
  store i8 0, i8* %14, align 1, !dbg !4254
  br label %15, !dbg !4255

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4256
  ret i32 %10, !dbg !4257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4263, metadata !DIExpression()), !dbg !4265
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4264, metadata !DIExpression()), !dbg !4265
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4266
  %4 = load i8*, i8** %3, align 4, !dbg !4266
  %5 = icmp eq i8* %4, null, !dbg !4268
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4269
  br i1 %5, label %12, label %8, !dbg !4270

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4271
  %10 = load i32, i32* %9, align 4, !dbg !4271
  %11 = icmp slt i32 %7, %10, !dbg !4272
  br i1 %11, label %15, label %12, !dbg !4273

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4274
  %14 = add nsw i32 %7, 1, !dbg !4276
  store i32 %14, i32* %13, align 4, !dbg !4276
  br label %25, !dbg !4277

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4278
  %17 = icmp eq i32 %7, %16, !dbg !4280
  br i1 %17, label %18, label %21, !dbg !4281

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4282
  store i32 %19, i32* %6, align 4, !dbg !4282
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4284
  store i8 0, i8* %20, align 1, !dbg !4285
  br label %25, !dbg !4286

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4287
  %23 = add nsw i32 %7, 1, !dbg !4289
  store i32 %23, i32* %6, align 4, !dbg !4289
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4290
  store i8 %22, i8* %24, align 1, !dbg !4291
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4292
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4293 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4298, metadata !DIExpression()), !dbg !4302
  call void @llvm.dbg.value(metadata i8* %1, metadata !4299, metadata !DIExpression()), !dbg !4302
  call void @llvm.dbg.value(metadata i8* %2, metadata !4300, metadata !DIExpression()), !dbg !4302
  call void @llvm.dbg.value(metadata i8* %3, metadata !4301, metadata !DIExpression()), !dbg !4302
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4303
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4304
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4305
  unreachable, !dbg !4306
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4307 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4414
  ret %struct.k_thread* %1, !dbg !4415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4416 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4421, metadata !DIExpression()), !dbg !4422
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4423, !srcloc !4425
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4426
  ret void, !dbg !4427
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4428 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4429, !srcloc !4431
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4432
  ret %struct.k_thread* %1, !dbg !4433
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4434 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4447, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4444, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8* %1, metadata !4445, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8* %2, metadata !4446, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %4, metadata !4448, metadata !DIExpression()), !dbg !4573
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4574
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4574
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4449, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i32 0, metadata !4453, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i1 undef, metadata !4455, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4573
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4576

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4576

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4577
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4447, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8* %30, metadata !4446, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %29, metadata !4453, metadata !DIExpression()), !dbg !4573
  %31 = load i8, i8* %30, align 1, !dbg !4578
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4576

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4578
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4579
  call void @llvm.dbg.value(metadata i8* %34, metadata !4446, metadata !DIExpression()), !dbg !4573
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4579
  call void @llvm.dbg.value(metadata i32 %35, metadata !4457, metadata !DIExpression()), !dbg !4580
  %36 = icmp slt i32 %35, 0, !dbg !4581
  %37 = add i32 %29, 1, !dbg !4579
  call void @llvm.dbg.value(metadata i32 undef, metadata !4453, metadata !DIExpression()), !dbg !4573
  br i1 %36, label %365, label %28, !llvm.loop !4583

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4585
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4462, metadata !DIExpression()), !dbg !4586
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4586
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4505, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4508, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8* %30, metadata !4511, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i32 -1, metadata !4512, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i32 -1, metadata !4513, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8* null, metadata !4514, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8* %14, metadata !4515, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8 0, metadata !4516, metadata !DIExpression()), !dbg !4587
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4588
  call void @llvm.dbg.value(metadata i8* %39, metadata !4446, metadata !DIExpression()), !dbg !4573
  %40 = load i24, i24* %15, align 8, !dbg !4589
  %41 = and i24 %40, 256, !dbg !4589
  %42 = icmp eq i24 %41, 0, !dbg !4589
  br i1 %42, label %51, label %43, !dbg !4591

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4592
  call void @llvm.dbg.value(metadata i8* %44, metadata !4447, metadata !DIExpression()), !dbg !4573
  %45 = bitcast i8* %27 to i32*, !dbg !4592
  %46 = load i32, i32* %45, align 4, !dbg !4592
  call void @llvm.dbg.value(metadata i32 %46, metadata !4512, metadata !DIExpression()), !dbg !4587
  %47 = icmp slt i32 %46, 0, !dbg !4594
  br i1 %47, label %48, label %56, !dbg !4596

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4597
  store i24 %49, i24* %15, align 8, !dbg !4597
  %50 = sub nsw i32 0, %46, !dbg !4599
  call void @llvm.dbg.value(metadata i32 %50, metadata !4512, metadata !DIExpression()), !dbg !4587
  br label %56, !dbg !4600

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4601
  %53 = icmp eq i24 %52, 0, !dbg !4601
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4603
  br label %56, !dbg !4603

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4604
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4587
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4447, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %58, metadata !4512, metadata !DIExpression()), !dbg !4587
  %60 = and i24 %57, 1024, !dbg !4604
  %61 = icmp eq i24 %60, 0, !dbg !4604
  br i1 %61, label %69, label %62, !dbg !4605

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4606
  call void @llvm.dbg.value(metadata i8* %63, metadata !4447, metadata !DIExpression()), !dbg !4573
  %64 = bitcast i8* %59 to i32*, !dbg !4606
  %65 = load i32, i32* %64, align 4, !dbg !4606
  call void @llvm.dbg.value(metadata i32 %65, metadata !4517, metadata !DIExpression()), !dbg !4607
  %66 = icmp slt i32 %65, 0, !dbg !4608
  br i1 %66, label %67, label %74, !dbg !4610

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4611
  store i24 %68, i24* %15, align 8, !dbg !4611
  br label %74, !dbg !4613

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4614
  %71 = icmp eq i24 %70, 0, !dbg !4614
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4616
  br label %74, !dbg !4616

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4617
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4587
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4587
  call void @llvm.dbg.value(metadata i8* %77, metadata !4447, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %76, metadata !4513, metadata !DIExpression()), !dbg !4587
  store i32 0, i32* %16, align 4, !dbg !4618
  store i32 0, i32* %17, align 8, !dbg !4619
  %78 = lshr i24 %75, 16, !dbg !4617
  call void @llvm.dbg.value(metadata i24 %78, metadata !4520, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4587
  %79 = lshr i24 %75, 11, !dbg !4620
  %80 = and i24 %79, 15, !dbg !4620
  %81 = zext i24 %80 to i32, !dbg !4620
  call void @llvm.dbg.value(metadata i32 %81, metadata !4521, metadata !DIExpression()), !dbg !4587
  %82 = trunc i24 %78 to i3, !dbg !4621
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4621

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4622

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4625
  call void @llvm.dbg.value(metadata i8* %85, metadata !4447, metadata !DIExpression()), !dbg !4573
  %86 = bitcast i8* %77 to i32*, !dbg !4625
  %87 = load i32, i32* %86, align 4, !dbg !4625
  %88 = sext i32 %87 to i64, !dbg !4625
  store i64 %88, i64* %20, align 8, !dbg !4627
  br label %115, !dbg !4628

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4629
  call void @llvm.dbg.value(metadata i8* %90, metadata !4447, metadata !DIExpression()), !dbg !4573
  %91 = bitcast i8* %77 to i32*, !dbg !4629
  %92 = load i32, i32* %91, align 4, !dbg !4629
  %93 = sext i32 %92 to i64, !dbg !4629
  store i64 %93, i64* %20, align 8, !dbg !4632
  br label %115, !dbg !4633

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4634
  %96 = add i32 %95, 7, !dbg !4634
  %97 = and i32 %96, -8, !dbg !4634
  %98 = inttoptr i32 %97 to i8*, !dbg !4634
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4634
  call void @llvm.dbg.value(metadata i8* %99, metadata !4447, metadata !DIExpression()), !dbg !4573
  %100 = inttoptr i32 %97 to i64*, !dbg !4634
  %101 = load i64, i64* %100, align 8, !dbg !4634
  store i64 %101, i64* %20, align 8, !dbg !4635
  br label %115, !dbg !4636

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4637
  %104 = add i32 %103, 7, !dbg !4637
  %105 = and i32 %104, -8, !dbg !4637
  %106 = inttoptr i32 %105 to i8*, !dbg !4637
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4637
  call void @llvm.dbg.value(metadata i8* %107, metadata !4447, metadata !DIExpression()), !dbg !4573
  %108 = inttoptr i32 %105 to i64*, !dbg !4637
  %109 = load i64, i64* %108, align 8, !dbg !4637
  store i64 %109, i64* %20, align 8, !dbg !4638
  br label %115, !dbg !4639

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4640
  call void @llvm.dbg.value(metadata i8* %111, metadata !4447, metadata !DIExpression()), !dbg !4573
  %112 = bitcast i8* %77 to i32*, !dbg !4640
  %113 = load i32, i32* %112, align 4, !dbg !4640
  %114 = sext i32 %113 to i64, !dbg !4641
  store i64 %114, i64* %20, align 8, !dbg !4642
  br label %115, !dbg !4643

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4644
  call void @llvm.dbg.value(metadata i8* %117, metadata !4447, metadata !DIExpression()), !dbg !4573
  %118 = trunc i24 %79 to i4, !dbg !4645
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4645

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4646
  %121 = ashr exact i64 %120, 56, !dbg !4646
  store i64 %121, i64* %20, align 8, !dbg !4649
  br label %177, !dbg !4650

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4651
  %124 = ashr exact i64 %123, 48, !dbg !4651
  store i64 %124, i64* %20, align 8, !dbg !4654
  br label %177, !dbg !4655

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4656

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4659
  call void @llvm.dbg.value(metadata i8* %127, metadata !4447, metadata !DIExpression()), !dbg !4573
  %128 = bitcast i8* %77 to i32*, !dbg !4659
  %129 = load i32, i32* %128, align 4, !dbg !4659
  %130 = zext i32 %129 to i64, !dbg !4659
  store i64 %130, i64* %20, align 8, !dbg !4661
  br label %157, !dbg !4662

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4663
  call void @llvm.dbg.value(metadata i8* %132, metadata !4447, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8* %132, metadata !4447, metadata !DIExpression()), !dbg !4573
  %133 = bitcast i8* %77 to i32*, !dbg !4663
  %134 = load i32, i32* %133, align 4, !dbg !4663
  %135 = zext i32 %134 to i64, !dbg !4663
  store i64 %135, i64* %20, align 8, !dbg !4663
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4665
  %138 = add i32 %137, 7, !dbg !4665
  %139 = and i32 %138, -8, !dbg !4665
  %140 = inttoptr i32 %139 to i8*, !dbg !4665
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4665
  call void @llvm.dbg.value(metadata i8* %141, metadata !4447, metadata !DIExpression()), !dbg !4573
  %142 = inttoptr i32 %139 to i64*, !dbg !4665
  %143 = load i64, i64* %142, align 8, !dbg !4665
  store i64 %143, i64* %20, align 8, !dbg !4666
  br label %157, !dbg !4667

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4668
  %146 = add i32 %145, 7, !dbg !4668
  %147 = and i32 %146, -8, !dbg !4668
  %148 = inttoptr i32 %147 to i8*, !dbg !4668
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4668
  call void @llvm.dbg.value(metadata i8* %149, metadata !4447, metadata !DIExpression()), !dbg !4573
  %150 = inttoptr i32 %147 to i64*, !dbg !4668
  %151 = load i64, i64* %150, align 8, !dbg !4668
  store i64 %151, i64* %20, align 8, !dbg !4669
  br label %157, !dbg !4670

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4671
  call void @llvm.dbg.value(metadata i8* %153, metadata !4447, metadata !DIExpression()), !dbg !4573
  %154 = bitcast i8* %77 to i32*, !dbg !4671
  %155 = load i32, i32* %154, align 4, !dbg !4671
  %156 = zext i32 %155 to i64, !dbg !4672
  store i64 %156, i64* %20, align 8, !dbg !4673
  br label %157, !dbg !4674

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4675
  call void @llvm.dbg.value(metadata i8* %159, metadata !4447, metadata !DIExpression()), !dbg !4573
  %160 = trunc i24 %79 to i4, !dbg !4676
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4676

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4677
  store i64 %162, i64* %20, align 8, !dbg !4680
  br label %177, !dbg !4681

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4682
  store i64 %164, i64* %20, align 8, !dbg !4685
  br label %177, !dbg !4686

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4687
  %167 = add i32 %166, 7, !dbg !4687
  %168 = and i32 %167, -8, !dbg !4687
  %169 = inttoptr i32 %168 to i8*, !dbg !4687
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4687
  call void @llvm.dbg.value(metadata i8* %170, metadata !4447, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8* %170, metadata !4447, metadata !DIExpression()), !dbg !4573
  %171 = inttoptr i32 %168 to double*, !dbg !4687
  %172 = load double, double* %171, align 8, !dbg !4687
  store double %172, double* %19, align 8, !dbg !4687
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4691
  call void @llvm.dbg.value(metadata i8* %174, metadata !4447, metadata !DIExpression()), !dbg !4573
  %175 = bitcast i8* %77 to i8**, !dbg !4691
  %176 = load i8*, i8** %175, align 4, !dbg !4691
  store i8* %176, i8** %18, align 8, !dbg !4694
  br label %177, !dbg !4695

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4587
  call void @llvm.dbg.value(metadata i8* %178, metadata !4447, metadata !DIExpression()), !dbg !4573
  %179 = and i24 %75, 3, !dbg !4696
  %180 = icmp eq i24 %179, 0, !dbg !4696
  br i1 %180, label %185, label %181, !dbg !4696

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4697
  call void @llvm.dbg.value(metadata i32 %182, metadata !4522, metadata !DIExpression()), !dbg !4698
  %183 = icmp slt i32 %182, 0, !dbg !4699
  %184 = add i32 %182, %29, !dbg !4697
  call void @llvm.dbg.value(metadata i32 undef, metadata !4453, metadata !DIExpression()), !dbg !4573
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4701
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4702

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4703
  call void @llvm.dbg.value(metadata i32 %188, metadata !4526, metadata !DIExpression()), !dbg !4704
  %189 = icmp slt i32 %188, 0, !dbg !4705
  %190 = add i32 %29, 1, !dbg !4703
  call void @llvm.dbg.value(metadata i32 undef, metadata !4453, metadata !DIExpression()), !dbg !4573
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4707
  call void @llvm.dbg.value(metadata i8* %192, metadata !4514, metadata !DIExpression()), !dbg !4587
  %193 = icmp sgt i32 %76, -1, !dbg !4708
  br i1 %193, label %194, label %196, !dbg !4710

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4711
  call void @llvm.dbg.value(metadata i32 %195, metadata !4529, metadata !DIExpression()), !dbg !4713
  br label %241, !dbg !4714

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4715
  call void @llvm.dbg.value(metadata i32 %197, metadata !4529, metadata !DIExpression()), !dbg !4713
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4514, metadata !DIExpression()), !dbg !4587
  %199 = load i64, i64* %20, align 8, !dbg !4717
  %200 = trunc i64 %199 to i8, !dbg !4718
  store i8 %200, i8* %10, align 1, !dbg !4719
  call void @llvm.dbg.value(metadata i8* %23, metadata !4515, metadata !DIExpression()), !dbg !4587
  br label %245, !dbg !4720

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4721
  %203 = icmp eq i24 %202, 0, !dbg !4721
  %204 = trunc i24 %75 to i8, !dbg !4723
  %205 = shl i8 %204, 1, !dbg !4723
  %206 = and i8 %205, 32, !dbg !4723
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4723
  call void @llvm.dbg.value(metadata i8 %207, metadata !4516, metadata !DIExpression()), !dbg !4587
  %208 = load i64, i64* %20, align 8, !dbg !4724
  call void @llvm.dbg.value(metadata i64 %208, metadata !4454, metadata !DIExpression()), !dbg !4573
  %209 = icmp slt i64 %208, 0, !dbg !4725
  br i1 %209, label %210, label %212, !dbg !4727

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4516, metadata !DIExpression()), !dbg !4587
  %211 = sub nsw i64 0, %208, !dbg !4728
  store i64 %211, i64* %20, align 8, !dbg !4730
  br label %212, !dbg !4731

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4587
  call void @llvm.dbg.value(metadata i8 %213, metadata !4516, metadata !DIExpression()), !dbg !4587
  %214 = load i64, i64* %20, align 8, !dbg !4732
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4733
  call void @llvm.dbg.value(metadata i8* %215, metadata !4514, metadata !DIExpression()), !dbg !4587
  br label %216, !dbg !4734

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4735
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4736
  call void @llvm.dbg.value(metadata i8* %218, metadata !4514, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8 %217, metadata !4516, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.label(metadata !4572), !dbg !4737
  %219 = icmp sgt i32 %76, -1, !dbg !4738
  br i1 %219, label %222, label %220, !dbg !4739

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4740
  br label %245, !dbg !4739

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4742
  %224 = sub i32 %22, %223, !dbg !4742
  call void @llvm.dbg.value(metadata i32 %224, metadata !4531, metadata !DIExpression()), !dbg !4743
  %225 = load i24, i24* %15, align 8, !dbg !4744
  %226 = and i24 %225, -65, !dbg !4744
  store i24 %226, i24* %15, align 8, !dbg !4744
  %227 = icmp ugt i32 %76, %224, !dbg !4745
  br i1 %227, label %228, label %245, !dbg !4747

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4748
  store i32 %229, i32* %16, align 4, !dbg !4750
  br label %245, !dbg !4751

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4752
  %232 = icmp eq i8* %231, null, !dbg !4754
  br i1 %232, label %245, label %233, !dbg !4755

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4756
  %235 = zext i32 %234 to i64, !dbg !4756
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4758
  call void @llvm.dbg.value(metadata i8* %236, metadata !4514, metadata !DIExpression()), !dbg !4587
  %237 = load i24, i24* %15, align 8, !dbg !4759
  %238 = or i24 %237, 1048576, !dbg !4759
  store i24 %238, i24* %15, align 8, !dbg !4759
  store i8 120, i8* %21, align 1, !dbg !4760
  br label %216, !dbg !4761

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4762
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4765
  br label %363, !dbg !4766

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4767
  call void @llvm.dbg.value(metadata i32 %242, metadata !4529, metadata !DIExpression()), !dbg !4713
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4768
  call void @llvm.dbg.value(metadata i32 -1, metadata !4513, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i32 %29, metadata !4453, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8* %192, metadata !4514, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8* %243, metadata !4515, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8 0, metadata !4516, metadata !DIExpression()), !dbg !4587
  %244 = icmp eq i8* %192, null, !dbg !4769
  br i1 %244, label %363, label %245, !dbg !4771, !llvm.loop !4583

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4740
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4534, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4587
  call void @llvm.dbg.value(metadata i32 0, metadata !4535, metadata !DIExpression()), !dbg !4587
  %250 = zext i8 %249 to i32, !dbg !4772
  %251 = icmp eq i8 %249, 0, !dbg !4774
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4534, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4587
  call void @llvm.dbg.value(metadata i32 undef, metadata !4534, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4534, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4587
  call void @llvm.dbg.value(metadata i32 undef, metadata !4534, metadata !DIExpression()), !dbg !4587
  %252 = icmp sgt i32 %58, 0, !dbg !4775
  br i1 %252, label %253, label %302, !dbg !4776

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4740
  %255 = icmp eq i24 %254, 0, !dbg !4740
  %256 = ptrtoint i8* %248 to i32, !dbg !4777
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4534, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4587
  %257 = ptrtoint i8* %247 to i32, !dbg !4777
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4534, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4587
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4534, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4587
  %258 = xor i1 %251, true, !dbg !4778
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4534, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4587
  %259 = sext i1 %258 to i32, !dbg !4778
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4534, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4587
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4534, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4587
  %260 = lshr i24 %246, 19, !dbg !4779
  %261 = and i24 %260, 1, !dbg !4779
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4779
  %263 = zext i24 %262 to i32, !dbg !4779
  %264 = add i32 %257, %259, !dbg !4779
  %265 = add i32 %256, %263, !dbg !4779
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4534, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4587
  %266 = and i24 %246, 4194304, !dbg !4780
  %267 = icmp eq i24 %266, 0, !dbg !4780
  %268 = load i32, i32* %16, align 4, !dbg !4782
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4534, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4587
  call void @llvm.dbg.value(metadata i32 undef, metadata !4534, metadata !DIExpression()), !dbg !4587
  %269 = load i32, i32* %17, align 8, !dbg !4783
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4783
  call void @llvm.dbg.value(metadata i32 undef, metadata !4534, metadata !DIExpression()), !dbg !4587
  %271 = add i32 %264, %58, !dbg !4783
  %272 = add i32 %265, %268, !dbg !4783
  %273 = add i32 %272, %270, !dbg !4784
  %274 = sub i32 %271, %273, !dbg !4784
  call void @llvm.dbg.value(metadata i32 %274, metadata !4512, metadata !DIExpression()), !dbg !4587
  %275 = and i24 %246, 4, !dbg !4785
  %276 = icmp eq i24 %275, 0, !dbg !4785
  br i1 %276, label %277, label %302, !dbg !4786

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4536, metadata !DIExpression()), !dbg !4787
  %278 = and i24 %246, 64, !dbg !4788
  %279 = icmp eq i24 %278, 0, !dbg !4788
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4789
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4789
  %282 = select i1 %279, i32 32, i32 48, !dbg !4789
  br i1 %280, label %287, label %283, !dbg !4789

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4790
  call void @llvm.dbg.value(metadata i32 %284, metadata !4541, metadata !DIExpression()), !dbg !4791
  %285 = icmp slt i32 %284, 0, !dbg !4792
  %286 = add i32 %29, 1, !dbg !4790
  call void @llvm.dbg.value(metadata i32 undef, metadata !4453, metadata !DIExpression()), !dbg !4573
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4587
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4577
  call void @llvm.dbg.value(metadata i32 %290, metadata !4453, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8 undef, metadata !4536, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata i8 %288, metadata !4516, metadata !DIExpression()), !dbg !4587
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4794
  %292 = add i32 %291, -1, !dbg !4794
  br label %293, !dbg !4794

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4795
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4577
  call void @llvm.dbg.value(metadata i32 %295, metadata !4453, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %294, metadata !4512, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i32 %294, metadata !4512, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4587
  %296 = icmp sgt i32 %294, 0, !dbg !4796
  br i1 %296, label %297, label %302, !dbg !4794

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4797
  call void @llvm.dbg.value(metadata i32 %298, metadata !4512, metadata !DIExpression()), !dbg !4587
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %299, metadata !4547, metadata !DIExpression()), !dbg !4799
  %300 = icmp slt i32 %299, 0, !dbg !4800
  %301 = add i32 %295, 1, !dbg !4798
  call void @llvm.dbg.value(metadata i32 undef, metadata !4453, metadata !DIExpression()), !dbg !4573
  br i1 %300, label %361, label %293, !llvm.loop !4802

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4587
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4587
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4577
  call void @llvm.dbg.value(metadata i32 %305, metadata !4453, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %304, metadata !4512, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8 %303, metadata !4516, metadata !DIExpression()), !dbg !4587
  %306 = icmp eq i8 %303, 0, !dbg !4804
  br i1 %306, label %312, label %307, !dbg !4805

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4806
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4807
  call void @llvm.dbg.value(metadata i32 %309, metadata !4550, metadata !DIExpression()), !dbg !4808
  %310 = icmp slt i32 %309, 0, !dbg !4809
  %311 = add i32 %305, 1, !dbg !4807
  call void @llvm.dbg.value(metadata i32 undef, metadata !4453, metadata !DIExpression()), !dbg !4573
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4577
  call void @llvm.dbg.value(metadata i32 %313, metadata !4453, metadata !DIExpression()), !dbg !4573
  %314 = lshr i24 %246, 20, !dbg !4811
  %315 = lshr i24 %246, 19, !dbg !4812
  %316 = or i24 %314, %315, !dbg !4813
  %317 = and i24 %316, 1, !dbg !4813
  %318 = icmp eq i24 %317, 0, !dbg !4813
  br i1 %318, label %323, label %319, !dbg !4814

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4815
  call void @llvm.dbg.value(metadata i32 %320, metadata !4554, metadata !DIExpression()), !dbg !4816
  %321 = icmp slt i32 %320, 0, !dbg !4817
  %322 = add i32 %313, 1, !dbg !4815
  call void @llvm.dbg.value(metadata i32 undef, metadata !4453, metadata !DIExpression()), !dbg !4573
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4577
  call void @llvm.dbg.value(metadata i32 %324, metadata !4453, metadata !DIExpression()), !dbg !4573
  %325 = and i24 %246, 1048576, !dbg !4819
  %326 = icmp eq i24 %325, 0, !dbg !4819
  br i1 %326, label %333, label %327, !dbg !4820

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4821
  %329 = zext i8 %328 to i32, !dbg !4821
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4821
  call void @llvm.dbg.value(metadata i32 %330, metadata !4560, metadata !DIExpression()), !dbg !4822
  %331 = icmp slt i32 %330, 0, !dbg !4823
  %332 = add i32 %324, 1, !dbg !4821
  call void @llvm.dbg.value(metadata i32 undef, metadata !4453, metadata !DIExpression()), !dbg !4573
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4577
  call void @llvm.dbg.value(metadata i32 %334, metadata !4453, metadata !DIExpression()), !dbg !4573
  %335 = load i32, i32* %16, align 4, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %335, metadata !4535, metadata !DIExpression()), !dbg !4587
  br label %336, !dbg !4826

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4827
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4577
  call void @llvm.dbg.value(metadata i32 %338, metadata !4453, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %337, metadata !4535, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4587
  %339 = icmp sgt i32 %337, 0, !dbg !4828
  br i1 %339, label %340, label %345, !dbg !4826

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4829
  call void @llvm.dbg.value(metadata i32 %341, metadata !4535, metadata !DIExpression()), !dbg !4587
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4830
  call void @llvm.dbg.value(metadata i32 %342, metadata !4564, metadata !DIExpression()), !dbg !4831
  %343 = icmp slt i32 %342, 0, !dbg !4832
  %344 = add i32 %338, 1, !dbg !4830
  call void @llvm.dbg.value(metadata i32 undef, metadata !4453, metadata !DIExpression()), !dbg !4573
  br i1 %343, label %361, label %336, !llvm.loop !4834

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4836
  call void @llvm.dbg.value(metadata i32 %346, metadata !4567, metadata !DIExpression()), !dbg !4837
  %347 = icmp slt i32 %346, 0, !dbg !4838
  call void @llvm.dbg.value(metadata i32 undef, metadata !4453, metadata !DIExpression()), !dbg !4573
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4836
  call void @llvm.dbg.value(metadata i32 %349, metadata !4453, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %304, metadata !4512, metadata !DIExpression()), !dbg !4587
  %350 = icmp sgt i32 %304, 0, !dbg !4840
  br i1 %350, label %351, label %363, !dbg !4841

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4841
  %353 = add i32 %352, %338, !dbg !4841
  br label %354, !dbg !4841

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4453, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %355, metadata !4512, metadata !DIExpression()), !dbg !4587
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4842
  call void @llvm.dbg.value(metadata i32 %356, metadata !4569, metadata !DIExpression()), !dbg !4843
  %357 = icmp slt i32 %356, 0, !dbg !4844
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4846
  call void @llvm.dbg.value(metadata i32 undef, metadata !4453, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %359, metadata !4512, metadata !DIExpression()), !dbg !4587
  %360 = icmp sgt i32 %355, 1, !dbg !4840
  br i1 %360, label %354, label %363, !dbg !4841, !llvm.loop !4847

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4453, metadata !DIExpression()), !dbg !4573
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4584
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4577
  call void @llvm.dbg.value(metadata i32 %364, metadata !4453, metadata !DIExpression()), !dbg !4573
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4584
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4573
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4849
  ret i32 %366, !dbg !4849
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4850 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4854, metadata !DIExpression()), !dbg !4856
  call void @llvm.dbg.value(metadata i8* %1, metadata !4855, metadata !DIExpression()), !dbg !4856
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4857
  store i24 0, i24* %3, align 4, !dbg !4857
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4857
  store i8 0, i8* %4, align 1, !dbg !4857
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4857
  store i32 0, i32* %5, align 4, !dbg !4857
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4857
  store i32 0, i32* %6, align 4, !dbg !4857
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4858
  call void @llvm.dbg.value(metadata i8* %7, metadata !4855, metadata !DIExpression()), !dbg !4856
  %8 = load i8, i8* %7, align 1, !dbg !4859
  %9 = icmp eq i8 %8, 37, !dbg !4861
  br i1 %9, label %10, label %12, !dbg !4862

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4863
  call void @llvm.dbg.value(metadata i8* %11, metadata !4855, metadata !DIExpression()), !dbg !4856
  store i8 37, i8* %4, align 1, !dbg !4865
  br label %18, !dbg !4866

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %13, metadata !4855, metadata !DIExpression()), !dbg !4856
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4868
  call void @llvm.dbg.value(metadata i8* %14, metadata !4855, metadata !DIExpression()), !dbg !4856
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4869
  call void @llvm.dbg.value(metadata i8* %15, metadata !4855, metadata !DIExpression()), !dbg !4856
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4870
  call void @llvm.dbg.value(metadata i8* %16, metadata !4855, metadata !DIExpression()), !dbg !4856
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4871
  call void @llvm.dbg.value(metadata i8* %17, metadata !4855, metadata !DIExpression()), !dbg !4856
  br label %18, !dbg !4872

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4856
  ret i8* %19, !dbg !4873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4874 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4878, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata i8* %1, metadata !4879, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata i8* %2, metadata !4880, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata i8* %3, metadata !4881, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata i32 0, metadata !4882, metadata !DIExpression()), !dbg !4885
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4886

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4887
  call void @llvm.dbg.value(metadata i32 %9, metadata !4882, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata i8* %8, metadata !4880, metadata !DIExpression()), !dbg !4885
  %10 = icmp ult i8* %8, %3, !dbg !4888
  br i1 %10, label %11, label %13, !dbg !4889

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4890
  br label %17, !dbg !4889

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4891

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4892
  %16 = icmp eq i8 %15, 0, !dbg !4891
  br i1 %16, label %24, label %17, !dbg !4886

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4890
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4893
  call void @llvm.dbg.value(metadata i8* %19, metadata !4880, metadata !DIExpression()), !dbg !4885
  %20 = zext i8 %18 to i32, !dbg !4894
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %21, metadata !4883, metadata !DIExpression()), !dbg !4896
  %22 = icmp slt i32 %21, 0, !dbg !4897
  %23 = add i32 %9, 1, !dbg !4899
  call void @llvm.dbg.value(metadata i32 undef, metadata !4882, metadata !DIExpression()), !dbg !4885
  br i1 %22, label %24, label %7, !llvm.loop !4900

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4885
  ret i32 %25, !dbg !4902
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4903 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4907, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4908, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i8* %2, metadata !4909, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i8* %3, metadata !4910, metadata !DIExpression()), !dbg !4917
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4918
  %6 = load i8, i8* %5, align 1, !dbg !4918
  %7 = zext i8 %6 to i32, !dbg !4919
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4920
  %9 = icmp eq i32 %8, 0, !dbg !4920
  call void @llvm.dbg.value(metadata i1 %9, metadata !4911, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4917
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4921
  call void @llvm.dbg.value(metadata i32 %10, metadata !4912, metadata !DIExpression()), !dbg !4917
  %11 = ptrtoint i8* %3 to i32, !dbg !4922
  %12 = ptrtoint i8* %2 to i32, !dbg !4922
  %13 = sub i32 %11, %12, !dbg !4922
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4923
  call void @llvm.dbg.value(metadata i8* %14, metadata !4914, metadata !DIExpression()), !dbg !4917
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4924

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4917
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4907, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i8* %18, metadata !4914, metadata !DIExpression()), !dbg !4917
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4925
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4926
  call void @llvm.dbg.value(metadata i32 %25, metadata !4915, metadata !DIExpression()), !dbg !4927
  %26 = icmp ult i32 %25, 10, !dbg !4928
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4929
  %28 = add i32 %27, %25, !dbg !4927
  %29 = trunc i32 %28 to i8, !dbg !4929
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4930
  call void @llvm.dbg.value(metadata i8* %30, metadata !4914, metadata !DIExpression()), !dbg !4917
  store i8 %29, i8* %30, align 1, !dbg !4931
  call void @llvm.dbg.value(metadata i64 %22, metadata !4907, metadata !DIExpression()), !dbg !4917
  %31 = icmp uge i64 %19, %15, !dbg !4932
  %32 = icmp ugt i8* %30, %2, !dbg !4933
  %33 = and i1 %31, %32, !dbg !4933
  br i1 %33, label %17, label %34, !dbg !4934, !llvm.loop !4935

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4937
  %36 = load i24, i24* %35, align 4, !dbg !4937
  %37 = and i24 %36, 32, !dbg !4937
  %38 = icmp eq i24 %37, 0, !dbg !4937
  br i1 %38, label %44, label %39, !dbg !4939

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4940

40:                                               ; preds = %39
  br label %41, !dbg !4942

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4946
  store i24 %43, i24* %35, align 4, !dbg !4946
  br label %44, !dbg !4947

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !4948 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4954, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.value(metadata i8* %1, metadata !4955, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.value(metadata i32 %2, metadata !4956, metadata !DIExpression()), !dbg !4957
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4958
  %5 = load i24, i24* %4, align 4, !dbg !4958
  %6 = lshr i24 %5, 11, !dbg !4958
  %7 = and i24 %6, 15, !dbg !4958
  %8 = zext i24 %7 to i32, !dbg !4958
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4959

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4960
  store i32 %2, i32* %10, align 4, !dbg !4962
  br label %28, !dbg !4963

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4964
  store i8 %12, i8* %1, align 1, !dbg !4965
  br label %28, !dbg !4966

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4967
  %15 = bitcast i8* %1 to i16*, !dbg !4968
  store i16 %14, i16* %15, align 2, !dbg !4969
  br label %28, !dbg !4970

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4971
  store i32 %2, i32* %17, align 4, !dbg !4972
  br label %28, !dbg !4973

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4974
  %20 = bitcast i8* %1 to i64*, !dbg !4975
  store i64 %19, i64* %20, align 8, !dbg !4976
  br label %28, !dbg !4977

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4978
  %23 = bitcast i8* %1 to i64*, !dbg !4979
  store i64 %22, i64* %23, align 8, !dbg !4980
  br label %28, !dbg !4981

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4982
  store i32 %2, i32* %25, align 4, !dbg !4983
  br label %28, !dbg !4984

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4985
  store i32 %2, i32* %27, align 4, !dbg !4986
  br label %28, !dbg !4987

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4988
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #2 !dbg !4989 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4992, metadata !DIExpression()), !dbg !4993
  %2 = add i32 %0, -65, !dbg !4994
  %3 = icmp ult i32 %2, 26, !dbg !4995
  %4 = zext i1 %3 to i32, !dbg !4995
  ret i32 %4, !dbg !4996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #2 !dbg !4997 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5001, metadata !DIExpression()), !dbg !5002
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5003

2:                                                ; preds = %1
  br label %4, !dbg !5004

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5006

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5007
  ret i32 %5, !dbg !5008
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5009 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5011, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i8* %1, metadata !5012, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i8 1, metadata !5013, metadata !DIExpression()), !dbg !5014
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5015

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5013, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i8* %5, metadata !5012, metadata !DIExpression()), !dbg !5014
  %6 = load i8, i8* %5, align 1, !dbg !5016
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5018

7:                                                ; preds = %4
  br label %11, !dbg !5019

8:                                                ; preds = %4
  br label %11, !dbg !5021

9:                                                ; preds = %4
  br label %11, !dbg !5022

10:                                               ; preds = %4
  br label %11, !dbg !5023

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5024
  %14 = or i24 %13, %12, !dbg !5024
  store i24 %14, i24* %3, align 4, !dbg !5024
  call void @llvm.dbg.value(metadata i8 poison, metadata !5013, metadata !DIExpression()), !dbg !5014
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5012, metadata !DIExpression()), !dbg !5014
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5013, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i8* %15, metadata !5012, metadata !DIExpression()), !dbg !5014
  %17 = load i24, i24* %3, align 4, !dbg !5025
  %18 = and i24 %17, 68, !dbg !5027
  %19 = icmp eq i24 %18, 68, !dbg !5027
  br i1 %19, label %20, label %22, !dbg !5027

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5028
  store i24 %21, i24* %3, align 4, !dbg !5028
  br label %22, !dbg !5030

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5031
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5032 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5034, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i8* %1, metadata !5035, metadata !DIExpression()), !dbg !5038
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5039
  %5 = load i24, i24* %4, align 4, !dbg !5040
  %6 = or i24 %5, 128, !dbg !5040
  store i24 %6, i24* %4, align 4, !dbg !5040
  call void @llvm.dbg.value(metadata i8* %1, metadata !5035, metadata !DIExpression()), !dbg !5038
  %7 = load i8, i8* %1, align 1, !dbg !5041
  %8 = icmp eq i8 %7, 42, !dbg !5043
  br i1 %8, label %9, label %12, !dbg !5044

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5045
  store i24 %10, i24* %4, align 4, !dbg !5045
  call void @llvm.dbg.value(metadata i8* %1, metadata !5035, metadata !DIExpression()), !dbg !5038
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5047
  call void @llvm.dbg.value(metadata i8* %11, metadata !5035, metadata !DIExpression()), !dbg !5038
  store i8* %11, i8** %3, align 4, !dbg !5047
  br label %29, !dbg !5048

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5036, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i8** %3, metadata !5035, metadata !DIExpression(DW_OP_deref)), !dbg !5038
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5049
  call void @llvm.dbg.value(metadata i32 %13, metadata !5037, metadata !DIExpression()), !dbg !5038
  %14 = load i8*, i8** %3, align 4, !dbg !5050
  call void @llvm.dbg.value(metadata i8* %14, metadata !5035, metadata !DIExpression()), !dbg !5038
  %15 = icmp eq i8* %14, %1, !dbg !5052
  br i1 %15, label %29, label %16, !dbg !5053

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5054
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5056
  store i32 %13, i32* %18, align 4, !dbg !5057
  %19 = lshr i32 %13, 31, !dbg !5058
  %20 = lshr i24 %17, 1, !dbg !5059
  %21 = and i24 %20, 1, !dbg !5059
  %22 = zext i24 %21 to i32, !dbg !5059
  %23 = or i32 %19, %22, !dbg !5059
  %24 = trunc i32 %23 to i24, !dbg !5059
  %25 = shl nuw nsw i24 %24, 1, !dbg !5059
  %26 = and i24 %17, -131, !dbg !5059
  %27 = or i24 %26, 128, !dbg !5059
  %28 = or i24 %25, %27, !dbg !5059
  store i24 %28, i24* %4, align 4, !dbg !5059
  br label %29, !dbg !5060

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5038
  ret i8* %30, !dbg !5061
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5062 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5064, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata i8* %1, metadata !5065, metadata !DIExpression()), !dbg !5067
  %4 = load i8, i8* %1, align 1, !dbg !5068
  %5 = icmp eq i8 %4, 46, !dbg !5069
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5070
  %7 = load i24, i24* %6, align 4, !dbg !5071
  %8 = select i1 %5, i24 512, i24 0, !dbg !5071
  %9 = and i24 %7, -513, !dbg !5071
  %10 = or i24 %9, %8, !dbg !5071
  store i24 %10, i24* %6, align 4, !dbg !5071
  br i1 %5, label %11, label %32, !dbg !5072

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5065, metadata !DIExpression()), !dbg !5067
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5073
  call void @llvm.dbg.value(metadata i8* %12, metadata !5065, metadata !DIExpression()), !dbg !5067
  store i8* %12, i8** %3, align 4, !dbg !5073
  %13 = load i8, i8* %12, align 1, !dbg !5074
  %14 = icmp eq i8 %13, 42, !dbg !5076
  br i1 %14, label %15, label %18, !dbg !5077

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5078
  store i24 %16, i24* %6, align 4, !dbg !5078
  call void @llvm.dbg.value(metadata i8* %12, metadata !5065, metadata !DIExpression()), !dbg !5067
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5080
  call void @llvm.dbg.value(metadata i8* %17, metadata !5065, metadata !DIExpression()), !dbg !5067
  store i8* %17, i8** %3, align 4, !dbg !5080
  br label %32, !dbg !5081

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5065, metadata !DIExpression(DW_OP_deref)), !dbg !5067
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5082
  call void @llvm.dbg.value(metadata i32 %19, metadata !5066, metadata !DIExpression()), !dbg !5067
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5083
  store i32 %19, i32* %20, align 4, !dbg !5084
  %21 = lshr i32 %19, 31, !dbg !5085
  %22 = load i24, i24* %6, align 4, !dbg !5086
  %23 = lshr i24 %22, 1, !dbg !5086
  %24 = and i24 %23, 1, !dbg !5086
  %25 = zext i24 %24 to i32, !dbg !5086
  %26 = or i32 %21, %25, !dbg !5086
  %27 = trunc i32 %26 to i24, !dbg !5086
  %28 = shl nuw nsw i24 %27, 1, !dbg !5086
  %29 = and i24 %22, -3, !dbg !5086
  %30 = or i24 %28, %29, !dbg !5086
  store i24 %30, i24* %6, align 4, !dbg !5086
  %31 = load i8*, i8** %3, align 4, !dbg !5087
  call void @llvm.dbg.value(metadata i8* %31, metadata !5065, metadata !DIExpression()), !dbg !5067
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5067
  ret i8* %33, !dbg !5088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5089 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5091, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.value(metadata i8* %1, metadata !5092, metadata !DIExpression()), !dbg !5093
  %3 = load i8, i8* %1, align 1, !dbg !5094
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5095

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5096
  call void @llvm.dbg.value(metadata i8* %5, metadata !5092, metadata !DIExpression()), !dbg !5093
  %6 = load i8, i8* %5, align 1, !dbg !5099
  %7 = icmp eq i8 %6, 104, !dbg !5100
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5101
  %9 = load i24, i24* %8, align 4, !dbg !5101
  %10 = and i24 %9, -30721, !dbg !5101
  br i1 %7, label %11, label %14, !dbg !5102

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5103
  store i24 %12, i24* %8, align 4, !dbg !5103
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5105
  call void @llvm.dbg.value(metadata i8* %13, metadata !5092, metadata !DIExpression()), !dbg !5093
  br label %56, !dbg !5106

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5107
  store i24 %15, i24* %8, align 4, !dbg !5107
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5109
  call void @llvm.dbg.value(metadata i8* %17, metadata !5092, metadata !DIExpression()), !dbg !5093
  %18 = load i8, i8* %17, align 1, !dbg !5111
  %19 = icmp eq i8 %18, 108, !dbg !5112
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5113
  %21 = load i24, i24* %20, align 4, !dbg !5113
  %22 = and i24 %21, -30721, !dbg !5113
  br i1 %19, label %23, label %26, !dbg !5114

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5115
  store i24 %24, i24* %20, align 4, !dbg !5115
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5117
  call void @llvm.dbg.value(metadata i8* %25, metadata !5092, metadata !DIExpression()), !dbg !5093
  br label %56, !dbg !5118

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5119
  store i24 %27, i24* %20, align 4, !dbg !5119
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5121
  %30 = load i24, i24* %29, align 4, !dbg !5122
  %31 = and i24 %30, -30721, !dbg !5122
  %32 = or i24 %31, 10240, !dbg !5122
  store i24 %32, i24* %29, align 4, !dbg !5122
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5123
  call void @llvm.dbg.value(metadata i8* %33, metadata !5092, metadata !DIExpression()), !dbg !5093
  br label %56, !dbg !5124

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5125
  %36 = load i24, i24* %35, align 4, !dbg !5126
  %37 = and i24 %36, -30721, !dbg !5126
  %38 = or i24 %37, 12288, !dbg !5126
  store i24 %38, i24* %35, align 4, !dbg !5126
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5127
  call void @llvm.dbg.value(metadata i8* %39, metadata !5092, metadata !DIExpression()), !dbg !5093
  br label %56, !dbg !5128

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5129
  %42 = load i24, i24* %41, align 4, !dbg !5130
  %43 = and i24 %42, -30721, !dbg !5130
  %44 = or i24 %43, 14336, !dbg !5130
  store i24 %44, i24* %41, align 4, !dbg !5130
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5131
  call void @llvm.dbg.value(metadata i8* %45, metadata !5092, metadata !DIExpression()), !dbg !5093
  br label %56, !dbg !5132

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5133
  %48 = load i24, i24* %47, align 4, !dbg !5134
  %49 = and i24 %48, -30723, !dbg !5134
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5135
  call void @llvm.dbg.value(metadata i8* %50, metadata !5092, metadata !DIExpression()), !dbg !5093
  %51 = or i24 %49, 16386, !dbg !5136
  store i24 %51, i24* %47, align 4, !dbg !5136
  br label %56, !dbg !5137

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5138
  %54 = load i24, i24* %53, align 4, !dbg !5139
  %55 = and i24 %54, -30721, !dbg !5139
  store i24 %55, i24* %53, align 4, !dbg !5139
  br label %56, !dbg !5140

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5092, metadata !DIExpression()), !dbg !5093
  ret i8* %57, !dbg !5141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5142 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5144, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %1, metadata !5145, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8 0, metadata !5146, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %1, metadata !5145, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5149
  %3 = load i8, i8* %1, align 1, !dbg !5150
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5151
  store i8 %3, i8* %4, align 1, !dbg !5152
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5153

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5154

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5155
  %9 = load i24, i24* %8, align 4, !dbg !5155
  %10 = and i24 %9, -458753, !dbg !5155
  %11 = or i24 %10, %7, !dbg !5155
  call void @llvm.dbg.label(metadata !5147), !dbg !5156
  %12 = and i24 %9, 30720, !dbg !5157
  %13 = icmp eq i24 %12, 16384, !dbg !5157
  %14 = zext i1 %13 to i24, !dbg !5159
  %15 = or i24 %11, %14, !dbg !5159
  %16 = icmp eq i8 %3, 99, !dbg !5160
  br i1 %16, label %17, label %43, !dbg !5162

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5163
  %19 = icmp ne i24 %18, 0, !dbg !5163
  call void @llvm.dbg.value(metadata i1 %19, metadata !5146, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5149
  br label %43, !dbg !5165

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5166
  %22 = load i24, i24* %21, align 4, !dbg !5167
  %23 = and i24 %22, -458753, !dbg !5167
  %24 = or i24 %23, 262144, !dbg !5167
  call void @llvm.dbg.value(metadata i8 1, metadata !5146, metadata !DIExpression()), !dbg !5149
  br label %43, !dbg !5168

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5171
  %27 = load i24, i24* %26, align 4, !dbg !5172
  %28 = and i24 %27, -458753, !dbg !5172
  %29 = or i24 %28, 196608, !dbg !5172
  %30 = and i24 %27, 30720, !dbg !5173
  %31 = icmp eq i24 %30, 16384, !dbg !5173
  br label %43, !dbg !5175

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5176
  %34 = load i24, i24* %33, align 4, !dbg !5177
  %35 = and i24 %34, -458753, !dbg !5177
  %36 = or i24 %35, 196608, !dbg !5177
  %37 = and i24 %34, 30720, !dbg !5178
  %38 = icmp ne i24 %37, 0, !dbg !5178
  br label %43, !dbg !5180

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5181
  %41 = load i24, i24* %40, align 4, !dbg !5182
  %42 = or i24 %41, 1, !dbg !5182
  br label %43, !dbg !5183

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5184
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5185
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5186
  call void @llvm.dbg.value(metadata i8* %48, metadata !5145, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8 poison, metadata !5146, metadata !DIExpression()), !dbg !5149
  %49 = lshr i24 %44, 1, !dbg !5184
  %50 = and i24 %49, 1, !dbg !5184
  %51 = zext i24 %50 to i32, !dbg !5184
  %52 = or i32 %51, %47, !dbg !5184
  %53 = trunc i32 %52 to i24, !dbg !5184
  %54 = shl nuw nsw i24 %53, 1, !dbg !5184
  %55 = and i24 %44, -3, !dbg !5184
  %56 = or i24 %54, %55, !dbg !5184
  store i24 %56, i24* %46, align 4, !dbg !5184
  ret i8* %48, !dbg !5187
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5188 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5192, metadata !DIExpression()), !dbg !5195
  %2 = load i8*, i8** %0, align 4, !dbg !5196
  call void @llvm.dbg.value(metadata i8* %2, metadata !5193, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i32 0, metadata !5194, metadata !DIExpression()), !dbg !5195
  %3 = load i8, i8* %2, align 1, !dbg !5197
  %4 = zext i8 %3 to i32, !dbg !5198
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5199
  %6 = icmp eq i32 %5, 0, !dbg !5200
  br i1 %6, label %19, label %7, !dbg !5200

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5194, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i8* %10, metadata !5193, metadata !DIExpression()), !dbg !5195
  %11 = mul i32 %9, 10, !dbg !5201
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5203
  call void @llvm.dbg.value(metadata i8* %12, metadata !5193, metadata !DIExpression()), !dbg !5195
  %13 = add i32 %11, -48, !dbg !5204
  %14 = add i32 %13, %8, !dbg !5205
  call void @llvm.dbg.value(metadata i32 %14, metadata !5194, metadata !DIExpression()), !dbg !5195
  %15 = load i8, i8* %12, align 1, !dbg !5197
  %16 = zext i8 %15 to i32, !dbg !5198
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5199
  %18 = icmp eq i32 %17, 0, !dbg !5200
  br i1 %18, label %19, label %7, !dbg !5200, !llvm.loop !5206

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5195
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5195
  store i8* %20, i8** %0, align 4, !dbg !5208
  ret i32 %21, !dbg !5209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #2 !dbg !5210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5212, metadata !DIExpression()), !dbg !5213
  %2 = add i32 %0, -48, !dbg !5214
  %3 = icmp ult i32 %2, 10, !dbg !5215
  %4 = zext i1 %3 to i32, !dbg !5215
  ret i32 %4, !dbg !5216
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5217 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5222, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata i32 %1, metadata !5223, metadata !DIExpression()), !dbg !5224
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5225, !srcloc !5227
  ret void, !dbg !5228
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5229 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5231, metadata !DIExpression()), !dbg !5239
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5240
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5240
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5232, metadata !DIExpression()), !dbg !5241
  call void @llvm.va_start(i8* nonnull %3), !dbg !5242
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5243
  %5 = load i32, i32* %4, align 4, !dbg !5243
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5243
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5243
  call void @llvm.va_end(i8* nonnull %3), !dbg !5244
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5245
  ret void, !dbg !5245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5246 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #23, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #23, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #23, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #23, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5922, !srcloc !5923
  ret void, !dbg !5924
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5925 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5927, metadata !DIExpression()), !dbg !5929
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !5930
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !5931
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5932, !srcloc !5941
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5932
  call void @llvm.dbg.value(metadata i32 %3, metadata !5938, metadata !DIExpression()) #23, !dbg !5942
  call void @llvm.dbg.value(metadata i32 undef, metadata !5939, metadata !DIExpression()) #23, !dbg !5942
  call void @llvm.dbg.value(metadata i32 %3, metadata !5928, metadata !DIExpression()), !dbg !5929
  call void @llvm.dbg.value(metadata i32 %3, metadata !5943, metadata !DIExpression()) #23, !dbg !5948
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5950, !srcloc !5951
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5952
  ret i32 0, !dbg !5953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !5954 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5956
  %2 = or i32 %1, 512, !dbg !5956
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5956
  ret void, !dbg !5957
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !5958 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5959
  %2 = or i32 %1, 1024, !dbg !5959
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5959
  ret void, !dbg !5960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #2 !dbg !5961 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5963, metadata !DIExpression()), !dbg !5964
  ret i32 0, !dbg !5965
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5966 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5969, metadata !DIExpression()), !dbg !5977
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5978
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5978
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5970, metadata !DIExpression()), !dbg !5979
  call void @llvm.va_start(i8* nonnull %3), !dbg !5980
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5981
  %5 = load i32, i32* %4, align 4, !dbg !5981
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5981
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5981
  call void @llvm.va_end(i8* nonnull %3), !dbg !5982
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5983
  ret void, !dbg !5983
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5984 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5989, metadata !DIExpression()), !dbg !5990
  call void @llvm.dbg.value(metadata i8* %0, metadata !5988, metadata !DIExpression()), !dbg !5990
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !5991
  ret void, !dbg !5992
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5997, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i8* %1, metadata !5998, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i32 %2, metadata !5999, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i8* %1, metadata !6000, metadata !DIExpression()), !dbg !6001
  %4 = icmp eq i32 %2, 0, !dbg !6002
  br i1 %4, label %14, label %5, !dbg !6003

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6001
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6003

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6000, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i32 %10, metadata !5999, metadata !DIExpression()), !dbg !6001
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #25, !dbg !6004
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6006
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6007
  call void @llvm.dbg.value(metadata i32 %11, metadata !5999, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i8* %12, metadata !6000, metadata !DIExpression()), !dbg !6001
  br i1 %13, label %14, label %8, !dbg !6007, !llvm.loop !6008

14:                                               ; preds = %8, %3
  ret void, !dbg !6010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #2 !dbg !6011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6016, metadata !DIExpression()), !dbg !6017
  %2 = add i32 %0, -1, !dbg !6018
  %3 = icmp ult i32 %2, 4, !dbg !6018
  %4 = shl i32 %2, 3, !dbg !6018
  %5 = lshr i32 1145657157, %4, !dbg !6018
  %6 = trunc i32 %5 to i8, !dbg !6018
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6018
  ret i8 %7, !dbg !6019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6020 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6024, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.value(metadata i32 %1, metadata !6025, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.value(metadata i32 0, metadata !6026, metadata !DIExpression()), !dbg !6036
  br label %4, !dbg !6037

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #25, !dbg !6038
  call void @llvm.dbg.value(metadata i32 0, metadata !6028, metadata !DIExpression()), !dbg !6039
  br label %16, !dbg !6040

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6026, metadata !DIExpression()), !dbg !6036
  %6 = icmp ult i32 %5, %1, !dbg !6041
  br i1 %6, label %7, label %11, !dbg !6045

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6046
  %9 = load i8, i8* %8, align 1, !dbg !6046
  %10 = zext i8 %9 to i32, !dbg !6048
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #25, !dbg !6049
  br label %12, !dbg !6050

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #25, !dbg !6051
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6053
  call void @llvm.dbg.value(metadata i32 %13, metadata !6026, metadata !DIExpression()), !dbg !6036
  %14 = icmp eq i32 %13, 8, !dbg !6054
  br i1 %14, label %3, label %4, !dbg !6037, !llvm.loop !6055

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #25, !dbg !6057
  ret void, !dbg !6058

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6028, metadata !DIExpression()), !dbg !6039
  %18 = icmp ult i32 %17, %1, !dbg !6059
  br i1 %18, label %19, label %26, !dbg !6060

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6061
  %21 = load i8, i8* %20, align 1, !dbg !6061
  call void @llvm.dbg.value(metadata i8 %21, metadata !6030, metadata !DIExpression()), !dbg !6062
  %22 = zext i8 %21 to i32, !dbg !6063
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6064
  %24 = icmp eq i32 %23, 0, !dbg !6065
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6064
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #25, !dbg !6066
  br label %27, !dbg !6067

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #25, !dbg !6068
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6070
  call void @llvm.dbg.value(metadata i32 %28, metadata !6028, metadata !DIExpression()), !dbg !6039
  %29 = icmp eq i32 %28, 8, !dbg !6071
  br i1 %29, label %15, label %16, !dbg !6040, !llvm.loop !6072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #2 !dbg !6074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6076, metadata !DIExpression()), !dbg !6077
  %2 = add i32 %0, -32, !dbg !6078
  %3 = icmp ult i32 %2, 95, !dbg !6078
  %4 = zext i1 %3 to i32, !dbg !6078
  ret i32 %4, !dbg !6079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6129, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6130, metadata !DIExpression()), !dbg !6131
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6132
  br i1 %3, label %5, label %4, !dbg !6134

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6135
  br label %5, !dbg !6137

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6138
  ret void, !dbg !6139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6140 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6144, metadata !DIExpression()), !dbg !6145
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6146
  %3 = load i32, i32* %2, align 4, !dbg !6146
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6146
  %5 = load i32, i32* %4, align 4, !dbg !6146
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6146
  %7 = load i32, i32* %6, align 4, !dbg !6146
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6146
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6151
  %9 = load i32, i32* %8, align 4, !dbg !6151
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6151
  %11 = load i32, i32* %10, align 4, !dbg !6151
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6151
  %13 = load i32, i32* %12, align 4, !dbg !6151
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6151
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6156
  %15 = load i32, i32* %14, align 4, !dbg !6156
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6156
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6161
  %17 = load i32, i32* %16, align 4, !dbg !6161
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6161
  ret void, !dbg !6166
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6167 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6184, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6185, metadata !DIExpression()), !dbg !6187
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6188
  %4 = load i32, i32* %3, align 4, !dbg !6188
  call void @llvm.dbg.value(metadata i32 %4, metadata !6186, metadata !DIExpression()), !dbg !6187
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6189
  ret void, !dbg !6190
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6191 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6193, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.value(metadata i8* %0, metadata !6194, metadata !DIExpression()), !dbg !6196
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6197
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6197
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6195, metadata !DIExpression()), !dbg !6198
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6198
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6199
  %5 = bitcast i8* %4 to i32*, !dbg !6199
  %6 = load i32, i32* %5, align 4, !dbg !6199
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6200
  store i32 %6, i32* %7, align 4, !dbg !6201
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6202
  unreachable, !dbg !6203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6207, metadata !DIExpression()), !dbg !6208
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6209
  ret void, !dbg !6210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6215, metadata !DIExpression()), !dbg !6216
  %2 = icmp sgt i32 %0, -1, !dbg !6217
  br i1 %2, label %3, label %8, !dbg !6219

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6220, !srcloc !6222
  %4 = and i32 %0, 31, !dbg !6223
  %5 = shl nuw i32 1, %4, !dbg !6224
  %6 = lshr i32 %0, 5, !dbg !6225
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6226
  store volatile i32 %5, i32* %7, align 4, !dbg !6227
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6228, !srcloc !6229
  br label %8, !dbg !6230

8:                                                ; preds = %3, %1
  ret void, !dbg !6231
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6234, metadata !DIExpression()), !dbg !6235
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6236
  ret void, !dbg !6237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6240, metadata !DIExpression()), !dbg !6241
  %2 = icmp sgt i32 %0, -1, !dbg !6242
  br i1 %2, label %3, label %8, !dbg !6244

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6245
  %5 = shl nuw i32 1, %4, !dbg !6247
  %6 = lshr i32 %0, 5, !dbg !6248
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6249
  store volatile i32 %5, i32* %7, align 4, !dbg !6250
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6251, !srcloc !6255
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6256, !srcloc !6259
  br label %8, !dbg !6260

8:                                                ; preds = %3, %1
  ret void, !dbg !6261
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6266, metadata !DIExpression()), !dbg !6267
  %2 = lshr i32 %0, 5, !dbg !6268
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6269
  %4 = load volatile i32, i32* %3, align 4, !dbg !6269
  %5 = and i32 %0, 31, !dbg !6270
  %6 = shl nuw i32 1, %5, !dbg !6270
  %7 = and i32 %4, %6, !dbg !6271
  ret i32 %7, !dbg !6272
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6277, metadata !DIExpression()), !dbg !6280
  call void @llvm.dbg.value(metadata i32 %1, metadata !6278, metadata !DIExpression()), !dbg !6280
  call void @llvm.dbg.value(metadata i32 %2, metadata !6279, metadata !DIExpression()), !dbg !6280
  %4 = add i32 %1, 1, !dbg !6281
  call void @llvm.dbg.value(metadata i32 %4, metadata !6278, metadata !DIExpression()), !dbg !6280
  %5 = icmp ult i32 %4, 16, !dbg !6284
  br i1 %5, label %7, label %6, !dbg !6287

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6288
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6288
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6288
  unreachable, !dbg !6288

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6290
  ret void, !dbg !6291
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6296, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata i32 %1, metadata !6297, metadata !DIExpression()), !dbg !6298
  %3 = trunc i32 %1 to i8, !dbg !6299
  %4 = shl i8 %3, 4, !dbg !6299
  %5 = and i32 %0, 15, !dbg !6301
  %6 = add nsw i32 %5, -4, !dbg !6301
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6301
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6301
  %9 = icmp slt i32 %0, 0, !dbg !6301
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6301
  store volatile i8 %4, i8* %10, align 1, !dbg !6299
  ret void, !dbg !6302
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6303 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6305, metadata !DIExpression()), !dbg !6306
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6307
  ret void, !dbg !6308
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6309 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6311
  tail call void @z_arm_int_exit() #25, !dbg !6312
  ret void, !dbg !6313
}

; Function Attrs: optsize
declare !dbg !6314 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6315 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6317 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6319
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6320
  tail call void @z_bss_zero() #25, !dbg !6321
  tail call void @z_data_copy() #25, !dbg !6322
  tail call void @z_arm_interrupt_init() #25, !dbg !6323
  tail call void @z_cstart() #27, !dbg !6324
  unreachable, !dbg !6324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6325 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6326
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6327, !srcloc !6330
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6331, !srcloc !6334
  ret void, !dbg !6335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6336 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6337
  %2 = and i32 %1, -15728641, !dbg !6337
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6337
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6338, !srcloc !6345
  call void @llvm.dbg.value(metadata i32 %3, metadata !6343, metadata !DIExpression()) #23, !dbg !6346
  %4 = and i32 %3, -5, !dbg !6347
  call void @llvm.dbg.value(metadata i32 %4, metadata !6348, metadata !DIExpression()) #23, !dbg !6353
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6355, !srcloc !6356
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6357, !srcloc !6334
  ret void, !dbg !6359
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6363, metadata !DIExpression()), !dbg !6364
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6365
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6366
  store i32 %0, i32* %3, align 4, !dbg !6367
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6368
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6369
  store i32 %4, i32* %5, align 4, !dbg !6370
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6371
  %7 = or i32 %6, 268435456, !dbg !6371
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6371
  call void @llvm.dbg.value(metadata i32 0, metadata !6372, metadata !DIExpression()) #23, !dbg !6375
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6377, !srcloc !6378
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6379
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6380
  %10 = load i32, i32* %9, align 4, !dbg !6380
  ret i32 %10, !dbg !6381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6382 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6495, metadata !DIExpression()), !dbg !6503
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6496, metadata !DIExpression()), !dbg !6503
  call void @llvm.dbg.value(metadata i8* %2, metadata !6497, metadata !DIExpression()), !dbg !6503
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6498, metadata !DIExpression()), !dbg !6503
  call void @llvm.dbg.value(metadata i8* %4, metadata !6499, metadata !DIExpression()), !dbg !6503
  call void @llvm.dbg.value(metadata i8* %5, metadata !6500, metadata !DIExpression()), !dbg !6503
  call void @llvm.dbg.value(metadata i8* %6, metadata !6501, metadata !DIExpression()), !dbg !6503
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6504
  call void @llvm.dbg.value(metadata i8* %8, metadata !6502, metadata !DIExpression()), !dbg !6503
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6505
  %10 = bitcast i8* %9 to i32*, !dbg !6505
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6506
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6507
  %12 = bitcast i8* %8 to i32*, !dbg !6508
  store i32 %11, i32* %12, align 4, !dbg !6509
  %13 = ptrtoint i8* %4 to i32, !dbg !6510
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6511
  %15 = bitcast i8* %14 to i32*, !dbg !6511
  store i32 %13, i32* %15, align 4, !dbg !6512
  %16 = ptrtoint i8* %5 to i32, !dbg !6513
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6514
  %18 = bitcast i8* %17 to i32*, !dbg !6514
  store i32 %16, i32* %18, align 4, !dbg !6515
  %19 = ptrtoint i8* %6 to i32, !dbg !6516
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6517
  %21 = bitcast i8* %20 to i32*, !dbg !6517
  store i32 %19, i32* %21, align 4, !dbg !6518
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6519
  %23 = bitcast i8* %22 to i32*, !dbg !6519
  store i32 16777216, i32* %23, align 4, !dbg !6520
  %24 = ptrtoint i8* %8 to i32, !dbg !6521
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6522
  store i32 %24, i32* %25, align 8, !dbg !6523
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6524
  store i32 0, i32* %26, align 4, !dbg !6525
  ret void, !dbg !6526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6532, metadata !DIExpression()), !dbg !6538
  call void @llvm.dbg.value(metadata i32 %1, metadata !6533, metadata !DIExpression()), !dbg !6538
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6539
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6534, metadata !DIExpression()), !dbg !6538
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6540
  br i1 %4, label %19, label %5, !dbg !6542

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6537, metadata !DIExpression()), !dbg !6538
  %6 = icmp eq i32 %0, -22, !dbg !6543
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6543
  %8 = load i32, i32* %7, align 4, !dbg !6543
  br i1 %6, label %16, label %9, !dbg !6545

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6543
  %11 = icmp ule i32 %10, %0, !dbg !6543
  %12 = icmp ugt i32 %8, %0, !dbg !6543
  %13 = and i1 %12, %11, !dbg !6543
  %14 = icmp ugt i32 %8, %1, !dbg !6543
  %15 = and i1 %14, %13, !dbg !6543
  br i1 %15, label %18, label %19, !dbg !6543

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6543
  br i1 %17, label %18, label %19, !dbg !6545

18:                                               ; preds = %9, %16
  br label %19, !dbg !6546

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6538
  ret i32 %20, !dbg !6548
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6549 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6553, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.value(metadata i8* %1, metadata !6554, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6555, metadata !DIExpression()), !dbg !6556
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6557
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6558
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6559, !srcloc !6560
  unreachable, !dbg !6561
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6562 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6580, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i32 %1, metadata !6581, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i32 %2, metadata !6582, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6583, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i32 0, metadata !6584, metadata !DIExpression()), !dbg !6590
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6591
  call void @llvm.dbg.value(metadata i32 %8, metadata !6585, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6590
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6592
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6592
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6593
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6593
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6589, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata i32 0, metadata !6595, metadata !DIExpression()) #23, !dbg !6598
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6600, !srcloc !6601
  call void @llvm.dbg.value(metadata i8* %6, metadata !6587, metadata !DIExpression(DW_OP_deref)), !dbg !6590
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6602
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6588, metadata !DIExpression()), !dbg !6590
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6603
  br i1 %11, label %12, label %13, !dbg !6606

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #25, !dbg !6607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6607
  unreachable, !dbg !6607

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6609
  call void @llvm.dbg.value(metadata i32 %14, metadata !6585, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i8* %5, metadata !6586, metadata !DIExpression(DW_OP_deref)), !dbg !6590
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6610
  call void @llvm.dbg.value(metadata i32 %15, metadata !6584, metadata !DIExpression()), !dbg !6590
  %16 = load i8, i8* %5, align 1, !dbg !6611, !range !6613
  call void @llvm.dbg.value(metadata i8 %16, metadata !6586, metadata !DIExpression()), !dbg !6590
  %17 = icmp eq i8 %16, 0, !dbg !6611
  br i1 %17, label %18, label %35, !dbg !6614

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6615
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6616
  %21 = load i8, i8* %6, align 1, !dbg !6617, !range !6613
  call void @llvm.dbg.value(metadata i8 %21, metadata !6587, metadata !DIExpression()), !dbg !6590
  %22 = icmp eq i8 %21, 0, !dbg !6617
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6619
  %24 = load i32, i32* %23, align 4, !dbg !6619
  br i1 %22, label %30, label %25, !dbg !6620

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6621
  %27 = icmp eq i32 %26, 0, !dbg !6624
  br i1 %27, label %28, label %34, !dbg !6625

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6626
  br label %32, !dbg !6628

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6629
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6619
  br label %34, !dbg !6631

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6631
  br label %35, !dbg !6632

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6632
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6632
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6632
  ret void, !dbg !6632
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6638, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i32 %1, metadata !6639, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i32 %2, metadata !6640, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %3, metadata !6641, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8 0, metadata !6642, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6643, metadata !DIExpression()), !dbg !6644
  store i8 0, i8* %3, align 1, !dbg !6645
  %5 = icmp ugt i32 %2, -16777217, !dbg !6646
  br i1 %5, label %6, label %17, !dbg !6648

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6649
  %8 = icmp eq i32 %7, 8, !dbg !6649
  br i1 %8, label %9, label %10, !dbg !6649

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !6651
  br label %17, !dbg !6657

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6658
  %12 = icmp eq i32 %11, 0, !dbg !6658
  br i1 %12, label %13, label %14, !dbg !6659

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6643, metadata !DIExpression()), !dbg !6644
  store i8 1, i8* %3, align 1, !dbg !6662
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6644
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6643, metadata !DIExpression()), !dbg !6644
  br label %17, !dbg !6665

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6644
  ret %struct.__esf* %18, !dbg !6666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6667 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6671, metadata !DIExpression()), !dbg !6675
  call void @llvm.dbg.value(metadata i32 %1, metadata !6672, metadata !DIExpression()), !dbg !6675
  call void @llvm.dbg.value(metadata i8* %2, metadata !6673, metadata !DIExpression()), !dbg !6675
  call void @llvm.dbg.value(metadata i32 0, metadata !6674, metadata !DIExpression()), !dbg !6675
  store i8 0, i8* %2, align 1, !dbg !6676
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6677

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6678
  call void @llvm.dbg.value(metadata i32 %5, metadata !6674, metadata !DIExpression()), !dbg !6675
  br label %12, !dbg !6680

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6681
  call void @llvm.dbg.value(metadata i32 %7, metadata !6674, metadata !DIExpression()), !dbg !6675
  br label %12, !dbg !6682

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6683
  call void @llvm.dbg.value(metadata i32 0, metadata !6674, metadata !DIExpression()), !dbg !6675
  br label %12, !dbg !6684

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6685
  call void @llvm.dbg.value(metadata i32 0, metadata !6674, metadata !DIExpression()), !dbg !6675
  br label %12, !dbg !6686

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6687
  br label %12, !dbg !6688

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6689
  br label %12, !dbg !6690

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6675
  call void @llvm.dbg.value(metadata i32 %13, metadata !6674, metadata !DIExpression()), !dbg !6675
  ret i32 %13, !dbg !6691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6692 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6696, metadata !DIExpression()), !dbg !6699
  call void @llvm.dbg.value(metadata i8* %1, metadata !6697, metadata !DIExpression()), !dbg !6699
  call void @llvm.dbg.value(metadata i32 0, metadata !6698, metadata !DIExpression()), !dbg !6699
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !6700
  store i8 0, i8* %1, align 1, !dbg !6705
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6706
  %4 = and i32 %3, 2, !dbg !6708
  %5 = icmp eq i32 %4, 0, !dbg !6709
  br i1 %5, label %7, label %6, !dbg !6710

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !6711
  br label %38, !dbg !6717

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6718
  %9 = icmp sgt i32 %8, -1, !dbg !6720
  br i1 %9, label %11, label %10, !dbg !6721

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6722
  br label %38, !dbg !6728

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6729
  %13 = and i32 %12, 1073741824, !dbg !6731
  %14 = icmp eq i32 %13, 0, !dbg !6732
  br i1 %14, label %37, label %15, !dbg !6733

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6734
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6740
  br i1 %16, label %17, label %21, !dbg !6742

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6743
  %19 = load i32, i32* %18, align 4, !dbg !6743
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6743
  %20 = load i32, i32* %18, align 4, !dbg !6749
  call void @llvm.dbg.value(metadata i32 %20, metadata !6698, metadata !DIExpression()), !dbg !6699
  br label %38, !dbg !6750

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6751
  %23 = and i32 %22, 255, !dbg !6753
  %24 = icmp eq i32 %23, 0, !dbg !6754
  br i1 %24, label %27, label %25, !dbg !6755

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6756
  call void @llvm.dbg.value(metadata i32 %26, metadata !6698, metadata !DIExpression()), !dbg !6699
  br label %38, !dbg !6758

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6759
  %29 = and i32 %28, 65280, !dbg !6761
  %30 = icmp eq i32 %29, 0, !dbg !6762
  br i1 %30, label %32, label %31, !dbg !6763

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6764
  call void @llvm.dbg.value(metadata i32 0, metadata !6698, metadata !DIExpression()), !dbg !6699
  br label %38, !dbg !6766

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6767
  %34 = icmp ult i32 %33, 65536, !dbg !6769
  br i1 %34, label %36, label %35, !dbg !6770

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6771
  call void @llvm.dbg.value(metadata i32 0, metadata !6698, metadata !DIExpression()), !dbg !6699
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6773
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #25, !dbg !6773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6773
  unreachable, !dbg !6773

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6778
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #25, !dbg !6778
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6778
  unreachable, !dbg !6778

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6699
  call void @llvm.dbg.value(metadata i32 %39, metadata !6698, metadata !DIExpression()), !dbg !6699
  ret i32 %39, !dbg !6783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6784 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6786, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata i32 %1, metadata !6787, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata i8* %2, metadata !6788, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata i32 0, metadata !6789, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata i32 -22, metadata !6790, metadata !DIExpression()), !dbg !6799
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #25, !dbg !6800
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6805
  %5 = and i32 %4, 16, !dbg !6807
  %6 = icmp eq i32 %5, 0, !dbg !6808
  br i1 %6, label %8, label %7, !dbg !6809

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6810
  br label %8, !dbg !6816

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6817
  %10 = and i32 %9, 8, !dbg !6819
  %11 = icmp eq i32 %10, 0, !dbg !6820
  br i1 %11, label %13, label %12, !dbg !6821

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6822
  br label %13, !dbg !6828

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6829
  %15 = and i32 %14, 2, !dbg !6830
  %16 = icmp eq i32 %15, 0, !dbg !6831
  br i1 %16, label %27, label %17, !dbg !6832

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6833
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6838
  call void @llvm.dbg.value(metadata i32 %18, metadata !6791, metadata !DIExpression()), !dbg !6839
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6840
  %20 = and i32 %19, 128, !dbg !6842
  %21 = icmp eq i32 %20, 0, !dbg !6843
  br i1 %21, label %27, label %22, !dbg !6844

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6790, metadata !DIExpression()), !dbg !6799
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6845
  %23 = icmp eq i32 %1, 0, !dbg !6851
  br i1 %23, label %27, label %24, !dbg !6853

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6854
  %26 = and i32 %25, -129, !dbg !6854
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6854
  br label %27, !dbg !6856

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6799
  call void @llvm.dbg.value(metadata i32 %28, metadata !6790, metadata !DIExpression()), !dbg !6799
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6857
  %30 = and i32 %29, 1, !dbg !6859
  %31 = icmp eq i32 %30, 0, !dbg !6860
  br i1 %31, label %33, label %32, !dbg !6861

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6862
  br label %33, !dbg !6868

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6869
  %35 = and i32 %34, 32, !dbg !6871
  %36 = icmp eq i32 %35, 0, !dbg !6872
  br i1 %36, label %38, label %37, !dbg !6873

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !6874
  br label %38, !dbg !6880

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6881
  %40 = and i32 %39, 16, !dbg !6882
  %41 = icmp eq i32 %40, 0, !dbg !6882
  br i1 %41, label %42, label %46, !dbg !6883

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6884
  %44 = and i32 %43, 2, !dbg !6885
  %45 = icmp eq i32 %44, 0, !dbg !6885
  br i1 %45, label %60, label %46, !dbg !6886

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6887
  %48 = and i32 %47, 2048, !dbg !6888
  %49 = icmp eq i32 %48, 0, !dbg !6888
  br i1 %49, label %60, label %50, !dbg !6889

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6890
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !6891
  call void @llvm.dbg.value(metadata i32 %52, metadata !6794, metadata !DIExpression()), !dbg !6892
  %53 = icmp eq i32 %52, 0, !dbg !6893
  br i1 %53, label %55, label %54, !dbg !6895

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6896, metadata !DIExpression()) #23, !dbg !6899
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6902, !srcloc !6903
  call void @llvm.dbg.value(metadata i32 2, metadata !6789, metadata !DIExpression()), !dbg !6799
  br label %60, !dbg !6904

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6905
  %57 = and i32 %56, 16, !dbg !6905
  %58 = icmp eq i32 %57, 0, !dbg !6905
  br i1 %58, label %60, label %59, !dbg !6909

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6910
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !6910
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6910
  unreachable, !dbg !6910

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6799
  call void @llvm.dbg.value(metadata i32 %61, metadata !6789, metadata !DIExpression()), !dbg !6799
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6912
  %63 = and i32 %62, 32, !dbg !6914
  %64 = icmp eq i32 %63, 0, !dbg !6915
  br i1 %64, label %68, label %65, !dbg !6916

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6917
  %67 = and i32 %66, -8193, !dbg !6917
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6917
  br label %68, !dbg !6919

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6920
  %70 = or i32 %69, 255, !dbg !6920
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6920
  store i8 0, i8* %2, align 1, !dbg !6921
  ret i32 %61, !dbg !6922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6923 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6927, metadata !DIExpression()), !dbg !6934
  call void @llvm.dbg.value(metadata i32 %0, metadata !6928, metadata !DIExpression()), !dbg !6934
  call void @llvm.dbg.value(metadata i8* %1, metadata !6929, metadata !DIExpression()), !dbg !6934
  call void @llvm.dbg.value(metadata i32 0, metadata !6930, metadata !DIExpression()), !dbg !6934
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #25, !dbg !6935
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6940
  %4 = and i32 %3, 4096, !dbg !6942
  %5 = icmp eq i32 %4, 0, !dbg !6942
  br i1 %5, label %7, label %6, !dbg !6943

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !6944
  br label %7, !dbg !6950

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6951
  %9 = and i32 %8, 2048, !dbg !6953
  %10 = icmp eq i32 %9, 0, !dbg !6953
  br i1 %10, label %12, label %11, !dbg !6954

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6955
  br label %12, !dbg !6961

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6962
  %14 = and i32 %13, 512, !dbg !6963
  %15 = icmp eq i32 %14, 0, !dbg !6963
  br i1 %15, label %26, label %16, !dbg !6964

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !6965
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6970
  call void @llvm.dbg.value(metadata i32 %17, metadata !6931, metadata !DIExpression()), !dbg !6971
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6972
  %19 = and i32 %18, 32768, !dbg !6974
  %20 = icmp eq i32 %19, 0, !dbg !6975
  br i1 %20, label %26, label %21, !dbg !6976

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6977
  %22 = icmp eq i32 %0, 0, !dbg !6983
  br i1 %22, label %26, label %23, !dbg !6985

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6986
  %25 = and i32 %24, -32769, !dbg !6986
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6986
  br label %26, !dbg !6988

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6989
  %28 = and i32 %27, 1024, !dbg !6991
  %29 = icmp eq i32 %28, 0, !dbg !6991
  br i1 %29, label %31, label %30, !dbg !6992

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !6993
  br label %31, !dbg !6999

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7000
  %33 = and i32 %32, 256, !dbg !7002
  %34 = icmp eq i32 %33, 0, !dbg !7003
  br i1 %34, label %35, label %39, !dbg !7004

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7005
  %37 = and i32 %36, 8192, !dbg !7007
  %38 = icmp eq i32 %37, 0, !dbg !7007
  br i1 %38, label %41, label %39, !dbg !7008

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7009
  br label %41, !dbg !7010

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7010
  %43 = or i32 %42, 65280, !dbg !7010
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7010
  store i8 0, i8* %1, align 1, !dbg !7011
  ret void, !dbg !7012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7013 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7019, metadata !DIExpression()), !dbg !7021
  call void @llvm.dbg.value(metadata i32 0, metadata !7020, metadata !DIExpression()), !dbg !7021
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7022
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7027
  %2 = and i32 %1, 33554432, !dbg !7029
  %3 = icmp eq i32 %2, 0, !dbg !7030
  br i1 %3, label %5, label %4, !dbg !7031

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #25, !dbg !7032
  br label %5, !dbg !7038

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7039
  %7 = and i32 %6, 16777216, !dbg !7041
  %8 = icmp eq i32 %7, 0, !dbg !7042
  br i1 %8, label %10, label %9, !dbg !7043

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7044
  br label %10, !dbg !7050

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7051
  %12 = and i32 %11, 524288, !dbg !7053
  %13 = icmp eq i32 %12, 0, !dbg !7054
  br i1 %13, label %15, label %14, !dbg !7055

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7056
  br label %15, !dbg !7062

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7063
  %17 = and i32 %16, 262144, !dbg !7065
  %18 = icmp eq i32 %17, 0, !dbg !7066
  br i1 %18, label %20, label %19, !dbg !7067

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7068
  br label %20, !dbg !7074

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7075
  %22 = and i32 %21, 131072, !dbg !7077
  %23 = icmp eq i32 %22, 0, !dbg !7078
  br i1 %23, label %25, label %24, !dbg !7079

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7080
  br label %25, !dbg !7086

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7087
  %27 = and i32 %26, 65536, !dbg !7089
  %28 = icmp eq i32 %27, 0, !dbg !7090
  br i1 %28, label %30, label %29, !dbg !7091

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7092
  br label %30, !dbg !7098

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7099
  %32 = or i32 %31, -65536, !dbg !7099
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7099
  ret void, !dbg !7100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7101 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7105, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.value(metadata i8* %0, metadata !7106, metadata !DIExpression()), !dbg !7107
  store i8 0, i8* %0, align 1, !dbg !7108
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7109
  ret void, !dbg !7114
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7115 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7119, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.value(metadata i32 %0, metadata !7120, metadata !DIExpression()), !dbg !7121
  %2 = icmp slt i32 %0, 16, !dbg !7122
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7122
  %4 = add nsw i32 %0, -16, !dbg !7122
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7122
  ret void, !dbg !7127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7128 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7132, metadata !DIExpression()), !dbg !7135
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7136
  %3 = load i32, i32* %2, align 4, !dbg !7136
  %4 = inttoptr i32 %3 to i16*, !dbg !7137
  call void @llvm.dbg.value(metadata i16* %4, metadata !7133, metadata !DIExpression()), !dbg !7135
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7138
  %6 = or i32 %5, 256, !dbg !7138
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7138
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7139, !srcloc !7142
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7143, !srcloc !7146
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7147
  %8 = load i16, i16* %7, align 2, !dbg !7148
  call void @llvm.dbg.value(metadata i16 %8, metadata !7134, metadata !DIExpression()), !dbg !7135
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7149
  %10 = and i32 %9, -257, !dbg !7149
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7149
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7150, !srcloc !7142
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7152, !srcloc !7146
  %11 = icmp eq i16 %8, -8446, !dbg !7154
  ret i1 %11, !dbg !7156
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7157 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7158
  %2 = or i32 %1, 16, !dbg !7158
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7158
  ret void, !dbg !7159
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7160 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7163, metadata !DIExpression()), !dbg !7164
  br label %1, !dbg !7165

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7163, metadata !DIExpression()), !dbg !7164
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #24, !dbg !7167
  %3 = add nuw nsw i32 %2, 1, !dbg !7170
  call void @llvm.dbg.value(metadata i32 %3, metadata !7163, metadata !DIExpression()), !dbg !7164
  %4 = icmp eq i32 %3, 82, !dbg !7171
  br i1 %4, label %5, label %1, !dbg !7165, !llvm.loop !7172

5:                                                ; preds = %1
  ret void, !dbg !7174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #14 !dbg !7175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7177, metadata !DIExpression()), !dbg !7179
  call void @llvm.dbg.value(metadata i32 1, metadata !7178, metadata !DIExpression()), !dbg !7179
  %2 = and i32 %0, 15, !dbg !7180
  %3 = add nsw i32 %2, -4, !dbg !7180
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7180
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7180
  %6 = icmp slt i32 %0, 0, !dbg !7180
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7180
  store volatile i8 16, i8* %7, align 1, !dbg !7181
  ret void, !dbg !7183
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7184 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7293, metadata !DIExpression()), !dbg !7294
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7295
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7297
  br i1 %3, label %4, label %12, !dbg !7298

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7299, !srcloc !7311
  call void @llvm.dbg.value(metadata i32 %5, metadata !7302, metadata !DIExpression()) #23, !dbg !7312
  %6 = icmp eq i32 %5, 0, !dbg !7313
  br i1 %6, label %12, label %7, !dbg !7314

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7315
  %9 = or i32 %8, 268435456, !dbg !7315
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7315
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7317
  %11 = and i32 %10, -32769, !dbg !7317
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7317
  br label %12, !dbg !7318

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7319
  ret void, !dbg !7320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7321 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7322
  ret void, !dbg !7323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !429, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8 0, metadata !430, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i32 64, metadata !432, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i32 undef, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7324
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7325
  %3 = load i32, i32* %2, align 4, !dbg !7325
  call void @llvm.dbg.value(metadata i32 %3, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7324
  %4 = add i32 %3, -64, !dbg !7327
  call void @llvm.dbg.value(metadata i32 %4, metadata !431, metadata !DIExpression()), !dbg !7324
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7328
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7329
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7330
  call void @llvm.dbg.value(metadata i8 1, metadata !430, metadata !DIExpression()), !dbg !7324
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7331
  ret void, !dbg !7332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7333 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7334
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7335, !srcloc !7338
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7339, !srcloc !7342
  ret void, !dbg !7343
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7344 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7345, !srcloc !7348
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7349
  ret void, !dbg !7350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7351 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7366, metadata !DIExpression()), !dbg !7370
  call void @llvm.dbg.value(metadata i8 %1, metadata !7367, metadata !DIExpression()), !dbg !7370
  call void @llvm.dbg.value(metadata i32 %2, metadata !7368, metadata !DIExpression()), !dbg !7370
  call void @llvm.dbg.value(metadata i32 %3, metadata !7369, metadata !DIExpression()), !dbg !7370
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7371
  %6 = icmp eq i32 %5, -22, !dbg !7373
  br i1 %6, label %7, label %9, !dbg !7374

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7375
  %8 = zext i8 %1 to i32, !dbg !7375
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #25, !dbg !7375
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7375
  unreachable, !dbg !7375

9:                                                ; preds = %4
  ret void, !dbg !7380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7381 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7386, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata i8 %1, metadata !7387, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata i32 undef, metadata !7388, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.value(metadata i32 undef, metadata !7389, metadata !DIExpression()), !dbg !7391
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7392
  call void @llvm.dbg.value(metadata i8 %3, metadata !7390, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7391
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7393
  call void @llvm.dbg.value(metadata i32 %4, metadata !7390, metadata !DIExpression()), !dbg !7391
  %5 = trunc i32 %4 to i8, !dbg !7394
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7395
  ret i32 %4, !dbg !7396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7397 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7401, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata i8 %1, metadata !7402, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata i8 %2, metadata !7403, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata i1 %3, metadata !7404, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7407
  %5 = zext i8 %2 to i32, !dbg !7408
  call void @llvm.dbg.value(metadata i32 %5, metadata !7406, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata i32 0, metadata !7405, metadata !DIExpression()), !dbg !7407
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7406, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata i32 0, metadata !7405, metadata !DIExpression()), !dbg !7407
  %7 = icmp eq i8 %1, 0, !dbg !7409
  br i1 %7, label %30, label %8, !dbg !7412

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7406, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata i32 %10, metadata !7405, metadata !DIExpression()), !dbg !7407
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7413
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7416
  %13 = load i32, i32* %12, align 4, !dbg !7416
  %14 = icmp eq i32 %13, 0, !dbg !7417
  br i1 %14, label %26, label %15, !dbg !7418

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7419

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7421
  %18 = icmp eq i32 %17, 0, !dbg !7421
  br i1 %18, label %19, label %20, !dbg !7422

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7423
  br label %30, !dbg !7429

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7430
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7431
  call void @llvm.dbg.value(metadata i32 %22, metadata !7406, metadata !DIExpression()), !dbg !7407
  %23 = icmp eq i32 %22, -22, !dbg !7432
  br i1 %23, label %30, label %24, !dbg !7434

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7435
  call void @llvm.dbg.value(metadata i32 %25, metadata !7406, metadata !DIExpression()), !dbg !7407
  br label %26, !dbg !7436

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7407
  call void @llvm.dbg.value(metadata i32 %27, metadata !7406, metadata !DIExpression()), !dbg !7407
  %28 = add nuw nsw i32 %10, 1, !dbg !7437
  call void @llvm.dbg.value(metadata i32 %28, metadata !7405, metadata !DIExpression()), !dbg !7407
  %29 = icmp eq i32 %28, %6, !dbg !7409
  br i1 %29, label %30, label %8, !dbg !7412, !llvm.loop !7438

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7407
  ret i32 %31, !dbg !7440
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7441 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7445, metadata !DIExpression()), !dbg !7447
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7448
  %3 = load i32, i32* %2, align 4, !dbg !7448
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7449, !range !7450
  %5 = icmp ult i32 %4, 2, !dbg !7449
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7451
  br i1 %7, label %8, label %15, !dbg !7451

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7452
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7453
  %11 = load i32, i32* %10, align 4, !dbg !7453
  %12 = and i32 %11, %9, !dbg !7454
  %13 = icmp eq i32 %12, 0, !dbg !7455
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7446, metadata !DIExpression()), !dbg !7447
  ret i32 %16, !dbg !7456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7457 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7461, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7462, metadata !DIExpression()), !dbg !7464
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7465
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7465
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7463, metadata !DIExpression()), !dbg !7466
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7467
  %6 = load i32, i32* %5, align 4, !dbg !7467
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7468
  store i32 %6, i32* %7, align 4, !dbg !7469
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7470
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7471
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7472
  %11 = load i32, i32* %10, align 4, !dbg !7472
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7473
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7474
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7475
  ret i32 %12, !dbg !7476
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7477 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7484, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7485, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata i32 undef, metadata !7486, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata i32 %2, metadata !7487, metadata !DIExpression()), !dbg !7488
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7489
  %5 = load i32, i32* %4, align 4, !dbg !7489
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7490
  %7 = or i32 %6, %5, !dbg !7491
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7492
  store i32 %7, i32* %8, align 4, !dbg !7493
  ret void, !dbg !7494
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7495 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7499, metadata !DIExpression()), !dbg !7501
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7500, metadata !DIExpression()), !dbg !7501
  %3 = zext i8 %0 to i32, !dbg !7502
  %4 = icmp ugt i8 %0, 7, !dbg !7504
  br i1 %4, label %5, label %6, !dbg !7505

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7506
  br label %7, !dbg !7512

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7513
  br label %7, !dbg !7514

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7501
  ret i32 %8, !dbg !7515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7520, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7521, metadata !DIExpression()), !dbg !7522
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7523
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7524
  %4 = load i32, i32* %3, align 4, !dbg !7524
  %5 = and i32 %4, -32, !dbg !7525
  %6 = or i32 %5, %0, !dbg !7526
  %7 = or i32 %6, 16, !dbg !7526
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7527
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7528
  %9 = load i32, i32* %8, align 4, !dbg !7528
  %10 = or i32 %9, 1, !dbg !7529
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7530
  ret void, !dbg !7531
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7535, metadata !DIExpression()), !dbg !7536
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7537
  ret void, !dbg !7538
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7543, metadata !DIExpression()), !dbg !7544
  %2 = icmp ult i32 %0, 33, !dbg !7545
  br i1 %2, label %11, label %3, !dbg !7547

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7548
  br i1 %4, label %11, label %5, !dbg !7550

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7551
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7552, !range !7450
  %8 = mul nsw i32 %7, -2, !dbg !7553
  %9 = add nsw i32 %8, 62, !dbg !7553
  %10 = and i32 %9, 62, !dbg !7554
  br label %11, !dbg !7555

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7544
  ret i32 %12, !dbg !7556
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7557 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7561, metadata !DIExpression()), !dbg !7563
  call void @llvm.dbg.value(metadata i8 %1, metadata !7562, metadata !DIExpression()), !dbg !7563
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7564
  %4 = icmp eq i32 %3, -22, !dbg !7566
  br i1 %4, label %5, label %7, !dbg !7567

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7568
  %6 = zext i8 %1 to i32, !dbg !7568
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #25, !dbg !7568
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7568
  unreachable, !dbg !7568

7:                                                ; preds = %2
  ret void, !dbg !7573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7574 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7578, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i8 %1, metadata !7579, metadata !DIExpression()), !dbg !7585
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7586
  call void @llvm.dbg.value(metadata i8 %3, metadata !7580, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7585
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7587
  call void @llvm.dbg.value(metadata i32 %4, metadata !7580, metadata !DIExpression()), !dbg !7585
  %5 = icmp ne i32 %4, -22, !dbg !7588
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7589
  call void @llvm.dbg.value(metadata i32 %4, metadata !7581, metadata !DIExpression()), !dbg !7590
  br i1 %7, label %8, label %12, !dbg !7589

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7581, metadata !DIExpression()), !dbg !7590
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7591
  %10 = add i32 %9, 1, !dbg !7594
  call void @llvm.dbg.value(metadata i32 %10, metadata !7581, metadata !DIExpression()), !dbg !7590
  %11 = icmp eq i32 %10, 8, !dbg !7595
  br i1 %11, label %12, label %8, !dbg !7596, !llvm.loop !7597

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7600 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7603, metadata !DIExpression()), !dbg !7604
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7605
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7606
  ret void, !dbg !7607
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7608 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7613
  %2 = icmp ugt i32 %1, 8, !dbg !7615
  br i1 %2, label %3, label %4, !dbg !7616

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7617
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7617
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7617
  unreachable, !dbg !7617

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7622
  call void @llvm.dbg.value(metadata i32 0, metadata !7612, metadata !DIExpression()), !dbg !7623
  %5 = icmp eq i32 %1, 0, !dbg !7624
  br i1 %5, label %13, label %6, !dbg !7627

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7627

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7612, metadata !DIExpression()), !dbg !7623
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7628
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7630
  %11 = add nuw i32 %9, 1, !dbg !7631
  call void @llvm.dbg.value(metadata i32 %11, metadata !7612, metadata !DIExpression()), !dbg !7623
  %12 = icmp eq i32 %11, %1, !dbg !7624
  br i1 %12, label %13, label %8, !dbg !7627, !llvm.loop !7632

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7634
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7635
  tail call void @arm_core_mpu_enable() #24, !dbg !7636
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7637
  %16 = and i32 %15, 65280, !dbg !7637
  %17 = icmp eq i32 %16, 2048, !dbg !7637
  br i1 %17, label %19, label %18, !dbg !7640

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7641
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #25, !dbg !7641
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7641
  unreachable, !dbg !7641

19:                                               ; preds = %13
  ret i32 0, !dbg !7643
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7644 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7651, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i8* %1, metadata !7652, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i8* %0, metadata !7653, metadata !DIExpression()), !dbg !7654
  %3 = load i8, i8* %1, align 1, !dbg !7655
  %4 = icmp eq i8 %3, 0, !dbg !7656
  br i1 %4, label %13, label %5, !dbg !7657

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7651, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i8* %8, metadata !7652, metadata !DIExpression()), !dbg !7654
  store i8 %6, i8* %7, align 1, !dbg !7658
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7660
  call void @llvm.dbg.value(metadata i8* %9, metadata !7651, metadata !DIExpression()), !dbg !7654
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7661
  call void @llvm.dbg.value(metadata i8* %10, metadata !7652, metadata !DIExpression()), !dbg !7654
  %11 = load i8, i8* %10, align 1, !dbg !7655
  %12 = icmp eq i8 %11, 0, !dbg !7656
  br i1 %12, label %13, label %5, !dbg !7657, !llvm.loop !7662

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7664
  ret i8* %0, !dbg !7665
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7666 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7670, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.value(metadata i8* %1, metadata !7671, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.value(metadata i32 %2, metadata !7672, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.value(metadata i8* %0, metadata !7673, metadata !DIExpression()), !dbg !7674
  %4 = icmp eq i32 %2, 0, !dbg !7675
  br i1 %4, label %22, label %5, !dbg !7676

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7670, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.value(metadata i32 %7, metadata !7672, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.value(metadata i8* %8, metadata !7671, metadata !DIExpression()), !dbg !7674
  %9 = load i8, i8* %8, align 1, !dbg !7677
  %10 = icmp eq i8 %9, 0, !dbg !7678
  br i1 %10, label %16, label %11, !dbg !7679

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7680
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7682
  call void @llvm.dbg.value(metadata i8* %12, metadata !7671, metadata !DIExpression()), !dbg !7674
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7683
  call void @llvm.dbg.value(metadata i8* %13, metadata !7670, metadata !DIExpression()), !dbg !7674
  %14 = add i32 %7, -1, !dbg !7684
  call void @llvm.dbg.value(metadata i32 %14, metadata !7672, metadata !DIExpression()), !dbg !7674
  %15 = icmp eq i32 %14, 0, !dbg !7675
  br i1 %15, label %22, label %5, !dbg !7676, !llvm.loop !7685

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7670, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.value(metadata i32 %18, metadata !7672, metadata !DIExpression()), !dbg !7674
  store i8 0, i8* %17, align 1, !dbg !7687
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7689
  call void @llvm.dbg.value(metadata i8* %19, metadata !7670, metadata !DIExpression()), !dbg !7674
  %20 = add i32 %18, -1, !dbg !7690
  call void @llvm.dbg.value(metadata i32 %20, metadata !7672, metadata !DIExpression()), !dbg !7674
  %21 = icmp eq i32 %20, 0, !dbg !7691
  br i1 %21, label %22, label %16, !dbg !7692, !llvm.loop !7693

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7695
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7696 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7700, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 %1, metadata !7701, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 %1, metadata !7702, metadata !DIExpression()), !dbg !7703
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7704

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7700, metadata !DIExpression()), !dbg !7703
  %6 = load i8, i8* %5, align 1, !dbg !7705
  %7 = icmp eq i8 %6, %3, !dbg !7706
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7707
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7708
  call void @llvm.dbg.value(metadata i8* %10, metadata !7700, metadata !DIExpression()), !dbg !7703
  br i1 %9, label %11, label %4, !dbg !7707, !llvm.loop !7710

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7712
  ret i8* %12, !dbg !7713
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7714 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7716, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i32 %1, metadata !7717, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i8* null, metadata !7718, metadata !DIExpression()), !dbg !7719
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7720

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7719
  call void @llvm.dbg.value(metadata i8* %6, metadata !7718, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i8* %5, metadata !7716, metadata !DIExpression()), !dbg !7719
  %7 = load i8, i8* %5, align 1, !dbg !7721
  %8 = icmp eq i8 %7, %3, !dbg !7724
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7725
  call void @llvm.dbg.value(metadata i8* %9, metadata !7718, metadata !DIExpression()), !dbg !7719
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7726
  call void @llvm.dbg.value(metadata i8* %10, metadata !7716, metadata !DIExpression()), !dbg !7719
  %11 = icmp eq i8 %7, 0, !dbg !7727
  br i1 %11, label %12, label %4, !dbg !7727, !llvm.loop !7728

12:                                               ; preds = %4
  ret i8* %9, !dbg !7730
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7731 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7735, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 0, metadata !7736, metadata !DIExpression()), !dbg !7737
  %2 = load i8, i8* %0, align 1, !dbg !7738
  %3 = icmp eq i8 %2, 0, !dbg !7739
  br i1 %3, label %11, label %4, !dbg !7740

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7736, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i8* %6, metadata !7735, metadata !DIExpression()), !dbg !7737
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7741
  call void @llvm.dbg.value(metadata i8* %7, metadata !7735, metadata !DIExpression()), !dbg !7737
  %8 = add i32 %5, 1, !dbg !7743
  call void @llvm.dbg.value(metadata i32 %8, metadata !7736, metadata !DIExpression()), !dbg !7737
  %9 = load i8, i8* %7, align 1, !dbg !7738
  %10 = icmp eq i8 %9, 0, !dbg !7739
  br i1 %10, label %11, label %4, !dbg !7740, !llvm.loop !7744

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7737
  ret i32 %12, !dbg !7746
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7747 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7751, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.value(metadata i32 %1, metadata !7752, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.value(metadata i32 0, metadata !7753, metadata !DIExpression()), !dbg !7754
  %3 = load i8, i8* %0, align 1, !dbg !7755
  %4 = icmp ne i8 %3, 0, !dbg !7756
  %5 = icmp ne i32 %1, 0, !dbg !7757
  %6 = and i1 %4, %5, !dbg !7757
  br i1 %6, label %7, label %16, !dbg !7758

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7753, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.value(metadata i8* %9, metadata !7751, metadata !DIExpression()), !dbg !7754
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7759
  call void @llvm.dbg.value(metadata i8* %10, metadata !7751, metadata !DIExpression()), !dbg !7754
  %11 = add nuw i32 %8, 1, !dbg !7761
  call void @llvm.dbg.value(metadata i32 %11, metadata !7753, metadata !DIExpression()), !dbg !7754
  %12 = load i8, i8* %10, align 1, !dbg !7755
  %13 = icmp ne i8 %12, 0, !dbg !7756
  %14 = icmp ult i32 %11, %1, !dbg !7757
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7757
  br i1 %15, label %7, label %16, !dbg !7758, !llvm.loop !7762

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7754
  ret i32 %17, !dbg !7764
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7765 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7769, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i8* %1, metadata !7770, metadata !DIExpression()), !dbg !7771
  %3 = load i8, i8* %0, align 1, !dbg !7772
  %4 = load i8, i8* %1, align 1, !dbg !7773
  %5 = icmp ne i8 %3, %4, !dbg !7774
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7775
  br i1 %7, label %18, label %8, !dbg !7775

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7770, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i8* %10, metadata !7769, metadata !DIExpression()), !dbg !7771
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7776
  call void @llvm.dbg.value(metadata i8* %11, metadata !7769, metadata !DIExpression()), !dbg !7771
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7778
  call void @llvm.dbg.value(metadata i8* %12, metadata !7770, metadata !DIExpression()), !dbg !7771
  %13 = load i8, i8* %11, align 1, !dbg !7772
  %14 = load i8, i8* %12, align 1, !dbg !7773
  %15 = icmp ne i8 %13, %14, !dbg !7774
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7775
  br i1 %17, label %18, label %8, !dbg !7775, !llvm.loop !7779

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7772
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7773
  %21 = zext i8 %19 to i32, !dbg !7782
  %22 = zext i8 %20 to i32, !dbg !7783
  %23 = sub nsw i32 %21, %22, !dbg !7784
  ret i32 %23, !dbg !7785
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7786 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7790, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i8* %1, metadata !7791, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i32 %2, metadata !7792, metadata !DIExpression()), !dbg !7793
  %4 = icmp eq i32 %2, 0, !dbg !7794
  br i1 %4, label %23, label %5, !dbg !7794

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7792, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i8* %7, metadata !7791, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i8* %8, metadata !7790, metadata !DIExpression()), !dbg !7793
  %9 = load i8, i8* %8, align 1, !dbg !7795
  %10 = load i8, i8* %7, align 1, !dbg !7796
  %11 = icmp ne i8 %9, %10, !dbg !7797
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7798
  br i1 %13, label %19, label %14, !dbg !7798

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7799
  call void @llvm.dbg.value(metadata i8* %15, metadata !7790, metadata !DIExpression()), !dbg !7793
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7801
  call void @llvm.dbg.value(metadata i8* %16, metadata !7791, metadata !DIExpression()), !dbg !7793
  %17 = add i32 %6, -1, !dbg !7802
  call void @llvm.dbg.value(metadata i32 %17, metadata !7792, metadata !DIExpression()), !dbg !7793
  %18 = icmp eq i32 %17, 0, !dbg !7794
  br i1 %18, label %23, label %5, !dbg !7794, !llvm.loop !7803

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7806
  %21 = zext i8 %10 to i32, !dbg !7807
  %22 = sub nsw i32 %20, %21, !dbg !7808
  br label %23, !dbg !7809

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7809
  ret i32 %24, !dbg !7810
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7811 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7815, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata i8* %1, metadata !7816, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata i8** %2, metadata !7817, metadata !DIExpression()), !dbg !7820
  %4 = icmp eq i8* %0, null, !dbg !7821
  br i1 %4, label %5, label %7, !dbg !7821

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7822
  br label %7, !dbg !7821

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7821
  call void @llvm.dbg.value(metadata i8* %8, metadata !7818, metadata !DIExpression()), !dbg !7820
  %9 = load i8, i8* %8, align 1, !dbg !7823
  %10 = icmp eq i8 %9, 0, !dbg !7823
  br i1 %10, label %33, label %11, !dbg !7824

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7818, metadata !DIExpression()), !dbg !7820
  %14 = zext i8 %12 to i32, !dbg !7823
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7825
  %16 = icmp eq i8* %15, null, !dbg !7824
  br i1 %16, label %21, label %17, !dbg !7826

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7827
  call void @llvm.dbg.value(metadata i8* %18, metadata !7818, metadata !DIExpression()), !dbg !7820
  %19 = load i8, i8* %18, align 1, !dbg !7823
  %20 = icmp eq i8 %19, 0, !dbg !7823
  br i1 %20, label %33, label %11, !dbg !7824, !llvm.loop !7829

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7819, metadata !DIExpression()), !dbg !7820
  %24 = zext i8 %22 to i32, !dbg !7831
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7832
  %26 = icmp eq i8* %25, null, !dbg !7833
  br i1 %26, label %27, label %31, !dbg !7834

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7835
  call void @llvm.dbg.value(metadata i8* %28, metadata !7819, metadata !DIExpression()), !dbg !7820
  %29 = load i8, i8* %28, align 1, !dbg !7831
  %30 = icmp eq i8 %29, 0, !dbg !7831
  br i1 %30, label %33, label %21, !dbg !7837, !llvm.loop !7838

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7840
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7843
  br label %33, !dbg !7844

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7820
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7820
  store i8* %34, i8** %2, align 4, !dbg !7820
  ret i8* %35, !dbg !7845
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7846 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7848, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i8* %1, metadata !7849, metadata !DIExpression()), !dbg !7850
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7851
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7852
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7853
  ret i8* %0, !dbg !7854
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7855 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7857, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i8* %1, metadata !7858, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i32 %2, metadata !7859, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i8* %0, metadata !7860, metadata !DIExpression()), !dbg !7862
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7863
  call void @llvm.dbg.value(metadata i32 %4, metadata !7861, metadata !DIExpression()), !dbg !7862
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7864
  call void @llvm.dbg.value(metadata i8* %5, metadata !7857, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i8* %1, metadata !7858, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i32 %2, metadata !7859, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i32 %2, metadata !7859, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7862
  %6 = icmp eq i32 %2, 0, !dbg !7865
  br i1 %6, label %18, label %7, !dbg !7866

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7867
  call void @llvm.dbg.value(metadata i8* %9, metadata !7857, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i8* %10, metadata !7858, metadata !DIExpression()), !dbg !7862
  %12 = load i8, i8* %10, align 1, !dbg !7868
  %13 = icmp eq i8 %12, 0, !dbg !7869
  br i1 %13, label %18, label %14, !dbg !7870

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7871
  call void @llvm.dbg.value(metadata i8* %15, metadata !7858, metadata !DIExpression()), !dbg !7862
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7873
  call void @llvm.dbg.value(metadata i8* %16, metadata !7857, metadata !DIExpression()), !dbg !7862
  store i8 %12, i8* %9, align 1, !dbg !7874
  call void @llvm.dbg.value(metadata i32 %11, metadata !7859, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i32 %11, metadata !7859, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7862
  %17 = icmp eq i32 %11, 0, !dbg !7865
  br i1 %17, label %18, label %7, !dbg !7866, !llvm.loop !7875

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7862
  store i8 0, i8* %19, align 1, !dbg !7877
  ret i8* %0, !dbg !7878
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7879 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7883, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i8* %1, metadata !7884, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 %2, metadata !7885, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i8* %0, metadata !7886, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i8* %1, metadata !7887, metadata !DIExpression()), !dbg !7888
  %4 = icmp eq i32 %2, 0, !dbg !7889
  br i1 %4, label %31, label %5, !dbg !7891

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7887, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i8* %0, metadata !7886, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 %2, metadata !7885, metadata !DIExpression()), !dbg !7888
  %6 = add i32 %2, -1, !dbg !7892
  call void @llvm.dbg.value(metadata i32 %6, metadata !7885, metadata !DIExpression()), !dbg !7888
  %7 = icmp eq i32 %6, 0, !dbg !7893
  br i1 %7, label %23, label %8, !dbg !7894

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7895
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7895
  br label %11, !dbg !7895

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7887, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i8* %14, metadata !7886, metadata !DIExpression()), !dbg !7888
  %15 = load i8, i8* %14, align 1, !dbg !7896
  %16 = load i8, i8* %13, align 1, !dbg !7897
  %17 = icmp eq i8 %15, %16, !dbg !7898
  br i1 %17, label %18, label %23, !dbg !7895

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7899
  call void @llvm.dbg.value(metadata i8* %19, metadata !7886, metadata !DIExpression()), !dbg !7888
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7901
  call void @llvm.dbg.value(metadata i8* %20, metadata !7887, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 %12, metadata !7885, metadata !DIExpression()), !dbg !7888
  %21 = add i32 %12, -1, !dbg !7892
  call void @llvm.dbg.value(metadata i32 %21, metadata !7885, metadata !DIExpression()), !dbg !7888
  %22 = icmp eq i32 %21, 0, !dbg !7893
  br i1 %22, label %23, label %11, !dbg !7894, !llvm.loop !7902

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7888
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7888
  %26 = load i8, i8* %24, align 1, !dbg !7904
  %27 = zext i8 %26 to i32, !dbg !7904
  %28 = load i8, i8* %25, align 1, !dbg !7905
  %29 = zext i8 %28 to i32, !dbg !7905
  %30 = sub nsw i32 %27, %29, !dbg !7906
  br label %31, !dbg !7907

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7888
  ret i32 %32, !dbg !7908
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7909 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7913, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %1, metadata !7914, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 %2, metadata !7915, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %0, metadata !7916, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %1, metadata !7917, metadata !DIExpression()), !dbg !7918
  %4 = ptrtoint i8* %0 to i32, !dbg !7919
  %5 = ptrtoint i8* %1 to i32, !dbg !7919
  %6 = sub i32 %4, %5, !dbg !7919
  %7 = icmp ult i32 %6, %2, !dbg !7921
  br i1 %7, label %10, label %8, !dbg !7922

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7917, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %0, metadata !7916, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 %2, metadata !7915, metadata !DIExpression()), !dbg !7918
  %9 = icmp eq i32 %2, 0, !dbg !7923
  br i1 %9, label %26, label %17, !dbg !7925

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7915, metadata !DIExpression()), !dbg !7918
  %12 = add i32 %11, -1, !dbg !7926
  call void @llvm.dbg.value(metadata i32 %12, metadata !7915, metadata !DIExpression()), !dbg !7918
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7929
  %14 = load i8, i8* %13, align 1, !dbg !7929
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7930
  store i8 %14, i8* %15, align 1, !dbg !7931
  %16 = icmp eq i32 %12, 0, !dbg !7932
  br i1 %16, label %26, label %10, !dbg !7933, !llvm.loop !7934

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7917, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %19, metadata !7916, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 %20, metadata !7915, metadata !DIExpression()), !dbg !7918
  %21 = load i8, i8* %18, align 1, !dbg !7936
  store i8 %21, i8* %19, align 1, !dbg !7938
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7939
  call void @llvm.dbg.value(metadata i8* %22, metadata !7916, metadata !DIExpression()), !dbg !7918
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7940
  call void @llvm.dbg.value(metadata i8* %23, metadata !7917, metadata !DIExpression()), !dbg !7918
  %24 = add i32 %20, -1, !dbg !7941
  call void @llvm.dbg.value(metadata i32 %24, metadata !7915, metadata !DIExpression()), !dbg !7918
  %25 = icmp eq i32 %24, 0, !dbg !7923
  br i1 %25, label %26, label %17, !dbg !7925, !llvm.loop !7942

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7944
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7945 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7951, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %1, metadata !7952, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %2, metadata !7953, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %0, metadata !7954, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %1, metadata !7955, metadata !DIExpression()), !dbg !7956
  %4 = icmp eq i32 %2, 0, !dbg !7957
  br i1 %4, label %14, label %5, !dbg !7958

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7955, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %7, metadata !7954, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %8, metadata !7953, metadata !DIExpression()), !dbg !7956
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7959
  call void @llvm.dbg.value(metadata i8* %9, metadata !7955, metadata !DIExpression()), !dbg !7956
  %10 = load i8, i8* %6, align 1, !dbg !7961
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7962
  call void @llvm.dbg.value(metadata i8* %11, metadata !7954, metadata !DIExpression()), !dbg !7956
  store i8 %10, i8* %7, align 1, !dbg !7963
  %12 = add i32 %8, -1, !dbg !7964
  call void @llvm.dbg.value(metadata i32 %12, metadata !7953, metadata !DIExpression()), !dbg !7956
  %13 = icmp eq i32 %12, 0, !dbg !7957
  br i1 %13, label %14, label %5, !dbg !7958, !llvm.loop !7965

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7967
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !7968 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7972, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i32 %1, metadata !7973, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i32 %2, metadata !7974, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i8* %0, metadata !7975, metadata !DIExpression()), !dbg !7977
  %4 = trunc i32 %1 to i8, !dbg !7978
  call void @llvm.dbg.value(metadata i8 %4, metadata !7976, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i32 %2, metadata !7974, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i8* %0, metadata !7975, metadata !DIExpression()), !dbg !7977
  %5 = icmp eq i32 %2, 0, !dbg !7979
  br i1 %5, label %12, label %6, !dbg !7980

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7974, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i8* %8, metadata !7975, metadata !DIExpression()), !dbg !7977
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7981
  call void @llvm.dbg.value(metadata i8* %9, metadata !7975, metadata !DIExpression()), !dbg !7977
  store i8 %4, i8* %8, align 1, !dbg !7983
  %10 = add i32 %7, -1, !dbg !7984
  call void @llvm.dbg.value(metadata i32 %10, metadata !7974, metadata !DIExpression()), !dbg !7977
  %11 = icmp eq i32 %10, 0, !dbg !7979
  br i1 %11, label %12, label %6, !dbg !7980, !llvm.loop !7985

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7987
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7988 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7992, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.value(metadata i32 %1, metadata !7993, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.value(metadata i32 %2, metadata !7994, metadata !DIExpression()), !dbg !7998
  %4 = icmp eq i32 %2, 0, !dbg !7999
  br i1 %4, label %17, label %5, !dbg !8000

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8001

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8002
  call void @llvm.dbg.value(metadata i8* %9, metadata !7995, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i32 %8, metadata !7994, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.value(metadata i8* %9, metadata !7995, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8002
  %10 = load i8, i8* %9, align 1, !dbg !8003
  %11 = icmp eq i8 %10, %6, !dbg !8006
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8007
  call void @llvm.dbg.value(metadata i8* %12, metadata !7995, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i32 %13, metadata !7994, metadata !DIExpression()), !dbg !7998
  br i1 %15, label %16, label %7, !dbg !8007, !llvm.loop !8008

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8010

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7998
  ret i8* %19, !dbg !8011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8012 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8014, metadata !DIExpression()), !dbg !8015
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8016
  ret void, !dbg !8017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #2 !dbg !8018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8020, metadata !DIExpression()), !dbg !8021
  ret i32 -1, !dbg !8022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8027, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i32* %1, metadata !8028, metadata !DIExpression()), !dbg !8029
  %3 = ptrtoint i32* %1 to i32, !dbg !8030
  %4 = and i32 %3, -2, !dbg !8030
  %5 = icmp eq i32 %4, 2, !dbg !8030
  br i1 %5, label %6, label %9, !dbg !8030

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8031
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8031
  br label %9, !dbg !8032

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8032
  ret i32 %10, !dbg !8033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8036, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata i32* %1, metadata !8037, metadata !DIExpression()), !dbg !8038
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8039
  ret i32 %3, !dbg !8040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8044, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i32* %1, metadata !8045, metadata !DIExpression()), !dbg !8046
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8047, !srcloc !8049
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8050
  ret i32 %3, !dbg !8051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8052 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8057, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.value(metadata i32* %1, metadata !8058, metadata !DIExpression()), !dbg !8061
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8062
  call void @llvm.dbg.value(metadata i32 %3, metadata !8059, metadata !DIExpression()), !dbg !8061
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8063
  call void @llvm.dbg.value(metadata i32 %4, metadata !8060, metadata !DIExpression()), !dbg !8061
  %5 = icmp ne i32 %3, %4, !dbg !8064
  %6 = sext i1 %5 to i32, !dbg !8065
  ret i32 %6, !dbg !8066
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8067 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8071, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata i32 %1, metadata !8072, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata i32 %2, metadata !8073, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata i32* %3, metadata !8074, metadata !DIExpression()), !dbg !8075
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8076
  ret i32 %5, !dbg !8077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8078 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8080, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i32 %1, metadata !8081, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i32 %2, metadata !8082, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i32* %3, metadata !8083, metadata !DIExpression()), !dbg !8084
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8085, !srcloc !8087
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8088
  ret i32 %5, !dbg !8089
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8090 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8092, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.value(metadata i32 %1, metadata !8093, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.value(metadata i32 %2, metadata !8094, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.value(metadata i32* %3, metadata !8095, metadata !DIExpression()), !dbg !8100
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8101
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8103
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8103
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8103
  br i1 %11, label %33, label %12, !dbg !8103

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8100
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8100
  call void @llvm.dbg.value(metadata i8* %14, metadata !8098, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.value(metadata i32 %13, metadata !8096, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.value(metadata i32 %1, metadata !8097, metadata !DIExpression()), !dbg !8100
  br label %15, !dbg !8104

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8106
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8100
  call void @llvm.dbg.value(metadata i8* %17, metadata !8098, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.value(metadata i32 %16, metadata !8097, metadata !DIExpression()), !dbg !8100
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8107
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8110
  call void @llvm.dbg.value(metadata i8* %19, metadata !8098, metadata !DIExpression()), !dbg !8100
  %20 = load i8, i8* %17, align 1, !dbg !8111
  %21 = zext i8 %20 to i32, !dbg !8112
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8107
  %23 = icmp eq i32 %22, -1, !dbg !8113
  br i1 %23, label %30, label %24, !dbg !8114

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8115
  call void @llvm.dbg.value(metadata i32 %25, metadata !8097, metadata !DIExpression()), !dbg !8100
  %26 = icmp eq i32 %25, 0, !dbg !8116
  br i1 %26, label %27, label %15, !dbg !8117, !llvm.loop !8118

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8120
  call void @llvm.dbg.value(metadata i32 %28, metadata !8096, metadata !DIExpression()), !dbg !8100
  %29 = icmp eq i32 %28, 0, !dbg !8121
  br i1 %29, label %30, label %12, !dbg !8122, !llvm.loop !8123

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8100
  call void @llvm.dbg.value(metadata i32 %31, metadata !8096, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.label(metadata !8099), !dbg !8126
  %32 = sub i32 %2, %31, !dbg !8127
  br label %33, !dbg !8128

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8100
  ret i32 %34, !dbg !8129
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8130 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8134, metadata !DIExpression()), !dbg !8135
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8136
  %3 = icmp eq i32 %2, -1, !dbg !8138
  br i1 %3, label %8, label %4, !dbg !8139

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8140
  %6 = icmp eq i32 %5, -1, !dbg !8141
  %7 = sext i1 %6 to i32, !dbg !8140
  br label %8, !dbg !8142

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8135
  ret i32 %9, !dbg !8143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !8144 {
  %1 = load i32, i32* @test_status, align 4, !dbg !8145
  %2 = icmp eq i32 %1, 0, !dbg !8145
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8147
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.90, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.91, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef %3) #25, !dbg !8147
  ret void, !dbg !8148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #2 !dbg !8149 {
  ret void, !dbg !8150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #2 !dbg !8151 {
  ret void, !dbg !8152
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !8153 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !8154
  tail call void @ztest_test_skip() #24, !dbg !8157
  ret void, !dbg !8158
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !8159 {
  %1 = load i32, i32* @phase, align 4, !dbg !8160
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8161

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !8162
  br label %6, !dbg !8164

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !8165
  tail call fastcc void @test_finalize() #24, !dbg !8166
  br label %6, !dbg !8167

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8168
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.93, i32 0, i32 0), i8* noundef %5) #25, !dbg !8169
  store i32 2, i32* @test_status, align 4, !dbg !8170
  br label %6, !dbg !8171

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !8173 {
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8174
  %1 = tail call fastcc %struct.k_thread* @k_current_get.102() #26, !dbg !8177
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef %1) #24, !dbg !8178
  ret void, !dbg !8179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #2 !dbg !8180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8184, metadata !DIExpression()), !dbg !8185
  %2 = icmp ult i32 %0, 6, !dbg !8186
  br i1 %2, label %3, label %6, !dbg !8186

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !8186
  %5 = load i8*, i8** %4, align 4, !dbg !8186
  br label %6, !dbg !8186

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.94, i32 0, i32 0), %1 ], !dbg !8187
  ret i8* %7, !dbg !8189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.101(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8190 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8196, metadata !DIExpression()), !dbg !8197
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8198, !srcloc !8200
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8201
  ret void, !dbg !8202
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.102() unnamed_addr #11 !dbg !8203 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.103() #26, !dbg !8206
  ret %struct.k_thread* %1, !dbg !8207
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.103() unnamed_addr #11 !dbg !8208 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8209, !srcloc !8211
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !8212
  ret %struct.k_thread* %1, !dbg !8213
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !8214 {
  %1 = load i32, i32* @phase, align 4, !dbg !8215
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8216

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !8217
  br label %6, !dbg !8219

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !8220
  tail call fastcc void @test_finalize() #24, !dbg !8221
  br label %6, !dbg !8222

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8223
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.104, i32 0, i32 0), i8* noundef %5) #25, !dbg !8224
  store i32 2, i32* @test_status, align 4, !dbg !8225
  br label %6, !dbg !8226

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8227
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !8228 {
  %1 = load i32, i32* @phase, align 4, !dbg !8229
  %2 = icmp eq i32 %1, 2, !dbg !8230
  br i1 %2, label %3, label %4, !dbg !8230

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !8231
  br label %8, !dbg !8233

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8234
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.105, i32 0, i32 0), i8* noundef %5) #25, !dbg !8235
  store i32 2, i32* @test_status, align 4, !dbg !8236
  %6 = load i32, i32* @phase, align 4, !dbg !8237
  %7 = icmp eq i32 %6, 1, !dbg !8239
  br i1 %7, label %8, label %9, !dbg !8240

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #24, !dbg !8241
  br label %9, !dbg !8242

9:                                                ; preds = %8, %4
  ret void, !dbg !8242
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8243 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8245, metadata !DIExpression()), !dbg !8246
  tail call fastcc void @z_test_1cpu_start() #24, !dbg !8247
  ret void, !dbg !8248
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !8249 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8251, !srcloc !8253
  ret void, !dbg !8254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8255 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8257, metadata !DIExpression()), !dbg !8258
  tail call fastcc void @z_test_1cpu_stop() #24, !dbg !8259
  ret void, !dbg !8260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !8261 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8262, !srcloc !8264
  ret void, !dbg !8265
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !8266 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8287, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8288, metadata !DIExpression()), !dbg !8290
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !8291
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !8292
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !8292
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !8289, metadata !DIExpression()), !dbg !8290
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8293
  br i1 %6, label %7, label %16, !dbg !8296

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !8289, metadata !DIExpression()), !dbg !8290
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !8297
  %10 = load i8*, i8** %9, align 4, !dbg !8297
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #25, !dbg !8300
  %12 = icmp eq i32 %11, 0, !dbg !8301
  br i1 %12, label %16, label %13, !dbg !8302

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !8303
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !8289, metadata !DIExpression()), !dbg !8290
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8293
  br i1 %15, label %7, label %16, !dbg !8296, !llvm.loop !8304

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !8290
  ret %struct.ztest_unit_test* %17, !dbg !8306
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !8307 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8309, metadata !DIExpression()), !dbg !8310
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #24, !dbg !8311
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #24, !dbg !8312
  ret i32 %3, !dbg !8313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !8314 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8335, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8336, metadata !DIExpression()), !dbg !8337
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !8338

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8336, metadata !DIExpression()), !dbg !8337
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !8340
  %5 = load i8*, i8** %4, align 4, !dbg !8340
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #25, !dbg !8344
  %7 = icmp eq i32 %6, 0, !dbg !8345
  br i1 %7, label %11, label %8, !dbg !8346

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8347
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !8336, metadata !DIExpression()), !dbg !8337
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8348
  br i1 %10, label %2, label %11, !dbg !8338, !llvm.loop !8349

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !8337
  ret %struct.ztest_suite_node* %12, !dbg !8351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !8352 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8356, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8357, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.value(metadata i8* null, metadata !8358, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.value(metadata i32 0, metadata !8359, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.value(metadata i32 0, metadata !8360, metadata !DIExpression()), !dbg !8363
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !8364
  br i1 %2, label %3, label %4, !dbg !8366

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !8367
  br label %68, !dbg !8369

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !8370
  %6 = load i8*, i8** %5, align 4, !dbg !8370
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.106, i32 0, i32 0), i8* noundef %6) #25, !dbg !8370
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8370
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !8372
  store i32 0, i32* @test_result, align 4, !dbg !8373
  store i32 0, i32* @phase, align 4, !dbg !8374
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !8375
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !8375
  %9 = icmp eq i8* ()* %8, null, !dbg !8377
  br i1 %9, label %12, label %10, !dbg !8378

10:                                               ; preds = %4
  %11 = tail call i8* %8() #25, !dbg !8379
  call void @llvm.dbg.value(metadata i8* %11, metadata !8358, metadata !DIExpression()), !dbg !8363
  br label %12, !dbg !8381

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !8363
  call void @llvm.dbg.value(metadata i8* %13, metadata !8358, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.value(metadata i32 0, metadata !8361, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.value(metadata i32 undef, metadata !8361, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.value(metadata i32 0, metadata !8359, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8357, metadata !DIExpression()), !dbg !8363
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8357, metadata !DIExpression()), !dbg !8363
  br label %15, !dbg !8383

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !8363
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !8386
  call void @llvm.dbg.value(metadata i32 %17, metadata !8359, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !8357, metadata !DIExpression()), !dbg !8363
  %18 = load i8*, i8** %5, align 4, !dbg !8387
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #24, !dbg !8388
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8357, metadata !DIExpression()), !dbg !8363
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !8389
  br i1 %20, label %53, label %21, !dbg !8383

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !8390
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8393
  %24 = load i8*, i8** %23, align 4, !dbg !8393
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #25, !dbg !8394
  br i1 %25, label %26, label %49, !dbg !8395

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !8396
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8396
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !8398
  %30 = load i32, i32* %29, align 4, !dbg !8399
  %31 = add i32 %30, 1, !dbg !8399
  store i32 %31, i32* %29, align 4, !dbg !8399
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #24, !dbg !8400
  call void @llvm.dbg.value(metadata i32 %32, metadata !8360, metadata !DIExpression()), !dbg !8363
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !8401

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8402
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !8405
  br label %42, !dbg !8406

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8407
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !8410
  br label %42, !dbg !8411

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8412
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8415
  br label %42, !dbg !8416

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !8417
  %45 = add i32 %44, 1, !dbg !8417
  store i32 %45, i32* %43, align 4, !dbg !8417
  %46 = icmp eq i32 %32, 1, !dbg !8418
  %47 = zext i1 %46 to i32, !dbg !8420
  %48 = add nsw i32 %17, %47, !dbg !8420
  br label %49, !dbg !8420

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !8386
  call void @llvm.dbg.value(metadata i32 %50, metadata !8359, metadata !DIExpression()), !dbg !8363
  %51 = load i32, i32* @test_status, align 4, !dbg !8421
  %52 = icmp eq i32 %51, 2, !dbg !8423
  br i1 %52, label %59, label %15, !dbg !8424, !llvm.loop !8425

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !8427
  %55 = icmp eq i32 %54, 0, !dbg !8383
  call void @llvm.dbg.value(metadata i32 %17, metadata !8359, metadata !DIExpression()), !dbg !8363
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !8429
  br i1 %57, label %58, label %59, !dbg !8429

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !8430
  br label %59, !dbg !8432

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8361, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.value(metadata i32 %17, metadata !8359, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8357, metadata !DIExpression()), !dbg !8363
  %61 = icmp sgt i32 %60, 0, !dbg !8433
  %62 = load i8*, i8** %5, align 4, !dbg !8436
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.107, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.108, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #25, !dbg !8436
  store i32 4, i32* @phase, align 4, !dbg !8437
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !8438
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !8438
  %66 = icmp eq void (i8*)* %65, null, !dbg !8440
  br i1 %66, label %68, label %67, !dbg !8441

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #25, !dbg !8442
  br label %68, !dbg !8444

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !8363
  ret i32 %69, !dbg !8445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8446 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8450, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8451, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i8* %2, metadata !8452, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i32 0, metadata !8453, metadata !DIExpression()), !dbg !8454
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !8455
  %5 = load i8*, i8** %4, align 4, !dbg !8455
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.109, i32 0, i32 0), i8* noundef %5) #25, !dbg !8455
  store i32 1, i32* @phase, align 4, !dbg !8457
  tail call fastcc void @get_start_time_cyc() #24, !dbg !8458
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !8461
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !8462
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !8463
  %9 = load i32, i32* %8, align 4, !dbg !8463
  %10 = or i32 %9, 8, !dbg !8464
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #24, !dbg !8465
  tail call fastcc void @k_object_access_grant() #24, !dbg !8466
  tail call fastcc void @k_object_access_grant() #24, !dbg !8466
  tail call fastcc void @k_object_access_grant() #24, !dbg !8466
  %11 = load i8*, i8** %4, align 4, !dbg !8467
  %12 = icmp eq i8* %11, null, !dbg !8469
  br i1 %12, label %14, label %13, !dbg !8470

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #24, !dbg !8471
  br label %14, !dbg !8473

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !8474
  %16 = and i32 %15, -2, !dbg !8476
  %17 = icmp eq i32 %16, 4, !dbg !8476
  br i1 %17, label %19, label %18, !dbg !8476

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #24, !dbg !8477
  tail call fastcc void @k_thread_join() #24, !dbg !8479
  br label %19, !dbg !8480

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !8481
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !8482
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !8482
  %22 = icmp eq void (i8*)* %21, null, !dbg !8484
  br i1 %22, label %24, label %23, !dbg !8485

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #25, !dbg !8486
  br label %24, !dbg !8488

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #24, !dbg !8489
  tail call fastcc void @get_test_duration_ms() #24, !dbg !8490
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !8491
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !8493
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !8493
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !8494
  %29 = load i32, i32* %28, align 4, !dbg !8494
  %30 = icmp ugt i32 %25, %29, !dbg !8495
  br i1 %30, label %31, label %32, !dbg !8496

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !8497
  br label %32, !dbg !8499

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !8500
  %33 = load i32, i32* @test_result, align 4, !dbg !8501
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !8503

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !8504
  %36 = icmp ult i32 %35, 2, !dbg !8504
  %37 = select i1 %36, i32 2, i32 0, !dbg !8504
  br label %38, !dbg !8504

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !8454
  call void @llvm.dbg.value(metadata i32 %39, metadata !8453, metadata !DIExpression()), !dbg !8454
  tail call fastcc void @cleanup_test() #24, !dbg !8506
  call void @llvm.dbg.value(metadata i32 %39, metadata !8453, metadata !DIExpression()), !dbg !8454
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #24, !dbg !8509
  call void @llvm.dbg.value(metadata i32 %40, metadata !8453, metadata !DIExpression()), !dbg !8454
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #24, !dbg !8510
  %42 = load i8*, i8** %4, align 4, !dbg !8510
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !8510
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !8510
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.110, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #25, !dbg !8510
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8510
  %48 = icmp eq i32 %40, 2, !dbg !8512
  br i1 %48, label %49, label %52, !dbg !8514

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !8515
  br i1 %50, label %51, label %52, !dbg !8516

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !8517
  br label %52, !dbg !8519

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !8520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !8521 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8522
  store i32 %1, i32* @tc_start_time, align 4, !dbg !8523
  ret void, !dbg !8524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8525 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8544, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8535, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !8536, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i32 1024, metadata !8537, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !8538, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i8* %0, metadata !8539, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i8* %1, metadata !8540, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i8* %2, metadata !8541, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i32 -1, metadata !8542, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i32 %3, metadata !8543, metadata !DIExpression()), !dbg !8545
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8546, !srcloc !8548
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #25, !dbg !8549
  ret void, !dbg !8550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !8551 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8556, metadata !DIExpression()), !dbg !8558
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8557, metadata !DIExpression()), !dbg !8558
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8559, !srcloc !8561
  ret void, !dbg !8562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !8563 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8567, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i8* %0, metadata !8568, metadata !DIExpression()), !dbg !8569
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8570, !srcloc !8572
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #25, !dbg !8573
  ret void, !dbg !8574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !8575 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8577, metadata !DIExpression()), !dbg !8578
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8579, !srcloc !8581
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #25, !dbg !8582
  ret void, !dbg !8583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !8584 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8589, metadata !DIExpression()), !dbg !8590
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8588, metadata !DIExpression()), !dbg !8590
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8591, !srcloc !8593
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #25, !dbg !8594
  ret void, !dbg !8595
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8596 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !8600, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8616
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8601, metadata !DIExpression()), !dbg !8616
  call void @llvm.dbg.value(metadata i8* %2, metadata !8602, metadata !DIExpression()), !dbg !8616
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !8603, metadata !DIExpression()), !dbg !8617
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !8618

4:                                                ; preds = %17, %3
  ret void, !dbg !8619

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !8603, metadata !DIExpression()), !dbg !8617
  br i1 %0, label %7, label %11, !dbg !8620

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !8624
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !8624
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !8625
  br i1 %10, label %17, label %15, !dbg !8626

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !8627
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !8627
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8629
  br i1 %14, label %17, label %15, !dbg !8630

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #25, !dbg !8631
  br label %17, !dbg !8632

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8632
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !8603, metadata !DIExpression()), !dbg !8617
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8633
  br i1 %19, label %5, label %4, !dbg !8618, !llvm.loop !8634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8636 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8639
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8640
  %3 = sub i32 %1, %2, !dbg !8641
  call void @llvm.dbg.value(metadata i32 %3, metadata !8638, metadata !DIExpression()), !dbg !8642
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #24, !dbg !8643
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8644
  ret void, !dbg !8645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8646 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8650, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata i32 0, metadata !8651, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata i32 0, metadata !8652, metadata !DIExpression()), !dbg !8653
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8654
  call void @llvm.dbg.value(metadata i32 0, metadata !8651, metadata !DIExpression()), !dbg !8653
  ret void, !dbg !8657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8658 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8662, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i32 %1, metadata !8663, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i32 -1, metadata !8664, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8665, metadata !DIExpression()), !dbg !8674
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8675

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8675

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8665, metadata !DIExpression()), !dbg !8674
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8676
  %9 = load i8*, i8** %8, align 4, !dbg !8676
  %10 = load i8*, i8** %4, align 4, !dbg !8680
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #25, !dbg !8681
  %12 = icmp eq i32 %11, 0, !dbg !8682
  br i1 %12, label %13, label %19, !dbg !8683

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8684
  %15 = load i8*, i8** %14, align 4, !dbg !8684
  %16 = load i8*, i8** %5, align 4, !dbg !8685
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #25, !dbg !8686
  %18 = icmp eq i32 %17, 0, !dbg !8687
  br i1 %18, label %22, label %19, !dbg !8688

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8689
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8665, metadata !DIExpression()), !dbg !8674
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8690
  br i1 %21, label %6, label %31, !dbg !8675, !llvm.loop !8691

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8693
  %24 = load i32, i32* %23, align 4, !dbg !8693
  call void @llvm.dbg.value(metadata i32 %24, metadata !8664, metadata !DIExpression()), !dbg !8673
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8695

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8696
  %27 = zext i1 %26 to i32, !dbg !8699
  br label %31, !dbg !8700

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8701
  %30 = zext i1 %29 to i32, !dbg !8704
  br label %31, !dbg !8705

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8673
  ret i32 %32, !dbg !8706
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #2 !dbg !8707 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8711, metadata !DIExpression()), !dbg !8712
  %2 = icmp ult i32 %0, 3, !dbg !8713
  br i1 %2, label %3, label %6, !dbg !8713

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8713
  %5 = load i8*, i8** %4, align 4, !dbg !8713
  br label %6, !dbg !8713

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.111, i32 0, i32 0), %1 ], !dbg !8714
  ret i8* %7, !dbg !8716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8717 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !8718
  ret i32 %1, !dbg !8719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !8720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8723, metadata !DIExpression()), !dbg !8724
  %2 = zext i32 %0 to i64, !dbg !8725
  call void @llvm.dbg.value(metadata i64 %2, metadata !8726, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i32 168000000, metadata !8731, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i32 1000, metadata !8732, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i8 1, metadata !8733, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i8 1, metadata !8734, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i8 1, metadata !8735, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i8 0, metadata !8736, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i8 0, metadata !8737, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i8 1, metadata !8738, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i64 0, metadata !8739, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i64 167999, metadata !8739, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i64 167999, metadata !8739, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i64 167999, metadata !8739, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i64 167999, metadata !8739, metadata !DIExpression()), !dbg !8743
  %3 = add nuw nsw i64 %2, 167999, !dbg !8745
  call void @llvm.dbg.value(metadata i64 %3, metadata !8726, metadata !DIExpression()), !dbg !8743
  %4 = icmp ult i32 %0, -167999
  %5 = trunc i64 %3 to i32, !dbg !8748
  %6 = udiv i32 %5, 168000, !dbg !8748
  %7 = zext i32 %6 to i64, !dbg !8748
  %8 = udiv i64 %3, 168000, !dbg !8748
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8748
  %10 = trunc i64 %9 to i32, !dbg !8750
  ret i32 %10, !dbg !8751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8752 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !8754
  ret i32 %1, !dbg !8755
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8756 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8758, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i8* %1, metadata !8759, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i8* %2, metadata !8760, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i8* %0, metadata !8761, metadata !DIExpression()), !dbg !8763
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8764
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8762, metadata !DIExpression()), !dbg !8763
  store i32 0, i32* @test_result, align 4, !dbg !8765
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8766
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8767
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8767
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8767
  %8 = icmp eq void (i8*)* %7, null, !dbg !8769
  br i1 %8, label %10, label %9, !dbg !8770

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #25, !dbg !8771
  br label %10, !dbg !8773

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8774
  store i32 1, i32* @test_result, align 4, !dbg !8775
  ret void, !dbg !8776
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8777 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8781, metadata !DIExpression()), !dbg !8784
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8782, metadata !DIExpression()), !dbg !8784
  call void @llvm.dbg.value(metadata i8* %1, metadata !8783, metadata !DIExpression()), !dbg !8784
  store i32 2, i32* @phase, align 4, !dbg !8785
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8786
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8786
  tail call void %4(i8* noundef %1) #25, !dbg !8787
  ret void, !dbg !8788
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8789 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8793, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 0, metadata !8794, metadata !DIExpression()), !dbg !8797
  %2 = load i32, i32* @test_status, align 4, !dbg !8798
  %3 = icmp eq i32 %2, 2, !dbg !8800
  br i1 %3, label %17, label %4, !dbg !8801

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8795, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i32 0, metadata !8794, metadata !DIExpression()), !dbg !8797
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8803

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8795, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i32 %7, metadata !8794, metadata !DIExpression()), !dbg !8797
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #24, !dbg !8804
  %9 = add nsw i32 %8, %7, !dbg !8807
  call void @llvm.dbg.value(metadata i32 %9, metadata !8794, metadata !DIExpression()), !dbg !8797
  %10 = load i32, i32* @test_status, align 4, !dbg !8808
  %11 = icmp ne i32 %10, 2, !dbg !8810
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8811
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8795, metadata !DIExpression()), !dbg !8802
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8812
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8795, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i32 %9, metadata !8794, metadata !DIExpression()), !dbg !8797
  br i1 %14, label %5, label %15, !dbg !8812, !llvm.loop !8813

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8797
  call void @llvm.dbg.value(metadata i32 %16, metadata !8794, metadata !DIExpression()), !dbg !8797
  tail call fastcc void @__ztest_show_suite_summary() #24, !dbg !8815
  br label %17, !dbg !8816

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8797
  ret i32 %18, !dbg !8817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8818 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8822, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i8* %1, metadata !8823, metadata !DIExpression()), !dbg !8833
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8834
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8834
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8824, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i32 0, metadata !8825, metadata !DIExpression()), !dbg !8833
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #24, !dbg !8835
  call void @llvm.dbg.value(metadata i32 0, metadata !8826, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 0, metadata !8825, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i32 undef, metadata !8826, metadata !DIExpression()), !dbg !8836
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8825, metadata !DIExpression()), !dbg !8833
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #25, !dbg !8837
  br i1 %8, label %9, label %16, !dbg !8838

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #24, !dbg !8839
  call void @llvm.dbg.value(metadata i32 %11, metadata !8828, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i32 1, metadata !8825, metadata !DIExpression()), !dbg !8833
  %12 = load i32, i32* %7, align 4, !dbg !8841
  %13 = add i32 %12, 1, !dbg !8841
  store i32 %13, i32* %7, align 4, !dbg !8841
  %14 = icmp ne i32 %11, 0, !dbg !8842
  %15 = zext i1 %14 to i32, !dbg !8843
  br label %16, !dbg !8844

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8833
  %20 = load i32, i32* %17, align 4, !dbg !8845
  %21 = add i32 %20, %18, !dbg !8845
  store i32 %21, i32* %17, align 4, !dbg !8845
  call void @llvm.dbg.value(metadata i32 %19, metadata !8825, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.value(metadata i32 undef, metadata !8826, metadata !DIExpression()), !dbg !8836
  ret i32 %19, !dbg !8846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8847 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.115, i32 0, i32 0)) #25, !dbg !8851
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8849, metadata !DIExpression()), !dbg !8852
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8853

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.116, i32 0, i32 0)) #25, !dbg !8854
  ret void, !dbg !8855

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8849, metadata !DIExpression()), !dbg !8852
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #24, !dbg !8856
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8859
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8849, metadata !DIExpression()), !dbg !8852
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8860
  br i1 %5, label %2, label %1, !dbg !8853, !llvm.loop !8861
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8863 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8867, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8868, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.value(metadata i32 0, metadata !8869, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.value(metadata i32 0, metadata !8870, metadata !DIExpression()), !dbg !8871
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #24, !dbg !8872
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8870, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8868, metadata !DIExpression()), !dbg !8871
  %3 = load i8*, i8** %2, align 4, !dbg !8873
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8874
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8868, metadata !DIExpression()), !dbg !8871
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8875
  br i1 %5, label %36, label %6, !dbg !8876

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8877
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8877
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8880
  %11 = load i32, i32* %10, align 4, !dbg !8880
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8881
  %13 = load i32, i32* %12, align 4, !dbg !8881
  %14 = icmp eq i32 %11, %13, !dbg !8882
  br i1 %14, label %20, label %15, !dbg !8883

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8884
  %17 = load i32, i32* %16, align 4, !dbg !8884
  %18 = icmp ne i32 %17, %13, !dbg !8886
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8887
  call void @llvm.dbg.value(metadata i32 %21, metadata !8869, metadata !DIExpression()), !dbg !8871
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #24, !dbg !8888
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8888
  %24 = load i8*, i8** %23, align 4, !dbg !8888
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8888
  %26 = load i8*, i8** %25, align 4, !dbg !8888
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8888
  %28 = load i32, i32* %27, align 4, !dbg !8888
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8888
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.117, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #25, !dbg !8888
  call void @llvm.dbg.value(metadata i32 poison, metadata !8870, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8868, metadata !DIExpression()), !dbg !8871
  %33 = load i8*, i8** %2, align 4, !dbg !8873
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8874
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8868, metadata !DIExpression()), !dbg !8871
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8875
  br i1 %35, label %36, label %6, !dbg !8876, !llvm.loop !8889

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.118, i32 0, i32 0)) #25, !dbg !8891
  ret void, !dbg !8892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8893 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8895, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8896, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8897, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8898, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8899, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8900, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8901, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8902, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8903, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8904, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8905, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8906, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8907, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8908, metadata !DIExpression()), !dbg !8909
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8908, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8907, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8899, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8898, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8897, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 0, metadata !8896, metadata !DIExpression()), !dbg !8909
  %3 = load i8*, i8** %2, align 4, !dbg !8910
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8911
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8907, metadata !DIExpression()), !dbg !8909
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8912
  br i1 %5, label %58, label %6, !dbg !8913

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8908, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 %9, metadata !8899, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 %10, metadata !8898, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 %11, metadata !8897, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 %12, metadata !8896, metadata !DIExpression()), !dbg !8909
  %13 = add nuw nsw i32 %9, 1, !dbg !8914
  call void @llvm.dbg.value(metadata i32 %13, metadata !8899, metadata !DIExpression()), !dbg !8909
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8916
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8916
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8917
  %17 = load i32, i32* %16, align 4, !dbg !8917
  %18 = add i32 %17, %8, !dbg !8918
  call void @llvm.dbg.value(metadata i32 %18, metadata !8908, metadata !DIExpression()), !dbg !8909
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8919
  %20 = load i32, i32* %19, align 4, !dbg !8919
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8921
  %22 = load i32, i32* %21, align 4, !dbg !8921
  %23 = icmp eq i32 %20, %22, !dbg !8922
  br i1 %23, label %24, label %26, !dbg !8923

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !8924
  call void @llvm.dbg.value(metadata i32 %25, metadata !8898, metadata !DIExpression()), !dbg !8909
  br label %34, !dbg !8926

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8927
  %28 = load i32, i32* %27, align 4, !dbg !8927
  %29 = icmp eq i32 %28, %22, !dbg !8929
  br i1 %29, label %30, label %32, !dbg !8930

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !8931
  call void @llvm.dbg.value(metadata i32 %31, metadata !8896, metadata !DIExpression()), !dbg !8909
  br label %34, !dbg !8933

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !8934
  call void @llvm.dbg.value(metadata i32 %33, metadata !8897, metadata !DIExpression()), !dbg !8909
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8909
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8909
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8909
  call void @llvm.dbg.value(metadata i32 %18, metadata !8908, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8907, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 %13, metadata !8899, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 %37, metadata !8898, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 %36, metadata !8897, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 %35, metadata !8896, metadata !DIExpression()), !dbg !8909
  %38 = load i8*, i8** %2, align 4, !dbg !8910
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8911
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8907, metadata !DIExpression()), !dbg !8909
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8912
  br i1 %40, label %41, label %6, !dbg !8913, !llvm.loop !8936

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !8938
  br i1 %42, label %58, label %43, !dbg !8940

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !8941
  %45 = zext i1 %44 to i32, !dbg !8943
  call void @llvm.dbg.value(metadata i32 %45, metadata !8906, metadata !DIExpression()), !dbg !8909
  %46 = sub nsw i32 %13, %37, !dbg !8944
  call void @llvm.dbg.value(metadata i32 %46, metadata !8900, metadata !DIExpression()), !dbg !8909
  %47 = mul nsw i32 %35, 100000, !dbg !8945
  call void @llvm.dbg.value(metadata i32 %47, metadata !8901, metadata !DIExpression()), !dbg !8909
  %48 = sdiv i32 %47, %46, !dbg !8946
  call void @llvm.dbg.value(metadata i32 %48, metadata !8902, metadata !DIExpression()), !dbg !8909
  %49 = sdiv i32 %48, 1000, !dbg !8947
  call void @llvm.dbg.value(metadata i32 %49, metadata !8903, metadata !DIExpression()), !dbg !8909
  %50 = mul nsw i32 %49, -1000, !dbg !8948
  %51 = add i32 %50, %48, !dbg !8949
  %52 = sdiv i32 %51, 10, !dbg !8950
  call void @llvm.dbg.value(metadata i32 %52, metadata !8904, metadata !DIExpression()), !dbg !8909
  %53 = mul nsw i32 %52, -10, !dbg !8951
  %54 = add i32 %53, %51, !dbg !8952
  call void @llvm.dbg.value(metadata i32 %54, metadata !8905, metadata !DIExpression()), !dbg !8909
  %55 = icmp sgt i32 %54, 4, !dbg !8953
  %56 = zext i1 %55 to i32, !dbg !8955
  %57 = add nsw i32 %52, %56, !dbg !8955
  br label %58, !dbg !8955

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !8956
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !8956
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !8956
  call void @llvm.dbg.value(metadata i32 %66, metadata !8906, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 %65, metadata !8904, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 %64, metadata !8903, metadata !DIExpression()), !dbg !8909
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #24, !dbg !8957
  %68 = load i8*, i8** %2, align 4, !dbg !8957
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !8957
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.119, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #25, !dbg !8957
  ret void, !dbg !8958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8959 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8961, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8962, metadata !DIExpression()), !dbg !8963
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8962, metadata !DIExpression()), !dbg !8963
  %3 = load i8*, i8** %2, align 4, !dbg !8964
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8965
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8962, metadata !DIExpression()), !dbg !8963
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8966
  br i1 %5, label %22, label %6, !dbg !8967

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8968
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8968
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8970
  store i32 0, i32* %10, align 4, !dbg !8971
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8972
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !8973
  store i32 0, i32* %12, align 4, !dbg !8974
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8975
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !8976
  store i32 0, i32* %14, align 4, !dbg !8977
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8978
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8979
  store i32 0, i32* %16, align 4, !dbg !8980
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8981
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !8982
  store i32 0, i32* %18, align 4, !dbg !8983
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8962, metadata !DIExpression()), !dbg !8963
  %19 = load i8*, i8** %2, align 4, !dbg !8964
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8965
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !8962, metadata !DIExpression()), !dbg !8963
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !8966
  br i1 %21, label %22, label %6, !dbg !8967, !llvm.loop !8984

22:                                               ; preds = %6, %1
  ret void, !dbg !8986
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !8987 {
  call void @llvm.dbg.value(metadata i8 1, metadata !8989, metadata !DIExpression()), !dbg !8992
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8990, metadata !DIExpression()), !dbg !8992
  call void @llvm.dbg.value(metadata i8 poison, metadata !8989, metadata !DIExpression()), !dbg !8992
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !8993

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8991, metadata !DIExpression()), !dbg !8992
  call void @llvm.dbg.value(metadata i8 poison, metadata !8989, metadata !DIExpression()), !dbg !8992
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !8997

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8990, metadata !DIExpression()), !dbg !8992
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !8999
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !8999
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !9003
  %9 = load i32, i32* %8, align 4, !dbg !9003
  %10 = icmp eq i32 %9, 0, !dbg !9004
  br i1 %10, label %11, label %14, !dbg !9005

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !9006
  %13 = load i8*, i8** %12, align 4, !dbg !9006
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.120, i32 0, i32 0), i8* noundef %13) #25, !dbg !9008
  call void @llvm.dbg.value(metadata i8 0, metadata !8989, metadata !DIExpression()), !dbg !8992
  br label %14, !dbg !9009

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8989, metadata !DIExpression()), !dbg !8992
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !9010
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !8990, metadata !DIExpression()), !dbg !8992
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !9011
  br i1 %17, label %3, label %1, !dbg !8993, !llvm.loop !9012

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8991, metadata !DIExpression()), !dbg !8992
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !9014
  %22 = load i8*, i8** %21, align 4, !dbg !9014
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #24, !dbg !9017
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !8990, metadata !DIExpression()), !dbg !8992
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !9018
  br i1 %24, label %25, label %29, !dbg !9020

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !9021
  %27 = load i8*, i8** %26, align 4, !dbg !9021
  %28 = load i8*, i8** %21, align 4, !dbg !9023
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.121, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #25, !dbg !9024
  call void @llvm.dbg.value(metadata i8 0, metadata !8989, metadata !DIExpression()), !dbg !8992
  br label %29, !dbg !9025

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8989, metadata !DIExpression()), !dbg !8992
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !9026
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !8991, metadata !DIExpression()), !dbg !8992
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9027
  br i1 %32, label %18, label %33, !dbg !8997, !llvm.loop !9028

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !9030

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !9031
  br label %36, !dbg !9034

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8991, metadata !DIExpression()), !dbg !8992
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !9035

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !8991, metadata !DIExpression()), !dbg !8992
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !9037
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !9037
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !9041
  %42 = load i32, i32* %41, align 4, !dbg !9041
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !9042
  %44 = load i32, i32* %43, align 4, !dbg !9042
  %45 = add i32 %44, %42, !dbg !9043
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !9044
  %47 = load i32, i32* %46, align 4, !dbg !9044
  %48 = add i32 %45, %47, !dbg !9045
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !9046
  %50 = load i32, i32* %49, align 4, !dbg !9046
  %51 = icmp eq i32 %48, %50, !dbg !9047
  br i1 %51, label %57, label %52, !dbg !9048

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !9049
  %54 = load i8*, i8** %53, align 4, !dbg !9049
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !9051
  %56 = load i8*, i8** %55, align 4, !dbg !9051
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.122, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #25, !dbg !9052
  store i32 1, i32* @test_status, align 4, !dbg !9053
  br label %57, !dbg !9054

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !9055
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !8991, metadata !DIExpression()), !dbg !8992
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9056
  br i1 %59, label %37, label %60, !dbg !9035, !llvm.loop !9057

60:                                               ; preds = %57, %36
  ret void, !dbg !9059
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !9060 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9062, metadata !DIExpression()), !dbg !9063
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !9064
  tail call void %2(i8* noundef %0) #25, !dbg !9065
  ret void, !dbg !9066
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !9067 {
  tail call void @ztest_run_all(i8* noundef null) #24, !dbg !9068
  tail call void @ztest_verify_all_test_suites_ran() #24, !dbg !9069
  ret void, !dbg !9070
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !9071 {
  tail call void @test_main() #24, !dbg !9072
  tail call void @end_report() #24, !dbg !9073
  ret void, !dbg !9074
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !9075 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9077, metadata !DIExpression()), !dbg !9078
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #24, !dbg !9079
  ret void, !dbg !9080
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !9081 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9083, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !9084, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i8 1, metadata !9085, metadata !DIExpression()), !dbg !9086
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !9087
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !9087
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !9089
  br i1 %5, label %8, label %6, !dbg !9090

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #25, !dbg !9091
  call void @llvm.dbg.value(metadata i1 %7, metadata !9085, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9086
  br label %8, !dbg !9093

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9085, metadata !DIExpression()), !dbg !9086
  ret i1 %9, !dbg !9094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #2 !dbg !9095 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i8* undef, metadata !9098, metadata !DIExpression()), !dbg !9099
  ret i1 true, !dbg !9100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !9101 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9104, metadata !DIExpression()), !dbg !9105
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9106, !srcloc !9108
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #25, !dbg !9109
  ret void, !dbg !9110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #2 !dbg !9111 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9115, metadata !DIExpression()), !dbg !9116
  ret i8* %0, !dbg !9117
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9118 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9120, metadata !DIExpression()), !dbg !9121
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9122
  ret void, !dbg !9123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9128, metadata !DIExpression()), !dbg !9134
  call void @llvm.dbg.value(metadata i32 %1, metadata !9129, metadata !DIExpression()), !dbg !9134
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9130, metadata !DIExpression()), !dbg !9134
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9135
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9135
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9135
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9131, metadata !DIExpression()), !dbg !9134
  call void @llvm.dbg.value(metadata i32 %0, metadata !9133, metadata !DIExpression()), !dbg !9134
  %7 = icmp slt i32 %0, %1, !dbg !9136
  br i1 %7, label %8, label %22, !dbg !9139

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9133, metadata !DIExpression()), !dbg !9134
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9140
  %11 = icmp eq i32 %10, 0, !dbg !9140
  br i1 %11, label %19, label %12, !dbg !9143

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9144
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9146
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9146
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9148
  br i1 %15, label %19, label %16, !dbg !9149

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9150
  %18 = load i8*, i8** %17, align 4, !dbg !9150
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9151
  br label %19, !dbg !9152

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9153
  call void @llvm.dbg.value(metadata i32 %20, metadata !9133, metadata !DIExpression()), !dbg !9134
  %21 = icmp eq i32 %20, %1, !dbg !9136
  br i1 %21, label %22, label %8, !dbg !9139, !llvm.loop !9154

22:                                               ; preds = %19, %3
  ret void, !dbg !9156
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !9157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9159, metadata !DIExpression()), !dbg !9160
  %2 = shl nuw i32 1, %0, !dbg !9161
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9164
  ret i32 %3, !dbg !9165
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !9166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9170, metadata !DIExpression()), !dbg !9171
  %2 = shl nuw i32 1, %0, !dbg !9172
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9175
  ret void, !dbg !9176
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9180, metadata !DIExpression()), !dbg !9181
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9182
  ret void, !dbg !9183
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9186, metadata !DIExpression()), !dbg !9187
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9188
  %3 = and i32 %2, %0, !dbg !9188
  %4 = icmp eq i32 %3, %0, !dbg !9189
  %5 = zext i1 %4 to i32, !dbg !9189
  ret i32 %5, !dbg !9190
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9191 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9193, metadata !DIExpression()), !dbg !9194
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9195
  ret void, !dbg !9196
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9197 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9199, metadata !DIExpression()), !dbg !9200
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9201
  ret void, !dbg !9202
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9203 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9205, metadata !DIExpression()), !dbg !9206
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9207
  ret void, !dbg !9208
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9209 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9211, metadata !DIExpression()), !dbg !9212
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9213
  ret void, !dbg !9214
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9215 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9217, metadata !DIExpression()), !dbg !9218
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9219
  ret void, !dbg !9220
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9221 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9223, metadata !DIExpression()), !dbg !9224
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9225
  ret void, !dbg !9226
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9227 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9229, metadata !DIExpression()), !dbg !9230
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9231
  ret void, !dbg !9232
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9233 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9235, metadata !DIExpression()), !dbg !9236
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9237
  ret void, !dbg !9238
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9239 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9241, metadata !DIExpression()), !dbg !9242
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9243
  ret void, !dbg !9244
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9245 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9247, metadata !DIExpression()), !dbg !9248
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9249
  ret void, !dbg !9250
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9251 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9253, metadata !DIExpression()), !dbg !9254
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9255
  ret i32 0, !dbg !9256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !888 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !892, metadata !DIExpression()), !dbg !9257
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9258
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9260
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9262
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9264
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9266
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9268
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9270
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9272
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9274
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9276
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9278
  ret void, !dbg !9280
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9283, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i32 0, metadata !9284, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i32 undef, metadata !9284, metadata !DIExpression()), !dbg !9285
  %2 = lshr i32 6684671, %0, !dbg !9286
  %3 = and i32 %2, 1, !dbg !9286
  %4 = or i32 %3, %0, !dbg !9288
  %5 = icmp eq i32 %4, 0, !dbg !9288
  br i1 %5, label %6, label %7, !dbg !9288

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9289
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9289
  unreachable, !dbg !9289

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9294
  %9 = load i32, i32* %8, align 4, !dbg !9294
  call void @llvm.dbg.value(metadata i32 %9, metadata !9284, metadata !DIExpression()), !dbg !9285
  %10 = shl nuw i32 1, %0, !dbg !9295
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !9296
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !9297
  ret void, !dbg !9298
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9301, metadata !DIExpression()), !dbg !9302
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9303
  %3 = or i32 %2, %0, !dbg !9303
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9303
  ret void, !dbg !9304
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !9305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9307, metadata !DIExpression()), !dbg !9308
  %2 = icmp slt i32 %0, 32, !dbg !9309
  br i1 %2, label %3, label %5, !dbg !9311

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9312
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9314
  br label %5, !dbg !9315

5:                                                ; preds = %1, %3
  ret void, !dbg !9316
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9319, metadata !DIExpression()), !dbg !9320
  %2 = xor i32 %0, -1, !dbg !9321
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9321
  %4 = and i32 %3, %2, !dbg !9321
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9321
  ret void, !dbg !9322
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !9323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9327, metadata !DIExpression()), !dbg !9329
  call void @llvm.dbg.value(metadata i32 %1, metadata !9328, metadata !DIExpression()), !dbg !9329
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9330

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9331
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9333
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9334
  br label %11, !dbg !9335

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9336
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9337
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9338
  br label %11, !dbg !9339

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9340
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9341
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9342
  br label %11, !dbg !9343

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9344
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9345
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9346
  br label %11, !dbg !9347

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9348
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9351, metadata !DIExpression()), !dbg !9352
  %2 = xor i32 %0, -1, !dbg !9353
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9353
  %4 = and i32 %3, %2, !dbg !9353
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9353
  ret void, !dbg !9354
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9357, metadata !DIExpression()), !dbg !9358
  %2 = xor i32 %0, -1, !dbg !9359
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9359
  %4 = and i32 %3, %2, !dbg !9359
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9359
  ret void, !dbg !9360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9363, metadata !DIExpression()), !dbg !9364
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9365
  %3 = or i32 %2, %0, !dbg !9365
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9365
  ret void, !dbg !9366
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9369, metadata !DIExpression()), !dbg !9370
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9371
  %3 = or i32 %2, %0, !dbg !9371
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9371
  ret void, !dbg !9372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9377, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9378, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata i8* %2, metadata !9379, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !9380, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9382, metadata !DIExpression()), !dbg !9383
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9384
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9384
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9386
  br i1 %6, label %7, label %9, !dbg !9387

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9388
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9389
  store i8* %2, i8** %8, align 4, !dbg !9390
  br label %9, !dbg !9391

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9383
  ret i32 %10, !dbg !9392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !9393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9395, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !9396, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9397, metadata !DIExpression()), !dbg !9398
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9399
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9400
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9401
  store i8* null, i8** %3, align 4, !dbg !9402
  ret void, !dbg !9403
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9404 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9406, metadata !DIExpression()), !dbg !9411
  call void @llvm.dbg.value(metadata i8* %1, metadata !9407, metadata !DIExpression()), !dbg !9411
  call void @llvm.dbg.value(metadata i8* %1, metadata !9408, metadata !DIExpression()), !dbg !9411
  %3 = bitcast i8* %1 to i32*, !dbg !9412
  %4 = load i32, i32* %3, align 4, !dbg !9412
  %5 = add i32 %4, -169, !dbg !9412
  %6 = icmp ult i32 %5, -121, !dbg !9412
  br i1 %6, label %15, label %7, !dbg !9414

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9415
  %9 = inttoptr i32 %8 to i32*, !dbg !9416
  call void @llvm.dbg.value(metadata i32* %9, metadata !9409, metadata !DIExpression()), !dbg !9411
  %10 = load volatile i32, i32* %9, align 4, !dbg !9417
  call void @llvm.dbg.value(metadata i32 %10, metadata !9410, metadata !DIExpression()), !dbg !9411
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9418
  %12 = bitcast i8* %11 to i32*, !dbg !9418
  %13 = load i32, i32* %12, align 4, !dbg !9418
  %14 = or i32 %13, %10, !dbg !9419
  call void @llvm.dbg.value(metadata i32 %14, metadata !9410, metadata !DIExpression()), !dbg !9411
  store volatile i32 %14, i32* %9, align 4, !dbg !9420
  br label %15, !dbg !9421

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9411
  ret i32 %16, !dbg !9422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9423 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9425, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata i8* %1, metadata !9426, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata i8* %1, metadata !9427, metadata !DIExpression()), !dbg !9430
  %3 = bitcast i8* %1 to i32*, !dbg !9431
  %4 = load i32, i32* %3, align 4, !dbg !9431
  %5 = add i32 %4, -169, !dbg !9431
  %6 = icmp ult i32 %5, -121, !dbg !9431
  br i1 %6, label %16, label %7, !dbg !9433

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9434
  %9 = inttoptr i32 %8 to i32*, !dbg !9435
  call void @llvm.dbg.value(metadata i32* %9, metadata !9428, metadata !DIExpression()), !dbg !9430
  %10 = load volatile i32, i32* %9, align 4, !dbg !9436
  call void @llvm.dbg.value(metadata i32 %10, metadata !9429, metadata !DIExpression()), !dbg !9430
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9437
  %12 = bitcast i8* %11 to i32*, !dbg !9437
  %13 = load i32, i32* %12, align 4, !dbg !9437
  %14 = xor i32 %13, -1, !dbg !9438
  %15 = and i32 %10, %14, !dbg !9439
  call void @llvm.dbg.value(metadata i32 %15, metadata !9429, metadata !DIExpression()), !dbg !9430
  store volatile i32 %15, i32* %9, align 4, !dbg !9440
  br label %16, !dbg !9441

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9430
  ret i32 %17, !dbg !9442
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9443 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9445, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i8* %1, metadata !9446, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i32* %2, metadata !9447, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i8* %1, metadata !9448, metadata !DIExpression()), !dbg !9453
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9454
  call void @llvm.dbg.value(metadata i32 %4, metadata !9449, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i32 undef, metadata !9450, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i32 undef, metadata !9451, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i32 %4, metadata !9452, metadata !DIExpression()), !dbg !9453
  %5 = bitcast i8* %1 to i32*, !dbg !9455
  %6 = load i32, i32* %5, align 4, !dbg !9455
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !9456

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #24, !dbg !9457
  call void @llvm.dbg.value(metadata i32 %8, metadata !9450, metadata !DIExpression()), !dbg !9453
  br label %19, !dbg !9458

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !9460
  call void @llvm.dbg.value(metadata i32 %10, metadata !9451, metadata !DIExpression()), !dbg !9453
  br label %19, !dbg !9461

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9462
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !9463
  br label %19, !dbg !9464

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9465
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #24, !dbg !9466
  br label %19, !dbg !9467

17:                                               ; preds = %3
  br label %19, !dbg !9468

18:                                               ; preds = %3
  br label %19, !dbg !9469

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !9470
  br label %21, !dbg !9471

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !9453
  ret i32 %22, !dbg !9471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !9472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9474, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i8* %1, metadata !9475, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i8* %2, metadata !9476, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i8* %1, metadata !9477, metadata !DIExpression()), !dbg !9482
  %4 = bitcast i8* %1 to i32*, !dbg !9483
  %5 = load i32, i32* %4, align 4, !dbg !9483
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9484
  call void @llvm.dbg.value(metadata i32 %6, metadata !9481, metadata !DIExpression()), !dbg !9482
  %7 = icmp slt i32 %6, 0, !dbg !9485
  br i1 %7, label %22, label %8, !dbg !9487

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9477, metadata !DIExpression()), !dbg !9482
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9488
  %10 = bitcast i8* %9 to i32*, !dbg !9488
  %11 = load i32, i32* %10, align 4, !dbg !9488
  %12 = lshr i32 %11, 16, !dbg !9488
  %13 = and i32 %12, 7, !dbg !9488
  %14 = lshr i32 %11, 8, !dbg !9489
  %15 = and i32 %14, 31, !dbg !9489
  %16 = shl i32 %13, %15, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %16, metadata !9480, metadata !DIExpression()), !dbg !9482
  %17 = and i32 %11, 255, !dbg !9491
  %18 = or i32 %17, 1073887232, !dbg !9492
  %19 = inttoptr i32 %18 to i32*, !dbg !9493
  call void @llvm.dbg.value(metadata i32* %19, metadata !9478, metadata !DIExpression()), !dbg !9482
  %20 = load volatile i32, i32* %19, align 4, !dbg !9494
  call void @llvm.dbg.value(metadata i32 %20, metadata !9479, metadata !DIExpression()), !dbg !9482
  %21 = or i32 %16, %20, !dbg !9495
  call void @llvm.dbg.value(metadata i32 %21, metadata !9479, metadata !DIExpression()), !dbg !9482
  store volatile i32 %21, i32* %19, align 4, !dbg !9496
  br label %22, !dbg !9497

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9482
  ret i32 %23, !dbg !9498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #2 !dbg !9499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9503, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata i32 0, metadata !9504, metadata !DIExpression()), !dbg !9505
  %2 = add i32 %0, -1, !dbg !9506
  %3 = icmp ult i32 %2, 6, !dbg !9506
  br i1 %3, label %4, label %7, !dbg !9506

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9506
  %6 = load i32, i32* %5, align 4, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %6, metadata !9504, metadata !DIExpression()), !dbg !9505
  br label %7, !dbg !9507

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9505
  ret i32 %8, !dbg !9508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !9509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9513, metadata !DIExpression()), !dbg !9515
  call void @llvm.dbg.value(metadata i32 %1, metadata !9514, metadata !DIExpression()), !dbg !9515
  %3 = udiv i32 %0, %1, !dbg !9516
  ret i32 %3, !dbg !9517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !9518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9522, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata i32 12, metadata !9523, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata i32 336, metadata !9524, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata i32 %1, metadata !9525, metadata !DIExpression()), !dbg !9526
  %3 = mul i32 %0, 336, !dbg !9527
  %4 = mul nsw i32 %1, 12, !dbg !9528
  %5 = udiv i32 %3, %4, !dbg !9529
  ret i32 %5, !dbg !9530
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9531 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9533, metadata !DIExpression()), !dbg !9536
  tail call void @config_enable_default_clocks() #25, !dbg !9537
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9538
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9538
  %4 = lshr i32 %3, 4, !dbg !9538
  %5 = and i32 %4, 15, !dbg !9538
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9538
  %7 = load i8, i8* %6, align 1, !dbg !9538
  %8 = zext i8 %7 to i32, !dbg !9538
  %9 = lshr i32 %2, %8, !dbg !9538
  call void @llvm.dbg.value(metadata i32 %9, metadata !9534, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !9535, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9536
  %10 = icmp ult i32 %9, 168000000, !dbg !9539
  br i1 %10, label %11, label %13, !dbg !9541

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !9542
  br label %13, !dbg !9544

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9545
  tail call fastcc void @set_up_plls() #24, !dbg !9546
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9547
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !9550
  br label %14, !dbg !9551

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9552
  %16 = icmp eq i32 %15, 8, !dbg !9553
  br i1 %16, label %17, label %14, !dbg !9551, !llvm.loop !9554

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !9556
  br i1 %18, label %19, label %21, !dbg !9558

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !9559
  br label %21, !dbg !9561

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !9562
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9563
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9564
  ret i32 0, !dbg !9565
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !9566 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9568
  %2 = and i32 %1, 240, !dbg !9568
  ret i32 %2, !dbg !9569
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !9570 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !9571
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !9576
  br label %1, !dbg !9577

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !9578
  %3 = icmp eq i32 %2, 1, !dbg !9579
  br i1 %3, label %4, label %1, !dbg !9577, !llvm.loop !9580

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !9582
  br label %5, !dbg !9585

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !9586
  %7 = icmp eq i32 %6, 1, !dbg !9587
  br i1 %7, label %8, label %5, !dbg !9585, !llvm.loop !9588

8:                                                ; preds = %5
  ret void, !dbg !9590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9591 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9592
  %2 = icmp eq i32 %1, 8, !dbg !9594
  br i1 %2, label %3, label %4, !dbg !9595

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9596
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !9598
  br label %4, !dbg !9599

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !9600
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9601
  %6 = and i32 %5, -196609, !dbg !9601
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9601
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9602
  %8 = and i32 %7, -251658241, !dbg !9602
  %9 = or i32 %8, 117440512, !dbg !9602
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9602
  tail call void @config_pll_sysclock() #25, !dbg !9603
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !9604
  br label %10, !dbg !9605

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !9606
  %12 = icmp eq i32 %11, 1, !dbg !9607
  br i1 %12, label %13, label %10, !dbg !9605, !llvm.loop !9608

13:                                               ; preds = %10
  ret void, !dbg !9610
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !9611 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9613, metadata !DIExpression()), !dbg !9614
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9615
  %2 = and i32 %1, -241, !dbg !9615
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9615
  ret void, !dbg !9616
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !9617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9619, metadata !DIExpression()), !dbg !9620
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9621
  %3 = and i32 %2, -4, !dbg !9621
  %4 = or i32 %3, %0, !dbg !9621
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9621
  ret void, !dbg !9622
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !9623 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9624
  %2 = and i32 %1, 12, !dbg !9624
  ret i32 %2, !dbg !9625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !9626 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !9628, metadata !DIExpression()), !dbg !9629
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9630
  %2 = and i32 %1, -7169, !dbg !9630
  %3 = or i32 %2, 5120, !dbg !9630
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9630
  ret void, !dbg !9631
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !9632 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !9634, metadata !DIExpression()), !dbg !9635
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9636
  %2 = and i32 %1, -57345, !dbg !9636
  %3 = or i32 %2, 32768, !dbg !9636
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9636
  ret void, !dbg !9637
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !9638 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9639
  %2 = icmp eq i32 %1, 1, !dbg !9641
  br i1 %2, label %7, label %3, !dbg !9642

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9643
  br label %4, !dbg !9645

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9646
  %6 = icmp eq i32 %5, 1, !dbg !9647
  br i1 %6, label %7, label %4, !dbg !9645, !llvm.loop !9648

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !9650
  br label %8, !dbg !9651

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9652
  %10 = icmp eq i32 %9, 0, !dbg !9653
  br i1 %10, label %11, label %8, !dbg !9651, !llvm.loop !9654

11:                                               ; preds = %8
  ret void, !dbg !9656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !9657 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9658
  %2 = and i32 %1, -16777217, !dbg !9658
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9658
  ret void, !dbg !9659
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !9660 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9661
  %2 = or i32 %1, 16777216, !dbg !9661
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9661
  ret void, !dbg !9662
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !9663 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9664
  %2 = lshr i32 %1, 25, !dbg !9665
  %3 = and i32 %2, 1, !dbg !9665
  ret i32 %3, !dbg !9666
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !9667 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9668
  %2 = lshr i32 %1, 1, !dbg !9669
  %3 = and i32 %2, 1, !dbg !9669
  ret i32 %3, !dbg !9670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !9671 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9672
  %2 = or i32 %1, 1, !dbg !9672
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9672
  ret void, !dbg !9673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !9674 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9675
  %2 = and i32 %1, -262145, !dbg !9675
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9675
  ret void, !dbg !9676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !9677 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9678
  %2 = or i32 %1, 65536, !dbg !9678
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9678
  ret void, !dbg !9679
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !9680 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9681
  %2 = lshr i32 %1, 17, !dbg !9682
  %3 = and i32 %2, 1, !dbg !9682
  ret i32 %3, !dbg !9683
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !9684 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9685
  %2 = or i32 %1, 1, !dbg !9685
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9685
  ret void, !dbg !9686
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !9687 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9688
  %2 = lshr i32 %1, 1, !dbg !9689
  %3 = and i32 %2, 1, !dbg !9689
  ret i32 %3, !dbg !9690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #2 !dbg !9691 {
  ret i32 12000000, !dbg !9693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !9697 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !9698
  ret void, !dbg !9699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !9700 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9704, metadata !DIExpression()), !dbg !9708
  call void @llvm.dbg.value(metadata i32 12, metadata !9705, metadata !DIExpression()), !dbg !9708
  call void @llvm.dbg.value(metadata i32 336, metadata !9706, metadata !DIExpression()), !dbg !9708
  call void @llvm.dbg.value(metadata i32 0, metadata !9707, metadata !DIExpression()), !dbg !9708
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9709
  %2 = and i32 %1, -4227072, !dbg !9709
  %3 = or i32 %2, 4215820, !dbg !9709
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9709
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9710
  %5 = and i32 %4, -196609, !dbg !9710
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9710
  ret void, !dbg !9711
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !9712 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !9713
  ret void, !dbg !9714
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !9715 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9718, metadata !DIExpression()), !dbg !9720
  %2 = bitcast i32* %1 to i8*, !dbg !9721
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9721
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9719, metadata !DIExpression()), !dbg !9722
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9723
  %4 = or i32 %3, 268435456, !dbg !9723
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9723
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9724
  %6 = and i32 %5, 268435456, !dbg !9724
  store volatile i32 %6, i32* %1, align 4, !dbg !9725
  %7 = load volatile i32, i32* %1, align 4, !dbg !9726
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9727
  ret void, !dbg !9727
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9728 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9730, metadata !DIExpression()), !dbg !9731
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !9732
  br i1 %2, label %3, label %4, !dbg !9734

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !9735
  br label %4, !dbg !9736

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9731
  ret i32 %5, !dbg !9737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9738 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9743, metadata !DIExpression()), !dbg !9744
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9745, !srcloc !9747
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !9748
  ret i1 %1, !dbg !9749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9750 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9751
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9752
  ret void, !dbg !9753
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9756, metadata !DIExpression()), !dbg !9757
  %2 = icmp eq i32 %0, 10, !dbg !9758
  br i1 %2, label %3, label %4, !dbg !9760

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9761
  br label %4, !dbg !9763

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9764
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9765
  ret i32 %0, !dbg !9766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9767 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9770, metadata !DIExpression()), !dbg !9772
  call void @llvm.dbg.value(metadata i8 %0, metadata !9771, metadata !DIExpression()), !dbg !9772
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9773, !srcloc !9775
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9776
  ret void, !dbg !9777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9778 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9780, metadata !DIExpression()), !dbg !9783
  call void @llvm.dbg.value(metadata i8 %0, metadata !9781, metadata !DIExpression()), !dbg !9783
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9784
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9782, metadata !DIExpression()), !dbg !9783
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9785
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9785
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !9786
  ret void, !dbg !9787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9788 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9790, metadata !DIExpression()), !dbg !9791
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9792
  ret i1 %1, !dbg !9793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #2 !dbg !9794 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9843, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9844, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9845, metadata !DIExpression()), !dbg !9846
  ret void, !dbg !9847
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9848 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9850, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i8 %1, metadata !9851, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i32 %2, metadata !9852, metadata !DIExpression()), !dbg !9855
  %5 = bitcast i32* %4 to i8*, !dbg !9856
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9856
  call void @llvm.dbg.value(metadata i32* %4, metadata !9854, metadata !DIExpression(DW_OP_deref)), !dbg !9855
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9857
  call void @llvm.dbg.value(metadata i32 %6, metadata !9853, metadata !DIExpression()), !dbg !9855
  %7 = icmp eq i32 %6, 0, !dbg !9858
  br i1 %7, label %8, label %31, !dbg !9860

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9853, metadata !DIExpression()), !dbg !9855
  %9 = and i32 %2, 131072, !dbg !9861
  %10 = icmp eq i32 %9, 0, !dbg !9863
  br i1 %10, label %28, label %11, !dbg !9864

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9865
  %13 = icmp eq i32 %12, 0, !dbg !9868
  br i1 %13, label %18, label %14, !dbg !9869

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9870
  %16 = shl nuw i32 1, %15, !dbg !9870
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9872
  br label %25, !dbg !9873

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9874
  %20 = icmp eq i32 %19, 0, !dbg !9876
  %21 = zext i8 %1 to i32, !dbg !9855
  br i1 %20, label %25, label %22, !dbg !9877

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9878
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9880
  br label %25, !dbg !9881

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9882
  %27 = load i32, i32* %4, align 4, !dbg !9883
  call void @llvm.dbg.value(metadata i32 %30, metadata !9854, metadata !DIExpression()), !dbg !9855
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9884
  br label %31, !dbg !9885

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9882
  %30 = load i32, i32* %4, align 4, !dbg !9883
  call void @llvm.dbg.value(metadata i32 %30, metadata !9854, metadata !DIExpression()), !dbg !9855
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9884
  call void @llvm.dbg.value(metadata i32 0, metadata !9853, metadata !DIExpression()), !dbg !9855
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9886
  ret i32 %6, !dbg !9886
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9887 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9891, metadata !DIExpression()), !dbg !9896
  call void @llvm.dbg.value(metadata i32* %1, metadata !9892, metadata !DIExpression()), !dbg !9896
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9897
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9897
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9897
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9893, metadata !DIExpression()), !dbg !9896
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9898
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9898
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9898
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9895, metadata !DIExpression()), !dbg !9896
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9899
  store i32 %9, i32* %1, align 4, !dbg !9900
  ret i32 0, !dbg !9901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9902 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9904, metadata !DIExpression()), !dbg !9910
  call void @llvm.dbg.value(metadata i32 %1, metadata !9905, metadata !DIExpression()), !dbg !9910
  call void @llvm.dbg.value(metadata i32 %2, metadata !9906, metadata !DIExpression()), !dbg !9910
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9911
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9911
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9911
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9907, metadata !DIExpression()), !dbg !9910
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9912
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9912
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9912
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9908, metadata !DIExpression()), !dbg !9910
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9913
  call void @llvm.dbg.value(metadata i32 %10, metadata !9909, metadata !DIExpression()), !dbg !9910
  %11 = xor i32 %1, -1, !dbg !9914
  %12 = and i32 %10, %11, !dbg !9915
  %13 = and i32 %2, %1, !dbg !9916
  %14 = or i32 %12, %13, !dbg !9917
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9918
  ret i32 0, !dbg !9919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9920 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9922, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata i32 %1, metadata !9923, metadata !DIExpression()), !dbg !9926
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9927
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9927
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9927
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9924, metadata !DIExpression()), !dbg !9926
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9928
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9928
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9928
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9925, metadata !DIExpression()), !dbg !9926
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9929
  store volatile i32 %1, i32* %9, align 4, !dbg !9929
  ret i32 0, !dbg !9930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9931 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9933, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.value(metadata i32 %1, metadata !9934, metadata !DIExpression()), !dbg !9937
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9938
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9938
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9938
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9935, metadata !DIExpression()), !dbg !9937
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9939
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9939
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9939
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9936, metadata !DIExpression()), !dbg !9937
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9940
  ret i32 0, !dbg !9941
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9942 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9944, metadata !DIExpression()), !dbg !9948
  call void @llvm.dbg.value(metadata i32 %1, metadata !9945, metadata !DIExpression()), !dbg !9948
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9949
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9949
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9949
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9946, metadata !DIExpression()), !dbg !9948
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9950
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9950
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9950
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9947, metadata !DIExpression()), !dbg !9948
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9951
  %10 = load volatile i32, i32* %9, align 4, !dbg !9951
  %11 = xor i32 %10, %1, !dbg !9951
  store volatile i32 %11, i32* %9, align 4, !dbg !9951
  ret i32 0, !dbg !9952
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9953 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9955, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.value(metadata i8 %1, metadata !9956, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.value(metadata i32 %2, metadata !9957, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.value(metadata i32 %3, metadata !9958, metadata !DIExpression()), !dbg !9965
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9966
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9966
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9966
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9959, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.value(metadata i8* undef, metadata !9960, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.value(metadata i32 0, metadata !9962, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.value(metadata i32 0, metadata !9963, metadata !DIExpression()), !dbg !9965
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9967

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9968
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9972
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9973
  %12 = load i32, i32* %11, align 4, !dbg !9973
  %13 = icmp eq i32 %10, %12, !dbg !9974
  br i1 %13, label %14, label %29, !dbg !9975

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9976
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9978
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9979
  br label %29, !dbg !9980

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9981
  %17 = load i8*, i8** %16, align 4, !dbg !9981
  call void @llvm.dbg.value(metadata i8* %17, metadata !9960, metadata !DIExpression()), !dbg !9965
  %18 = zext i8 %1 to i32, !dbg !9982
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9984
  %20 = icmp eq i32 %19, 0, !dbg !9985
  br i1 %20, label %21, label %29, !dbg !9986

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9987
  %23 = load i32, i32* %22, align 4, !dbg !9987
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9988
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9989

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9962, metadata !DIExpression()), !dbg !9965
  br label %27, !dbg !9990

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9962, metadata !DIExpression()), !dbg !9965
  br label %27, !dbg !9992

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9962, metadata !DIExpression()), !dbg !9965
  br label %27, !dbg !9993

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9965
  call void @llvm.dbg.value(metadata i32 %28, metadata !9962, metadata !DIExpression()), !dbg !9965
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9994
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9995
  br label %29, !dbg !9995

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9965
  call void @llvm.dbg.value(metadata i32 %30, metadata !9963, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.label(metadata !9964), !dbg !9996
  ret i32 %30, !dbg !9997
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9998 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10000, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10001, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i1 %2, metadata !10002, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10004
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10005
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10005
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10005
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10003, metadata !DIExpression()), !dbg !10004
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10006
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10007
  ret i32 %8, !dbg !10008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10009 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10015, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10016, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.value(metadata i1 %2, metadata !10017, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10018
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10019
  br i1 %4, label %5, label %6, !dbg !10022

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10023
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36.143, i32 0, i32 0)) #25, !dbg !10023
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10023
  unreachable, !dbg !10023

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10025
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10025
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10025
  br i1 %9, label %10, label %11, !dbg !10028

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10029
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.145, i32 0, i32 0)) #25, !dbg !10029
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10029
  unreachable, !dbg !10029

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10031
  br i1 %12, label %18, label %13, !dbg !10033

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10034
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !10037
  %16 = or i1 %15, %2, !dbg !10038
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10038
  br i1 %2, label %19, label %21, !dbg !10038

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10039

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10040
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !10043
  br label %21, !dbg !10044

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10018
  ret i32 %22, !dbg !10045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10046 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10050, metadata !DIExpression()), !dbg !10051
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10052
  %3 = icmp eq %struct._snode* %2, null, !dbg !10052
  ret i1 %3, !dbg !10052
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !10053 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10057, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10058, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10059, metadata !DIExpression()), !dbg !10061
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10062
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10060, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10059, metadata !DIExpression()), !dbg !10061
  %4 = icmp eq %struct._snode* %3, null, !dbg !10064
  br i1 %4, label %15, label %5, !dbg !10062

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10060, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10059, metadata !DIExpression()), !dbg !10061
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10066
  br i1 %6, label %9, label %11, !dbg !10069

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10060, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10059, metadata !DIExpression()), !dbg !10061
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10066
  br i1 %8, label %9, label %11, !dbg !10069, !llvm.loop !10070

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10071
  br label %15, !dbg !10071

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10060, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10059, metadata !DIExpression()), !dbg !10061
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10064
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10060, metadata !DIExpression()), !dbg !10061
  %14 = icmp eq %struct._snode* %13, null, !dbg !10064
  br i1 %14, label %15, label %7, !dbg !10062, !llvm.loop !10070

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10074 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10078, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10079, metadata !DIExpression()), !dbg !10080
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10081
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10081
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10081
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10082
  %5 = icmp eq %struct._snode* %4, null, !dbg !10082
  br i1 %5, label %6, label %8, !dbg !10081

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10084
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10084
  br label %8, !dbg !10084

8:                                                ; preds = %6, %2
  ret void, !dbg !10081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10086 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10090, metadata !DIExpression()), !dbg !10091
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10092
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10092
  ret %struct._snode* %3, !dbg !10093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10094 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10098, metadata !DIExpression()), !dbg !10100
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10099, metadata !DIExpression()), !dbg !10100
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10101
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10102
  ret void, !dbg !10103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10104 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10106, metadata !DIExpression()), !dbg !10108
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10107, metadata !DIExpression()), !dbg !10108
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10109
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10110
  ret void, !dbg !10111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10112 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10114, metadata !DIExpression()), !dbg !10115
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10116
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10116
  ret %struct._snode* %3, !dbg !10117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10118 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10120, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10121, metadata !DIExpression()), !dbg !10122
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10123
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10124
  ret void, !dbg !10125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10126 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10130, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10131, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10132, metadata !DIExpression()), !dbg !10133
  %4 = icmp eq %struct._snode* %1, null, !dbg !10134
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10136
  br i1 %4, label %6, label %11, !dbg !10137

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10138
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10140
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10140
  br i1 %8, label %9, label %15, !dbg !10138

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10142
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10142
  br label %15, !dbg !10142

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10144
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10146
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10146
  br i1 %13, label %14, label %15, !dbg !10144

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10148
  br label %15, !dbg !10148

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10137
  ret void, !dbg !10137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10150 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10154, metadata !DIExpression()), !dbg !10155
  %2 = icmp eq %struct._snode* %0, null, !dbg !10156
  br i1 %2, label %5, label %3, !dbg !10156

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10156
  br label %5, !dbg !10156

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10156
  ret %struct._snode* %6, !dbg !10156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10157 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10159, metadata !DIExpression()), !dbg !10160
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10161
  ret %struct._snode* %2, !dbg !10161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10162 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10164, metadata !DIExpression()), !dbg !10165
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10166
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10166
  ret %struct._snode* %3, !dbg !10167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10170, metadata !DIExpression()), !dbg !10173
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10174, !range !10175
  call void @llvm.dbg.value(metadata i32 %2, metadata !10171, metadata !DIExpression()), !dbg !10173
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10176
  call void @llvm.dbg.value(metadata i32 %3, metadata !10172, metadata !DIExpression()), !dbg !10173
  ret i32 %3, !dbg !10177
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10180, metadata !DIExpression()), !dbg !10183
  call void @llvm.dbg.value(metadata i8* %1, metadata !10181, metadata !DIExpression()), !dbg !10183
  call void @llvm.dbg.value(metadata i8* %1, metadata !10182, metadata !DIExpression()), !dbg !10183
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10184
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10184
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10185
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10185
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10185
  %8 = shl nuw i32 1, %0, !dbg !10186
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10187
  ret void, !dbg !10188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10189 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10193, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.value(metadata i32 %1, metadata !10194, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10195, metadata !DIExpression()), !dbg !10199
  %4 = bitcast i64* %3 to i8*, !dbg !10200
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10200
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10197, metadata !DIExpression()), !dbg !10199
  store i64 70368744177732, i64* %3, align 8, !dbg !10201
  call void @llvm.dbg.value(metadata i64* %3, metadata !10197, metadata !DIExpression(DW_OP_deref)), !dbg !10199
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10202
  call void @llvm.dbg.value(metadata i32 %5, metadata !10198, metadata !DIExpression()), !dbg !10199
  %6 = icmp eq i32 %5, 0, !dbg !10203
  br i1 %6, label %7, label %8, !dbg !10205

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10206
  br label %8, !dbg !10207

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10208
  ret void, !dbg !10208
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10209 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10211, metadata !DIExpression()), !dbg !10214
  call void @llvm.dbg.value(metadata i8* %0, metadata !10212, metadata !DIExpression()), !dbg !10214
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10215
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10213, metadata !DIExpression()), !dbg !10214
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10216
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10216
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !10217
  ret i32 %5, !dbg !10218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10221, metadata !DIExpression()), !dbg !10224
  call void @llvm.dbg.value(metadata i32 %1, metadata !10222, metadata !DIExpression()), !dbg !10224
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10225
  call void @llvm.dbg.value(metadata i32 %3, metadata !10223, metadata !DIExpression()), !dbg !10224
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10226
  ret void, !dbg !10227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #2 !dbg !10228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10232, metadata !DIExpression()), !dbg !10233
  %2 = sdiv i32 %0, 4, !dbg !10234
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10235
  %6 = add nsw i32 %5, 16, !dbg !10236
  %7 = shl i32 15, %6, !dbg !10237
  %8 = or i32 %7, %2, !dbg !10238
  ret i32 %8, !dbg !10239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10244, metadata !DIExpression()), !dbg !10246
  call void @llvm.dbg.value(metadata i32 %1, metadata !10245, metadata !DIExpression()), !dbg !10246
  %3 = and i32 %1, 255, !dbg !10247
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10247
  %5 = load volatile i32, i32* %4, align 4, !dbg !10247
  %6 = lshr i32 %1, 16, !dbg !10247
  %7 = xor i32 %6, -1, !dbg !10247
  %8 = and i32 %5, %7, !dbg !10247
  call void @llvm.dbg.value(metadata i32 %6, metadata !10248, metadata !DIExpression()) #23, !dbg !10252
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10254, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %9, metadata !10251, metadata !DIExpression()) #23, !dbg !10252
  call void @llvm.dbg.value(metadata i32 %9, metadata !10256, metadata !DIExpression()) #23, !dbg !10261
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10263, !range !7450
  %11 = shl i32 %0, %10, !dbg !10247
  %12 = or i32 %11, %8, !dbg !10247
  store volatile i32 %12, i32* %4, align 4, !dbg !10247
  ret void, !dbg !10264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10265 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10269, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10270, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i32 %2, metadata !10271, metadata !DIExpression()), !dbg !10274
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10275
  %5 = icmp eq %struct._snode* %4, null, !dbg !10275
  br i1 %5, label %24, label %6, !dbg !10275

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10277
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10273, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10272, metadata !DIExpression()), !dbg !10274
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10278
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10278
  %12 = load i32, i32* %11, align 4, !dbg !10278
  %13 = and i32 %12, %2, !dbg !10282
  %14 = icmp eq i32 %13, 0, !dbg !10282
  br i1 %14, label %22, label %15, !dbg !10283

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10284
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10284
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10284
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10284
  br i1 %19, label %20, label %21, !dbg !10288

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10289
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.145, i32 0, i32 0)) #25, !dbg !10289
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10289
  unreachable, !dbg !10289

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !10291
  br label %22, !dbg !10292

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10272, metadata !DIExpression()), !dbg !10274
  %23 = icmp eq %struct._snode* %8, null, !dbg !10293
  br i1 %23, label %24, label %6, !dbg !10293

24:                                               ; preds = %22, %3
  ret void, !dbg !10294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10297, metadata !DIExpression()), !dbg !10298
  %2 = and i32 %0, 255, !dbg !10299
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10299
  %4 = load volatile i32, i32* %3, align 4, !dbg !10299
  %5 = lshr i32 %0, 16, !dbg !10299
  %6 = and i32 %4, %5, !dbg !10299
  call void @llvm.dbg.value(metadata i32 %5, metadata !10248, metadata !DIExpression()) #23, !dbg !10300
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10302, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %7, metadata !10251, metadata !DIExpression()) #23, !dbg !10300
  call void @llvm.dbg.value(metadata i32 %7, metadata !10256, metadata !DIExpression()) #23, !dbg !10303
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10305, !range !7450
  %9 = lshr i32 %6, %8, !dbg !10306
  ret i32 %9, !dbg !10307
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10308 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10313, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.value(metadata i32 %1, metadata !10314, metadata !DIExpression()), !dbg !10315
  %3 = shl i32 %1, 16, !dbg !10316
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10316
  store volatile i32 %3, i32* %4, align 4, !dbg !10316
  ret void, !dbg !10317
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10318 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10322, metadata !DIExpression()), !dbg !10323
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10324
  %3 = load volatile i32, i32* %2, align 4, !dbg !10324
  ret i32 %3, !dbg !10325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10326 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10328, metadata !DIExpression()), !dbg !10330
  call void @llvm.dbg.value(metadata i32 %1, metadata !10329, metadata !DIExpression()), !dbg !10330
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10331
  store volatile i32 %1, i32* %3, align 4, !dbg !10331
  ret void, !dbg !10332
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10333 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10335, metadata !DIExpression()), !dbg !10336
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10337
  %3 = load volatile i32, i32* %2, align 4, !dbg !10337
  ret i32 %3, !dbg !10338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10343, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.value(metadata i32* %1, metadata !10344, metadata !DIExpression()), !dbg !10345
  %3 = and i32 %0, 131072, !dbg !10346
  %4 = icmp eq i32 %3, 0, !dbg !10348
  br i1 %4, label %22, label %5, !dbg !10349

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10350
  %6 = and i32 %0, 2, !dbg !10352
  %7 = icmp eq i32 %6, 0, !dbg !10354
  br i1 %7, label %11, label %8, !dbg !10355

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10356
  %10 = icmp eq i32 %9, 0, !dbg !10356
  br i1 %10, label %33, label %11, !dbg !10359

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10360
  store i32 %12, i32* %1, align 4, !dbg !10360
  %13 = and i32 %0, 16, !dbg !10361
  %14 = icmp eq i32 %13, 0, !dbg !10363
  br i1 %14, label %17, label %15, !dbg !10364

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10365
  br label %31, !dbg !10367

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10368
  %19 = icmp eq i32 %18, 0, !dbg !10370
  br i1 %19, label %33, label %20, !dbg !10371

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10372
  br label %31, !dbg !10374

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10375
  %24 = icmp eq i32 %23, 0, !dbg !10377
  br i1 %24, label %31, label %25, !dbg !10378

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10379
  %27 = icmp eq i32 %26, 0, !dbg !10382
  br i1 %27, label %28, label %31, !dbg !10383

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10384
  br label %33, !dbg !10385

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10345
  ret i32 %34, !dbg !10385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10386 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10390, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %1, metadata !10391, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %2, metadata !10392, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %3, metadata !10393, metadata !DIExpression()), !dbg !10401
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10402
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10402
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10402
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10394, metadata !DIExpression()), !dbg !10401
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10403
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10403
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10403
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10395, metadata !DIExpression()), !dbg !10401
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10404
  call void @llvm.dbg.value(metadata i32 %11, metadata !10396, metadata !DIExpression()), !dbg !10401
  %12 = and i32 %2, 48, !dbg !10405
  call void @llvm.dbg.value(metadata i32 %12, metadata !10397, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %2, metadata !10398, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %2, metadata !10399, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %2, metadata !10400, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10401
  %13 = lshr i32 %2, 6, !dbg !10406
  %14 = and i32 %13, 1, !dbg !10406
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10407
  %15 = lshr i32 %2, 7, !dbg !10408
  %16 = and i32 %15, 3, !dbg !10408
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10409
  %17 = lshr i32 %2, 9, !dbg !10410
  %18 = and i32 %17, 3, !dbg !10410
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10411
  %19 = icmp eq i32 %12, 32, !dbg !10412
  br i1 %19, label %20, label %24, !dbg !10414

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10415
  br i1 %21, label %22, label %23, !dbg !10418

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10419
  br label %24, !dbg !10421

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10422
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10424
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10425
  ret void, !dbg !10426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #2 !dbg !10427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10429, metadata !DIExpression()), !dbg !10431
  %2 = shl nuw i32 1, %0, !dbg !10432
  call void @llvm.dbg.value(metadata i32 %2, metadata !10430, metadata !DIExpression()), !dbg !10431
  ret i32 %2, !dbg !10433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10434 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10438, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i32 %1, metadata !10439, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i32 %2, metadata !10440, metadata !DIExpression()), !dbg !10441
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10442
  %5 = load volatile i32, i32* %4, align 4, !dbg !10442
  %6 = xor i32 %1, -1, !dbg !10442
  %7 = and i32 %5, %6, !dbg !10442
  %8 = mul i32 %2, %1, !dbg !10442
  %9 = or i32 %7, %8, !dbg !10442
  store volatile i32 %9, i32* %4, align 4, !dbg !10442
  ret void, !dbg !10443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10444 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10446, metadata !DIExpression()), !dbg !10449
  call void @llvm.dbg.value(metadata i32 %1, metadata !10447, metadata !DIExpression()), !dbg !10449
  call void @llvm.dbg.value(metadata i32 %2, metadata !10448, metadata !DIExpression()), !dbg !10449
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10450
  %5 = load volatile i32, i32* %4, align 4, !dbg !10450
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10451
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10453, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10451
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10454
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10456, !range !7450
  %8 = shl nuw nsw i32 %7, 1, !dbg !10450
  %9 = shl i32 3, %8, !dbg !10450
  %10 = xor i32 %9, -1, !dbg !10450
  %11 = and i32 %5, %10, !dbg !10450
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10457
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10457
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10459
  %12 = shl i32 %2, %8, !dbg !10450
  %13 = or i32 %11, %12, !dbg !10450
  store volatile i32 %13, i32* %4, align 4, !dbg !10450
  ret void, !dbg !10461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10462 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10464, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata i32 %1, metadata !10465, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata i32 %2, metadata !10466, metadata !DIExpression()), !dbg !10467
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10468
  %5 = load volatile i32, i32* %4, align 4, !dbg !10468
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10469
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10471, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10472
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10474, !range !7450
  %8 = shl nuw nsw i32 %7, 1, !dbg !10468
  %9 = shl i32 3, %8, !dbg !10468
  %10 = xor i32 %9, -1, !dbg !10468
  %11 = and i32 %5, %10, !dbg !10468
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10475
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10475
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10477
  %12 = shl i32 %2, %8, !dbg !10468
  %13 = or i32 %11, %12, !dbg !10468
  store volatile i32 %13, i32* %4, align 4, !dbg !10468
  ret void, !dbg !10479
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10480 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10482, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.value(metadata i32 %1, metadata !10483, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.value(metadata i32 %2, metadata !10484, metadata !DIExpression()), !dbg !10485
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10486
  %5 = load volatile i32, i32* %4, align 4, !dbg !10486
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10487
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10489, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10487
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10490
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10492, !range !7450
  %8 = shl nuw nsw i32 %7, 2, !dbg !10486
  %9 = shl i32 15, %8, !dbg !10486
  %10 = xor i32 %9, -1, !dbg !10486
  %11 = and i32 %5, %10, !dbg !10486
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10493
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10493
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10495
  %12 = shl i32 %2, %8, !dbg !10486
  %13 = or i32 %11, %12, !dbg !10486
  store volatile i32 %13, i32* %4, align 4, !dbg !10486
  ret void, !dbg !10497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10498 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10500, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i32 %1, metadata !10501, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i32 %2, metadata !10502, metadata !DIExpression()), !dbg !10503
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10504
  %5 = load volatile i32, i32* %4, align 4, !dbg !10504
  %6 = lshr i32 %1, 8, !dbg !10504
  call void @llvm.dbg.value(metadata i32 %6, metadata !10248, metadata !DIExpression()) #23, !dbg !10505
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10507, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %7, metadata !10251, metadata !DIExpression()) #23, !dbg !10505
  call void @llvm.dbg.value(metadata i32 %7, metadata !10256, metadata !DIExpression()) #23, !dbg !10508
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10510, !range !7450
  %9 = shl nuw nsw i32 %8, 2, !dbg !10504
  %10 = shl i32 15, %9, !dbg !10504
  %11 = xor i32 %10, -1, !dbg !10504
  %12 = and i32 %5, %11, !dbg !10504
  call void @llvm.dbg.value(metadata i32 %6, metadata !10248, metadata !DIExpression()) #23, !dbg !10511
  call void @llvm.dbg.value(metadata i32 %7, metadata !10251, metadata !DIExpression()) #23, !dbg !10511
  call void @llvm.dbg.value(metadata i32 %7, metadata !10256, metadata !DIExpression()) #23, !dbg !10513
  %13 = shl i32 %2, %9, !dbg !10504
  %14 = or i32 %12, %13, !dbg !10504
  store volatile i32 %14, i32* %4, align 4, !dbg !10504
  ret void, !dbg !10515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10516 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10518, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.value(metadata i32 %1, metadata !10519, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.value(metadata i32 %2, metadata !10520, metadata !DIExpression()), !dbg !10521
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10522
  %5 = load volatile i32, i32* %4, align 4, !dbg !10522
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10523
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10525, !srcloc !10255
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10523
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10526
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10528, !range !7450
  %8 = shl nuw nsw i32 %7, 1, !dbg !10522
  %9 = shl i32 3, %8, !dbg !10522
  %10 = xor i32 %9, -1, !dbg !10522
  %11 = and i32 %5, %10, !dbg !10522
  call void @llvm.dbg.value(metadata i32 %1, metadata !10248, metadata !DIExpression()) #23, !dbg !10529
  call void @llvm.dbg.value(metadata i32 %6, metadata !10251, metadata !DIExpression()) #23, !dbg !10529
  call void @llvm.dbg.value(metadata i32 %6, metadata !10256, metadata !DIExpression()) #23, !dbg !10531
  %12 = shl i32 %2, %8, !dbg !10522
  %13 = or i32 %11, %12, !dbg !10522
  store volatile i32 %13, i32* %4, align 4, !dbg !10522
  ret void, !dbg !10533
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10534 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10536, metadata !DIExpression()), !dbg !10539
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10540
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10540
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10540
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10537, metadata !DIExpression()), !dbg !10539
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10541
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10542
  %6 = tail call fastcc zeroext i1 @device_is_ready.156() #24, !dbg !10543
  br i1 %6, label %7, label %11, !dbg !10545

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10546
  call void @llvm.dbg.value(metadata i32 %8, metadata !10538, metadata !DIExpression()), !dbg !10539
  %9 = icmp slt i32 %8, 0, !dbg !10547
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10549
  br label %11, !dbg !10549

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10539
  ret i32 %12, !dbg !10550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.156() unnamed_addr #1 !dbg !10551 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10555, metadata !DIExpression()), !dbg !10556
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10557, !srcloc !10559
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.157() #24, !dbg !10560
  ret i1 %1, !dbg !10561
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !10562 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10566, metadata !DIExpression()), !dbg !10571
  call void @llvm.dbg.value(metadata i8 1, metadata !10567, metadata !DIExpression()), !dbg !10571
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10572
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10572
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10572
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10568, metadata !DIExpression()), !dbg !10571
  call void @llvm.dbg.value(metadata i32 0, metadata !10569, metadata !DIExpression()), !dbg !10571
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10570, metadata !DIExpression()), !dbg !10571
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10573
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10576
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10577
  call void @llvm.dbg.value(metadata i32 %7, metadata !10569, metadata !DIExpression()), !dbg !10571
  ret i32 %7, !dbg !10578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.157() unnamed_addr #1 !dbg !10579 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10581, metadata !DIExpression()), !dbg !10582
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !10583
  ret i1 %1, !dbg !10584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10585 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10589, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 %1, metadata !10590, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 %2, metadata !10591, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 %3, metadata !10592, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 0, metadata !10593, metadata !DIExpression()), !dbg !10597
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10598
  %5 = icmp eq i32 %3, 17, !dbg !10599
  br i1 %5, label %6, label %14, !dbg !10600

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10601
  call void @llvm.dbg.value(metadata i32 %7, metadata !10594, metadata !DIExpression()), !dbg !10602
  %8 = icmp eq i32 %7, 0, !dbg !10603
  %9 = shl nuw i32 1, %1, !dbg !10605
  br i1 %8, label %12, label %10, !dbg !10606

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10607
  br label %14, !dbg !10609

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10610
  br label %14, !dbg !10613

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10614
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !10615 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10617, metadata !DIExpression()), !dbg !10621
  call void @llvm.dbg.value(metadata i8* %1, metadata !10618, metadata !DIExpression()), !dbg !10621
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10622
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10622
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10622
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10619, metadata !DIExpression()), !dbg !10621
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10623
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10623
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !10625
  %9 = icmp eq i32 %8, 0, !dbg !10625
  br i1 %9, label %12, label %10, !dbg !10626

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10627
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !10629
  br label %12, !dbg !10630

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10631
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10633
  %15 = icmp eq i32 %14, 0, !dbg !10633
  br i1 %15, label %19, label %16, !dbg !10634

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10635
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !10636
  store i8 %18, i8* %1, align 1, !dbg !10637
  br label %19, !dbg !10638

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10621
  ret i32 %20, !dbg !10639
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10640 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10642, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.value(metadata i8 %1, metadata !10643, metadata !DIExpression()), !dbg !10646
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10647
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10647
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10647
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10644, metadata !DIExpression()), !dbg !10646
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10648

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10649
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !10652
  %10 = icmp eq i32 %9, 0, !dbg !10652
  br i1 %10, label %18, label %11, !dbg !10653

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10654, !srcloc !10661
  call void @llvm.dbg.value(metadata i32 undef, metadata !10657, metadata !DIExpression()) #23, !dbg !10662
  call void @llvm.dbg.value(metadata i32 undef, metadata !10658, metadata !DIExpression()) #23, !dbg !10662
  call void @llvm.dbg.value(metadata i32 undef, metadata !10645, metadata !DIExpression()), !dbg !10646
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10663
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10665
  %15 = icmp eq i32 %14, 0, !dbg !10665
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10654
  br i1 %15, label %17, label %19, !dbg !10666

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10657, metadata !DIExpression()) #23, !dbg !10662
  call void @llvm.dbg.value(metadata i32 %16, metadata !10645, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.value(metadata i32 undef, metadata !10667, metadata !DIExpression()) #23, !dbg !10670
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10672, !srcloc !10673
  br label %18, !dbg !10674

18:                                               ; preds = %17, %7
  br label %7, !dbg !10649, !llvm.loop !10675

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10654
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10677
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !10678
  call void @llvm.dbg.value(metadata i32 %20, metadata !10667, metadata !DIExpression()) #23, !dbg !10679
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10681, !srcloc !10673
  ret void, !dbg !10682
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !10683 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10685, metadata !DIExpression()), !dbg !10688
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10689
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10689
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10689
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10686, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.value(metadata i32 0, metadata !10687, metadata !DIExpression()), !dbg !10688
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10690
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10690
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !10692
  %8 = icmp ne i32 %7, 0, !dbg !10692
  %9 = zext i1 %8 to i32, !dbg !10693
  call void @llvm.dbg.value(metadata i32 %9, metadata !10687, metadata !DIExpression()), !dbg !10688
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10694
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !10696
  %12 = icmp eq i32 %11, 0, !dbg !10696
  %13 = or i32 %9, 2, !dbg !10697
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10697
  call void @llvm.dbg.value(metadata i32 %14, metadata !10687, metadata !DIExpression()), !dbg !10688
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10698
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !10700
  %17 = icmp eq i32 %16, 0, !dbg !10700
  %18 = or i32 %14, 4, !dbg !10701
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10701
  call void @llvm.dbg.value(metadata i32 %19, metadata !10687, metadata !DIExpression()), !dbg !10688
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10702
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !10704
  %22 = icmp eq i32 %21, 0, !dbg !10704
  %23 = or i32 %19, 8, !dbg !10705
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10705
  call void @llvm.dbg.value(metadata i32 %24, metadata !10687, metadata !DIExpression()), !dbg !10688
  %25 = and i32 %24, 8, !dbg !10706
  %26 = icmp eq i32 %25, 0, !dbg !10706
  br i1 %26, label %29, label %27, !dbg !10708

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10709
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !10711
  br label %29, !dbg !10712

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10713
  %31 = icmp eq i32 %30, 0, !dbg !10713
  br i1 %31, label %34, label %32, !dbg !10715

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10716
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !10718
  br label %34, !dbg !10719

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10720
  %36 = icmp eq i32 %35, 0, !dbg !10720
  br i1 %36, label %39, label %37, !dbg !10722

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10723
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !10725
  br label %39, !dbg !10726

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10727
  %41 = icmp eq i32 %40, 0, !dbg !10727
  br i1 %41, label %44, label %42, !dbg !10729

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10730
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !10732
  br label %44, !dbg !10733

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10734
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !10735
  ret i32 %24, !dbg !10736
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10737 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10739, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10740, metadata !DIExpression()), !dbg !10748
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10749
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10749
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10749
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10741, metadata !DIExpression()), !dbg !10748
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10750
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10750
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10750
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10742, metadata !DIExpression()), !dbg !10748
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10751
  %10 = load i8, i8* %9, align 4, !dbg !10751
  %11 = zext i8 %10 to i32, !dbg !10752
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10753
  call void @llvm.dbg.value(metadata i32 %12, metadata !10744, metadata !DIExpression()), !dbg !10748
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10754
  %14 = load i8, i8* %13, align 1, !dbg !10754
  %15 = zext i8 %14 to i32, !dbg !10755
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10756
  call void @llvm.dbg.value(metadata i32 %16, metadata !10745, metadata !DIExpression()), !dbg !10748
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10757
  %18 = load i8, i8* %17, align 2, !dbg !10757
  %19 = zext i8 %18 to i32, !dbg !10758
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10759
  call void @llvm.dbg.value(metadata i32 %20, metadata !10746, metadata !DIExpression()), !dbg !10748
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10760
  %22 = load i8, i8* %21, align 1, !dbg !10760
  %23 = zext i8 %22 to i32, !dbg !10761
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10762
  call void @llvm.dbg.value(metadata i32 %24, metadata !10747, metadata !DIExpression()), !dbg !10748
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10763

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10765
  br i1 %26, label %69, label %27, !dbg !10767

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10768

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10769
  br i1 %29, label %65, label %30, !dbg !10769

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10771
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10748
  br i1 %31, label %38, label %34, !dbg !10773

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10774
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !10774

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10777
  br i1 %37, label %38, label %69, !dbg !10778

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10779
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10780
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10781
  %41 = icmp eq i32 %12, %40, !dbg !10783
  br i1 %41, label %43, label %42, !dbg !10784

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10785
  br label %43, !dbg !10787

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10788
  %45 = icmp eq i32 %16, %44, !dbg !10790
  br i1 %45, label %47, label %46, !dbg !10791

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10792
  br label %47, !dbg !10794

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10795
  %49 = icmp eq i32 %20, %48, !dbg !10797
  br i1 %49, label %51, label %50, !dbg !10798

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10799
  br label %51, !dbg !10801

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10802
  %53 = icmp eq i32 %24, %52, !dbg !10804
  br i1 %53, label %55, label %54, !dbg !10805

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10806
  br label %55, !dbg !10808

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10809
  %57 = load i32, i32* %56, align 4, !dbg !10809
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10811
  %59 = load i32, i32* %58, align 4, !dbg !10811
  %60 = icmp eq i32 %57, %59, !dbg !10812
  br i1 %60, label %63, label %61, !dbg !10813

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10814
  %62 = load i32, i32* %56, align 4, !dbg !10816
  store i32 %62, i32* %58, align 4, !dbg !10817
  br label %63, !dbg !10818

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10819
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10820
  br label %69, !dbg !10821

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10769
  %67 = and i8 %66, 1, !dbg !10769
  %68 = icmp eq i8 %67, 0, !dbg !10769
  br i1 %68, label %30, label %69, !dbg !10769

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10748
  ret i32 %70, !dbg !10822
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10823 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10825, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10826, metadata !DIExpression()), !dbg !10828
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10829
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10829
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10829
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10827, metadata !DIExpression()), !dbg !10828
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10830
  %7 = load i32, i32* %6, align 4, !dbg !10830
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10831
  store i32 %7, i32* %8, align 4, !dbg !10832
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10833, !range !10834
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10835
  %11 = trunc i32 %10 to i8, !dbg !10835
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10836
  store i8 %11, i8* %12, align 4, !dbg !10837
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10838, !range !10839
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10840
  %15 = trunc i32 %14 to i8, !dbg !10840
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10841
  store i8 %15, i8* %16, align 1, !dbg !10842
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10843
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10844, !range !10834
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10845
  %20 = trunc i32 %19 to i8, !dbg !10845
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10846
  store i8 %20, i8* %21, align 2, !dbg !10847
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10848, !range !10849
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10850
  %24 = trunc i32 %23 to i8, !dbg !10850
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10851
  store i8 %24, i8* %25, align 1, !dbg !10852
  ret i32 0, !dbg !10853
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10854 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10858, metadata !DIExpression()), !dbg !10860
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10861
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10861
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10861
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10859, metadata !DIExpression()), !dbg !10860
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10862
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10862
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10863
  ret i32 %7, !dbg !10864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #2 !dbg !10865 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10869, metadata !DIExpression()), !dbg !10870
  %2 = icmp eq i32 %0, 1024, !dbg !10871
  %3 = select i1 %2, i32 2, i32 0, !dbg !10871
  %4 = icmp eq i32 %0, 1536, !dbg !10871
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10871
  ret i32 %5, !dbg !10872
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10873 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10875, metadata !DIExpression()), !dbg !10877
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10878
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10878
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10878
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10876, metadata !DIExpression()), !dbg !10877
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10879
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10879
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10880
  ret i32 %7, !dbg !10881
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10882 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10886, metadata !DIExpression()), !dbg !10887
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10888
  %3 = icmp ult i32 %2, 4, !dbg !10888
  br i1 %3, label %4, label %7, !dbg !10888

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10888
  %6 = load i32, i32* %5, align 4, !dbg !10888
  br label %7, !dbg !10888

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10889
  ret i32 %8, !dbg !10891
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10892 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10894, metadata !DIExpression()), !dbg !10896
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10897
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10897
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10897
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10895, metadata !DIExpression()), !dbg !10896
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10898
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10898
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10899
  ret i32 %7, !dbg !10900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !10901 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10905, metadata !DIExpression()), !dbg !10907
  call void @llvm.dbg.value(metadata i32 %1, metadata !10906, metadata !DIExpression()), !dbg !10907
  %3 = icmp eq i32 %0, 4096, !dbg !10908
  %4 = icmp eq i32 %1, 0, !dbg !10908
  %5 = select i1 %4, i32 4, i32 3, !dbg !10908
  %6 = select i1 %4, i32 3, i32 2, !dbg !10908
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10908
  ret i32 %7, !dbg !10909
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10910 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10912, metadata !DIExpression()), !dbg !10914
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10915
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10915
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10915
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10913, metadata !DIExpression()), !dbg !10914
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10916
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10916
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10917
  ret i32 %7, !dbg !10918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !10919 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10923, metadata !DIExpression()), !dbg !10924
  %2 = icmp eq i32 %0, 768, !dbg !10925
  %3 = zext i1 %2 to i32, !dbg !10924
  ret i32 %3, !dbg !10927
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10928 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10933, metadata !DIExpression()), !dbg !10934
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10935
  %3 = load volatile i32, i32* %2, align 4, !dbg !10935
  %4 = and i32 %3, 768, !dbg !10935
  ret i32 %4, !dbg !10936
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10937 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10939, metadata !DIExpression()), !dbg !10940
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10941
  %3 = load volatile i32, i32* %2, align 4, !dbg !10941
  %4 = and i32 %3, 4096, !dbg !10941
  ret i32 %4, !dbg !10942
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10943 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10945, metadata !DIExpression()), !dbg !10946
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10947
  %3 = load volatile i32, i32* %2, align 4, !dbg !10947
  %4 = and i32 %3, 12288, !dbg !10947
  ret i32 %4, !dbg !10948
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10949 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10951, metadata !DIExpression()), !dbg !10952
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10953
  %3 = load volatile i32, i32* %2, align 4, !dbg !10953
  %4 = and i32 %3, 1536, !dbg !10953
  ret i32 %4, !dbg !10954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #2 !dbg !10955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10959, metadata !DIExpression()), !dbg !10960
  %2 = icmp eq i32 %0, 2, !dbg !10961
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10961
  %4 = icmp eq i32 %0, 1, !dbg !10961
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10961
  ret i32 %5, !dbg !10962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #2 !dbg !10963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10967, metadata !DIExpression()), !dbg !10968
  %2 = icmp ult i32 %0, 3, !dbg !10969
  br i1 %2, label %3, label %6, !dbg !10969

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10969
  %5 = load i32, i32* %4, align 4, !dbg !10969
  br label %6, !dbg !10969

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10970
  ret i32 %7, !dbg !10972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !10973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10977, metadata !DIExpression()), !dbg !10979
  call void @llvm.dbg.value(metadata i32 %1, metadata !10978, metadata !DIExpression()), !dbg !10979
  %3 = icmp eq i32 %0, 4, !dbg !10980
  %4 = icmp eq i32 %1, 0, !dbg !10980
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10980
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10980
  ret i32 %6, !dbg !10981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !10982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10986, metadata !DIExpression()), !dbg !10987
  %2 = icmp eq i32 %0, 1, !dbg !10988
  %3 = select i1 %2, i32 768, i32 0, !dbg !10987
  ret i32 %3, !dbg !10990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10991 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10995, metadata !DIExpression()), !dbg !10996
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10997
  %3 = load volatile i32, i32* %2, align 4, !dbg !10997
  %4 = and i32 %3, -8193, !dbg !10997
  store volatile i32 %4, i32* %2, align 4, !dbg !10997
  ret void, !dbg !10998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10999 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11003, metadata !DIExpression()), !dbg !11006
  call void @llvm.dbg.value(metadata i32 %1, metadata !11004, metadata !DIExpression()), !dbg !11006
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11007
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11007
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11007
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11005, metadata !DIExpression()), !dbg !11006
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11008
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11008
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11009
  ret void, !dbg !11010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11011 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11013, metadata !DIExpression()), !dbg !11016
  call void @llvm.dbg.value(metadata i32 %1, metadata !11014, metadata !DIExpression()), !dbg !11016
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11017
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11017
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11017
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11015, metadata !DIExpression()), !dbg !11016
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11018
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11018
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11019
  ret void, !dbg !11020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11021 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11023, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata i32 %1, metadata !11024, metadata !DIExpression()), !dbg !11026
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11027
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11027
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11027
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11025, metadata !DIExpression()), !dbg !11026
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11028
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11028
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11029
  ret void, !dbg !11030
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11031 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11033, metadata !DIExpression()), !dbg !11036
  call void @llvm.dbg.value(metadata i32 %1, metadata !11034, metadata !DIExpression()), !dbg !11036
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11037
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11037
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11037
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11035, metadata !DIExpression()), !dbg !11036
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11038
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11038
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11039
  ret void, !dbg !11040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11041 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11043, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.value(metadata i32 %1, metadata !11044, metadata !DIExpression()), !dbg !11048
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11049
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11049
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11049
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11045, metadata !DIExpression()), !dbg !11048
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11050
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11050
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11050
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11046, metadata !DIExpression()), !dbg !11048
  %10 = bitcast i32* %3 to i8*, !dbg !11051
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11051
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11052
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11052
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11056
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11056
  %15 = load i8*, i8** %14, align 4, !dbg !11056
  call void @llvm.dbg.value(metadata i32* %3, metadata !11047, metadata !DIExpression(DW_OP_deref)), !dbg !11048
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11057
  %17 = icmp slt i32 %16, 0, !dbg !11058
  br i1 %17, label %18, label %21, !dbg !11059

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef 1) #24, !dbg !11060
  %20 = zext i8 %19 to i32, !dbg !11060
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef %20) #25, !dbg !11060
  br label %31, !dbg !11066

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11067
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11067
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11068
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11069
  %25 = load i32, i32* %3, align 4, !dbg !11070
  call void @llvm.dbg.value(metadata i32 %25, metadata !11047, metadata !DIExpression()), !dbg !11048
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11071
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11072
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11072
  %28 = load volatile i32, i32* %27, align 4, !dbg !11072
  %29 = icmp ugt i32 %28, 16, !dbg !11072
  br i1 %29, label %31, label %30, !dbg !11075

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.166, i32 0, i32 0), i32 noundef 190) #25, !dbg !11076
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.167, i32 0, i32 0)) #25, !dbg !11076
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.166, i32 0, i32 0), i32 noundef 190) #25, !dbg !11076
  unreachable, !dbg !11076

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11078
  ret void, !dbg !11078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11079 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11081, metadata !DIExpression()), !dbg !11082
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11083
  %3 = load volatile i32, i32* %2, align 4, !dbg !11083
  %4 = or i32 %3, 8192, !dbg !11083
  store volatile i32 %4, i32* %2, align 4, !dbg !11083
  ret void, !dbg !11084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11087, metadata !DIExpression()), !dbg !11091
  call void @llvm.dbg.value(metadata i8* %1, metadata !11088, metadata !DIExpression()), !dbg !11091
  call void @llvm.dbg.value(metadata i32* %2, metadata !11089, metadata !DIExpression()), !dbg !11091
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11092
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11092
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11092
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11090, metadata !DIExpression()), !dbg !11091
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11093
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11093
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11095
  br i1 %9, label %12, label %10, !dbg !11096

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11097
  br label %12, !dbg !11098

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11091
  ret i32 %13, !dbg !11099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef %0) unnamed_addr #2 !dbg !11100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11102, metadata !DIExpression()), !dbg !11103
  %2 = icmp eq i32 %0, 2, !dbg !11104
  %3 = select i1 %2, i8 87, i8 63, !dbg !11104
  %4 = icmp eq i32 %0, 1, !dbg !11104
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11104
  ret i8 %5, !dbg !11105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11106 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11110, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.value(metadata i32 0, metadata !11111, metadata !DIExpression()), !dbg !11112
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11113
  %3 = load volatile i32, i32* %2, align 4, !dbg !11113
  %4 = and i32 %3, -32769, !dbg !11113
  store volatile i32 %4, i32* %2, align 4, !dbg !11113
  ret void, !dbg !11114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11115 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11119, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i32 %1, metadata !11120, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i32 0, metadata !11121, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i32 %2, metadata !11122, metadata !DIExpression()), !dbg !11123
  %4 = zext i32 %1 to i64, !dbg !11124
  %5 = mul nuw nsw i64 %4, 25, !dbg !11124
  %6 = zext i32 %2 to i64, !dbg !11124
  %7 = shl nuw nsw i64 %6, 2, !dbg !11124
  %8 = udiv i64 %5, %7, !dbg !11124
  %9 = trunc i64 %8 to i32, !dbg !11124
  %10 = udiv i32 %9, 100, !dbg !11124
  %11 = shl nuw nsw i32 %10, 4, !dbg !11124
  %12 = mul i32 %10, -100, !dbg !11124
  %13 = add i32 %12, %9, !dbg !11124
  %14 = shl i32 %13, 4, !dbg !11124
  %15 = add i32 %14, 50, !dbg !11124
  %16 = udiv i32 %15, 100, !dbg !11124
  %17 = and i32 %16, 240, !dbg !11124
  %18 = add nuw nsw i32 %17, %11, !dbg !11124
  %19 = and i32 %16, 15, !dbg !11124
  %20 = and i32 %18, 65520, !dbg !11127
  %21 = or i32 %20, %19, !dbg !11127
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11128
  store volatile i32 %21, i32* %22, align 4, !dbg !11129
  ret void, !dbg !11130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11131 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11133, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i32 %1, metadata !11134, metadata !DIExpression()), !dbg !11135
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11136
  %4 = load volatile i32, i32* %3, align 4, !dbg !11136
  %5 = and i32 %4, -769, !dbg !11136
  %6 = or i32 %5, %1, !dbg !11136
  store volatile i32 %6, i32* %3, align 4, !dbg !11136
  ret void, !dbg !11137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11138 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11140, metadata !DIExpression()), !dbg !11142
  call void @llvm.dbg.value(metadata i32 %1, metadata !11141, metadata !DIExpression()), !dbg !11142
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11143
  %4 = load volatile i32, i32* %3, align 4, !dbg !11143
  %5 = and i32 %4, -4097, !dbg !11143
  %6 = or i32 %5, %1, !dbg !11143
  store volatile i32 %6, i32* %3, align 4, !dbg !11143
  ret void, !dbg !11144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11145 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11147, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata i32 %1, metadata !11148, metadata !DIExpression()), !dbg !11149
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11150
  %4 = load volatile i32, i32* %3, align 4, !dbg !11150
  %5 = and i32 %4, -12289, !dbg !11150
  %6 = or i32 %5, %1, !dbg !11150
  store volatile i32 %6, i32* %3, align 4, !dbg !11150
  ret void, !dbg !11151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11152 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11154, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata i32 %1, metadata !11155, metadata !DIExpression()), !dbg !11156
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11157
  %4 = load volatile i32, i32* %3, align 4, !dbg !11157
  %5 = and i32 %4, -1537, !dbg !11157
  %6 = or i32 %5, %1, !dbg !11157
  store volatile i32 %6, i32* %3, align 4, !dbg !11157
  ret void, !dbg !11158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11159 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11161, metadata !DIExpression()), !dbg !11162
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11163
  %3 = load volatile i32, i32* %2, align 4, !dbg !11163
  %4 = lshr i32 %3, 3, !dbg !11164
  %5 = and i32 %4, 1, !dbg !11164
  ret i32 %5, !dbg !11165
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11166 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11168, metadata !DIExpression()), !dbg !11169
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11170
  %3 = load volatile i32, i32* %2, align 4, !dbg !11170
  %4 = and i32 %3, 1, !dbg !11170
  ret i32 %4, !dbg !11171
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11172 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11174, metadata !DIExpression()), !dbg !11175
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11176
  %3 = load volatile i32, i32* %2, align 4, !dbg !11176
  %4 = lshr i32 %3, 1, !dbg !11177
  %5 = and i32 %4, 1, !dbg !11177
  ret i32 %5, !dbg !11178
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11179 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11181, metadata !DIExpression()), !dbg !11182
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11183
  %3 = load volatile i32, i32* %2, align 4, !dbg !11183
  %4 = lshr i32 %3, 8, !dbg !11184
  %5 = and i32 %4, 1, !dbg !11184
  ret i32 %5, !dbg !11185
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11186 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11188, metadata !DIExpression()), !dbg !11189
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11190
  store volatile i32 -257, i32* %2, align 4, !dbg !11190
  ret void, !dbg !11191
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11192 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11194, metadata !DIExpression()), !dbg !11196
  %3 = bitcast i32* %2 to i8*, !dbg !11197
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11197
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11195, metadata !DIExpression()), !dbg !11198
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11199
  %5 = load volatile i32, i32* %4, align 4, !dbg !11199
  store volatile i32 %5, i32* %2, align 4, !dbg !11200
  %6 = load volatile i32, i32* %2, align 4, !dbg !11201
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11202
  %8 = load volatile i32, i32* %7, align 4, !dbg !11202
  store volatile i32 %8, i32* %2, align 4, !dbg !11203
  %9 = load volatile i32, i32* %2, align 4, !dbg !11204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11205
  ret void, !dbg !11205
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11206 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11208, metadata !DIExpression()), !dbg !11210
  %3 = bitcast i32* %2 to i8*, !dbg !11211
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11211
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11209, metadata !DIExpression()), !dbg !11212
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11213
  %5 = load volatile i32, i32* %4, align 4, !dbg !11213
  store volatile i32 %5, i32* %2, align 4, !dbg !11214
  %6 = load volatile i32, i32* %2, align 4, !dbg !11215
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11216
  %8 = load volatile i32, i32* %7, align 4, !dbg !11216
  store volatile i32 %8, i32* %2, align 4, !dbg !11217
  %9 = load volatile i32, i32* %2, align 4, !dbg !11218
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11219
  ret void, !dbg !11219
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11220 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11222, metadata !DIExpression()), !dbg !11224
  %3 = bitcast i32* %2 to i8*, !dbg !11225
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11225
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11223, metadata !DIExpression()), !dbg !11226
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11227
  %5 = load volatile i32, i32* %4, align 4, !dbg !11227
  store volatile i32 %5, i32* %2, align 4, !dbg !11228
  %6 = load volatile i32, i32* %2, align 4, !dbg !11229
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11230
  %8 = load volatile i32, i32* %7, align 4, !dbg !11230
  store volatile i32 %8, i32* %2, align 4, !dbg !11231
  %9 = load volatile i32, i32* %2, align 4, !dbg !11232
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11233
  ret void, !dbg !11233
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11234 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11236, metadata !DIExpression()), !dbg !11238
  %3 = bitcast i32* %2 to i8*, !dbg !11239
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11239
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11237, metadata !DIExpression()), !dbg !11240
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11241
  %5 = load volatile i32, i32* %4, align 4, !dbg !11241
  store volatile i32 %5, i32* %2, align 4, !dbg !11242
  %6 = load volatile i32, i32* %2, align 4, !dbg !11243
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11244
  %8 = load volatile i32, i32* %7, align 4, !dbg !11244
  store volatile i32 %8, i32* %2, align 4, !dbg !11245
  %9 = load volatile i32, i32* %2, align 4, !dbg !11246
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11247
  ret void, !dbg !11247
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11248 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11250, metadata !DIExpression()), !dbg !11251
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11252
  %3 = load volatile i32, i32* %2, align 4, !dbg !11252
  %4 = lshr i32 %3, 7, !dbg !11253
  %5 = and i32 %4, 1, !dbg !11253
  ret i32 %5, !dbg !11254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !11255 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11259, metadata !DIExpression()), !dbg !11261
  call void @llvm.dbg.value(metadata i8 %1, metadata !11260, metadata !DIExpression()), !dbg !11261
  %3 = zext i8 %1 to i32, !dbg !11262
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11263
  store volatile i32 %3, i32* %4, align 4, !dbg !11264
  ret void, !dbg !11265
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11266 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11268, metadata !DIExpression()), !dbg !11269
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11270
  %3 = load volatile i32, i32* %2, align 4, !dbg !11270
  %4 = lshr i32 %3, 5, !dbg !11271
  %5 = and i32 %4, 1, !dbg !11271
  ret i32 %5, !dbg !11272
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11273 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11277, metadata !DIExpression()), !dbg !11278
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11279
  %3 = load volatile i32, i32* %2, align 4, !dbg !11279
  %4 = trunc i32 %3 to i8, !dbg !11280
  ret i8 %4, !dbg !11281
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11282 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11284, metadata !DIExpression()), !dbg !11290
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11291
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11291
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11291
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11285, metadata !DIExpression()), !dbg !11290
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11292
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11292
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11292
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11286, metadata !DIExpression()), !dbg !11290
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11293
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11294
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11294
  %10 = tail call fastcc zeroext i1 @device_is_ready.169(%struct.device* noundef %9) #24, !dbg !11296
  br i1 %10, label %14, label %11, !dbg !11297

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef 1) #24, !dbg !11298
  %13 = zext i8 %12 to i32, !dbg !11298
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.170, i32 0, i32 0), i32 noundef %13) #25, !dbg !11298
  br label %62, !dbg !11304

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11305
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11306
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11306
  %18 = load i8*, i8** %17, align 4, !dbg !11306
  %19 = tail call fastcc i32 @clock_control_on.171(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11307
  call void @llvm.dbg.value(metadata i32 %19, metadata !11289, metadata !DIExpression()), !dbg !11290
  %20 = icmp eq i32 %19, 0, !dbg !11308
  br i1 %20, label %24, label %21, !dbg !11310

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef 1) #24, !dbg !11311
  %23 = zext i8 %22 to i32, !dbg !11311
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.172, i32 0, i32 0), i32 noundef %23) #25, !dbg !11311
  br label %62, !dbg !11317

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11318
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11318
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11319
  call void @llvm.dbg.value(metadata i32 %27, metadata !11289, metadata !DIExpression()), !dbg !11290
  %28 = icmp slt i32 %27, 0, !dbg !11320
  br i1 %28, label %62, label %29, !dbg !11322

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11323
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11323
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11324
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11325
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11326
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11327
  %34 = load i32, i32* %33, align 4, !dbg !11327
  %35 = icmp ult i32 %34, 3, !dbg !11329
  br i1 %35, label %39, label %36, !dbg !11329

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef 2) #24, !dbg !11330
  %38 = zext i8 %37 to i32, !dbg !11330
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.173, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11330
  call void @llvm.dbg.value(metadata i32 0, metadata !11287, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.value(metadata i32 0, metadata !11288, metadata !DIExpression()), !dbg !11290
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11329
  %41 = load i32, i32* %40, align 4, !dbg !11329
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !11329
  %43 = load i32, i32* %42, align 4, !dbg !11329
  br label %44, !dbg !11329

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11339
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11339
  call void @llvm.dbg.value(metadata i32 %46, metadata !11288, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.value(metadata i32 %45, metadata !11287, metadata !DIExpression()), !dbg !11290
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11340
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11341
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11342
  %49 = load i8, i8* %48, align 4, !dbg !11342, !range !6613
  %50 = icmp eq i8 %49, 0, !dbg !11342
  br i1 %50, label %52, label %51, !dbg !11344

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11345
  br label %52, !dbg !11347

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11348
  %54 = load i32, i32* %53, align 4, !dbg !11348
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11349
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11350
  %56 = load i8, i8* %55, align 4, !dbg !11350, !range !6613
  %57 = icmp eq i8 %56, 0, !dbg !11350
  br i1 %57, label %60, label %58, !dbg !11352

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11353
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11355
  br label %60, !dbg !11356

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11357
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11358
  br label %62, !dbg !11359

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11290
  ret i32 %63, !dbg !11360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11361 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11365, metadata !DIExpression()), !dbg !11369
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11370
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11370
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11370
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11366, metadata !DIExpression()), !dbg !11369
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11367, metadata !DIExpression()), !dbg !11369
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11371
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11372
  ret void, !dbg !11373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.169(%struct.device* noundef %0) unnamed_addr #1 !dbg !11374 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11378, metadata !DIExpression()), !dbg !11379
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11380, !srcloc !11382
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.174(%struct.device* noundef %0) #24, !dbg !11383
  ret i1 %2, !dbg !11384
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.171(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11385 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11387, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i8* %1, metadata !11388, metadata !DIExpression()), !dbg !11390
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11391
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11391
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11391
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11389, metadata !DIExpression()), !dbg !11390
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11392
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11392
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11393
  ret i32 %8, !dbg !11394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11395 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11399, metadata !DIExpression()), !dbg !11403
  call void @llvm.dbg.value(metadata i8 0, metadata !11400, metadata !DIExpression()), !dbg !11403
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11404
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11404
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11402, metadata !DIExpression(DW_OP_deref)), !dbg !11403
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11405
  call void @llvm.dbg.value(metadata i32 %4, metadata !11401, metadata !DIExpression()), !dbg !11403
  %5 = icmp slt i32 %4, 0, !dbg !11406
  br i1 %5, label %9, label %6, !dbg !11408

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11409
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11402, metadata !DIExpression()), !dbg !11403
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11410
  br label %9, !dbg !11411

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11403
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11412
  ret i32 %10, !dbg !11412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11413 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11415, metadata !DIExpression()), !dbg !11419
  call void @llvm.dbg.value(metadata i32 12, metadata !11416, metadata !DIExpression()), !dbg !11419
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11420

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11421, metadata !DIExpression()) #23, !dbg !11427
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11430, !srcloc !11431
  call void @llvm.dbg.value(metadata i32 %4, metadata !11426, metadata !DIExpression()) #23, !dbg !11427
  %5 = or i32 %4, 12, !dbg !11432
  call void @llvm.dbg.value(metadata i32 %5, metadata !11417, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.value(metadata i32 %5, metadata !11434, metadata !DIExpression()) #23, !dbg !11441
  call void @llvm.dbg.value(metadata i32* %2, metadata !11439, metadata !DIExpression()) #23, !dbg !11441
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11443, !srcloc !11444
  call void @llvm.dbg.value(metadata i32 %6, metadata !11440, metadata !DIExpression()) #23, !dbg !11441
  %7 = icmp eq i32 %6, 0, !dbg !11420
  br i1 %7, label %8, label %3, !dbg !11432, !llvm.loop !11445

8:                                                ; preds = %3
  ret void, !dbg !11446
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11447 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11449, metadata !DIExpression()), !dbg !11453
  call void @llvm.dbg.value(metadata i32 %1, metadata !11450, metadata !DIExpression()), !dbg !11453
  call void @llvm.dbg.value(metadata i32 %2, metadata !11451, metadata !DIExpression()), !dbg !11453
  call void @llvm.dbg.value(metadata i32 0, metadata !11452, metadata !DIExpression()), !dbg !11453
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11454
  %5 = load volatile i32, i32* %4, align 4, !dbg !11454
  %6 = and i32 %5, -5633, !dbg !11454
  %7 = or i32 %2, %1, !dbg !11454
  %8 = or i32 %7, %6, !dbg !11454
  store volatile i32 %8, i32* %4, align 4, !dbg !11454
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11455
  %10 = load volatile i32, i32* %9, align 4, !dbg !11455
  %11 = and i32 %10, -12289, !dbg !11455
  store volatile i32 %11, i32* %9, align 4, !dbg !11455
  ret void, !dbg !11456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11457 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11459, metadata !DIExpression()), !dbg !11460
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11461
  %3 = load volatile i32, i32* %2, align 4, !dbg !11461
  %4 = or i32 %3, 8, !dbg !11461
  store volatile i32 %4, i32* %2, align 4, !dbg !11461
  ret void, !dbg !11462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11463 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11467, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11468, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.value(metadata i32 0, metadata !11469, metadata !DIExpression()), !dbg !11470
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11471
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11471
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11472
  %5 = load i8, i8* %4, align 4, !dbg !11472
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11473
  ret i32 %6, !dbg !11474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.174(%struct.device* noundef %0) unnamed_addr #1 !dbg !11475 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11477, metadata !DIExpression()), !dbg !11478
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11479
  ret i1 %2, !dbg !11480
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !11481 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11483, metadata !DIExpression()), !dbg !11484
  tail call fastcc void @__NVIC_SetPriority.176() #24, !dbg !11485
  store i32 16799, i32* @last_load, align 4, !dbg !11486
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11487
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11488
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11489
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11490
  %3 = or i32 %2, 7, !dbg !11490
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11490
  ret i32 0, !dbg !11491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.176() unnamed_addr #14 !dbg !11492 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11494, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.value(metadata i32 1, metadata !11495, metadata !DIExpression()), !dbg !11496
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11497
  ret void, !dbg !11500
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11501 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11503, metadata !DIExpression()), !dbg !11505
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11506
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11507
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11508
  %5 = add i32 %4, %3, !dbg !11508
  store i32 %5, i32* @cycle_count, align 4, !dbg !11508
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11509
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11510
  %7 = sub i32 %5, %6, !dbg !11513
  %8 = udiv i32 %7, 16800, !dbg !11514
  call void @llvm.dbg.value(metadata i32 %8, metadata !11504, metadata !DIExpression()), !dbg !11505
  %9 = mul nuw i32 %8, 16800, !dbg !11515
  %10 = add i32 %9, %6, !dbg !11516
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11516
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11517
  tail call void @z_arm_int_exit() #25, !dbg !11518
  ret void, !dbg !11519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !11520 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11525
  call void @llvm.dbg.value(metadata i32 %1, metadata !11522, metadata !DIExpression()), !dbg !11526
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11527
  call void @llvm.dbg.value(metadata i32 %2, metadata !11523, metadata !DIExpression()), !dbg !11526
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11528
  call void @llvm.dbg.value(metadata i32 %3, metadata !11524, metadata !DIExpression()), !dbg !11526
  %4 = and i32 %2, 65536, !dbg !11529
  %5 = icmp ne i32 %4, 0, !dbg !11529
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11531
  %8 = load i32, i32* @last_load, align 4, !dbg !11526
  br i1 %7, label %9, label %13, !dbg !11531

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11532
  %11 = add i32 %10, %8, !dbg !11532
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11532
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11534
  br label %13, !dbg !11535

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11536
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11537
  %16 = add i32 %14, %15, !dbg !11538
  ret i32 %16, !dbg !11539
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11544, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i1 %1, metadata !11545, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11557
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11558
  br i1 %4, label %5, label %8, !dbg !11558

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11560
  %7 = and i32 %6, -2, !dbg !11560
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11560
  store i32 -16777216, i32* @last_load, align 4, !dbg !11562
  br label %60, !dbg !11563

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11564
  call void @llvm.dbg.value(metadata i32 %9, metadata !11549, metadata !DIExpression()), !dbg !11557
  br i1 %3, label %18, label %10, !dbg !11565

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11565
  call void @llvm.dbg.value(metadata i32 undef, metadata !11544, metadata !DIExpression()), !dbg !11557
  %12 = icmp slt i32 %11, 1, !dbg !11566
  br i1 %12, label %18, label %13, !dbg !11566

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !11566
  %15 = select i1 %14, i32 %11, i32 997, !dbg !11566
  %16 = mul nuw nsw i32 %15, 16800, !dbg !11566
  %17 = add nuw nsw i32 %16, 16799, !dbg !11566
  br label %18, !dbg !11566

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11544, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11567, metadata !DIExpression()) #23, !dbg !11574
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11576, !srcloc !11582
  call void @llvm.dbg.value(metadata i32 undef, metadata !11579, metadata !DIExpression()) #23, !dbg !11583
  call void @llvm.dbg.value(metadata i32 undef, metadata !11580, metadata !DIExpression()) #23, !dbg !11583
  call void @llvm.dbg.value(metadata i32 undef, metadata !11573, metadata !DIExpression()) #23, !dbg !11574
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11584
  br i1 %21, label %23, label %22, !dbg !11587

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 148) #25, !dbg !11588
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.180, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11588
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 148) #25, !dbg !11588
  unreachable, !dbg !11588

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11576
  call void @llvm.dbg.value(metadata i32 %24, metadata !11579, metadata !DIExpression()) #23, !dbg !11583
  call void @llvm.dbg.value(metadata i32 %24, metadata !11573, metadata !DIExpression()) #23, !dbg !11574
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11590
  call void @llvm.dbg.value(metadata i32 %24, metadata !11550, metadata !DIExpression()), !dbg !11557
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !11591
  call void @llvm.dbg.value(metadata i32 %25, metadata !11555, metadata !DIExpression()), !dbg !11557
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11592
  call void @llvm.dbg.value(metadata i32 %26, metadata !11547, metadata !DIExpression()), !dbg !11557
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11593
  %28 = add i32 %27, %25, !dbg !11593
  store i32 %28, i32* @cycle_count, align 4, !dbg !11593
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11594
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11595
  %30 = sub i32 %28, %29, !dbg !11596
  call void @llvm.dbg.value(metadata i32 %30, metadata !11556, metadata !DIExpression()), !dbg !11557
  %31 = icmp slt i32 %30, 0, !dbg !11597
  br i1 %31, label %41, label %32, !dbg !11599

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11546, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 undef, metadata !11546, metadata !DIExpression()), !dbg !11557
  %33 = add nuw i32 %19, %30, !dbg !11600
  %34 = urem i32 %33, 16800, !dbg !11602
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11546, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11557
  %35 = sub nuw nsw i32 %19, %34, !dbg !11603
  call void @llvm.dbg.value(metadata i32 %35, metadata !11546, metadata !DIExpression()), !dbg !11557
  %36 = icmp ugt i32 %35, 1050, !dbg !11604
  br i1 %36, label %37, label %39, !dbg !11604

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11546, metadata !DIExpression()), !dbg !11557
  %38 = icmp ugt i32 %35, 16749600, !dbg !11605
  br i1 %38, label %41, label %39, !dbg !11607

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1050, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1050, %23 ], [ 16749600, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11608
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11609
  call void @llvm.dbg.value(metadata i32 %43, metadata !11548, metadata !DIExpression()), !dbg !11557
  %44 = add nsw i32 %42, -1, !dbg !11610
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11611
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11612
  %45 = icmp ult i32 %26, %43, !dbg !11613
  br i1 %45, label %46, label %51, !dbg !11615

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11616
  %48 = add i32 %26, %9, !dbg !11618
  %49 = sub i32 %48, %43, !dbg !11619
  %50 = add i32 %49, %47, !dbg !11616
  br label %55, !dbg !11620

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11621
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11623
  %54 = add i32 %52, %53, !dbg !11623
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11624
  store i32 %56, i32* @cycle_count, align 4, !dbg !11624
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #23, !dbg !11631
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11630, metadata !DIExpression()) #23, !dbg !11631
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11633
  br i1 %57, label %59, label %58, !dbg !11636

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.181, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 194) #25, !dbg !11637
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.182, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 194) #25, !dbg !11637
  unreachable, !dbg !11637

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11625, metadata !DIExpression()) #23, !dbg !11631
  call void @llvm.dbg.value(metadata i32 %24, metadata !11639, metadata !DIExpression()) #23, !dbg !11642
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11644, !srcloc !11645
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11646
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11647 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11567, metadata !DIExpression()) #23, !dbg !11651
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11653, !srcloc !11582
  call void @llvm.dbg.value(metadata i32 undef, metadata !11579, metadata !DIExpression()) #23, !dbg !11655
  call void @llvm.dbg.value(metadata i32 undef, metadata !11580, metadata !DIExpression()) #23, !dbg !11655
  call void @llvm.dbg.value(metadata i32 undef, metadata !11573, metadata !DIExpression()) #23, !dbg !11651
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11656
  br i1 %2, label %4, label %3, !dbg !11657

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 148) #25, !dbg !11658
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.180, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11658
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 148) #25, !dbg !11658
  unreachable, !dbg !11658

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11579, metadata !DIExpression()) #23, !dbg !11655
  call void @llvm.dbg.value(metadata i32 undef, metadata !11573, metadata !DIExpression()) #23, !dbg !11651
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11659
  call void @llvm.dbg.value(metadata i32 undef, metadata !11649, metadata !DIExpression()), !dbg !11660
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11661
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11662
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11663
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11650, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11660
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #23, !dbg !11664
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11630, metadata !DIExpression()) #23, !dbg !11664
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11666
  br i1 %8, label %10, label %9, !dbg !11667

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.181, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 194) #25, !dbg !11668
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.182, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11668
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 194) #25, !dbg !11668
  unreachable, !dbg !11668

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11669
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11650, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11660
  %12 = sub i32 %11, %7, !dbg !11670
  call void @llvm.dbg.value(metadata i32 %12, metadata !11650, metadata !DIExpression()), !dbg !11660
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11653
  call void @llvm.dbg.value(metadata i32 %13, metadata !11579, metadata !DIExpression()) #23, !dbg !11655
  call void @llvm.dbg.value(metadata i32 %13, metadata !11573, metadata !DIExpression()) #23, !dbg !11651
  call void @llvm.dbg.value(metadata i32 %13, metadata !11649, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #23, !dbg !11664
  call void @llvm.dbg.value(metadata i32 undef, metadata !11639, metadata !DIExpression()) #23, !dbg !11671
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11673, !srcloc !11645
  %14 = udiv i32 %12, 16800, !dbg !11674
  ret i32 %14, !dbg !11675
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11676 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11567, metadata !DIExpression()) #23, !dbg !11680
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11682, !srcloc !11582
  call void @llvm.dbg.value(metadata i32 undef, metadata !11579, metadata !DIExpression()) #23, !dbg !11684
  call void @llvm.dbg.value(metadata i32 undef, metadata !11580, metadata !DIExpression()) #23, !dbg !11684
  call void @llvm.dbg.value(metadata i32 undef, metadata !11573, metadata !DIExpression()) #23, !dbg !11680
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11685
  br i1 %2, label %4, label %3, !dbg !11686

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 148) #25, !dbg !11687
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.180, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11687
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 148) #25, !dbg !11687
  unreachable, !dbg !11687

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11579, metadata !DIExpression()) #23, !dbg !11684
  call void @llvm.dbg.value(metadata i32 undef, metadata !11573, metadata !DIExpression()) #23, !dbg !11680
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11688
  call void @llvm.dbg.value(metadata i32 undef, metadata !11678, metadata !DIExpression()), !dbg !11689
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11690
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11691
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11679, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11689
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #23, !dbg !11692
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11630, metadata !DIExpression()) #23, !dbg !11692
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11694
  br i1 %7, label %9, label %8, !dbg !11695

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.181, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 194) #25, !dbg !11696
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.182, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11696
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 194) #25, !dbg !11696
  unreachable, !dbg !11696

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11697
  call void @llvm.dbg.value(metadata i32 %10, metadata !11679, metadata !DIExpression()), !dbg !11689
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11682
  call void @llvm.dbg.value(metadata i32 %11, metadata !11579, metadata !DIExpression()) #23, !dbg !11684
  call void @llvm.dbg.value(metadata i32 %11, metadata !11573, metadata !DIExpression()) #23, !dbg !11680
  call void @llvm.dbg.value(metadata i32 %11, metadata !11678, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #23, !dbg !11692
  call void @llvm.dbg.value(metadata i32 undef, metadata !11639, metadata !DIExpression()) #23, !dbg !11698
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11700, !srcloc !11645
  ret i32 %10, !dbg !11701
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !11702 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11703
  %2 = icmp eq i32 %1, -16777216, !dbg !11705
  br i1 %2, label %3, label %6, !dbg !11706

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11707
  %5 = or i32 %4, 1, !dbg !11707
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11707
  br label %6, !dbg !11709

6:                                                ; preds = %3, %0
  ret void, !dbg !11710
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !11711 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11712
  %2 = and i32 %1, -2, !dbg !11712
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11712
  ret void, !dbg !11713
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !11714 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11740, metadata !DIExpression()), !dbg !11743
  call void @llvm.dbg.value(metadata i8 %1, metadata !11741, metadata !DIExpression()), !dbg !11743
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11742, metadata !DIExpression()), !dbg !11743
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11744
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11744
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11743
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11745
  %8 = load i8, i8* %6, align 4, !dbg !11746
  %9 = zext i8 %8 to i32, !dbg !11747
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11747
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11748
  br i1 %11, label %18, label %24, !dbg !11749

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11743
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11745
  %14 = load i8, i8* %6, align 4, !dbg !11746
  %15 = zext i8 %14 to i32, !dbg !11747
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11747
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11748
  br i1 %17, label %18, label %24, !dbg !11749, !llvm.loop !11750

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11752
  %21 = load i8, i8* %20, align 1, !dbg !11752
  %22 = icmp eq i8 %21, %1, !dbg !11755
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11756
  br i1 %22, label %24, label %12, !dbg !11757

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11743
  ret i32 %25, !dbg !11758
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11759 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11770, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i8 %1, metadata !11771, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i32 %2, metadata !11772, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i32 0, metadata !11775, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i32 0, metadata !11776, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i8 0, metadata !11777, metadata !DIExpression()), !dbg !11787
  %4 = icmp eq i8 %1, 0, !dbg !11788
  br i1 %4, label %35, label %5, !dbg !11789

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11788
  br label %9, !dbg !11789

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11777, metadata !DIExpression()), !dbg !11787
  call void @llvm.dbg.value(metadata i32 %29, metadata !11775, metadata !DIExpression()), !dbg !11786
  %8 = icmp eq i32 %34, %6, !dbg !11788
  br i1 %8, label %35, label %9, !dbg !11789, !llvm.loop !11790

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11777, metadata !DIExpression()), !dbg !11787
  call void @llvm.dbg.value(metadata i32 %11, metadata !11775, metadata !DIExpression()), !dbg !11786
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11792
  %13 = load i32, i32* %12, align 4, !dbg !11792
  call void @llvm.dbg.value(metadata i32 %13, metadata !11774, metadata !DIExpression()), !dbg !11786
  %14 = and i32 %13, 31, !dbg !11793
  %15 = icmp ult i32 %14, 16, !dbg !11794
  br i1 %15, label %16, label %20, !dbg !11795

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11796
  %18 = load i32, i32* %17, align 4, !dbg !11796
  %19 = or i32 %18, 32, !dbg !11798
  call void @llvm.dbg.value(metadata i32 %19, metadata !11775, metadata !DIExpression()), !dbg !11786
  br label %28, !dbg !11799

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11800

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11801
  %23 = load i32, i32* %22, align 4, !dbg !11801
  call void @llvm.dbg.value(metadata i32 %23, metadata !11779, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11802
  %24 = lshr i32 %23, 7, !dbg !11803
  %25 = and i32 %24, 16, !dbg !11803
  %26 = or i32 %25, %23, !dbg !11803
  call void @llvm.dbg.value(metadata i32 %26, metadata !11775, metadata !DIExpression()), !dbg !11786
  br label %28, !dbg !11804

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11786
  call void @llvm.dbg.value(metadata i32 %29, metadata !11775, metadata !DIExpression()), !dbg !11786
  %30 = lshr i32 %13, 5, !dbg !11805
  %31 = and i32 %30, 255, !dbg !11805
  call void @llvm.dbg.value(metadata i32 %31, metadata !11773, metadata !DIExpression()), !dbg !11786
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11806
  call void @llvm.dbg.value(metadata i32 %32, metadata !11776, metadata !DIExpression()), !dbg !11786
  %33 = icmp slt i32 %32, 0, !dbg !11807
  %34 = add nuw nsw i32 %10, 1, !dbg !11809
  call void @llvm.dbg.value(metadata i32 %34, metadata !11777, metadata !DIExpression()), !dbg !11787
  br i1 %33, label %35, label %7, !dbg !11810

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11811
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11816, metadata !DIExpression()), !dbg !11820
  call void @llvm.dbg.value(metadata i32 %1, metadata !11817, metadata !DIExpression()), !dbg !11820
  call void @llvm.dbg.value(metadata i32 %2, metadata !11818, metadata !DIExpression()), !dbg !11820
  %4 = icmp ugt i32 %0, 175, !dbg !11821
  br i1 %4, label %16, label %5, !dbg !11823

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11824
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11825
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11825
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11819, metadata !DIExpression()), !dbg !11820
  %9 = add nsw i32 %6, -9, !dbg !11826
  %10 = icmp ult i32 %9, 2, !dbg !11826
  br i1 %10, label %16, label %11, !dbg !11828

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.189(%struct.device* noundef %8) #24, !dbg !11829
  br i1 %12, label %13, label %16, !dbg !11830

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11831
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11832
  br label %16, !dbg !11833

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11820
  ret i32 %17, !dbg !11834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.189(%struct.device* noundef %0) unnamed_addr #1 !dbg !11835 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11839, metadata !DIExpression()), !dbg !11840
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11841, !srcloc !11843
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.190(%struct.device* noundef %0) #24, !dbg !11844
  ret i1 %2, !dbg !11845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.190(%struct.device* noundef %0) unnamed_addr #1 !dbg !11846 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11848, metadata !DIExpression()), !dbg !11849
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11850
  ret i1 %2, !dbg !11851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !11852 {
  ret void, !dbg !11853
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11854 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11856, metadata !DIExpression()), !dbg !11861
  call void @llvm.dbg.value(metadata i32 0, metadata !11857, metadata !DIExpression()), !dbg !11861
  call void @llvm.dbg.value(metadata i32 2, metadata !11858, metadata !DIExpression()), !dbg !11861
  call void @llvm.dbg.value(metadata i32 0, metadata !11859, metadata !DIExpression()), !dbg !11861
  call void @llvm.dbg.value(metadata i32 2, metadata !11860, metadata !DIExpression()), !dbg !11861
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11862
  %2 = and i32 %1, 12, !dbg !11863
  call void @llvm.dbg.value(metadata i32 %2, metadata !11856, metadata !DIExpression()), !dbg !11861
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11864

3:                                                ; preds = %0
  br label %21, !dbg !11865

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11867
  call void @llvm.dbg.value(metadata i32 %5, metadata !11859, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11861
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11868
  %7 = and i32 %6, 63, !dbg !11869
  call void @llvm.dbg.value(metadata i32 %7, metadata !11860, metadata !DIExpression()), !dbg !11861
  %8 = and i32 %5, 4194304, !dbg !11870
  %9 = icmp eq i32 %8, 0, !dbg !11870
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !11872
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11872
  %13 = lshr i32 %12, 6, !dbg !11872
  %14 = and i32 %13, 511, !dbg !11872
  %15 = mul i32 %14, %11, !dbg !11872
  call void @llvm.dbg.value(metadata i32 %15, metadata !11857, metadata !DIExpression()), !dbg !11861
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11873
  %17 = lshr i32 %16, 15, !dbg !11874
  %18 = and i32 %17, 6, !dbg !11874
  %19 = add nuw nsw i32 %18, 2, !dbg !11874
  call void @llvm.dbg.value(metadata i32 %19, metadata !11858, metadata !DIExpression()), !dbg !11861
  %20 = udiv i32 %15, %19, !dbg !11875
  br label %21, !dbg !11876

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11877
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11878
  %24 = lshr i32 %23, 4, !dbg !11879
  %25 = and i32 %24, 15, !dbg !11879
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11880
  %27 = load i8, i8* %26, align 1, !dbg !11880
  %28 = zext i8 %27 to i32, !dbg !11880
  call void @llvm.dbg.value(metadata i32 %28, metadata !11856, metadata !DIExpression()), !dbg !11861
  %29 = lshr i32 %22, %28, !dbg !11881
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11881
  ret void, !dbg !11882
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11883 {
  ret i32 0, !dbg !11888
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11889 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11915, metadata !DIExpression()), !dbg !11926
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11927
  br i1 %3, label %311, label %4, !dbg !11929

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11930
  %6 = load i32, i32* %5, align 4, !dbg !11930
  %7 = and i32 %6, 1, !dbg !11932
  %8 = icmp eq i32 %7, 0, !dbg !11933
  br i1 %8, label %66, label %9, !dbg !11934

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11935
  %11 = and i32 %10, 12, !dbg !11935
  %12 = icmp eq i32 %11, 4, !dbg !11938
  br i1 %12, label %21, label %13, !dbg !11939

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11940
  %15 = and i32 %14, 12, !dbg !11940
  %16 = icmp eq i32 %15, 8, !dbg !11941
  br i1 %16, label %17, label %29, !dbg !11942

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11943
  %19 = and i32 %18, 4194304, !dbg !11944
  %20 = icmp eq i32 %19, 0, !dbg !11945
  br i1 %20, label %29, label %21, !dbg !11946

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11947
  %23 = and i32 %22, 131072, !dbg !11947
  %24 = icmp eq i32 %23, 0, !dbg !11947
  br i1 %24, label %66, label %25, !dbg !11950

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11951
  %27 = load i32, i32* %26, align 4, !dbg !11951
  %28 = icmp eq i32 %27, 0, !dbg !11952
  br i1 %28, label %311, label %66, !dbg !11953

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11954
  %31 = load i32, i32* %30, align 4, !dbg !11954
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11958

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11959
  %34 = or i32 %33, 65536, !dbg !11959
  br label %45, !dbg !11959

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11961
  %37 = or i32 %36, 262144, !dbg !11961
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11961
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11961
  %39 = or i32 %38, 65536, !dbg !11961
  br label %45, !dbg !11961

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11964
  %42 = and i32 %41, -65537, !dbg !11964
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11964
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11964
  %44 = and i32 %43, -262145, !dbg !11964
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11966
  %47 = load i32, i32* %30, align 4, !dbg !11967
  %48 = icmp eq i32 %47, 0, !dbg !11969
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11970
  call void @llvm.dbg.value(metadata i32 %49, metadata !11916, metadata !DIExpression()), !dbg !11926
  call void @llvm.dbg.value(metadata i32 %49, metadata !11916, metadata !DIExpression()), !dbg !11926
  br i1 %48, label %58, label %50, !dbg !11971

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11972
  %52 = and i32 %51, 131072, !dbg !11974
  %53 = icmp eq i32 %52, 0, !dbg !11974
  br i1 %53, label %54, label %66, !dbg !11975

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11976
  %56 = sub i32 %55, %49, !dbg !11979
  %57 = icmp ugt i32 %56, 100, !dbg !11980
  br i1 %57, label %311, label %50, !dbg !11981, !llvm.loop !11982

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11984
  %60 = and i32 %59, 131072, !dbg !11984
  %61 = icmp eq i32 %60, 0, !dbg !11984
  br i1 %61, label %66, label %62, !dbg !11986

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11987
  %64 = sub i32 %63, %49, !dbg !11990
  %65 = icmp ugt i32 %64, 100, !dbg !11991
  br i1 %65, label %311, label %58, !dbg !11992, !llvm.loop !11993

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11995
  %68 = and i32 %67, 2, !dbg !11997
  %69 = icmp eq i32 %68, 0, !dbg !11998
  br i1 %69, label %121, label %70, !dbg !11999

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12000
  %72 = and i32 %71, 12, !dbg !12000
  %73 = icmp eq i32 %72, 0, !dbg !12003
  br i1 %73, label %82, label %74, !dbg !12004

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12005
  %76 = and i32 %75, 12, !dbg !12005
  %77 = icmp eq i32 %76, 8, !dbg !12006
  br i1 %77, label %78, label %90, !dbg !12007

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12008
  %80 = and i32 %79, 4194304, !dbg !12009
  %81 = icmp eq i32 %80, 0, !dbg !12010
  br i1 %81, label %82, label %90, !dbg !12011

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12012
  %84 = and i32 %83, 2, !dbg !12012
  %85 = icmp eq i32 %84, 0, !dbg !12012
  br i1 %85, label %114, label %86, !dbg !12015

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12016
  %88 = load i32, i32* %87, align 4, !dbg !12016
  %89 = icmp eq i32 %88, 1, !dbg !12017
  br i1 %89, label %114, label %311, !dbg !12018

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12019
  %92 = load i32, i32* %91, align 4, !dbg !12019
  %93 = icmp eq i32 %92, 0, !dbg !12022
  br i1 %93, label %104, label %94, !dbg !12023

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12024
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12026
  call void @llvm.dbg.value(metadata i32 %95, metadata !11916, metadata !DIExpression()), !dbg !11926
  br label %96, !dbg !12027

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12028
  %98 = and i32 %97, 2, !dbg !12029
  %99 = icmp eq i32 %98, 0, !dbg !12029
  br i1 %99, label %100, label %114, !dbg !12027

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12030
  %102 = sub i32 %101, %95, !dbg !12033
  %103 = icmp ugt i32 %102, 2, !dbg !12034
  br i1 %103, label %311, label %96, !dbg !12035, !llvm.loop !12036

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12038
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12040
  call void @llvm.dbg.value(metadata i32 %105, metadata !11916, metadata !DIExpression()), !dbg !11926
  br label %106, !dbg !12041

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12042
  %108 = and i32 %107, 2, !dbg !12042
  %109 = icmp eq i32 %108, 0, !dbg !12042
  br i1 %109, label %121, label %110, !dbg !12041

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12043
  %112 = sub i32 %111, %105, !dbg !12046
  %113 = icmp ugt i32 %112, 2, !dbg !12047
  br i1 %113, label %311, label %106, !dbg !12048, !llvm.loop !12049

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12051
  %116 = and i32 %115, -249, !dbg !12051
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12051
  %118 = load i32, i32* %117, align 4, !dbg !12051
  %119 = shl i32 %118, 3, !dbg !12051
  %120 = or i32 %119, %116, !dbg !12051
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12051
  br label %121, !dbg !12052

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12052
  %123 = and i32 %122, 8, !dbg !12054
  %124 = icmp eq i32 %123, 0, !dbg !12055
  br i1 %124, label %149, label %125, !dbg !12056

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12057
  %127 = load i32, i32* %126, align 4, !dbg !12057
  %128 = icmp eq i32 %127, 0, !dbg !12060
  br i1 %128, label %139, label %129, !dbg !12061

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12062
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12064
  call void @llvm.dbg.value(metadata i32 %130, metadata !11916, metadata !DIExpression()), !dbg !11926
  br label %131, !dbg !12065

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12066
  %133 = and i32 %132, 2, !dbg !12067
  %134 = icmp eq i32 %133, 0, !dbg !12067
  br i1 %134, label %135, label %149, !dbg !12065

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12068
  %137 = sub i32 %136, %130, !dbg !12071
  %138 = icmp ugt i32 %137, 2, !dbg !12072
  br i1 %138, label %311, label %131, !dbg !12073, !llvm.loop !12074

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12076
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12078
  call void @llvm.dbg.value(metadata i32 %140, metadata !11916, metadata !DIExpression()), !dbg !11926
  br label %141, !dbg !12079

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12080
  %143 = and i32 %142, 2, !dbg !12080
  %144 = icmp eq i32 %143, 0, !dbg !12080
  br i1 %144, label %149, label %145, !dbg !12079

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12081
  %147 = sub i32 %146, %140, !dbg !12084
  %148 = icmp ugt i32 %147, 2, !dbg !12085
  br i1 %148, label %311, label %141, !dbg !12086, !llvm.loop !12087

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12089
  %151 = and i32 %150, 4, !dbg !12090
  %152 = icmp eq i32 %151, 0, !dbg !12091
  br i1 %152, label %221, label %153, !dbg !12092

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11918, metadata !DIExpression()), !dbg !12093
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12094
  %155 = and i32 %154, 268435456, !dbg !12094
  %156 = icmp eq i32 %155, 0, !dbg !12094
  br i1 %156, label %157, label %164, !dbg !12095

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12096
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12096
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11922, metadata !DIExpression()), !dbg !12096
  store volatile i32 0, i32* %2, align 4, !dbg !12096
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12096
  %160 = or i32 %159, 268435456, !dbg !12096
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12096
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12096
  %162 = and i32 %161, 268435456, !dbg !12096
  store volatile i32 %162, i32* %2, align 4, !dbg !12096
  %163 = load volatile i32, i32* %2, align 4, !dbg !12096
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12097
  call void @llvm.dbg.value(metadata i32 1, metadata !11918, metadata !DIExpression()), !dbg !12093
  br label %164, !dbg !12098

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11918, metadata !DIExpression()), !dbg !12093
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12099
  %166 = and i32 %165, 256, !dbg !12099
  %167 = icmp eq i32 %166, 0, !dbg !12099
  br i1 %167, label %168, label %180, !dbg !12101

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12102
  %170 = or i32 %169, 256, !dbg !12102
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12102
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12104
  call void @llvm.dbg.value(metadata i32 %171, metadata !11916, metadata !DIExpression()), !dbg !11926
  br label %172, !dbg !12105

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12106
  %174 = and i32 %173, 256, !dbg !12106
  %175 = icmp eq i32 %174, 0, !dbg !12106
  br i1 %175, label %176, label %180, !dbg !12105

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12107
  %178 = sub i32 %177, %171, !dbg !12110
  %179 = icmp ugt i32 %178, 2, !dbg !12111
  br i1 %179, label %311, label %172, !dbg !12112, !llvm.loop !12113

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12115
  %182 = load i32, i32* %181, align 4, !dbg !12115
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12118

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12119
  %185 = or i32 %184, 1, !dbg !12119
  br label %196, !dbg !12119

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12121
  %188 = or i32 %187, 4, !dbg !12121
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12121
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12121
  %190 = or i32 %189, 1, !dbg !12121
  br label %196, !dbg !12121

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12124
  %193 = and i32 %192, -2, !dbg !12124
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12124
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12124
  %195 = and i32 %194, -5, !dbg !12124
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12126
  %198 = load i32, i32* %181, align 4, !dbg !12127
  %199 = icmp eq i32 %198, 0, !dbg !12129
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12130
  call void @llvm.dbg.value(metadata i32 %200, metadata !11916, metadata !DIExpression()), !dbg !11926
  call void @llvm.dbg.value(metadata i32 %200, metadata !11916, metadata !DIExpression()), !dbg !11926
  br i1 %199, label %209, label %201, !dbg !12131

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12132
  %203 = and i32 %202, 2, !dbg !12134
  %204 = icmp eq i32 %203, 0, !dbg !12134
  br i1 %204, label %205, label %217, !dbg !12135

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12136
  %207 = sub i32 %206, %200, !dbg !12139
  %208 = icmp ugt i32 %207, 5000, !dbg !12140
  br i1 %208, label %311, label %201, !dbg !12141, !llvm.loop !12142

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12144
  %211 = and i32 %210, 2, !dbg !12144
  %212 = icmp eq i32 %211, 0, !dbg !12144
  br i1 %212, label %217, label %213, !dbg !12146

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12147
  %215 = sub i32 %214, %200, !dbg !12150
  %216 = icmp ugt i32 %215, 5000, !dbg !12151
  br i1 %216, label %311, label %209, !dbg !12152, !llvm.loop !12153

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12155

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12156
  %220 = and i32 %219, -268435457, !dbg !12156
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12156
  br label %221, !dbg !12159

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12160
  %223 = load i32, i32* %222, align 4, !dbg !12160
  %224 = icmp eq i32 %223, 0, !dbg !12162
  br i1 %224, label %310, label %225, !dbg !12163

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12164
  %227 = and i32 %226, 12, !dbg !12164
  %228 = icmp eq i32 %227, 8, !dbg !12167
  br i1 %228, label %277, label %229, !dbg !12168

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12169
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12172
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12172
  call void @llvm.dbg.value(metadata i32 %231, metadata !11916, metadata !DIExpression()), !dbg !11926
  call void @llvm.dbg.value(metadata i32 %231, metadata !11916, metadata !DIExpression()), !dbg !11926
  br i1 %230, label %232, label %269, !dbg !12173

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12174
  %234 = and i32 %233, 33554432, !dbg !12174
  %235 = icmp eq i32 %234, 0, !dbg !12174
  br i1 %235, label %240, label %236, !dbg !12176

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12177
  %238 = sub i32 %237, %231, !dbg !12180
  %239 = icmp ugt i32 %238, 2, !dbg !12181
  br i1 %239, label %311, label %232, !dbg !12182, !llvm.loop !12183

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12185
  %242 = load i32, i32* %241, align 4, !dbg !12185
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12185
  %244 = load i32, i32* %243, align 4, !dbg !12185
  %245 = or i32 %244, %242, !dbg !12185
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12185
  %247 = load i32, i32* %246, align 4, !dbg !12185
  %248 = shl i32 %247, 6, !dbg !12185
  %249 = or i32 %245, %248, !dbg !12185
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12185
  %251 = load i32, i32* %250, align 4, !dbg !12185
  %252 = shl i32 %251, 15, !dbg !12185
  %253 = add i32 %252, -65536, !dbg !12185
  %254 = and i32 %253, -65536, !dbg !12185
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12185
  %256 = load i32, i32* %255, align 4, !dbg !12185
  %257 = shl i32 %256, 24, !dbg !12185
  %258 = or i32 %249, %257, !dbg !12185
  %259 = or i32 %258, %254, !dbg !12185
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12185
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12186
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12187
  call void @llvm.dbg.value(metadata i32 %260, metadata !11916, metadata !DIExpression()), !dbg !11926
  br label %261, !dbg !12188

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12189
  %263 = and i32 %262, 33554432, !dbg !12190
  %264 = icmp eq i32 %263, 0, !dbg !12190
  br i1 %264, label %265, label %310, !dbg !12188

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12191
  %267 = sub i32 %266, %260, !dbg !12194
  %268 = icmp ugt i32 %267, 2, !dbg !12195
  br i1 %268, label %311, label %261, !dbg !12196, !llvm.loop !12197

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12199
  %271 = and i32 %270, 33554432, !dbg !12199
  %272 = icmp eq i32 %271, 0, !dbg !12199
  br i1 %272, label %310, label %273, !dbg !12201

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12202
  %275 = sub i32 %274, %231, !dbg !12205
  %276 = icmp ugt i32 %275, 2, !dbg !12206
  br i1 %276, label %311, label %269, !dbg !12207, !llvm.loop !12208

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12210
  br i1 %278, label %311, label %279, !dbg !12213

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12214
  call void @llvm.dbg.value(metadata i32 %280, metadata !11917, metadata !DIExpression()), !dbg !11926
  %281 = and i32 %280, 4194304, !dbg !12216
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12218
  %283 = load i32, i32* %282, align 4, !dbg !12218
  %284 = icmp eq i32 %281, %283, !dbg !12219
  br i1 %284, label %285, label %311, !dbg !12220

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12221
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12222
  %288 = load i32, i32* %287, align 4, !dbg !12222
  %289 = icmp eq i32 %286, %288, !dbg !12223
  br i1 %289, label %290, label %311, !dbg !12224

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12225
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12226
  %293 = load i32, i32* %292, align 4, !dbg !12226
  %294 = shl i32 %293, 6, !dbg !12227
  %295 = icmp eq i32 %291, %294, !dbg !12228
  br i1 %295, label %296, label %311, !dbg !12229

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12230
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12231
  %299 = load i32, i32* %298, align 4, !dbg !12231
  %300 = shl i32 %299, 15, !dbg !12232
  %301 = add i32 %300, -65536, !dbg !12232
  %302 = and i32 %301, -65536, !dbg !12232
  %303 = icmp eq i32 %297, %302, !dbg !12233
  br i1 %303, label %304, label %311, !dbg !12234

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12235
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12236
  %307 = load i32, i32* %306, align 4, !dbg !12236
  %308 = shl i32 %307, 24, !dbg !12237
  %309 = icmp eq i32 %305, %308, !dbg !12238
  br i1 %309, label %310, label %311, !dbg !12239

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12240

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11926
  ret i32 %312, !dbg !12241
}

; Function Attrs: optsize
declare !dbg !12242 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.ztest_unit_test_stats* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12244 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12257, metadata !DIExpression()), !dbg !12260
  call void @llvm.dbg.value(metadata i32 %1, metadata !12258, metadata !DIExpression()), !dbg !12260
  %3 = icmp eq %struct.ztest_unit_test_stats* %0, null, !dbg !12261
  br i1 %3, label %115, label %4, !dbg !12263

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12264
  %6 = and i32 %5, 7, !dbg !12264
  %7 = icmp ult i32 %6, %1, !dbg !12266
  br i1 %7, label %8, label %13, !dbg !12267

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12268
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12268
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12270
  %11 = and i32 %10, 7, !dbg !12270
  %12 = icmp eq i32 %11, %1, !dbg !12272
  br i1 %12, label %13, label %115, !dbg !12273

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12274
  %15 = load i32, i32* %14, align 4, !dbg !12274
  %16 = and i32 %15, 2, !dbg !12276
  %17 = icmp eq i32 %16, 0, !dbg !12277
  br i1 %17, label %39, label %18, !dbg !12278

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12279
  %20 = icmp eq i32 %19, 0, !dbg !12282
  br i1 %20, label %25, label %21, !dbg !12283

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12284
  %23 = or i32 %22, 7168, !dbg !12284
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12284
  %24 = load i32, i32* %14, align 4, !dbg !12286
  br label %25, !dbg !12288

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12286
  %27 = and i32 %26, 8, !dbg !12289
  %28 = icmp eq i32 %27, 0, !dbg !12290
  br i1 %28, label %32, label %29, !dbg !12291

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12292
  %31 = or i32 %30, 57344, !dbg !12292
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12292
  br label %32, !dbg !12294

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12295
  %34 = and i32 %33, -241, !dbg !12295
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12295
  %36 = load i32, i32* %35, align 4, !dbg !12295
  %37 = or i32 %34, %36, !dbg !12295
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12295
  %38 = load i32, i32* %14, align 4, !dbg !12296
  br label %39, !dbg !12298

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12296
  %41 = and i32 %40, 1, !dbg !12299
  %42 = icmp eq i32 %41, 0, !dbg !12300
  br i1 %42, label %73, label %43, !dbg !12301

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12302
  %45 = load i32, i32* %44, align 4, !dbg !12302
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12305

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12306
  %48 = and i32 %47, 131072, !dbg !12309
  %49 = icmp eq i32 %48, 0, !dbg !12309
  br i1 %49, label %115, label %58, !dbg !12310

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12311
  %52 = and i32 %51, 33554432, !dbg !12315
  %53 = icmp eq i32 %52, 0, !dbg !12315
  br i1 %53, label %115, label %58, !dbg !12316

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12317
  %56 = and i32 %55, 2, !dbg !12320
  %57 = icmp eq i32 %56, 0, !dbg !12320
  br i1 %57, label %115, label %58, !dbg !12321

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12322
  %60 = and i32 %59, -4, !dbg !12322
  %61 = or i32 %60, %45, !dbg !12322
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12322
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12323
  call void @llvm.dbg.value(metadata i32 %62, metadata !12259, metadata !DIExpression()), !dbg !12260
  br label %63, !dbg !12324

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12325
  %65 = and i32 %64, 12, !dbg !12325
  %66 = load i32, i32* %44, align 4, !dbg !12326
  %67 = shl i32 %66, 2, !dbg !12327
  %68 = icmp eq i32 %65, %67, !dbg !12328
  br i1 %68, label %73, label %69, !dbg !12324

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12329
  %71 = sub i32 %70, %62, !dbg !12332
  %72 = icmp ugt i32 %71, 5000, !dbg !12333
  br i1 %72, label %115, label %63, !dbg !12334, !llvm.loop !12335

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12337
  %75 = and i32 %74, 7, !dbg !12337
  %76 = icmp ugt i32 %75, %1, !dbg !12339
  br i1 %76, label %77, label %82, !dbg !12340

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12341
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12341
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12343
  %80 = and i32 %79, 7, !dbg !12343
  %81 = icmp eq i32 %80, %1, !dbg !12345
  br i1 %81, label %82, label %115, !dbg !12346

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12347
  %84 = and i32 %83, 4, !dbg !12349
  %85 = icmp eq i32 %84, 0, !dbg !12350
  br i1 %85, label %93, label %86, !dbg !12351

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12352
  %88 = and i32 %87, -7169, !dbg !12352
  %89 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12352
  %90 = load i32, i32* %89, align 4, !dbg !12352
  %91 = or i32 %88, %90, !dbg !12352
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12352
  %92 = load i32, i32* %14, align 4, !dbg !12354
  br label %93, !dbg !12356

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12354
  %95 = and i32 %94, 8, !dbg !12357
  %96 = icmp eq i32 %95, 0, !dbg !12358
  br i1 %96, label %104, label %97, !dbg !12359

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12360
  %99 = and i32 %98, -57345, !dbg !12360
  %100 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12360
  %101 = load i32, i32* %100, align 4, !dbg !12360
  %102 = shl i32 %101, 3, !dbg !12360
  %103 = or i32 %102, %99, !dbg !12360
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12360
  br label %104, !dbg !12362

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12363
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12364
  %107 = lshr i32 %106, 4, !dbg !12365
  %108 = and i32 %107, 15, !dbg !12365
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12366
  %110 = load i8, i8* %109, align 1, !dbg !12366
  %111 = zext i8 %110 to i32, !dbg !12366
  %112 = lshr i32 %105, %111, !dbg !12367
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12368
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12369
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12370
  br label %115, !dbg !12371

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12260
  ret i32 %116, !dbg !12372
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12373 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12375, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12376, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12377, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12378, metadata !DIExpression()), !dbg !12379
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12380
  %2 = and i32 %1, 12, !dbg !12381
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12382

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !12378, metadata !DIExpression()), !dbg !12379
  br label %24, !dbg !12383

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12386
  %6 = and i32 %5, 63, !dbg !12388
  call void @llvm.dbg.value(metadata i32 %6, metadata !12375, metadata !DIExpression()), !dbg !12379
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12389
  %8 = and i32 %7, 4194304, !dbg !12389
  %9 = icmp eq i32 %8, 0, !dbg !12391
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12392
  %11 = lshr i32 %10, 6, !dbg !12392
  %12 = and i32 %11, 511, !dbg !12392
  %13 = zext i32 %12 to i64, !dbg !12392
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !12392
  %16 = zext i32 %6 to i64, !dbg !12392
  %17 = udiv i64 %15, %16, !dbg !12392
  %18 = trunc i64 %17 to i32, !dbg !12392
  call void @llvm.dbg.value(metadata i32 %18, metadata !12376, metadata !DIExpression()), !dbg !12379
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12393
  %20 = lshr i32 %19, 15, !dbg !12394
  %21 = and i32 %20, 6, !dbg !12394
  %22 = add nuw nsw i32 %21, 2, !dbg !12394
  call void @llvm.dbg.value(metadata i32 %22, metadata !12377, metadata !DIExpression()), !dbg !12379
  %23 = udiv i32 %18, %22, !dbg !12395
  call void @llvm.dbg.value(metadata i32 %23, metadata !12378, metadata !DIExpression()), !dbg !12379
  br label %24, !dbg !12396

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !12397
  call void @llvm.dbg.value(metadata i32 %25, metadata !12378, metadata !DIExpression()), !dbg !12379
  ret i32 %25, !dbg !12398
}

; Function Attrs: optsize
declare !dbg !12399 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12402 {
  %4 = alloca %struct.ztest_unit_test_stats, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12406, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i32 %1, metadata !12407, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i32 %2, metadata !12408, metadata !DIExpression()), !dbg !12426
  %7 = bitcast %struct.ztest_unit_test_stats* %4 to i8*, !dbg !12427
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12427
  call void @llvm.dbg.declare(metadata %struct.ztest_unit_test_stats* %4, metadata !12409, metadata !DIExpression()), !dbg !12428
  %8 = icmp eq i32 %0, 0, !dbg !12429
  br i1 %8, label %9, label %23, !dbg !12430

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12431
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12431
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12419, metadata !DIExpression()), !dbg !12431
  store volatile i32 0, i32* %5, align 4, !dbg !12431
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12431
  %12 = or i32 %11, 1, !dbg !12431
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12431
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12431
  %14 = and i32 %13, 1, !dbg !12431
  store volatile i32 %14, i32* %5, align 4, !dbg !12431
  %15 = load volatile i32, i32* %5, align 4, !dbg !12431
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12432
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12433
  store i32 256, i32* %16, align 4, !dbg !12434
  %17 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12435
  store i32 2, i32* %17, align 4, !dbg !12436
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12437
  store i32 3, i32* %18, align 4, !dbg !12438
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12439
  store i32 0, i32* %19, align 4, !dbg !12440
  %20 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12441
  store i32 0, i32* %20, align 4, !dbg !12442
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12443
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12444
  %22 = and i32 %21, -123731969, !dbg !12444
  br label %38, !dbg !12445

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12446
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12446
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12423, metadata !DIExpression()), !dbg !12446
  store volatile i32 0, i32* %6, align 4, !dbg !12446
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12446
  %26 = or i32 %25, 4, !dbg !12446
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12446
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12446
  %28 = and i32 %27, 4, !dbg !12446
  store volatile i32 %28, i32* %6, align 4, !dbg !12446
  %29 = load volatile i32, i32* %6, align 4, !dbg !12446
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12447
  %30 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12448
  store i32 512, i32* %30, align 4, !dbg !12449
  %31 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12450
  store i32 2, i32* %31, align 4, !dbg !12451
  %32 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12452
  store i32 3, i32* %32, align 4, !dbg !12453
  %33 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12454
  store i32 0, i32* %33, align 4, !dbg !12455
  %34 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12456
  store i32 0, i32* %34, align 4, !dbg !12457
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12458
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12459
  %36 = and i32 %35, 134217727, !dbg !12459
  %37 = shl i32 %2, 3, !dbg !12459
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12460
  %42 = or i32 %41, %40, !dbg !12460
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12460
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12461
  ret void, !dbg !12461
}

; Function Attrs: optsize
declare !dbg !12462 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.ztest_unit_test_stats* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !12466 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12467
  ret void, !dbg !12468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !12469 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12470
  ret void, !dbg !12471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !12472 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12473
  ret i32 %1, !dbg !12474
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !12475 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12476
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12477
  %3 = lshr i32 %2, 10, !dbg !12478
  %4 = and i32 %3, 7, !dbg !12478
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12479
  %6 = load i8, i8* %5, align 1, !dbg !12479
  %7 = zext i8 %6 to i32, !dbg !12479
  %8 = lshr i32 %1, %7, !dbg !12480
  ret i32 %8, !dbg !12481
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !12482 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12483
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12484
  %3 = lshr i32 %2, 13, !dbg !12485
  %4 = and i32 %3, 7, !dbg !12485
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12486
  %6 = load i8, i8* %5, align 1, !dbg !12486
  %7 = zext i8 %6 to i32, !dbg !12486
  %8 = lshr i32 %1, %7, !dbg !12487
  ret i32 %8, !dbg !12488
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12489 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12493, metadata !DIExpression()), !dbg !12494
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12495
  store i32 15, i32* %2, align 4, !dbg !12496
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12497
  %4 = and i32 %3, 262144, !dbg !12499
  %5 = icmp eq i32 %4, 0, !dbg !12500
  br i1 %5, label %8, label %6, !dbg !12501

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12502
  store i32 327680, i32* %7, align 4, !dbg !12504
  br label %15, !dbg !12505

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12506
  %10 = and i32 %9, 65536, !dbg !12508
  %11 = icmp eq i32 %10, 0, !dbg !12509
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12510
  br i1 %11, label %14, label %13, !dbg !12511

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12512
  br label %15, !dbg !12514

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12515
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12517
  %17 = and i32 %16, 1, !dbg !12519
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12520
  store i32 %17, i32* %18, align 4, !dbg !12522
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12523
  %20 = lshr i32 %19, 3, !dbg !12524
  %21 = and i32 %20, 31, !dbg !12524
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12525
  store i32 %21, i32* %22, align 4, !dbg !12526
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12527
  %24 = and i32 %23, 4, !dbg !12529
  %25 = icmp eq i32 %24, 0, !dbg !12530
  br i1 %25, label %28, label %26, !dbg !12531

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12532
  store i32 5, i32* %27, align 4, !dbg !12534
  br label %35, !dbg !12535

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12536
  %30 = and i32 %29, 1, !dbg !12538
  %31 = icmp eq i32 %30, 0, !dbg !12539
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12540
  br i1 %31, label %34, label %33, !dbg !12541

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12542
  br label %35, !dbg !12544

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12545
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12547
  %37 = and i32 %36, 1, !dbg !12549
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12550
  store i32 %37, i32* %38, align 4, !dbg !12552
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12553
  %40 = and i32 %39, 16777216, !dbg !12555
  %41 = icmp eq i32 %40, 0, !dbg !12556
  %42 = select i1 %41, i32 1, i32 2, !dbg !12557
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12558
  store i32 %42, i32* %43, align 4, !dbg !12560
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12561
  %45 = and i32 %44, 4194304, !dbg !12562
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12563
  store i32 %45, i32* %46, align 4, !dbg !12564
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12565
  %48 = and i32 %47, 63, !dbg !12566
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12567
  store i32 %48, i32* %49, align 4, !dbg !12568
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12569
  %51 = lshr i32 %50, 6, !dbg !12570
  %52 = and i32 %51, 511, !dbg !12570
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12571
  store i32 %52, i32* %53, align 4, !dbg !12572
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12573
  %55 = shl i32 %54, 1, !dbg !12574
  %56 = and i32 %55, 393216, !dbg !12574
  %57 = add nuw nsw i32 %56, 131072, !dbg !12574
  %58 = lshr exact i32 %57, 16, !dbg !12575
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12576
  store i32 %58, i32* %59, align 4, !dbg !12577
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12578
  %61 = lshr i32 %60, 24, !dbg !12579
  %62 = and i32 %61, 15, !dbg !12579
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12580
  store i32 %62, i32* %63, align 4, !dbg !12581
  ret void, !dbg !12582
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.ztest_unit_test_stats* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !12583 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12587, metadata !DIExpression()), !dbg !12589
  call void @llvm.dbg.value(metadata i32* %1, metadata !12588, metadata !DIExpression()), !dbg !12589
  %3 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12590
  store i32 15, i32* %3, align 4, !dbg !12591
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12592
  %5 = and i32 %4, 3, !dbg !12593
  %6 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12594
  store i32 %5, i32* %6, align 4, !dbg !12595
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12596
  %8 = and i32 %7, 240, !dbg !12597
  %9 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12598
  store i32 %8, i32* %9, align 4, !dbg !12599
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12600
  %11 = and i32 %10, 7168, !dbg !12601
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12602
  store i32 %11, i32* %12, align 4, !dbg !12603
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12604
  %14 = lshr i32 %13, 3, !dbg !12605
  %15 = and i32 %14, 7168, !dbg !12605
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12606
  store i32 %15, i32* %16, align 4, !dbg !12607
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12608
  %18 = and i32 %17, 7, !dbg !12609
  store i32 %18, i32* %1, align 4, !dbg !12610
  ret void, !dbg !12611
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12612 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12613
  %2 = and i32 %1, 128, !dbg !12613
  %3 = icmp eq i32 %2, 0, !dbg !12613
  br i1 %3, label %5, label %4, !dbg !12615

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !12616
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12618
  br label %5, !dbg !12619

5:                                                ; preds = %4, %0
  ret void, !dbg !12620
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12621 {
  ret void, !dbg !12622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !12623 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12626, metadata !DIExpression()), !dbg !12627
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !12628
  ret void, !dbg !12629
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !12630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12633, metadata !DIExpression()), !dbg !12635
  call void @llvm.dbg.value(metadata i32 1000, metadata !12634, metadata !DIExpression()), !dbg !12635
  %2 = udiv i32 %0, 1000, !dbg !12636
  %3 = add nsw i32 %2, -1, !dbg !12637
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12638
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12639
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12640
  ret void, !dbg !12641
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !12642 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12644, metadata !DIExpression()), !dbg !12646
  %3 = bitcast i32* %2 to i8*, !dbg !12647
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12647
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12645, metadata !DIExpression()), !dbg !12648
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12649
  store volatile i32 %4, i32* %2, align 4, !dbg !12648
  %5 = load volatile i32, i32* %2, align 4, !dbg !12650
  %6 = icmp eq i32 %0, -1, !dbg !12651
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12644, metadata !DIExpression()), !dbg !12646
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12646
  call void @llvm.dbg.value(metadata i32 %8, metadata !12644, metadata !DIExpression()), !dbg !12646
  br label %9, !dbg !12653

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12644, metadata !DIExpression()), !dbg !12646
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12654
  call void @llvm.dbg.value(metadata i32 undef, metadata !12644, metadata !DIExpression()), !dbg !12646
  %12 = shl i32 %11, 15, !dbg !12646
  %13 = ashr i32 %12, 31, !dbg !12646
  %14 = add i32 %13, %10, !dbg !12646
  call void @llvm.dbg.value(metadata i32 %14, metadata !12644, metadata !DIExpression()), !dbg !12646
  %15 = icmp eq i32 %14, 0, !dbg !12653
  br i1 %15, label %16, label %9, !dbg !12653

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12657
  ret void, !dbg !12657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12660, metadata !DIExpression()), !dbg !12661
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12662
  ret void, !dbg !12663
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !12664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12669, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata i32 0, metadata !12672, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata i32 0, metadata !12673, metadata !DIExpression()), !dbg !12674
  %2 = icmp eq i32 %0, 0, !dbg !12675
  br i1 %2, label %52, label %3, !dbg !12677

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12678
  %5 = icmp eq i32 %4, 16384, !dbg !12681
  br i1 %5, label %6, label %21, !dbg !12682

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12683
  %8 = select i1 %7, i32 0, i32 5, !dbg !12686
  call void @llvm.dbg.value(metadata i32 %8, metadata !12672, metadata !DIExpression()), !dbg !12674
  %9 = add i32 %0, -120000001, !dbg !12687
  %10 = icmp ult i32 %9, 30000000, !dbg !12687
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12687
  call void @llvm.dbg.value(metadata i32 %11, metadata !12672, metadata !DIExpression()), !dbg !12674
  %12 = icmp ult i32 %9, -30000000, !dbg !12689
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12689
  call void @llvm.dbg.value(metadata i32 %13, metadata !12672, metadata !DIExpression()), !dbg !12674
  %14 = icmp ugt i32 %0, 60000000, !dbg !12691
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12693
  br i1 %16, label %21, label %17, !dbg !12693

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12694
  %19 = and i1 %18, %15, !dbg !12697
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12697
  br label %21, !dbg !12697

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12674
  call void @llvm.dbg.value(metadata i32 %22, metadata !12672, metadata !DIExpression()), !dbg !12674
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12698
  %24 = icmp eq i32 %23, 0, !dbg !12700
  br i1 %24, label %25, label %41, !dbg !12701

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !12702
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12705
  %29 = select i1 %28, i32 4, i32 %22, !dbg !12705
  call void @llvm.dbg.value(metadata i32 %29, metadata !12672, metadata !DIExpression()), !dbg !12674
  %30 = icmp ugt i32 %0, 90000000, !dbg !12706
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12708
  %33 = select i1 %32, i32 3, i32 %29, !dbg !12708
  call void @llvm.dbg.value(metadata i32 %33, metadata !12672, metadata !DIExpression()), !dbg !12674
  %34 = icmp ugt i32 %0, 60000000, !dbg !12709
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12711
  br i1 %36, label %41, label %37, !dbg !12711

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !12712
  %39 = and i1 %38, %35, !dbg !12715
  %40 = select i1 %39, i32 1, i32 %33, !dbg !12715
  br label %41, !dbg !12715

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !12716
  call void @llvm.dbg.value(metadata i32 %42, metadata !12672, metadata !DIExpression()), !dbg !12674
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #24, !dbg !12717
  call void @llvm.dbg.value(metadata i32 2, metadata !12670, metadata !DIExpression()), !dbg !12674
  br label %43, !dbg !12718

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !12716
  call void @llvm.dbg.value(metadata i32 %44, metadata !12670, metadata !DIExpression()), !dbg !12674
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12719
  call void @llvm.dbg.value(metadata i32 %45, metadata !12671, metadata !DIExpression()), !dbg !12674
  %46 = add nsw i32 %44, -1, !dbg !12721
  call void @llvm.dbg.value(metadata i32 %46, metadata !12670, metadata !DIExpression()), !dbg !12674
  %47 = icmp ne i32 %45, %42, !dbg !12722
  %48 = icmp ne i32 %46, 0, !dbg !12723
  %49 = select i1 %47, i1 %48, i1 false, !dbg !12723
  br i1 %49, label %43, label %50, !dbg !12724, !llvm.loop !12725

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !12727
  call void @llvm.dbg.value(metadata i32 %53, metadata !12673, metadata !DIExpression()), !dbg !12674
  ret i32 %53, !dbg !12728
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !12729 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12731
  %2 = and i32 %1, 16384, !dbg !12731
  ret i32 %2, !dbg !12732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !12733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12735, metadata !DIExpression()), !dbg !12736
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12737
  %3 = and i32 %2, -8, !dbg !12737
  %4 = or i32 %3, %0, !dbg !12737
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12737
  ret void, !dbg !12738
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !12739 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12740
  %2 = and i32 %1, 7, !dbg !12740
  ret i32 %2, !dbg !12741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.ztest_suite_stats* nocapture noundef readonly %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !12742 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %0, metadata !12760, metadata !DIExpression()), !dbg !12764
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12761, metadata !DIExpression()), !dbg !12764
  call void @llvm.dbg.value(metadata i32 0, metadata !12762, metadata !DIExpression()), !dbg !12764
  call void @llvm.dbg.value(metadata i32 0, metadata !12763, metadata !DIExpression()), !dbg !12764
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12765
  %4 = icmp eq i32 %3, 0, !dbg !12767
  br i1 %4, label %5, label %21, !dbg !12768

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.ztest_suite_stats* noundef %0) #24, !dbg !12769
  call void @llvm.dbg.value(metadata i32 %6, metadata !12763, metadata !DIExpression()), !dbg !12764
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.199() #24, !dbg !12771
  %8 = icmp eq i32 %7, 1, !dbg !12773
  br i1 %8, label %13, label %9, !dbg !12774

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.200() #24, !dbg !12775
  br label %10, !dbg !12777

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.199() #24, !dbg !12778
  %12 = icmp eq i32 %11, 1, !dbg !12779
  br i1 %12, label %13, label %10, !dbg !12777, !llvm.loop !12780

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 0, !dbg !12782
  %15 = load i32, i32* %14, align 4, !dbg !12782
  %16 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 1, !dbg !12783
  %17 = load i32, i32* %16, align 4, !dbg !12783
  %18 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 2, !dbg !12784
  %19 = load i32, i32* %18, align 4, !dbg !12784
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.201(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !12785
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.ztest_suite_stats* noundef %1) #24, !dbg !12786
  call void @llvm.dbg.value(metadata i32 %20, metadata !12762, metadata !DIExpression()), !dbg !12764
  br label %21, !dbg !12787

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12788
  call void @llvm.dbg.value(metadata i32 %22, metadata !12762, metadata !DIExpression()), !dbg !12764
  ret i32 %22, !dbg !12789
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !12790 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12794, metadata !DIExpression()), !dbg !12795
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.203() #24, !dbg !12796
  %2 = icmp ne i32 %1, 0, !dbg !12798
  call void @llvm.dbg.value(metadata i1 %2, metadata !12794, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12795
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !12799
  %4 = icmp ne i32 %3, 0, !dbg !12801
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12802
  %6 = zext i1 %5 to i32, !dbg !12802
  call void @llvm.dbg.value(metadata i32 %6, metadata !12794, metadata !DIExpression()), !dbg !12795
  ret i32 %6, !dbg !12803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12808, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12809, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i32 0, metadata !12810, metadata !DIExpression()), !dbg !12811
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12812
  %4 = load i32, i32* %3, align 4, !dbg !12812
  %5 = and i32 %4, 63, !dbg !12813
  %6 = udiv i32 %0, %5, !dbg !12814
  call void @llvm.dbg.value(metadata i32 %6, metadata !12810, metadata !DIExpression()), !dbg !12811
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12815
  %8 = load i32, i32* %7, align 4, !dbg !12815
  %9 = and i32 %8, 511, !dbg !12816
  %10 = mul i32 %9, %6, !dbg !12817
  call void @llvm.dbg.value(metadata i32 %10, metadata !12810, metadata !DIExpression()), !dbg !12811
  %11 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12818
  %12 = load i32, i32* %11, align 4, !dbg !12818
  %13 = lshr i32 %12, 15, !dbg !12819
  %14 = and i32 %13, 131070, !dbg !12819
  %15 = add nuw nsw i32 %14, 2, !dbg !12819
  %16 = udiv i32 %10, %15, !dbg !12820
  call void @llvm.dbg.value(metadata i32 %16, metadata !12810, metadata !DIExpression()), !dbg !12811
  ret i32 %16, !dbg !12821
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.199() unnamed_addr #15 !dbg !12822 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12823
  %2 = lshr i32 %1, 1, !dbg !12824
  %3 = and i32 %2, 1, !dbg !12824
  ret i32 %3, !dbg !12825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.200() unnamed_addr #14 !dbg !12826 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12827
  %2 = or i32 %1, 1, !dbg !12827
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12827
  ret void, !dbg !12828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.201(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12829 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12831, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i32 %1, metadata !12832, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i32 %2, metadata !12833, metadata !DIExpression()), !dbg !12835
  call void @llvm.dbg.value(metadata i32 %3, metadata !12834, metadata !DIExpression()), !dbg !12835
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12836
  %6 = and i32 %5, -4227072, !dbg !12836
  %7 = or i32 %1, %0, !dbg !12836
  %8 = shl i32 %2, 6, !dbg !12836
  %9 = or i32 %7, %8, !dbg !12836
  %10 = or i32 %9, %6, !dbg !12836
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12836
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12837
  %12 = and i32 %11, -196609, !dbg !12837
  %13 = or i32 %12, %3, !dbg !12837
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12837
  ret void, !dbg !12838
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12839 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12843, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12844, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.value(metadata i32 0, metadata !12845, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.value(metadata i32 0, metadata !12846, metadata !DIExpression()), !dbg !12847
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12848
  %4 = load i32, i32* %3, align 4, !dbg !12848
  %5 = lshr i32 %4, 4, !dbg !12848
  %6 = and i32 %5, 15, !dbg !12848
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12848
  %8 = load i8, i8* %7, align 1, !dbg !12848
  %9 = zext i8 %8 to i32, !dbg !12848
  %10 = lshr i32 %0, %9, !dbg !12848
  call void @llvm.dbg.value(metadata i32 %10, metadata !12846, metadata !DIExpression()), !dbg !12847
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12849
  %12 = icmp ult i32 %11, %10, !dbg !12851
  br i1 %12, label %13, label %16, !dbg !12852

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12853
  call void @llvm.dbg.value(metadata i32 %14, metadata !12845, metadata !DIExpression()), !dbg !12847
  %15 = icmp eq i32 %14, 0, !dbg !12855
  br i1 %15, label %16, label %30, !dbg !12857

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.202() #24, !dbg !12858
  br label %17, !dbg !12860

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.203() #24, !dbg !12861
  %19 = icmp eq i32 %18, 1, !dbg !12862
  br i1 %19, label %20, label %17, !dbg !12860, !llvm.loop !12863

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12865
  tail call fastcc void @LL_RCC_SetAHBPrescaler.204(i32 noundef %21) #24, !dbg !12866
  tail call fastcc void @LL_RCC_SetSysClkSource.205() #24, !dbg !12867
  br label %22, !dbg !12868

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.206() #24, !dbg !12869
  %24 = icmp eq i32 %23, 8, !dbg !12870
  br i1 %24, label %25, label %22, !dbg !12868, !llvm.loop !12871

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12873
  %27 = load i32, i32* %26, align 4, !dbg !12873
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.207(i32 noundef %27) #24, !dbg !12874
  %28 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12875
  %29 = load i32, i32* %28, align 4, !dbg !12875
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.208(i32 noundef %29) #24, !dbg !12876
  br label %30, !dbg !12877

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12878
  %33 = icmp ugt i32 %32, %10, !dbg !12880
  br i1 %33, label %34, label %36, !dbg !12881

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12882
  call void @llvm.dbg.value(metadata i32 %35, metadata !12845, metadata !DIExpression()), !dbg !12847
  br label %36, !dbg !12884

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12847
  call void @llvm.dbg.value(metadata i32 %37, metadata !12845, metadata !DIExpression()), !dbg !12847
  %38 = icmp eq i32 %37, 0, !dbg !12885
  br i1 %38, label %39, label %40, !dbg !12887

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12888
  br label %40, !dbg !12890

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.202() unnamed_addr #14 !dbg !12892 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12893
  %2 = or i32 %1, 16777216, !dbg !12893
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12893
  ret void, !dbg !12894
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.203() unnamed_addr #15 !dbg !12895 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12896
  %2 = lshr i32 %1, 25, !dbg !12897
  %3 = and i32 %2, 1, !dbg !12897
  ret i32 %3, !dbg !12898
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.204(i32 noundef %0) unnamed_addr #14 !dbg !12899 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12901, metadata !DIExpression()), !dbg !12902
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12903
  %3 = and i32 %2, -241, !dbg !12903
  %4 = or i32 %3, %0, !dbg !12903
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12903
  ret void, !dbg !12904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.205() unnamed_addr #14 !dbg !12905 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12907, metadata !DIExpression()), !dbg !12908
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12909
  %2 = and i32 %1, -4, !dbg !12909
  %3 = or i32 %2, 2, !dbg !12909
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12909
  ret void, !dbg !12910
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.206() unnamed_addr #15 !dbg !12911 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12912
  %2 = and i32 %1, 12, !dbg !12912
  ret i32 %2, !dbg !12913
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.207(i32 noundef %0) unnamed_addr #14 !dbg !12914 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12916, metadata !DIExpression()), !dbg !12917
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12918
  %3 = and i32 %2, -7169, !dbg !12918
  %4 = or i32 %3, %0, !dbg !12918
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12918
  ret void, !dbg !12919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.208(i32 noundef %0) unnamed_addr #14 !dbg !12920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12922, metadata !DIExpression()), !dbg !12923
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12924
  %3 = and i32 %2, -57345, !dbg !12924
  %4 = or i32 %3, %0, !dbg !12924
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12924
  ret void, !dbg !12925
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12926 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12927
  %2 = lshr i32 %1, 27, !dbg !12928
  %3 = and i32 %2, 1, !dbg !12928
  ret i32 %3, !dbg !12929
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.ztest_suite_stats* nocapture noundef readonly %2, %struct.ztest_suite_stats* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12934, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata i32 %1, metadata !12935, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %2, metadata !12936, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %3, metadata !12937, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata i32 0, metadata !12938, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata i32 0, metadata !12939, metadata !DIExpression()), !dbg !12940
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12941
  %6 = icmp eq i32 %5, 0, !dbg !12943
  br i1 %6, label %7, label %27, !dbg !12944

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* noundef %2) #24, !dbg !12945
  call void @llvm.dbg.value(metadata i32 %8, metadata !12939, metadata !DIExpression()), !dbg !12940
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.209() #24, !dbg !12947
  %10 = icmp eq i32 %9, 1, !dbg !12949
  br i1 %10, label %19, label %11, !dbg !12950

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12951
  br i1 %12, label %13, label %14, !dbg !12954

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12955
  br label %15, !dbg !12957

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.210() #24, !dbg !12958
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.211() #24, !dbg !12960
  br label %16, !dbg !12961

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.209() #24, !dbg !12962
  %18 = icmp eq i32 %17, 1, !dbg !12963
  br i1 %18, label %19, label %16, !dbg !12961, !llvm.loop !12964

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 0, !dbg !12966
  %21 = load i32, i32* %20, align 4, !dbg !12966
  %22 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 1, !dbg !12967
  %23 = load i32, i32* %22, align 4, !dbg !12967
  %24 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 2, !dbg !12968
  %25 = load i32, i32* %24, align 4, !dbg !12968
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.201(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12969
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.ztest_suite_stats* noundef %3) #24, !dbg !12970
  call void @llvm.dbg.value(metadata i32 %26, metadata !12938, metadata !DIExpression()), !dbg !12940
  br label %27, !dbg !12971

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12972
  call void @llvm.dbg.value(metadata i32 %28, metadata !12938, metadata !DIExpression()), !dbg !12940
  ret i32 %28, !dbg !12973
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.209() unnamed_addr #15 !dbg !12974 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12975
  %2 = lshr i32 %1, 17, !dbg !12976
  %3 = and i32 %2, 1, !dbg !12976
  ret i32 %3, !dbg !12977
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12978 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12979
  %2 = or i32 %1, 262144, !dbg !12979
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12979
  ret void, !dbg !12980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.210() unnamed_addr #14 !dbg !12981 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12982
  %2 = and i32 %1, -262145, !dbg !12982
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12982
  ret void, !dbg !12983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.211() unnamed_addr #14 !dbg !12984 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12985
  %2 = or i32 %1, 65536, !dbg !12985
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12985
  ret void, !dbg !12986
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12987 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12990, metadata !DIExpression()), !dbg !13006
  call void @llvm.dbg.value(metadata i32 undef, metadata !12990, metadata !DIExpression()), !dbg !13006
  call void @llvm.dbg.value(metadata i32 undef, metadata !12990, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13006
  ret void, !dbg !13007
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13008 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13012, metadata !DIExpression()), !dbg !13014
  %2 = icmp eq i8* %0, null, !dbg !13015
  br i1 %2, label %29, label %3, !dbg !13017

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13018
  %5 = icmp eq i8 %4, 0, !dbg !13019
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13020
  br i1 %6, label %29, label %8, !dbg !13020

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13013, metadata !DIExpression()), !dbg !13014
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13021

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13013, metadata !DIExpression()), !dbg !13014
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13023
  br i1 %10, label %11, label %15, !dbg !13028

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13029
  %13 = load i8*, i8** %12, align 4, !dbg !13029
  %14 = icmp eq i8* %13, %0, !dbg !13030
  br i1 %14, label %29, label %15, !dbg !13031

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13032
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13013, metadata !DIExpression()), !dbg !13014
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13033
  br i1 %17, label %7, label %8, !dbg !13034, !llvm.loop !13035

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13013, metadata !DIExpression()), !dbg !13014
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13037
  br i1 %20, label %21, label %26, !dbg !13041

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13042
  %23 = load i8*, i8** %22, align 4, !dbg !13042
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13043
  %25 = icmp eq i32 %24, 0, !dbg !13044
  br i1 %25, label %29, label %26, !dbg !13045

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13046
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13013, metadata !DIExpression()), !dbg !13014
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13047
  br i1 %28, label %29, label %18, !dbg !13021, !llvm.loop !13048

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13014
  ret %struct.device* %30, !dbg !13050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !13051 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13055, metadata !DIExpression()), !dbg !13056
  %2 = icmp eq %struct.device* %0, null, !dbg !13057
  br i1 %2, label %14, label %3, !dbg !13059

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13060
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13060
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13061
  %7 = load i8, i8* %6, align 1, !dbg !13061
  %8 = and i8 %7, 1, !dbg !13061
  %9 = icmp eq i8 %8, 0, !dbg !13061
  br i1 %9, label %14, label %10, !dbg !13062

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13063
  %12 = load i8, i8* %11, align 1, !dbg !13063
  %13 = icmp eq i8 %12, 0, !dbg !13064
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13056
  ret i1 %15, !dbg !13065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13066 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13071, metadata !DIExpression()), !dbg !13072
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13073
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13074
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13075 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13083, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13084, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i8* %2, metadata !13085, metadata !DIExpression()), !dbg !13088
  %5 = bitcast i32* %4 to i8*, !dbg !13089
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13089
  call void @llvm.dbg.value(metadata i32 0, metadata !13086, metadata !DIExpression()), !dbg !13088
  store i32 0, i32* %4, align 4, !dbg !13090
  call void @llvm.dbg.value(metadata i32* %4, metadata !13086, metadata !DIExpression(DW_OP_deref)), !dbg !13088
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13091
  call void @llvm.dbg.value(metadata i16* %6, metadata !13087, metadata !DIExpression()), !dbg !13088
  %7 = load i32, i32* %4, align 4, !dbg !13092
  call void @llvm.dbg.value(metadata i32 %7, metadata !13086, metadata !DIExpression()), !dbg !13088
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13093
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13094
  ret i32 %8, !dbg !13095
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13096 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13100, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata i32* %1, metadata !13101, metadata !DIExpression()), !dbg !13106
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13107
  %4 = load i16*, i16** %3, align 4, !dbg !13107
  call void @llvm.dbg.value(metadata i16* %4, metadata !13102, metadata !DIExpression()), !dbg !13106
  %5 = icmp eq i16* %4, null, !dbg !13108
  br i1 %5, label %14, label %6, !dbg !13109

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13110
  call void @llvm.dbg.value(metadata i32 %7, metadata !13103, metadata !DIExpression()), !dbg !13110
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13111
  %9 = load i16, i16* %8, align 2, !dbg !13111
  %10 = add i16 %9, -32767, !dbg !13112
  %11 = icmp ult i16 %10, 2, !dbg !13112
  %12 = add i32 %7, 1, !dbg !13113
  call void @llvm.dbg.value(metadata i32 %12, metadata !13103, metadata !DIExpression()), !dbg !13110
  br i1 %11, label %13, label %6, !dbg !13112, !llvm.loop !13115

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13118
  br label %14, !dbg !13119

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13121 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13125, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i32 %1, metadata !13126, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13127, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i8* %3, metadata !13128, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i32 0, metadata !13129, metadata !DIExpression()), !dbg !13137
  %5 = icmp eq i32 %1, 0, !dbg !13138
  br i1 %5, label %16, label %8, !dbg !13139

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13129, metadata !DIExpression()), !dbg !13137
  %7 = icmp eq i32 %15, %1, !dbg !13138
  br i1 %7, label %16, label %8, !dbg !13139, !llvm.loop !13140

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13129, metadata !DIExpression()), !dbg !13137
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13142
  %11 = load i16, i16* %10, align 2, !dbg !13142
  call void @llvm.dbg.value(metadata i16 %11, metadata !13131, metadata !DIExpression()), !dbg !13143
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13144
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13134, metadata !DIExpression()), !dbg !13143
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13145
  call void @llvm.dbg.value(metadata i32 %13, metadata !13135, metadata !DIExpression()), !dbg !13143
  %14 = icmp slt i32 %13, 0, !dbg !13146
  %15 = add nuw i32 %9, 1, !dbg !13148
  call void @llvm.dbg.value(metadata i32 %15, metadata !13129, metadata !DIExpression()), !dbg !13137
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #2 !dbg !13150 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13154, metadata !DIExpression()), !dbg !13157
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13155, metadata !DIExpression()), !dbg !13157
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13156, metadata !DIExpression()), !dbg !13157
  %2 = sext i16 %0 to i32, !dbg !13158
  %3 = icmp slt i16 %0, 1, !dbg !13160
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13161
  %6 = add nsw i32 %2, -1, !dbg !13161
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13161
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13161
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13155, metadata !DIExpression()), !dbg !13157
  ret %struct.device* %8, !dbg !13162
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13163 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13165, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13166, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i8* %2, metadata !13167, metadata !DIExpression()), !dbg !13170
  %5 = bitcast i32* %4 to i8*, !dbg !13171
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13171
  call void @llvm.dbg.value(metadata i32 0, metadata !13168, metadata !DIExpression()), !dbg !13170
  store i32 0, i32* %4, align 4, !dbg !13172
  call void @llvm.dbg.value(metadata i32* %4, metadata !13168, metadata !DIExpression(DW_OP_deref)), !dbg !13170
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13173
  call void @llvm.dbg.value(metadata i16* %6, metadata !13169, metadata !DIExpression()), !dbg !13170
  %7 = load i32, i32* %4, align 4, !dbg !13174
  call void @llvm.dbg.value(metadata i32 %7, metadata !13168, metadata !DIExpression()), !dbg !13170
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13175
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13176
  ret i32 %8, !dbg !13177
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13178 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13180, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i32* %1, metadata !13181, metadata !DIExpression()), !dbg !13185
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13186
  %4 = load i16*, i16** %3, align 4, !dbg !13186
  call void @llvm.dbg.value(metadata i16* %4, metadata !13182, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i32 0, metadata !13183, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i32 0, metadata !13184, metadata !DIExpression()), !dbg !13185
  %5 = icmp eq i16* %4, null, !dbg !13187
  br i1 %5, label %22, label %6, !dbg !13189

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13183, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i16* %8, metadata !13182, metadata !DIExpression()), !dbg !13185
  %9 = load i16, i16* %8, align 2, !dbg !13190
  %10 = icmp eq i16 %9, -32768, !dbg !13194
  call void @llvm.dbg.value(metadata i32 undef, metadata !13183, metadata !DIExpression()), !dbg !13185
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13195
  call void @llvm.dbg.value(metadata i16* %11, metadata !13182, metadata !DIExpression()), !dbg !13185
  %12 = zext i1 %10 to i32, !dbg !13196
  %13 = add i32 %7, %12, !dbg !13196
  call void @llvm.dbg.value(metadata i32 %13, metadata !13183, metadata !DIExpression()), !dbg !13185
  %14 = icmp eq i32 %13, 2, !dbg !13197
  br i1 %14, label %15, label %6, !dbg !13198

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13185
  call void @llvm.dbg.value(metadata i32 %16, metadata !13184, metadata !DIExpression()), !dbg !13185
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13199
  %18 = load i16, i16* %17, align 2, !dbg !13199
  %19 = icmp eq i16 %18, 32767, !dbg !13200
  %20 = add i32 %16, 1, !dbg !13201
  call void @llvm.dbg.value(metadata i32 %20, metadata !13184, metadata !DIExpression()), !dbg !13185
  br i1 %19, label %21, label %15, !dbg !13203, !llvm.loop !13204

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13206
  br label %22, !dbg !13207

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13208
  call void @llvm.dbg.value(metadata i16* %23, metadata !13182, metadata !DIExpression()), !dbg !13185
  ret i16* %23, !dbg !13209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13210 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13213
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13214
  ret i32* %2, !dbg !13215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #2 !dbg !13216 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13367, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13368, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13369, metadata !DIExpression()), !dbg !13370
  ret void, !dbg !13371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !13372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13376, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.value(metadata i32 %1, metadata !13377, metadata !DIExpression()), !dbg !13378
  ret void, !dbg !13379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !13380 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13384, metadata !DIExpression()), !dbg !13386
  call void @llvm.dbg.value(metadata i32 %1, metadata !13385, metadata !DIExpression()), !dbg !13386
  ret void, !dbg !13387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !13388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13392, metadata !DIExpression()), !dbg !13394
  call void @llvm.dbg.value(metadata i8* %1, metadata !13393, metadata !DIExpression()), !dbg !13394
  ret i32 -134, !dbg !13395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !13396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13400, metadata !DIExpression()), !dbg !13402
  call void @llvm.dbg.value(metadata i8* %1, metadata !13401, metadata !DIExpression()), !dbg !13402
  ret i32 -134, !dbg !13403
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13407, metadata !DIExpression()), !dbg !13408
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13409, !srcloc !13415
  call void @llvm.dbg.value(metadata i32 undef, metadata !13412, metadata !DIExpression()) #23, !dbg !13416
  call void @llvm.dbg.value(metadata i32 undef, metadata !13413, metadata !DIExpression()) #23, !dbg !13416
  br label %3, !dbg !13417

3:                                                ; preds = %3, %1
  br label %3, !dbg !13418, !llvm.loop !13421
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13428, metadata !DIExpression()), !dbg !13430
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13429, metadata !DIExpression()), !dbg !13430
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.216, i32 0, i32 0), i32 noundef 69) #25, !dbg !13431
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13436
  unreachable, !dbg !13436
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13439, metadata !DIExpression()), !dbg !13440
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13441
  unreachable, !dbg !13441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13444, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13445, metadata !DIExpression()), !dbg !13448
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13449, !srcloc !13415
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13449
  call void @llvm.dbg.value(metadata i32 %4, metadata !13412, metadata !DIExpression()) #23, !dbg !13451
  call void @llvm.dbg.value(metadata i32 undef, metadata !13413, metadata !DIExpression()) #23, !dbg !13451
  call void @llvm.dbg.value(metadata i32 %4, metadata !13446, metadata !DIExpression()), !dbg !13448
  %5 = tail call fastcc %struct.k_thread* @k_current_get.219() #26, !dbg !13452
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13447, metadata !DIExpression()), !dbg !13448
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13453
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.220, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !13453
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13458
  br i1 %7, label %20, label %8, !dbg !13460

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13461, metadata !DIExpression()), !dbg !13466
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13468
  %10 = load i32, i32* %9, align 4, !dbg !13468
  %11 = and i32 %10, 511, !dbg !13469
  %12 = icmp eq i32 %11, 0, !dbg !13470
  br i1 %12, label %14, label %13, !dbg !13471

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.221, i32 0, i32 0), i32 noundef 69) #25, !dbg !13472
  br label %14, !dbg !13478

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13479
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.222, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !13479
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13484
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13461, metadata !DIExpression()), !dbg !13485
  %16 = load i32, i32* %9, align 4, !dbg !13490
  %17 = and i32 %16, 511, !dbg !13491
  %18 = icmp eq i32 %17, 0, !dbg !13492
  br i1 %18, label %22, label %19, !dbg !13493

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13494, metadata !DIExpression()) #23, !dbg !13497
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13500, !srcloc !13501
  br label %25, !dbg !13502

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13479
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.222, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !13479
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13484
  br label %22, !dbg !13503

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13504
  call void @llvm.dbg.value(metadata i32 %4, metadata !13494, metadata !DIExpression()) #23, !dbg !13507
  call void @llvm.dbg.value(metadata i32 %4, metadata !13494, metadata !DIExpression()) #23, !dbg !13510
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13448
  br i1 %23, label %25, label %24, !dbg !13512

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.223(%struct.k_thread* noundef %5) #24, !dbg !13513
  br label %25, !dbg !13516

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13516
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.219() unnamed_addr #11 !dbg !13517 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.231() #26, !dbg !13521
  ret %struct.k_thread* %1, !dbg !13522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #2 !dbg !13523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13527, metadata !DIExpression()), !dbg !13528
  %2 = icmp ult i32 %0, 5, !dbg !13529
  br i1 %2, label %3, label %6, !dbg !13529

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13529
  %5 = load i8*, i8** %4, align 4, !dbg !13529
  br label %6, !dbg !13529

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.225, i32 0, i32 0), %1 ], !dbg !13530
  ret i8* %7, !dbg !13532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13537, metadata !DIExpression()), !dbg !13539
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13540
  br i1 %2, label %9, label %3, !dbg !13541

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13542
  call void @llvm.dbg.value(metadata i8* %4, metadata !13538, metadata !DIExpression()), !dbg !13539
  %5 = icmp eq i8* %4, null, !dbg !13543
  br i1 %5, label %9, label %6, !dbg !13545

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13546
  %8 = icmp eq i8 %7, 0, !dbg !13547
  br i1 %8, label %9, label %10, !dbg !13548

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.224, i32 0, i32 0), metadata !13538, metadata !DIExpression()), !dbg !13539
  br label %10, !dbg !13549

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.224, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13539
  call void @llvm.dbg.value(metadata i8* %11, metadata !13538, metadata !DIExpression()), !dbg !13539
  ret i8* %11, !dbg !13551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.223(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13552 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13556, metadata !DIExpression()), !dbg !13557
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13558, !srcloc !13560
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13561
  ret void, !dbg !13562
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.231() unnamed_addr #11 !dbg !13563 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13564, !srcloc !13566
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13567
  ret %struct.k_thread* %1, !dbg !13568
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13569 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13573, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata i32 %1, metadata !13574, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata i32 %2, metadata !13575, metadata !DIExpression()), !dbg !13576
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13577
  ret void, !dbg !13578
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13579 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13583, metadata !DIExpression()), !dbg !13586
  call void @llvm.dbg.value(metadata i8* %1, metadata !13584, metadata !DIExpression()), !dbg !13586
  call void @llvm.dbg.value(metadata i32 %2, metadata !13585, metadata !DIExpression()), !dbg !13586
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13587
  ret void, !dbg !13588
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13589 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13590
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #24, !dbg !13591
  ret void, !dbg !13592
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13595, metadata !DIExpression()), !dbg !13596
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13597
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13598
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13599
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13600
  %4 = trunc i32 %0 to i8, !dbg !13601
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13602
  store i8 %4, i8* %5, align 4, !dbg !13603
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13604
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13605
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13606
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13607
  store i8* %8, i8** %9, align 4, !dbg !13608
  ret void, !dbg !13609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13612, metadata !DIExpression()), !dbg !13618
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13619
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13613, metadata !DIExpression()), !dbg !13618
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13620
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13614, metadata !DIExpression()), !dbg !13618
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.238, i32 0, i32 0), metadata !13617, metadata !DIExpression()), !dbg !13618
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13621
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13622
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.238, i32 0, i32 0)) #25, !dbg !13623
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13624
  ret void, !dbg !13625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !13626 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13630, metadata !DIExpression()), !dbg !13631
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13632
  ret i8* %2, !dbg !13633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13634 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13639, metadata !DIExpression()), !dbg !13640
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13641
  %3 = load i8, i8* %2, align 1, !dbg !13642
  %4 = and i8 %3, -5, !dbg !13642
  store i8 %4, i8* %2, align 1, !dbg !13642
  ret void, !dbg !13643
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13644 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !13647
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13648
  %3 = ptrtoint i8* %2 to i32, !dbg !13657
  %4 = add i32 %3, 2048, !dbg !13658
  call void @llvm.dbg.value(metadata i32 %4, metadata !13652, metadata !DIExpression()) #23, !dbg !13659
  call void @llvm.dbg.value(metadata i32 %4, metadata !13660, metadata !DIExpression()) #23, !dbg !13663
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13665, !srcloc !13666
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13667
  %6 = or i32 %5, 512, !dbg !13667
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13667
  tail call fastcc void @__NVIC_SetPriority.241(i32 noundef -2, i32 noundef 255) #25, !dbg !13668
  tail call fastcc void @__NVIC_SetPriority.241(i32 noundef -5, i32 noundef 0) #25, !dbg !13671
  tail call fastcc void @__NVIC_SetPriority.241(i32 noundef -12, i32 noundef 0) #25, !dbg !13672
  tail call fastcc void @__NVIC_SetPriority.241(i32 noundef -11, i32 noundef 0) #25, !dbg !13673
  tail call fastcc void @__NVIC_SetPriority.241(i32 noundef -10, i32 noundef 0) #25, !dbg !13674
  tail call fastcc void @__NVIC_SetPriority.241(i32 noundef -4, i32 noundef 0) #25, !dbg !13675
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13676
  %8 = or i32 %7, 458752, !dbg !13676
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13676
  tail call void @z_arm_fault_init() #25, !dbg !13677
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13678
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13679
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13682
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13683
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13684
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13685
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13685
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13646, metadata !DIExpression()), !dbg !13686
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13687
  call void @z_device_state_init() #25, !dbg !13688
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13689
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13690
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13691
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13692
  unreachable, !dbg !13692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2201, metadata !DIExpression()), !dbg !13693
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13694
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13694
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2202, metadata !DIExpression()), !dbg !13693
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2202, metadata !DIExpression()), !dbg !13693
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13695
  br i1 %7, label %8, label %35, !dbg !13696

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2202, metadata !DIExpression()), !dbg !13693
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13697
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13697
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2212, metadata !DIExpression()), !dbg !13698
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13699
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13699
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13700
  call void @llvm.dbg.value(metadata i32 %14, metadata !2216, metadata !DIExpression()), !dbg !13698
  %15 = icmp eq %struct.device* %11, null, !dbg !13701
  br i1 %15, label %32, label %16, !dbg !13703

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13704
  br i1 %17, label %26, label %18, !dbg !13707

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13708
  call void @llvm.dbg.value(metadata i32 %19, metadata !2216, metadata !DIExpression()), !dbg !13698
  %20 = icmp ult i32 %19, 255, !dbg !13710
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13710
  call void @llvm.dbg.value(metadata i32 %21, metadata !2216, metadata !DIExpression()), !dbg !13698
  %22 = trunc i32 %21 to i8, !dbg !13711
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13712
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13712
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13713
  store i8 %22, i8* %25, align 1, !dbg !13714
  br label %26, !dbg !13715

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13716
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13716
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13717
  %30 = load i8, i8* %29, align 1, !dbg !13718
  %31 = or i8 %30, 1, !dbg !13718
  store i8 %31, i8* %29, align 1, !dbg !13718
  br label %32, !dbg !13719

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13720
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2202, metadata !DIExpression()), !dbg !13693
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13695
  br i1 %34, label %8, label %35, !dbg !13696, !llvm.loop !13721

35:                                               ; preds = %32, %1
  ret void, !dbg !13723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.241(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !13724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13726, metadata !DIExpression()), !dbg !13728
  call void @llvm.dbg.value(metadata i32 %1, metadata !13727, metadata !DIExpression()), !dbg !13728
  %3 = trunc i32 %1 to i8, !dbg !13729
  %4 = shl i8 %3, 4, !dbg !13729
  %5 = and i32 %0, 15, !dbg !13732
  %6 = add nsw i32 %5, -4, !dbg !13733
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13734
  store volatile i8 %4, i8* %7, align 1, !dbg !13735
  ret void, !dbg !13736
}

; Function Attrs: optsize
declare !dbg !13737 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13738 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13741, metadata !DIExpression()), !dbg !13742
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13743
  store i8 1, i8* %2, align 1, !dbg !13744
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13745
  store i8 1, i8* %3, align 4, !dbg !13746
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13747
  store i32 0, i32* %4, align 4, !dbg !13748
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13749
  store i32 0, i32* %5, align 4, !dbg !13750
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13751
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13752
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13753
  ret void, !dbg !13754
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13755 {
  tail call void @z_sched_init() #25, !dbg !13760
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13761
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.242, i32 0, i32 0)) #25, !dbg !13762
  call void @llvm.dbg.value(metadata i8* %1, metadata !13759, metadata !DIExpression()), !dbg !13763
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13764
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13765
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13766
  ret i8* %1, !dbg !13767
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13768 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13772, metadata !DIExpression()), !dbg !13773
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13774
  unreachable, !dbg !13775
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13776 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13778, metadata !DIExpression()), !dbg !13781
  call void @llvm.dbg.value(metadata i8* %1, metadata !13779, metadata !DIExpression()), !dbg !13781
  call void @llvm.dbg.value(metadata i8* %2, metadata !13780, metadata !DIExpression()), !dbg !13781
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13782
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13783
  tail call void @boot_banner() #25, !dbg !13784
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13785
  tail call void @z_init_static_threads() #25, !dbg !13786
  tail call void @main() #25, !dbg !13787
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13788
  %5 = and i8 %4, -2, !dbg !13788
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13788
  ret void, !dbg !13789
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !13790 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13800, metadata !DIExpression()), !dbg !13802
  call void @llvm.dbg.value(metadata i8* %1, metadata !13801, metadata !DIExpression()), !dbg !13802
  ret void, !dbg !13803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !13804 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13806, metadata !DIExpression()), !dbg !13808
  call void @llvm.dbg.value(metadata i8* %1, metadata !13807, metadata !DIExpression()), !dbg !13808
  ret void, !dbg !13809
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13810 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13811, !srcloc !13818
  call void @llvm.dbg.value(metadata i32 %1, metadata !13814, metadata !DIExpression()) #23, !dbg !13819
  %2 = icmp ne i32 %1, 0, !dbg !13820
  ret i1 %2, !dbg !13821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13822 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13823
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13824
  %3 = load i8, i8* %2, align 4, !dbg !13825
  %4 = or i8 %3, 1, !dbg !13825
  store i8 %4, i8* %2, align 4, !dbg !13825
  ret void, !dbg !13826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13827 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13828
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13829
  %3 = load i8, i8* %2, align 4, !dbg !13830
  %4 = and i8 %3, -2, !dbg !13830
  store i8 %4, i8* %2, align 4, !dbg !13830
  ret void, !dbg !13831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13832 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13833
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13834
  %3 = load i8, i8* %2, align 4, !dbg !13834
  %4 = and i8 %3, 1, !dbg !13835
  %5 = icmp ne i8 %4, 0, !dbg !13836
  ret i1 %5, !dbg !13837
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13838 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13842, metadata !DIExpression()), !dbg !13844
  call void @llvm.dbg.value(metadata i8* %1, metadata !13843, metadata !DIExpression()), !dbg !13844
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13845
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13847
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13842, metadata !DIExpression()), !dbg !13844
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13848
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13849
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13850
  store i8 0, i8* %8, align 1, !dbg !13851
  ret i32 0, !dbg !13852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #2 !dbg !13853 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13857, metadata !DIExpression()), !dbg !13858
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13859
  ret i8* %2, !dbg !13860
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13861 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13865, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.value(metadata i8* %1, metadata !13866, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.value(metadata i32 %2, metadata !13867, metadata !DIExpression()), !dbg !13868
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13869
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13870
  ret i32 0, !dbg !13871
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2225 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2342, metadata !DIExpression()), !dbg !13872
  call void @llvm.dbg.value(metadata i8* %1, metadata !2343, metadata !DIExpression()), !dbg !13872
  call void @llvm.dbg.value(metadata i32 %2, metadata !2344, metadata !DIExpression()), !dbg !13872
  call void @llvm.dbg.value(metadata i32 0, metadata !2345, metadata !DIExpression()), !dbg !13872
  call void @llvm.dbg.value(metadata i8 undef, metadata !2347, metadata !DIExpression()), !dbg !13872
  %4 = icmp eq i8* %1, null, !dbg !13873
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13875
  br i1 %6, label %46, label %7, !dbg !13875

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13876
  %9 = load i8, i8* %8, align 1, !dbg !13876
  call void @llvm.dbg.value(metadata i8 %9, metadata !2347, metadata !DIExpression()), !dbg !13872
  %10 = add i32 %2, -1, !dbg !13877
  call void @llvm.dbg.value(metadata i32 %10, metadata !2344, metadata !DIExpression()), !dbg !13872
  call void @llvm.dbg.value(metadata i8 0, metadata !2348, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata i8 %9, metadata !2347, metadata !DIExpression()), !dbg !13872
  call void @llvm.dbg.value(metadata i32 0, metadata !2345, metadata !DIExpression()), !dbg !13872
  %11 = icmp eq i8 %9, 0, !dbg !13879
  br i1 %11, label %12, label %15, !dbg !13881

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13882
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13883
  store i8 0, i8* %14, align 1, !dbg !13884
  br label %46, !dbg !13885

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2348, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata i8 %17, metadata !2347, metadata !DIExpression()), !dbg !13872
  call void @llvm.dbg.value(metadata i32 %18, metadata !2345, metadata !DIExpression()), !dbg !13872
  %19 = zext i8 %17 to i32, !dbg !13886
  %20 = zext i8 %16 to i32, !dbg !13887
  %21 = shl nuw i32 1, %20, !dbg !13887
  call void @llvm.dbg.value(metadata i32 %21, metadata !2346, metadata !DIExpression()), !dbg !13872
  %22 = and i32 %21, %19, !dbg !13889
  %23 = icmp eq i32 %22, 0, !dbg !13891
  br i1 %23, label %42, label %24, !dbg !13892

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13893
  %26 = sub i32 %10, %18, !dbg !13894
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13895
  %28 = load i8*, i8** %27, align 4, !dbg !13895
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13896
  %30 = load i32, i32* %29, align 4, !dbg !13896
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13897
  %32 = add i32 %31, %18, !dbg !13898
  call void @llvm.dbg.value(metadata i32 %32, metadata !2345, metadata !DIExpression()), !dbg !13872
  %33 = trunc i32 %21 to i8, !dbg !13899
  %34 = xor i8 %33, -1, !dbg !13899
  %35 = and i8 %17, %34, !dbg !13899
  call void @llvm.dbg.value(metadata i8 %35, metadata !2347, metadata !DIExpression()), !dbg !13872
  %36 = icmp eq i8 %35, 0, !dbg !13900
  br i1 %36, label %12, label %37, !dbg !13902

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13903
  %39 = sub i32 %10, %32, !dbg !13905
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.247, i32 0, i32 0), i32 noundef 1) #24, !dbg !13906
  %41 = add i32 %40, %32, !dbg !13907
  call void @llvm.dbg.value(metadata i32 %41, metadata !2345, metadata !DIExpression()), !dbg !13872
  br label %42, !dbg !13908

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13872
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13872
  call void @llvm.dbg.value(metadata i8 %44, metadata !2347, metadata !DIExpression()), !dbg !13872
  call void @llvm.dbg.value(metadata i32 %43, metadata !2345, metadata !DIExpression()), !dbg !13872
  %45 = add i8 %16, 1, !dbg !13909
  call void @llvm.dbg.value(metadata i8 %45, metadata !2348, metadata !DIExpression()), !dbg !13878
  br label %15, !dbg !13881

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.248, i32 0, i32 0), %3 ], !dbg !13872
  ret i8* %47, !dbg !13910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13911 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13915, metadata !DIExpression()), !dbg !13920
  call void @llvm.dbg.value(metadata i32 %1, metadata !13916, metadata !DIExpression()), !dbg !13920
  call void @llvm.dbg.value(metadata i8* %2, metadata !13917, metadata !DIExpression()), !dbg !13920
  call void @llvm.dbg.value(metadata i32 %3, metadata !13918, metadata !DIExpression()), !dbg !13920
  %5 = icmp ult i32 %1, %3, !dbg !13921
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13921
  call void @llvm.dbg.value(metadata i32 %6, metadata !13919, metadata !DIExpression()), !dbg !13920
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13922
  ret i32 %6, !dbg !13923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13924 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13928, metadata !DIExpression()), !dbg !13929
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13930
  ret void, !dbg !13931
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13941, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13942, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata i32 %2, metadata !13943, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13944, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata i8* %4, metadata !13945, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata i8* %5, metadata !13946, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata i8* %6, metadata !13947, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata i32 %7, metadata !13948, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata i32 %8, metadata !13949, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata i8* %9, metadata !13950, metadata !DIExpression()), !dbg !13952
  %11 = icmp eq i32 %7, 15, !dbg !13953
  br i1 %11, label %12, label %15, !dbg !13953

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13953
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13953
  br i1 %14, label %19, label %18, !dbg !13953

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13953
  %17 = icmp ult i32 %16, 31, !dbg !13953
  br i1 %17, label %19, label %18, !dbg !13953

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 536) #25, !dbg !13957
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.263, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13957
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 536) #25, !dbg !13957
  unreachable, !dbg !13957

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13959
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #24, !dbg !13960
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13961
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13962
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13963
  call void @llvm.dbg.value(metadata i8* %22, metadata !13951, metadata !DIExpression()), !dbg !13952
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13964
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13965
  store i8* null, i8** %23, align 4, !dbg !13966
  %24 = icmp eq i8* %9, null, !dbg !13967
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13969
  br i1 %24, label %29, label %26, !dbg !13970

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13971
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13973
  store i8 0, i8* %28, align 1, !dbg !13974
  br label %30, !dbg !13975

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13976
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13978
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13978
  br i1 %32, label %36, label %33, !dbg !13980

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13981
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13981
  br label %36, !dbg !13982

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13952
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13983
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13985
  ret i8* %22, !dbg !13986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #2 !dbg !13987 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13991, metadata !DIExpression()), !dbg !13992
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13993
  ret i1 %2, !dbg !13994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !13995 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14000, metadata !DIExpression()), !dbg !14001
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14002
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14003
  ret void, !dbg !14004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !14005 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14010, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.value(metadata i32 %1, metadata !14011, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.value(metadata i32 %2, metadata !14012, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.value(metadata i32 %3, metadata !14013, metadata !DIExpression()), !dbg !14014
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14015
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14016
  %6 = trunc i32 %3 to i8, !dbg !14017
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14018
  store i8 %6, i8* %7, align 4, !dbg !14019
  %8 = trunc i32 %2 to i8, !dbg !14020
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14021
  store i8 %8, i8* %9, align 1, !dbg !14022
  %10 = trunc i32 %1 to i8, !dbg !14023
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14024
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14024
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14024
  store i8 %10, i8* %13, align 2, !dbg !14025
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14026
  store i8 0, i8* %14, align 1, !dbg !14027
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14028
  ret void, !dbg !14029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !14030 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14034, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14035, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.value(metadata i32 %2, metadata !14036, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.value(metadata i32 0, metadata !14041, metadata !DIExpression()), !dbg !14042
  %4 = add i32 %2, 7, !dbg !14043
  %5 = and i32 %4, -8, !dbg !14043
  %6 = add i32 %5, 64, !dbg !14043
  call void @llvm.dbg.value(metadata i32 %6, metadata !14037, metadata !DIExpression()), !dbg !14042
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.264(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14045
  call void @llvm.dbg.value(metadata i8* %7, metadata !14040, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.value(metadata i32 %5, metadata !14038, metadata !DIExpression()), !dbg !14042
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14046
  call void @llvm.dbg.value(metadata i8* %8, metadata !14039, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.value(metadata i32 0, metadata !14041, metadata !DIExpression()), !dbg !14042
  %9 = ptrtoint i8* %7 to i32, !dbg !14047
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14048
  store i32 %9, i32* %10, align 4, !dbg !14049
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14050
  store i32 %5, i32* %11, align 4, !dbg !14051
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !14052
  store i32 0, i32* %12, align 4, !dbg !14053
  call void @llvm.dbg.value(metadata i8* %8, metadata !14039, metadata !DIExpression()), !dbg !14042
  ret i8* %8, !dbg !14054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.264(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !14055 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14059, metadata !DIExpression()), !dbg !14060
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14061
  ret i8* %2, !dbg !14062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14063 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14068, metadata !DIExpression()), !dbg !14069
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14070
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14071
  ret void, !dbg !14072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14073 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14075, metadata !DIExpression()), !dbg !14076
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14077
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14078
  ret void, !dbg !14079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14080 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14084, metadata !DIExpression()), !dbg !14085
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14086
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14087
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14088
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14089
  ret void, !dbg !14090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14091 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14096, metadata !DIExpression()), !dbg !14097
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14098
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14099
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14100
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14101
  ret void, !dbg !14102
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14103 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14120, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14111, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14112, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata i32 %2, metadata !14113, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14114, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata i8* %4, metadata !14115, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata i8* %5, metadata !14116, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata i8* %6, metadata !14117, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata i32 %7, metadata !14118, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata i32 %8, metadata !14119, metadata !DIExpression()), !dbg !14121
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14122, !srcloc !13818
  call void @llvm.dbg.value(metadata i32 %11, metadata !13814, metadata !DIExpression()) #23, !dbg !14127
  %12 = icmp eq i32 %11, 0, !dbg !14128
  br i1 %12, label %14, label %13, !dbg !14129

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 647) #25, !dbg !14130
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.268, i32 0, i32 0)) #25, !dbg !14130
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 647) #25, !dbg !14130
  unreachable, !dbg !14130

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14120, metadata !DIExpression()), !dbg !14121
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !14132
  %17 = icmp eq i64 %15, -1, !dbg !14133
  br i1 %17, label %19, label %18, !dbg !14135

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14136
  br label %19, !dbg !14138

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14140 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14145, metadata !DIExpression()), !dbg !14146
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14144, metadata !DIExpression()), !dbg !14146
  %4 = icmp eq i64 %3, 0, !dbg !14147
  br i1 %4, label %5, label %6, !dbg !14149

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.269(%struct.k_thread* noundef %0) #24, !dbg !14150
  br label %7, !dbg !14152

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14153
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.269(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14156 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14160, metadata !DIExpression()), !dbg !14161
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14162, !srcloc !14164
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14165
  ret void, !dbg !14166
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14167 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14170, metadata !DIExpression()), !dbg !14171
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14169, metadata !DIExpression()), !dbg !14171
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14172
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14173
  ret void, !dbg !14174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14175 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14177, metadata !DIExpression()), !dbg !14197
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14198

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 750) #25, !dbg !14202
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.273, i32 0, i32 0)) #25, !dbg !14202
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 750) #25, !dbg !14202
  unreachable, !dbg !14202

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14177, metadata !DIExpression()), !dbg !14197
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14205
  br i1 %4, label %6, label %5, !dbg !14206

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14207
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14195, metadata !DIExpression()), !dbg !14208
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14209

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14213
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14213
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14215
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14215
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14216
  %12 = load i32, i32* %11, align 4, !dbg !14216
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14217
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14217
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14218
  %16 = load i8*, i8** %15, align 4, !dbg !14218
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14219
  %18 = load i8*, i8** %17, align 4, !dbg !14219
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14220
  %20 = load i8*, i8** %19, align 4, !dbg !14220
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14221
  %22 = load i32, i32* %21, align 4, !dbg !14221
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14222
  %24 = load i32, i32* %23, align 4, !dbg !14222
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14223
  %26 = load i8*, i8** %25, align 4, !dbg !14223
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14224
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14225
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14226
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14227
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14227
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14228
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14177, metadata !DIExpression()), !dbg !14197
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14229
  br i1 %32, label %1, label %2, !dbg !14198, !llvm.loop !14230

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 781) #25, !dbg !14232
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.273, i32 0, i32 0)) #25, !dbg !14232
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.262, i32 0, i32 0), i32 noundef 781) #25, !dbg !14232
  unreachable, !dbg !14232

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14195, metadata !DIExpression()), !dbg !14208
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14235
  br i1 %36, label %38, label %37, !dbg !14236

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14237
  ret void, !dbg !14238

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14239
  %40 = load i32, i32* %39, align 4, !dbg !14239
  %41 = icmp eq i32 %40, -1, !dbg !14242
  br i1 %41, label %50, label %42, !dbg !14243

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14244
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14244
  %45 = icmp sgt i32 %40, 0, !dbg !14246
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14246
  %47 = zext i32 %46 to i64, !dbg !14246
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14246
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14247
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14247
  br label %50, !dbg !14248

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14249
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14195, metadata !DIExpression()), !dbg !14208
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14250
  br i1 %52, label %33, label %34, !dbg !14209, !llvm.loop !14251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !14253 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14257, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.value(metadata i64 %0, metadata !14259, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i32 1000, metadata !14262, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i32 10000, metadata !14263, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i8 1, metadata !14264, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i8 0, metadata !14265, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i8 1, metadata !14266, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i8 0, metadata !14267, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i8 1, metadata !14268, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i8 0, metadata !14269, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i64 0, metadata !14270, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i64 0, metadata !14270, metadata !DIExpression()), !dbg !14274
  %2 = mul i64 %0, 10, !dbg !14276
  ret i64 %2, !dbg !14282
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14283 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14285, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.value(metadata i8* %1, metadata !14286, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.value(metadata i8* %2, metadata !14287, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.value(metadata i8* %3, metadata !14288, metadata !DIExpression()), !dbg !14289
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14290
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14291
  %7 = load i8, i8* %6, align 4, !dbg !14292
  %8 = or i8 %7, 4, !dbg !14292
  store i8 %8, i8* %6, align 4, !dbg !14292
  tail call void @z_thread_essential_clear() #24, !dbg !14293
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14294
  unreachable, !dbg !14294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14295 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14300, metadata !DIExpression()), !dbg !14302
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14303
  %3 = load i32, i32* %2, align 4, !dbg !14303
  call void @llvm.dbg.value(metadata i32 %3, metadata !14301, metadata !DIExpression()), !dbg !14302
  %4 = icmp eq i32 %3, 0, !dbg !14304
  br i1 %4, label %10, label %5, !dbg !14306

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14307
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14310
  %8 = zext i8 %7 to i32, !dbg !14311
  %9 = icmp eq i32 %6, %8, !dbg !14312
  br i1 %9, label %11, label %10, !dbg !14313

10:                                               ; preds = %5, %1
  br label %11, !dbg !14314

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14302
  ret i1 %12, !dbg !14315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14316 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14318, metadata !DIExpression()), !dbg !14319
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14320
  %3 = load i32, i32* %2, align 4, !dbg !14320
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14322
  %5 = zext i8 %4 to i32, !dbg !14323
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14324
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14325
  %8 = or i32 %7, %5, !dbg !14326
  %9 = icmp eq i32 %3, %8, !dbg !14327
  br i1 %9, label %10, label %11, !dbg !14328

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14329
  br label %11, !dbg !14330

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14332 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14336, metadata !DIExpression()), !dbg !14337
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14338
  %3 = zext i8 %2 to i32, !dbg !14339
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14340
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14341
  %6 = or i32 %5, %3, !dbg !14342
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14343
  store i32 %6, i32* %7, align 4, !dbg !14344
  ret void, !dbg !14345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #2 !dbg !14346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14350, metadata !DIExpression()), !dbg !14351
  ret i32 -134, !dbg !14352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #2 !dbg !14353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14357, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.value(metadata i32 %1, metadata !14358, metadata !DIExpression()), !dbg !14359
  ret i32 -134, !dbg !14360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #2 !dbg !14361 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14368, metadata !DIExpression()), !dbg !14370
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14369, metadata !DIExpression()), !dbg !14370
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14371
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14373
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14370
  ret i32 %6, !dbg !14374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #2 !dbg !14375 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14379, metadata !DIExpression()), !dbg !14380
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14381
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14380
  ret i32 %3, !dbg !14383
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14384 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14386
  ret void, !dbg !14387
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14388 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14390, metadata !DIExpression()), !dbg !14393
  call void @llvm.dbg.value(metadata i8* %1, metadata !14391, metadata !DIExpression()), !dbg !14393
  call void @llvm.dbg.value(metadata i8* %2, metadata !14392, metadata !DIExpression()), !dbg !14393
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14394
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14394
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14394
  %7 = load i8, i8* %6, align 2, !dbg !14394
  %8 = icmp sgt i8 %7, -1, !dbg !14394
  br i1 %8, label %10, label %9, !dbg !14397

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 39) #25, !dbg !14398
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.284, i32 0, i32 0), i32 noundef 39) #25, !dbg !14398
  unreachable, !dbg !14398

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14400, !srcloc !14407
  call void @llvm.dbg.value(metadata i32 undef, metadata !14403, metadata !DIExpression()) #23, !dbg !14408
  call void @llvm.dbg.value(metadata i32 undef, metadata !14404, metadata !DIExpression()) #23, !dbg !14408
  tail call fastcc void @k_cpu_idle() #24, !dbg !14409
  br label %10, !dbg !14410, !llvm.loop !14411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14413 {
  tail call void @arch_cpu_idle() #25, !dbg !14414
  ret void, !dbg !14415
}

; Function Attrs: optsize
declare !dbg !14416 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14417 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14421, metadata !DIExpression()), !dbg !14425
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14422, metadata !DIExpression()), !dbg !14425
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14426
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14426
  %5 = load i8, i8* %4, align 2, !dbg !14426
  call void @llvm.dbg.value(metadata i8 %5, metadata !14423, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14425
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14427
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14427
  %8 = load i8, i8* %7, align 2, !dbg !14427
  call void @llvm.dbg.value(metadata i8 %8, metadata !14424, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14425
  %9 = icmp eq i8 %8, %5, !dbg !14428
  %10 = sext i8 %5 to i32, !dbg !14430
  %11 = sext i8 %8 to i32, !dbg !14430
  %12 = sub nsw i32 %11, %10, !dbg !14430
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14430
  ret i32 %13, !dbg !14431
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14432 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14436, metadata !DIExpression()), !dbg !14437
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14438
  %3 = icmp eq i32 %2, 0, !dbg !14440
  br i1 %3, label %8, label %4, !dbg !14441

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14442
  %6 = add i32 %5, %2, !dbg !14444
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14445
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14446
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14447
  br label %8, !dbg !14448

8:                                                ; preds = %4, %1
  ret void, !dbg !14449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14450 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14454, metadata !DIExpression()), !dbg !14456
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14457
  call void @llvm.dbg.value(metadata i32 %1, metadata !14455, metadata !DIExpression()), !dbg !14456
  ret i32 %1, !dbg !14458
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14463, metadata !DIExpression()), !dbg !14472
  call void @llvm.dbg.value(metadata i32 %1, metadata !14464, metadata !DIExpression()), !dbg !14472
  call void @llvm.dbg.value(metadata i32 0, metadata !14465, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !14481
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14483, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !14490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !14490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !14481
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14491
  br i1 %4, label %6, label %5, !dbg !14494

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !14495
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14495
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !14495
  unreachable, !dbg !14495

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !14490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !14481
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14497
  call void @llvm.dbg.value(metadata i32 undef, metadata !14471, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()), !dbg !14473
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14498
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14501
  %8 = icmp sgt i32 %0, 0, !dbg !14502
  %9 = icmp sgt i32 %7, 2, !dbg !14504
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14504
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14504
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14505
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14506
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14507
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !14514
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !14514
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14516
  br i1 %12, label %14, label %13, !dbg !14519

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !14520
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14520
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !14520
  unreachable, !dbg !14520

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14483
  call void @llvm.dbg.value(metadata i32 %15, metadata !14486, metadata !DIExpression()) #23, !dbg !14490
  call void @llvm.dbg.value(metadata i32 %15, metadata !14480, metadata !DIExpression()) #23, !dbg !14481
  call void @llvm.dbg.value(metadata i32 %15, metadata !14471, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !14514
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !14525
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14527, !srcloc !14528
  call void @llvm.dbg.value(metadata i32 1, metadata !14465, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()), !dbg !14473
  ret void, !dbg !14529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !14530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14532, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata i32 %0, metadata !14534, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14549
  call void @llvm.dbg.value(metadata i32 1000, metadata !14537, metadata !DIExpression()), !dbg !14549
  call void @llvm.dbg.value(metadata i32 10000, metadata !14538, metadata !DIExpression()), !dbg !14549
  call void @llvm.dbg.value(metadata i8 1, metadata !14539, metadata !DIExpression()), !dbg !14549
  call void @llvm.dbg.value(metadata i1 true, metadata !14540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14549
  call void @llvm.dbg.value(metadata i1 true, metadata !14541, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14549
  call void @llvm.dbg.value(metadata i8 0, metadata !14542, metadata !DIExpression()), !dbg !14549
  call void @llvm.dbg.value(metadata i1 true, metadata !14543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14549
  call void @llvm.dbg.value(metadata i1 false, metadata !14544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14549
  call void @llvm.dbg.value(metadata i64 0, metadata !14545, metadata !DIExpression()), !dbg !14549
  call void @llvm.dbg.value(metadata i64 0, metadata !14545, metadata !DIExpression()), !dbg !14549
  %2 = mul i32 %0, 10, !dbg !14551
  ret i32 %2, !dbg !14557
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14560, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !14563
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14565, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !14567
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !14567
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !14563
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14568
  br i1 %3, label %5, label %4, !dbg !14569

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !14570
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14570
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !14570
  unreachable, !dbg !14570

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14565
  call void @llvm.dbg.value(metadata i32 %6, metadata !14486, metadata !DIExpression()) #23, !dbg !14567
  call void @llvm.dbg.value(metadata i32 %6, metadata !14480, metadata !DIExpression()) #23, !dbg !14563
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14571
  call void @llvm.dbg.value(metadata i32 %6, metadata !14561, metadata !DIExpression()), !dbg !14562
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14572
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14574
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14575
  br i1 %9, label %10, label %14, !dbg !14576

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14577
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !14579
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !14579
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14581
  br i1 %11, label %13, label %12, !dbg !14582

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !14583
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14583
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !14583
  unreachable, !dbg !14583

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14508, metadata !DIExpression()) #23, !dbg !14579
  call void @llvm.dbg.value(metadata i32 %6, metadata !14522, metadata !DIExpression()) #23, !dbg !14584
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14586, !srcloc !14528
  br label %33, !dbg !14587

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14588
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14589
  %16 = icmp eq i32 %15, 0, !dbg !14589
  br i1 %16, label %27, label %17, !dbg !14591

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14592
  br i1 %18, label %19, label %27, !dbg !14593

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14594
  %21 = icmp sgt i32 %20, %0, !dbg !14597
  br i1 %21, label %25, label %22, !dbg !14598

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14599
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14599
  call void @llvm.dbg.value(metadata i32 %24, metadata !14561, metadata !DIExpression()), !dbg !14562
  br label %28, !dbg !14601

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14602
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14602
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14604
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14562
  call void @llvm.dbg.value(metadata i32 %29, metadata !14561, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !14606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !14606
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14608
  br i1 %30, label %32, label %31, !dbg !14609

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !14610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !14610
  unreachable, !dbg !14610

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14508, metadata !DIExpression()) #23, !dbg !14606
  call void @llvm.dbg.value(metadata i32 %29, metadata !14522, metadata !DIExpression()) #23, !dbg !14611
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14613, !srcloc !14528
  br label %33, !dbg !14614

33:                                               ; preds = %32, %13
  ret void, !dbg !14614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14615 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14619, metadata !DIExpression()), !dbg !14621
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14622
  %3 = icmp eq i32 %2, 0, !dbg !14622
  br i1 %3, label %16, label %4, !dbg !14623

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14624
  br i1 %5, label %16, label %6, !dbg !14625

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14626
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14626
  %9 = load i8, i8* %8, align 2, !dbg !14626
  %10 = sext i8 %9 to i32, !dbg !14627
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14628
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14629
  br i1 %12, label %16, label %13, !dbg !14630

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14631
  %15 = xor i1 %14, true, !dbg !14632
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14621
  call void @llvm.dbg.value(metadata i1 %17, metadata !14620, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14621
  ret i1 %17, !dbg !14633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14634 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14638, metadata !DIExpression()), !dbg !14640
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14641
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14639, metadata !DIExpression()), !dbg !14640
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14642
  br i1 %3, label %5, label %4, !dbg !14644

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14645
  br label %5, !dbg !14647

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14638, metadata !DIExpression()), !dbg !14640
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14648
  ret i32 %6, !dbg !14649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14650 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14652, metadata !DIExpression()), !dbg !14654
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14655
  %3 = load i8, i8* %2, align 1, !dbg !14655
  call void @llvm.dbg.value(metadata i8 %3, metadata !14653, metadata !DIExpression()), !dbg !14654
  %4 = and i8 %3, 31, !dbg !14656
  %5 = icmp ne i8 %4, 0, !dbg !14657
  ret i1 %5, !dbg !14658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14659 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14661, metadata !DIExpression()), !dbg !14662
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14663
  br i1 %2, label %3, label %7, !dbg !14665

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14666, metadata !DIExpression()) #23, !dbg !14669
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14672
  %5 = load i8, i8* %4, align 1, !dbg !14673
  %6 = and i8 %5, 127, !dbg !14673
  store i8 %6, i8* %4, align 1, !dbg !14673
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14674, metadata !DIExpression()) #23, !dbg !14677
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14681
  br label %7, !dbg !14682

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14683, metadata !DIExpression()) #23, !dbg !14686
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14688
  %9 = load i8, i8* %8, align 1, !dbg !14689
  %10 = or i8 %9, -128, !dbg !14689
  store i8 %10, i8* %8, align 1, !dbg !14689
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14690, metadata !DIExpression()) #23, !dbg !14693
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14697, metadata !DIExpression()) #23, !dbg !14705
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14703, metadata !DIExpression()) #23, !dbg !14705
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14707
  br i1 %11, label %12, label %13, !dbg !14710

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !14711
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !14711
  unreachable, !dbg !14711

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14713
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14704, metadata !DIExpression()) #23, !dbg !14705
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14715
  br i1 %15, label %26, label %16, !dbg !14713

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14704, metadata !DIExpression()) #23, !dbg !14705
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14717
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14704, metadata !DIExpression()) #23, !dbg !14705
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14718
  %20 = icmp sgt i32 %19, 0, !dbg !14721
  br i1 %20, label %21, label %23, !dbg !14722

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14723
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14725
  br label %28, !dbg !14726

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14715
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14704, metadata !DIExpression()) #23, !dbg !14705
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14715
  br i1 %25, label %26, label %16, !dbg !14713, !llvm.loop !14727

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14729
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14730
  br label %28, !dbg !14731

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14732
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14733
  %31 = zext i1 %30 to i32, !dbg !14733
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14734
  ret void, !dbg !14735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14736 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14738, metadata !DIExpression()), !dbg !14739
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14740
  ret i1 %2, !dbg !14741
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14742 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14744, metadata !DIExpression()), !dbg !14746
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14745, metadata !DIExpression()), !dbg !14746
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14747
  br i1 %3, label %4, label %5, !dbg !14750

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14751
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14751
  unreachable, !dbg !14751

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14753
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14754
  ret void, !dbg !14755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #2 !dbg !14756 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14758, metadata !DIExpression()), !dbg !14759
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14760
  ret i1 %2, !dbg !14761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14762 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14766, metadata !DIExpression()), !dbg !14767
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14768
  br i1 %2, label %6, label %3, !dbg !14768

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14769
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14769
  br label %6, !dbg !14768

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14768
  ret %struct._dnode* %7, !dbg !14770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14771 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14775, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14776, metadata !DIExpression()), !dbg !14779
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14780
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14780
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14777, metadata !DIExpression()), !dbg !14779
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14781
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14782
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14783
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14784
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14785
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14786
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14787
  ret void, !dbg !14788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14789 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14793, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14794, metadata !DIExpression()), !dbg !14795
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14796
  br i1 %3, label %6, label %4, !dbg !14797

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14798
  br label %6, !dbg !14797

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14797
  ret %struct._dnode* %7, !dbg !14799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14800 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14804, metadata !DIExpression()), !dbg !14807
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14805, metadata !DIExpression()), !dbg !14807
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14808
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14808
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14806, metadata !DIExpression()), !dbg !14807
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14809
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14810
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14811
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14812
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14813
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14814
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14815
  ret void, !dbg !14816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14819, metadata !DIExpression()), !dbg !14821
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14822
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14829, metadata !DIExpression()) #23, !dbg !14831
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14832
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14833
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14833
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14820, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14834, metadata !DIExpression()) #23, !dbg !14840
  call void @llvm.dbg.value(metadata i32 %0, metadata !14839, metadata !DIExpression()) #23, !dbg !14840
  %6 = icmp eq i32 %0, 0, !dbg !14843
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14845
  br i1 %6, label %8, label %18, !dbg !14846

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14847
  br i1 %9, label %10, label %11, !dbg !14850

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 137) #25, !dbg !14851
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !14851
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 137) #25, !dbg !14851
  unreachable, !dbg !14851

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14853
  br i1 %12, label %18, label %13, !dbg !14855

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14856
  br i1 %14, label %18, label %15, !dbg !14858

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14859
  %17 = icmp eq i32 %16, 0, !dbg !14859
  br i1 %17, label %21, label %18, !dbg !14861

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14862
  br i1 %19, label %21, label %20, !dbg !14865

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14866
  br label %21, !dbg !14868

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14845
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14845
  ret void, !dbg !14869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14870 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14874, metadata !DIExpression()), !dbg !14877
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14875, metadata !DIExpression()), !dbg !14877
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !14878
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14876, metadata !DIExpression()), !dbg !14877
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14875, metadata !DIExpression()), !dbg !14877
  ret %struct.k_thread* %3, !dbg !14879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14880 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14882, metadata !DIExpression()), !dbg !14883
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14884
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14885
  %4 = xor i1 %3, true, !dbg !14886
  ret i1 %4, !dbg !14887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14888 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14890, metadata !DIExpression()), !dbg !14891
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14892
  %3 = load i16, i16* %2, align 2, !dbg !14892
  %4 = icmp ult i16 %3, 128, !dbg !14893
  %5 = zext i1 %4 to i32, !dbg !14893
  ret i32 %5, !dbg !14894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14895 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14901, metadata !DIExpression()), !dbg !14902
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14903
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14904
  %4 = xor i1 %3, true, !dbg !14905
  ret i1 %4, !dbg !14906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14907 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14913, metadata !DIExpression()), !dbg !14914
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14915
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14915
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14916
  ret i1 %4, !dbg !14917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14918 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14920, metadata !DIExpression()), !dbg !14922
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14921, metadata !DIExpression()), !dbg !14922
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14923
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14923
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14924
  br i1 %5, label %9, label %6, !dbg !14925

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14926
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14926
  br label %9, !dbg !14925

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14925
  ret %struct._dnode* %10, !dbg !14927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14928 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14932, metadata !DIExpression()), !dbg !14933
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14934
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14934
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14935
  ret i1 %4, !dbg !14936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14937 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14941, metadata !DIExpression()), !dbg !14944
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14945
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14945
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14942, metadata !DIExpression()), !dbg !14944
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14946
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14946
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14943, metadata !DIExpression()), !dbg !14944
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14947
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14948
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14949
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14950
  tail call fastcc void @sys_dnode_init.295(%struct._dnode* noundef %0) #24, !dbg !14951
  ret void, !dbg !14952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.295(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14953 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14955, metadata !DIExpression()), !dbg !14956
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14957
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14958
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14959
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14960
  ret void, !dbg !14961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14962 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14966, metadata !DIExpression()), !dbg !14968
  call void @llvm.dbg.value(metadata i32 %1, metadata !14967, metadata !DIExpression()), !dbg !14968
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14969
  %4 = load i8, i8* %3, align 1, !dbg !14969
  %5 = zext i8 %4 to i32, !dbg !14970
  %6 = and i32 %5, %1, !dbg !14971
  %7 = icmp ne i32 %6, 0, !dbg !14972
  ret i1 %7, !dbg !14973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !14974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14978, metadata !DIExpression()), !dbg !14980
  call void @llvm.dbg.value(metadata i32 %1, metadata !14979, metadata !DIExpression()), !dbg !14980
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !14981
  ret i1 %3, !dbg !14982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !14983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14985, metadata !DIExpression()), !dbg !14987
  call void @llvm.dbg.value(metadata i32 %1, metadata !14986, metadata !DIExpression()), !dbg !14987
  %3 = icmp slt i32 %0, %1, !dbg !14988
  ret i1 %3, !dbg !14989
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14990 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14992, metadata !DIExpression()), !dbg !14996
  call void @llvm.dbg.value(metadata i32 0, metadata !14993, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !14998
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15000, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15002
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15002
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !14998
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15003
  br i1 %3, label %5, label %4, !dbg !15004

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15005
  unreachable, !dbg !15005

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15002
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !14998
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15006
  call void @llvm.dbg.value(metadata i32 undef, metadata !14995, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata i32 undef, metadata !14993, metadata !DIExpression()), !dbg !14997
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15007
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15012
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15012
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15014
  br i1 %6, label %8, label %7, !dbg !15015

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15016
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15016
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15016
  unreachable, !dbg !15016

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15000
  call void @llvm.dbg.value(metadata i32 %9, metadata !14486, metadata !DIExpression()) #23, !dbg !15002
  call void @llvm.dbg.value(metadata i32 %9, metadata !14480, metadata !DIExpression()) #23, !dbg !14998
  call void @llvm.dbg.value(metadata i32 %9, metadata !14995, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15012
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !15017
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15019, !srcloc !14528
  call void @llvm.dbg.value(metadata i32 1, metadata !14993, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata i32 undef, metadata !14993, metadata !DIExpression()), !dbg !14997
  ret void, !dbg !15020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15021 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15023, metadata !DIExpression()), !dbg !15024
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15025
  br i1 %2, label %27, label %3, !dbg !15027

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15028
  br i1 %4, label %5, label %27, !dbg !15029

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14683, metadata !DIExpression()) #23, !dbg !15030
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15033
  %7 = load i8, i8* %6, align 1, !dbg !15034
  %8 = or i8 %7, -128, !dbg !15034
  store i8 %8, i8* %6, align 1, !dbg !15034
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14690, metadata !DIExpression()) #23, !dbg !15035
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14697, metadata !DIExpression()) #23, !dbg !15037
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14703, metadata !DIExpression()) #23, !dbg !15037
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15039
  br i1 %9, label %10, label %11, !dbg !15040

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !15041
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !15041
  unreachable, !dbg !15041

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15042
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14704, metadata !DIExpression()) #23, !dbg !15037
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15043
  br i1 %13, label %24, label %14, !dbg !15042

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14704, metadata !DIExpression()) #23, !dbg !15037
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15044
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14704, metadata !DIExpression()) #23, !dbg !15037
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15045
  %18 = icmp sgt i32 %17, 0, !dbg !15046
  br i1 %18, label %19, label %21, !dbg !15047

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15048
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15049
  br label %26, !dbg !15050

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15043
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14704, metadata !DIExpression()) #23, !dbg !15037
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15043
  br i1 %23, label %24, label %14, !dbg !15042, !llvm.loop !15051

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15053
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15054
  br label %26, !dbg !15055

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15056
  br label %27, !dbg !15057

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15059 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15061, metadata !DIExpression()), !dbg !15062
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15063
  br i1 %2, label %6, label %3, !dbg !15064

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15065
  %5 = xor i1 %4, true, !dbg !15064
  br label %6, !dbg !15064

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15067 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15069, metadata !DIExpression()), !dbg !15073
  call void @llvm.dbg.value(metadata i32 0, metadata !15070, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15075
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15077, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15079
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15079
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15075
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15080
  br i1 %3, label %5, label %4, !dbg !15081

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15082
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15082
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15082
  unreachable, !dbg !15082

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15079
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15075
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15083
  call void @llvm.dbg.value(metadata i32 undef, metadata !15072, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.value(metadata i32 undef, metadata !15070, metadata !DIExpression()), !dbg !15074
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15084
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15087
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15087
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15089
  br i1 %6, label %8, label %7, !dbg !15090

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15091
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15091
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15091
  unreachable, !dbg !15091

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15077
  call void @llvm.dbg.value(metadata i32 %9, metadata !14486, metadata !DIExpression()) #23, !dbg !15079
  call void @llvm.dbg.value(metadata i32 %9, metadata !14480, metadata !DIExpression()) #23, !dbg !15075
  call void @llvm.dbg.value(metadata i32 %9, metadata !15072, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !15092
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15094, !srcloc !14528
  call void @llvm.dbg.value(metadata i32 1, metadata !15070, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.value(metadata i32 undef, metadata !15070, metadata !DIExpression()), !dbg !15074
  ret void, !dbg !15095
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15096 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15098, metadata !DIExpression()), !dbg !15100
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15101
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15103, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15105
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15105
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15101
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15106
  br i1 %3, label %5, label %4, !dbg !15107

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15108
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15108
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15108
  unreachable, !dbg !15108

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15103
  call void @llvm.dbg.value(metadata i32 %6, metadata !14486, metadata !DIExpression()) #23, !dbg !15105
  call void @llvm.dbg.value(metadata i32 %6, metadata !14480, metadata !DIExpression()) #23, !dbg !15101
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15109
  call void @llvm.dbg.value(metadata i32 %6, metadata !15099, metadata !DIExpression()), !dbg !15100
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15110
  br i1 %7, label %8, label %12, !dbg !15112

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15113
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15116
  br i1 %9, label %11, label %10, !dbg !15117

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15118
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15118
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15118
  unreachable, !dbg !15118

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14508, metadata !DIExpression()) #23, !dbg !15113
  call void @llvm.dbg.value(metadata i32 %6, metadata !14522, metadata !DIExpression()) #23, !dbg !15119
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15121, !srcloc !14528
  br label %14, !dbg !15122

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.300(%struct.k_thread* noundef %0) #24, !dbg !15123
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15124
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15125
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15125
  br label %14, !dbg !15126

14:                                               ; preds = %12, %11
  ret void, !dbg !15126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15127 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15129, metadata !DIExpression()), !dbg !15130
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15131
  %3 = load i8, i8* %2, align 1, !dbg !15131
  %4 = and i8 %3, 4, !dbg !15132
  %5 = icmp eq i8 %4, 0, !dbg !15133
  ret i1 %5, !dbg !15134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.300(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15135 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15137, metadata !DIExpression()), !dbg !15138
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15139
  %3 = load i8, i8* %2, align 1, !dbg !15140
  %4 = and i8 %3, -5, !dbg !15140
  store i8 %4, i8* %2, align 1, !dbg !15140
  ret void, !dbg !15141
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15142 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15145, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15144, metadata !DIExpression()), !dbg !15146
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15147
  br i1 %4, label %5, label %12, !dbg !15149

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15150
  br i1 %6, label %7, label %12, !dbg !15151

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #23, !dbg !15158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15157, metadata !DIExpression()) #23, !dbg !15158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15161, metadata !DIExpression()) #23, !dbg !15166
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15168
  br i1 %8, label %10, label %9, !dbg !15171

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !15172
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15172
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !15172
  unreachable, !dbg !15172

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15152, metadata !DIExpression()) #23, !dbg !15158
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15174
  br label %16, !dbg !15175

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14513, metadata !DIExpression()) #23, !dbg !15176
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15179
  br i1 %13, label %15, label %14, !dbg !15180

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15181
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15181
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15181
  unreachable, !dbg !15181

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14508, metadata !DIExpression()) #23, !dbg !15176
  call void @llvm.dbg.value(metadata i32 %3, metadata !14522, metadata !DIExpression()) #23, !dbg !15182
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15184, !srcloc !14528
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15190, metadata !DIExpression()), !dbg !15191
  call void @llvm.dbg.value(metadata i32 %0, metadata !15192, metadata !DIExpression()), !dbg !15197
  %2 = icmp eq i32 %0, 0, !dbg !15199
  br i1 %2, label %3, label %6, !dbg !15200

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15201, !srcloc !15208
  call void @llvm.dbg.value(metadata i32 %4, metadata !15204, metadata !DIExpression()) #23, !dbg !15209
  %5 = icmp eq i32 %4, 0, !dbg !15210
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15191
  ret i1 %7, !dbg !15211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15212 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15215
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15214, metadata !DIExpression()), !dbg !15216
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15217
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15218
  ret i1 %3, !dbg !15219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15222, metadata !DIExpression()), !dbg !15224
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15225
  call void @llvm.dbg.value(metadata i32 %2, metadata !15223, metadata !DIExpression()), !dbg !15224
  ret i32 %2, !dbg !15226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15227 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15229, metadata !DIExpression()), !dbg !15233
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15234
  call void @llvm.dbg.value(metadata i32 0, metadata !15230, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15236
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15238, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15240
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15240
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15236
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15241
  br i1 %4, label %6, label %5, !dbg !15242

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15243
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15243
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15243
  unreachable, !dbg !15243

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15238
  call void @llvm.dbg.value(metadata i32 %7, metadata !14486, metadata !DIExpression()) #23, !dbg !15240
  call void @llvm.dbg.value(metadata i32 %7, metadata !14480, metadata !DIExpression()) #23, !dbg !15236
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15244
  call void @llvm.dbg.value(metadata i32 %7, metadata !15232, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata i32 undef, metadata !15230, metadata !DIExpression()), !dbg !15235
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15245
  br i1 %8, label %9, label %13, !dbg !15249

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14666, metadata !DIExpression()) #23, !dbg !15250
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15253
  %11 = load i8, i8* %10, align 1, !dbg !15254
  %12 = and i8 %11, 127, !dbg !15254
  store i8 %12, i8* %10, align 1, !dbg !15254
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14674, metadata !DIExpression()) #23, !dbg !15255
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15257
  br label %13, !dbg !15258

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15259
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15260
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15261
  %16 = zext i1 %15 to i32, !dbg !15261
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15262
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15263
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15263
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15265
  br i1 %17, label %19, label %18, !dbg !15266

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15267
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15267
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15267
  unreachable, !dbg !15267

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14508, metadata !DIExpression()) #23, !dbg !15263
  call void @llvm.dbg.value(metadata i32 %7, metadata !14522, metadata !DIExpression()) #23, !dbg !15268
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15270, !srcloc !14528
  call void @llvm.dbg.value(metadata i32 1, metadata !15230, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata i32 undef, metadata !15230, metadata !DIExpression()), !dbg !15235
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15271
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15273
  br i1 %21, label %22, label %23, !dbg !15274

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15275
  br label %23, !dbg !15277

23:                                               ; preds = %22, %19
  ret void, !dbg !15278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15281, metadata !DIExpression()), !dbg !15282
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15283
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15284
  ret i32 %3, !dbg !15285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15286 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15288, metadata !DIExpression()), !dbg !15289
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15290
  %3 = load i8, i8* %2, align 1, !dbg !15291
  %4 = or i8 %3, 16, !dbg !15291
  store i8 %4, i8* %2, align 1, !dbg !15291
  ret void, !dbg !15292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15293 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15294, !srcloc !14489
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15294
  call void @llvm.dbg.value(metadata i32 %2, metadata !14486, metadata !DIExpression()) #23, !dbg !15296
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15296
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15297
  ret void, !dbg !15298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15301, metadata !DIExpression()), !dbg !15302
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15303
  br i1 %2, label %3, label %5, !dbg !15305

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15306
  br label %6, !dbg !15308

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14522, metadata !DIExpression()) #23, !dbg !15309
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15312, !srcloc !14528
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15313
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15314 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15316, metadata !DIExpression()), !dbg !15318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15319
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15321, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15323
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15323
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15319
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15324
  br i1 %3, label %5, label %4, !dbg !15325

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15326
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15326
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15326
  unreachable, !dbg !15326

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15321
  call void @llvm.dbg.value(metadata i32 %6, metadata !14486, metadata !DIExpression()) #23, !dbg !15323
  call void @llvm.dbg.value(metadata i32 %6, metadata !14480, metadata !DIExpression()) #23, !dbg !15319
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15327
  call void @llvm.dbg.value(metadata i32 %6, metadata !15317, metadata !DIExpression()), !dbg !15318
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15328
  br i1 %7, label %12, label %8, !dbg !15330

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15331
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15334
  br i1 %9, label %11, label %10, !dbg !15335

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15336
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15336
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15336
  unreachable, !dbg !15336

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14508, metadata !DIExpression()) #23, !dbg !15331
  call void @llvm.dbg.value(metadata i32 %6, metadata !14522, metadata !DIExpression()) #23, !dbg !15337
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15339, !srcloc !14528
  br label %14, !dbg !15340

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15341
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15342
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15343
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15343
  br label %14, !dbg !15344

14:                                               ; preds = %12, %11
  ret void, !dbg !15344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15347, metadata !DIExpression()), !dbg !15348
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15349
  %3 = load i8, i8* %2, align 1, !dbg !15349
  %4 = and i8 %3, 16, !dbg !15350
  %5 = icmp ne i8 %4, 0, !dbg !15351
  ret i1 %5, !dbg !15352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15355, metadata !DIExpression()), !dbg !15356
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15357
  %3 = load i8, i8* %2, align 1, !dbg !15358
  %4 = and i8 %3, -17, !dbg !15358
  store i8 %4, i8* %2, align 1, !dbg !15358
  ret void, !dbg !15359
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15360 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15370, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15368, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15369, metadata !DIExpression()), !dbg !15374
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15375
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15375
  br i1 %5, label %9, label %6, !dbg !15375

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15375
  br i1 %7, label %9, label %8, !dbg !15378

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 773) #25, !dbg !15379
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 773) #25, !dbg !15379
  unreachable, !dbg !15379

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15371, metadata !DIExpression()), !dbg !15381
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15382
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15384, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15386
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15386
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15382
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15387
  br i1 %11, label %13, label %12, !dbg !15388

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15389
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15389
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15389
  unreachable, !dbg !15389

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15386
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15382
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15390
  call void @llvm.dbg.value(metadata i32 undef, metadata !15373, metadata !DIExpression()), !dbg !15381
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()), !dbg !15381
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15391
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15394
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15394
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15396
  br i1 %14, label %16, label %15, !dbg !15397

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15398
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15398
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15398
  unreachable, !dbg !15398

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15384
  call void @llvm.dbg.value(metadata i32 %17, metadata !14486, metadata !DIExpression()) #23, !dbg !15386
  call void @llvm.dbg.value(metadata i32 %17, metadata !14480, metadata !DIExpression()) #23, !dbg !15382
  call void @llvm.dbg.value(metadata i32 %17, metadata !15373, metadata !DIExpression()), !dbg !15381
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15394
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !15399
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15401, !srcloc !14528
  call void @llvm.dbg.value(metadata i32 1, metadata !15371, metadata !DIExpression()), !dbg !15381
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()), !dbg !15381
  ret void, !dbg !15402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15403 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15405, metadata !DIExpression()), !dbg !15406
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15407
  %3 = load i8, i8* %2, align 1, !dbg !15407
  %4 = and i8 %3, 1, !dbg !15408
  %5 = icmp ne i8 %4, 0, !dbg !15409
  ret i1 %5, !dbg !15410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15411 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15415, metadata !DIExpression()), !dbg !15416
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15413, metadata !DIExpression()), !dbg !15416
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15414, metadata !DIExpression()), !dbg !15416
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !15417
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15418
  ret void, !dbg !15419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15420 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15424, metadata !DIExpression()), !dbg !15426
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15425, metadata !DIExpression()), !dbg !15426
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15427
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15428
  %3 = icmp eq %union.anon* %1, null, !dbg !15429
  br i1 %3, label %24, label %4, !dbg !15431

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15432
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15434
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15435
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14697, metadata !DIExpression()) #23, !dbg !15436
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14703, metadata !DIExpression()) #23, !dbg !15436
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15438
  br i1 %7, label %8, label %9, !dbg !15439

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !15440
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !15440
  unreachable, !dbg !15440

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15441
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14704, metadata !DIExpression()) #23, !dbg !15436
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15442
  br i1 %11, label %22, label %12, !dbg !15441

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14704, metadata !DIExpression()) #23, !dbg !15436
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15443
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14704, metadata !DIExpression()) #23, !dbg !15436
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15444
  %16 = icmp sgt i32 %15, 0, !dbg !15445
  br i1 %16, label %17, label %19, !dbg !15446

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15447
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15448
  br label %24, !dbg !15449

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15442
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14704, metadata !DIExpression()) #23, !dbg !15436
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15442
  br i1 %21, label %22, label %12, !dbg !15441, !llvm.loop !15450

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15452
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15453
  br label %24, !dbg !15454

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15456 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15461, metadata !DIExpression()), !dbg !15462
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15460, metadata !DIExpression()), !dbg !15462
  %4 = icmp eq i64 %3, -1, !dbg !15463
  br i1 %4, label %6, label %5, !dbg !15465

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.302(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15466
  br label %6, !dbg !15468

6:                                                ; preds = %5, %2
  ret void, !dbg !15469
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.302(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15470 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15473, metadata !DIExpression()), !dbg !15474
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15472, metadata !DIExpression()), !dbg !15474
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15475
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15476
  ret void, !dbg !15477
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15478 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15480, metadata !DIExpression()), !dbg !15488
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15489
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15489
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15481, metadata !DIExpression()), !dbg !15488
  call void @llvm.dbg.value(metadata i32 0, metadata !15482, metadata !DIExpression()), !dbg !15490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15491
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15493, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15491
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15496
  br i1 %5, label %7, label %6, !dbg !15497

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15498
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15498
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15498
  unreachable, !dbg !15498

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15495
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15491
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15499
  call void @llvm.dbg.value(metadata i32 undef, metadata !15484, metadata !DIExpression()), !dbg !15490
  call void @llvm.dbg.value(metadata i32 undef, metadata !15482, metadata !DIExpression()), !dbg !15490
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15500
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15501
  %10 = load i8, i8* %9, align 1, !dbg !15501
  %11 = and i8 %10, 40, !dbg !15502
  %12 = icmp eq i8 %11, 0, !dbg !15502
  call void @llvm.dbg.value(metadata i1 %12, metadata !15485, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15503
  br i1 %12, label %13, label %20, !dbg !15504

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15505
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !15505
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !15505
  %17 = icmp eq %union.anon* %16, null, !dbg !15509
  br i1 %17, label %19, label %18, !dbg !15510

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15511
  br label %19, !dbg !15513

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.300(%struct.k_thread* noundef nonnull %3) #24, !dbg !15514
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15515
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15516
  br label %20, !dbg !15517

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15518
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15520
  br i1 %21, label %23, label %22, !dbg !15521

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15522
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15522
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15522
  unreachable, !dbg !15522

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15493
  call void @llvm.dbg.value(metadata i32 %24, metadata !14486, metadata !DIExpression()) #23, !dbg !15495
  call void @llvm.dbg.value(metadata i32 %24, metadata !14480, metadata !DIExpression()) #23, !dbg !15491
  call void @llvm.dbg.value(metadata i32 %24, metadata !15484, metadata !DIExpression()), !dbg !15490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15518
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !15523
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15525, !srcloc !14528
  call void @llvm.dbg.value(metadata i32 1, metadata !15482, metadata !DIExpression()), !dbg !15490
  call void @llvm.dbg.value(metadata i32 undef, metadata !15482, metadata !DIExpression()), !dbg !15490
  ret void, !dbg !15526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15527 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15529, metadata !DIExpression()), !dbg !15530
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15531
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15532
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15533
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15534
  store %union.anon* null, %union.anon** %3, align 8, !dbg !15535
  ret void, !dbg !15536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15537 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15541, metadata !DIExpression()), !dbg !15542
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15543
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !15543
  %4 = icmp eq %union.anon* %3, null, !dbg !15543
  br i1 %4, label %5, label %6, !dbg !15546

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 726) #25, !dbg !15547
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 726) #25, !dbg !15547
  unreachable, !dbg !15547

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !15549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15552, metadata !DIExpression()), !dbg !15553
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15554
  %3 = load i8, i8* %2, align 1, !dbg !15555
  %4 = and i8 %3, -3, !dbg !15555
  store i8 %4, i8* %2, align 1, !dbg !15555
  ret void, !dbg !15556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15557 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15559, metadata !DIExpression()), !dbg !15560
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15561
  br i1 %2, label %3, label %7, !dbg !15563

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14666, metadata !DIExpression()) #23, !dbg !15564
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15567
  %5 = load i8, i8* %4, align 1, !dbg !15568
  %6 = and i8 %5, 127, !dbg !15568
  store i8 %6, i8* %4, align 1, !dbg !15568
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14674, metadata !DIExpression()) #23, !dbg !15569
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15571
  br label %7, !dbg !15572

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15573
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15574
  %10 = zext i1 %9 to i32, !dbg !15574
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15575
  ret void, !dbg !15576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15577 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15579, metadata !DIExpression()), !dbg !15580
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15581
  %3 = load i8, i8* %2, align 1, !dbg !15582
  %4 = or i8 %3, 2, !dbg !15582
  store i8 %4, i8* %2, align 1, !dbg !15582
  ret void, !dbg !15583
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15584 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15586, metadata !DIExpression()), !dbg !15590
  call void @llvm.dbg.value(metadata i32 0, metadata !15587, metadata !DIExpression()), !dbg !15591
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15592
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15594, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15596
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15596
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15592
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15597
  br i1 %3, label %5, label %4, !dbg !15598

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15599
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15599
  unreachable, !dbg !15599

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15596
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15592
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15600
  call void @llvm.dbg.value(metadata i32 undef, metadata !15589, metadata !DIExpression()), !dbg !15591
  call void @llvm.dbg.value(metadata i32 undef, metadata !15587, metadata !DIExpression()), !dbg !15591
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15604
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15604
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15606
  br i1 %6, label %8, label %7, !dbg !15607

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15608
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15608
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15608
  unreachable, !dbg !15608

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15594
  call void @llvm.dbg.value(metadata i32 %9, metadata !14486, metadata !DIExpression()) #23, !dbg !15596
  call void @llvm.dbg.value(metadata i32 %9, metadata !14480, metadata !DIExpression()) #23, !dbg !15592
  call void @llvm.dbg.value(metadata i32 %9, metadata !15589, metadata !DIExpression()), !dbg !15591
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15604
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !15609
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15611, !srcloc !14528
  call void @llvm.dbg.value(metadata i32 1, metadata !15587, metadata !DIExpression()), !dbg !15591
  call void @llvm.dbg.value(metadata i32 undef, metadata !15587, metadata !DIExpression()), !dbg !15591
  ret void, !dbg !15612
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15613 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15619, metadata !DIExpression()), !dbg !15624
  call void @llvm.dbg.value(metadata i32 %0, metadata !15617, metadata !DIExpression()), !dbg !15624
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15618, metadata !DIExpression()), !dbg !15624
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15625
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15626
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15627
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15628
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15629
  call void @llvm.dbg.value(metadata i32 %6, metadata !15620, metadata !DIExpression()), !dbg !15624
  call void @llvm.dbg.value(metadata i32 0, metadata !15621, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15631
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15633, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15635
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15635
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15631
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15636
  br i1 %8, label %10, label %9, !dbg !15637

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15638
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15638
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15638
  unreachable, !dbg !15638

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15635
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15631
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15639
  call void @llvm.dbg.value(metadata i32 undef, metadata !15623, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata i32 undef, metadata !15621, metadata !DIExpression()), !dbg !15630
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15640
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15644
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15645
  br i1 %13, label %14, label %15, !dbg !15646

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15647
  br label %15, !dbg !15649

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15650
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15650
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15652
  br i1 %16, label %18, label %17, !dbg !15653

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15654
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15654
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15654
  unreachable, !dbg !15654

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15633
  call void @llvm.dbg.value(metadata i32 %19, metadata !14486, metadata !DIExpression()) #23, !dbg !15635
  call void @llvm.dbg.value(metadata i32 %19, metadata !14480, metadata !DIExpression()) #23, !dbg !15631
  call void @llvm.dbg.value(metadata i32 %19, metadata !15623, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15650
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !15655
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15657, !srcloc !14528
  call void @llvm.dbg.value(metadata i32 1, metadata !15621, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata i32 undef, metadata !15621, metadata !DIExpression()), !dbg !15630
  ret i32 %6, !dbg !15658
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15659 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15664, metadata !DIExpression()), !dbg !15667
  call void @llvm.dbg.value(metadata i64 undef, metadata !15666, metadata !DIExpression()), !dbg !15667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15663, metadata !DIExpression()), !dbg !15667
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15665, metadata !DIExpression()), !dbg !15667
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15668
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15669
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15670
  br i1 %6, label %7, label %8, !dbg !15673

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 846) #25, !dbg !15674
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 846) #25, !dbg !15674
  unreachable, !dbg !15674

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15676
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15678, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15680
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15680
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15676
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15681
  br i1 %10, label %12, label %11, !dbg !15682

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15683
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15683
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15683
  unreachable, !dbg !15683

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15680
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15676
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15684
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15685
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !15686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15161, metadata !DIExpression()) #23, !dbg !15687
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15689
  br i1 %14, label %16, label %15, !dbg !15690

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !15691
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15691
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !15691
  unreachable, !dbg !15691

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #23, !dbg !15692
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15157, metadata !DIExpression()) #23, !dbg !15692
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15161, metadata !DIExpression()) #23, !dbg !15694
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15696
  br i1 %17, label %19, label %18, !dbg !15697

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !15698
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15698
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !15698
  unreachable, !dbg !15698

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15152, metadata !DIExpression()) #23, !dbg !15692
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15699
  ret i32 %21, !dbg !15700
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15701 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15705, metadata !DIExpression()), !dbg !15710
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15706, metadata !DIExpression()), !dbg !15710
  call void @llvm.dbg.value(metadata i32 0, metadata !15707, metadata !DIExpression()), !dbg !15711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15712
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15714, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15716
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15716
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15712
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15717
  br i1 %3, label %5, label %4, !dbg !15718

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15719
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15719
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15719
  unreachable, !dbg !15719

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15716
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15712
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15709, metadata !DIExpression()), !dbg !15711
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15706, metadata !DIExpression()), !dbg !15710
  call void @llvm.dbg.value(metadata i32 undef, metadata !15707, metadata !DIExpression()), !dbg !15711
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15721
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15706, metadata !DIExpression()), !dbg !15710
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15724
  br i1 %8, label %10, label %9, !dbg !15726

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15727
  br label %10, !dbg !15729

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15730
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15730
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15732
  br i1 %11, label %13, label %12, !dbg !15733

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15734
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15734
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15734
  unreachable, !dbg !15734

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15714
  call void @llvm.dbg.value(metadata i32 %14, metadata !14486, metadata !DIExpression()) #23, !dbg !15716
  call void @llvm.dbg.value(metadata i32 %14, metadata !14480, metadata !DIExpression()) #23, !dbg !15712
  call void @llvm.dbg.value(metadata i32 %14, metadata !15709, metadata !DIExpression()), !dbg !15711
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15730
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !15735
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15737, !srcloc !14528
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15706, metadata !DIExpression()), !dbg !15710
  call void @llvm.dbg.value(metadata i32 undef, metadata !15707, metadata !DIExpression()), !dbg !15711
  ret %struct.k_thread* %7, !dbg !15738
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15739 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15741, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15742, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i32 0, metadata !15743, metadata !DIExpression()), !dbg !15747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15748
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15750, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15748
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15753
  br i1 %3, label %5, label %4, !dbg !15754

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15755
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15755
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15755
  unreachable, !dbg !15755

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15748
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15756
  call void @llvm.dbg.value(metadata i32 undef, metadata !15745, metadata !DIExpression()), !dbg !15747
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15742, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i32 undef, metadata !15743, metadata !DIExpression()), !dbg !15747
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15757
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15742, metadata !DIExpression()), !dbg !15746
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15760
  br i1 %8, label %11, label %9, !dbg !15762

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15763
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15765
  br label %11, !dbg !15766

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15767
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15769
  br i1 %12, label %14, label %13, !dbg !15770

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15771
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15771
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15771
  unreachable, !dbg !15771

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15750
  call void @llvm.dbg.value(metadata i32 %15, metadata !14486, metadata !DIExpression()) #23, !dbg !15752
  call void @llvm.dbg.value(metadata i32 %15, metadata !14480, metadata !DIExpression()) #23, !dbg !15748
  call void @llvm.dbg.value(metadata i32 %15, metadata !15745, metadata !DIExpression()), !dbg !15747
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !15772
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15774, !srcloc !14528
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15742, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i32 undef, metadata !15743, metadata !DIExpression()), !dbg !15747
  ret %struct.k_thread* %7, !dbg !15775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15776 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15778, metadata !DIExpression()), !dbg !15779
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15586, metadata !DIExpression()) #23, !dbg !15780
  call void @llvm.dbg.value(metadata i32 0, metadata !15587, metadata !DIExpression()) #23, !dbg !15782
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15783
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15785, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15787
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15787
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15783
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15788
  br i1 %3, label %5, label %4, !dbg !15789

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15790
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15790
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15790
  unreachable, !dbg !15790

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15787
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15783
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15791
  call void @llvm.dbg.value(metadata i32 undef, metadata !15589, metadata !DIExpression()) #23, !dbg !15782
  call void @llvm.dbg.value(metadata i32 undef, metadata !15587, metadata !DIExpression()) #23, !dbg !15782
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15792
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15793
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15795
  br i1 %6, label %8, label %7, !dbg !15796

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15797
  unreachable, !dbg !15797

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15785
  call void @llvm.dbg.value(metadata i32 %9, metadata !14486, metadata !DIExpression()) #23, !dbg !15787
  call void @llvm.dbg.value(metadata i32 %9, metadata !14480, metadata !DIExpression()) #23, !dbg !15783
  call void @llvm.dbg.value(metadata i32 %9, metadata !15589, metadata !DIExpression()) #23, !dbg !15782
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15793
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !15798
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15800, !srcloc !14528
  call void @llvm.dbg.value(metadata i32 1, metadata !15587, metadata !DIExpression()) #23, !dbg !15782
  call void @llvm.dbg.value(metadata i32 undef, metadata !15587, metadata !DIExpression()) #23, !dbg !15782
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15801
  ret void, !dbg !15802
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15803 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15805, metadata !DIExpression()), !dbg !15811
  call void @llvm.dbg.value(metadata i32 %1, metadata !15806, metadata !DIExpression()), !dbg !15811
  call void @llvm.dbg.value(metadata i8 0, metadata !15807, metadata !DIExpression()), !dbg !15811
  call void @llvm.dbg.value(metadata i32 0, metadata !15808, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15813
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15815, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15813
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15818
  br i1 %4, label %6, label %5, !dbg !15819

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15820
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15820
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15820
  unreachable, !dbg !15820

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15817
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15813
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15821
  call void @llvm.dbg.value(metadata i32 undef, metadata !15810, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata i8 poison, metadata !15807, metadata !DIExpression()), !dbg !15811
  call void @llvm.dbg.value(metadata i32 undef, metadata !15808, metadata !DIExpression()), !dbg !15812
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15822
  call void @llvm.dbg.value(metadata i1 %9, metadata !15807, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15811
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15825

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14666, metadata !DIExpression()) #23, !dbg !15826
  %14 = load i8, i8* %7, align 1, !dbg !15832
  %15 = and i8 %14, 127, !dbg !15832
  store i8 %15, i8* %7, align 1, !dbg !15832
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14674, metadata !DIExpression()) #23, !dbg !15833
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15835
  store i8 %12, i8* %11, align 2, !dbg !15836
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14683, metadata !DIExpression()) #23, !dbg !15837
  %16 = load i8, i8* %7, align 1, !dbg !15839
  %17 = or i8 %16, -128, !dbg !15839
  store i8 %17, i8* %7, align 1, !dbg !15839
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14690, metadata !DIExpression()) #23, !dbg !15840
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14697, metadata !DIExpression()) #23, !dbg !15842
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14703, metadata !DIExpression()) #23, !dbg !15842
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15844
  br i1 %18, label %19, label %20, !dbg !15845

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !15846
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !15846
  unreachable, !dbg !15846

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15847
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14704, metadata !DIExpression()) #23, !dbg !15842
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15848
  br i1 %22, label %32, label %23, !dbg !15847

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14704, metadata !DIExpression()) #23, !dbg !15842
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15849
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14704, metadata !DIExpression()) #23, !dbg !15842
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15850
  %27 = icmp sgt i32 %26, 0, !dbg !15851
  br i1 %27, label %28, label %29, !dbg !15852

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15853
  br label %33, !dbg !15854

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15848
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14704, metadata !DIExpression()) #23, !dbg !15842
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15848
  br i1 %31, label %32, label %23, !dbg !15847, !llvm.loop !15855

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15857
  br label %33, !dbg !15858

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15859
  br label %35, !dbg !15860

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15861
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15863
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15863
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15865
  br i1 %36, label %38, label %37, !dbg !15866

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15867
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15867
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15867
  unreachable, !dbg !15867

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15815
  call void @llvm.dbg.value(metadata i32 %39, metadata !14486, metadata !DIExpression()) #23, !dbg !15817
  call void @llvm.dbg.value(metadata i32 %39, metadata !14480, metadata !DIExpression()) #23, !dbg !15813
  call void @llvm.dbg.value(metadata i32 %39, metadata !15810, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15863
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !15868
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15870, !srcloc !14528
  call void @llvm.dbg.value(metadata i8 poison, metadata !15807, metadata !DIExpression()), !dbg !15811
  call void @llvm.dbg.value(metadata i32 undef, metadata !15808, metadata !DIExpression()), !dbg !15812
  ret i1 %9, !dbg !15871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15872 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15876, metadata !DIExpression()), !dbg !15879
  call void @llvm.dbg.value(metadata i32 %1, metadata !15877, metadata !DIExpression()), !dbg !15879
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15880
  call void @llvm.dbg.value(metadata i1 %3, metadata !15878, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15879
  br i1 %3, label %4, label %12, !dbg !15881

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15883
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15884
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15884
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15884
  %9 = load i8, i8* %8, align 1, !dbg !15884
  %10 = icmp eq i8 %9, 0, !dbg !15885
  br i1 %10, label %11, label %12, !dbg !15886

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15887
  br label %12, !dbg !15889

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15890
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15891 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15893, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15897
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15899, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15897
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15902
  br i1 %2, label %4, label %3, !dbg !15903

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15904
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15904
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15904
  unreachable, !dbg !15904

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15897
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15905
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i32 undef, metadata !15893, metadata !DIExpression()), !dbg !15896
  tail call fastcc void @z_sched_lock() #24, !dbg !15906
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15909
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15909
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15911
  br i1 %5, label %7, label %6, !dbg !15912

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15913
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15913
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15913
  unreachable, !dbg !15913

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15899
  call void @llvm.dbg.value(metadata i32 %8, metadata !14486, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 %8, metadata !14480, metadata !DIExpression()) #23, !dbg !15897
  call void @llvm.dbg.value(metadata i32 %8, metadata !15895, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15909
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !15914
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15916, !srcloc !14528
  call void @llvm.dbg.value(metadata i32 1, metadata !15893, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i32 undef, metadata !15893, metadata !DIExpression()), !dbg !15896
  ret void, !dbg !15917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15918 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15919, !srcloc !15208
  call void @llvm.dbg.value(metadata i32 %1, metadata !15204, metadata !DIExpression()) #23, !dbg !15924
  %2 = icmp eq i32 %1, 0, !dbg !15925
  br i1 %2, label %4, label %3, !dbg !15926

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.310, i32 0, i32 0), i32 noundef 253) #25, !dbg !15927
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.310, i32 0, i32 0), i32 noundef 253) #25, !dbg !15927
  unreachable, !dbg !15927

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15929
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15929
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15929
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15929
  %9 = load i8, i8* %8, align 1, !dbg !15929
  %10 = icmp eq i8 %9, 1, !dbg !15929
  br i1 %10, label %11, label %12, !dbg !15932

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.310, i32 0, i32 0), i32 noundef 254) #25, !dbg !15933
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15933
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.310, i32 0, i32 0), i32 noundef 254) #25, !dbg !15933
  unreachable, !dbg !15933

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15935
  store i8 %13, i8* %8, align 1, !dbg !15935
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15936, !srcloc !15938
  ret void, !dbg !15939
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15940 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15942, metadata !DIExpression()), !dbg !15945
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !15946
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15948, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15950
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15950
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15946
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15951
  br i1 %2, label %4, label %3, !dbg !15952

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15953
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15953
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !15953
  unreachable, !dbg !15953

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15950
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !15946
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15954
  call void @llvm.dbg.value(metadata i32 undef, metadata !15944, metadata !DIExpression()), !dbg !15945
  call void @llvm.dbg.value(metadata i32 undef, metadata !15942, metadata !DIExpression()), !dbg !15945
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15955
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15955
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15955
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15955
  %9 = load i8, i8* %8, align 1, !dbg !15955
  %10 = icmp eq i8 %9, 0, !dbg !15955
  br i1 %10, label %11, label %12, !dbg !15960

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 999) #25, !dbg !15961
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15961
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 999) #25, !dbg !15961
  unreachable, !dbg !15961

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15963, !srcloc !15208
  call void @llvm.dbg.value(metadata i32 %13, metadata !15204, metadata !DIExpression()) #23, !dbg !15968
  %14 = icmp eq i32 %13, 0, !dbg !15969
  br i1 %14, label %16, label %15, !dbg !15970

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15971
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15971
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15971
  unreachable, !dbg !15971

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15973
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15974
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15974
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15974
  %21 = load i8, i8* %20, align 1, !dbg !15975
  %22 = add i8 %21, 1, !dbg !15975
  store i8 %22, i8* %20, align 1, !dbg !15975
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15976
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !15977
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15979
  br i1 %23, label %25, label %24, !dbg !15980

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15981
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15981
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !15981
  unreachable, !dbg !15981

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15948
  call void @llvm.dbg.value(metadata i32 %26, metadata !14486, metadata !DIExpression()) #23, !dbg !15950
  call void @llvm.dbg.value(metadata i32 %26, metadata !14480, metadata !DIExpression()) #23, !dbg !15946
  call void @llvm.dbg.value(metadata i32 %26, metadata !15944, metadata !DIExpression()), !dbg !15945
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !15977
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !15982
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15984, !srcloc !14528
  call void @llvm.dbg.value(metadata i32 1, metadata !15942, metadata !DIExpression()), !dbg !15945
  call void @llvm.dbg.value(metadata i32 undef, metadata !15942, metadata !DIExpression()), !dbg !15945
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15985
  ret void, !dbg !15986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15987 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15988
  ret %struct.k_thread* %1, !dbg !15989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15990 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15994, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15995, metadata !DIExpression()), !dbg !15999
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16000
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15996, metadata !DIExpression()), !dbg !15999
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16001
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15997, metadata !DIExpression()), !dbg !15999
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16002
  call void @llvm.dbg.value(metadata i32 %5, metadata !15998, metadata !DIExpression()), !dbg !15999
  %6 = icmp sgt i32 %5, 0, !dbg !16003
  br i1 %6, label %17, label %7, !dbg !16005

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16006
  br i1 %8, label %17, label %9, !dbg !16008

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16009
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16009
  %12 = load i32, i32* %11, align 8, !dbg !16009
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16011
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16011
  %15 = load i32, i32* %14, align 8, !dbg !16011
  %16 = icmp ult i32 %12, %15, !dbg !16012
  br label %17, !dbg !16013

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16014
  ret i1 %18, !dbg !16015
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16016 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16033, metadata !DIExpression()), !dbg !16048
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16034, metadata !DIExpression()), !dbg !16048
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16049
  br i1 %4, label %5, label %6, !dbg !16052

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16053
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16053
  unreachable, !dbg !16053

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16055
  %8 = load i32, i32* %7, align 4, !dbg !16056
  %9 = add nsw i32 %8, 1, !dbg !16056
  store i32 %9, i32* %7, align 4, !dbg !16056
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16057
  store i32 %8, i32* %10, align 8, !dbg !16058
  %11 = load i32, i32* %7, align 4, !dbg !16059
  %12 = icmp eq i32 %11, 0, !dbg !16060
  br i1 %12, label %13, label %35, !dbg !16061

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16062
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16062
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16036, metadata !DIExpression()), !dbg !16062
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16062
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16062
  %17 = load i32, i32* %16, align 4, !dbg !16062
  %18 = shl i32 %17, 2, !dbg !16062
  %19 = alloca i8, i32 %18, align 8, !dbg !16062
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16062
  store i8* %19, i8** %20, align 4, !dbg !16062
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16062
  %22 = alloca i8, i32 %17, align 8, !dbg !16062
  store i8* %22, i8** %21, align 4, !dbg !16062
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16062
  store i32 -1, i32* %23, align 4, !dbg !16062
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16063
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16045, metadata !DIExpression()), !dbg !16064
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16035, metadata !DIExpression()), !dbg !16048
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16065
  br i1 %25, label %26, label %27, !dbg !16062

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16065
  br label %35, !dbg !16066

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16035, metadata !DIExpression()), !dbg !16048
  %29 = load i32, i32* %7, align 4, !dbg !16067
  %30 = add nsw i32 %29, 1, !dbg !16067
  store i32 %30, i32* %7, align 4, !dbg !16067
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16069
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16069
  store i32 %29, i32* %32, align 8, !dbg !16070
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16063
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16045, metadata !DIExpression()), !dbg !16064
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16035, metadata !DIExpression()), !dbg !16048
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16065
  br i1 %34, label %26, label %27, !dbg !16062, !llvm.loop !16071

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16073
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16074
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16075
  ret void, !dbg !16076
}

; Function Attrs: optsize
declare !dbg !16077 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16082 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16085 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16087, metadata !DIExpression()), !dbg !16089
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16088, metadata !DIExpression()), !dbg !16089
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16090
  br i1 %3, label %4, label %5, !dbg !16093

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16094
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16094
  unreachable, !dbg !16094

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16096
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16097
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16098
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16099
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16099
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16101
  br i1 %10, label %11, label %13, !dbg !16102

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16103
  store i32 0, i32* %12, align 4, !dbg !16105
  br label %13, !dbg !16106

13:                                               ; preds = %11, %5
  ret void, !dbg !16107
}

; Function Attrs: optsize
declare !dbg !16108 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16109 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16113, metadata !DIExpression()), !dbg !16116
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16114, metadata !DIExpression()), !dbg !16116
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16117
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16118
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16115, metadata !DIExpression()), !dbg !16116
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16114, metadata !DIExpression()), !dbg !16116
  ret %struct.k_thread* %4, !dbg !16119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16120 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16124, metadata !DIExpression()), !dbg !16125
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16126
  ret %struct.rbnode* %2, !dbg !16127
}

; Function Attrs: optsize
declare !dbg !16128 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16131 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16141, metadata !DIExpression()), !dbg !16145
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16146
  %3 = load i32, i32* %2, align 4, !dbg !16146
  %4 = icmp eq i32 %3, 0, !dbg !16148
  br i1 %4, label %10, label %5, !dbg !16149

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16142, metadata !DIExpression()), !dbg !16145
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16150, !range !7450
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16151
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16143, metadata !DIExpression()), !dbg !16145
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16152
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16144, metadata !DIExpression()), !dbg !16145
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16142, metadata !DIExpression()), !dbg !16145
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16145
  ret %struct.k_thread* %11, !dbg !16153
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16154 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16158, metadata !DIExpression()), !dbg !16161
  call void @llvm.dbg.value(metadata i32 0, metadata !16159, metadata !DIExpression()), !dbg !16161
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16162
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16160, metadata !DIExpression()), !dbg !16161
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16163
  br i1 %3, label %8, label %4, !dbg !16164

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16165
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16167
  call void @llvm.dbg.value(metadata i32 1, metadata !16159, metadata !DIExpression()), !dbg !16161
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16162
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16160, metadata !DIExpression()), !dbg !16161
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16163
  br i1 %7, label %8, label %4, !dbg !16164, !llvm.loop !16168

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16161
  ret i32 %9, !dbg !16170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !16171 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16173, metadata !DIExpression()), !dbg !16174
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16175
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16176
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16177
  ret %struct.k_thread* %4, !dbg !16178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16179 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16188, metadata !DIExpression()), !dbg !16189
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16190
  tail call fastcc void @sys_dlist_init.315(%struct._dnode* noundef nonnull %2) #24, !dbg !16191
  ret void, !dbg !16192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.315(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16193 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16197, metadata !DIExpression()), !dbg !16198
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16199
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16200
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16201
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16202
  ret void, !dbg !16203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16204 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16205
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16206
  ret void, !dbg !16207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16213, metadata !DIExpression()), !dbg !16214
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16215
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16215
  %4 = load i8, i8* %3, align 2, !dbg !16215
  %5 = sext i8 %4 to i32, !dbg !16216
  ret i32 %5, !dbg !16217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16222, metadata !DIExpression()), !dbg !16225
  call void @llvm.dbg.value(metadata i32 %1, metadata !16223, metadata !DIExpression()), !dbg !16225
  %3 = add i32 %1, 16, !dbg !16226
  %4 = icmp ult i32 %3, 31, !dbg !16226
  br i1 %4, label %6, label %5, !dbg !16226

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16230
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.319, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16230
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16230
  unreachable, !dbg !16230

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16232, !srcloc !15208
  call void @llvm.dbg.value(metadata i32 %7, metadata !15204, metadata !DIExpression()) #23, !dbg !16237
  %8 = icmp eq i32 %7, 0, !dbg !16238
  br i1 %8, label %10, label %9, !dbg !16239

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16240
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !16240
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16240
  unreachable, !dbg !16240

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16224, metadata !DIExpression()), !dbg !16225
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16242
  ret void, !dbg !16243
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16244 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16245
  br i1 %1, label %8, label %2, !dbg !16246

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16247
  br i1 %3, label %8, label %4, !dbg !16248

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16249
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16250
  %7 = xor i1 %6, true, !dbg !16248
  br label %8, !dbg !16248

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16252 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16253, !range !6613
  %2 = icmp eq i8 %1, 0, !dbg !16253
  ret i1 %2, !dbg !16254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16255 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16258, !srcloc !15208
  call void @llvm.dbg.value(metadata i32 %1, metadata !15204, metadata !DIExpression()) #23, !dbg !16263
  %2 = icmp eq i32 %1, 0, !dbg !16264
  br i1 %2, label %4, label %3, !dbg !16265

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16266
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !16266
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16266
  unreachable, !dbg !16266

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !16268
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16270, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16272
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !16272
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !16268
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16273
  br i1 %6, label %8, label %7, !dbg !16274

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16275
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16275
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16275
  unreachable, !dbg !16275

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16272
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !16268
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16276
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()), !dbg !16277
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16278
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14666, metadata !DIExpression()) #23, !dbg !16281
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16283
  %11 = load i8, i8* %10, align 1, !dbg !16284
  %12 = and i8 %11, 127, !dbg !16284
  store i8 %12, i8* %10, align 1, !dbg !16284
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14674, metadata !DIExpression()) #23, !dbg !16285
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16287
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16288
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14683, metadata !DIExpression()) #23, !dbg !16289
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16291
  %15 = load i8, i8* %14, align 1, !dbg !16292
  %16 = or i8 %15, -128, !dbg !16292
  store i8 %16, i8* %14, align 1, !dbg !16292
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14690, metadata !DIExpression()) #23, !dbg !16293
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14697, metadata !DIExpression()) #23, !dbg !16295
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14703, metadata !DIExpression()) #23, !dbg !16295
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16297
  br i1 %17, label %18, label %19, !dbg !16298

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !16299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 186) #25, !dbg !16299
  unreachable, !dbg !16299

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16300
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14704, metadata !DIExpression()) #23, !dbg !16295
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16301
  br i1 %21, label %32, label %22, !dbg !16300

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14704, metadata !DIExpression()) #23, !dbg !16295
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16302
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14704, metadata !DIExpression()) #23, !dbg !16295
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16303
  %26 = icmp sgt i32 %25, 0, !dbg !16304
  br i1 %26, label %27, label %29, !dbg !16305

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16306
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16307
  br label %34, !dbg !16308

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16301
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14704, metadata !DIExpression()) #23, !dbg !16295
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16301
  br i1 %31, label %32, label %22, !dbg !16300, !llvm.loop !16309

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16311
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16312
  br label %34, !dbg !16313

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16314
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #23, !dbg !16315
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15157, metadata !DIExpression()) #23, !dbg !16315
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15161, metadata !DIExpression()) #23, !dbg !16317
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16319
  br i1 %35, label %37, label %36, !dbg !16320

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16321
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16321
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16321
  unreachable, !dbg !16321

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16270
  call void @llvm.dbg.value(metadata i32 %38, metadata !14486, metadata !DIExpression()) #23, !dbg !16272
  call void @llvm.dbg.value(metadata i32 %38, metadata !14480, metadata !DIExpression()) #23, !dbg !16268
  call void @llvm.dbg.value(metadata i32 %38, metadata !16257, metadata !DIExpression()), !dbg !16277
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #23, !dbg !16315
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16322
  ret void, !dbg !16323
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16324 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16328, metadata !DIExpression()), !dbg !16331
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16332, !srcloc !15208
  call void @llvm.dbg.value(metadata i32 %3, metadata !15204, metadata !DIExpression()) #23, !dbg !16337
  %4 = icmp eq i32 %3, 0, !dbg !16338
  br i1 %4, label %6, label %5, !dbg !16339

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16340
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !16340
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16340
  unreachable, !dbg !16340

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16342
  br i1 %7, label %8, label %10, !dbg !16344

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16345
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16347
  br label %15, !dbg !16348

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16329, metadata !DIExpression()), !dbg !16331
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16349
  %12 = sext i32 %11 to i64, !dbg !16349
  call void @llvm.dbg.value(metadata i64 %12, metadata !16329, metadata !DIExpression()), !dbg !16331
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16350
  %14 = trunc i64 %13 to i32, !dbg !16350
  call void @llvm.dbg.value(metadata i32 %14, metadata !16330, metadata !DIExpression()), !dbg !16331
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16331
  ret i32 %16, !dbg !16351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16352 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16356, metadata !DIExpression()), !dbg !16357
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16358, !srcloc !16360
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16361
  ret void, !dbg !16362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16363 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16367, metadata !DIExpression()), !dbg !16371
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16372, !srcloc !15208
  call void @llvm.dbg.value(metadata i32 %2, metadata !15204, metadata !DIExpression()) #23, !dbg !16377
  %3 = icmp eq i32 %2, 0, !dbg !16378
  br i1 %3, label %5, label %4, !dbg !16379

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !16380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16380
  unreachable, !dbg !16380

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16382
  br i1 %6, label %7, label %8, !dbg !16384

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16385
  br label %43, !dbg !16387

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16369, metadata !DIExpression()), !dbg !16371
  %9 = icmp sgt i64 %0, -3, !dbg !16388
  br i1 %9, label %10, label %14, !dbg !16390

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16391
  %12 = trunc i64 %0 to i32, !dbg !16393
  %13 = add i32 %11, %12, !dbg !16393
  call void @llvm.dbg.value(metadata i32 %13, metadata !16368, metadata !DIExpression()), !dbg !16371
  br label %17, !dbg !16394

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16395
  %16 = sub i32 -2, %15, !dbg !16395
  call void @llvm.dbg.value(metadata i32 %16, metadata !16368, metadata !DIExpression()), !dbg !16371
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16397
  call void @llvm.dbg.value(metadata i32 %18, metadata !16368, metadata !DIExpression()), !dbg !16371
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !16398
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16400, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16402
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !16402
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !16398
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16403
  br i1 %20, label %22, label %21, !dbg !16404

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16405
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16405
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16405
  unreachable, !dbg !16405

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16402
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !16398
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16406
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()), !dbg !16371
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16407
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16408
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16409
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16410
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16411
  tail call fastcc void @z_add_thread_timeout.302(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16411
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16412
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16413
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #23, !dbg !16414
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15157, metadata !DIExpression()) #23, !dbg !16414
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15161, metadata !DIExpression()) #23, !dbg !16416
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16418
  br i1 %27, label %29, label %28, !dbg !16419

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16420
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16420
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16420
  unreachable, !dbg !16420

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16400
  call void @llvm.dbg.value(metadata i32 %30, metadata !14486, metadata !DIExpression()) #23, !dbg !16402
  call void @llvm.dbg.value(metadata i32 %30, metadata !14480, metadata !DIExpression()) #23, !dbg !16398
  call void @llvm.dbg.value(metadata i32 %30, metadata !16370, metadata !DIExpression()), !dbg !16371
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #23, !dbg !16414
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16421
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16422
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16422
  br i1 %33, label %34, label %35, !dbg !16425

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16426
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !16426
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16426
  unreachable, !dbg !16426

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16428
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16429
  %38 = zext i32 %37 to i64, !dbg !16429
  %39 = sub nsw i64 %36, %38, !dbg !16430
  call void @llvm.dbg.value(metadata i64 %39, metadata !16367, metadata !DIExpression()), !dbg !16371
  %40 = icmp sgt i64 %39, 0, !dbg !16431
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16431
  %42 = trunc i64 %41 to i32, !dbg !16431
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16371
  ret i32 %44, !dbg !16432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #2 !dbg !16433 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16435, metadata !DIExpression()), !dbg !16436
  call void @llvm.dbg.value(metadata i64 %0, metadata !14534, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata i32 10000, metadata !14537, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata i32 1000, metadata !14538, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata i8 1, metadata !14539, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata i1 false, metadata !14540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16437
  call void @llvm.dbg.value(metadata i1 false, metadata !14541, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16437
  call void @llvm.dbg.value(metadata i8 0, metadata !14542, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata i1 false, metadata !14543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16437
  call void @llvm.dbg.value(metadata i1 true, metadata !14544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16437
  call void @llvm.dbg.value(metadata i64 0, metadata !14545, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata i64 0, metadata !14545, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata i64 %0, metadata !14534, metadata !DIExpression()), !dbg !16437
  %2 = udiv i64 %0, 10, !dbg !16439
  ret i64 %2, !dbg !16443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16444 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16445, !srcloc !16447
  tail call void @z_impl_k_yield() #24, !dbg !16448
  ret void, !dbg !16449
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16454, metadata !DIExpression()), !dbg !16456
  %2 = sext i32 %0 to i64, !dbg !16457
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16458
  call void @llvm.dbg.value(metadata i64 %3, metadata !16455, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16456
  %4 = shl i64 %3, 32, !dbg !16459
  %5 = ashr exact i64 %4, 32, !dbg !16459
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16460
  call void @llvm.dbg.value(metadata i32 %6, metadata !16455, metadata !DIExpression()), !dbg !16456
  %7 = sext i32 %6 to i64, !dbg !16461
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16462
  %9 = trunc i64 %8 to i32, !dbg !16462
  ret i32 %9, !dbg !16463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !16464 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16466, metadata !DIExpression()), !dbg !16467
  call void @llvm.dbg.value(metadata i64 %0, metadata !14534, metadata !DIExpression()), !dbg !16468
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14537, metadata !DIExpression()), !dbg !16468
  call void @llvm.dbg.value(metadata i32 10000, metadata !14538, metadata !DIExpression()), !dbg !16468
  call void @llvm.dbg.value(metadata i8 1, metadata !14539, metadata !DIExpression()), !dbg !16468
  call void @llvm.dbg.value(metadata i1 false, metadata !14540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16468
  call void @llvm.dbg.value(metadata i1 true, metadata !14541, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16468
  call void @llvm.dbg.value(metadata i8 0, metadata !14542, metadata !DIExpression()), !dbg !16468
  call void @llvm.dbg.value(metadata i1 false, metadata !14543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16468
  call void @llvm.dbg.value(metadata i1 true, metadata !14544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16468
  call void @llvm.dbg.value(metadata i64 0, metadata !14545, metadata !DIExpression()), !dbg !16468
  call void @llvm.dbg.value(metadata i64 0, metadata !14545, metadata !DIExpression()), !dbg !16468
  %2 = add i64 %0, 99, !dbg !16470
  call void @llvm.dbg.value(metadata i64 %2, metadata !14534, metadata !DIExpression()), !dbg !16468
  %3 = udiv i64 %2, 100, !dbg !16471
  ret i64 %3, !dbg !16472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #2 !dbg !16473 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16475, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.value(metadata i64 %0, metadata !14534, metadata !DIExpression()), !dbg !16477
  call void @llvm.dbg.value(metadata i32 10000, metadata !14537, metadata !DIExpression()), !dbg !16477
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14538, metadata !DIExpression()), !dbg !16477
  call void @llvm.dbg.value(metadata i8 1, metadata !14539, metadata !DIExpression()), !dbg !16477
  call void @llvm.dbg.value(metadata i1 false, metadata !14540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16477
  call void @llvm.dbg.value(metadata i1 false, metadata !14541, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16477
  call void @llvm.dbg.value(metadata i8 0, metadata !14542, metadata !DIExpression()), !dbg !16477
  call void @llvm.dbg.value(metadata i1 true, metadata !14543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16477
  call void @llvm.dbg.value(metadata i1 false, metadata !14544, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16477
  call void @llvm.dbg.value(metadata i64 0, metadata !14545, metadata !DIExpression()), !dbg !16477
  call void @llvm.dbg.value(metadata i64 0, metadata !14545, metadata !DIExpression()), !dbg !16477
  %2 = mul i64 %0, 100, !dbg !16479
  ret i64 %2, !dbg !16481
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16484, metadata !DIExpression()), !dbg !16485
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16486
  br i1 %2, label %14, label %3, !dbg !16488

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16489
  %5 = icmp slt i32 %4, 0, !dbg !16491
  br i1 %5, label %6, label %10, !dbg !16492

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16493
  %8 = load i8, i8* %7, align 1, !dbg !16493
  %9 = icmp eq i8 %8, 16, !dbg !16496
  br i1 %9, label %10, label %14, !dbg !16497

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16498
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16499
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16500, !srcloc !15208
  call void @llvm.dbg.value(metadata i32 %11, metadata !15204, metadata !DIExpression()) #23, !dbg !16504
  %12 = icmp eq i32 %11, 0, !dbg !16505
  br i1 %12, label %13, label %14, !dbg !16506

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16507
  br label %14, !dbg !16509

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16511 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16513, metadata !DIExpression()), !dbg !16514
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16515
  %3 = load i8, i8* %2, align 1, !dbg !16515
  %4 = and i8 %3, 2, !dbg !16516
  %5 = icmp ne i8 %4, 0, !dbg !16517
  ret i1 %5, !dbg !16518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16519 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16524
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16523, metadata !DIExpression()), !dbg !16525
  ret %struct.k_thread* %1, !dbg !16526
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16527 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16528, !srcloc !15208
  call void @llvm.dbg.value(metadata i32 %1, metadata !15204, metadata !DIExpression()) #23, !dbg !16531
  %2 = icmp eq i32 %1, 0, !dbg !16532
  br i1 %2, label %3, label %8, !dbg !16533

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16534
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16535
  %6 = icmp ne i32 %5, 0, !dbg !16533
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16536
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16537 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16539, metadata !DIExpression()), !dbg !16541
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !16542
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16544, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16546
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !16546
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !16542
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16547
  br i1 %3, label %5, label %4, !dbg !16548

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16549
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16549
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16549
  unreachable, !dbg !16549

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16544
  call void @llvm.dbg.value(metadata i32 %6, metadata !14486, metadata !DIExpression()) #23, !dbg !16546
  call void @llvm.dbg.value(metadata i32 %6, metadata !14480, metadata !DIExpression()) #23, !dbg !16542
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16550
  call void @llvm.dbg.value(metadata i32 %6, metadata !16540, metadata !DIExpression()), !dbg !16541
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16551
  %8 = load i8, i8* %7, align 4, !dbg !16551
  %9 = and i8 %8, 1, !dbg !16553
  %10 = icmp eq i8 %9, 0, !dbg !16554
  br i1 %10, label %15, label %11, !dbg !16555

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !16556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !16556
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16559
  br i1 %12, label %14, label %13, !dbg !16560

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16561
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16561
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16561
  unreachable, !dbg !16561

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14508, metadata !DIExpression()) #23, !dbg !16556
  call void @llvm.dbg.value(metadata i32 %6, metadata !14522, metadata !DIExpression()) #23, !dbg !16562
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16564, !srcloc !14528
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16565
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.326, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16565
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16565
  unreachable, !dbg !16565

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16569
  %17 = load i8, i8* %16, align 1, !dbg !16569
  %18 = and i8 %17, 8, !dbg !16571
  %19 = icmp eq i8 %18, 0, !dbg !16572
  br i1 %19, label %24, label %20, !dbg !16573

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !16574
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !16574
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16577
  br i1 %21, label %23, label %22, !dbg !16578

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16579
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16579
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16579
  unreachable, !dbg !16579

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14508, metadata !DIExpression()) #23, !dbg !16574
  call void @llvm.dbg.value(metadata i32 %6, metadata !14522, metadata !DIExpression()) #23, !dbg !16580
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16582, !srcloc !14528
  br label %39, !dbg !16583

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16584
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16585
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16587
  br i1 %26, label %27, label %35, !dbg !16588

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16589, !srcloc !15208
  call void @llvm.dbg.value(metadata i32 %28, metadata !15204, metadata !DIExpression()) #23, !dbg !16592
  %29 = icmp eq i32 %28, 0, !dbg !16593
  br i1 %29, label %30, label %35, !dbg !16594

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #23, !dbg !16595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15157, metadata !DIExpression()) #23, !dbg !16595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15161, metadata !DIExpression()) #23, !dbg !16598
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16600
  br i1 %31, label %33, label %32, !dbg !16601

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16602
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16602
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16602
  unreachable, !dbg !16602

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15152, metadata !DIExpression()) #23, !dbg !16595
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16603
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16604
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.327, i32 0, i32 0)) #25, !dbg !16604
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16604
  unreachable, !dbg !16604

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !16608
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !16608
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16610
  br i1 %36, label %38, label %37, !dbg !16611

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16612
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16612
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16612
  unreachable, !dbg !16612

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14508, metadata !DIExpression()) #23, !dbg !16608
  call void @llvm.dbg.value(metadata i32 %6, metadata !14522, metadata !DIExpression()) #23, !dbg !16613
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16615, !srcloc !14528
  br label %39, !dbg !16616

39:                                               ; preds = %38, %23
  ret void, !dbg !16616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16617 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16619, metadata !DIExpression()), !dbg !16620
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16621
  %3 = load i8, i8* %2, align 1, !dbg !16621
  %4 = and i8 %3, 8, !dbg !16623
  %5 = icmp eq i8 %4, 0, !dbg !16624
  br i1 %5, label %6, label %20, !dbg !16625

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16626
  %8 = or i8 %7, 8, !dbg !16626
  store i8 %8, i8* %2, align 1, !dbg !16626
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16628
  br i1 %9, label %10, label %12, !dbg !16630

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14666, metadata !DIExpression()) #23, !dbg !16631
  %11 = and i8 %8, 95, !dbg !16634
  store i8 %11, i8* %2, align 1, !dbg !16634
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14674, metadata !DIExpression()) #23, !dbg !16635
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16637
  br label %12, !dbg !16638

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16639
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16639
  %15 = icmp eq %union.anon* %14, null, !dbg !16641
  br i1 %15, label %17, label %16, !dbg !16642

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16643
  br label %17, !dbg !16645

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16646
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16647
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !16648
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16649
  br label %20, !dbg !16650

20:                                               ; preds = %17, %1
  ret void, !dbg !16651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16652 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16656, metadata !DIExpression()), !dbg !16658
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16659
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16657, metadata !DIExpression()), !dbg !16658
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16660
  br i1 %3, label %10, label %4, !dbg !16661

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16662
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16664
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16665, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata i32 0, metadata !16670, metadata !DIExpression()), !dbg !16671
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16673
  store i32 0, i32* %7, align 4, !dbg !16674
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16675
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16659
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16657, metadata !DIExpression()), !dbg !16658
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16660
  br i1 %9, label %10, label %4, !dbg !16661, !llvm.loop !16676

10:                                               ; preds = %4, %1
  ret void, !dbg !16678
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16679 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16684, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16683, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !16688
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16690, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !16692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !16688
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16693
  br i1 %4, label %6, label %5, !dbg !16694

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16695
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16695
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16695
  unreachable, !dbg !16695

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16690
  call void @llvm.dbg.value(metadata i32 %7, metadata !14486, metadata !DIExpression()) #23, !dbg !16692
  call void @llvm.dbg.value(metadata i32 %7, metadata !14480, metadata !DIExpression()) #23, !dbg !16688
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16696
  call void @llvm.dbg.value(metadata i32 %7, metadata !16685, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata i32 0, metadata !16686, metadata !DIExpression()), !dbg !16687
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16697
  %9 = load i8, i8* %8, align 1, !dbg !16697
  %10 = and i8 %9, 8, !dbg !16699
  %11 = icmp eq i8 %10, 0, !dbg !16700
  br i1 %11, label %12, label %35, !dbg !16701

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16684, metadata !DIExpression()), !dbg !16687
  %14 = icmp eq i64 %13, 0, !dbg !16702
  br i1 %14, label %35, label %15, !dbg !16704

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16705
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16707
  br i1 %17, label %35, label %18, !dbg !16708

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16709
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16709
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16710
  %22 = icmp eq %union.anon* %20, %21, !dbg !16711
  br i1 %22, label %35, label %23, !dbg !16712

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16713, !srcloc !15208
  call void @llvm.dbg.value(metadata i32 %24, metadata !15204, metadata !DIExpression()) #23, !dbg !16719
  %25 = icmp eq i32 %24, 0, !dbg !16720
  br i1 %25, label %27, label %26, !dbg !16721

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16722
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.330, i32 0, i32 0)) #25, !dbg !16722
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16722
  unreachable, !dbg !16722

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16724
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16725
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #24, !dbg !16726
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16727
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16728
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #23, !dbg !16729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15157, metadata !DIExpression()) #23, !dbg !16729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15161, metadata !DIExpression()) #23, !dbg !16731
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16733
  br i1 %31, label %33, label %32, !dbg !16734

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16735
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16735
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 225) #25, !dbg !16735
  unreachable, !dbg !16735

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15152, metadata !DIExpression()) #23, !dbg !16729
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16736
  call void @llvm.dbg.value(metadata i32 %34, metadata !16686, metadata !DIExpression()), !dbg !16687
  br label %40, !dbg !16737

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16738
  call void @llvm.dbg.value(metadata i32 %36, metadata !16686, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !16739
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !16739
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16741
  br i1 %37, label %39, label %38, !dbg !16742

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16743
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16743
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16743
  unreachable, !dbg !16743

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14508, metadata !DIExpression()) #23, !dbg !16739
  call void @llvm.dbg.value(metadata i32 %7, metadata !14522, metadata !DIExpression()) #23, !dbg !16744
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16746, !srcloc !14528
  br label %40, !dbg !16747

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16687
  ret i32 %41, !dbg !16748
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16749 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16753, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata i32 %1, metadata !16754, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata i8* %2, metadata !16755, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata i8 0, metadata !16757, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata i32 0, metadata !16758, metadata !DIExpression()), !dbg !16762
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14474, metadata !DIExpression()) #23, !dbg !16763
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16765, !srcloc !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !16767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !16763
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16768
  br i1 %5, label %7, label %6, !dbg !16769

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16770
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.288, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16770
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 148) #25, !dbg !16770
  unreachable, !dbg !16770

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !16767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14480, metadata !DIExpression()) #23, !dbg !16763
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16771
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()), !dbg !16762
  call void @llvm.dbg.value(metadata i8 poison, metadata !16757, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata i32 undef, metadata !16758, metadata !DIExpression()), !dbg !16762
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16772
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16756, metadata !DIExpression()), !dbg !16761
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16775
  br i1 %10, label %15, label %11, !dbg !16777

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16778, metadata !DIExpression()), !dbg !16786
  call void @llvm.dbg.value(metadata i32 %1, metadata !16784, metadata !DIExpression()), !dbg !16786
  call void @llvm.dbg.value(metadata i8* %2, metadata !16785, metadata !DIExpression()), !dbg !16786
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16665, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.value(metadata i32 %1, metadata !16670, metadata !DIExpression()), !dbg !16789
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16791
  store i32 %1, i32* %12, align 4, !dbg !16792
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16793
  store i8* %2, i8** %13, align 4, !dbg !16794
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16795
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16796
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16797
  call void @llvm.dbg.value(metadata i8 1, metadata !16757, metadata !DIExpression()), !dbg !16761
  br label %15, !dbg !16798

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16757, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !16799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14513, metadata !DIExpression()) #23, !dbg !16799
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16801
  br i1 %16, label %18, label %17, !dbg !16802

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16803
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16803
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.287, i32 0, i32 0), i32 noundef 194) #25, !dbg !16803
  unreachable, !dbg !16803

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16761
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16765
  call void @llvm.dbg.value(metadata i32 %20, metadata !14486, metadata !DIExpression()) #23, !dbg !16767
  call void @llvm.dbg.value(metadata i32 %20, metadata !14480, metadata !DIExpression()) #23, !dbg !16763
  call void @llvm.dbg.value(metadata i32 %20, metadata !16760, metadata !DIExpression()), !dbg !16762
  call void @llvm.dbg.value(metadata i32 undef, metadata !14508, metadata !DIExpression()) #23, !dbg !16799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()) #23, !dbg !16804
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16806, !srcloc !14528
  call void @llvm.dbg.value(metadata i8 poison, metadata !16757, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata i32 undef, metadata !16758, metadata !DIExpression()), !dbg !16762
  ret i1 %19, !dbg !16807
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16808 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16814, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata i64 undef, metadata !16816, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16813, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16815, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata i8** %4, metadata !16817, metadata !DIExpression()), !dbg !16819
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !16820
  call void @llvm.dbg.value(metadata i32 %6, metadata !16818, metadata !DIExpression()), !dbg !16819
  %7 = icmp eq i8** %4, null, !dbg !16821
  br i1 %7, label %12, label %8, !dbg !16823

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16824
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16826
  %11 = load i8*, i8** %10, align 4, !dbg !16826
  store i8* %11, i8** %4, align 4, !dbg !16827
  br label %12, !dbg !16828

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16829
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16830 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16832
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16833
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #25, !dbg !16834
  ret void, !dbg !16835
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16836 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16846, metadata !DIExpression()), !dbg !16863
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16844, metadata !DIExpression()), !dbg !16863
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16845, metadata !DIExpression()), !dbg !16863
  %5 = icmp eq i64 %4, -1, !dbg !16864
  br i1 %5, label %63, label %6, !dbg !16866

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16867
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.335(%struct._dnode* noundef %7) #24, !dbg !16867
  br i1 %8, label %9, label %10, !dbg !16870

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 99) #25, !dbg !16871
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.339, i32 0, i32 0)) #25, !dbg !16871
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 99) #25, !dbg !16871
  unreachable, !dbg !16871

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16873
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16874
  call void @llvm.dbg.value(metadata i32 0, metadata !16847, metadata !DIExpression()), !dbg !16875
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16876, metadata !DIExpression()) #23, !dbg !16883
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16885, !srcloc !16891
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !16892
  call void @llvm.dbg.value(metadata i32 undef, metadata !16889, metadata !DIExpression()) #23, !dbg !16892
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !16883
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16893
  br i1 %13, label %15, label %14, !dbg !16896

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !16897
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16897
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !16897
  unreachable, !dbg !16897

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16885
  call void @llvm.dbg.value(metadata i32 %16, metadata !16888, metadata !DIExpression()) #23, !dbg !16892
  call void @llvm.dbg.value(metadata i32 %16, metadata !16882, metadata !DIExpression()) #23, !dbg !16883
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16899
  call void @llvm.dbg.value(metadata i32 %16, metadata !16853, metadata !DIExpression()), !dbg !16875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16847, metadata !DIExpression()), !dbg !16875
  %17 = icmp slt i64 %4, -1, !dbg !16900
  br i1 %17, label %18, label %24, !dbg !16901

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16902
  %20 = add i64 %4, %19, !dbg !16903
  %21 = sub i64 -2, %20, !dbg !16903
  call void @llvm.dbg.value(metadata i64 %21, metadata !16857, metadata !DIExpression()), !dbg !16904
  %22 = icmp sgt i64 %21, 1, !dbg !16905
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16905
  br label %29, !dbg !16906

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16907
  %26 = tail call fastcc i32 @elapsed.343() #24, !dbg !16909
  %27 = sext i32 %26 to i64, !dbg !16909
  %28 = add nsw i64 %25, %27, !dbg !16910
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16911
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16912
  store i64 %30, i64* %31, align 8, !dbg !16913
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16914
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16854, metadata !DIExpression()), !dbg !16916
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16917
  br i1 %33, label %48, label %34, !dbg !16917

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16918
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16854, metadata !DIExpression()), !dbg !16916
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16922
  %38 = load i64, i64* %37, align 8, !dbg !16922
  %39 = icmp slt i64 %35, %38, !dbg !16923
  br i1 %39, label %40, label %44, !dbg !16924

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16922
  %42 = sub nsw i64 %38, %35, !dbg !16925
  store i64 %42, i64* %41, align 8, !dbg !16925
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16927
  tail call fastcc void @sys_dlist_insert.344(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16928
  br label %49, !dbg !16929

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16930
  store i64 %45, i64* %31, align 8, !dbg !16930
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16931
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16854, metadata !DIExpression()), !dbg !16916
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16917
  br i1 %47, label %48, label %34, !dbg !16917, !llvm.loop !16932

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.345(%struct._dnode* noundef nonnull %7) #24, !dbg !16934
  br label %49, !dbg !16937

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16938
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16939
  br i1 %51, label %52, label %59, !dbg !16940

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16941
  call void @llvm.dbg.value(metadata i32 %53, metadata !16860, metadata !DIExpression()), !dbg !16942
  %54 = icmp ne i32 %53, 0, !dbg !16943
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16945
  br i1 %57, label %59, label %58, !dbg !16945

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16946
  br label %59, !dbg !16948

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !16955
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16954, metadata !DIExpression()) #23, !dbg !16955
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16957
  br i1 %60, label %62, label %61, !dbg !16960

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !16961
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16961
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !16961
  unreachable, !dbg !16961

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16949, metadata !DIExpression()) #23, !dbg !16955
  call void @llvm.dbg.value(metadata i32 %16, metadata !16963, metadata !DIExpression()) #23, !dbg !16966
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16968, !srcloc !16969
  call void @llvm.dbg.value(metadata i32 undef, metadata !16847, metadata !DIExpression()), !dbg !16875
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.335(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16971 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16977, metadata !DIExpression()), !dbg !16978
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16979
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16979
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16980
  ret i1 %4, !dbg !16981
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.343() unnamed_addr #1 !dbg !16982 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16985
  %2 = icmp eq i32 %1, 0, !dbg !16986
  br i1 %2, label %3, label %5, !dbg !16985

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16987
  br label %5, !dbg !16985

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16985
  ret i32 %6, !dbg !16988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16989 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.350() #24, !dbg !16995
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16993, metadata !DIExpression()), !dbg !16996
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16997
  ret %struct._timeout* %2, !dbg !16998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.344(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16999 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17003, metadata !DIExpression()), !dbg !17007
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17004, metadata !DIExpression()), !dbg !17007
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17008
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17008
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17005, metadata !DIExpression()), !dbg !17007
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17009
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17010
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17011
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17012
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17013
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17014
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17015
  ret void, !dbg !17016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !17017 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17021, metadata !DIExpression()), !dbg !17023
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17024
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.348(%struct._dnode* noundef %2) #24, !dbg !17025
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17022, metadata !DIExpression()), !dbg !17023
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17026
  ret %struct._timeout* %4, !dbg !17027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.345(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17028 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17033, metadata !DIExpression()), !dbg !17036
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17034, metadata !DIExpression()), !dbg !17036
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17037
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17035, metadata !DIExpression()), !dbg !17036
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17038
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17039
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17040
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17041
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17042
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17043
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17044
  ret void, !dbg !17045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17046 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17051
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17048, metadata !DIExpression()), !dbg !17052
  %2 = tail call fastcc i32 @elapsed.343() #24, !dbg !17053
  call void @llvm.dbg.value(metadata i32 %2, metadata !17049, metadata !DIExpression()), !dbg !17052
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17054
  br i1 %3, label %14, label %4, !dbg !17056

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17057
  %6 = load i64, i64* %5, align 8, !dbg !17057
  %7 = sext i32 %2 to i64, !dbg !17058
  %8 = sub nsw i64 %6, %7, !dbg !17059
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17060
  br i1 %9, label %14, label %10, !dbg !17061

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17062
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17062
  %13 = trunc i64 %12 to i32, !dbg !17062
  call void @llvm.dbg.value(metadata i32 %13, metadata !17050, metadata !DIExpression()), !dbg !17052
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17064
  call void @llvm.dbg.value(metadata i32 %15, metadata !17050, metadata !DIExpression()), !dbg !17052
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17065
  %17 = icmp ne i32 %16, 0, !dbg !17067
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17068
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17068
  call void @llvm.dbg.value(metadata i32 %20, metadata !17050, metadata !DIExpression()), !dbg !17052
  ret i32 %20, !dbg !17069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.348(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17070 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17074, metadata !DIExpression()), !dbg !17076
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17075, metadata !DIExpression()), !dbg !17076
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17077
  br i1 %2, label %5, label %3, !dbg !17078

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.349(%struct._dnode* noundef nonnull %0) #24, !dbg !17079
  br label %5, !dbg !17078

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17078
  ret %struct._dnode* %6, !dbg !17080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.349(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17081 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17083, metadata !DIExpression()), !dbg !17085
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17084, metadata !DIExpression()), !dbg !17085
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17086
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17087
  br i1 %3, label %7, label %4, !dbg !17088

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17089
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17089
  br label %7, !dbg !17088

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17088
  ret %struct._dnode* %8, !dbg !17090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.350() unnamed_addr #8 !dbg !17091 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17095, metadata !DIExpression()), !dbg !17096
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.351() #24, !dbg !17097
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17097
  ret %struct._dnode* %3, !dbg !17098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.351() unnamed_addr #8 !dbg !17099 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17103, metadata !DIExpression()), !dbg !17104
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17105
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17106
  ret i1 %2, !dbg !17107
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17108 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17112, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i32 -22, metadata !17113, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i32 0, metadata !17114, metadata !DIExpression()), !dbg !17118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16876, metadata !DIExpression()) #23, !dbg !17119
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17121, !srcloc !16891
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17123
  call void @llvm.dbg.value(metadata i32 undef, metadata !16889, metadata !DIExpression()) #23, !dbg !17123
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17119
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17124
  br i1 %3, label %5, label %4, !dbg !17125

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17126
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17126
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17126
  unreachable, !dbg !17126

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17123
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17119
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17127
  call void @llvm.dbg.value(metadata i32 undef, metadata !17116, metadata !DIExpression()), !dbg !17118
  call void @llvm.dbg.value(metadata i32 -22, metadata !17113, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i32 undef, metadata !17114, metadata !DIExpression()), !dbg !17118
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17113, metadata !DIExpression()), !dbg !17117
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.335(%struct._dnode* noundef %6) #24, !dbg !17128
  br i1 %7, label %8, label %9, !dbg !17132

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17133
  call void @llvm.dbg.value(metadata i32 0, metadata !17113, metadata !DIExpression()), !dbg !17117
  br label %9, !dbg !17135

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17117
  call void @llvm.dbg.value(metadata i32 %10, metadata !17113, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17136
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16954, metadata !DIExpression()) #23, !dbg !17136
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17138
  br i1 %11, label %13, label %12, !dbg !17139

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17140
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17140
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17140
  unreachable, !dbg !17140

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17121
  call void @llvm.dbg.value(metadata i32 %14, metadata !16888, metadata !DIExpression()) #23, !dbg !17123
  call void @llvm.dbg.value(metadata i32 %14, metadata !16882, metadata !DIExpression()) #23, !dbg !17119
  call void @llvm.dbg.value(metadata i32 %14, metadata !17116, metadata !DIExpression()), !dbg !17118
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17136
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()) #23, !dbg !17141
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17143, !srcloc !16969
  call void @llvm.dbg.value(metadata i32 %10, metadata !17113, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i32 undef, metadata !17114, metadata !DIExpression()), !dbg !17118
  ret i32 %10, !dbg !17144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17145 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17147, metadata !DIExpression()), !dbg !17148
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17149
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17151
  br i1 %3, label %10, label %4, !dbg !17152

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17153
  %6 = load i64, i64* %5, align 8, !dbg !17153
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17155
  %8 = load i64, i64* %7, align 8, !dbg !17156
  %9 = add nsw i64 %8, %6, !dbg !17156
  store i64 %9, i64* %7, align 8, !dbg !17156
  br label %10, !dbg !17157

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17158
  tail call fastcc void @sys_dlist_remove.354(%struct._dnode* noundef %11) #24, !dbg !17159
  ret void, !dbg !17160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.354(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17161 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17165, metadata !DIExpression()), !dbg !17168
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17169
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17169
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17166, metadata !DIExpression()), !dbg !17168
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17170
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17170
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17167, metadata !DIExpression()), !dbg !17168
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17171
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17172
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17173
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17174
  tail call fastcc void @sys_dnode_init.355(%struct._dnode* noundef %0) #24, !dbg !17175
  ret void, !dbg !17176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.355(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17177 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17179, metadata !DIExpression()), !dbg !17180
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17181
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17182
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17183
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17184
  ret void, !dbg !17185
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17186 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17192, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.value(metadata i64 0, metadata !17193, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.value(metadata i32 0, metadata !17194, metadata !DIExpression()), !dbg !17198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16876, metadata !DIExpression()) #23, !dbg !17199
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17201, !srcloc !16891
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17203
  call void @llvm.dbg.value(metadata i32 undef, metadata !16889, metadata !DIExpression()) #23, !dbg !17203
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17199
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17204
  br i1 %3, label %5, label %4, !dbg !17205

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17206
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17206
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17206
  unreachable, !dbg !17206

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17203
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17199
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17207
  call void @llvm.dbg.value(metadata i32 undef, metadata !17196, metadata !DIExpression()), !dbg !17198
  call void @llvm.dbg.value(metadata i64 0, metadata !17193, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.value(metadata i32 undef, metadata !17194, metadata !DIExpression()), !dbg !17198
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17208
  call void @llvm.dbg.value(metadata i64 %6, metadata !17193, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16954, metadata !DIExpression()) #23, !dbg !17211
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17213
  br i1 %7, label %9, label %8, !dbg !17214

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17215
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17215
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17215
  unreachable, !dbg !17215

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17201
  call void @llvm.dbg.value(metadata i32 %10, metadata !16888, metadata !DIExpression()) #23, !dbg !17203
  call void @llvm.dbg.value(metadata i32 %10, metadata !16882, metadata !DIExpression()) #23, !dbg !17199
  call void @llvm.dbg.value(metadata i32 %10, metadata !17196, metadata !DIExpression()), !dbg !17198
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17211
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()) #23, !dbg !17216
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17218, !srcloc !16969
  call void @llvm.dbg.value(metadata i64 %6, metadata !17193, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.value(metadata i32 undef, metadata !17194, metadata !DIExpression()), !dbg !17198
  ret i64 %6, !dbg !17219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17220 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17222, metadata !DIExpression()), !dbg !17226
  call void @llvm.dbg.value(metadata i64 0, metadata !17223, metadata !DIExpression()), !dbg !17226
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.356(%struct._timeout* noundef %0) #24, !dbg !17227
  br i1 %2, label %21, label %3, !dbg !17229

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17230
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17224, metadata !DIExpression()), !dbg !17231
  call void @llvm.dbg.value(metadata i64 0, metadata !17223, metadata !DIExpression()), !dbg !17226
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17232
  br i1 %5, label %16, label %6, !dbg !17234

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17224, metadata !DIExpression()), !dbg !17231
  call void @llvm.dbg.value(metadata i64 %8, metadata !17223, metadata !DIExpression()), !dbg !17226
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17235
  %10 = load i64, i64* %9, align 8, !dbg !17235
  %11 = add nsw i64 %10, %8, !dbg !17237
  call void @llvm.dbg.value(metadata i64 %11, metadata !17223, metadata !DIExpression()), !dbg !17226
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17238
  br i1 %12, label %16, label %13, !dbg !17240

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17241
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17224, metadata !DIExpression()), !dbg !17231
  call void @llvm.dbg.value(metadata i64 %11, metadata !17223, metadata !DIExpression()), !dbg !17226
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17232
  br i1 %15, label %16, label %6, !dbg !17234, !llvm.loop !17242

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17226
  call void @llvm.dbg.value(metadata i64 %17, metadata !17223, metadata !DIExpression()), !dbg !17226
  %18 = tail call fastcc i32 @elapsed.343() #24, !dbg !17244
  %19 = sext i32 %18 to i64, !dbg !17244
  %20 = sub nsw i64 %17, %19, !dbg !17245
  br label %21, !dbg !17246

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17226
  ret i64 %22, !dbg !17247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.356(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17248 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17252, metadata !DIExpression()), !dbg !17253
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17254
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.335(%struct._dnode* noundef %2) #24, !dbg !17255
  %4 = xor i1 %3, true, !dbg !17256
  ret i1 %4, !dbg !17257
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17258 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17260, metadata !DIExpression()), !dbg !17265
  call void @llvm.dbg.value(metadata i64 0, metadata !17261, metadata !DIExpression()), !dbg !17265
  call void @llvm.dbg.value(metadata i32 0, metadata !17262, metadata !DIExpression()), !dbg !17266
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16876, metadata !DIExpression()) #23, !dbg !17267
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17269, !srcloc !16891
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17271
  call void @llvm.dbg.value(metadata i32 undef, metadata !16889, metadata !DIExpression()) #23, !dbg !17271
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17267
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17272
  br i1 %3, label %5, label %4, !dbg !17273

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17274
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17274
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17274
  unreachable, !dbg !17274

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17271
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17267
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17275
  call void @llvm.dbg.value(metadata i32 undef, metadata !17264, metadata !DIExpression()), !dbg !17266
  call void @llvm.dbg.value(metadata i64 0, metadata !17261, metadata !DIExpression()), !dbg !17265
  call void @llvm.dbg.value(metadata i32 undef, metadata !17262, metadata !DIExpression()), !dbg !17266
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17276
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17279
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17261, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17265
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16954, metadata !DIExpression()) #23, !dbg !17280
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17282
  br i1 %8, label %10, label %9, !dbg !17283

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17284
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17284
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17284
  unreachable, !dbg !17284

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17269
  call void @llvm.dbg.value(metadata i32 %11, metadata !16888, metadata !DIExpression()) #23, !dbg !17271
  call void @llvm.dbg.value(metadata i32 %11, metadata !16882, metadata !DIExpression()) #23, !dbg !17267
  call void @llvm.dbg.value(metadata i32 %11, metadata !17264, metadata !DIExpression()), !dbg !17266
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17261, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17265
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17280
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()) #23, !dbg !17285
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17287, !srcloc !16969
  call void @llvm.dbg.value(metadata i32 undef, metadata !17262, metadata !DIExpression()), !dbg !17266
  %12 = add i64 %7, %6, !dbg !17288
  ret i64 %12, !dbg !17289
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17290 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17292, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata i32 0, metadata !17293, metadata !DIExpression()), !dbg !17297
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16876, metadata !DIExpression()) #23, !dbg !17298
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17300, !srcloc !16891
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17302
  call void @llvm.dbg.value(metadata i32 undef, metadata !16889, metadata !DIExpression()) #23, !dbg !17302
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17298
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17303
  br i1 %2, label %4, label %3, !dbg !17304

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17305
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17305
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17305
  unreachable, !dbg !17305

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17302
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17298
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17306
  call void @llvm.dbg.value(metadata i32 undef, metadata !17295, metadata !DIExpression()), !dbg !17297
  call void @llvm.dbg.value(metadata i32 -1, metadata !17292, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !17293, metadata !DIExpression()), !dbg !17297
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17307
  call void @llvm.dbg.value(metadata i32 %5, metadata !17292, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17310
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16954, metadata !DIExpression()) #23, !dbg !17310
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17312
  br i1 %6, label %8, label %7, !dbg !17313

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17314
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17314
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17314
  unreachable, !dbg !17314

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17300
  call void @llvm.dbg.value(metadata i32 %9, metadata !16888, metadata !DIExpression()) #23, !dbg !17302
  call void @llvm.dbg.value(metadata i32 %9, metadata !16882, metadata !DIExpression()) #23, !dbg !17298
  call void @llvm.dbg.value(metadata i32 %9, metadata !17295, metadata !DIExpression()), !dbg !17297
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17310
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()) #23, !dbg !17315
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17317, !srcloc !16969
  call void @llvm.dbg.value(metadata i32 %5, metadata !17292, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !17293, metadata !DIExpression()), !dbg !17297
  ret i32 %5, !dbg !17318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17321, metadata !DIExpression()), !dbg !17331
  call void @llvm.dbg.value(metadata i1 %1, metadata !17322, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17331
  call void @llvm.dbg.value(metadata i32 0, metadata !17323, metadata !DIExpression()), !dbg !17332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16876, metadata !DIExpression()) #23, !dbg !17333
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17335, !srcloc !16891
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17337
  call void @llvm.dbg.value(metadata i32 undef, metadata !16889, metadata !DIExpression()) #23, !dbg !17337
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17333
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17338
  br i1 %4, label %6, label %5, !dbg !17339

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17340
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17340
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17340
  unreachable, !dbg !17340

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17337
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17333
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17341
  call void @llvm.dbg.value(metadata i32 undef, metadata !17325, metadata !DIExpression()), !dbg !17332
  call void @llvm.dbg.value(metadata i32 undef, metadata !17323, metadata !DIExpression()), !dbg !17332
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17342
  call void @llvm.dbg.value(metadata i32 %7, metadata !17326, metadata !DIExpression()), !dbg !17343
  call void @llvm.dbg.value(metadata i1 undef, metadata !17329, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17343
  %8 = icmp slt i32 %7, 2, !dbg !17344
  call void @llvm.dbg.value(metadata i1 %8, metadata !17330, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17343
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17345
  call void @llvm.dbg.value(metadata i1 %9, metadata !17329, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17343
  br i1 %10, label %14, label %11, !dbg !17345

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17347
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17347
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17349
  br label %14, !dbg !17350

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16954, metadata !DIExpression()) #23, !dbg !17351
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17353
  br i1 %15, label %17, label %16, !dbg !17354

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17355
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17355
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17355
  unreachable, !dbg !17355

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17335
  call void @llvm.dbg.value(metadata i32 %18, metadata !16888, metadata !DIExpression()) #23, !dbg !17337
  call void @llvm.dbg.value(metadata i32 %18, metadata !16882, metadata !DIExpression()) #23, !dbg !17333
  call void @llvm.dbg.value(metadata i32 %18, metadata !17325, metadata !DIExpression()), !dbg !17332
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17351
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()) #23, !dbg !17356
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17358, !srcloc !16969
  call void @llvm.dbg.value(metadata i32 1, metadata !17323, metadata !DIExpression()), !dbg !17332
  call void @llvm.dbg.value(metadata i32 undef, metadata !17323, metadata !DIExpression()), !dbg !17332
  ret void, !dbg !17359
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17364, metadata !DIExpression()), !dbg !17369
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17370
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16876, metadata !DIExpression()) #23, !dbg !17371
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17373, !srcloc !16891
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17375
  call void @llvm.dbg.value(metadata i32 undef, metadata !16889, metadata !DIExpression()) #23, !dbg !17375
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17371
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17376
  br i1 %3, label %5, label %4, !dbg !17377

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17378
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17378
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17378
  unreachable, !dbg !17378

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17375
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17371
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17379
  call void @llvm.dbg.value(metadata i32 undef, metadata !17365, metadata !DIExpression()), !dbg !17369
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17369
  call void @llvm.dbg.value(metadata i32 undef, metadata !17365, metadata !DIExpression()), !dbg !17369
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17380
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17381
  br i1 %7, label %37, label %8, !dbg !17382

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17369
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17383
  %14 = load i64, i64* %13, align 8, !dbg !17383
  %15 = sext i32 %11 to i64, !dbg !17384
  %16 = icmp sgt i64 %14, %15, !dbg !17385
  br i1 %16, label %35, label %17, !dbg !17386

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17366, metadata !DIExpression()), !dbg !17387
  %18 = trunc i64 %14 to i32, !dbg !17388
  call void @llvm.dbg.value(metadata i32 %18, metadata !17368, metadata !DIExpression()), !dbg !17387
  %19 = sext i32 %18 to i64, !dbg !17389
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17390
  %21 = add i64 %20, %19, !dbg !17390
  store i64 %21, i64* @curr_tick, align 8, !dbg !17390
  store i64 0, i64* %13, align 8, !dbg !17391
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17392
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17393
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16954, metadata !DIExpression()) #23, !dbg !17393
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17395
  br i1 %22, label %24, label %23, !dbg !17396

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17397
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17397
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17397
  unreachable, !dbg !17397

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16949, metadata !DIExpression()) #23, !dbg !17393
  call void @llvm.dbg.value(metadata i32 %12, metadata !16963, metadata !DIExpression()) #23, !dbg !17398
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17400, !srcloc !16969
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17401
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17401
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17402
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16876, metadata !DIExpression()) #23, !dbg !17403
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17405, !srcloc !16891
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17407
  call void @llvm.dbg.value(metadata i32 undef, metadata !16889, metadata !DIExpression()) #23, !dbg !17407
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17403
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17408
  br i1 %28, label %30, label %29, !dbg !17409

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17410
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17410
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17410
  unreachable, !dbg !17410

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17407
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17403
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17411
  call void @llvm.dbg.value(metadata i32 undef, metadata !17365, metadata !DIExpression()), !dbg !17369
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17412
  %32 = sub nsw i32 %31, %18, !dbg !17412
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17369
  call void @llvm.dbg.value(metadata i32 undef, metadata !17365, metadata !DIExpression()), !dbg !17369
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17380
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17381
  br i1 %34, label %37, label %8, !dbg !17382, !llvm.loop !17413

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17415
  store i64 %36, i64* %13, align 8, !dbg !17415
  br label %41, !dbg !17418

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17369
  %40 = sext i32 %39 to i64, !dbg !17419
  br label %41, !dbg !17419

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17419
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17420
  %45 = add i64 %44, %42, !dbg !17420
  store i64 %45, i64* @curr_tick, align 8, !dbg !17420
  store i32 0, i32* @announce_remaining, align 4, !dbg !17421
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17422
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17423
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17424
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16954, metadata !DIExpression()) #23, !dbg !17424
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17426
  br i1 %47, label %49, label %48, !dbg !17427

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17428
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17428
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17428
  unreachable, !dbg !17428

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17369
  call void @llvm.dbg.value(metadata i32 %50, metadata !16949, metadata !DIExpression()) #23, !dbg !17424
  call void @llvm.dbg.value(metadata i32 %50, metadata !16963, metadata !DIExpression()) #23, !dbg !17429
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17431, !srcloc !16969
  ret void, !dbg !17432
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17433 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17437, metadata !DIExpression()), !dbg !17441
  call void @llvm.dbg.value(metadata i32 0, metadata !17438, metadata !DIExpression()), !dbg !17442
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16876, metadata !DIExpression()) #23, !dbg !17443
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17445, !srcloc !16891
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17447
  call void @llvm.dbg.value(metadata i32 undef, metadata !16889, metadata !DIExpression()) #23, !dbg !17447
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17443
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17448
  br i1 %2, label %4, label %3, !dbg !17449

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17450
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17450
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 148) #25, !dbg !17450
  unreachable, !dbg !17450

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16888, metadata !DIExpression()) #23, !dbg !17447
  call void @llvm.dbg.value(metadata i32 undef, metadata !16882, metadata !DIExpression()) #23, !dbg !17443
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17451
  call void @llvm.dbg.value(metadata i32 undef, metadata !17440, metadata !DIExpression()), !dbg !17442
  call void @llvm.dbg.value(metadata i64 0, metadata !17437, metadata !DIExpression()), !dbg !17441
  call void @llvm.dbg.value(metadata i32 undef, metadata !17438, metadata !DIExpression()), !dbg !17442
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17452
  %6 = tail call fastcc i32 @elapsed.343() #24, !dbg !17455
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17437, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17441
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16954, metadata !DIExpression()) #23, !dbg !17456
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17458
  br i1 %7, label %9, label %8, !dbg !17459

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17460
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17460
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.341, i32 0, i32 0), i32 noundef 194) #25, !dbg !17460
  unreachable, !dbg !17460

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17445
  call void @llvm.dbg.value(metadata i32 %10, metadata !16888, metadata !DIExpression()) #23, !dbg !17447
  call void @llvm.dbg.value(metadata i32 %10, metadata !16882, metadata !DIExpression()) #23, !dbg !17443
  call void @llvm.dbg.value(metadata i32 %10, metadata !17440, metadata !DIExpression()), !dbg !17442
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17437, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17441
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17437, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17441
  call void @llvm.dbg.value(metadata i32 undef, metadata !16949, metadata !DIExpression()) #23, !dbg !17456
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()) #23, !dbg !17461
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17463, !srcloc !16969
  call void @llvm.dbg.value(metadata i32 undef, metadata !17438, metadata !DIExpression()), !dbg !17442
  %11 = sext i32 %6 to i64, !dbg !17455
  %12 = add i64 %5, %11, !dbg !17464
  ret i64 %12, !dbg !17465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17466 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17467
  %2 = trunc i64 %1 to i32, !dbg !17468
  ret i32 %2, !dbg !17469
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17470 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17471
  ret i64 %1, !dbg !17472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17475, metadata !DIExpression()), !dbg !17482
  %2 = icmp eq i32 %0, 0, !dbg !17483
  br i1 %2, label %10, label %3, !dbg !17485

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.363() #24, !dbg !17486
  call void @llvm.dbg.value(metadata i32 %4, metadata !17476, metadata !DIExpression()), !dbg !17482
  %5 = mul i32 %0, 168, !dbg !17487
  call void @llvm.dbg.value(metadata i32 %5, metadata !17477, metadata !DIExpression()), !dbg !17482
  br label %6, !dbg !17488

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.363() #24, !dbg !17489
  call void @llvm.dbg.value(metadata i32 %7, metadata !17478, metadata !DIExpression()), !dbg !17490
  %8 = sub i32 %7, %4, !dbg !17491
  %9 = icmp ult i32 %8, %5, !dbg !17493
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17494
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.363() unnamed_addr #1 !dbg !17495 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.364() #24, !dbg !17496
  ret i32 %1, !dbg !17497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.364() unnamed_addr #1 !dbg !17498 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17499
  ret i32 %1, !dbg !17500
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17501 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17505, metadata !DIExpression()), !dbg !17507
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17508

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17509
  br label %14, !dbg !17513

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17506, metadata !DIExpression()), !dbg !17507
  %6 = icmp slt i64 %2, -1, !dbg !17514
  br i1 %6, label %7, label %9, !dbg !17517

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17518
  br label %14, !dbg !17519

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17521
  %11 = icmp ugt i64 %2, 1, !dbg !17522
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17522
  %13 = add nsw i64 %10, %12, !dbg !17523
  br label %14, !dbg !17524

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17525
  ret i64 %15, !dbg !17526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17527 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.367, i32 0, i32 0)) #25, !dbg !17529
  ret void, !dbg !17530
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!925, !2, !2510, !27, !177, !209, !2512, !2514, !2548, !2550, !218, !268, !2552, !2555, !2566, !2612, !2614, !2642, !2670, !2713, !2785, !2830, !297, !458, !2858, !494, !504, !529, !696, !731, !959, !2863, !1094, !1160, !1475, !1699, !2900, !1814, !1904, !2902, !2986, !3049, !1954, !3052, !1961, !2333, !3070, !2353, !3072, !2471, !3075}
!llvm.ident = !{!3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077}
!llvm.module.flags = !{!3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_framework_tests", scope: !27, file: !111, line: 10, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_framework_tests", scope: !27, file: !111, line: 10, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__framework_tests__test_assert", scope: !27, file: !111, line: 18, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_framework_tests_test_assert", scope: !27, file: !111, line: 18, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !218, file: !235, line: 56, type: !236, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !220, globals: !234, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 369, baseType: !224)
!223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 360, size: 224, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !233}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !224, file: !223, line: 362, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !224, file: !223, line: 363, baseType: !227, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !224, file: !223, line: 364, baseType: !227, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !224, file: !223, line: 365, baseType: !227, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !224, file: !223, line: 366, baseType: !227, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !224, file: !223, line: 367, baseType: !227, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !224, file: !223, line: 368, baseType: !227, size: 32, offset: 192)
!234 = !{!216}
!235 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !239)
!238 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!239 = !{!240, !265}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !237, file: !238, line: 60, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{!107, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = !{!249, !250, !251, !252, !258, !259}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !246, file: !247, line: 380, baseType: !118, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !246, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !246, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !246, file: !247, line: 386, baseType: !253, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !254, file: !247, line: 359, baseType: !195, size: 8)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !254, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !246, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !246, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !247, line: 43, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !264)
!264 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !237, file: !238, line: 65, baseType: !244, size: 32, offset: 32)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !268, file: !271, line: 71, type: !272, isLocal: true, isDefinition: true, align: 32)
!268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !269, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !270, splitDebugInlining: false, nameTableKind: None)
!269 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!270 = !{!266}
!271 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !274)
!274 = !{!275, !294}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !273, file: !238, line: 60, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{!107, !279}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !282)
!282 = !{!283, !284, !285, !286, !292, !293}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !281, file: !247, line: 380, baseType: !118, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !281, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !281, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !281, file: !247, line: 386, baseType: !287, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !289)
!289 = !{!290, !291}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !288, file: !247, line: 359, baseType: !195, size: 8)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !288, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !281, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !281, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !238, line: 65, baseType: !279, size: 32, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !297, file: !304, line: 17, type: !451, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!299 = !{!185, !107, !152, !106}
!300 = !{!295, !301, !447}
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !303, file: !304, line: 198, type: !433, isLocal: true, isDefinition: true)
!303 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !304, file: !304, line: 175, type: !305, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !428)
!304 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !DISubroutineType(types: !306)
!306 = !{null, !307}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !{!311, !377, !390, !391, !392, !396, !397, !403, !423}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !308, file: !309, line: 247, baseType: !312, size: 384)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !313)
!313 = !{!314, !342, !350, !351, !352, !363, !364, !365}
!314 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 60, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 60, size: 64, elements: !316)
!316 = !{!317, !333}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !315, file: !309, line: 61, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !321)
!321 = !{!322, !328}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 38, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 38, size: 32, elements: !324)
!324 = !{!325, !327}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !323, file: !319, line: 39, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !323, file: !319, line: 40, baseType: !326, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 42, baseType: !329, size: 32, offset: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 42, size: 32, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !329, file: !319, line: 43, baseType: !326, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !329, file: !319, line: 44, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !315, file: !309, line: 62, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !336)
!335 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !334, file: !335, line: 50, baseType: !338, size: 64)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 64, elements: !340)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!340 = !{!341}
!341 = !DISubrange(count: 2)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !312, file: !309, line: 68, baseType: !343, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !347)
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !346, file: !345, line: 232, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !320)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !312, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !312, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!352 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 90, baseType: !353, size: 16, offset: 112)
!353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 90, size: 16, elements: !354)
!354 = !{!355, !362}
!355 = !DIDerivedType(tag: DW_TAG_member, scope: !353, file: !309, line: 91, baseType: !356, size: 16)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !353, file: !309, line: 91, size: 16, elements: !357)
!357 = !{!358, !361}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !356, file: !309, line: 96, baseType: !359, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !360)
!360 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !356, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !353, file: !309, line: 100, baseType: !197, size: 16)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !312, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !312, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !312, file: !309, line: 131, baseType: !366, size: 192, offset: 192)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !367)
!367 = !{!368, !369, !375}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !366, file: !345, line: 245, baseType: !318, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !366, file: !345, line: 246, baseType: !370, size: 32, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !374}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !366, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !308, file: !309, line: 250, baseType: !378, size: 288, offset: 384)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !378, file: !379, line: 26, baseType: !152, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !378, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !378, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !378, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !378, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !378, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !378, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !378, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !378, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !308, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !308, file: !309, line: 256, baseType: !344, size: 64, offset: 704)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !308, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !394)
!394 = !{!395}
!395 = !DISubrange(count: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !308, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !308, file: !309, line: 300, baseType: !398, size: 96, offset: 1056)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !399)
!399 = !{!400, !401, !402}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !398, file: !309, line: 153, baseType: !22, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !398, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !398, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !308, file: !309, line: 325, baseType: !404, size: 32, offset: 1152)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 32)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !417, !418}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !405, file: !406, line: 5074, baseType: !409, size: 96)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !411)
!410 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!411 = !{!412, !415, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !409, file: !410, line: 57, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !410, line: 57, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !409, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !409, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !405, file: !406, line: 5075, baseType: !344, size: 64, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !405, file: !406, line: 5076, baseType: !419, size: 32, offset: 160)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !419, file: !420, line: 52, baseType: !22, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !308, file: !309, line: 343, baseType: !424, size: 64, offset: 1184)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !425)
!425 = !{!426, !427}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !424, file: !379, line: 63, baseType: !152, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !424, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!428 = !{!429, !430, !431, !432}
!429 = !DILocalVariable(name: "thread", arg: 1, scope: !303, file: !304, line: 175, type: !307)
!430 = !DILocalVariable(name: "region_num", scope: !303, file: !304, line: 200, type: !195)
!431 = !DILocalVariable(name: "guard_start", scope: !303, file: !304, line: 265, type: !22)
!432 = !DILocalVariable(name: "guard_size", scope: !303, file: !304, line: 266, type: !185)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 96, elements: !445)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !436)
!435 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!436 = !{!437, !438, !439}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !434, file: !435, line: 53, baseType: !22, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !434, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !434, file: !435, line: 55, baseType: !440, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !442)
!441 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !443)
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !442, file: !441, line: 150, baseType: !152, size: 32)
!445 = !{!446}
!446 = !DISubrange(count: 1)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "static_regions", scope: !297, file: !304, line: 62, type: !449, isLocal: true, isDefinition: true)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 96, elements: !445)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !453)
!453 = !{!454, !455}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !452, file: !203, line: 17, baseType: !118, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !452, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !458, file: !491, line: 39, type: !195, isLocal: true, isDefinition: true)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !460, globals: !490, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!460 = !{!461, !106, !107, !478, !195}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !463, line: 1226, baseType: !464)
!463 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 1213, size: 352, elements: !465)
!465 = !{!466, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !464, file: !463, line: 1215, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !464, file: !463, line: 1216, baseType: !227, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !464, file: !463, line: 1217, baseType: !227, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !464, file: !463, line: 1218, baseType: !227, size: 32, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !464, file: !463, line: 1219, baseType: !227, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !464, file: !463, line: 1220, baseType: !227, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !464, file: !463, line: 1221, baseType: !227, size: 32, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !464, file: !463, line: 1222, baseType: !227, size: 32, offset: 224)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !464, file: !463, line: 1223, baseType: !227, size: 32, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !464, file: !463, line: 1224, baseType: !227, size: 32, offset: 288)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !464, file: !463, line: 1225, baseType: !227, size: 32, offset: 320)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !480, file: !481, line: 29, baseType: !152, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !480, file: !481, line: 37, baseType: !486, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !488)
!488 = !{!489}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !487, file: !441, line: 143, baseType: !152, size: 32)
!490 = !{!456}
!491 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !494, file: !501, line: 21, type: !213, isLocal: true, isDefinition: true)
!494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !496, globals: !500, splitDebugInlining: false, nameTableKind: None)
!495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!496 = !{!497, !107, !106}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !499, line: 22, baseType: !107)
!499 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!500 = !{!492}
!501 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !504, file: !509, line: 13, type: !526, isLocal: true, isDefinition: true)
!504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !506, splitDebugInlining: false, nameTableKind: None)
!505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!506 = !{!507, !502}
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "mpu_config", scope: !504, file: !509, line: 37, type: !510, isLocal: false, isDefinition: true)
!509 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !481, line: 41, size: 64, elements: !512)
!512 = !{!513, !514}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !511, file: !481, line: 43, baseType: !152, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !511, file: !481, line: 45, baseType: !515, size: 32, offset: 32)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !518)
!518 = !{!519, !520, !521}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !517, file: !481, line: 29, baseType: !152, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !517, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !517, file: !481, line: 37, baseType: !522, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !523, file: !441, line: 143, baseType: !152, size: 32)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 192, elements: !340)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "phase", scope: !529, file: !533, line: 61, type: !532, isLocal: false, isDefinition: true)
!529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !531, retainedTypes: !558, globals: !568, splitDebugInlining: false, nameTableKind: None)
!530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!531 = !{!532, !541, !549, !30, !554}
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !533, line: 40, baseType: !32, size: 32, elements: !534)
!533 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537, !538, !539, !540}
!535 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!536 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!537 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!538 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!539 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!540 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !533, line: 226, baseType: !32, size: 32, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548}
!543 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!544 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!545 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!546 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!547 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!548 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !533, line: 52, baseType: !32, size: 32, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!552 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!553 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !555)
!555 = !{!556, !557}
!556 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!557 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!558 = !{!106, !107, !185, !559, !564, !152, !566}
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !560, line: 46, baseType: !561)
!560 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{null, !106, !106, !106}
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !565, line: 46, baseType: !376)
!565 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !567)
!567 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!568 = !{!527, !569, !571, !573, !582, !584, !688, !691}
!569 = !DIGlobalVariableExpression(var: !570, expr: !DIExpression())
!570 = distinct !DIGlobalVariable(name: "test_result", scope: !529, file: !533, line: 234, type: !541, isLocal: true, isDefinition: true)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !529, file: !533, line: 294, type: !145, isLocal: true, isDefinition: true)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !529, file: !533, line: 430, type: !575, isLocal: false, isDefinition: true, align: 512)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 8704, elements: !580)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !578)
!577 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !576, file: !577, line: 48, baseType: !120, size: 8)
!580 = !{!581}
!581 = !DISubrange(count: 1088)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "test_status", scope: !529, file: !533, line: 63, type: !549, isLocal: true, isDefinition: true)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !529, file: !533, line: 17, type: !586, isLocal: true, isDefinition: true)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !587)
!587 = !{!588, !646, !658, !659, !660, !661, !662, !668, !683}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !309, line: 247, baseType: !589, size: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !590)
!590 = !{!591, !615, !622, !623, !624, !633, !634, !635}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 60, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 60, size: 64, elements: !593)
!593 = !{!594, !609}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !592, file: !309, line: 61, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !597)
!597 = !{!598, !604}
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 38, baseType: !599, size: 32)
!599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 38, size: 32, elements: !600)
!600 = !{!601, !603}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !599, file: !319, line: 39, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !319, line: 40, baseType: !602, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 42, baseType: !605, size: 32, offset: 32)
!605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 42, size: 32, elements: !606)
!606 = !{!607, !608}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !605, file: !319, line: 43, baseType: !602, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !605, file: !319, line: 44, baseType: !602, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !592, file: !309, line: 62, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !611)
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !610, file: !335, line: 50, baseType: !613, size: 64)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 64, elements: !340)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !589, file: !309, line: 68, baseType: !616, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !618, file: !345, line: 232, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !596)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !589, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !589, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!624 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 90, baseType: !625, size: 16, offset: 112)
!625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 90, size: 16, elements: !626)
!626 = !{!627, !632}
!627 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !309, line: 91, baseType: !628, size: 16)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !625, file: !309, line: 91, size: 16, elements: !629)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !628, file: !309, line: 96, baseType: !359, size: 8)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !628, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !625, file: !309, line: 100, baseType: !197, size: 16)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !589, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !589, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !589, file: !309, line: 131, baseType: !636, size: 192, offset: 192)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !637)
!637 = !{!638, !639, !645}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !636, file: !345, line: 245, baseType: !595, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !636, file: !345, line: 246, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !636, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !586, file: !309, line: 250, baseType: !647, size: 288, offset: 384)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !648)
!648 = !{!649, !650, !651, !652, !653, !654, !655, !656, !657}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !647, file: !379, line: 26, baseType: !152, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !647, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !647, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !647, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !647, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !647, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !647, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !647, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !647, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !586, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !586, file: !309, line: 256, baseType: !617, size: 64, offset: 704)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !586, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !586, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !586, file: !309, line: 300, baseType: !663, size: 96, offset: 1056)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !664)
!664 = !{!665, !666, !667}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !663, file: !309, line: 153, baseType: !22, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !663, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !663, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !586, file: !309, line: 325, baseType: !669, size: 32, offset: 1152)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !671)
!671 = !{!672, !678, !679}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !670, file: !406, line: 5074, baseType: !673, size: 96)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !673, file: !410, line: 57, baseType: !413, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !673, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !673, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !670, file: !406, line: 5075, baseType: !617, size: 64, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !670, file: !406, line: 5076, baseType: !680, size: 32, offset: 160)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !680, file: !420, line: 52, baseType: !22, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !586, file: !309, line: 343, baseType: !684, size: 64, offset: 1184)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !684, file: !379, line: 63, baseType: !152, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !684, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !529, file: !690, line: 95, type: !152, isLocal: true, isDefinition: true)
!690 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !529, file: !690, line: 96, type: !152, isLocal: true, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "ztest_api", scope: !696, file: !699, line: 70, type: !700, isLocal: false, isDefinition: true)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !698, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!698 = !{!694}
!699 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !702)
!702 = !{!703, !704, !725}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !701, file: !114, line: 500, baseType: !16, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !701, file: !114, line: 501, baseType: !705, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DISubroutineType(types: !707)
!707 = !{!145, !13, !708}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !709, file: !114, line: 179, baseType: !117, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !709, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !709, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !709, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !709, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !709, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !709, file: !114, line: 197, baseType: !718, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !720, file: !114, line: 116, baseType: !152, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !720, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !720, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !701, file: !114, line: 502, baseType: !726, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{!145, !118, !118}
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !731, file: !836, line: 72, type: !920, isLocal: true, isDefinition: true)
!731 = distinct !DICompileUnit(language: DW_LANG_C99, file: !732, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !733, retainedTypes: !822, globals: !833, splitDebugInlining: false, nameTableKind: None)
!732 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!733 = !{!30, !734}
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !223, line: 65, baseType: !107, size: 32, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821}
!736 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!737 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!738 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!739 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!740 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!741 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!742 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!743 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!744 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!745 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!746 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!747 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!748 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!749 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!750 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!751 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!752 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!753 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!754 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!755 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!756 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!757 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!758 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!759 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!760 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!761 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!762 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!763 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!764 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!765 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!766 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!767 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!768 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!769 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!770 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!771 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!772 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!773 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!774 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!775 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!776 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!777 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!778 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!779 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!780 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!781 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!782 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!783 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!784 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!785 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!786 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!787 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!788 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!789 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!790 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!791 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!792 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!793 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!794 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!795 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!796 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!797 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!798 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!799 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!800 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!801 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!802 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!803 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!804 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!805 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!806 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!807 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!808 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!809 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!810 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!811 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!812 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!813 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!814 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!815 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!816 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!817 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!818 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!819 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!820 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!821 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!822 = !{!185, !107, !106, !823}
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !223, line: 354, baseType: !825)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 346, size: 192, elements: !826)
!826 = !{!827, !828, !829, !830, !831, !832}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !825, file: !223, line: 348, baseType: !227, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !825, file: !223, line: 349, baseType: !227, size: 32, offset: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !825, file: !223, line: 350, baseType: !227, size: 32, offset: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !825, file: !223, line: 351, baseType: !227, size: 32, offset: 96)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !825, file: !223, line: 352, baseType: !227, size: 32, offset: 128)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !825, file: !223, line: 353, baseType: !227, size: 32, offset: 160)
!833 = !{!834, !840, !856, !867, !884, !729, !886, !900, !902, !904, !906, !908, !910, !912, !914, !916, !918}
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !731, file: !836, line: 424, type: !837, isLocal: false, isDefinition: true, align: 16)
!836 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 64, elements: !838)
!838 = !{!839}
!839 = !DISubrange(count: 4)
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !731, file: !836, line: 424, type: !842, isLocal: false, isDefinition: true, align: 32)
!842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !844)
!844 = !{!845, !846, !847, !848, !854, !855}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !843, file: !247, line: 380, baseType: !118, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !843, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !843, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !843, file: !247, line: 386, baseType: !849, size: 32, offset: 96)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !851)
!851 = !{!852, !853}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !850, file: !247, line: 359, baseType: !195, size: 8)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !850, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !843, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !843, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !731, file: !836, line: 424, type: !858, isLocal: true, isDefinition: true, align: 32)
!858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !860)
!860 = !{!861, !866}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !859, file: !238, line: 60, baseType: !862, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 32)
!863 = !DISubroutineType(types: !864)
!864 = !{!107, !865}
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !859, file: !238, line: 65, baseType: !865, size: 32, offset: 32)
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "exti_data", scope: !731, file: !836, line: 423, type: !869, isLocal: true, isDefinition: true)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !836, line: 107, size: 1472, elements: !870)
!870 = !{!871}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !869, file: !836, line: 109, baseType: !872, size: 1472)
!872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !873, size: 1472, elements: !882)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !836, line: 101, size: 64, elements: !874)
!874 = !{!875, !881}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !873, file: !836, line: 102, baseType: !876, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !877, line: 63, baseType: !878)
!877 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DISubroutineType(types: !880)
!880 = !{null, !107, !106}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !873, file: !836, line: 103, baseType: !106, size: 32, offset: 32)
!882 = !{!883}
!883 = !DISubrange(count: 23)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !731, file: !836, line: 424, type: !850, isLocal: true, isDefinition: true, align: 8)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !888, file: !836, line: 493, type: !893, isLocal: true, isDefinition: true, align: 32)
!888 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !836, file: !836, line: 460, type: !889, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !891)
!889 = !DISubroutineType(types: !890)
!890 = !{null, !865}
!891 = !{!892}
!892 = !DILocalVariable(name: "dev", arg: 1, scope: !888, file: !836, line: 460, type: !865)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !894)
!894 = !{!895, !897, !898, !899}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !893, file: !10, line: 55, baseType: !896, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !893, file: !10, line: 57, baseType: !896, size: 32, offset: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !893, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !893, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !888, file: !836, line: 497, type: !893, isLocal: true, isDefinition: true, align: 32)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !888, file: !836, line: 507, type: !893, isLocal: true, isDefinition: true, align: 32)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !888, file: !836, line: 512, type: !893, isLocal: true, isDefinition: true, align: 32)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !888, file: !836, line: 516, type: !893, isLocal: true, isDefinition: true, align: 32)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !888, file: !836, line: 523, type: !893, isLocal: true, isDefinition: true, align: 32)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !888, file: !836, line: 527, type: !893, isLocal: true, isDefinition: true, align: 32)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !888, file: !836, line: 581, type: !893, isLocal: true, isDefinition: true, align: 32)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !888, file: !836, line: 586, type: !893, isLocal: true, isDefinition: true, align: 32)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !888, file: !836, line: 591, type: !893, isLocal: true, isDefinition: true, align: 32)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !888, file: !836, line: 595, type: !893, isLocal: true, isDefinition: true, align: 32)
!920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 736, elements: !882)
!921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !922)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !223, line: 155, baseType: !734)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !925, file: !930, line: 23, type: !954, isLocal: false, isDefinition: true, align: 16)
!925 = distinct !DICompileUnit(language: DW_LANG_C99, file: !926, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !927, splitDebugInlining: false, nameTableKind: None)
!926 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!927 = !{!928, !923, !934, !936, !938, !940, !942, !944, !946, !948, !950, !952}
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !925, file: !930, line: 18, type: !931, isLocal: false, isDefinition: true, align: 16)
!930 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 208, elements: !932)
!932 = !{!933}
!933 = !DISubrange(count: 13)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !925, file: !930, line: 30, type: !837, isLocal: false, isDefinition: true, align: 16)
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !925, file: !930, line: 37, type: !837, isLocal: false, isDefinition: true, align: 16)
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !925, file: !930, line: 44, type: !837, isLocal: false, isDefinition: true, align: 16)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !925, file: !930, line: 51, type: !837, isLocal: false, isDefinition: true, align: 16)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !925, file: !930, line: 58, type: !837, isLocal: false, isDefinition: true, align: 16)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !925, file: !930, line: 65, type: !837, isLocal: false, isDefinition: true, align: 16)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !925, file: !930, line: 72, type: !837, isLocal: false, isDefinition: true, align: 16)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !925, file: !930, line: 79, type: !837, isLocal: false, isDefinition: true, align: 16)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !925, file: !930, line: 86, type: !837, isLocal: false, isDefinition: true, align: 16)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !925, file: !930, line: 93, type: !837, isLocal: false, isDefinition: true, align: 16)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 48, elements: !955)
!955 = !{!956}
!956 = !DISubrange(count: 3)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !959, file: !1020, line: 398, type: !1053, isLocal: true, isDefinition: true)
!959 = distinct !DICompileUnit(language: DW_LANG_C99, file: !960, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !961, retainedTypes: !974, globals: !1017, splitDebugInlining: false, nameTableKind: None)
!960 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!961 = !{!962, !30, !967}
!962 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !963, line: 197, baseType: !32, size: 32, elements: !964)
!963 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!964 = !{!965, !966}
!965 = !DIEnumerator(name: "SUCCESS", value: 0)
!966 = !DIEnumerator(name: "ERROR", value: 1)
!967 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !968, line: 44, baseType: !32, size: 32, elements: !969)
!968 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!969 = !{!970, !971, !972, !973}
!970 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!971 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!972 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!973 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!974 = !{!106, !107, !152, !975, !1010, !1016}
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 532, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 500, size: 1088, elements: !978)
!978 = !{!979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !977, file: !223, line: 502, baseType: !227, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !977, file: !223, line: 503, baseType: !227, size: 32, offset: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !977, file: !223, line: 504, baseType: !227, size: 32, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !977, file: !223, line: 505, baseType: !227, size: 32, offset: 96)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !977, file: !223, line: 506, baseType: !227, size: 32, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !977, file: !223, line: 507, baseType: !227, size: 32, offset: 160)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !977, file: !223, line: 508, baseType: !227, size: 32, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !977, file: !223, line: 509, baseType: !152, size: 32, offset: 224)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !977, file: !223, line: 510, baseType: !227, size: 32, offset: 256)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !977, file: !223, line: 511, baseType: !227, size: 32, offset: 288)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !977, file: !223, line: 512, baseType: !990, size: 64, offset: 320)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 64, elements: !340)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !977, file: !223, line: 513, baseType: !227, size: 32, offset: 384)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !977, file: !223, line: 514, baseType: !227, size: 32, offset: 416)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !977, file: !223, line: 515, baseType: !227, size: 32, offset: 448)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !977, file: !223, line: 516, baseType: !152, size: 32, offset: 480)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !977, file: !223, line: 517, baseType: !227, size: 32, offset: 512)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !977, file: !223, line: 518, baseType: !227, size: 32, offset: 544)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !977, file: !223, line: 519, baseType: !990, size: 64, offset: 576)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !977, file: !223, line: 520, baseType: !227, size: 32, offset: 640)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !977, file: !223, line: 521, baseType: !227, size: 32, offset: 672)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !977, file: !223, line: 522, baseType: !227, size: 32, offset: 704)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !977, file: !223, line: 523, baseType: !152, size: 32, offset: 736)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !977, file: !223, line: 524, baseType: !227, size: 32, offset: 768)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !977, file: !223, line: 525, baseType: !227, size: 32, offset: 800)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !977, file: !223, line: 526, baseType: !990, size: 64, offset: 832)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !977, file: !223, line: 527, baseType: !227, size: 32, offset: 896)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !977, file: !223, line: 528, baseType: !227, size: 32, offset: 928)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !977, file: !223, line: 529, baseType: !990, size: 64, offset: 960)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !977, file: !223, line: 530, baseType: !227, size: 32, offset: 1024)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !977, file: !223, line: 531, baseType: !227, size: 32, offset: 1056)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1012, line: 343, size: 64, elements: !1013)
!1012 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1013 = !{!1014, !1015}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1011, file: !1012, line: 344, baseType: !152, size: 32)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1011, file: !1012, line: 345, baseType: !152, size: 32, offset: 32)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1017 = !{!1018, !1024, !1040, !1051, !957}
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !959, file: !1020, line: 752, type: !1021, isLocal: false, isDefinition: true, align: 16)
!1020 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 928, elements: !1022)
!1022 = !{!1023}
!1023 = !DISubrange(count: 58)
!1024 = !DIGlobalVariableExpression(var: !1025, expr: !DIExpression())
!1025 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !959, file: !1020, line: 752, type: !1026, isLocal: false, isDefinition: true, align: 32)
!1026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1027)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1028)
!1028 = !{!1029, !1030, !1031, !1032, !1038, !1039}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1027, file: !247, line: 380, baseType: !118, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1027, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1027, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1027, file: !247, line: 386, baseType: !1033, size: 32, offset: 96)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1035)
!1035 = !{!1036, !1037}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1034, file: !247, line: 359, baseType: !195, size: 8)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1034, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1027, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1027, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1040 = !DIGlobalVariableExpression(var: !1041, expr: !DIExpression())
!1041 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !959, file: !1020, line: 752, type: !1042, isLocal: true, isDefinition: true, align: 32)
!1042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1044)
!1044 = !{!1045, !1050}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1043, file: !238, line: 60, baseType: !1046, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 32)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!107, !1049}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1043, file: !238, line: 65, baseType: !1049, size: 32, offset: 32)
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1052 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !959, file: !1020, line: 752, type: !1034, isLocal: true, isDefinition: true, align: 8)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !968, line: 100, size: 224, elements: !1054)
!1054 = !{!1055, !1061, !1062, !1071, !1076, !1081, !1087}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1053, file: !968, line: 101, baseType: !1056, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !968, line: 76, baseType: !1057)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!107, !1049, !1060}
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !968, line: 56, baseType: !106)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1053, file: !968, line: 102, baseType: !1056, size: 32, offset: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1053, file: !968, line: 103, baseType: !1063, size: 32, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !968, line: 83, baseType: !1064)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!107, !1049, !1060, !1067, !106}
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !968, line: 72, baseType: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{null, !1049, !1060, !106}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1053, file: !968, line: 104, baseType: !1072, size: 32, offset: 96)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !968, line: 79, baseType: !1073)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!107, !1049, !1060, !1016}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1053, file: !968, line: 105, baseType: !1077, size: 32, offset: 128)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !968, line: 88, baseType: !1078)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!967, !1049, !1060}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1053, file: !968, line: 106, baseType: !1082, size: 32, offset: 160)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !968, line: 92, baseType: !1083)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!107, !1049, !1060, !1086}
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !968, line: 64, baseType: !106)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1053, file: !968, line: 107, baseType: !1088, size: 32, offset: 192)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !968, line: 96, baseType: !1089)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!107, !1049, !1060, !106}
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1094, file: !1151, line: 603, type: !1153, isLocal: true, isDefinition: true, align: 32)
!1094 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1095, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1096, globals: !1148, splitDebugInlining: false, nameTableKind: None)
!1095 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!1096 = !{!106, !107, !1097}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1100, line: 336, size: 160, elements: !1101)
!1100 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1101 = !{!1102, !1122, !1126, !1130, !1143}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1099, file: !1100, line: 365, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!107, !1106, !1121}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1109)
!1109 = !{!1110, !1111, !1112, !1113, !1119, !1120}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1108, file: !247, line: 380, baseType: !118, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1108, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1108, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1108, file: !247, line: 386, baseType: !1114, size: 32, offset: 96)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1116)
!1116 = !{!1117, !1118}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1115, file: !247, line: 359, baseType: !195, size: 8)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1115, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1108, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1108, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1099, file: !1100, line: 366, baseType: !1123, size: 32, offset: 32)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 32)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{null, !1106, !196}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1099, file: !1100, line: 374, baseType: !1127, size: 32, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!107, !1106}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1099, file: !1100, line: 377, baseType: !1131, size: 32, offset: 96)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 32)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!107, !1106, !1134}
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1136)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1100, line: 122, size: 64, elements: !1137)
!1137 = !{!1138, !1139, !1140, !1141, !1142}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1136, file: !1100, line: 123, baseType: !152, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1136, file: !1100, line: 124, baseType: !195, size: 8, offset: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1136, file: !1100, line: 125, baseType: !195, size: 8, offset: 40)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1136, file: !1100, line: 126, baseType: !195, size: 8, offset: 48)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1136, file: !1100, line: 127, baseType: !195, size: 8, offset: 56)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1099, file: !1100, line: 379, baseType: !1144, size: 32, offset: 128)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{!107, !1106, !1147}
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1148 = !{!1092, !1149}
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1094, file: !1151, line: 38, type: !1152, isLocal: true, isDefinition: true)
!1151 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1155)
!1155 = !{!1156, !1157}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1154, file: !238, line: 60, baseType: !1127, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1154, file: !238, line: 65, baseType: !1106, size: 32, offset: 32)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1160, file: !1329, line: 762, type: !1448, isLocal: true, isDefinition: true)
!1160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1161, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1162, retainedTypes: !1180, globals: !1326, splitDebugInlining: false, nameTableKind: None)
!1161 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!1162 = !{!30, !1163, !1169, !1174, !967}
!1163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1164, line: 506, baseType: !32, size: 32, elements: !1165)
!1164 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1165 = !{!1166, !1167, !1168}
!1166 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1167 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1168 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1164, line: 512, baseType: !32, size: 32, elements: !1170)
!1170 = !{!1171, !1172, !1173}
!1171 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1172 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1173 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !877, line: 43, baseType: !32, size: 32, elements: !1175)
!1175 = !{!1176, !1177, !1178, !1179}
!1176 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1177 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1178 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1179 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1180 = !{!106, !107, !1181, !1251, !1256, !1216, !1169, !1163, !1261, !1262, !152, !1276, !1231, !193, !1286, !1287}
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1183)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1164, line: 523, size: 288, elements: !1184)
!1184 = !{!1185, !1206, !1212, !1217, !1221, !1222, !1223, !1227, !1247}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1183, file: !1164, line: 524, baseType: !1186, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!107, !1189, !1204, !1205}
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 32)
!1190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1191)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1202, !1203}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1191, file: !247, line: 380, baseType: !118, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1191, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1191, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1191, file: !247, line: 386, baseType: !1197, size: 32, offset: 96)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 32)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1199)
!1199 = !{!1200, !1201}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1198, file: !247, line: 359, baseType: !195, size: 8)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1198, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1191, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1191, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1164, line: 237, baseType: !195)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1164, line: 257, baseType: !152)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1183, file: !1164, line: 530, baseType: !1207, size: 32, offset: 32)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!107, !1189, !1210}
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1164, line: 229, baseType: !152)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1183, file: !1164, line: 532, baseType: !1213, size: 32, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!107, !1189, !1216, !1211}
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1164, line: 216, baseType: !152)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1183, file: !1164, line: 535, baseType: !1218, size: 32, offset: 96)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!107, !1189, !1216}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1183, file: !1164, line: 537, baseType: !1218, size: 32, offset: 128)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1183, file: !1164, line: 539, baseType: !1218, size: 32, offset: 160)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1183, file: !1164, line: 541, baseType: !1224, size: 32, offset: 192)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1225 = !DISubroutineType(types: !1226)
!1226 = !{!107, !1189, !1204, !1163, !1169}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1183, file: !1164, line: 544, baseType: !1228, size: 32, offset: 224)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!107, !1189, !1231, !145}
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1164, line: 478, size: 96, elements: !1233)
!1233 = !{!1234, !1241, !1246}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1232, file: !1164, line: 482, baseType: !1235, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1236, line: 33, baseType: !1237)
!1236 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1236, line: 29, size: 32, elements: !1238)
!1238 = !{!1239}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1237, file: !1236, line: 30, baseType: !1240, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1232, file: !1164, line: 485, baseType: !1242, size: 32, offset: 32)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1164, line: 464, baseType: !1243)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{null, !1189, !1231, !1216}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1232, file: !1164, line: 493, baseType: !1216, size: 32, offset: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1183, file: !1164, line: 547, baseType: !1248, size: 32, offset: 256)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!152, !1189}
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1164, line: 428, size: 32, elements: !1254)
!1254 = !{!1255}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1253, file: !1164, line: 434, baseType: !1216, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1164, line: 441, size: 32, elements: !1259)
!1259 = !{!1260}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1258, file: !1164, line: 447, baseType: !1216, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 441, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 430, size: 320, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1264, file: !223, line: 432, baseType: !227, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1264, file: !223, line: 433, baseType: !227, size: 32, offset: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1264, file: !223, line: 434, baseType: !227, size: 32, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1264, file: !223, line: 435, baseType: !227, size: 32, offset: 96)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1264, file: !223, line: 436, baseType: !227, size: 32, offset: 128)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1264, file: !223, line: 437, baseType: !227, size: 32, offset: 160)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1264, file: !223, line: 438, baseType: !227, size: 32, offset: 192)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1264, file: !223, line: 439, baseType: !227, size: 32, offset: 224)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1264, file: !223, line: 440, baseType: !1275, size: 64, offset: 256)
!1275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !340)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !223, line: 454, baseType: !1278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 447, size: 288, elements: !1279)
!1279 = !{!1280, !1281, !1282, !1284, !1285}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1278, file: !223, line: 449, baseType: !227, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1278, file: !223, line: 450, baseType: !227, size: 32, offset: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1278, file: !223, line: 451, baseType: !1283, size: 128, offset: 64)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !838)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1278, file: !223, line: 452, baseType: !990, size: 64, offset: 192)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1278, file: !223, line: 453, baseType: !227, size: 32, offset: 256)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !968, line: 100, size: 224, elements: !1290)
!1290 = !{!1291, !1296, !1297, !1306, !1311, !1316, !1321}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1289, file: !968, line: 101, baseType: !1292, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !968, line: 76, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!107, !1189, !1060}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1289, file: !968, line: 102, baseType: !1292, size: 32, offset: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1289, file: !968, line: 103, baseType: !1298, size: 32, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !968, line: 83, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 32)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!107, !1189, !1060, !1302, !106}
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !968, line: 72, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{null, !1189, !1060, !106}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1289, file: !968, line: 104, baseType: !1307, size: 32, offset: 96)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !968, line: 79, baseType: !1308)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 32)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!107, !1189, !1060, !1016}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1289, file: !968, line: 105, baseType: !1312, size: 32, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !968, line: 88, baseType: !1313)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 32)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{!967, !1189, !1060}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1289, file: !968, line: 106, baseType: !1317, size: 32, offset: 160)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !968, line: 92, baseType: !1318)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 32)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!107, !1189, !1060, !1086}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1289, file: !968, line: 107, baseType: !1322, size: 32, offset: 192)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !968, line: 96, baseType: !1323)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 32)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!107, !1189, !1060, !106}
!1326 = !{!1327, !1333, !1335, !1345, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1410, !1412, !1414, !1416, !1418, !1420, !1422, !1424, !1426, !1428, !1430, !1432, !1434, !1436, !1438, !1440, !1442, !1158, !1444, !1446, !1459, !1461, !1463, !1465, !1467, !1469, !1471}
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1160, file: !1329, line: 762, type: !1330, isLocal: false, isDefinition: true, align: 16)
!1329 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 96, elements: !1331)
!1331 = !{!1332}
!1332 = !DISubrange(count: 6)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1160, file: !1329, line: 762, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1160, file: !1329, line: 762, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1339)
!1339 = !{!1340, !1344}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1338, file: !238, line: 60, baseType: !1341, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!107, !1189}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1338, file: !238, line: 65, baseType: !1189, size: 32, offset: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1160, file: !1329, line: 766, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 80, elements: !1348)
!1348 = !{!1349}
!1349 = !DISubrange(count: 5)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1160, file: !1329, line: 766, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1160, file: !1329, line: 766, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1160, file: !1329, line: 770, type: !1330, isLocal: false, isDefinition: true, align: 16)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1160, file: !1329, line: 770, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1160, file: !1329, line: 770, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1160, file: !1329, line: 774, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1160, file: !1329, line: 774, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1160, file: !1329, line: 774, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1160, file: !1329, line: 778, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1160, file: !1329, line: 778, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1160, file: !1329, line: 778, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1160, file: !1329, line: 782, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1160, file: !1329, line: 782, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1160, file: !1329, line: 782, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1160, file: !1329, line: 786, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1160, file: !1329, line: 786, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1160, file: !1329, line: 786, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1160, file: !1329, line: 790, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1160, file: !1329, line: 790, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1160, file: !1329, line: 790, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1160, file: !1329, line: 794, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1160, file: !1329, line: 794, type: !1190, isLocal: false, isDefinition: true, align: 32)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1160, file: !1329, line: 794, type: !1337, isLocal: true, isDefinition: true, align: 32)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1160, file: !1329, line: 762, type: !1398, isLocal: true, isDefinition: true)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1399, line: 237, size: 128, elements: !1400)
!1399 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1400 = !{!1401, !1402, !1403}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1398, file: !1399, line: 239, baseType: !1258, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1398, file: !1399, line: 241, baseType: !1189, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1398, file: !1399, line: 243, baseType: !1404, size: 64, offset: 64)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1236, line: 40, baseType: !1405)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1236, line: 35, size: 64, elements: !1406)
!1406 = !{!1407, !1409}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1405, file: !1236, line: 36, baseType: !1408, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1405, file: !1236, line: 37, baseType: !1408, size: 32, offset: 32)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1160, file: !1329, line: 762, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1160, file: !1329, line: 766, type: !1398, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1160, file: !1329, line: 766, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1160, file: !1329, line: 770, type: !1398, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1160, file: !1329, line: 770, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1160, file: !1329, line: 774, type: !1398, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1160, file: !1329, line: 774, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1160, file: !1329, line: 778, type: !1398, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1160, file: !1329, line: 778, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1160, file: !1329, line: 782, type: !1398, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1160, file: !1329, line: 782, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1160, file: !1329, line: 786, type: !1398, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1160, file: !1329, line: 786, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1160, file: !1329, line: 790, type: !1398, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1160, file: !1329, line: 790, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1160, file: !1329, line: 794, type: !1398, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1160, file: !1329, line: 794, type: !1198, isLocal: true, isDefinition: true, align: 8)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1160, file: !1329, line: 656, type: !1182, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1160, file: !1329, line: 766, type: !1448, isLocal: true, isDefinition: true)
!1448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1449)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1399, line: 224, size: 160, elements: !1450)
!1450 = !{!1451, !1452, !1453, !1454}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1449, file: !1399, line: 226, baseType: !1253, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1449, file: !1399, line: 228, baseType: !1016, size: 32, offset: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1449, file: !1399, line: 230, baseType: !107, size: 32, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1449, file: !1399, line: 231, baseType: !1455, size: 64, offset: 96)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1012, line: 343, size: 64, elements: !1456)
!1456 = !{!1457, !1458}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1455, file: !1012, line: 344, baseType: !152, size: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1455, file: !1012, line: 345, baseType: !152, size: 32, offset: 32)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1160, file: !1329, line: 770, type: !1448, isLocal: true, isDefinition: true)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1160, file: !1329, line: 774, type: !1448, isLocal: true, isDefinition: true)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1160, file: !1329, line: 778, type: !1448, isLocal: true, isDefinition: true)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1160, file: !1329, line: 782, type: !1448, isLocal: true, isDefinition: true)
!1467 = !DIGlobalVariableExpression(var: !1468, expr: !DIExpression())
!1468 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1160, file: !1329, line: 786, type: !1448, isLocal: true, isDefinition: true)
!1469 = !DIGlobalVariableExpression(var: !1470, expr: !DIExpression())
!1470 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1160, file: !1329, line: 790, type: !1448, isLocal: true, isDefinition: true)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1160, file: !1329, line: 794, type: !1448, isLocal: true, isDefinition: true)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1475, file: !1614, line: 44, type: !1692, isLocal: false, isDefinition: true)
!1475 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1476, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1477, retainedTypes: !1510, globals: !1611, splitDebugInlining: false, nameTableKind: None)
!1476 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!1477 = !{!30, !1478, !1485, !1492, !1499, !1505, !967}
!1478 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1100, line: 47, baseType: !32, size: 32, elements: !1479)
!1479 = !{!1480, !1481, !1482, !1483, !1484}
!1480 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1481 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1482 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1483 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1484 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1485 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1100, line: 75, baseType: !32, size: 32, elements: !1486)
!1486 = !{!1487, !1488, !1489, !1490, !1491}
!1487 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1488 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1489 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1490 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1491 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1492 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1100, line: 92, baseType: !32, size: 32, elements: !1493)
!1493 = !{!1494, !1495, !1496, !1497, !1498}
!1494 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1495 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1496 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1497 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1498 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1499 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1100, line: 84, baseType: !32, size: 32, elements: !1500)
!1500 = !{!1501, !1502, !1503, !1504}
!1501 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1502 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1503 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1504 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1505 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1100, line: 107, baseType: !32, size: 32, elements: !1506)
!1506 = !{!1507, !1508, !1509}
!1507 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1508 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1509 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1510 = !{!106, !107, !1511, !196, !195, !1560, !152, !1060, !1571, !197, !566, !1610}
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1100, line: 336, size: 160, elements: !1514)
!1514 = !{!1515, !1534, !1538, !1542, !1555}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1513, file: !1100, line: 365, baseType: !1516, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!107, !1519, !1121}
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1522)
!1522 = !{!1523, !1524, !1525, !1526, !1532, !1533}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1521, file: !247, line: 380, baseType: !118, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1521, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1521, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1521, file: !247, line: 386, baseType: !1527, size: 32, offset: 96)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1529)
!1529 = !{!1530, !1531}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1528, file: !247, line: 359, baseType: !195, size: 8)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1528, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1521, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1521, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1513, file: !1100, line: 366, baseType: !1535, size: 32, offset: 32)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{null, !1519, !196}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1513, file: !1100, line: 374, baseType: !1539, size: 32, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!107, !1519}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1513, file: !1100, line: 377, baseType: !1543, size: 32, offset: 96)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1544 = !DISubroutineType(types: !1545)
!1545 = !{!107, !1519, !1546}
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1100, line: 122, size: 64, elements: !1549)
!1549 = !{!1550, !1551, !1552, !1553, !1554}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1548, file: !1100, line: 123, baseType: !152, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1548, file: !1100, line: 124, baseType: !195, size: 8, offset: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1548, file: !1100, line: 125, baseType: !195, size: 8, offset: 40)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1548, file: !1100, line: 126, baseType: !195, size: 8, offset: 48)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1548, file: !1100, line: 127, baseType: !195, size: 8, offset: 56)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1513, file: !1100, line: 379, baseType: !1556, size: 32, offset: 128)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!107, !1519, !1559}
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !223, line: 670, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 661, size: 224, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1562, file: !223, line: 663, baseType: !227, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1562, file: !223, line: 664, baseType: !227, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1562, file: !223, line: 665, baseType: !227, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1562, file: !223, line: 666, baseType: !227, size: 32, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1562, file: !223, line: 667, baseType: !227, size: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1562, file: !223, line: 668, baseType: !227, size: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1562, file: !223, line: 669, baseType: !227, size: 32, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !968, line: 100, size: 224, elements: !1574)
!1574 = !{!1575, !1580, !1581, !1590, !1595, !1600, !1605}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1573, file: !968, line: 101, baseType: !1576, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !968, line: 76, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!107, !1519, !1060}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1573, file: !968, line: 102, baseType: !1576, size: 32, offset: 32)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1573, file: !968, line: 103, baseType: !1582, size: 32, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !968, line: 83, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!107, !1519, !1060, !1586, !106}
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !968, line: 72, baseType: !1587)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{null, !1519, !1060, !106}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1573, file: !968, line: 104, baseType: !1591, size: 32, offset: 96)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !968, line: 79, baseType: !1592)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!107, !1519, !1060, !1016}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1573, file: !968, line: 105, baseType: !1596, size: 32, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !968, line: 88, baseType: !1597)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 32)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!967, !1519, !1060}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1573, file: !968, line: 106, baseType: !1601, size: 32, offset: 160)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !968, line: 92, baseType: !1602)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!107, !1519, !1060, !1086}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1573, file: !968, line: 107, baseType: !1606, size: 32, offset: 192)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !968, line: 96, baseType: !1607)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 32)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!107, !1519, !1060, !106}
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!1611 = !{!1473, !1612, !1618, !1620, !1627, !1629, !1673, !1676, !1678, !1681, !1684, !1686}
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1615, isLocal: false, isDefinition: true, align: 16)
!1614 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 128, elements: !1616)
!1616 = !{!1617}
!1617 = !DISubrange(count: 8)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1520, isLocal: false, isDefinition: true, align: 32)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1622, isLocal: true, isDefinition: true, align: 32)
!1622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1623)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1624)
!1624 = !{!1625, !1626}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1623, file: !238, line: 60, baseType: !1539, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1623, file: !238, line: 65, baseType: !1519, size: 32, offset: 32)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1528, isLocal: true, isDefinition: true, align: 8)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1475, file: !1614, line: 1914, type: !1631, isLocal: true, isDefinition: true)
!1631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1633, line: 22, size: 224, elements: !1634)
!1633 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1634 = !{!1635, !1636, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1632, file: !1633, line: 24, baseType: !1560, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1632, file: !1633, line: 26, baseType: !1637, size: 32, offset: 32)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1639)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1012, line: 343, size: 64, elements: !1640)
!1640 = !{!1641, !1642}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1639, file: !1012, line: 344, baseType: !152, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1639, file: !1012, line: 345, baseType: !152, size: 32, offset: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1632, file: !1633, line: 28, baseType: !185, size: 32, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1632, file: !1633, line: 30, baseType: !145, size: 8, offset: 96)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1632, file: !1633, line: 32, baseType: !107, size: 32, offset: 128)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1632, file: !1633, line: 34, baseType: !145, size: 8, offset: 160)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1632, file: !1633, line: 36, baseType: !145, size: 8, offset: 168)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1632, file: !1633, line: 38, baseType: !145, size: 8, offset: 176)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1632, file: !1633, line: 40, baseType: !145, size: 8, offset: 184)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1632, file: !1633, line: 41, baseType: !1651, size: 32, offset: 192)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1654, line: 60, size: 64, elements: !1655)
!1654 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1655 = !{!1656, !1672}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1653, file: !1654, line: 69, baseType: !1657, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!1658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1654, line: 50, size: 64, elements: !1660)
!1660 = !{!1661, !1670, !1671}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1659, file: !1654, line: 52, baseType: !1662, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1664)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1665, line: 37, baseType: !1666)
!1665 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1665, line: 32, size: 64, elements: !1667)
!1667 = !{!1668, !1669}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1666, file: !1665, line: 34, baseType: !152, size: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1666, file: !1665, line: 36, baseType: !152, size: 32, offset: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1659, file: !1654, line: 54, baseType: !195, size: 8, offset: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1659, file: !1654, line: 56, baseType: !195, size: 8, offset: 40)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1653, file: !1654, line: 71, baseType: !195, size: 8, offset: 32)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1475, file: !1614, line: 1914, type: !1675, isLocal: true, isDefinition: true)
!1675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1638, size: 64, elements: !445)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1652, isLocal: true, isDefinition: true)
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1680, isLocal: true, isDefinition: true)
!1680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1658, size: 64, elements: !445)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1683, isLocal: true, isDefinition: true)
!1683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1663, size: 128, elements: !340)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1475, file: !1614, line: 1539, type: !1512, isLocal: true, isDefinition: true)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1475, file: !1614, line: 1914, type: !1688, isLocal: true, isDefinition: true)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1633, line: 74, size: 64, elements: !1689)
!1689 = !{!1690, !1691}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1688, file: !1633, line: 76, baseType: !152, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1688, file: !1633, line: 78, baseType: !1519, size: 32, offset: 32)
!1692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1693)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !1694)
!1694 = !{!1695, !1696}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1693, file: !203, line: 17, baseType: !118, size: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1693, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1699, file: !1777, line: 65, type: !227, isLocal: true, isDefinition: true)
!1699 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1700, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1701, retainedTypes: !1702, globals: !1774, splitDebugInlining: false, nameTableKind: None)
!1700 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!1701 = !{!734}
!1702 = !{!564, !1703, !896, !195, !152, !1711, !1742}
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !1705)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !1706)
!1706 = !{!1707, !1708, !1709, !1710}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1705, file: !463, line: 766, baseType: !227, size: 32)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1705, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1705, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1705, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !1713)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !1714)
!1714 = !{!1715, !1717, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1732, !1737, !1741}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1713, file: !463, line: 413, baseType: !1716, size: 256)
!1716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1616)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1713, file: !463, line: 414, baseType: !1718, size: 768, offset: 256)
!1718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1719)
!1719 = !{!1720}
!1720 = !DISubrange(count: 24)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1713, file: !463, line: 415, baseType: !1716, size: 256, offset: 1024)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1713, file: !463, line: 416, baseType: !1718, size: 768, offset: 1280)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1713, file: !463, line: 417, baseType: !1716, size: 256, offset: 2048)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1713, file: !463, line: 418, baseType: !1718, size: 768, offset: 2304)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1713, file: !463, line: 419, baseType: !1716, size: 256, offset: 3072)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1713, file: !463, line: 420, baseType: !1718, size: 768, offset: 3328)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1713, file: !463, line: 421, baseType: !1716, size: 256, offset: 4096)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1713, file: !463, line: 422, baseType: !1729, size: 1792, offset: 4352)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1730)
!1730 = !{!1731}
!1731 = !DISubrange(count: 56)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1713, file: !463, line: 423, baseType: !1733, size: 1920, offset: 6144)
!1733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1734, size: 1920, elements: !1735)
!1734 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1735 = !{!1736}
!1736 = !DISubrange(count: 240)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1713, file: !463, line: 424, baseType: !1738, size: 20608, offset: 8064)
!1738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1739)
!1739 = !{!1740}
!1740 = !DISubrange(count: 644)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1713, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1744)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1745)
!1745 = !{!1746, !1747, !1748, !1749, !1750, !1751, !1752, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1765, !1766, !1767, !1769, !1771, !1773}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1744, file: !463, line: 447, baseType: !467, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1744, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1744, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1744, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1744, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1744, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1744, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!1753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1734, size: 96, elements: !1754)
!1754 = !{!1755}
!1755 = !DISubrange(count: 12)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1744, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1744, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1744, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1744, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1744, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1744, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1744, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1744, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!1764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 64, elements: !340)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1744, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1744, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1744, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 128, elements: !838)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1744, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 160, elements: !1348)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1744, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!1772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1348)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1744, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!1774 = !{!1775, !1801, !1806, !1808, !1810, !1697}
!1775 = !DIGlobalVariableExpression(var: !1776, expr: !DIExpression())
!1776 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1699, file: !1777, line: 285, type: !1778, isLocal: true, isDefinition: true, align: 32)
!1777 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1780)
!1780 = !{!1781, !1800}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1779, file: !238, line: 60, baseType: !1782, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!107, !1785}
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1787)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1788)
!1788 = !{!1789, !1790, !1791, !1792, !1798, !1799}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1787, file: !247, line: 380, baseType: !118, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1787, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1787, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1787, file: !247, line: 386, baseType: !1793, size: 32, offset: 96)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1795)
!1795 = !{!1796, !1797}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1794, file: !247, line: 359, baseType: !195, size: 8)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1794, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1787, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1787, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1779, file: !238, line: 65, baseType: !1785, size: 32, offset: 32)
!1801 = !DIGlobalVariableExpression(var: !1802, expr: !DIExpression())
!1802 = distinct !DIGlobalVariable(name: "lock", scope: !1699, file: !1777, line: 34, type: !1803, isLocal: true, isDefinition: true)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !1804)
!1804 = !{!1805}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1803, file: !420, line: 52, baseType: !22, size: 32)
!1806 = !DIGlobalVariableExpression(var: !1807, expr: !DIExpression())
!1807 = distinct !DIGlobalVariable(name: "last_load", scope: !1699, file: !1777, line: 36, type: !152, isLocal: true, isDefinition: true)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1699, file: !1777, line: 48, type: !152, isLocal: true, isDefinition: true)
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1699, file: !1777, line: 54, type: !152, isLocal: true, isDefinition: true)
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1814, file: !1896, line: 22, type: !1898, isLocal: true, isDefinition: true)
!1814 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1815, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1816, retainedTypes: !1817, globals: !1893, splitDebugInlining: false, nameTableKind: None)
!1815 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!1816 = !{!1163, !1169}
!1817 = !{!1818, !1882, !1887, !1216, !1169, !1163, !1892, !106}
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1164, line: 523, size: 288, elements: !1821)
!1821 = !{!1822, !1841, !1845, !1849, !1853, !1854, !1855, !1859, !1878}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1820, file: !1164, line: 524, baseType: !1823, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!107, !1826, !1204, !1205}
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1828)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1829)
!1829 = !{!1830, !1831, !1832, !1833, !1839, !1840}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1828, file: !247, line: 380, baseType: !118, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1828, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1828, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1828, file: !247, line: 386, baseType: !1834, size: 32, offset: 96)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1836)
!1836 = !{!1837, !1838}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1835, file: !247, line: 359, baseType: !195, size: 8)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1835, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1828, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1828, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1820, file: !1164, line: 530, baseType: !1842, size: 32, offset: 32)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!107, !1826, !1210}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1820, file: !1164, line: 532, baseType: !1846, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!107, !1826, !1216, !1211}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1820, file: !1164, line: 535, baseType: !1850, size: 32, offset: 96)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!107, !1826, !1216}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1820, file: !1164, line: 537, baseType: !1850, size: 32, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1820, file: !1164, line: 539, baseType: !1850, size: 32, offset: 160)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1820, file: !1164, line: 541, baseType: !1856, size: 32, offset: 192)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!107, !1826, !1204, !1163, !1169}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1820, file: !1164, line: 544, baseType: !1860, size: 32, offset: 224)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!107, !1826, !1863, !145}
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1164, line: 478, size: 96, elements: !1865)
!1865 = !{!1866, !1872, !1877}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1864, file: !1164, line: 482, baseType: !1867, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1236, line: 33, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1236, line: 29, size: 32, elements: !1869)
!1869 = !{!1870}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1868, file: !1236, line: 30, baseType: !1871, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1864, file: !1164, line: 485, baseType: !1873, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1164, line: 464, baseType: !1874)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{null, !1826, !1863, !1216}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1864, file: !1164, line: 493, baseType: !1216, size: 32, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1820, file: !1164, line: 547, baseType: !1879, size: 32, offset: 256)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{!152, !1826}
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1884)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1164, line: 428, size: 32, elements: !1885)
!1885 = !{!1886}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1884, file: !1164, line: 434, baseType: !1216, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1889)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1164, line: 441, size: 32, elements: !1890)
!1890 = !{!1891}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1889, file: !1164, line: 447, baseType: !1216, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1893 = !{!1894, !1812}
!1894 = !DIGlobalVariableExpression(var: !1895, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1895 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1814, file: !1896, line: 37, type: !1897, isLocal: true, isDefinition: true)
!1896 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 352, elements: !1900)
!1899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1826)
!1900 = !{!1901}
!1901 = !DISubrange(count: 11)
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1904, file: !1944, line: 139, type: !1951, isLocal: false, isDefinition: true)
!1904 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1905, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1906, globals: !1941, splitDebugInlining: false, nameTableKind: None)
!1905 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!1906 = !{!1907}
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 532, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 500, size: 1088, elements: !1910)
!1910 = !{!1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1909, file: !223, line: 502, baseType: !227, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1909, file: !223, line: 503, baseType: !227, size: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1909, file: !223, line: 504, baseType: !227, size: 32, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1909, file: !223, line: 505, baseType: !227, size: 32, offset: 96)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1909, file: !223, line: 506, baseType: !227, size: 32, offset: 128)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1909, file: !223, line: 507, baseType: !227, size: 32, offset: 160)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1909, file: !223, line: 508, baseType: !227, size: 32, offset: 192)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1909, file: !223, line: 509, baseType: !152, size: 32, offset: 224)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1909, file: !223, line: 510, baseType: !227, size: 32, offset: 256)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1909, file: !223, line: 511, baseType: !227, size: 32, offset: 288)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1909, file: !223, line: 512, baseType: !990, size: 64, offset: 320)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1909, file: !223, line: 513, baseType: !227, size: 32, offset: 384)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1909, file: !223, line: 514, baseType: !227, size: 32, offset: 416)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1909, file: !223, line: 515, baseType: !227, size: 32, offset: 448)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1909, file: !223, line: 516, baseType: !152, size: 32, offset: 480)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1909, file: !223, line: 517, baseType: !227, size: 32, offset: 512)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1909, file: !223, line: 518, baseType: !227, size: 32, offset: 544)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1909, file: !223, line: 519, baseType: !990, size: 64, offset: 576)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1909, file: !223, line: 520, baseType: !227, size: 32, offset: 640)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1909, file: !223, line: 521, baseType: !227, size: 32, offset: 672)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1909, file: !223, line: 522, baseType: !227, size: 32, offset: 704)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1909, file: !223, line: 523, baseType: !152, size: 32, offset: 736)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1909, file: !223, line: 524, baseType: !227, size: 32, offset: 768)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1909, file: !223, line: 525, baseType: !227, size: 32, offset: 800)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1909, file: !223, line: 526, baseType: !990, size: 64, offset: 832)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1909, file: !223, line: 527, baseType: !227, size: 32, offset: 896)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1909, file: !223, line: 528, baseType: !227, size: 32, offset: 928)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1909, file: !223, line: 529, baseType: !990, size: 64, offset: 960)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1909, file: !223, line: 530, baseType: !227, size: 32, offset: 1024)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1909, file: !223, line: 531, baseType: !227, size: 32, offset: 1056)
!1941 = !{!1942, !1945, !1902}
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1904, file: !1944, line: 137, type: !152, isLocal: false, isDefinition: true)
!1944 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1945 = !DIGlobalVariableExpression(var: !1946, expr: !DIExpression())
!1946 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1904, file: !1944, line: 138, type: !1947, isLocal: false, isDefinition: true)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1948, size: 128, elements: !1949)
!1948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!1949 = !{!1950}
!1950 = !DISubrange(count: 16)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1948, size: 64, elements: !1616)
!1952 = !DIGlobalVariableExpression(var: !1953, expr: !DIExpression())
!1953 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1954, file: !1957, line: 23, type: !1958, isLocal: false, isDefinition: true)
!1954 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1955, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !1956, splitDebugInlining: false, nameTableKind: None)
!1955 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!1956 = !{!1952}
!1957 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!1959 = !DIGlobalVariableExpression(var: !1960, expr: !DIExpression())
!1960 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1961, file: !1965, line: 37, type: !2218, isLocal: false, isDefinition: true)
!1961 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1962, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1963, retainedTypes: !1972, globals: !2045, splitDebugInlining: false, nameTableKind: None)
!1962 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!1963 = !{!1964, !30, !734}
!1964 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1965, line: 63, baseType: !32, size: 32, elements: !1966)
!1965 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1966 = !{!1967, !1968, !1969, !1970, !1971}
!1967 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1968 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1969 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1970 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1971 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1972 = !{!22, !185, !106, !107, !1973, !193, !152, !2003, !896, !195, !2028}
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1975)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1976, line: 51, size: 64, elements: !1977)
!1976 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1977 = !{!1978, !1998}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1975, file: !1976, line: 52, baseType: !1979, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1976, line: 38, baseType: !1980)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 32)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!107, !1983, !194, !197}
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1986)
!1986 = !{!1987, !1988, !1989, !1990, !1996, !1997}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1985, file: !247, line: 380, baseType: !118, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1985, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1985, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1985, file: !247, line: 386, baseType: !1991, size: 32, offset: 96)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1993)
!1993 = !{!1994, !1995}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1992, file: !247, line: 359, baseType: !195, size: 8)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1992, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1985, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1985, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1975, file: !1976, line: 53, baseType: !1999, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1976, line: 47, baseType: !2000)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 32)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!107, !1983, !194, !197, !152}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2005)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2006)
!2006 = !{!2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2005, file: !463, line: 447, baseType: !467, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2005, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2005, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2005, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2005, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2005, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2005, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2005, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2005, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2005, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2005, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2005, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2005, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2005, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2005, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2005, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2005, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2005, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2005, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2005, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2005, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2030)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2031)
!2031 = !{!2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2030, file: !463, line: 413, baseType: !1716, size: 256)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2030, file: !463, line: 414, baseType: !1718, size: 768, offset: 256)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2030, file: !463, line: 415, baseType: !1716, size: 256, offset: 1024)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2030, file: !463, line: 416, baseType: !1718, size: 768, offset: 1280)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2030, file: !463, line: 417, baseType: !1716, size: 256, offset: 2048)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2030, file: !463, line: 418, baseType: !1718, size: 768, offset: 2304)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2030, file: !463, line: 419, baseType: !1716, size: 256, offset: 3072)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2030, file: !463, line: 420, baseType: !1718, size: 768, offset: 3328)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2030, file: !463, line: 421, baseType: !1716, size: 256, offset: 4096)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2030, file: !463, line: 422, baseType: !1729, size: 1792, offset: 4352)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2030, file: !463, line: 423, baseType: !1733, size: 1920, offset: 6144)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2030, file: !463, line: 424, baseType: !1738, size: 20608, offset: 8064)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2030, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2045 = !{!1959, !2046, !2172, !2178, !2180, !2183, !2188, !2190, !2195}
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "_kernel", scope: !1961, file: !1965, line: 40, type: !2048, isLocal: false, isDefinition: true)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !345, line: 158, size: 288, elements: !2049)
!2049 = !{!2050, !2167}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2048, file: !345, line: 159, baseType: !2051, size: 192)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 192, elements: !445)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !345, line: 100, size: 192, elements: !2053)
!2053 = !{!2054, !2055, !2056, !2160, !2161, !2162, !2163}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2052, file: !345, line: 102, baseType: !152, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2052, file: !345, line: 105, baseType: !193, size: 32, offset: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2052, file: !345, line: 108, baseType: !2057, size: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2059)
!2059 = !{!2060, !2118, !2130, !2131, !2132, !2133, !2134, !2140, !2155}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2058, file: !309, line: 247, baseType: !2061, size: 384)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2062)
!2062 = !{!2063, !2087, !2094, !2095, !2096, !2105, !2106, !2107}
!2063 = !DIDerivedType(tag: DW_TAG_member, scope: !2061, file: !309, line: 60, baseType: !2064, size: 64)
!2064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2061, file: !309, line: 60, size: 64, elements: !2065)
!2065 = !{!2066, !2081}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2064, file: !309, line: 61, baseType: !2067, size: 64)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2068)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2069)
!2069 = !{!2070, !2076}
!2070 = !DIDerivedType(tag: DW_TAG_member, scope: !2068, file: !319, line: 38, baseType: !2071, size: 32)
!2071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2068, file: !319, line: 38, size: 32, elements: !2072)
!2072 = !{!2073, !2075}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2071, file: !319, line: 39, baseType: !2074, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2071, file: !319, line: 40, baseType: !2074, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, scope: !2068, file: !319, line: 42, baseType: !2077, size: 32, offset: 32)
!2077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2068, file: !319, line: 42, size: 32, elements: !2078)
!2078 = !{!2079, !2080}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2077, file: !319, line: 43, baseType: !2074, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2077, file: !319, line: 44, baseType: !2074, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2064, file: !309, line: 62, baseType: !2082, size: 64)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2083)
!2083 = !{!2084}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2082, file: !335, line: 50, baseType: !2085, size: 64)
!2085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2086, size: 64, elements: !340)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2061, file: !309, line: 68, baseType: !2088, size: 32, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2090)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2091)
!2091 = !{!2092}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2090, file: !345, line: 232, baseType: !2093, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2068)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2061, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2061, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2096 = !DIDerivedType(tag: DW_TAG_member, scope: !2061, file: !309, line: 90, baseType: !2097, size: 16, offset: 112)
!2097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2061, file: !309, line: 90, size: 16, elements: !2098)
!2098 = !{!2099, !2104}
!2099 = !DIDerivedType(tag: DW_TAG_member, scope: !2097, file: !309, line: 91, baseType: !2100, size: 16)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2097, file: !309, line: 91, size: 16, elements: !2101)
!2101 = !{!2102, !2103}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2100, file: !309, line: 96, baseType: !359, size: 8)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2100, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2097, file: !309, line: 100, baseType: !197, size: 16)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2061, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2061, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2061, file: !309, line: 131, baseType: !2108, size: 192, offset: 192)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2109)
!2109 = !{!2110, !2111, !2117}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2108, file: !345, line: 245, baseType: !2067, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2108, file: !345, line: 246, baseType: !2112, size: 32, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2113)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 32)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{null, !2116}
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2108, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2058, file: !309, line: 250, baseType: !2119, size: 288, offset: 384)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2120)
!2120 = !{!2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2119, file: !379, line: 26, baseType: !152, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2119, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2119, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2119, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2119, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2119, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2119, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2119, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2119, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2058, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2058, file: !309, line: 256, baseType: !2089, size: 64, offset: 704)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2058, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2058, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2058, file: !309, line: 300, baseType: !2135, size: 96, offset: 1056)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2136)
!2136 = !{!2137, !2138, !2139}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2135, file: !309, line: 153, baseType: !22, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2135, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2135, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2058, file: !309, line: 325, baseType: !2141, size: 32, offset: 1152)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2143)
!2143 = !{!2144, !2150, !2151}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2142, file: !406, line: 5074, baseType: !2145, size: 96)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2146)
!2146 = !{!2147, !2148, !2149}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2145, file: !410, line: 57, baseType: !413, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2145, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2145, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2142, file: !406, line: 5075, baseType: !2089, size: 64, offset: 96)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2142, file: !406, line: 5076, baseType: !2152, size: 32, offset: 160)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2153)
!2153 = !{!2154}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2152, file: !420, line: 52, baseType: !22, size: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2058, file: !309, line: 343, baseType: !2156, size: 64, offset: 1184)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2157)
!2157 = !{!2158, !2159}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2156, file: !379, line: 63, baseType: !152, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2156, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2052, file: !345, line: 111, baseType: !2057, size: 32, offset: 96)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2052, file: !345, line: 124, baseType: !107, size: 32, offset: 128)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2052, file: !345, line: 127, baseType: !195, size: 8, offset: 160)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2052, file: !345, line: 153, baseType: !2164, offset: 168)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2165, line: 33, elements: !2166)
!2165 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2166 = !{}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2048, file: !345, line: 170, baseType: !2168, size: 96, offset: 192)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !2169)
!2169 = !{!2170, !2171}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2168, file: !345, line: 86, baseType: !2057, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2168, file: !345, line: 90, baseType: !2093, size: 64, offset: 32)
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1961, file: !1965, line: 43, type: !2174, isLocal: false, isDefinition: true, align: 512)
!2174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 8704, elements: !580)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !2176)
!2176 = !{!2177}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2175, file: !577, line: 48, baseType: !120, size: 8)
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1961, file: !1965, line: 44, type: !2058, isLocal: false, isDefinition: true)
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1961, file: !1965, line: 48, type: !2182, isLocal: false, isDefinition: true)
!2182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2058, size: 1280, elements: !445)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1961, file: !1965, line: 86, type: !2185, isLocal: false, isDefinition: true, align: 512)
!2185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 16896, elements: !2186)
!2186 = !{!446, !2187}
!2187 = !DISubrange(count: 2112)
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1961, file: !1965, line: 217, type: !145, isLocal: false, isDefinition: true)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1961, file: !1965, line: 50, type: !2192, isLocal: true, isDefinition: true, align: 512)
!2192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 3072, elements: !2193)
!2193 = !{!446, !2194}
!2194 = !DISubrange(count: 384)
!2195 = !DIGlobalVariableExpression(var: !2196, expr: !DIExpression())
!2196 = distinct !DIGlobalVariable(name: "levels", scope: !2197, file: !1965, line: 232, type: !2217, isLocal: true, isDefinition: true)
!2197 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1965, file: !1965, line: 230, type: !2198, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !2200)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{null, !1964}
!2200 = !{!2201, !2202, !2212, !2216}
!2201 = !DILocalVariable(name: "level", arg: 1, scope: !2197, file: !1965, line: 230, type: !1964)
!2202 = !DILocalVariable(name: "entry", scope: !2197, file: !1965, line: 244, type: !2203)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2205)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !2206)
!2206 = !{!2207, !2211}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2205, file: !238, line: 60, baseType: !2208, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 32)
!2209 = !DISubroutineType(types: !2210)
!2210 = !{!107, !1983}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2205, file: !238, line: 65, baseType: !1983, size: 32, offset: 32)
!2212 = !DILocalVariable(name: "dev", scope: !2213, file: !1965, line: 247, type: !1983)
!2213 = distinct !DILexicalBlock(scope: !2214, file: !1965, line: 246, column: 64)
!2214 = distinct !DILexicalBlock(scope: !2215, file: !1965, line: 246, column: 2)
!2215 = distinct !DILexicalBlock(scope: !2197, file: !1965, line: 246, column: 2)
!2216 = !DILocalVariable(name: "rc", scope: !2213, file: !1965, line: 248, type: !107)
!2217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2203, size: 192, elements: !1331)
!2218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2219)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2220)
!2220 = !{!2221, !2222}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2219, file: !203, line: 17, baseType: !118, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2219, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2223 = !DIGlobalVariableExpression(var: !2224, expr: !DIExpression())
!2224 = distinct !DIGlobalVariable(name: "states_str", scope: !2225, file: !2226, line: 276, type: !2350, isLocal: true, isDefinition: true)
!2225 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2226, file: !2226, line: 271, type: !2227, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2341)
!2226 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2227 = !DISubroutineType(types: !2228)
!2228 = !{!118, !2229, !193, !185}
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2230)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2232)
!2232 = !{!2233, !2291, !2303, !2304, !2305, !2306, !2307, !2313, !2328}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2231, file: !309, line: 247, baseType: !2234, size: 384)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2235)
!2235 = !{!2236, !2260, !2267, !2268, !2269, !2278, !2279, !2280}
!2236 = !DIDerivedType(tag: DW_TAG_member, scope: !2234, file: !309, line: 60, baseType: !2237, size: 64)
!2237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2234, file: !309, line: 60, size: 64, elements: !2238)
!2238 = !{!2239, !2254}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2237, file: !309, line: 61, baseType: !2240, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2241)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2242)
!2242 = !{!2243, !2249}
!2243 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !319, line: 38, baseType: !2244, size: 32)
!2244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !319, line: 38, size: 32, elements: !2245)
!2245 = !{!2246, !2248}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2244, file: !319, line: 39, baseType: !2247, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2244, file: !319, line: 40, baseType: !2247, size: 32)
!2249 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !319, line: 42, baseType: !2250, size: 32, offset: 32)
!2250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !319, line: 42, size: 32, elements: !2251)
!2251 = !{!2252, !2253}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2250, file: !319, line: 43, baseType: !2247, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2250, file: !319, line: 44, baseType: !2247, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2237, file: !309, line: 62, baseType: !2255, size: 64)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2256)
!2256 = !{!2257}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2255, file: !335, line: 50, baseType: !2258, size: 64)
!2258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2259, size: 64, elements: !340)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2234, file: !309, line: 68, baseType: !2261, size: 32, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2263)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2264)
!2264 = !{!2265}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2263, file: !345, line: 232, baseType: !2266, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2241)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2234, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2234, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2269 = !DIDerivedType(tag: DW_TAG_member, scope: !2234, file: !309, line: 90, baseType: !2270, size: 16, offset: 112)
!2270 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2234, file: !309, line: 90, size: 16, elements: !2271)
!2271 = !{!2272, !2277}
!2272 = !DIDerivedType(tag: DW_TAG_member, scope: !2270, file: !309, line: 91, baseType: !2273, size: 16)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2270, file: !309, line: 91, size: 16, elements: !2274)
!2274 = !{!2275, !2276}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2273, file: !309, line: 96, baseType: !359, size: 8)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2273, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2270, file: !309, line: 100, baseType: !197, size: 16)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2234, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2234, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2234, file: !309, line: 131, baseType: !2281, size: 192, offset: 192)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2282)
!2282 = !{!2283, !2284, !2290}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2281, file: !345, line: 245, baseType: !2240, size: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2281, file: !345, line: 246, baseType: !2285, size: 32, offset: 64)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2286)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 32)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{null, !2289}
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2281, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2231, file: !309, line: 250, baseType: !2292, size: 288, offset: 384)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2293)
!2293 = !{!2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2292, file: !379, line: 26, baseType: !152, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2292, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2292, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2292, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2292, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2292, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2292, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2292, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2292, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2231, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2231, file: !309, line: 256, baseType: !2262, size: 64, offset: 704)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2231, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2231, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2231, file: !309, line: 300, baseType: !2308, size: 96, offset: 1056)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2309)
!2309 = !{!2310, !2311, !2312}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2308, file: !309, line: 153, baseType: !22, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2308, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2308, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2231, file: !309, line: 325, baseType: !2314, size: 32, offset: 1152)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2316)
!2316 = !{!2317, !2323, !2324}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2315, file: !406, line: 5074, baseType: !2318, size: 96)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2319)
!2319 = !{!2320, !2321, !2322}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2318, file: !410, line: 57, baseType: !413, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2318, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2318, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2315, file: !406, line: 5075, baseType: !2262, size: 64, offset: 96)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2315, file: !406, line: 5076, baseType: !2325, size: 32, offset: 160)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2326)
!2326 = !{!2327}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2325, file: !420, line: 52, baseType: !22, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2231, file: !309, line: 343, baseType: !2329, size: 64, offset: 1184)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2330)
!2330 = !{!2331, !2332}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2329, file: !379, line: 63, baseType: !152, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2329, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2333 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2334, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2335, globals: !2337, splitDebugInlining: false, nameTableKind: None)
!2334 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2335 = !{!106, !118, !564, !195, !22, !107, !2336, !24, !185, !193, !152, !566}
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2337 = !{!2223, !2338}
!2338 = !DIGlobalVariableExpression(var: !2339, expr: !DIExpression())
!2339 = distinct !DIGlobalVariable(name: "states_sz", scope: !2225, file: !2226, line: 279, type: !2340, isLocal: true, isDefinition: true)
!2340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1897, size: 256, elements: !1616)
!2341 = !{!2342, !2343, !2344, !2345, !2346, !2347, !2348}
!2342 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2225, file: !2226, line: 271, type: !2229)
!2343 = !DILocalVariable(name: "buf", arg: 2, scope: !2225, file: !2226, line: 271, type: !193)
!2344 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2225, file: !2226, line: 271, type: !185)
!2345 = !DILocalVariable(name: "off", scope: !2225, file: !2226, line: 273, type: !185)
!2346 = !DILocalVariable(name: "bit", scope: !2225, file: !2226, line: 274, type: !195)
!2347 = !DILocalVariable(name: "thread_state", scope: !2225, file: !2226, line: 275, type: !195)
!2348 = !DILocalVariable(name: "index", scope: !2349, file: !2226, line: 293, type: !195)
!2349 = distinct !DILexicalBlock(scope: !2225, file: !2226, line: 293, column: 2)
!2350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1616)
!2351 = !DIGlobalVariableExpression(var: !2352, expr: !DIExpression())
!2352 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2353, file: !2464, line: 56, type: !2451, isLocal: false, isDefinition: true)
!2353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2355, globals: !2461, splitDebugInlining: false, nameTableKind: None)
!2354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2355 = !{!2356, !193, !106, !2459, !194, !564, !896, !107, !152, !566, !2460}
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2358)
!2358 = !{!2359, !2417, !2429, !2430, !2431, !2432, !2433, !2439, !2454}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2357, file: !309, line: 247, baseType: !2360, size: 384)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2361)
!2361 = !{!2362, !2386, !2393, !2394, !2395, !2404, !2405, !2406}
!2362 = !DIDerivedType(tag: DW_TAG_member, scope: !2360, file: !309, line: 60, baseType: !2363, size: 64)
!2363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2360, file: !309, line: 60, size: 64, elements: !2364)
!2364 = !{!2365, !2380}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2363, file: !309, line: 61, baseType: !2366, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2367)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2368)
!2368 = !{!2369, !2375}
!2369 = !DIDerivedType(tag: DW_TAG_member, scope: !2367, file: !319, line: 38, baseType: !2370, size: 32)
!2370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2367, file: !319, line: 38, size: 32, elements: !2371)
!2371 = !{!2372, !2374}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2370, file: !319, line: 39, baseType: !2373, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2370, file: !319, line: 40, baseType: !2373, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, scope: !2367, file: !319, line: 42, baseType: !2376, size: 32, offset: 32)
!2376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2367, file: !319, line: 42, size: 32, elements: !2377)
!2377 = !{!2378, !2379}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2376, file: !319, line: 43, baseType: !2373, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2376, file: !319, line: 44, baseType: !2373, size: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2363, file: !309, line: 62, baseType: !2381, size: 64)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2382)
!2382 = !{!2383}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2381, file: !335, line: 50, baseType: !2384, size: 64)
!2384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2385, size: 64, elements: !340)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2360, file: !309, line: 68, baseType: !2387, size: 32, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2389)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2390)
!2390 = !{!2391}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2389, file: !345, line: 232, baseType: !2392, size: 64)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2367)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2360, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2360, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2395 = !DIDerivedType(tag: DW_TAG_member, scope: !2360, file: !309, line: 90, baseType: !2396, size: 16, offset: 112)
!2396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2360, file: !309, line: 90, size: 16, elements: !2397)
!2397 = !{!2398, !2403}
!2398 = !DIDerivedType(tag: DW_TAG_member, scope: !2396, file: !309, line: 91, baseType: !2399, size: 16)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2396, file: !309, line: 91, size: 16, elements: !2400)
!2400 = !{!2401, !2402}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2399, file: !309, line: 96, baseType: !359, size: 8)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2399, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2396, file: !309, line: 100, baseType: !197, size: 16)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2360, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2360, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2360, file: !309, line: 131, baseType: !2407, size: 192, offset: 192)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2408)
!2408 = !{!2409, !2410, !2416}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2407, file: !345, line: 245, baseType: !2366, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2407, file: !345, line: 246, baseType: !2411, size: 32, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2412)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!2413 = !DISubroutineType(types: !2414)
!2414 = !{null, !2415}
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2407, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2357, file: !309, line: 250, baseType: !2418, size: 288, offset: 384)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2419)
!2419 = !{!2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2418, file: !379, line: 26, baseType: !152, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2418, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2418, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2418, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2418, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2418, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2418, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2418, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2418, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2357, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2357, file: !309, line: 256, baseType: !2388, size: 64, offset: 704)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2357, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2357, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2357, file: !309, line: 300, baseType: !2434, size: 96, offset: 1056)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2435)
!2435 = !{!2436, !2437, !2438}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2434, file: !309, line: 153, baseType: !22, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2434, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2434, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2357, file: !309, line: 325, baseType: !2440, size: 32, offset: 1152)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 32)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2442)
!2442 = !{!2443, !2449, !2450}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2441, file: !406, line: 5074, baseType: !2444, size: 96)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2445)
!2445 = !{!2446, !2447, !2448}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2444, file: !410, line: 57, baseType: !413, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2444, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2444, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2441, file: !406, line: 5075, baseType: !2388, size: 64, offset: 96)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2441, file: !406, line: 5076, baseType: !2451, size: 32, offset: 160)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2452)
!2452 = !{!2453}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2451, file: !420, line: 52, baseType: !22, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2357, file: !309, line: 343, baseType: !2455, size: 64, offset: 1184)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2456)
!2456 = !{!2457, !2458}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2455, file: !379, line: 63, baseType: !152, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2455, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2461 = !{!2351, !2462, !2465, !2467}
!2462 = !DIGlobalVariableExpression(var: !2463, expr: !DIExpression())
!2463 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2353, file: !2464, line: 404, type: !107, isLocal: true, isDefinition: true)
!2464 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2465 = !DIGlobalVariableExpression(var: !2466, expr: !DIExpression())
!2466 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2353, file: !2464, line: 405, type: !107, isLocal: true, isDefinition: true)
!2467 = !DIGlobalVariableExpression(var: !2468, expr: !DIExpression())
!2468 = distinct !DIGlobalVariable(name: "pending_current", scope: !2353, file: !2464, line: 425, type: !2356, isLocal: true, isDefinition: true)
!2469 = !DIGlobalVariableExpression(var: !2470, expr: !DIExpression())
!2470 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2471, file: !2501, line: 19, type: !2507, isLocal: true, isDefinition: true)
!2471 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2472, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2473, globals: !2498, splitDebugInlining: false, nameTableKind: None)
!2472 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2473 = !{!564, !106, !896, !152, !566, !107, !2474, !193, !376}
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 32)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2476)
!2476 = !{!2477, !2492, !2497}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2475, file: !345, line: 245, baseType: !2478, size: 64)
!2478 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2479)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2480)
!2480 = !{!2481, !2487}
!2481 = !DIDerivedType(tag: DW_TAG_member, scope: !2479, file: !319, line: 38, baseType: !2482, size: 32)
!2482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2479, file: !319, line: 38, size: 32, elements: !2483)
!2483 = !{!2484, !2486}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2482, file: !319, line: 39, baseType: !2485, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2482, file: !319, line: 40, baseType: !2485, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, scope: !2479, file: !319, line: 42, baseType: !2488, size: 32, offset: 32)
!2488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2479, file: !319, line: 42, size: 32, elements: !2489)
!2489 = !{!2490, !2491}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2488, file: !319, line: 43, baseType: !2485, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2488, file: !319, line: 44, baseType: !2485, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2475, file: !345, line: 246, baseType: !2493, size: 32, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2494)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{null, !2474}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2475, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2498 = !{!2499, !2469, !2502, !2504}
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2471, file: !2501, line: 15, type: !566, isLocal: true, isDefinition: true)
!2501 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2502 = !DIGlobalVariableExpression(var: !2503, expr: !DIExpression())
!2503 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2471, file: !2501, line: 25, type: !107, isLocal: true, isDefinition: true)
!2504 = !DIGlobalVariableExpression(var: !2505, expr: !DIExpression())
!2505 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2471, file: !2501, line: 17, type: !2506, isLocal: true, isDefinition: true)
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2479)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2508)
!2508 = !{!2509}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2507, file: !420, line: 52, baseType: !22, size: 32)
!2510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2511 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2513, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2513 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2515, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2516, retainedTypes: !2536, splitDebugInlining: false, nameTableKind: None)
!2515 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2516 = !{!2517, !2525}
!2517 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2518, line: 69, baseType: !32, size: 32, elements: !2519)
!2518 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2519 = !{!2520, !2521, !2522, !2523, !2524}
!2520 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2521 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2522 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2523 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2524 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2525 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2518, line: 56, baseType: !32, size: 32, elements: !2526)
!2526 = !{!2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535}
!2527 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2528 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2529 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2530 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2531 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2532 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2533 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2534 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2535 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2536 = !{!107, !2517, !2525, !2537, !360, !264, !2539, !2540, !196, !198, !118, !185, !106, !22, !32, !187, !2542, !2543, !189, !188, !191, !190, !2538, !2544, !2545, !2546, !2547}
!2537 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2518, line: 31, baseType: !2538)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2539 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2540 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2518, line: 32, baseType: !2541)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !567)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 32)
!2548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2549, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2549 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2551, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2551 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2552 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2553, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2554, splitDebugInlining: false, nameTableKind: None)
!2553 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2554 = !{!118, !196, !107, !32}
!2555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2557, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2557 = !{!2558, !30}
!2558 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2559, line: 27, baseType: !32, size: 32, elements: !2560)
!2559 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2560 = !{!2561, !2562, !2563, !2564, !2565}
!2561 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2562 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2563 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2564 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2565 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2568, retainedTypes: !2569, splitDebugInlining: false, nameTableKind: None)
!2567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2568 = !{!734, !2558, !30}
!2569 = !{!922, !2570, !106, !107, !896, !152, !195, !2587}
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2572)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2573)
!2573 = !{!2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2572, file: !463, line: 413, baseType: !1716, size: 256)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2572, file: !463, line: 414, baseType: !1718, size: 768, offset: 256)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2572, file: !463, line: 415, baseType: !1716, size: 256, offset: 1024)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2572, file: !463, line: 416, baseType: !1718, size: 768, offset: 1280)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2572, file: !463, line: 417, baseType: !1716, size: 256, offset: 2048)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2572, file: !463, line: 418, baseType: !1718, size: 768, offset: 2304)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2572, file: !463, line: 419, baseType: !1716, size: 256, offset: 3072)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2572, file: !463, line: 420, baseType: !1718, size: 768, offset: 3328)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2572, file: !463, line: 421, baseType: !1716, size: 256, offset: 4096)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2572, file: !463, line: 422, baseType: !1729, size: 1792, offset: 4352)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2572, file: !463, line: 423, baseType: !1733, size: 1920, offset: 6144)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2572, file: !463, line: 424, baseType: !1738, size: 20608, offset: 8064)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2572, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2589)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2590)
!2590 = !{!2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2589, file: !463, line: 447, baseType: !467, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2589, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2589, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2589, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2589, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2589, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2589, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2589, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2589, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2589, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2589, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2589, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2589, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2589, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2589, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2589, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2589, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2589, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2589, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2589, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2589, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2612 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2613, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2613 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2615, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2616, splitDebugInlining: false, nameTableKind: None)
!2615 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2616 = !{!106, !107, !22, !2617}
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2619)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2619, file: !463, line: 447, baseType: !467, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2619, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2619, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2619, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2619, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2619, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2619, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2619, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2619, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2619, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2619, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2619, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2619, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2619, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2619, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2619, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2619, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2619, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2619, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2619, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2619, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2643, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2644, splitDebugInlining: false, nameTableKind: None)
!2643 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2644 = !{!2645, !106, !107}
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2647)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2648)
!2648 = !{!2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2647, file: !463, line: 447, baseType: !467, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2647, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2647, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2647, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2647, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2647, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2647, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2647, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2647, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2647, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2647, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2647, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2647, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2647, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2647, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2647, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2647, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2647, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2647, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2647, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2647, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2670 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2671, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2672, splitDebugInlining: false, nameTableKind: None)
!2671 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2672 = !{!2673, !152, !106, !107}
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 32)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !2676)
!2675 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2676 = !{!2677, !2682, !2687, !2692, !2697, !2702, !2707, !2712}
!2677 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 99, baseType: !2678, size: 32)
!2678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 99, size: 32, elements: !2679)
!2679 = !{!2680, !2681}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2678, file: !2675, line: 99, baseType: !152, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2678, file: !2675, line: 99, baseType: !152, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 100, baseType: !2683, size: 32, offset: 32)
!2683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 100, size: 32, elements: !2684)
!2684 = !{!2685, !2686}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2683, file: !2675, line: 100, baseType: !152, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2683, file: !2675, line: 100, baseType: !152, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 101, baseType: !2688, size: 32, offset: 64)
!2688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 101, size: 32, elements: !2689)
!2689 = !{!2690, !2691}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2688, file: !2675, line: 101, baseType: !152, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2688, file: !2675, line: 101, baseType: !152, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 102, baseType: !2693, size: 32, offset: 96)
!2693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 102, size: 32, elements: !2694)
!2694 = !{!2695, !2696}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2693, file: !2675, line: 102, baseType: !152, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2693, file: !2675, line: 102, baseType: !152, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 103, baseType: !2698, size: 32, offset: 128)
!2698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 103, size: 32, elements: !2699)
!2699 = !{!2700, !2701}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2698, file: !2675, line: 103, baseType: !152, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2698, file: !2675, line: 103, baseType: !152, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 104, baseType: !2703, size: 32, offset: 160)
!2703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 104, size: 32, elements: !2704)
!2704 = !{!2705, !2706}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2703, file: !2675, line: 104, baseType: !152, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2703, file: !2675, line: 104, baseType: !152, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 105, baseType: !2708, size: 32, offset: 192)
!2708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 105, size: 32, elements: !2709)
!2709 = !{!2710, !2711}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2708, file: !2675, line: 105, baseType: !152, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2708, file: !2675, line: 105, baseType: !152, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2674, file: !2675, line: 106, baseType: !152, size: 32, offset: 224)
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2557, retainedTypes: !2715, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2715 = !{!2716, !106, !107, !2741, !2784, !152}
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2718)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2719)
!2719 = !{!2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2718, file: !463, line: 447, baseType: !467, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2718, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2718, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2718, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2718, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2718, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2718, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2718, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2718, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2718, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2718, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2718, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2718, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2718, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2718, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2718, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2718, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2718, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2718, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2718, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2718, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2675, line: 141, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2675, line: 97, size: 256, elements: !2744)
!2744 = !{!2745}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2743, file: !2675, line: 107, baseType: !2746, size: 256)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !2747)
!2747 = !{!2748, !2753, !2758, !2763, !2768, !2773, !2778, !2783}
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 99, baseType: !2749, size: 32)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 99, size: 32, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2749, file: !2675, line: 99, baseType: !152, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2749, file: !2675, line: 99, baseType: !152, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 100, baseType: !2754, size: 32, offset: 32)
!2754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 100, size: 32, elements: !2755)
!2755 = !{!2756, !2757}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2754, file: !2675, line: 100, baseType: !152, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2754, file: !2675, line: 100, baseType: !152, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 101, baseType: !2759, size: 32, offset: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 101, size: 32, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2759, file: !2675, line: 101, baseType: !152, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2759, file: !2675, line: 101, baseType: !152, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 102, baseType: !2764, size: 32, offset: 96)
!2764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 102, size: 32, elements: !2765)
!2765 = !{!2766, !2767}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2764, file: !2675, line: 102, baseType: !152, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2764, file: !2675, line: 102, baseType: !152, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 103, baseType: !2769, size: 32, offset: 128)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 103, size: 32, elements: !2770)
!2770 = !{!2771, !2772}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2769, file: !2675, line: 103, baseType: !152, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2769, file: !2675, line: 103, baseType: !152, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 104, baseType: !2774, size: 32, offset: 160)
!2774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 104, size: 32, elements: !2775)
!2775 = !{!2776, !2777}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2774, file: !2675, line: 104, baseType: !152, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2774, file: !2675, line: 104, baseType: !152, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 105, baseType: !2779, size: 32, offset: 192)
!2779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 105, size: 32, elements: !2780)
!2780 = !{!2781, !2782}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2779, file: !2675, line: 105, baseType: !152, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2779, file: !2675, line: 105, baseType: !152, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2746, file: !2675, line: 106, baseType: !152, size: 32, offset: 224)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1701, retainedTypes: !2787, splitDebugInlining: false, nameTableKind: None)
!2786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2787 = !{!922, !896, !195, !152, !2788, !2805}
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2790)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2790, file: !463, line: 413, baseType: !1716, size: 256)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2790, file: !463, line: 414, baseType: !1718, size: 768, offset: 256)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2790, file: !463, line: 415, baseType: !1716, size: 256, offset: 1024)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2790, file: !463, line: 416, baseType: !1718, size: 768, offset: 1280)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2790, file: !463, line: 417, baseType: !1716, size: 256, offset: 2048)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2790, file: !463, line: 418, baseType: !1718, size: 768, offset: 2304)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2790, file: !463, line: 419, baseType: !1716, size: 256, offset: 3072)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2790, file: !463, line: 420, baseType: !1718, size: 768, offset: 3328)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2790, file: !463, line: 421, baseType: !1716, size: 256, offset: 4096)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2790, file: !463, line: 422, baseType: !1729, size: 1792, offset: 4352)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2790, file: !463, line: 423, baseType: !1733, size: 1920, offset: 6144)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2790, file: !463, line: 424, baseType: !1738, size: 20608, offset: 8064)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2790, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2807)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2808)
!2808 = !{!2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2807, file: !463, line: 447, baseType: !467, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2807, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2807, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2807, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2807, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2807, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2807, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2807, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2807, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2807, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2807, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2807, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2807, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2807, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2807, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2807, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2807, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2807, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2807, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2807, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2807, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2830 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2831, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2832, splitDebugInlining: false, nameTableKind: None)
!2831 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2832 = !{!2833, !106, !107}
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2835)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2836)
!2836 = !{!2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2835, file: !463, line: 447, baseType: !467, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2835, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2835, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2835, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2835, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2835, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2835, file: !463, line: 453, baseType: !1753, size: 96, offset: 192)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2835, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2835, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2835, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2835, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2835, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2835, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2835, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2835, file: !463, line: 461, baseType: !1764, size: 64, offset: 512)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2835, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2835, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2835, file: !463, line: 464, baseType: !1768, size: 128, offset: 640)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2835, file: !463, line: 465, baseType: !1770, size: 160, offset: 768)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2835, file: !463, line: 466, baseType: !1772, size: 160, offset: 928)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2835, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2858 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2859, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2860, splitDebugInlining: false, nameTableKind: None)
!2859 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2860 = !{!120, !193, !185, !1121, !2861, !196, !106}
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2863 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2864, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2865, splitDebugInlining: false, nameTableKind: None)
!2864 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2865 = !{!2866}
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 32)
!2867 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 532, baseType: !2868)
!2868 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 500, size: 1088, elements: !2869)
!2869 = !{!2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899}
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2868, file: !223, line: 502, baseType: !227, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2868, file: !223, line: 503, baseType: !227, size: 32, offset: 32)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2868, file: !223, line: 504, baseType: !227, size: 32, offset: 64)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2868, file: !223, line: 505, baseType: !227, size: 32, offset: 96)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2868, file: !223, line: 506, baseType: !227, size: 32, offset: 128)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2868, file: !223, line: 507, baseType: !227, size: 32, offset: 160)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2868, file: !223, line: 508, baseType: !227, size: 32, offset: 192)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2868, file: !223, line: 509, baseType: !152, size: 32, offset: 224)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2868, file: !223, line: 510, baseType: !227, size: 32, offset: 256)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2868, file: !223, line: 511, baseType: !227, size: 32, offset: 288)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2868, file: !223, line: 512, baseType: !990, size: 64, offset: 320)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2868, file: !223, line: 513, baseType: !227, size: 32, offset: 384)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2868, file: !223, line: 514, baseType: !227, size: 32, offset: 416)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2868, file: !223, line: 515, baseType: !227, size: 32, offset: 448)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2868, file: !223, line: 516, baseType: !152, size: 32, offset: 480)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2868, file: !223, line: 517, baseType: !227, size: 32, offset: 512)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2868, file: !223, line: 518, baseType: !227, size: 32, offset: 544)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2868, file: !223, line: 519, baseType: !990, size: 64, offset: 576)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2868, file: !223, line: 520, baseType: !227, size: 32, offset: 640)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2868, file: !223, line: 521, baseType: !227, size: 32, offset: 672)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2868, file: !223, line: 522, baseType: !227, size: 32, offset: 704)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2868, file: !223, line: 523, baseType: !152, size: 32, offset: 736)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2868, file: !223, line: 524, baseType: !227, size: 32, offset: 768)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2868, file: !223, line: 525, baseType: !227, size: 32, offset: 800)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2868, file: !223, line: 526, baseType: !990, size: 64, offset: 832)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2868, file: !223, line: 527, baseType: !227, size: 32, offset: 896)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2868, file: !223, line: 528, baseType: !227, size: 32, offset: 928)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2868, file: !223, line: 529, baseType: !990, size: 64, offset: 960)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2868, file: !223, line: 530, baseType: !227, size: 32, offset: 1024)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2868, file: !223, line: 531, baseType: !227, size: 32, offset: 1056)
!2900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2901, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2901 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2902 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2903, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2904, retainedTypes: !2920, splitDebugInlining: false, nameTableKind: None)
!2903 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2904 = !{!2905, !2912, !2916}
!2905 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2906, line: 38, baseType: !32, size: 32, elements: !2907)
!2906 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2907 = !{!2908, !2909, !2910, !2911}
!2908 = !DIEnumerator(name: "HAL_OK", value: 0)
!2909 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2910 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2911 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2912 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !963, line: 184, baseType: !32, size: 32, elements: !2913)
!2913 = !{!2914, !2915}
!2914 = !DIEnumerator(name: "RESET", value: 0)
!2915 = !DIEnumerator(name: "SET", value: 1)
!2916 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !963, line: 190, baseType: !32, size: 32, elements: !2917)
!2917 = !{!2918, !2919}
!2918 = !DIEnumerator(name: "DISABLE", value: 0)
!2919 = !DIEnumerator(name: "ENABLE", value: 1)
!2920 = !{!106, !2921, !195, !152, !1610, !2955, !2961, !2972, !197, !2973, !566}
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 32)
!2922 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 532, baseType: !2923)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 500, size: 1088, elements: !2924)
!2924 = !{!2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2923, file: !223, line: 502, baseType: !227, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2923, file: !223, line: 503, baseType: !227, size: 32, offset: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2923, file: !223, line: 504, baseType: !227, size: 32, offset: 64)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2923, file: !223, line: 505, baseType: !227, size: 32, offset: 96)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2923, file: !223, line: 506, baseType: !227, size: 32, offset: 128)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2923, file: !223, line: 507, baseType: !227, size: 32, offset: 160)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2923, file: !223, line: 508, baseType: !227, size: 32, offset: 192)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2923, file: !223, line: 509, baseType: !152, size: 32, offset: 224)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2923, file: !223, line: 510, baseType: !227, size: 32, offset: 256)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2923, file: !223, line: 511, baseType: !227, size: 32, offset: 288)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2923, file: !223, line: 512, baseType: !990, size: 64, offset: 320)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2923, file: !223, line: 513, baseType: !227, size: 32, offset: 384)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2923, file: !223, line: 514, baseType: !227, size: 32, offset: 416)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2923, file: !223, line: 515, baseType: !227, size: 32, offset: 448)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2923, file: !223, line: 516, baseType: !152, size: 32, offset: 480)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2923, file: !223, line: 517, baseType: !227, size: 32, offset: 512)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2923, file: !223, line: 518, baseType: !227, size: 32, offset: 544)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2923, file: !223, line: 519, baseType: !990, size: 64, offset: 576)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2923, file: !223, line: 520, baseType: !227, size: 32, offset: 640)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2923, file: !223, line: 521, baseType: !227, size: 32, offset: 672)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2923, file: !223, line: 522, baseType: !227, size: 32, offset: 704)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2923, file: !223, line: 523, baseType: !152, size: 32, offset: 736)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2923, file: !223, line: 524, baseType: !227, size: 32, offset: 768)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2923, file: !223, line: 525, baseType: !227, size: 32, offset: 800)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2923, file: !223, line: 526, baseType: !990, size: 64, offset: 832)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2923, file: !223, line: 527, baseType: !227, size: 32, offset: 896)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2923, file: !223, line: 528, baseType: !227, size: 32, offset: 928)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2923, file: !223, line: 529, baseType: !990, size: 64, offset: 960)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2923, file: !223, line: 530, baseType: !227, size: 32, offset: 1024)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2923, file: !223, line: 531, baseType: !227, size: 32, offset: 1056)
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 32)
!2956 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 494, baseType: !2957)
!2957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 490, size: 64, elements: !2958)
!2958 = !{!2959, !2960}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2957, file: !223, line: 492, baseType: !227, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2957, file: !223, line: 493, baseType: !227, size: 32, offset: 32)
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 32)
!2962 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 369, baseType: !2963)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 360, size: 224, elements: !2964)
!2964 = !{!2965, !2966, !2967, !2968, !2969, !2970, !2971}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2963, file: !223, line: 362, baseType: !227, size: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2963, file: !223, line: 363, baseType: !227, size: 32, offset: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2963, file: !223, line: 364, baseType: !227, size: 32, offset: 64)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2963, file: !223, line: 365, baseType: !227, size: 32, offset: 96)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2963, file: !223, line: 366, baseType: !227, size: 32, offset: 128)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2963, file: !223, line: 367, baseType: !227, size: 32, offset: 160)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2963, file: !223, line: 368, baseType: !227, size: 32, offset: 192)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 32)
!2974 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 441, baseType: !2975)
!2975 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 430, size: 320, elements: !2976)
!2976 = !{!2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2975, file: !223, line: 432, baseType: !227, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2975, file: !223, line: 433, baseType: !227, size: 32, offset: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2975, file: !223, line: 434, baseType: !227, size: 32, offset: 64)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2975, file: !223, line: 435, baseType: !227, size: 32, offset: 96)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2975, file: !223, line: 436, baseType: !227, size: 32, offset: 128)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2975, file: !223, line: 437, baseType: !227, size: 32, offset: 160)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2975, file: !223, line: 438, baseType: !227, size: 32, offset: 192)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2975, file: !223, line: 439, baseType: !227, size: 32, offset: 224)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2975, file: !223, line: 440, baseType: !1275, size: 64, offset: 256)
!2986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2988, retainedTypes: !2989, splitDebugInlining: false, nameTableKind: None)
!2987 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!2988 = !{!962}
!2989 = !{!2990, !152, !2998, !3004, !3015}
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !2992)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2992, file: !463, line: 766, baseType: !227, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2992, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2992, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2992, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 494, baseType: !3000)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 490, size: 64, elements: !3001)
!3001 = !{!3002, !3003}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3000, file: !223, line: 492, baseType: !227, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3000, file: !223, line: 493, baseType: !227, size: 32, offset: 32)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 369, baseType: !3006)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 360, size: 224, elements: !3007)
!3007 = !{!3008, !3009, !3010, !3011, !3012, !3013, !3014}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3006, file: !223, line: 362, baseType: !227, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3006, file: !223, line: 363, baseType: !227, size: 32, offset: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3006, file: !223, line: 364, baseType: !227, size: 32, offset: 64)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3006, file: !223, line: 365, baseType: !227, size: 32, offset: 96)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3006, file: !223, line: 366, baseType: !227, size: 32, offset: 128)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3006, file: !223, line: 367, baseType: !227, size: 32, offset: 160)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3006, file: !223, line: 368, baseType: !227, size: 32, offset: 192)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 532, baseType: !3017)
!3017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 500, size: 1088, elements: !3018)
!3018 = !{!3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3017, file: !223, line: 502, baseType: !227, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3017, file: !223, line: 503, baseType: !227, size: 32, offset: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3017, file: !223, line: 504, baseType: !227, size: 32, offset: 64)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3017, file: !223, line: 505, baseType: !227, size: 32, offset: 96)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3017, file: !223, line: 506, baseType: !227, size: 32, offset: 128)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3017, file: !223, line: 507, baseType: !227, size: 32, offset: 160)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3017, file: !223, line: 508, baseType: !227, size: 32, offset: 192)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3017, file: !223, line: 509, baseType: !152, size: 32, offset: 224)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3017, file: !223, line: 510, baseType: !227, size: 32, offset: 256)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3017, file: !223, line: 511, baseType: !227, size: 32, offset: 288)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3017, file: !223, line: 512, baseType: !990, size: 64, offset: 320)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3017, file: !223, line: 513, baseType: !227, size: 32, offset: 384)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3017, file: !223, line: 514, baseType: !227, size: 32, offset: 416)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3017, file: !223, line: 515, baseType: !227, size: 32, offset: 448)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3017, file: !223, line: 516, baseType: !152, size: 32, offset: 480)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3017, file: !223, line: 517, baseType: !227, size: 32, offset: 512)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3017, file: !223, line: 518, baseType: !227, size: 32, offset: 544)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3017, file: !223, line: 519, baseType: !990, size: 64, offset: 576)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3017, file: !223, line: 520, baseType: !227, size: 32, offset: 640)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3017, file: !223, line: 521, baseType: !227, size: 32, offset: 672)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3017, file: !223, line: 522, baseType: !227, size: 32, offset: 704)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3017, file: !223, line: 523, baseType: !152, size: 32, offset: 736)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3017, file: !223, line: 524, baseType: !227, size: 32, offset: 768)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3017, file: !223, line: 525, baseType: !227, size: 32, offset: 800)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3017, file: !223, line: 526, baseType: !990, size: 64, offset: 832)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3017, file: !223, line: 527, baseType: !227, size: 32, offset: 896)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3017, file: !223, line: 528, baseType: !227, size: 32, offset: 928)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3017, file: !223, line: 529, baseType: !990, size: 64, offset: 960)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3017, file: !223, line: 530, baseType: !227, size: 32, offset: 1024)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3017, file: !223, line: 531, baseType: !227, size: 32, offset: 1056)
!3049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3050, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3051, splitDebugInlining: false, nameTableKind: None)
!3050 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!3051 = !{!106, !185}
!3052 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3053, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3054, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3053 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!3054 = !{!3055, !3062, !2558, !30}
!3055 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3056, line: 14, baseType: !32, size: 32, elements: !3057)
!3056 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3057 = !{!3058, !3059, !3060, !3061}
!3058 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3059 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3060 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3061 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3062 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3056, line: 42, baseType: !32, size: 32, elements: !3063)
!3063 = !{!3064, !3065, !3066, !3067, !3068, !3069}
!3064 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3065 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3066 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3067 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3068 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3069 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3070 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3071, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3071 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!3072 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3073, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3074, splitDebugInlining: false, nameTableKind: None)
!3073 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!3074 = !{!22, !106, !107}
!3075 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3076, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3076 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!3077 = !{!"Ubuntu clang version 14.0.6"}
!3078 = !{i32 7, !"Dwarf Version", i32 4}
!3079 = !{i32 2, !"Debug Info Version", i32 3}
!3080 = !{i32 1, !"wchar_size", i32 4}
!3081 = !{i32 1, !"min_enum_size", i32 4}
!3082 = !{i32 1, !"branch-target-enforcement", i32 0}
!3083 = !{i32 1, !"sign-return-address", i32 0}
!3084 = !{i32 1, !"sign-return-address-all", i32 0}
!3085 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3086 = !{i32 7, !"frame-pointer", i32 2}
!3087 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3088, file: !3088, line: 26, type: !3089, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !2166)
!3088 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3089 = !DISubroutineType(types: !3090)
!3090 = !{null}
!3091 = !DILocation(line: 28, column: 1, scope: !3087)
!3092 = !{i64 2155129765, i64 2155129785, i64 2155129848}
!3093 = !DILocation(line: 29, column: 1, scope: !3087)
!3094 = !{i64 2155130180, i64 2155130200, i64 2155130263}
!3095 = !DILocation(line: 30, column: 1, scope: !3087)
!3096 = !{i64 2155130599, i64 2155130619, i64 2155130682}
!3097 = !DILocation(line: 31, column: 1, scope: !3087)
!3098 = !{i64 2155131018, i64 2155131038, i64 2155131101}
!3099 = !DILocation(line: 33, column: 1, scope: !3087)
!3100 = !{i64 2155131310, i64 2155131330, i64 2155131393}
!3101 = !DILocation(line: 35, column: 1, scope: !3087)
!3102 = !{i64 2155131635, i64 2155131655, i64 2155131718}
!3103 = !DILocation(line: 50, column: 1, scope: !3087)
!3104 = !{i64 2155132062, i64 2155132082, i64 2155132145}
!3105 = !DILocation(line: 54, column: 1, scope: !3087)
!3106 = !{i64 2155132501, i64 2155132521, i64 2155132584}
!3107 = !DILocation(line: 61, column: 1, scope: !3087)
!3108 = !{i64 2155132818, i64 2155132838, i64 2155132901}
!3109 = !DILocation(line: 63, column: 1, scope: !3087)
!3110 = !{i64 2155133198, i64 2155133218, i64 2155133281}
!3111 = !DILocation(line: 64, column: 1, scope: !3087)
!3112 = !{i64 2155133720, i64 2155133740, i64 2155133803}
!3113 = !DILocation(line: 65, column: 1, scope: !3087)
!3114 = !{i64 2155134218, i64 2155134238, i64 2155134301}
!3115 = !DILocation(line: 66, column: 1, scope: !3087)
!3116 = !{i64 2155134700, i64 2155134720, i64 2155134783}
!3117 = !DILocation(line: 67, column: 1, scope: !3087)
!3118 = !{i64 2155135207, i64 2155135227, i64 2155135290}
!3119 = !DILocation(line: 68, column: 1, scope: !3087)
!3120 = !{i64 2155135695, i64 2155135715, i64 2155135778}
!3121 = !DILocation(line: 70, column: 1, scope: !3087)
!3122 = !{i64 2155140224, i64 2155140244, i64 2155140307}
!3123 = !DILocation(line: 71, column: 1, scope: !3087)
!3124 = !{i64 2155140666, i64 2155140686, i64 2155140749}
!3125 = !DILocation(line: 72, column: 1, scope: !3087)
!3126 = !{i64 2155141124, i64 2155141144, i64 2155141207}
!3127 = !DILocation(line: 79, column: 1, scope: !3087)
!3128 = !{i64 2155141578, i64 2155141598, i64 2155141661}
!3129 = !DILocation(line: 80, column: 1, scope: !3087)
!3130 = !{i64 2155142089, i64 2155142109, i64 2155142172}
!3131 = !DILocation(line: 82, column: 1, scope: !3087)
!3132 = !{i64 2155142580, i64 2155142600, i64 2155142663}
!3133 = !DILocation(line: 97, column: 1, scope: !3087)
!3134 = !{i64 2155142917, i64 2155142937, i64 2155143000}
!3135 = !DILocation(line: 99, column: 1, scope: !3087)
!3136 = !{i64 2155143135, i64 2155143155, i64 2155143218}
!3137 = !DILocation(line: 102, column: 1, scope: !3087)
!3138 = !{i64 2155143392, i64 2155143412, i64 2155143475}
!3139 = !DILocation(line: 105, column: 1, scope: !3087)
!3140 = !{i64 2155143632, i64 2155143652, i64 2155143715}
!3141 = !DILocation(line: 115, column: 1, scope: !3087)
!3142 = !{i64 2155143971, i64 2155143991, i64 2155144054}
!3143 = !DILocation(line: 118, column: 1, scope: !3087)
!3144 = !{i64 2155144315, i64 2155144335, i64 2155144398}
!3145 = !DILocation(line: 32, column: 1, scope: !3146)
!3146 = !DILexicalBlockFile(scope: !3087, file: !3147, discriminator: 0)
!3147 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3148 = !{i64 2155144671, i64 2155144691, i64 2155144754}
!3149 = !DILocation(line: 33, column: 1, scope: !3146)
!3150 = !{i64 2155145183, i64 2155145203, i64 2155145266}
!3151 = !DILocation(line: 53, column: 1, scope: !3146)
!3152 = !{i64 2155145691, i64 2155145711, i64 2155145774}
!3153 = !DILocation(line: 54, column: 1, scope: !3146)
!3154 = !{i64 2155146109, i64 2155146129, i64 2155146192}
!3155 = !DILocation(line: 55, column: 1, scope: !3146)
!3156 = !{i64 2155146527, i64 2155146547, i64 2155146610}
!3157 = !DILocation(line: 56, column: 1, scope: !3146)
!3158 = !{i64 2155146945, i64 2155146965, i64 2155147028}
!3159 = !DILocation(line: 57, column: 1, scope: !3146)
!3160 = !{i64 2155147363, i64 2155147383, i64 2155147446}
!3161 = !DILocation(line: 58, column: 1, scope: !3146)
!3162 = !{i64 2155147781, i64 2155147801, i64 2155147864}
!3163 = !DILocation(line: 59, column: 1, scope: !3146)
!3164 = !{i64 2155148199, i64 2155148219, i64 2155148282}
!3165 = !DILocation(line: 60, column: 1, scope: !3146)
!3166 = !{i64 2155148623, i64 2155148643, i64 2155148706}
!3167 = !DILocation(line: 61, column: 1, scope: !3146)
!3168 = !{i64 2155148940, i64 2155148960, i64 2155149023}
!3169 = !DILocation(line: 70, column: 1, scope: !3146)
!3170 = !{i64 2155149169, i64 2155149189, i64 2155149252}
!3171 = !DILocation(line: 72, column: 1, scope: !3146)
!3172 = !{i64 2155149501, i64 2155149521, i64 2155149584}
!3173 = !DILocation(line: 73, column: 1, scope: !3146)
!3174 = !{i64 2155154012, i64 2155154032, i64 2155154095}
!3175 = !DILocation(line: 74, column: 1, scope: !3146)
!3176 = !{i64 2155154462, i64 2155154482, i64 2155154545}
!3177 = !DILocation(line: 75, column: 1, scope: !3146)
!3178 = !{i64 2155154912, i64 2155154932, i64 2155154995}
!3179 = !DILocation(line: 76, column: 1, scope: !3146)
!3180 = !{i64 2155155362, i64 2155155382, i64 2155155445}
!3181 = !DILocation(line: 77, column: 1, scope: !3146)
!3182 = !{i64 2155155812, i64 2155155832, i64 2155155895}
!3183 = !DILocation(line: 78, column: 1, scope: !3146)
!3184 = !{i64 2155156262, i64 2155156282, i64 2155156345}
!3185 = !DILocation(line: 79, column: 1, scope: !3146)
!3186 = !{i64 2155156712, i64 2155156732, i64 2155156795}
!3187 = !DILocation(line: 80, column: 1, scope: !3146)
!3188 = !{i64 2155157165, i64 2155157185, i64 2155157248}
!3189 = !DILocation(line: 84, column: 1, scope: !3146)
!3190 = !{i64 2155157497, i64 2155157517, i64 2155157580}
!3191 = !DILocation(line: 91, column: 1, scope: !3146)
!3192 = !{i64 2155157894, i64 2155157914, i64 2155157977}
!3193 = !DILocation(line: 93, column: 1, scope: !3146)
!3194 = !{i64 2155158261, i64 2155158281, i64 2155158344}
!3195 = !DILocation(line: 106, column: 1, scope: !3146)
!3196 = !{i64 2155158531, i64 2155158551, i64 2155158614}
!3197 = !DILocation(line: 11, column: 1, scope: !3198)
!3198 = !DILexicalBlockFile(scope: !3087, file: !3199, discriminator: 0)
!3199 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3200 = distinct !DISubprogram(name: "_framework_tests_test_assert_wrapper", scope: !111, file: !111, line: 18, type: !131, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3201)
!3201 = !{!3202}
!3202 = !DILocalVariable(name: "data", arg: 1, scope: !3200, file: !111, line: 18, type: !106)
!3203 = !DILocation(line: 0, scope: !3200)
!3204 = !DILocation(line: 18, column: 1, scope: !3200)
!3205 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3206, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3215)
!3206 = !DISubroutineType(types: !3207)
!3207 = !{!107, !106, !185, !152, !118, !3208}
!3208 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3209, line: 99, baseType: !3210)
!3209 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3210 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3209, line: 40, baseType: !3211)
!3211 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3212)
!3212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3213)
!3213 = !{!3214}
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3212, file: !200, line: 18, baseType: !106, size: 32)
!3215 = !{!3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3251, !3260, !3263, !3264, !3267, !3270, !3273, !3276, !3282}
!3216 = !DILocalVariable(name: "packaged", arg: 1, scope: !3205, file: !200, line: 233, type: !106)
!3217 = !DILocalVariable(name: "len", arg: 2, scope: !3205, file: !200, line: 233, type: !185)
!3218 = !DILocalVariable(name: "flags", arg: 3, scope: !3205, file: !200, line: 233, type: !152)
!3219 = !DILocalVariable(name: "fmt", arg: 4, scope: !3205, file: !200, line: 234, type: !118)
!3220 = !DILocalVariable(name: "ap", arg: 5, scope: !3205, file: !200, line: 234, type: !3208)
!3221 = !DILocalVariable(name: "buf0", scope: !3205, file: !200, line: 247, type: !194)
!3222 = !DILocalVariable(name: "buf", scope: !3205, file: !200, line: 248, type: !194)
!3223 = !DILocalVariable(name: "size", scope: !3205, file: !200, line: 249, type: !32)
!3224 = !DILocalVariable(name: "align", scope: !3205, file: !200, line: 250, type: !32)
!3225 = !DILocalVariable(name: "str_ptr_pos", scope: !3205, file: !200, line: 251, type: !3226)
!3226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !1949)
!3227 = !DILocalVariable(name: "str_ptr_arg", scope: !3205, file: !200, line: 252, type: !3226)
!3228 = !DILocalVariable(name: "s_idx", scope: !3205, file: !200, line: 253, type: !32)
!3229 = !DILocalVariable(name: "s_rw_cnt", scope: !3205, file: !200, line: 254, type: !32)
!3230 = !DILocalVariable(name: "s_ro_cnt", scope: !3205, file: !200, line: 255, type: !32)
!3231 = !DILocalVariable(name: "arg_idx", scope: !3205, file: !200, line: 256, type: !107)
!3232 = !DILocalVariable(name: "i", scope: !3205, file: !200, line: 257, type: !32)
!3233 = !DILocalVariable(name: "s", scope: !3205, file: !200, line: 258, type: !118)
!3234 = !DILocalVariable(name: "parsing", scope: !3205, file: !200, line: 259, type: !145)
!3235 = !DILocalVariable(name: "rws_pos_en", scope: !3205, file: !200, line: 263, type: !145)
!3236 = !DILocalVariable(name: "fros_cnt", scope: !3205, file: !200, line: 268, type: !107)
!3237 = !DILocalVariable(name: "is_str_arg", scope: !3205, file: !200, line: 269, type: !145)
!3238 = !DILocalVariable(name: "pkg_hdr", scope: !3205, file: !200, line: 270, type: !3239)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 32)
!3240 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3241, line: 78, size: 32, elements: !3242)
!3241 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3242 = !{!3243, !3250}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3240, file: !3241, line: 80, baseType: !3244, size: 32)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3241, line: 45, size: 32, elements: !3245)
!3245 = !{!3246, !3247, !3248, !3249}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3244, file: !3241, line: 47, baseType: !195, size: 8)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3244, file: !3241, line: 50, baseType: !195, size: 8, offset: 8)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3244, file: !3241, line: 53, baseType: !195, size: 8, offset: 16)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3244, file: !3241, line: 56, baseType: !195, size: 8, offset: 24)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3240, file: !3241, line: 82, baseType: !106, size: 32)
!3251 = !DILocalVariable(name: "v", scope: !3252, file: !200, line: 567, type: !3256)
!3252 = distinct !DILexicalBlock(scope: !3253, file: !200, line: 562, column: 14)
!3253 = distinct !DILexicalBlock(scope: !3254, file: !200, line: 481, column: 18)
!3254 = distinct !DILexicalBlock(scope: !3255, file: !200, line: 466, column: 3)
!3255 = distinct !DILexicalBlock(scope: !3205, file: !200, line: 343, column: 15)
!3256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3205, file: !200, line: 567, size: 64, elements: !3257)
!3257 = !{!3258, !3259}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3256, file: !200, line: 567, baseType: !183, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3256, file: !200, line: 567, baseType: !181, size: 64)
!3260 = !DILocalVariable(name: "is_ro", scope: !3261, file: !200, line: 620, type: !145)
!3261 = distinct !DILexicalBlock(scope: !3262, file: !200, line: 613, column: 19)
!3262 = distinct !DILexicalBlock(scope: !3255, file: !200, line: 613, column: 7)
!3263 = !DILocalVariable(name: "do_ro", scope: !3261, file: !200, line: 621, type: !145)
!3264 = !DILocalVariable(name: "s_ptr_idx", scope: !3265, file: !200, line: 626, type: !152)
!3265 = distinct !DILexicalBlock(scope: !3266, file: !200, line: 625, column: 11)
!3266 = distinct !DILexicalBlock(scope: !3261, file: !200, line: 623, column: 8)
!3267 = !DILocalVariable(name: "v", scope: !3268, file: !200, line: 684, type: !107)
!3268 = distinct !DILexicalBlock(scope: !3269, file: !200, line: 683, column: 35)
!3269 = distinct !DILexicalBlock(scope: !3262, file: !200, line: 683, column: 14)
!3270 = !DILocalVariable(name: "v", scope: !3271, file: !200, line: 691, type: !189)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !200, line: 690, column: 36)
!3272 = distinct !DILexicalBlock(scope: !3269, file: !200, line: 690, column: 14)
!3273 = !DILocalVariable(name: "v", scope: !3274, file: !200, line: 698, type: !191)
!3274 = distinct !DILexicalBlock(scope: !3275, file: !200, line: 697, column: 41)
!3275 = distinct !DILexicalBlock(scope: !3272, file: !200, line: 697, column: 14)
!3276 = !DILocalVariable(name: "pos", scope: !3277, file: !200, line: 762, type: !195)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !200, line: 757, column: 31)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !200, line: 757, column: 3)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !200, line: 757, column: 3)
!3280 = distinct !DILexicalBlock(scope: !3281, file: !200, line: 756, column: 16)
!3281 = distinct !DILexicalBlock(scope: !3205, file: !200, line: 756, column: 6)
!3282 = !DILabel(scope: !3261, name: "process_string", file: !200, line: 615)
!3283 = !DILocation(line: 0, scope: !3205)
!3284 = !DILocation(line: 251, column: 2, scope: !3205)
!3285 = !DILocation(line: 251, column: 10, scope: !3205)
!3286 = !DILocation(line: 252, column: 2, scope: !3205)
!3287 = !DILocation(line: 252, column: 10, scope: !3205)
!3288 = !DILocation(line: 263, column: 29, scope: !3205)
!3289 = !DILocation(line: 263, column: 21, scope: !3205)
!3290 = !DILocation(line: 268, column: 21, scope: !3205)
!3291 = !DILocation(line: 268, column: 19, scope: !3205)
!3292 = !DILocation(line: 273, column: 6, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3205, file: !200, line: 273, column: 6)
!3294 = !DILocation(line: 273, column: 26, scope: !3293)
!3295 = !DILocation(line: 273, column: 6, scope: !3205)
!3296 = !DILocation(line: 297, column: 6, scope: !3205)
!3297 = !DILocation(line: 305, column: 11, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3205, file: !200, line: 305, column: 6)
!3299 = !DILocation(line: 305, column: 6, scope: !3205)
!3300 = !DILocation(line: 327, column: 19, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3205, file: !200, line: 327, column: 6)
!3302 = !DILocation(line: 327, column: 22, scope: !3301)
!3303 = !DILocation(line: 327, column: 33, scope: !3301)
!3304 = !DILocation(line: 327, column: 50, scope: !3301)
!3305 = !DILocation(line: 327, column: 6, scope: !3205)
!3306 = !DILocation(line: 338, column: 9, scope: !3205)
!3307 = !DILocation(line: 341, column: 2, scope: !3205)
!3308 = !DILocation(line: 472, column: 8, scope: !3254)
!3309 = !DILocation(line: 473, column: 14, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3311, file: !200, line: 473, column: 9)
!3311 = distinct !DILexicalBlock(scope: !3312, file: !200, line: 472, column: 18)
!3312 = distinct !DILexicalBlock(scope: !3254, file: !200, line: 472, column: 8)
!3313 = !DILocation(line: 473, column: 9, scope: !3311)
!3314 = !DILocation(line: 479, column: 5, scope: !3311)
!3315 = !DILocation(line: 468, column: 9, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3254, file: !200, line: 468, column: 8)
!3317 = !DILocation(line: 468, column: 8, scope: !3316)
!3318 = !DILocation(line: 468, column: 15, scope: !3316)
!3319 = !DILocation(line: 468, column: 8, scope: !3254)
!3320 = distinct !{!3320, !3321, !3322}
!3321 = !DILocation(line: 343, column: 2, scope: !3205)
!3322 = !DILocation(line: 712, column: 2, scope: !3205)
!3323 = !DILocation(line: 481, column: 4, scope: !3254)
!3324 = !DILocation(line: 484, column: 12, scope: !3253)
!3325 = !DILocation(line: 485, column: 5, scope: !3253)
!3326 = !DILocation(line: 505, column: 5, scope: !3253)
!3327 = !DILocation(line: 518, column: 5, scope: !3253)
!3328 = !DILocation(line: 523, column: 5, scope: !3253)
!3329 = !DILocation(line: 532, column: 9, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3253, file: !200, line: 532, column: 9)
!3331 = !DILocation(line: 532, column: 17, scope: !3330)
!3332 = !DILocation(line: 532, column: 9, scope: !3253)
!3333 = !DILocation(line: 533, column: 10, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3335, file: !200, line: 533, column: 10)
!3335 = distinct !DILexicalBlock(scope: !3330, file: !200, line: 532, column: 25)
!3336 = !DILocation(line: 533, column: 18, scope: !3334)
!3337 = !DILocation(line: 0, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3252, file: !200, line: 569, column: 9)
!3339 = !DILocation(line: 0, scope: !3252)
!3340 = !DILocation(line: 579, column: 20, scope: !3252)
!3341 = !DILocation(line: 579, column: 11, scope: !3252)
!3342 = !DILocation(line: 580, column: 9, scope: !3252)
!3343 = !DILocation(line: 582, column: 21, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3345, file: !200, line: 582, column: 10)
!3345 = distinct !DILexicalBlock(scope: !3346, file: !200, line: 580, column: 23)
!3346 = distinct !DILexicalBlock(scope: !3252, file: !200, line: 580, column: 9)
!3347 = !DILocation(line: 582, column: 28, scope: !3344)
!3348 = !DILocation(line: 582, column: 10, scope: !3345)
!3349 = !DILocation(line: 0, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3351, file: !200, line: 587, column: 17)
!3351 = distinct !DILexicalBlock(scope: !3345, file: !200, line: 585, column: 10)
!3352 = !DILocation(line: 593, column: 9, scope: !3252)
!3353 = !DILocation(line: 600, column: 5, scope: !3253)
!3354 = !DILocation(line: 605, column: 18, scope: !3255)
!3355 = !DILocation(line: 605, column: 9, scope: !3255)
!3356 = !DILocation(line: 608, column: 20, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3255, file: !200, line: 608, column: 7)
!3358 = !DILocation(line: 608, column: 23, scope: !3357)
!3359 = !DILocation(line: 608, column: 34, scope: !3357)
!3360 = !DILocation(line: 608, column: 41, scope: !3357)
!3361 = !DILocation(line: 608, column: 7, scope: !3255)
!3362 = !DILocation(line: 613, column: 7, scope: !3255)
!3363 = !DILocation(line: 614, column: 8, scope: !3261)
!3364 = !DILocation(line: 614, column: 4, scope: !3261)
!3365 = !DILocation(line: 256, column: 6, scope: !3205)
!3366 = !DILocation(line: 254, column: 15, scope: !3205)
!3367 = !DILocation(line: 320, column: 7, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3298, file: !200, line: 305, column: 20)
!3369 = !DILocation(line: 615, column: 1, scope: !3261)
!3370 = !DILocation(line: 616, column: 8, scope: !3261)
!3371 = !DILocation(line: 617, column: 5, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !200, line: 616, column: 22)
!3373 = distinct !DILexicalBlock(scope: !3261, file: !200, line: 616, column: 8)
!3374 = !DILocation(line: 617, column: 25, scope: !3372)
!3375 = !DILocation(line: 618, column: 4, scope: !3372)
!3376 = !DILocation(line: 620, column: 26, scope: !3261)
!3377 = !DILocation(line: 620, column: 29, scope: !3261)
!3378 = !DILocation(line: 620, column: 17, scope: !3261)
!3379 = !DILocation(line: 620, column: 43, scope: !3261)
!3380 = !DILocation(line: 0, scope: !3261)
!3381 = !DILocation(line: 623, column: 14, scope: !3266)
!3382 = !DILocation(line: 626, column: 26, scope: !3265)
!3383 = !DILocation(line: 626, column: 37, scope: !3265)
!3384 = !DILocation(line: 0, scope: !3265)
!3385 = !DILocation(line: 634, column: 15, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3265, file: !200, line: 634, column: 9)
!3387 = !DILocation(line: 635, column: 6, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !200, line: 635, column: 6)
!3389 = distinct !DILexicalBlock(scope: !3390, file: !200, line: 635, column: 6)
!3390 = distinct !DILexicalBlock(scope: !3391, file: !200, line: 635, column: 6)
!3391 = distinct !DILexicalBlock(scope: !3386, file: !200, line: 634, column: 44)
!3392 = !DILocation(line: 639, column: 15, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3265, file: !200, line: 639, column: 9)
!3394 = !DILocation(line: 639, column: 9, scope: !3265)
!3395 = !DILocation(line: 640, column: 6, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !200, line: 640, column: 6)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !200, line: 640, column: 6)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !200, line: 640, column: 6)
!3399 = distinct !DILexicalBlock(scope: !3393, file: !200, line: 639, column: 43)
!3400 = !DILocation(line: 644, column: 9, scope: !3265)
!3401 = !DILocation(line: 649, column: 27, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3403, file: !200, line: 644, column: 23)
!3403 = distinct !DILexicalBlock(scope: !3265, file: !200, line: 644, column: 9)
!3404 = !DILocation(line: 649, column: 6, scope: !3402)
!3405 = !DILocation(line: 649, column: 25, scope: !3402)
!3406 = !DILocation(line: 650, column: 27, scope: !3402)
!3407 = !DILocation(line: 650, column: 6, scope: !3402)
!3408 = !DILocation(line: 650, column: 25, scope: !3402)
!3409 = !DILocation(line: 651, column: 10, scope: !3402)
!3410 = !DILocation(line: 653, column: 26, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !200, line: 651, column: 17)
!3412 = distinct !DILexicalBlock(scope: !3402, file: !200, line: 651, column: 10)
!3413 = !DILocation(line: 654, column: 15, scope: !3411)
!3414 = !DILocation(line: 655, column: 6, scope: !3411)
!3415 = !DILocation(line: 656, column: 15, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3412, file: !200, line: 655, column: 13)
!3417 = !DILocation(line: 658, column: 16, scope: !3403)
!3418 = !DILocation(line: 663, column: 10, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !200, line: 658, column: 23)
!3420 = distinct !DILexicalBlock(scope: !3403, file: !200, line: 658, column: 16)
!3421 = !DILocation(line: 664, column: 5, scope: !3419)
!3422 = !DILocation(line: 664, column: 16, scope: !3420)
!3423 = !DILocation(line: 669, column: 10, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3425, file: !200, line: 664, column: 28)
!3425 = distinct !DILexicalBlock(scope: !3420, file: !200, line: 664, column: 16)
!3426 = !DILocation(line: 670, column: 5, scope: !3424)
!3427 = !DILocation(line: 675, column: 13, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3425, file: !200, line: 670, column: 12)
!3429 = !DILocation(line: 675, column: 27, scope: !3428)
!3430 = !DILocation(line: 675, column: 10, scope: !3428)
!3431 = !DILocation(line: 678, column: 10, scope: !3265)
!3432 = !DILocation(line: 680, column: 8, scope: !3261)
!3433 = !DILocation(line: 683, column: 14, scope: !3262)
!3434 = !DILocation(line: 684, column: 12, scope: !3268)
!3435 = !DILocation(line: 0, scope: !3268)
!3436 = !DILocation(line: 686, column: 8, scope: !3268)
!3437 = !DILocation(line: 687, column: 5, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !200, line: 686, column: 22)
!3439 = distinct !DILexicalBlock(scope: !3268, file: !200, line: 686, column: 8)
!3440 = !DILocation(line: 687, column: 17, scope: !3438)
!3441 = !DILocation(line: 688, column: 4, scope: !3438)
!3442 = !DILocation(line: 698, column: 18, scope: !3274)
!3443 = !DILocation(line: 0, scope: !3274)
!3444 = !DILocation(line: 700, column: 8, scope: !3274)
!3445 = !DILocation(line: 704, column: 6, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !200, line: 703, column: 12)
!3447 = distinct !DILexicalBlock(scope: !3448, file: !200, line: 701, column: 9)
!3448 = distinct !DILexicalBlock(scope: !3449, file: !200, line: 700, column: 22)
!3449 = distinct !DILexicalBlock(scope: !3274, file: !200, line: 700, column: 8)
!3450 = !DILocation(line: 704, column: 24, scope: !3446)
!3451 = !DILocation(line: 706, column: 4, scope: !3448)
!3452 = !DILocation(line: 709, column: 4, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3454, file: !200, line: 709, column: 4)
!3454 = distinct !DILexicalBlock(scope: !3455, file: !200, line: 709, column: 4)
!3455 = distinct !DILexicalBlock(scope: !3456, file: !200, line: 709, column: 4)
!3456 = distinct !DILexicalBlock(scope: !3275, file: !200, line: 708, column: 10)
!3457 = !DILocation(line: 0, scope: !3269)
!3458 = !DILocation(line: 0, scope: !3255)
!3459 = !DILocation(line: 720, column: 6, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3205, file: !200, line: 720, column: 6)
!3461 = !DILocation(line: 720, column: 17, scope: !3460)
!3462 = !DILocation(line: 720, column: 31, scope: !3460)
!3463 = !DILocation(line: 720, column: 6, scope: !3205)
!3464 = !DILocation(line: 721, column: 3, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3466, file: !200, line: 721, column: 3)
!3466 = distinct !DILexicalBlock(scope: !3467, file: !200, line: 721, column: 3)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !200, line: 721, column: 3)
!3468 = distinct !DILexicalBlock(scope: !3460, file: !200, line: 720, column: 38)
!3469 = !DILocation(line: 729, column: 6, scope: !3205)
!3470 = !DILocation(line: 730, column: 21, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3472, file: !200, line: 729, column: 20)
!3472 = distinct !DILexicalBlock(scope: !3205, file: !200, line: 729, column: 6)
!3473 = !DILocation(line: 730, column: 27, scope: !3471)
!3474 = !DILocation(line: 730, column: 3, scope: !3471)
!3475 = !DILocation(line: 737, column: 22, scope: !3205)
!3476 = !DILocation(line: 737, column: 20, scope: !3205)
!3477 = !DILocation(line: 0, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3205, file: !200, line: 739, column: 6)
!3479 = !DILocation(line: 745, column: 17, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3478, file: !200, line: 743, column: 9)
!3481 = !DILocation(line: 745, column: 25, scope: !3480)
!3482 = !DILocation(line: 746, column: 17, scope: !3480)
!3483 = !DILocation(line: 746, column: 28, scope: !3480)
!3484 = !DILocation(line: 749, column: 29, scope: !3205)
!3485 = !DILocation(line: 749, column: 16, scope: !3205)
!3486 = !DILocation(line: 749, column: 27, scope: !3205)
!3487 = !DILocation(line: 756, column: 6, scope: !3281)
!3488 = !DILocation(line: 756, column: 6, scope: !3205)
!3489 = !DILocation(line: 757, column: 3, scope: !3279)
!3490 = !DILocation(line: 758, column: 10, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3277, file: !200, line: 758, column: 8)
!3492 = !DILocation(line: 758, column: 25, scope: !3491)
!3493 = !DILocation(line: 758, column: 8, scope: !3277)
!3494 = !DILocation(line: 0, scope: !3277)
!3495 = !DILocation(line: 765, column: 8, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3277, file: !200, line: 765, column: 8)
!3497 = !DILocation(line: 765, column: 19, scope: !3496)
!3498 = !DILocation(line: 765, column: 23, scope: !3496)
!3499 = !DILocation(line: 765, column: 8, scope: !3277)
!3500 = !DILocation(line: 762, column: 33, scope: !3277)
!3501 = !DILocation(line: 769, column: 8, scope: !3277)
!3502 = !DILocation(line: 769, column: 11, scope: !3277)
!3503 = !DILocation(line: 757, column: 27, scope: !3278)
!3504 = !DILocation(line: 757, column: 17, scope: !3278)
!3505 = distinct !{!3505, !3489, !3506}
!3506 = !DILocation(line: 770, column: 3, scope: !3279)
!3507 = !DILocation(line: 774, column: 16, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !200, line: 774, column: 2)
!3509 = distinct !DILexicalBlock(scope: !3205, file: !200, line: 774, column: 2)
!3510 = !DILocation(line: 774, column: 2, scope: !3509)
!3511 = !DILocation(line: 776, column: 16, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !200, line: 776, column: 7)
!3513 = distinct !DILexicalBlock(scope: !3508, file: !200, line: 774, column: 30)
!3514 = !DILocation(line: 776, column: 19, scope: !3512)
!3515 = !DILocation(line: 776, column: 34, scope: !3512)
!3516 = !DILocation(line: 776, column: 7, scope: !3513)
!3517 = !DILocation(line: 780, column: 7, scope: !3513)
!3518 = !DILocation(line: 782, column: 13, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3520, file: !200, line: 780, column: 19)
!3520 = distinct !DILexicalBlock(scope: !3513, file: !200, line: 780, column: 7)
!3521 = !DILocation(line: 782, column: 8, scope: !3519)
!3522 = !DILocation(line: 782, column: 11, scope: !3519)
!3523 = !DILocation(line: 783, column: 3, scope: !3519)
!3524 = !DILocation(line: 785, column: 26, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3520, file: !200, line: 783, column: 10)
!3526 = !DILocation(line: 785, column: 41, scope: !3525)
!3527 = !DILocation(line: 785, column: 24, scope: !3525)
!3528 = !DILocation(line: 785, column: 8, scope: !3525)
!3529 = !DILocation(line: 787, column: 52, scope: !3525)
!3530 = !DILocation(line: 789, column: 11, scope: !3525)
!3531 = !DILocation(line: 789, column: 21, scope: !3525)
!3532 = !DILocation(line: 0, scope: !3520)
!3533 = !DILocation(line: 793, column: 7, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3513, file: !200, line: 793, column: 7)
!3535 = !DILocation(line: 793, column: 18, scope: !3534)
!3536 = !DILocation(line: 793, column: 22, scope: !3534)
!3537 = !DILocation(line: 793, column: 29, scope: !3534)
!3538 = !DILocation(line: 793, column: 7, scope: !3513)
!3539 = !DILocation(line: 797, column: 12, scope: !3513)
!3540 = !DILocation(line: 797, column: 7, scope: !3513)
!3541 = !DILocation(line: 797, column: 10, scope: !3513)
!3542 = !DILocation(line: 799, column: 3, scope: !3513)
!3543 = !DILocation(line: 800, column: 7, scope: !3513)
!3544 = !DILocation(line: 801, column: 2, scope: !3513)
!3545 = !DILocation(line: 338, column: 4, scope: !3205)
!3546 = !DILocation(line: 774, column: 26, scope: !3508)
!3547 = distinct !{!3547, !3510, !3548}
!3548 = !DILocation(line: 801, column: 2, scope: !3509)
!3549 = !DILocation(line: 808, column: 9, scope: !3205)
!3550 = !DILocation(line: 808, column: 2, scope: !3205)
!3551 = !DILocation(line: 813, column: 1, scope: !3205)
!3552 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3553, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3555)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{!145, !118}
!3555 = !{!3556}
!3556 = !DILocalVariable(name: "addr", arg: 1, scope: !3552, file: !200, line: 33, type: !118)
!3557 = !DILocation(line: 0, scope: !3552)
!3558 = !DILocation(line: 41, column: 9, scope: !3552)
!3559 = !DILocation(line: 41, column: 2, scope: !3552)
!3560 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3561, file: !3561, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3562)
!3561 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3562 = !{!3563}
!3563 = !DILocalVariable(name: "addr", arg: 1, scope: !3560, file: !3561, line: 24, type: !13)
!3564 = !DILocation(line: 0, scope: !3560)
!3565 = !DILocation(line: 49, column: 30, scope: !3560)
!3566 = !DILocation(line: 49, column: 57, scope: !3560)
!3567 = !DILocation(line: 49, column: 2, scope: !3560)
!3568 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3569, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3571)
!3569 = !DISubroutineType(types: !3570)
!3570 = !{!107, !106, !185, !152, !118, null}
!3571 = !{!3572, !3573, !3574, !3575, !3576, !3577}
!3572 = !DILocalVariable(name: "packaged", arg: 1, scope: !3568, file: !200, line: 815, type: !106)
!3573 = !DILocalVariable(name: "len", arg: 2, scope: !3568, file: !200, line: 815, type: !185)
!3574 = !DILocalVariable(name: "flags", arg: 3, scope: !3568, file: !200, line: 815, type: !152)
!3575 = !DILocalVariable(name: "format", arg: 4, scope: !3568, file: !200, line: 816, type: !118)
!3576 = !DILocalVariable(name: "ap", scope: !3568, file: !200, line: 818, type: !3208)
!3577 = !DILocalVariable(name: "ret", scope: !3568, file: !200, line: 819, type: !107)
!3578 = !DILocation(line: 0, scope: !3568)
!3579 = !DILocation(line: 818, column: 2, scope: !3568)
!3580 = !DILocation(line: 818, column: 10, scope: !3568)
!3581 = !DILocation(line: 821, column: 2, scope: !3568)
!3582 = !DILocation(line: 822, column: 8, scope: !3568)
!3583 = !DILocation(line: 823, column: 2, scope: !3568)
!3584 = !DILocation(line: 825, column: 1, scope: !3568)
!3585 = !DILocation(line: 824, column: 2, scope: !3568)
!3586 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3587, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3597)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{!107, !3589, !3593, !106, !106}
!3589 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3241, line: 297, baseType: !3590)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 32)
!3591 = !DISubroutineType(types: !3592)
!3592 = !{!107, null}
!3593 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3241, line: 328, baseType: !3594)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 32)
!3595 = !DISubroutineType(types: !3596)
!3596 = !{!107, !3589, !106, !118, !3208}
!3597 = !{!3598, !3599, !3600, !3601, !3602, !3603, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616}
!3598 = !DILocalVariable(name: "out", arg: 1, scope: !3586, file: !200, line: 827, type: !3589)
!3599 = !DILocalVariable(name: "formatter", arg: 2, scope: !3586, file: !200, line: 828, type: !3593)
!3600 = !DILocalVariable(name: "ctx", arg: 3, scope: !3586, file: !200, line: 829, type: !106)
!3601 = !DILocalVariable(name: "packaged", arg: 4, scope: !3586, file: !200, line: 829, type: !106)
!3602 = !DILocalVariable(name: "buf", scope: !3586, file: !200, line: 831, type: !194)
!3603 = !DILocalVariable(name: "hdr", scope: !3586, file: !200, line: 832, type: !3604)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 32)
!3605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3241, line: 96, size: 64, elements: !3606)
!3606 = !{!3607, !3608}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3605, file: !3241, line: 98, baseType: !3240, size: 32)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3605, file: !3241, line: 101, baseType: !193, size: 32, offset: 32)
!3609 = !DILocalVariable(name: "s", scope: !3586, file: !200, line: 833, type: !193)
!3610 = !DILocalVariable(name: "ps", scope: !3586, file: !200, line: 833, type: !192)
!3611 = !DILocalVariable(name: "i", scope: !3586, file: !200, line: 834, type: !32)
!3612 = !DILocalVariable(name: "args_size", scope: !3586, file: !200, line: 834, type: !32)
!3613 = !DILocalVariable(name: "s_nbr", scope: !3586, file: !200, line: 834, type: !32)
!3614 = !DILocalVariable(name: "ros_nbr", scope: !3586, file: !200, line: 834, type: !32)
!3615 = !DILocalVariable(name: "rws_nbr", scope: !3586, file: !200, line: 834, type: !32)
!3616 = !DILocalVariable(name: "s_idx", scope: !3586, file: !200, line: 834, type: !32)
!3617 = !DILocation(line: 0, scope: !3586)
!3618 = !DILocation(line: 836, column: 10, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3586, file: !200, line: 836, column: 6)
!3620 = !DILocation(line: 836, column: 6, scope: !3586)
!3621 = !DILocation(line: 842, column: 28, scope: !3586)
!3622 = !DILocation(line: 842, column: 14, scope: !3586)
!3623 = !DILocation(line: 852, column: 16, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !200, line: 852, column: 2)
!3625 = distinct !DILexicalBlock(scope: !3586, file: !200, line: 852, column: 2)
!3626 = !DILocation(line: 852, column: 2, scope: !3625)
!3627 = !DILocation(line: 841, column: 28, scope: !3586)
!3628 = !DILocation(line: 841, column: 14, scope: !3586)
!3629 = !DILocation(line: 841, column: 32, scope: !3586)
!3630 = !DILocation(line: 847, column: 19, scope: !3586)
!3631 = !DILocation(line: 843, column: 28, scope: !3586)
!3632 = !DILocation(line: 843, column: 14, scope: !3586)
!3633 = !DILocation(line: 847, column: 31, scope: !3586)
!3634 = !DILocation(line: 844, column: 28, scope: !3586)
!3635 = !DILocation(line: 844, column: 14, scope: !3586)
!3636 = !DILocation(line: 847, column: 45, scope: !3586)
!3637 = !DILocation(line: 847, column: 41, scope: !3586)
!3638 = !DILocation(line: 854, column: 24, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3624, file: !200, line: 852, column: 30)
!3640 = !DILocation(line: 854, column: 11, scope: !3639)
!3641 = !DILocation(line: 855, column: 30, scope: !3639)
!3642 = !DILocation(line: 855, column: 22, scope: !3639)
!3643 = !DILocation(line: 855, column: 8, scope: !3639)
!3644 = !DILocation(line: 857, column: 7, scope: !3639)
!3645 = !DILocation(line: 859, column: 8, scope: !3639)
!3646 = !DILocation(line: 859, column: 18, scope: !3639)
!3647 = !DILocation(line: 859, column: 5, scope: !3639)
!3648 = !DILocation(line: 852, column: 26, scope: !3624)
!3649 = distinct !{!3649, !3626, !3650}
!3650 = !DILocation(line: 860, column: 2, scope: !3625)
!3651 = !DILocation(line: 863, column: 6, scope: !3586)
!3652 = !DILocation(line: 866, column: 56, scope: !3586)
!3653 = !DILocation(line: 866, column: 9, scope: !3586)
!3654 = !DILocation(line: 866, column: 2, scope: !3586)
!3655 = !DILocation(line: 867, column: 1, scope: !3586)
!3656 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3657, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3659)
!3657 = !DISubroutineType(types: !3658)
!3658 = !{!107, !3589, !3593, !106, !118, !106}
!3659 = !{!3660, !3661, !3662, !3663, !3664, !3665}
!3660 = !DILocalVariable(name: "out", arg: 1, scope: !3656, file: !200, line: 179, type: !3589)
!3661 = !DILocalVariable(name: "formatter", arg: 2, scope: !3656, file: !200, line: 180, type: !3593)
!3662 = !DILocalVariable(name: "ctx", arg: 3, scope: !3656, file: !200, line: 181, type: !106)
!3663 = !DILocalVariable(name: "fmt", arg: 4, scope: !3656, file: !200, line: 182, type: !118)
!3664 = !DILocalVariable(name: "buf", arg: 5, scope: !3656, file: !200, line: 182, type: !106)
!3665 = !DILocalVariable(name: "u", scope: !3656, file: !200, line: 187, type: !3666)
!3666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3656, file: !200, line: 184, size: 32, elements: !3667)
!3667 = !{!3668, !3669}
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3666, file: !200, line: 185, baseType: !3208, size: 32)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3666, file: !200, line: 186, baseType: !106, size: 32)
!3670 = !DILocation(line: 0, scope: !3656)
!3671 = !DILocation(line: 191, column: 9, scope: !3656)
!3672 = !DILocation(line: 191, column: 2, scope: !3656)
!3673 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3674, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3676)
!3674 = !DISubroutineType(types: !3675)
!3675 = !{!145, !118, !107}
!3676 = !{!3677, !3678, !3679, !3680, !3681}
!3677 = !DILocalVariable(name: "fmt", arg: 1, scope: !3673, file: !200, line: 881, type: !118)
!3678 = !DILocalVariable(name: "n", arg: 2, scope: !3673, file: !200, line: 881, type: !107)
!3679 = !DILocalVariable(name: "c", scope: !3673, file: !200, line: 883, type: !120)
!3680 = !DILocalVariable(name: "mod", scope: !3673, file: !200, line: 884, type: !145)
!3681 = !DILocalVariable(name: "cnt", scope: !3673, file: !200, line: 885, type: !107)
!3682 = !DILocation(line: 0, scope: !3673)
!3683 = !DILocation(line: 887, column: 14, scope: !3673)
!3684 = !DILocation(line: 887, column: 22, scope: !3673)
!3685 = !DILocation(line: 887, column: 2, scope: !3673)
!3686 = !DILocation(line: 887, column: 18, scope: !3673)
!3687 = !DILocation(line: 888, column: 7, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3673, file: !200, line: 887, column: 31)
!3689 = !DILocation(line: 889, column: 12, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !200, line: 889, column: 8)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !200, line: 888, column: 12)
!3692 = distinct !DILexicalBlock(scope: !3688, file: !200, line: 888, column: 7)
!3693 = !DILocation(line: 889, column: 8, scope: !3691)
!3694 = !DILocation(line: 890, column: 11, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !200, line: 890, column: 9)
!3696 = distinct !DILexicalBlock(scope: !3690, file: !200, line: 889, column: 18)
!3697 = !DILocation(line: 890, column: 9, scope: !3696)
!3698 = !DILocation(line: 892, column: 16, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3695, file: !200, line: 892, column: 16)
!3700 = !DILocation(line: 892, column: 16, scope: !3695)
!3701 = !DILocation(line: 895, column: 15, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3690, file: !200, line: 895, column: 15)
!3703 = !DILocation(line: 895, column: 15, scope: !3690)
!3704 = !DILocation(line: 900, column: 9, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3688, file: !200, line: 900, column: 7)
!3706 = !DILocation(line: 900, column: 7, scope: !3688)
!3707 = distinct !{!3707, !3685, !3708}
!3708 = !DILocation(line: 903, column: 2, scope: !3673)
!3709 = !DILocation(line: 906, column: 1, scope: !3673)
!3710 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3711, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3713)
!3711 = !DISubroutineType(types: !3712)
!3712 = !{!145, !120}
!3713 = !{!3714}
!3714 = !DILocalVariable(name: "c", arg: 1, scope: !3710, file: !200, line: 873, type: !120)
!3715 = !DILocation(line: 0, scope: !3710)
!3716 = !DILocation(line: 875, column: 19, scope: !3710)
!3717 = !DILocation(line: 875, column: 2, scope: !3710)
!3718 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3719, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3725)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{!107, !106, !185, !3721, !106, !152, !2784, !185}
!3721 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3241, line: 308, baseType: !3722)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 32)
!3723 = !DISubroutineType(types: !3724)
!3724 = !{!107, !13, !185, !106}
!3725 = !{!3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3743, !3744, !3745, !3746, !3747, !3753, !3756, !3757, !3758, !3760, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3776, !3779, !3780, !3781, !3782, !3783, !3784, !3786, !3789, !3790, !3791}
!3726 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3718, file: !200, line: 908, type: !106)
!3727 = !DILocalVariable(name: "in_len", arg: 2, scope: !3718, file: !200, line: 909, type: !185)
!3728 = !DILocalVariable(name: "cb", arg: 3, scope: !3718, file: !200, line: 910, type: !3721)
!3729 = !DILocalVariable(name: "ctx", arg: 4, scope: !3718, file: !200, line: 911, type: !106)
!3730 = !DILocalVariable(name: "flags", arg: 5, scope: !3718, file: !200, line: 912, type: !152)
!3731 = !DILocalVariable(name: "strl", arg: 6, scope: !3718, file: !200, line: 913, type: !2784)
!3732 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3718, file: !200, line: 914, type: !185)
!3733 = !DILocalVariable(name: "buf", scope: !3718, file: !200, line: 918, type: !194)
!3734 = !DILocalVariable(name: "buf32", scope: !3718, file: !200, line: 919, type: !1016)
!3735 = !DILocalVariable(name: "args_size", scope: !3718, file: !200, line: 920, type: !32)
!3736 = !DILocalVariable(name: "ros_nbr", scope: !3718, file: !200, line: 920, type: !32)
!3737 = !DILocalVariable(name: "rws_nbr", scope: !3718, file: !200, line: 920, type: !32)
!3738 = !DILocalVariable(name: "fmt_present", scope: !3718, file: !200, line: 921, type: !145)
!3739 = !DILocalVariable(name: "rw_cpy", scope: !3718, file: !200, line: 922, type: !145)
!3740 = !DILocalVariable(name: "ro_cpy", scope: !3718, file: !200, line: 923, type: !145)
!3741 = !DILocalVariable(name: "in_desc", scope: !3718, file: !200, line: 924, type: !3742)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 32)
!3743 = !DILocalVariable(name: "out_len", scope: !3718, file: !200, line: 960, type: !107)
!3744 = !DILocalVariable(name: "fmt", scope: !3718, file: !200, line: 965, type: !118)
!3745 = !DILocalVariable(name: "str_pos", scope: !3718, file: !200, line: 966, type: !194)
!3746 = !DILocalVariable(name: "strl_cnt", scope: !3718, file: !200, line: 967, type: !185)
!3747 = !DILocalVariable(name: "i", scope: !3748, file: !200, line: 973, type: !107)
!3748 = distinct !DILexicalBlock(scope: !3749, file: !200, line: 973, column: 4)
!3749 = distinct !DILexicalBlock(scope: !3750, file: !200, line: 972, column: 15)
!3750 = distinct !DILexicalBlock(scope: !3751, file: !200, line: 972, column: 7)
!3751 = distinct !DILexicalBlock(scope: !3752, file: !200, line: 970, column: 18)
!3752 = distinct !DILexicalBlock(scope: !3718, file: !200, line: 970, column: 6)
!3753 = !DILocalVariable(name: "str", scope: !3754, file: !200, line: 974, type: !118)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !200, line: 973, column: 38)
!3755 = distinct !DILexicalBlock(scope: !3748, file: !200, line: 973, column: 4)
!3756 = !DILocalVariable(name: "len", scope: !3754, file: !200, line: 975, type: !107)
!3757 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3751, file: !200, line: 990, type: !145)
!3758 = !DILocalVariable(name: "i", scope: !3759, file: !200, line: 995, type: !107)
!3759 = distinct !DILexicalBlock(scope: !3751, file: !200, line: 995, column: 3)
!3760 = !DILocalVariable(name: "arg_idx", scope: !3761, file: !200, line: 996, type: !195)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !200, line: 995, column: 37)
!3762 = distinct !DILexicalBlock(scope: !3759, file: !200, line: 995, column: 3)
!3763 = !DILocalVariable(name: "arg_pos", scope: !3761, file: !200, line: 997, type: !195)
!3764 = !DILocalVariable(name: "str", scope: !3761, file: !200, line: 998, type: !118)
!3765 = !DILocalVariable(name: "is_ro", scope: !3761, file: !200, line: 999, type: !145)
!3766 = !DILocalVariable(name: "len", scope: !3761, file: !200, line: 1000, type: !107)
!3767 = !DILocalVariable(name: "out_desc", scope: !3718, file: !200, line: 1038, type: !3244)
!3768 = !DILocalVariable(name: "cpy_str_pos", scope: !3718, file: !200, line: 1040, type: !3226)
!3769 = !DILocalVariable(name: "keep_str_pos", scope: !3718, file: !200, line: 1042, type: !3226)
!3770 = !DILocalVariable(name: "scpy_cnt", scope: !3718, file: !200, line: 1043, type: !195)
!3771 = !DILocalVariable(name: "keep_cnt", scope: !3718, file: !200, line: 1044, type: !195)
!3772 = !DILocalVariable(name: "dst", scope: !3718, file: !200, line: 1045, type: !194)
!3773 = !DILocalVariable(name: "rv", scope: !3718, file: !200, line: 1046, type: !107)
!3774 = !DILocalVariable(name: "i", scope: !3775, file: !200, line: 1074, type: !107)
!3775 = distinct !DILexicalBlock(scope: !3718, file: !200, line: 1074, column: 2)
!3776 = !DILocalVariable(name: "arg_idx", scope: !3777, file: !200, line: 1075, type: !195)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !200, line: 1074, column: 36)
!3778 = distinct !DILexicalBlock(scope: !3775, file: !200, line: 1074, column: 2)
!3779 = !DILocalVariable(name: "arg_pos", scope: !3777, file: !200, line: 1076, type: !195)
!3780 = !DILocalVariable(name: "str", scope: !3777, file: !200, line: 1077, type: !118)
!3781 = !DILocalVariable(name: "is_ro", scope: !3777, file: !200, line: 1078, type: !145)
!3782 = !DILocalVariable(name: "in_desc_backup", scope: !3718, file: !200, line: 1114, type: !3244)
!3783 = !DILocalVariable(name: "strs_len", scope: !3718, file: !200, line: 1134, type: !185)
!3784 = !DILocalVariable(name: "i", scope: !3785, file: !200, line: 1143, type: !107)
!3785 = distinct !DILexicalBlock(scope: !3718, file: !200, line: 1143, column: 2)
!3786 = !DILocalVariable(name: "loc", scope: !3787, file: !200, line: 1144, type: !195)
!3787 = distinct !DILexicalBlock(scope: !3788, file: !200, line: 1143, column: 37)
!3788 = distinct !DILexicalBlock(scope: !3785, file: !200, line: 1143, column: 2)
!3789 = !DILocalVariable(name: "str", scope: !3787, file: !200, line: 1145, type: !118)
!3790 = !DILocalVariable(name: "str_len", scope: !3787, file: !200, line: 1146, type: !197)
!3791 = !DILabel(scope: !3792, name: "calculate_string_length", file: !200, line: 1021)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !200, line: 1020, column: 56)
!3793 = distinct !DILexicalBlock(scope: !3794, file: !200, line: 1020, column: 15)
!3794 = distinct !DILexicalBlock(scope: !3761, file: !200, line: 1014, column: 8)
!3795 = !DILocation(line: 0, scope: !3718)
!3796 = !DILocation(line: 916, column: 2, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !200, line: 916, column: 2)
!3798 = distinct !DILexicalBlock(scope: !3718, file: !200, line: 916, column: 2)
!3799 = !DILocation(line: 916, column: 2, scope: !3798)
!3800 = !DILocation(line: 916, column: 2, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3797, file: !200, line: 916, column: 2)
!3802 = !DILocation(line: 919, column: 20, scope: !3718)
!3803 = !DILocation(line: 921, column: 27, scope: !3718)
!3804 = !DILocation(line: 921, column: 21, scope: !3718)
!3805 = !DILocation(line: 926, column: 18, scope: !3718)
!3806 = !DILocation(line: 926, column: 11, scope: !3718)
!3807 = !DILocation(line: 926, column: 34, scope: !3718)
!3808 = !DILocation(line: 931, column: 21, scope: !3718)
!3809 = !DILocation(line: 931, column: 12, scope: !3718)
!3810 = !DILocation(line: 932, column: 11, scope: !3718)
!3811 = !DILocation(line: 932, column: 19, scope: !3718)
!3812 = !DILocation(line: 938, column: 21, scope: !3718)
!3813 = !DILocation(line: 938, column: 12, scope: !3718)
!3814 = !DILocation(line: 939, column: 19, scope: !3718)
!3815 = !DILocation(line: 939, column: 23, scope: !3718)
!3816 = !DILocation(line: 946, column: 14, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3718, file: !200, line: 946, column: 6)
!3818 = !DILocation(line: 947, column: 7, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !200, line: 947, column: 7)
!3820 = distinct !DILexicalBlock(scope: !3817, file: !200, line: 946, column: 26)
!3821 = !DILocation(line: 947, column: 7, scope: !3820)
!3822 = !DILocation(line: 948, column: 4, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3819, file: !200, line: 947, column: 11)
!3824 = !DILocation(line: 949, column: 3, scope: !3823)
!3825 = !DILocation(line: 958, column: 23, scope: !3718)
!3826 = !DILocation(line: 958, column: 14, scope: !3718)
!3827 = !DILocation(line: 958, column: 27, scope: !3718)
!3828 = !DILocation(line: 965, column: 41, scope: !3718)
!3829 = !DILocation(line: 965, column: 20, scope: !3718)
!3830 = !DILocation(line: 966, column: 22, scope: !3718)
!3831 = !DILocation(line: 970, column: 9, scope: !3752)
!3832 = !DILocation(line: 970, column: 6, scope: !3718)
!3833 = !DILocation(line: 972, column: 7, scope: !3751)
!3834 = !DILocation(line: 0, scope: !3748)
!3835 = !DILocation(line: 973, column: 4, scope: !3748)
!3836 = !DILocation(line: 974, column: 46, scope: !3754)
!3837 = !DILocation(line: 974, column: 40, scope: !3754)
!3838 = !DILocation(line: 974, column: 23, scope: !3754)
!3839 = !DILocation(line: 0, scope: !3754)
!3840 = !DILocation(line: 975, column: 15, scope: !3754)
!3841 = !DILocation(line: 978, column: 14, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3754, file: !200, line: 978, column: 9)
!3843 = !DILocation(line: 979, column: 25, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3842, file: !200, line: 978, column: 38)
!3845 = !DILocation(line: 979, column: 19, scope: !3844)
!3846 = !DILocation(line: 979, column: 6, scope: !3844)
!3847 = !DILocation(line: 979, column: 23, scope: !3844)
!3848 = !DILocation(line: 980, column: 5, scope: !3844)
!3849 = !DILocation(line: 981, column: 13, scope: !3754)
!3850 = !DILocation(line: 982, column: 12, scope: !3754)
!3851 = !DILocation(line: 973, column: 34, scope: !3755)
!3852 = !DILocation(line: 973, column: 22, scope: !3755)
!3853 = distinct !{!3853, !3835, !3854}
!3854 = !DILocation(line: 983, column: 4, scope: !3748)
!3855 = !DILocation(line: 985, column: 16, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !200, line: 985, column: 8)
!3857 = distinct !DILexicalBlock(scope: !3750, file: !200, line: 984, column: 10)
!3858 = !DILocation(line: 967, column: 9, scope: !3718)
!3859 = !DILocation(line: 971, column: 11, scope: !3751)
!3860 = !DILocation(line: 0, scope: !3751)
!3861 = !DILocation(line: 0, scope: !3759)
!3862 = !DILocation(line: 995, column: 21, scope: !3762)
!3863 = !DILocation(line: 995, column: 3, scope: !3759)
!3864 = !DILocation(line: 990, column: 34, scope: !3751)
!3865 = !DILocation(line: 990, column: 26, scope: !3751)
!3866 = !DILocation(line: 996, column: 30, scope: !3761)
!3867 = !DILocation(line: 0, scope: !3761)
!3868 = !DILocation(line: 997, column: 30, scope: !3761)
!3869 = !DILocation(line: 997, column: 22, scope: !3761)
!3870 = !DILocation(line: 998, column: 39, scope: !3761)
!3871 = !DILocation(line: 998, column: 22, scope: !3761)
!3872 = !DILocation(line: 999, column: 17, scope: !3761)
!3873 = !DILocation(line: 1002, column: 20, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3761, file: !200, line: 1002, column: 8)
!3875 = !DILocation(line: 996, column: 22, scope: !3761)
!3876 = !DILocation(line: 1002, column: 35, scope: !3874)
!3877 = !DILocation(line: 1002, column: 23, scope: !3874)
!3878 = !DILocation(line: 1002, column: 8, scope: !3761)
!3879 = !DILocation(line: 1003, column: 5, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3881, file: !200, line: 1003, column: 5)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !200, line: 1003, column: 5)
!3882 = distinct !DILexicalBlock(scope: !3883, file: !200, line: 1003, column: 5)
!3883 = distinct !DILexicalBlock(scope: !3884, file: !200, line: 1003, column: 5)
!3884 = distinct !DILexicalBlock(scope: !3874, file: !200, line: 1002, column: 45)
!3885 = !DILocation(line: 1010, column: 13, scope: !3884)
!3886 = !DILocation(line: 1011, column: 5, scope: !3884)
!3887 = !DILocation(line: 1014, column: 8, scope: !3761)
!3888 = !DILocation(line: 1015, column: 9, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3794, file: !200, line: 1014, column: 15)
!3890 = !DILocation(line: 1018, column: 14, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !200, line: 1017, column: 12)
!3892 = distinct !DILexicalBlock(scope: !3889, file: !200, line: 1015, column: 9)
!3893 = !DILocation(line: 1020, column: 4, scope: !3889)
!3894 = !DILocation(line: 1020, column: 15, scope: !3794)
!3895 = !DILocation(line: 1021, column: 1, scope: !3792)
!3896 = !DILocation(line: 1022, column: 11, scope: !3792)
!3897 = !DILocation(line: 1025, column: 14, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3792, file: !200, line: 1025, column: 9)
!3899 = !DILocation(line: 1026, column: 25, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3898, file: !200, line: 1025, column: 38)
!3901 = !DILocation(line: 1026, column: 19, scope: !3900)
!3902 = !DILocation(line: 1026, column: 6, scope: !3900)
!3903 = !DILocation(line: 1026, column: 23, scope: !3900)
!3904 = !DILocation(line: 1027, column: 5, scope: !3900)
!3905 = !DILocation(line: 1031, column: 21, scope: !3792)
!3906 = !DILocation(line: 1031, column: 13, scope: !3792)
!3907 = !DILocation(line: 1032, column: 4, scope: !3792)
!3908 = !DILocation(line: 995, column: 33, scope: !3762)
!3909 = distinct !{!3909, !3863, !3910}
!3910 = !DILocation(line: 1033, column: 3, scope: !3759)
!3911 = !DILocation(line: 1040, column: 10, scope: !3718)
!3912 = !DILocation(line: 1042, column: 10, scope: !3718)
!3913 = !DILocation(line: 1052, column: 6, scope: !3718)
!3914 = !DILocation(line: 1055, column: 9, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !200, line: 1052, column: 14)
!3916 = distinct !DILexicalBlock(scope: !3718, file: !200, line: 1052, column: 6)
!3917 = !DILocation(line: 1056, column: 2, scope: !3915)
!3918 = !DILocation(line: 1056, column: 21, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3916, file: !200, line: 1056, column: 13)
!3920 = !DILocation(line: 1066, column: 3, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3922, file: !200, line: 1065, column: 11)
!3922 = distinct !DILexicalBlock(scope: !3718, file: !200, line: 1065, column: 6)
!3923 = !DILocation(line: 1067, column: 2, scope: !3921)
!3924 = !DILocation(line: 1068, column: 10, scope: !3718)
!3925 = !DILocation(line: 0, scope: !3775)
!3926 = !DILocation(line: 1074, column: 20, scope: !3778)
!3927 = !DILocation(line: 1074, column: 2, scope: !3775)
!3928 = !DILocation(line: 1110, column: 24, scope: !3718)
!3929 = !DILocation(line: 1053, column: 12, scope: !3915)
!3930 = !DILocation(line: 1054, column: 12, scope: !3915)
!3931 = !DILocation(line: 1108, column: 30, scope: !3718)
!3932 = !DILocation(line: 1108, column: 40, scope: !3718)
!3933 = !DILocation(line: 1108, column: 38, scope: !3718)
!3934 = !DILocation(line: 1109, column: 31, scope: !3718)
!3935 = !DILocation(line: 1109, column: 24, scope: !3718)
!3936 = !DILocation(line: 1110, column: 31, scope: !3718)
!3937 = !DILocation(line: 1114, column: 31, scope: !3718)
!3938 = !DILocation(line: 1114, column: 48, scope: !3718)
!3939 = !DILocation(line: 1115, column: 13, scope: !3718)
!3940 = !DILocation(line: 1118, column: 7, scope: !3718)
!3941 = !DILocation(line: 1119, column: 9, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3718, file: !200, line: 1119, column: 6)
!3943 = !DILocation(line: 1119, column: 6, scope: !3718)
!3944 = !DILocation(line: 1075, column: 29, scope: !3777)
!3945 = !DILocation(line: 1075, column: 21, scope: !3777)
!3946 = !DILocation(line: 0, scope: !3777)
!3947 = !DILocation(line: 1076, column: 29, scope: !3777)
!3948 = !DILocation(line: 1076, column: 21, scope: !3777)
!3949 = !DILocation(line: 1077, column: 38, scope: !3777)
!3950 = !DILocation(line: 1077, column: 21, scope: !3777)
!3951 = !DILocation(line: 1078, column: 16, scope: !3777)
!3952 = !DILocation(line: 1080, column: 19, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 1080, column: 7)
!3954 = !DILocation(line: 1080, column: 34, scope: !3953)
!3955 = !DILocation(line: 1080, column: 22, scope: !3953)
!3956 = !DILocation(line: 1080, column: 7, scope: !3777)
!3957 = !DILocation(line: 1084, column: 7, scope: !3777)
!3958 = !DILocation(line: 1085, column: 8, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !200, line: 1084, column: 14)
!3960 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 1084, column: 7)
!3961 = !DILocation(line: 1086, column: 5, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !200, line: 1086, column: 5)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !200, line: 1086, column: 5)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !200, line: 1085, column: 49)
!3965 = distinct !DILexicalBlock(scope: !3959, file: !200, line: 1085, column: 8)
!3966 = !DILocation(line: 1086, column: 5, scope: !3963)
!3967 = !DILocation(line: 1086, column: 5, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3962, file: !200, line: 1086, column: 5)
!3969 = !DILocation(line: 1087, column: 25, scope: !3964)
!3970 = !DILocation(line: 1087, column: 5, scope: !3964)
!3971 = !DILocation(line: 1088, column: 4, scope: !3964)
!3972 = !DILocation(line: 1088, column: 15, scope: !3965)
!3973 = !DILocation(line: 1089, column: 5, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !200, line: 1089, column: 5)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !200, line: 1089, column: 5)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !200, line: 1088, column: 61)
!3977 = distinct !DILexicalBlock(scope: !3965, file: !200, line: 1088, column: 15)
!3978 = !DILocation(line: 1089, column: 5, scope: !3975)
!3979 = !DILocation(line: 1089, column: 5, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3974, file: !200, line: 1089, column: 5)
!3981 = !DILocation(line: 1090, column: 26, scope: !3976)
!3982 = !DILocation(line: 1090, column: 5, scope: !3976)
!3983 = !DILocation(line: 1091, column: 4, scope: !3976)
!3984 = !DILocation(line: 1095, column: 8, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3960, file: !200, line: 1094, column: 10)
!3986 = !DILocation(line: 1096, column: 5, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3988, file: !200, line: 1096, column: 5)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !200, line: 1096, column: 5)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !200, line: 1095, column: 49)
!3990 = distinct !DILexicalBlock(scope: !3985, file: !200, line: 1095, column: 8)
!3991 = !DILocation(line: 1096, column: 5, scope: !3988)
!3992 = !DILocation(line: 1096, column: 5, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3987, file: !200, line: 1096, column: 5)
!3994 = !DILocation(line: 1097, column: 25, scope: !3989)
!3995 = !DILocation(line: 1097, column: 5, scope: !3989)
!3996 = !DILocation(line: 1098, column: 4, scope: !3989)
!3997 = !DILocation(line: 1099, column: 5, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3999, file: !200, line: 1099, column: 5)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !200, line: 1099, column: 5)
!4000 = distinct !DILexicalBlock(scope: !3990, file: !200, line: 1098, column: 11)
!4001 = !DILocation(line: 1099, column: 5, scope: !3999)
!4002 = !DILocation(line: 1099, column: 5, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3998, file: !200, line: 1099, column: 5)
!4004 = !DILocation(line: 1100, column: 26, scope: !4000)
!4005 = !DILocation(line: 1100, column: 5, scope: !4000)
!4006 = !DILocation(line: 1100, column: 30, scope: !4000)
!4007 = !DILocation(line: 1101, column: 26, scope: !4000)
!4008 = !DILocation(line: 1101, column: 5, scope: !4000)
!4009 = !DILocation(line: 0, scope: !3960)
!4010 = !DILocation(line: 1074, column: 32, scope: !3778)
!4011 = distinct !{!4011, !3927, !4012}
!4012 = !DILocation(line: 1104, column: 2, scope: !3775)
!4013 = !DILocation(line: 1124, column: 13, scope: !3718)
!4014 = !DILocation(line: 1127, column: 10, scope: !3718)
!4015 = !DILocation(line: 1127, column: 7, scope: !3718)
!4016 = !DILocation(line: 1128, column: 9, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !3718, file: !200, line: 1128, column: 6)
!4018 = !DILocation(line: 1128, column: 6, scope: !3718)
!4019 = !DILocation(line: 1134, column: 27, scope: !3718)
!4020 = !DILocation(line: 1136, column: 7, scope: !3718)
!4021 = !DILocation(line: 1137, column: 9, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !3718, file: !200, line: 1137, column: 6)
!4023 = !DILocation(line: 1137, column: 6, scope: !3718)
!4024 = !DILocation(line: 1131, column: 10, scope: !3718)
!4025 = !DILocation(line: 1140, column: 10, scope: !3718)
!4026 = !DILocation(line: 0, scope: !3785)
!4027 = !DILocation(line: 1143, column: 20, scope: !3788)
!4028 = !DILocation(line: 1143, column: 2, scope: !3785)
!4029 = !DILocation(line: 1144, column: 3, scope: !3787)
!4030 = !DILocation(line: 1144, column: 17, scope: !3787)
!4031 = !DILocation(line: 0, scope: !3787)
!4032 = !DILocation(line: 1144, column: 11, scope: !3787)
!4033 = !DILocation(line: 1145, column: 38, scope: !3787)
!4034 = !DILocation(line: 1145, column: 21, scope: !3787)
!4035 = !DILocation(line: 1146, column: 22, scope: !3787)
!4036 = !DILocation(line: 1146, column: 29, scope: !3787)
!4037 = !DILocation(line: 1148, column: 8, scope: !3787)
!4038 = !DILocation(line: 1149, column: 10, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !3787, file: !200, line: 1149, column: 7)
!4040 = !DILocation(line: 1149, column: 7, scope: !3787)
!4041 = !DILocation(line: 1154, column: 8, scope: !3787)
!4042 = !DILocation(line: 1155, column: 10, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !3787, file: !200, line: 1155, column: 7)
!4044 = !DILocation(line: 1155, column: 7, scope: !3787)
!4045 = !DILocation(line: 1159, column: 2, scope: !3788)
!4046 = !DILocation(line: 1152, column: 11, scope: !3787)
!4047 = !DILocation(line: 1158, column: 11, scope: !3787)
!4048 = !DILocation(line: 1143, column: 33, scope: !3788)
!4049 = distinct !{!4049, !4028, !4050}
!4050 = !DILocation(line: 1159, column: 2, scope: !3785)
!4051 = !DILocation(line: 1162, column: 8, scope: !3718)
!4052 = !DILocation(line: 1164, column: 2, scope: !3718)
!4053 = !DILocation(line: 1165, column: 1, scope: !3718)
!4054 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !4055, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4057)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{!185, !106}
!4057 = !{!4058, !4059, !4060, !4061, !4062, !4063, !4064}
!4058 = !DILocalVariable(name: "packaged", arg: 1, scope: !4054, file: !200, line: 196, type: !106)
!4059 = !DILocalVariable(name: "buf", scope: !4054, file: !200, line: 200, type: !194)
!4060 = !DILocalVariable(name: "start", scope: !4054, file: !200, line: 201, type: !194)
!4061 = !DILocalVariable(name: "args_size", scope: !4054, file: !200, line: 202, type: !32)
!4062 = !DILocalVariable(name: "s_nbr", scope: !4054, file: !200, line: 202, type: !32)
!4063 = !DILocalVariable(name: "ros_nbr", scope: !4054, file: !200, line: 202, type: !32)
!4064 = !DILocalVariable(name: "i", scope: !4065, file: !200, line: 215, type: !107)
!4065 = distinct !DILexicalBlock(scope: !4054, file: !200, line: 215, column: 2)
!4066 = !DILocation(line: 0, scope: !4054)
!4067 = !DILocation(line: 198, column: 2, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !200, line: 198, column: 2)
!4069 = distinct !DILexicalBlock(scope: !4054, file: !200, line: 198, column: 2)
!4070 = !DILocation(line: 198, column: 2, scope: !4069)
!4071 = !DILocation(line: 198, column: 2, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4068, file: !200, line: 198, column: 2)
!4073 = !DILocation(line: 204, column: 14, scope: !4054)
!4074 = !DILocation(line: 204, column: 21, scope: !4054)
!4075 = !DILocation(line: 205, column: 14, scope: !4054)
!4076 = !DILocation(line: 206, column: 14, scope: !4054)
!4077 = !DILocation(line: 209, column: 6, scope: !4054)
!4078 = !DILocation(line: 212, column: 6, scope: !4054)
!4079 = !DILocation(line: 0, scope: !4065)
!4080 = !DILocation(line: 215, column: 20, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4065, file: !200, line: 215, column: 2)
!4082 = !DILocation(line: 215, column: 2, scope: !4065)
!4083 = !DILocation(line: 220, column: 33, scope: !4054)
!4084 = !DILocation(line: 220, column: 2, scope: !4054)
!4085 = !DILocation(line: 216, column: 6, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4081, file: !200, line: 215, column: 34)
!4087 = !DILocation(line: 217, column: 10, scope: !4086)
!4088 = !DILocation(line: 217, column: 36, scope: !4086)
!4089 = !DILocation(line: 217, column: 7, scope: !4086)
!4090 = !DILocation(line: 215, column: 30, scope: !4081)
!4091 = distinct !{!4091, !4082, !4092}
!4092 = !DILocation(line: 218, column: 2, scope: !4065)
!4093 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !4094, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4096)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{!107, !3721, !106, !118, !197}
!4096 = !{!4097, !4098, !4099, !4100}
!4097 = !DILocalVariable(name: "cb", arg: 1, scope: !4093, file: !200, line: 223, type: !3721)
!4098 = !DILocalVariable(name: "ctx", arg: 2, scope: !4093, file: !200, line: 223, type: !106)
!4099 = !DILocalVariable(name: "str", arg: 3, scope: !4093, file: !200, line: 223, type: !118)
!4100 = !DILocalVariable(name: "strl", arg: 4, scope: !4093, file: !200, line: 223, type: !197)
!4101 = !DILocation(line: 0, scope: !4093)
!4102 = !DILocation(line: 225, column: 9, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4093, file: !200, line: 225, column: 6)
!4104 = !DILocation(line: 225, column: 6, scope: !4093)
!4105 = !DILocation(line: 226, column: 14, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4103, file: !200, line: 225, column: 18)
!4107 = !DILocation(line: 226, column: 12, scope: !4106)
!4108 = !DILocation(line: 226, column: 3, scope: !4106)
!4109 = !DILocation(line: 229, column: 14, scope: !4093)
!4110 = !DILocation(line: 229, column: 9, scope: !4093)
!4111 = !DILocation(line: 229, column: 27, scope: !4093)
!4112 = !DILocation(line: 229, column: 39, scope: !4093)
!4113 = !DILocation(line: 230, column: 17, scope: !4093)
!4114 = !DILocation(line: 230, column: 9, scope: !4093)
!4115 = !DILocation(line: 230, column: 2, scope: !4093)
!4116 = !DILocation(line: 231, column: 1, scope: !4093)
!4117 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4118)
!4118 = !{!4119}
!4119 = !DILocalVariable(name: "c", arg: 1, scope: !4117, file: !212, line: 45, type: !107)
!4120 = !DILocation(line: 0, scope: !4117)
!4121 = !DILocation(line: 50, column: 2, scope: !4117)
!4122 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !4123, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4125)
!4123 = !DISubroutineType(types: !4124)
!4124 = !{null, !213}
!4125 = !{!4126}
!4126 = !DILocalVariable(name: "fn", arg: 1, scope: !4122, file: !212, line: 63, type: !213)
!4127 = !DILocation(line: 0, scope: !4122)
!4128 = !DILocation(line: 65, column: 12, scope: !4122)
!4129 = !DILocation(line: 66, column: 1, scope: !4122)
!4130 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !2166)
!4131 = !DILocation(line: 78, column: 9, scope: !4130)
!4132 = !DILocation(line: 78, column: 2, scope: !4130)
!4133 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !4134, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4142)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{null, !118, !4136}
!4136 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3209, line: 99, baseType: !4137)
!4137 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3209, line: 40, baseType: !4138)
!4138 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !4139)
!4139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4140)
!4140 = !{!4141}
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4139, file: !212, line: 79, baseType: !106, size: 32)
!4142 = !{!4143, !4144, !4145}
!4143 = !DILocalVariable(name: "fmt", arg: 1, scope: !4133, file: !212, line: 113, type: !118)
!4144 = !DILocalVariable(name: "ap", arg: 2, scope: !4133, file: !212, line: 113, type: !4136)
!4145 = !DILocalVariable(name: "ctx", scope: !4146, file: !212, line: 121, type: !4148)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !212, line: 120, column: 27)
!4147 = distinct !DILexicalBlock(scope: !4133, file: !212, line: 120, column: 6)
!4148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !4149)
!4149 = !{!4150, !4151}
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4148, file: !212, line: 85, baseType: !32, size: 32)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4148, file: !212, line: 86, baseType: !4152, offset: 32)
!4152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !4153)
!4153 = !{!4154}
!4154 = !DISubrange(count: 0)
!4155 = !DILocation(line: 0, scope: !4133)
!4156 = !DILocation(line: 148, column: 3, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4147, file: !212, line: 138, column: 9)
!4158 = !DILocation(line: 155, column: 1, scope: !4133)
!4159 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !4160, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4162)
!4160 = !DISubroutineType(types: !4161)
!4161 = !{!107, !107, !106}
!4162 = !{!4163, !4164}
!4163 = !DILocalVariable(name: "c", arg: 1, scope: !4159, file: !212, line: 107, type: !107)
!4164 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4159, file: !212, line: 107, type: !106)
!4165 = !DILocation(line: 0, scope: !4159)
!4166 = !DILocation(line: 110, column: 9, scope: !4159)
!4167 = !DILocation(line: 110, column: 2, scope: !4159)
!4168 = distinct !DISubprogram(name: "cbvprintf", scope: !3241, file: !3241, line: 739, type: !4169, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4171)
!4169 = !DISubroutineType(types: !4170)
!4170 = !{!107, !3589, !106, !118, !4136}
!4171 = !{!4172, !4173, !4174, !4175}
!4172 = !DILocalVariable(name: "out", arg: 1, scope: !4168, file: !3241, line: 739, type: !3589)
!4173 = !DILocalVariable(name: "ctx", arg: 2, scope: !4168, file: !3241, line: 739, type: !106)
!4174 = !DILocalVariable(name: "format", arg: 3, scope: !4168, file: !3241, line: 739, type: !118)
!4175 = !DILocalVariable(name: "ap", arg: 4, scope: !4168, file: !3241, line: 739, type: !4136)
!4176 = !DILocation(line: 0, scope: !4168)
!4177 = !DILocation(line: 741, column: 9, scope: !4168)
!4178 = !DILocation(line: 741, column: 2, scope: !4168)
!4179 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !4180, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4182)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{null, !193, !185}
!4182 = !{!4183, !4184, !4185}
!4183 = !DILocalVariable(name: "c", arg: 1, scope: !4179, file: !212, line: 157, type: !193)
!4184 = !DILocalVariable(name: "n", arg: 2, scope: !4179, file: !212, line: 157, type: !185)
!4185 = !DILocalVariable(name: "i", scope: !4179, file: !212, line: 159, type: !185)
!4186 = !DILocation(line: 0, scope: !4179)
!4187 = !DILocation(line: 164, column: 16, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4189, file: !212, line: 164, column: 2)
!4189 = distinct !DILexicalBlock(scope: !4179, file: !212, line: 164, column: 2)
!4190 = !DILocation(line: 164, column: 2, scope: !4189)
!4191 = !DILocation(line: 165, column: 3, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4188, file: !212, line: 164, column: 26)
!4193 = !DILocation(line: 165, column: 13, scope: !4192)
!4194 = !DILocation(line: 164, column: 22, scope: !4188)
!4195 = distinct !{!4195, !4190, !4196}
!4196 = !DILocation(line: 166, column: 2, scope: !4189)
!4197 = !DILocation(line: 171, column: 1, scope: !4179)
!4198 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4199, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4201)
!4199 = !DISubroutineType(types: !4200)
!4200 = !{null, !118, null}
!4201 = !{!4202, !4203}
!4202 = !DILocalVariable(name: "fmt", arg: 1, scope: !4198, file: !212, line: 203, type: !118)
!4203 = !DILocalVariable(name: "ap", scope: !4198, file: !212, line: 205, type: !4136)
!4204 = !DILocation(line: 0, scope: !4198)
!4205 = !DILocation(line: 205, column: 2, scope: !4198)
!4206 = !DILocation(line: 205, column: 10, scope: !4198)
!4207 = !DILocation(line: 207, column: 2, scope: !4198)
!4208 = !DILocation(line: 209, column: 2, scope: !4198)
!4209 = !DILocation(line: 211, column: 2, scope: !4198)
!4210 = !DILocation(line: 212, column: 1, scope: !4198)
!4211 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4212, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4214)
!4212 = !DISubroutineType(types: !4213)
!4213 = !{!107, !193, !185, !118, null}
!4214 = !{!4215, !4216, !4217, !4218, !4219}
!4215 = !DILocalVariable(name: "str", arg: 1, scope: !4211, file: !212, line: 239, type: !193)
!4216 = !DILocalVariable(name: "size", arg: 2, scope: !4211, file: !212, line: 239, type: !185)
!4217 = !DILocalVariable(name: "fmt", arg: 3, scope: !4211, file: !212, line: 239, type: !118)
!4218 = !DILocalVariable(name: "ap", scope: !4211, file: !212, line: 241, type: !4136)
!4219 = !DILocalVariable(name: "ret", scope: !4211, file: !212, line: 242, type: !107)
!4220 = !DILocation(line: 0, scope: !4211)
!4221 = !DILocation(line: 241, column: 2, scope: !4211)
!4222 = !DILocation(line: 241, column: 10, scope: !4211)
!4223 = !DILocation(line: 244, column: 2, scope: !4211)
!4224 = !DILocation(line: 245, column: 8, scope: !4211)
!4225 = !DILocation(line: 246, column: 2, scope: !4211)
!4226 = !DILocation(line: 249, column: 1, scope: !4211)
!4227 = !DILocation(line: 248, column: 2, scope: !4211)
!4228 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4229, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4231)
!4229 = !DISubroutineType(types: !4230)
!4230 = !{!107, !193, !185, !118, !4136}
!4231 = !{!4232, !4233, !4234, !4235, !4236}
!4232 = !DILocalVariable(name: "str", arg: 1, scope: !4228, file: !212, line: 251, type: !193)
!4233 = !DILocalVariable(name: "size", arg: 2, scope: !4228, file: !212, line: 251, type: !185)
!4234 = !DILocalVariable(name: "fmt", arg: 3, scope: !4228, file: !212, line: 251, type: !118)
!4235 = !DILocalVariable(name: "ap", arg: 4, scope: !4228, file: !212, line: 251, type: !4136)
!4236 = !DILocalVariable(name: "ctx", scope: !4228, file: !212, line: 253, type: !4237)
!4237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4238)
!4238 = !{!4239, !4240, !4241}
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4237, file: !212, line: 218, baseType: !193, size: 32)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4237, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4237, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4242 = !DILocation(line: 0, scope: !4228)
!4243 = !DILocation(line: 253, column: 2, scope: !4228)
!4244 = !DILocation(line: 253, column: 21, scope: !4228)
!4245 = !DILocation(line: 253, column: 27, scope: !4228)
!4246 = !DILocation(line: 255, column: 2, scope: !4228)
!4247 = !DILocation(line: 257, column: 10, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4228, file: !212, line: 257, column: 6)
!4249 = !DILocation(line: 257, column: 22, scope: !4248)
!4250 = !DILocation(line: 257, column: 16, scope: !4248)
!4251 = !DILocation(line: 257, column: 6, scope: !4228)
!4252 = !DILocation(line: 258, column: 3, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4248, file: !212, line: 257, column: 27)
!4254 = !DILocation(line: 258, column: 18, scope: !4253)
!4255 = !DILocation(line: 259, column: 2, scope: !4253)
!4256 = !DILocation(line: 262, column: 1, scope: !4228)
!4257 = !DILocation(line: 261, column: 2, scope: !4228)
!4258 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4259, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4262)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{!107, !107, !4261}
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4237, size: 32)
!4262 = !{!4263, !4264}
!4263 = !DILocalVariable(name: "c", arg: 1, scope: !4258, file: !212, line: 223, type: !107)
!4264 = !DILocalVariable(name: "ctx", arg: 2, scope: !4258, file: !212, line: 223, type: !4261)
!4265 = !DILocation(line: 0, scope: !4258)
!4266 = !DILocation(line: 225, column: 11, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4258, file: !212, line: 225, column: 6)
!4268 = !DILocation(line: 225, column: 15, scope: !4267)
!4269 = !DILocation(line: 0, scope: !4267)
!4270 = !DILocation(line: 225, column: 23, scope: !4267)
!4271 = !DILocation(line: 225, column: 45, scope: !4267)
!4272 = !DILocation(line: 225, column: 37, scope: !4267)
!4273 = !DILocation(line: 225, column: 6, scope: !4258)
!4274 = !DILocation(line: 226, column: 8, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4267, file: !212, line: 225, column: 50)
!4276 = !DILocation(line: 226, column: 13, scope: !4275)
!4277 = !DILocation(line: 227, column: 3, scope: !4275)
!4278 = !DILocation(line: 230, column: 29, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4258, file: !212, line: 230, column: 6)
!4280 = !DILocation(line: 230, column: 17, scope: !4279)
!4281 = !DILocation(line: 230, column: 6, scope: !4258)
!4282 = !DILocation(line: 231, column: 22, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4279, file: !212, line: 230, column: 34)
!4284 = !DILocation(line: 231, column: 3, scope: !4283)
!4285 = !DILocation(line: 231, column: 26, scope: !4283)
!4286 = !DILocation(line: 232, column: 2, scope: !4283)
!4287 = !DILocation(line: 233, column: 28, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4279, file: !212, line: 232, column: 9)
!4289 = !DILocation(line: 233, column: 22, scope: !4288)
!4290 = !DILocation(line: 233, column: 3, scope: !4288)
!4291 = !DILocation(line: 233, column: 26, scope: !4288)
!4292 = !DILocation(line: 237, column: 1, scope: !4258)
!4293 = distinct !DISubprogram(name: "z_thread_entry", scope: !4294, file: !4294, line: 30, type: !4295, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !4297)
!4294 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4295 = !DISubroutineType(types: !4296)
!4296 = !{null, !559, !106, !106, !106}
!4297 = !{!4298, !4299, !4300, !4301}
!4298 = !DILocalVariable(name: "entry", arg: 1, scope: !4293, file: !4294, line: 30, type: !559)
!4299 = !DILocalVariable(name: "p1", arg: 2, scope: !4293, file: !4294, line: 31, type: !106)
!4300 = !DILocalVariable(name: "p2", arg: 3, scope: !4293, file: !4294, line: 31, type: !106)
!4301 = !DILocalVariable(name: "p3", arg: 4, scope: !4293, file: !4294, line: 31, type: !106)
!4302 = !DILocation(line: 0, scope: !4293)
!4303 = !DILocation(line: 36, column: 2, scope: !4293)
!4304 = !DILocation(line: 38, column: 17, scope: !4293)
!4305 = !DILocation(line: 38, column: 2, scope: !4293)
!4306 = !DILocation(line: 45, column: 2, scope: !4293)
!4307 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !4308, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !2166)
!4308 = !DISubroutineType(types: !4309)
!4309 = !{!4310}
!4310 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !4311)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 32)
!4312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !4313)
!4313 = !{!4314, !4372, !4384, !4385, !4386, !4387, !4388, !4394, !4409}
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4312, file: !309, line: 247, baseType: !4315, size: 384)
!4315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !4316)
!4316 = !{!4317, !4341, !4348, !4349, !4350, !4359, !4360, !4361}
!4317 = !DIDerivedType(tag: DW_TAG_member, scope: !4315, file: !309, line: 60, baseType: !4318, size: 64)
!4318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4315, file: !309, line: 60, size: 64, elements: !4319)
!4319 = !{!4320, !4335}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4318, file: !309, line: 61, baseType: !4321, size: 64)
!4321 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !4322)
!4322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !4323)
!4323 = !{!4324, !4330}
!4324 = !DIDerivedType(tag: DW_TAG_member, scope: !4322, file: !319, line: 38, baseType: !4325, size: 32)
!4325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4322, file: !319, line: 38, size: 32, elements: !4326)
!4326 = !{!4327, !4329}
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4325, file: !319, line: 39, baseType: !4328, size: 32)
!4328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 32)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4325, file: !319, line: 40, baseType: !4328, size: 32)
!4330 = !DIDerivedType(tag: DW_TAG_member, scope: !4322, file: !319, line: 42, baseType: !4331, size: 32, offset: 32)
!4331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4322, file: !319, line: 42, size: 32, elements: !4332)
!4332 = !{!4333, !4334}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4331, file: !319, line: 43, baseType: !4328, size: 32)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4331, file: !319, line: 44, baseType: !4328, size: 32)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4318, file: !309, line: 62, baseType: !4336, size: 64)
!4336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !4337)
!4337 = !{!4338}
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4336, file: !335, line: 50, baseType: !4339, size: 64)
!4339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4340, size: 64, elements: !340)
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 32)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4315, file: !309, line: 68, baseType: !4342, size: 32, offset: 64)
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 32)
!4343 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !4344)
!4344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !4345)
!4345 = !{!4346}
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4344, file: !345, line: 232, baseType: !4347, size: 64)
!4347 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !4322)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4315, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4315, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!4350 = !DIDerivedType(tag: DW_TAG_member, scope: !4315, file: !309, line: 90, baseType: !4351, size: 16, offset: 112)
!4351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4315, file: !309, line: 90, size: 16, elements: !4352)
!4352 = !{!4353, !4358}
!4353 = !DIDerivedType(tag: DW_TAG_member, scope: !4351, file: !309, line: 91, baseType: !4354, size: 16)
!4354 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4351, file: !309, line: 91, size: 16, elements: !4355)
!4355 = !{!4356, !4357}
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4354, file: !309, line: 96, baseType: !359, size: 8)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4354, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4351, file: !309, line: 100, baseType: !197, size: 16)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4315, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4315, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4315, file: !309, line: 131, baseType: !4362, size: 192, offset: 192)
!4362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !4363)
!4363 = !{!4364, !4365, !4371}
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4362, file: !345, line: 245, baseType: !4321, size: 64)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4362, file: !345, line: 246, baseType: !4366, size: 32, offset: 64)
!4366 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !4367)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 32)
!4368 = !DISubroutineType(types: !4369)
!4369 = !{null, !4370}
!4370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4362, size: 32)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4362, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4312, file: !309, line: 250, baseType: !4373, size: 288, offset: 384)
!4373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !4374)
!4374 = !{!4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383}
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4373, file: !379, line: 26, baseType: !152, size: 32)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4373, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4373, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4373, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4373, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4373, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4373, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4373, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4373, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4312, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4312, file: !309, line: 256, baseType: !4343, size: 64, offset: 704)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4312, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4312, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4312, file: !309, line: 300, baseType: !4389, size: 96, offset: 1056)
!4389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !4390)
!4390 = !{!4391, !4392, !4393}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4389, file: !309, line: 153, baseType: !22, size: 32)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4389, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4389, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4312, file: !309, line: 325, baseType: !4395, size: 32, offset: 1152)
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 32)
!4396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !4397)
!4397 = !{!4398, !4404, !4405}
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4396, file: !406, line: 5074, baseType: !4399, size: 96)
!4399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !4400)
!4400 = !{!4401, !4402, !4403}
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4399, file: !410, line: 57, baseType: !413, size: 32)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4399, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4399, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4396, file: !406, line: 5075, baseType: !4343, size: 64, offset: 96)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4396, file: !406, line: 5076, baseType: !4406, size: 32, offset: 160)
!4406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !4407)
!4407 = !{!4408}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4406, file: !420, line: 52, baseType: !22, size: 32)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4312, file: !309, line: 343, baseType: !4410, size: 64, offset: 1184)
!4410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !4411)
!4411 = !{!4412, !4413}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4410, file: !379, line: 63, baseType: !152, size: 32)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4410, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!4414 = !DILocation(line: 535, column: 9, scope: !4307)
!4415 = !DILocation(line: 535, column: 2, scope: !4307)
!4416 = distinct !DISubprogram(name: "k_thread_abort", scope: !4417, file: !4417, line: 188, type: !4418, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !4420)
!4417 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!4418 = !DISubroutineType(types: !4419)
!4419 = !{null, !4310}
!4420 = !{!4421}
!4421 = !DILocalVariable(name: "thread", arg: 1, scope: !4416, file: !4417, line: 188, type: !4310)
!4422 = !DILocation(line: 0, scope: !4416)
!4423 = !DILocation(line: 197, column: 2, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4416, file: !4417, line: 197, column: 2)
!4425 = !{i64 2154847205}
!4426 = !DILocation(line: 198, column: 2, scope: !4416)
!4427 = !DILocation(line: 199, column: 1, scope: !4416)
!4428 = distinct !DISubprogram(name: "z_current_get", scope: !4417, file: !4417, line: 173, type: !4308, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !2166)
!4429 = !DILocation(line: 180, column: 2, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4428, file: !4417, line: 180, column: 2)
!4431 = !{i64 2154847137}
!4432 = !DILocation(line: 181, column: 9, scope: !4428)
!4433 = !DILocation(line: 181, column: 2, scope: !4428)
!4434 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2518, file: !2518, line: 1338, type: !4435, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4443)
!4435 = !DISubroutineType(types: !4436)
!4436 = !{!107, !3589, !106, !118, !4437, !152}
!4437 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3209, line: 99, baseType: !4438)
!4438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3209, line: 40, baseType: !4439)
!4439 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2518, baseType: !4440)
!4440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4441)
!4441 = !{!4442}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4440, file: !2518, baseType: !106, size: 32)
!4443 = !{!4444, !4445, !4446, !4447, !4448, !4449, !4453, !4454, !4455, !4457, !4462, !4505, !4508, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4520, !4521, !4522, !4526, !4529, !4531, !4534, !4535, !4536, !4541, !4547, !4550, !4554, !4560, !4564, !4567, !4569, !4572}
!4444 = !DILocalVariable(name: "out", arg: 1, scope: !4434, file: !2518, line: 1338, type: !3589)
!4445 = !DILocalVariable(name: "ctx", arg: 2, scope: !4434, file: !2518, line: 1338, type: !106)
!4446 = !DILocalVariable(name: "fp", arg: 3, scope: !4434, file: !2518, line: 1338, type: !118)
!4447 = !DILocalVariable(name: "ap", arg: 4, scope: !4434, file: !2518, line: 1339, type: !4437)
!4448 = !DILocalVariable(name: "flags", arg: 5, scope: !4434, file: !2518, line: 1339, type: !152)
!4449 = !DILocalVariable(name: "buf", scope: !4434, file: !2518, line: 1341, type: !4450)
!4450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4451)
!4451 = !{!4452}
!4452 = !DISubrange(count: 22)
!4453 = !DILocalVariable(name: "count", scope: !4434, file: !2518, line: 1342, type: !185)
!4454 = !DILocalVariable(name: "sint", scope: !4434, file: !2518, line: 1343, type: !2537)
!4455 = !DILocalVariable(name: "tagged_ap", scope: !4434, file: !2518, line: 1345, type: !4456)
!4456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4457 = !DILocalVariable(name: "rc", scope: !4458, file: !2518, line: 1377, type: !107)
!4458 = distinct !DILexicalBlock(scope: !4459, file: !2518, line: 1377, column: 4)
!4459 = distinct !DILexicalBlock(scope: !4460, file: !2518, line: 1376, column: 19)
!4460 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1376, column: 7)
!4461 = distinct !DILexicalBlock(scope: !4434, file: !2518, line: 1375, column: 19)
!4462 = !DILocalVariable(name: "state", scope: !4461, file: !2518, line: 1395, type: !4463)
!4463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4434, file: !2518, line: 1392, size: 192, elements: !4464)
!4464 = !{!4465, !4473}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4463, file: !2518, line: 1393, baseType: !4466, size: 64)
!4466 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2518, line: 166, size: 64, elements: !4467)
!4467 = !{!4468, !4469, !4470, !4471, !4472}
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4466, file: !2518, line: 168, baseType: !2537, size: 64)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4466, file: !2518, line: 171, baseType: !2540, size: 64)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4466, file: !2518, line: 174, baseType: !183, size: 64)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4466, file: !2518, line: 177, baseType: !181, size: 64)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4466, file: !2518, line: 180, baseType: !106, size: 32)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4463, file: !2518, line: 1394, baseType: !4474, size: 96, offset: 64)
!4474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2518, line: 189, size: 96, elements: !4475)
!4475 = !{!4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4500}
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4474, file: !2518, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4474, file: !2518, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4474, file: !2518, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4474, file: !2518, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4474, file: !2518, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4474, file: !2518, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4474, file: !2518, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4474, file: !2518, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4474, file: !2518, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4474, file: !2518, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4474, file: !2518, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4474, file: !2518, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4474, file: !2518, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4474, file: !2518, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4474, file: !2518, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4474, file: !2518, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4474, file: !2518, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4474, file: !2518, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4474, file: !2518, line: 260, baseType: !196, size: 8, offset: 24)
!4495 = !DIDerivedType(tag: DW_TAG_member, scope: !4474, file: !2518, line: 262, baseType: !4496, size: 32, offset: 32)
!4496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4474, file: !2518, line: 262, size: 32, elements: !4497)
!4497 = !{!4498, !4499}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4496, file: !2518, line: 267, baseType: !107, size: 32)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4496, file: !2518, line: 289, baseType: !107, size: 32)
!4500 = !DIDerivedType(tag: DW_TAG_member, scope: !4474, file: !2518, line: 292, baseType: !4501, size: 32, offset: 64)
!4501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4474, file: !2518, line: 292, size: 32, elements: !4502)
!4502 = !{!4503, !4504}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4501, file: !2518, line: 297, baseType: !107, size: 32)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4501, file: !2518, line: 306, baseType: !107, size: 32)
!4505 = !DILocalVariable(name: "conv", scope: !4461, file: !2518, line: 1400, type: !4506)
!4506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4507)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 32)
!4508 = !DILocalVariable(name: "value", scope: !4461, file: !2518, line: 1401, type: !4509)
!4509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4510)
!4510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4466, size: 32)
!4511 = !DILocalVariable(name: "sp", scope: !4461, file: !2518, line: 1402, type: !118)
!4512 = !DILocalVariable(name: "width", scope: !4461, file: !2518, line: 1403, type: !107)
!4513 = !DILocalVariable(name: "precision", scope: !4461, file: !2518, line: 1404, type: !107)
!4514 = !DILocalVariable(name: "bps", scope: !4461, file: !2518, line: 1405, type: !118)
!4515 = !DILocalVariable(name: "bpe", scope: !4461, file: !2518, line: 1406, type: !118)
!4516 = !DILocalVariable(name: "sign", scope: !4461, file: !2518, line: 1407, type: !120)
!4517 = !DILocalVariable(name: "arg", scope: !4518, file: !2518, line: 1432, type: !107)
!4518 = distinct !DILexicalBlock(scope: !4519, file: !2518, line: 1431, column: 24)
!4519 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1431, column: 7)
!4520 = !DILocalVariable(name: "specifier_cat", scope: !4461, file: !2518, line: 1468, type: !2517)
!4521 = !DILocalVariable(name: "length_mod", scope: !4461, file: !2518, line: 1470, type: !2525)
!4522 = !DILocalVariable(name: "rc", scope: !4523, file: !2518, line: 1575, type: !107)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !2518, line: 1575, column: 4)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !2518, line: 1574, column: 43)
!4525 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1574, column: 7)
!4526 = !DILocalVariable(name: "rc", scope: !4527, file: !2518, line: 1584, type: !107)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !2518, line: 1584, column: 4)
!4528 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1582, column: 28)
!4529 = !DILocalVariable(name: "len", scope: !4530, file: !2518, line: 1589, type: !185)
!4530 = distinct !DILexicalBlock(scope: !4528, file: !2518, line: 1586, column: 13)
!4531 = !DILocalVariable(name: "len", scope: !4532, file: !2518, line: 1641, type: !185)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !2518, line: 1640, column: 24)
!4533 = distinct !DILexicalBlock(scope: !4528, file: !2518, line: 1640, column: 8)
!4534 = !DILocalVariable(name: "nj_len", scope: !4461, file: !2518, line: 1722, type: !185)
!4535 = !DILocalVariable(name: "pad_len", scope: !4461, file: !2518, line: 1723, type: !107)
!4536 = !DILocalVariable(name: "pad", scope: !4537, file: !2518, line: 1751, type: !120)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !2518, line: 1750, column: 26)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !2518, line: 1750, column: 8)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !2518, line: 1747, column: 18)
!4540 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1747, column: 7)
!4541 = !DILocalVariable(name: "rc", scope: !4542, file: !2518, line: 1758, type: !107)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !2518, line: 1758, column: 7)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !2518, line: 1757, column: 21)
!4544 = distinct !DILexicalBlock(scope: !4545, file: !2518, line: 1757, column: 10)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !2518, line: 1756, column: 26)
!4546 = distinct !DILexicalBlock(scope: !4537, file: !2518, line: 1756, column: 9)
!4547 = !DILocalVariable(name: "rc", scope: !4548, file: !2518, line: 1765, type: !107)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !2518, line: 1765, column: 6)
!4549 = distinct !DILexicalBlock(scope: !4537, file: !2518, line: 1764, column: 25)
!4550 = !DILocalVariable(name: "rc", scope: !4551, file: !2518, line: 1774, type: !107)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !2518, line: 1774, column: 4)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !2518, line: 1773, column: 18)
!4553 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1773, column: 7)
!4554 = !DILocalVariable(name: "rc", scope: !4555, file: !2518, line: 1819, type: !107)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !2518, line: 1819, column: 5)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !2518, line: 1818, column: 44)
!4557 = distinct !DILexicalBlock(scope: !4558, file: !2518, line: 1818, column: 8)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !2518, line: 1817, column: 10)
!4559 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1777, column: 7)
!4560 = !DILocalVariable(name: "rc", scope: !4561, file: !2518, line: 1823, type: !107)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !2518, line: 1823, column: 5)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !2518, line: 1822, column: 26)
!4563 = distinct !DILexicalBlock(scope: !4558, file: !2518, line: 1822, column: 8)
!4564 = !DILocalVariable(name: "rc", scope: !4565, file: !2518, line: 1828, type: !107)
!4565 = distinct !DILexicalBlock(scope: !4566, file: !2518, line: 1828, column: 5)
!4566 = distinct !DILexicalBlock(scope: !4558, file: !2518, line: 1827, column: 26)
!4567 = !DILocalVariable(name: "rc", scope: !4568, file: !2518, line: 1831, type: !107)
!4568 = distinct !DILexicalBlock(scope: !4558, file: !2518, line: 1831, column: 4)
!4569 = !DILocalVariable(name: "rc", scope: !4570, file: !2518, line: 1836, type: !107)
!4570 = distinct !DILexicalBlock(scope: !4571, file: !2518, line: 1836, column: 4)
!4571 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1835, column: 21)
!4572 = !DILabel(scope: !4528, name: "prec_int_pad0", file: !2518, line: 1634)
!4573 = !DILocation(line: 0, scope: !4434)
!4574 = !DILocation(line: 1341, column: 2, scope: !4434)
!4575 = !DILocation(line: 1341, column: 7, scope: !4434)
!4576 = !DILocation(line: 1375, column: 2, scope: !4434)
!4577 = !DILocation(line: 1342, column: 9, scope: !4434)
!4578 = !DILocation(line: 1375, column: 9, scope: !4434)
!4579 = !DILocation(line: 1377, column: 4, scope: !4458)
!4580 = !DILocation(line: 0, scope: !4458)
!4581 = !DILocation(line: 1377, column: 4, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4458, file: !2518, line: 1377, column: 4)
!4583 = distinct !{!4583, !4576, !4584}
!4584 = !DILocation(line: 1839, column: 2, scope: !4434)
!4585 = !DILocation(line: 1392, column: 3, scope: !4461)
!4586 = !DILocation(line: 1395, column: 5, scope: !4461)
!4587 = !DILocation(line: 0, scope: !4461)
!4588 = !DILocation(line: 1409, column: 8, scope: !4461)
!4589 = !DILocation(line: 1414, column: 13, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1414, column: 7)
!4591 = !DILocation(line: 1414, column: 7, scope: !4461)
!4592 = !DILocation(line: 1415, column: 12, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4590, file: !2518, line: 1414, column: 25)
!4594 = !DILocation(line: 1417, column: 14, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4593, file: !2518, line: 1417, column: 8)
!4596 = !DILocation(line: 1417, column: 8, scope: !4593)
!4597 = !DILocation(line: 1418, column: 21, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4595, file: !2518, line: 1417, column: 19)
!4599 = !DILocation(line: 1419, column: 13, scope: !4598)
!4600 = !DILocation(line: 1420, column: 4, scope: !4598)
!4601 = !DILocation(line: 1421, column: 20, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4590, file: !2518, line: 1421, column: 14)
!4603 = !DILocation(line: 1421, column: 14, scope: !4590)
!4604 = !DILocation(line: 1431, column: 13, scope: !4519)
!4605 = !DILocation(line: 1431, column: 7, scope: !4461)
!4606 = !DILocation(line: 1432, column: 14, scope: !4518)
!4607 = !DILocation(line: 0, scope: !4518)
!4608 = !DILocation(line: 1434, column: 12, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4518, file: !2518, line: 1434, column: 8)
!4610 = !DILocation(line: 1434, column: 8, scope: !4518)
!4611 = !DILocation(line: 1435, column: 24, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4609, file: !2518, line: 1434, column: 17)
!4613 = !DILocation(line: 1436, column: 4, scope: !4612)
!4614 = !DILocation(line: 1439, column: 20, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4519, file: !2518, line: 1439, column: 14)
!4616 = !DILocation(line: 1439, column: 14, scope: !4519)
!4617 = !DILocation(line: 1469, column: 37, scope: !4461)
!4618 = !DILocation(line: 1448, column: 20, scope: !4461)
!4619 = !DILocation(line: 1449, column: 22, scope: !4461)
!4620 = !DILocation(line: 1471, column: 34, scope: !4461)
!4621 = !DILocation(line: 1478, column: 7, scope: !4461)
!4622 = !DILocation(line: 1479, column: 4, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !2518, line: 1478, column: 40)
!4624 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1478, column: 7)
!4625 = !DILocation(line: 1484, column: 19, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4623, file: !2518, line: 1479, column: 24)
!4627 = !DILocation(line: 1484, column: 17, scope: !4626)
!4628 = !DILocation(line: 1485, column: 5, scope: !4626)
!4629 = !DILocation(line: 1492, column: 20, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !2518, line: 1491, column: 12)
!4631 = distinct !DILexicalBlock(scope: !4626, file: !2518, line: 1487, column: 9)
!4632 = !DILocation(line: 1492, column: 18, scope: !4630)
!4633 = !DILocation(line: 1494, column: 5, scope: !4626)
!4634 = !DILocation(line: 1497, column: 23, scope: !4626)
!4635 = !DILocation(line: 1496, column: 17, scope: !4626)
!4636 = !DILocation(line: 1498, column: 5, scope: !4626)
!4637 = !DILocation(line: 1501, column: 23, scope: !4626)
!4638 = !DILocation(line: 1500, column: 17, scope: !4626)
!4639 = !DILocation(line: 1502, column: 5, scope: !4626)
!4640 = !DILocation(line: 1513, column: 23, scope: !4626)
!4641 = !DILocation(line: 1513, column: 6, scope: !4626)
!4642 = !DILocation(line: 1512, column: 17, scope: !4626)
!4643 = !DILocation(line: 1514, column: 5, scope: !4626)
!4644 = !DILocation(line: 0, scope: !4626)
!4645 = !DILocation(line: 1516, column: 8, scope: !4623)
!4646 = !DILocation(line: 1517, column: 19, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !2518, line: 1516, column: 33)
!4648 = distinct !DILexicalBlock(scope: !4623, file: !2518, line: 1516, column: 8)
!4649 = !DILocation(line: 1517, column: 17, scope: !4647)
!4650 = !DILocation(line: 1518, column: 4, scope: !4647)
!4651 = !DILocation(line: 1519, column: 19, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !2518, line: 1518, column: 39)
!4653 = distinct !DILexicalBlock(scope: !4648, file: !2518, line: 1518, column: 15)
!4654 = !DILocation(line: 1519, column: 17, scope: !4652)
!4655 = !DILocation(line: 1520, column: 4, scope: !4652)
!4656 = !DILocation(line: 1522, column: 4, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !2518, line: 1521, column: 47)
!4658 = distinct !DILexicalBlock(scope: !4624, file: !2518, line: 1521, column: 14)
!4659 = !DILocation(line: 1527, column: 19, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4657, file: !2518, line: 1522, column: 24)
!4661 = !DILocation(line: 1527, column: 17, scope: !4660)
!4662 = !DILocation(line: 1528, column: 5, scope: !4660)
!4663 = !DILocation(line: 0, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4660, file: !2518, line: 1530, column: 9)
!4665 = !DILocation(line: 1540, column: 23, scope: !4660)
!4666 = !DILocation(line: 1539, column: 17, scope: !4660)
!4667 = !DILocation(line: 1542, column: 5, scope: !4660)
!4668 = !DILocation(line: 1545, column: 23, scope: !4660)
!4669 = !DILocation(line: 1544, column: 17, scope: !4660)
!4670 = !DILocation(line: 1547, column: 5, scope: !4660)
!4671 = !DILocation(line: 1551, column: 23, scope: !4660)
!4672 = !DILocation(line: 1551, column: 6, scope: !4660)
!4673 = !DILocation(line: 1550, column: 17, scope: !4660)
!4674 = !DILocation(line: 1552, column: 5, scope: !4660)
!4675 = !DILocation(line: 0, scope: !4660)
!4676 = !DILocation(line: 1554, column: 8, scope: !4657)
!4677 = !DILocation(line: 1555, column: 19, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4679, file: !2518, line: 1554, column: 33)
!4679 = distinct !DILexicalBlock(scope: !4657, file: !2518, line: 1554, column: 8)
!4680 = !DILocation(line: 1555, column: 17, scope: !4678)
!4681 = !DILocation(line: 1556, column: 4, scope: !4678)
!4682 = !DILocation(line: 1557, column: 19, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !2518, line: 1556, column: 39)
!4684 = distinct !DILexicalBlock(scope: !4679, file: !2518, line: 1556, column: 15)
!4685 = !DILocation(line: 1557, column: 17, scope: !4683)
!4686 = !DILocation(line: 1558, column: 4, scope: !4683)
!4687 = !DILocation(line: 0, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !2518, line: 1560, column: 8)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !2518, line: 1559, column: 45)
!4690 = distinct !DILexicalBlock(scope: !4658, file: !2518, line: 1559, column: 14)
!4691 = !DILocation(line: 1566, column: 17, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !2518, line: 1565, column: 46)
!4693 = distinct !DILexicalBlock(scope: !4690, file: !2518, line: 1565, column: 14)
!4694 = !DILocation(line: 1566, column: 15, scope: !4692)
!4695 = !DILocation(line: 1567, column: 3, scope: !4692)
!4696 = !DILocation(line: 1574, column: 21, scope: !4525)
!4697 = !DILocation(line: 1575, column: 4, scope: !4523)
!4698 = !DILocation(line: 0, scope: !4523)
!4699 = !DILocation(line: 1575, column: 4, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4523, file: !2518, line: 1575, column: 4)
!4701 = !DILocation(line: 1582, column: 17, scope: !4461)
!4702 = !DILocation(line: 1582, column: 3, scope: !4461)
!4703 = !DILocation(line: 1584, column: 4, scope: !4527)
!4704 = !DILocation(line: 0, scope: !4527)
!4705 = !DILocation(line: 1584, column: 4, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4527, file: !2518, line: 1584, column: 4)
!4707 = !DILocation(line: 1587, column: 31, scope: !4530)
!4708 = !DILocation(line: 1591, column: 18, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4530, file: !2518, line: 1591, column: 8)
!4710 = !DILocation(line: 1591, column: 8, scope: !4530)
!4711 = !DILocation(line: 1592, column: 11, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4709, file: !2518, line: 1591, column: 24)
!4713 = !DILocation(line: 0, scope: !4530)
!4714 = !DILocation(line: 1593, column: 4, scope: !4712)
!4715 = !DILocation(line: 1594, column: 11, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4709, file: !2518, line: 1593, column: 11)
!4717 = !DILocation(line: 1604, column: 51, scope: !4528)
!4718 = !DILocation(line: 1604, column: 13, scope: !4528)
!4719 = !DILocation(line: 1604, column: 11, scope: !4528)
!4720 = !DILocation(line: 1606, column: 4, scope: !4528)
!4721 = !DILocation(line: 1609, column: 14, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4528, file: !2518, line: 1609, column: 8)
!4723 = !DILocation(line: 1609, column: 8, scope: !4528)
!4724 = !DILocation(line: 1619, column: 18, scope: !4528)
!4725 = !DILocation(line: 1620, column: 13, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4528, file: !2518, line: 1620, column: 8)
!4727 = !DILocation(line: 1620, column: 8, scope: !4528)
!4728 = !DILocation(line: 1622, column: 36, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4726, file: !2518, line: 1620, column: 18)
!4730 = !DILocation(line: 1622, column: 17, scope: !4729)
!4731 = !DILocation(line: 1623, column: 4, scope: !4729)
!4732 = !DILocation(line: 1632, column: 29, scope: !4528)
!4733 = !DILocation(line: 1632, column: 10, scope: !4528)
!4734 = !DILocation(line: 1632, column: 4, scope: !4528)
!4735 = !DILocation(line: 1407, column: 8, scope: !4461)
!4736 = !DILocation(line: 0, scope: !4528)
!4737 = !DILocation(line: 1634, column: 3, scope: !4528)
!4738 = !DILocation(line: 1640, column: 18, scope: !4533)
!4739 = !DILocation(line: 1640, column: 8, scope: !4528)
!4740 = !DILocation(line: 1729, column: 13, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1729, column: 7)
!4742 = !DILocation(line: 1641, column: 22, scope: !4532)
!4743 = !DILocation(line: 0, scope: !4532)
!4744 = !DILocation(line: 1646, column: 21, scope: !4532)
!4745 = !DILocation(line: 1649, column: 13, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4532, file: !2518, line: 1649, column: 9)
!4747 = !DILocation(line: 1649, column: 9, scope: !4532)
!4748 = !DILocation(line: 1650, column: 35, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4746, file: !2518, line: 1649, column: 34)
!4750 = !DILocation(line: 1650, column: 23, scope: !4749)
!4751 = !DILocation(line: 1651, column: 5, scope: !4749)
!4752 = !DILocation(line: 1660, column: 15, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4528, file: !2518, line: 1660, column: 8)
!4754 = !DILocation(line: 1660, column: 19, scope: !4753)
!4755 = !DILocation(line: 1660, column: 8, scope: !4528)
!4756 = !DILocation(line: 1661, column: 23, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4753, file: !2518, line: 1660, column: 28)
!4758 = !DILocation(line: 1661, column: 11, scope: !4757)
!4759 = !DILocation(line: 1665, column: 22, scope: !4757)
!4760 = !DILocation(line: 1666, column: 21, scope: !4757)
!4761 = !DILocation(line: 1668, column: 5, scope: !4757)
!4762 = !DILocation(line: 1677, column: 30, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !2518, line: 1676, column: 49)
!4764 = distinct !DILexicalBlock(scope: !4528, file: !2518, line: 1676, column: 8)
!4765 = !DILocation(line: 1677, column: 5, scope: !4763)
!4766 = !DILocation(line: 1680, column: 4, scope: !4528)
!4767 = !DILocation(line: 0, scope: !4709)
!4768 = !DILocation(line: 1597, column: 14, scope: !4530)
!4769 = !DILocation(line: 1699, column: 11, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1699, column: 7)
!4771 = !DILocation(line: 1699, column: 7, scope: !4461)
!4772 = !DILocation(line: 1725, column: 7, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1725, column: 7)
!4774 = !DILocation(line: 1725, column: 12, scope: !4773)
!4775 = !DILocation(line: 1747, column: 13, scope: !4540)
!4776 = !DILocation(line: 1747, column: 7, scope: !4461)
!4777 = !DILocation(line: 1722, column: 24, scope: !4461)
!4778 = !DILocation(line: 1725, column: 7, scope: !4461)
!4779 = !DILocation(line: 1729, column: 7, scope: !4461)
!4780 = !DILocation(line: 1736, column: 13, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4461, file: !2518, line: 1736, column: 7)
!4782 = !DILocation(line: 1735, column: 19, scope: !4461)
!4783 = !DILocation(line: 1736, column: 7, scope: !4461)
!4784 = !DILocation(line: 1748, column: 10, scope: !4539)
!4785 = !DILocation(line: 1750, column: 15, scope: !4538)
!4786 = !DILocation(line: 1750, column: 8, scope: !4539)
!4787 = !DILocation(line: 0, scope: !4537)
!4788 = !DILocation(line: 1756, column: 15, scope: !4546)
!4789 = !DILocation(line: 1756, column: 9, scope: !4537)
!4790 = !DILocation(line: 1758, column: 7, scope: !4542)
!4791 = !DILocation(line: 0, scope: !4542)
!4792 = !DILocation(line: 1758, column: 7, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4542, file: !2518, line: 1758, column: 7)
!4794 = !DILocation(line: 1764, column: 5, scope: !4537)
!4795 = !DILocation(line: 0, scope: !4539)
!4796 = !DILocation(line: 1764, column: 20, scope: !4537)
!4797 = !DILocation(line: 1764, column: 17, scope: !4537)
!4798 = !DILocation(line: 1765, column: 6, scope: !4548)
!4799 = !DILocation(line: 0, scope: !4548)
!4800 = !DILocation(line: 1765, column: 6, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4548, file: !2518, line: 1765, column: 6)
!4802 = distinct !{!4802, !4794, !4803}
!4803 = !DILocation(line: 1766, column: 5, scope: !4537)
!4804 = !DILocation(line: 1773, column: 12, scope: !4553)
!4805 = !DILocation(line: 1773, column: 7, scope: !4461)
!4806 = !DILocation(line: 1773, column: 7, scope: !4553)
!4807 = !DILocation(line: 1774, column: 4, scope: !4551)
!4808 = !DILocation(line: 0, scope: !4551)
!4809 = !DILocation(line: 1774, column: 4, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4551, file: !2518, line: 1774, column: 4)
!4811 = !DILocation(line: 1818, column: 8, scope: !4557)
!4812 = !DILocation(line: 1818, column: 27, scope: !4557)
!4813 = !DILocation(line: 1818, column: 25, scope: !4557)
!4814 = !DILocation(line: 1818, column: 8, scope: !4558)
!4815 = !DILocation(line: 1819, column: 5, scope: !4555)
!4816 = !DILocation(line: 0, scope: !4555)
!4817 = !DILocation(line: 1819, column: 5, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4555, file: !2518, line: 1819, column: 5)
!4819 = !DILocation(line: 1822, column: 14, scope: !4563)
!4820 = !DILocation(line: 1822, column: 8, scope: !4558)
!4821 = !DILocation(line: 1823, column: 5, scope: !4561)
!4822 = !DILocation(line: 0, scope: !4561)
!4823 = !DILocation(line: 1823, column: 5, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4561, file: !2518, line: 1823, column: 5)
!4825 = !DILocation(line: 1826, column: 20, scope: !4558)
!4826 = !DILocation(line: 1827, column: 4, scope: !4558)
!4827 = !DILocation(line: 0, scope: !4558)
!4828 = !DILocation(line: 1827, column: 21, scope: !4558)
!4829 = !DILocation(line: 1827, column: 18, scope: !4558)
!4830 = !DILocation(line: 1828, column: 5, scope: !4565)
!4831 = !DILocation(line: 0, scope: !4565)
!4832 = !DILocation(line: 1828, column: 5, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4565, file: !2518, line: 1828, column: 5)
!4834 = distinct !{!4834, !4826, !4835}
!4835 = !DILocation(line: 1829, column: 4, scope: !4558)
!4836 = !DILocation(line: 1831, column: 4, scope: !4568)
!4837 = !DILocation(line: 0, scope: !4568)
!4838 = !DILocation(line: 1831, column: 4, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4568, file: !2518, line: 1831, column: 4)
!4840 = !DILocation(line: 1835, column: 16, scope: !4461)
!4841 = !DILocation(line: 1835, column: 3, scope: !4461)
!4842 = !DILocation(line: 1836, column: 4, scope: !4570)
!4843 = !DILocation(line: 0, scope: !4570)
!4844 = !DILocation(line: 1836, column: 4, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4570, file: !2518, line: 1836, column: 4)
!4846 = !DILocation(line: 1837, column: 4, scope: !4571)
!4847 = distinct !{!4847, !4841, !4848}
!4848 = !DILocation(line: 1838, column: 3, scope: !4461)
!4849 = !DILocation(line: 1844, column: 1, scope: !4434)
!4850 = distinct !DISubprogram(name: "extract_conversion", scope: !2518, file: !2518, line: 642, type: !4851, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4853)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!118, !4507, !118}
!4853 = !{!4854, !4855}
!4854 = !DILocalVariable(name: "conv", arg: 1, scope: !4850, file: !2518, line: 642, type: !4507)
!4855 = !DILocalVariable(name: "sp", arg: 2, scope: !4850, file: !2518, line: 643, type: !118)
!4856 = !DILocation(line: 0, scope: !4850)
!4857 = !DILocation(line: 645, column: 10, scope: !4850)
!4858 = !DILocation(line: 653, column: 2, scope: !4850)
!4859 = !DILocation(line: 654, column: 6, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4850, file: !2518, line: 654, column: 6)
!4861 = !DILocation(line: 654, column: 10, scope: !4860)
!4862 = !DILocation(line: 654, column: 6, scope: !4850)
!4863 = !DILocation(line: 655, column: 24, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4860, file: !2518, line: 654, column: 18)
!4865 = !DILocation(line: 655, column: 19, scope: !4864)
!4866 = !DILocation(line: 656, column: 3, scope: !4864)
!4867 = !DILocation(line: 659, column: 7, scope: !4850)
!4868 = !DILocation(line: 660, column: 7, scope: !4850)
!4869 = !DILocation(line: 661, column: 7, scope: !4850)
!4870 = !DILocation(line: 662, column: 7, scope: !4850)
!4871 = !DILocation(line: 663, column: 7, scope: !4850)
!4872 = !DILocation(line: 665, column: 2, scope: !4850)
!4873 = !DILocation(line: 666, column: 1, scope: !4850)
!4874 = distinct !DISubprogram(name: "outs", scope: !2518, file: !2518, line: 1319, type: !4875, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4877)
!4875 = !DISubroutineType(types: !4876)
!4876 = !{!107, !3589, !106, !118, !118}
!4877 = !{!4878, !4879, !4880, !4881, !4882, !4883}
!4878 = !DILocalVariable(name: "out", arg: 1, scope: !4874, file: !2518, line: 1319, type: !3589)
!4879 = !DILocalVariable(name: "ctx", arg: 2, scope: !4874, file: !2518, line: 1320, type: !106)
!4880 = !DILocalVariable(name: "sp", arg: 3, scope: !4874, file: !2518, line: 1321, type: !118)
!4881 = !DILocalVariable(name: "ep", arg: 4, scope: !4874, file: !2518, line: 1322, type: !118)
!4882 = !DILocalVariable(name: "count", scope: !4874, file: !2518, line: 1324, type: !185)
!4883 = !DILocalVariable(name: "rc", scope: !4884, file: !2518, line: 1327, type: !107)
!4884 = distinct !DILexicalBlock(scope: !4874, file: !2518, line: 1326, column: 45)
!4885 = !DILocation(line: 0, scope: !4874)
!4886 = !DILocation(line: 1326, column: 2, scope: !4874)
!4887 = !DILocation(line: 1324, column: 9, scope: !4874)
!4888 = !DILocation(line: 1326, column: 13, scope: !4874)
!4889 = !DILocation(line: 1326, column: 19, scope: !4874)
!4890 = !DILocation(line: 1327, column: 21, scope: !4884)
!4891 = !DILocation(line: 1326, column: 36, scope: !4874)
!4892 = !DILocation(line: 1326, column: 39, scope: !4874)
!4893 = !DILocation(line: 1327, column: 24, scope: !4884)
!4894 = !DILocation(line: 1327, column: 16, scope: !4884)
!4895 = !DILocation(line: 1327, column: 12, scope: !4884)
!4896 = !DILocation(line: 0, scope: !4884)
!4897 = !DILocation(line: 1329, column: 10, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4884, file: !2518, line: 1329, column: 7)
!4899 = !DILocation(line: 1329, column: 7, scope: !4884)
!4900 = distinct !{!4900, !4886, !4901}
!4901 = !DILocation(line: 1333, column: 2, scope: !4874)
!4902 = !DILocation(line: 1336, column: 1, scope: !4874)
!4903 = distinct !DISubprogram(name: "encode_uint", scope: !2518, file: !2518, line: 788, type: !4904, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4906)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{!193, !2540, !4507, !193, !118}
!4906 = !{!4907, !4908, !4909, !4910, !4911, !4912, !4914, !4915}
!4907 = !DILocalVariable(name: "value", arg: 1, scope: !4903, file: !2518, line: 788, type: !2540)
!4908 = !DILocalVariable(name: "conv", arg: 2, scope: !4903, file: !2518, line: 789, type: !4507)
!4909 = !DILocalVariable(name: "bps", arg: 3, scope: !4903, file: !2518, line: 790, type: !193)
!4910 = !DILocalVariable(name: "bpe", arg: 4, scope: !4903, file: !2518, line: 791, type: !118)
!4911 = !DILocalVariable(name: "upcase", scope: !4903, file: !2518, line: 793, type: !145)
!4912 = !DILocalVariable(name: "radix", scope: !4903, file: !2518, line: 794, type: !4913)
!4913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4914 = !DILocalVariable(name: "bp", scope: !4903, file: !2518, line: 795, type: !193)
!4915 = !DILocalVariable(name: "lsv", scope: !4916, file: !2518, line: 798, type: !32)
!4916 = distinct !DILexicalBlock(scope: !4903, file: !2518, line: 797, column: 5)
!4917 = !DILocation(line: 0, scope: !4903)
!4918 = !DILocation(line: 793, column: 35, scope: !4903)
!4919 = !DILocation(line: 793, column: 24, scope: !4903)
!4920 = !DILocation(line: 793, column: 16, scope: !4903)
!4921 = !DILocation(line: 794, column: 29, scope: !4903)
!4922 = !DILocation(line: 795, column: 24, scope: !4903)
!4923 = !DILocation(line: 795, column: 17, scope: !4903)
!4924 = !DILocation(line: 797, column: 2, scope: !4903)
!4925 = !DILocation(line: 802, column: 9, scope: !4916)
!4926 = !DILocation(line: 798, column: 22, scope: !4916)
!4927 = !DILocation(line: 0, scope: !4916)
!4928 = !DILocation(line: 800, column: 16, scope: !4916)
!4929 = !DILocation(line: 800, column: 11, scope: !4916)
!4930 = !DILocation(line: 800, column: 4, scope: !4916)
!4931 = !DILocation(line: 800, column: 9, scope: !4916)
!4932 = !DILocation(line: 803, column: 18, scope: !4903)
!4933 = !DILocation(line: 803, column: 24, scope: !4903)
!4934 = !DILocation(line: 803, column: 2, scope: !4916)
!4935 = distinct !{!4935, !4924, !4936}
!4936 = !DILocation(line: 803, column: 37, scope: !4903)
!4937 = !DILocation(line: 808, column: 12, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4903, file: !2518, line: 808, column: 6)
!4939 = !DILocation(line: 808, column: 6, scope: !4903)
!4940 = !DILocation(line: 809, column: 7, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4938, file: !2518, line: 808, column: 23)
!4942 = !DILocation(line: 813, column: 3, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4944, file: !2518, line: 811, column: 27)
!4944 = distinct !DILexicalBlock(scope: !4945, file: !2518, line: 811, column: 14)
!4945 = distinct !DILexicalBlock(scope: !4941, file: !2518, line: 809, column: 7)
!4946 = !DILocation(line: 0, scope: !4945)
!4947 = !DILocation(line: 818, column: 2, scope: !4903)
!4948 = distinct !DISubprogram(name: "store_count", scope: !2518, file: !2518, line: 1280, type: !4949, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4953)
!4949 = !DISubroutineType(types: !4950)
!4950 = !{null, !4951, !106, !107}
!4951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4952, size: 32)
!4952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4474)
!4953 = !{!4954, !4955, !4956}
!4954 = !DILocalVariable(name: "conv", arg: 1, scope: !4948, file: !2518, line: 1280, type: !4951)
!4955 = !DILocalVariable(name: "dp", arg: 2, scope: !4948, file: !2518, line: 1281, type: !106)
!4956 = !DILocalVariable(name: "count", arg: 3, scope: !4948, file: !2518, line: 1282, type: !107)
!4957 = !DILocation(line: 0, scope: !4948)
!4958 = !DILocation(line: 1284, column: 38, scope: !4948)
!4959 = !DILocation(line: 1284, column: 2, scope: !4948)
!4960 = !DILocation(line: 1286, column: 4, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4948, file: !2518, line: 1284, column: 50)
!4962 = !DILocation(line: 1286, column: 14, scope: !4961)
!4963 = !DILocation(line: 1287, column: 3, scope: !4961)
!4964 = !DILocation(line: 1289, column: 24, scope: !4961)
!4965 = !DILocation(line: 1289, column: 22, scope: !4961)
!4966 = !DILocation(line: 1290, column: 3, scope: !4961)
!4967 = !DILocation(line: 1292, column: 18, scope: !4961)
!4968 = !DILocation(line: 1292, column: 4, scope: !4961)
!4969 = !DILocation(line: 1292, column: 16, scope: !4961)
!4970 = !DILocation(line: 1293, column: 3, scope: !4961)
!4971 = !DILocation(line: 1295, column: 4, scope: !4961)
!4972 = !DILocation(line: 1295, column: 15, scope: !4961)
!4973 = !DILocation(line: 1296, column: 3, scope: !4961)
!4974 = !DILocation(line: 1298, column: 22, scope: !4961)
!4975 = !DILocation(line: 1298, column: 4, scope: !4961)
!4976 = !DILocation(line: 1298, column: 20, scope: !4961)
!4977 = !DILocation(line: 1299, column: 3, scope: !4961)
!4978 = !DILocation(line: 1301, column: 21, scope: !4961)
!4979 = !DILocation(line: 1301, column: 4, scope: !4961)
!4980 = !DILocation(line: 1301, column: 19, scope: !4961)
!4981 = !DILocation(line: 1302, column: 3, scope: !4961)
!4982 = !DILocation(line: 1304, column: 4, scope: !4961)
!4983 = !DILocation(line: 1304, column: 17, scope: !4961)
!4984 = !DILocation(line: 1305, column: 3, scope: !4961)
!4985 = !DILocation(line: 1307, column: 4, scope: !4961)
!4986 = !DILocation(line: 1307, column: 20, scope: !4961)
!4987 = !DILocation(line: 1308, column: 3, scope: !4961)
!4988 = !DILocation(line: 1316, column: 1, scope: !4948)
!4989 = distinct !DISubprogram(name: "isupper", scope: !4990, file: !4990, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4991)
!4990 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4991 = !{!4992}
!4992 = !DILocalVariable(name: "a", arg: 1, scope: !4989, file: !4990, line: 16, type: !107)
!4993 = !DILocation(line: 0, scope: !4989)
!4994 = !DILocation(line: 18, column: 29, scope: !4989)
!4995 = !DILocation(line: 18, column: 45, scope: !4989)
!4996 = !DILocation(line: 18, column: 2, scope: !4989)
!4997 = distinct !DISubprogram(name: "conversion_radix", scope: !2518, file: !2518, line: 761, type: !4998, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5000)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{!185, !120}
!5000 = !{!5001}
!5001 = !DILocalVariable(name: "specifier", arg: 1, scope: !4997, file: !2518, line: 761, type: !120)
!5002 = !DILocation(line: 0, scope: !4997)
!5003 = !DILocation(line: 763, column: 2, scope: !4997)
!5004 = !DILocation(line: 770, column: 3, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4997, file: !2518, line: 763, column: 21)
!5006 = !DILocation(line: 774, column: 3, scope: !5005)
!5007 = !DILocation(line: 0, scope: !5005)
!5008 = !DILocation(line: 776, column: 1, scope: !4997)
!5009 = distinct !DISubprogram(name: "extract_flags", scope: !2518, file: !2518, line: 339, type: !4851, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5010)
!5010 = !{!5011, !5012, !5013}
!5011 = !DILocalVariable(name: "conv", arg: 1, scope: !5009, file: !2518, line: 339, type: !4507)
!5012 = !DILocalVariable(name: "sp", arg: 2, scope: !5009, file: !2518, line: 340, type: !118)
!5013 = !DILocalVariable(name: "loop", scope: !5009, file: !2518, line: 342, type: !145)
!5014 = !DILocation(line: 0, scope: !5009)
!5015 = !DILocation(line: 344, column: 2, scope: !5009)
!5016 = !DILocation(line: 345, column: 11, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5009, file: !2518, line: 344, column: 5)
!5018 = !DILocation(line: 345, column: 3, scope: !5017)
!5019 = !DILocation(line: 351, column: 4, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5017, file: !2518, line: 345, column: 16)
!5021 = !DILocation(line: 354, column: 4, scope: !5020)
!5022 = !DILocation(line: 357, column: 4, scope: !5020)
!5023 = !DILocation(line: 360, column: 4, scope: !5020)
!5024 = !DILocation(line: 0, scope: !5020)
!5025 = !DILocation(line: 370, column: 12, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5009, file: !2518, line: 370, column: 6)
!5027 = !DILocation(line: 370, column: 22, scope: !5026)
!5028 = !DILocation(line: 371, column: 19, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5026, file: !2518, line: 370, column: 42)
!5030 = !DILocation(line: 372, column: 2, scope: !5029)
!5031 = !DILocation(line: 376, column: 2, scope: !5009)
!5032 = distinct !DISubprogram(name: "extract_width", scope: !2518, file: !2518, line: 388, type: !4851, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5033)
!5033 = !{!5034, !5035, !5036, !5037}
!5034 = !DILocalVariable(name: "conv", arg: 1, scope: !5032, file: !2518, line: 388, type: !4507)
!5035 = !DILocalVariable(name: "sp", arg: 2, scope: !5032, file: !2518, line: 389, type: !118)
!5036 = !DILocalVariable(name: "wp", scope: !5032, file: !2518, line: 398, type: !118)
!5037 = !DILocalVariable(name: "width", scope: !5032, file: !2518, line: 399, type: !185)
!5038 = !DILocation(line: 0, scope: !5032)
!5039 = !DILocation(line: 391, column: 8, scope: !5032)
!5040 = !DILocation(line: 391, column: 22, scope: !5032)
!5041 = !DILocation(line: 393, column: 6, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5032, file: !2518, line: 393, column: 6)
!5043 = !DILocation(line: 393, column: 10, scope: !5042)
!5044 = !DILocation(line: 393, column: 6, scope: !5032)
!5045 = !DILocation(line: 394, column: 20, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5042, file: !2518, line: 393, column: 18)
!5047 = !DILocation(line: 395, column: 10, scope: !5046)
!5048 = !DILocation(line: 395, column: 3, scope: !5046)
!5049 = !DILocation(line: 399, column: 17, scope: !5032)
!5050 = !DILocation(line: 401, column: 6, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5032, file: !2518, line: 401, column: 6)
!5052 = !DILocation(line: 401, column: 9, scope: !5051)
!5053 = !DILocation(line: 401, column: 6, scope: !5032)
!5054 = !DILocation(line: 402, column: 23, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5051, file: !2518, line: 401, column: 16)
!5056 = !DILocation(line: 403, column: 9, scope: !5055)
!5057 = !DILocation(line: 403, column: 21, scope: !5055)
!5058 = !DILocation(line: 405, column: 11, scope: !5055)
!5059 = !DILocation(line: 404, column: 21, scope: !5055)
!5060 = !DILocation(line: 406, column: 2, scope: !5055)
!5061 = !DILocation(line: 409, column: 1, scope: !5032)
!5062 = distinct !DISubprogram(name: "extract_prec", scope: !2518, file: !2518, line: 420, type: !4851, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5063)
!5063 = !{!5064, !5065, !5066}
!5064 = !DILocalVariable(name: "conv", arg: 1, scope: !5062, file: !2518, line: 420, type: !4507)
!5065 = !DILocalVariable(name: "sp", arg: 2, scope: !5062, file: !2518, line: 421, type: !118)
!5066 = !DILocalVariable(name: "prec", scope: !5062, file: !2518, line: 435, type: !185)
!5067 = !DILocation(line: 0, scope: !5062)
!5068 = !DILocation(line: 423, column: 24, scope: !5062)
!5069 = !DILocation(line: 423, column: 28, scope: !5062)
!5070 = !DILocation(line: 423, column: 8, scope: !5062)
!5071 = !DILocation(line: 423, column: 21, scope: !5062)
!5072 = !DILocation(line: 425, column: 6, scope: !5062)
!5073 = !DILocation(line: 428, column: 2, scope: !5062)
!5074 = !DILocation(line: 430, column: 6, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5062, file: !2518, line: 430, column: 6)
!5076 = !DILocation(line: 430, column: 10, scope: !5075)
!5077 = !DILocation(line: 430, column: 6, scope: !5062)
!5078 = !DILocation(line: 431, column: 19, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5075, file: !2518, line: 430, column: 18)
!5080 = !DILocation(line: 432, column: 10, scope: !5079)
!5081 = !DILocation(line: 432, column: 3, scope: !5079)
!5082 = !DILocation(line: 435, column: 16, scope: !5062)
!5083 = !DILocation(line: 437, column: 8, scope: !5062)
!5084 = !DILocation(line: 437, column: 19, scope: !5062)
!5085 = !DILocation(line: 439, column: 10, scope: !5062)
!5086 = !DILocation(line: 438, column: 20, scope: !5062)
!5087 = !DILocation(line: 441, column: 9, scope: !5062)
!5088 = !DILocation(line: 442, column: 1, scope: !5062)
!5089 = distinct !DISubprogram(name: "extract_length", scope: !2518, file: !2518, line: 453, type: !4851, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5090)
!5090 = !{!5091, !5092}
!5091 = !DILocalVariable(name: "conv", arg: 1, scope: !5089, file: !2518, line: 453, type: !4507)
!5092 = !DILocalVariable(name: "sp", arg: 2, scope: !5089, file: !2518, line: 454, type: !118)
!5093 = !DILocation(line: 0, scope: !5089)
!5094 = !DILocation(line: 456, column: 10, scope: !5089)
!5095 = !DILocation(line: 456, column: 2, scope: !5089)
!5096 = !DILocation(line: 458, column: 8, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5098, file: !2518, line: 458, column: 7)
!5098 = distinct !DILexicalBlock(scope: !5089, file: !2518, line: 456, column: 15)
!5099 = !DILocation(line: 458, column: 7, scope: !5097)
!5100 = !DILocation(line: 458, column: 13, scope: !5097)
!5101 = !DILocation(line: 0, scope: !5097)
!5102 = !DILocation(line: 458, column: 7, scope: !5098)
!5103 = !DILocation(line: 459, column: 21, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5097, file: !2518, line: 458, column: 21)
!5105 = !DILocation(line: 460, column: 4, scope: !5104)
!5106 = !DILocation(line: 461, column: 3, scope: !5104)
!5107 = !DILocation(line: 462, column: 21, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5097, file: !2518, line: 461, column: 10)
!5109 = !DILocation(line: 466, column: 8, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5098, file: !2518, line: 466, column: 7)
!5111 = !DILocation(line: 466, column: 7, scope: !5110)
!5112 = !DILocation(line: 466, column: 13, scope: !5110)
!5113 = !DILocation(line: 0, scope: !5110)
!5114 = !DILocation(line: 466, column: 7, scope: !5098)
!5115 = !DILocation(line: 467, column: 21, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5110, file: !2518, line: 466, column: 21)
!5117 = !DILocation(line: 468, column: 4, scope: !5116)
!5118 = !DILocation(line: 469, column: 3, scope: !5116)
!5119 = !DILocation(line: 470, column: 21, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5110, file: !2518, line: 469, column: 10)
!5121 = !DILocation(line: 474, column: 9, scope: !5098)
!5122 = !DILocation(line: 474, column: 20, scope: !5098)
!5123 = !DILocation(line: 475, column: 3, scope: !5098)
!5124 = !DILocation(line: 476, column: 3, scope: !5098)
!5125 = !DILocation(line: 478, column: 9, scope: !5098)
!5126 = !DILocation(line: 478, column: 20, scope: !5098)
!5127 = !DILocation(line: 479, column: 3, scope: !5098)
!5128 = !DILocation(line: 480, column: 3, scope: !5098)
!5129 = !DILocation(line: 482, column: 9, scope: !5098)
!5130 = !DILocation(line: 482, column: 20, scope: !5098)
!5131 = !DILocation(line: 483, column: 3, scope: !5098)
!5132 = !DILocation(line: 484, column: 3, scope: !5098)
!5133 = !DILocation(line: 486, column: 9, scope: !5098)
!5134 = !DILocation(line: 486, column: 20, scope: !5098)
!5135 = !DILocation(line: 487, column: 3, scope: !5098)
!5136 = !DILocation(line: 492, column: 21, scope: !5098)
!5137 = !DILocation(line: 493, column: 3, scope: !5098)
!5138 = !DILocation(line: 495, column: 9, scope: !5098)
!5139 = !DILocation(line: 495, column: 20, scope: !5098)
!5140 = !DILocation(line: 496, column: 3, scope: !5098)
!5141 = !DILocation(line: 498, column: 2, scope: !5089)
!5142 = distinct !DISubprogram(name: "extract_specifier", scope: !2518, file: !2518, line: 513, type: !4851, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5143)
!5143 = !{!5144, !5145, !5146, !5147}
!5144 = !DILocalVariable(name: "conv", arg: 1, scope: !5142, file: !2518, line: 513, type: !4507)
!5145 = !DILocalVariable(name: "sp", arg: 2, scope: !5142, file: !2518, line: 514, type: !118)
!5146 = !DILocalVariable(name: "unsupported", scope: !5142, file: !2518, line: 516, type: !145)
!5147 = !DILabel(scope: !5148, name: "int_conv", file: !2518, line: 526)
!5148 = distinct !DILexicalBlock(scope: !5142, file: !2518, line: 520, column: 27)
!5149 = !DILocation(line: 0, scope: !5142)
!5150 = !DILocation(line: 518, column: 20, scope: !5142)
!5151 = !DILocation(line: 518, column: 8, scope: !5142)
!5152 = !DILocation(line: 518, column: 18, scope: !5142)
!5153 = !DILocation(line: 520, column: 2, scope: !5142)
!5154 = !DILocation(line: 525, column: 3, scope: !5148)
!5155 = !DILocation(line: 0, scope: !5148)
!5156 = !DILocation(line: 526, column: 1, scope: !5148)
!5157 = !DILocation(line: 528, column: 24, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5148, file: !2518, line: 528, column: 7)
!5159 = !DILocation(line: 528, column: 7, scope: !5148)
!5160 = !DILocation(line: 535, column: 23, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5148, file: !2518, line: 535, column: 7)
!5162 = !DILocation(line: 535, column: 7, scope: !5148)
!5163 = !DILocation(line: 536, column: 36, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5161, file: !2518, line: 535, column: 31)
!5165 = !DILocation(line: 537, column: 3, scope: !5164)
!5166 = !DILocation(line: 570, column: 9, scope: !5148)
!5167 = !DILocation(line: 570, column: 23, scope: !5148)
!5168 = !DILocation(line: 575, column: 4, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5170, file: !2518, line: 573, column: 48)
!5170 = distinct !DILexicalBlock(scope: !5148, file: !2518, line: 573, column: 7)
!5171 = !DILocation(line: 603, column: 9, scope: !5148)
!5172 = !DILocation(line: 603, column: 23, scope: !5148)
!5173 = !DILocation(line: 605, column: 24, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5148, file: !2518, line: 605, column: 7)
!5175 = !DILocation(line: 605, column: 7, scope: !5148)
!5176 = !DILocation(line: 612, column: 9, scope: !5148)
!5177 = !DILocation(line: 612, column: 23, scope: !5148)
!5178 = !DILocation(line: 619, column: 24, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5148, file: !2518, line: 619, column: 7)
!5180 = !DILocation(line: 619, column: 7, scope: !5148)
!5181 = !DILocation(line: 625, column: 9, scope: !5148)
!5182 = !DILocation(line: 625, column: 17, scope: !5148)
!5183 = !DILocation(line: 626, column: 3, scope: !5148)
!5184 = !DILocation(line: 629, column: 20, scope: !5142)
!5185 = !DILocation(line: 629, column: 8, scope: !5142)
!5186 = !DILocation(line: 518, column: 23, scope: !5142)
!5187 = !DILocation(line: 631, column: 2, scope: !5142)
!5188 = distinct !DISubprogram(name: "extract_decimal", scope: !2518, file: !2518, line: 318, type: !5189, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5191)
!5189 = !DISubroutineType(types: !5190)
!5190 = !{!185, !184}
!5191 = !{!5192, !5193, !5194}
!5192 = !DILocalVariable(name: "str", arg: 1, scope: !5188, file: !2518, line: 318, type: !184)
!5193 = !DILocalVariable(name: "sp", scope: !5188, file: !2518, line: 320, type: !118)
!5194 = !DILocalVariable(name: "val", scope: !5188, file: !2518, line: 321, type: !185)
!5195 = !DILocation(line: 0, scope: !5188)
!5196 = !DILocation(line: 320, column: 19, scope: !5188)
!5197 = !DILocation(line: 323, column: 37, scope: !5188)
!5198 = !DILocation(line: 323, column: 17, scope: !5188)
!5199 = !DILocation(line: 323, column: 9, scope: !5188)
!5200 = !DILocation(line: 323, column: 2, scope: !5188)
!5201 = !DILocation(line: 324, column: 13, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5188, file: !2518, line: 323, column: 43)
!5203 = !DILocation(line: 324, column: 24, scope: !5202)
!5204 = !DILocation(line: 324, column: 19, scope: !5202)
!5205 = !DILocation(line: 324, column: 27, scope: !5202)
!5206 = distinct !{!5206, !5200, !5207}
!5207 = !DILocation(line: 325, column: 2, scope: !5188)
!5208 = !DILocation(line: 326, column: 7, scope: !5188)
!5209 = !DILocation(line: 327, column: 2, scope: !5188)
!5210 = distinct !DISubprogram(name: "isdigit", scope: !4990, file: !4990, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5211)
!5211 = !{!5212}
!5212 = !DILocalVariable(name: "a", arg: 1, scope: !5210, file: !4990, line: 43, type: !107)
!5213 = !DILocation(line: 0, scope: !5210)
!5214 = !DILocation(line: 45, column: 29, scope: !5210)
!5215 = !DILocation(line: 45, column: 45, scope: !5210)
!5216 = !DILocation(line: 45, column: 2, scope: !5210)
!5217 = distinct !DISubprogram(name: "assert_post_action", scope: !5218, file: !5218, line: 26, type: !5219, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !5221)
!5218 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5219 = !DISubroutineType(types: !5220)
!5220 = !{null, !118, !32}
!5221 = !{!5222, !5223}
!5222 = !DILocalVariable(name: "file", arg: 1, scope: !5217, file: !5218, line: 26, type: !118)
!5223 = !DILocalVariable(name: "line", arg: 2, scope: !5217, file: !5218, line: 26, type: !32)
!5224 = !DILocation(line: 0, scope: !5217)
!5225 = !DILocation(line: 43, column: 2, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5217, file: !5218, line: 43, column: 2)
!5227 = !{i64 2154852549, i64 2154852565, i64 2154852591, i64 2154852619, i64 2154852639}
!5228 = !DILocation(line: 44, column: 1, scope: !5217)
!5229 = distinct !DISubprogram(name: "assert_print", scope: !5218, file: !5218, line: 46, type: !4199, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !5230)
!5230 = !{!5231, !5232}
!5231 = !DILocalVariable(name: "fmt", arg: 1, scope: !5229, file: !5218, line: 46, type: !118)
!5232 = !DILocalVariable(name: "ap", scope: !5229, file: !5218, line: 48, type: !5233)
!5233 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3209, line: 99, baseType: !5234)
!5234 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3209, line: 40, baseType: !5235)
!5235 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5218, baseType: !5236)
!5236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5237)
!5237 = !{!5238}
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5236, file: !5218, line: 48, baseType: !106, size: 32)
!5239 = !DILocation(line: 0, scope: !5229)
!5240 = !DILocation(line: 48, column: 2, scope: !5229)
!5241 = !DILocation(line: 48, column: 10, scope: !5229)
!5242 = !DILocation(line: 50, column: 2, scope: !5229)
!5243 = !DILocation(line: 52, column: 2, scope: !5229)
!5244 = !DILocation(line: 54, column: 2, scope: !5229)
!5245 = !DILocation(line: 55, column: 1, scope: !5229)
!5246 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5247, file: !5247, line: 9, type: !3089, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2166)
!5247 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!5248 = !DILocation(line: 11, column: 1, scope: !5246)
!5249 = !{i64 2147566803, i64 2147566846, i64 2147566886}
!5250 = !DILocation(line: 12, column: 1, scope: !5246)
!5251 = !{i64 2147571030, i64 2147571073, i64 2147571113}
!5252 = !DILocation(line: 13, column: 1, scope: !5246)
!5253 = !{i64 2147571239, i64 2147571282, i64 2147571322}
!5254 = !DILocation(line: 14, column: 1, scope: !5246)
!5255 = !{i64 2147571408, i64 2147571451, i64 2147571491}
!5256 = !DILocation(line: 15, column: 1, scope: !5246)
!5257 = !{i64 2147571571, i64 2147571614, i64 2147571654}
!5258 = !DILocation(line: 16, column: 1, scope: !5246)
!5259 = !{i64 2147571755, i64 2147571798, i64 2147571838}
!5260 = !DILocation(line: 17, column: 1, scope: !5246)
!5261 = !{i64 2147571934, i64 2147571977, i64 2147572017}
!5262 = !DILocation(line: 18, column: 1, scope: !5246)
!5263 = !{i64 2147572177, i64 2147572220, i64 2147572260}
!5264 = !DILocation(line: 19, column: 1, scope: !5246)
!5265 = !{i64 2147572412, i64 2147572455, i64 2147572495}
!5266 = !DILocation(line: 20, column: 1, scope: !5246)
!5267 = !{i64 2147572599, i64 2147572642, i64 2147572682}
!5268 = !DILocation(line: 21, column: 1, scope: !5246)
!5269 = !{i64 2147572815, i64 2147572858, i64 2147572898}
!5270 = !DILocation(line: 22, column: 1, scope: !5246)
!5271 = !{i64 2147573018, i64 2147573061, i64 2147573101}
!5272 = !DILocation(line: 23, column: 1, scope: !5246)
!5273 = !{i64 2147573221, i64 2147573264, i64 2147573304}
!5274 = !DILocation(line: 24, column: 1, scope: !5246)
!5275 = !{i64 2147573396, i64 2147573439, i64 2147573479}
!5276 = !DILocation(line: 25, column: 1, scope: !5246)
!5277 = !{i64 2147573604, i64 2147573647, i64 2147573687}
!5278 = !DILocation(line: 26, column: 1, scope: !5246)
!5279 = !{i64 2147573808, i64 2147573851, i64 2147573891}
!5280 = !DILocation(line: 27, column: 1, scope: !5246)
!5281 = !{i64 2147574001, i64 2147574044, i64 2147574084}
!5282 = !DILocation(line: 28, column: 1, scope: !5246)
!5283 = !{i64 2147574203, i64 2147574246, i64 2147574286}
!5284 = !DILocation(line: 29, column: 1, scope: !5246)
!5285 = !{i64 2147574402, i64 2147574445, i64 2147574485}
!5286 = !DILocation(line: 30, column: 1, scope: !5246)
!5287 = !{i64 2147574629, i64 2147574672, i64 2147574712}
!5288 = !DILocation(line: 31, column: 1, scope: !5246)
!5289 = !{i64 2147574831, i64 2147574874, i64 2147574914}
!5290 = !DILocation(line: 32, column: 1, scope: !5246)
!5291 = !{i64 2147575046, i64 2147575089, i64 2147575129}
!5292 = !DILocation(line: 33, column: 1, scope: !5246)
!5293 = !{i64 2147575263, i64 2147575306, i64 2147575346}
!5294 = !DILocation(line: 34, column: 1, scope: !5246)
!5295 = !{i64 2147575435, i64 2147575478, i64 2147575518}
!5296 = !DILocation(line: 35, column: 1, scope: !5246)
!5297 = !{i64 2147575637, i64 2147575680, i64 2147575720}
!5298 = !DILocation(line: 36, column: 1, scope: !5246)
!5299 = !{i64 2147575863, i64 2147575906, i64 2147575946}
!5300 = !DILocation(line: 37, column: 1, scope: !5246)
!5301 = !{i64 2147576062, i64 2147576105, i64 2147576145}
!5302 = !DILocation(line: 38, column: 1, scope: !5246)
!5303 = !{i64 2147576237, i64 2147576280, i64 2147576320}
!5304 = !DILocation(line: 39, column: 1, scope: !5246)
!5305 = !{i64 2147576505, i64 2147576548, i64 2147576588}
!5306 = !DILocation(line: 40, column: 1, scope: !5246)
!5307 = !{i64 2147576758, i64 2147576801, i64 2147576841}
!5308 = !DILocation(line: 41, column: 1, scope: !5246)
!5309 = !{i64 2147576999, i64 2147577042, i64 2147577082}
!5310 = !DILocation(line: 42, column: 1, scope: !5246)
!5311 = !{i64 2147577234, i64 2147577277, i64 2147577317}
!5312 = !DILocation(line: 43, column: 1, scope: !5246)
!5313 = !{i64 2147577466, i64 2147577509, i64 2147577549}
!5314 = !DILocation(line: 44, column: 1, scope: !5246)
!5315 = !{i64 2147577692, i64 2147577735, i64 2147577775}
!5316 = !DILocation(line: 45, column: 1, scope: !5246)
!5317 = !{i64 2147577930, i64 2147577973, i64 2147578013}
!5318 = !DILocation(line: 46, column: 1, scope: !5246)
!5319 = !{i64 2147578156, i64 2147578199, i64 2147578239}
!5320 = !DILocation(line: 47, column: 1, scope: !5246)
!5321 = !{i64 2147578391, i64 2147578434, i64 2147578474}
!5322 = !DILocation(line: 48, column: 1, scope: !5246)
!5323 = !{i64 2147578626, i64 2147578669, i64 2147578709}
!5324 = !DILocation(line: 49, column: 1, scope: !5246)
!5325 = !{i64 2147578864, i64 2147578907, i64 2147578947}
!5326 = !DILocation(line: 50, column: 1, scope: !5246)
!5327 = !{i64 2147579138, i64 2147579181, i64 2147579221}
!5328 = !DILocation(line: 51, column: 1, scope: !5246)
!5329 = !{i64 2147579376, i64 2147579419, i64 2147579459}
!5330 = !DILocation(line: 52, column: 1, scope: !5246)
!5331 = !{i64 2147579629, i64 2147579672, i64 2147579712}
!5332 = !DILocation(line: 53, column: 1, scope: !5246)
!5333 = !{i64 2147583934, i64 2147583977, i64 2147584017}
!5334 = !DILocation(line: 54, column: 1, scope: !5246)
!5335 = !{i64 2147584184, i64 2147584227, i64 2147584267}
!5336 = !DILocation(line: 55, column: 1, scope: !5246)
!5337 = !{i64 2147584425, i64 2147584468, i64 2147584508}
!5338 = !DILocation(line: 56, column: 1, scope: !5246)
!5339 = !{i64 2147584672, i64 2147584715, i64 2147584755}
!5340 = !DILocation(line: 57, column: 1, scope: !5246)
!5341 = !{i64 2147584907, i64 2147584950, i64 2147584990}
!5342 = !DILocation(line: 58, column: 1, scope: !5246)
!5343 = !{i64 2147585142, i64 2147585185, i64 2147585225}
!5344 = !DILocation(line: 59, column: 1, scope: !5246)
!5345 = !{i64 2147585377, i64 2147585420, i64 2147585460}
!5346 = !DILocation(line: 60, column: 1, scope: !5246)
!5347 = !{i64 2147585615, i64 2147585658, i64 2147585698}
!5348 = !DILocation(line: 61, column: 1, scope: !5246)
!5349 = !{i64 2147585856, i64 2147585899, i64 2147585939}
!5350 = !DILocation(line: 62, column: 1, scope: !5246)
!5351 = !{i64 2147586136, i64 2147586179, i64 2147586219}
!5352 = !DILocation(line: 63, column: 1, scope: !5246)
!5353 = !{i64 2147586395, i64 2147586438, i64 2147586478}
!5354 = !DILocation(line: 64, column: 1, scope: !5246)
!5355 = !{i64 2147586633, i64 2147586676, i64 2147586716}
!5356 = !DILocation(line: 65, column: 1, scope: !5246)
!5357 = !{i64 2147586892, i64 2147586935, i64 2147586975}
!5358 = !DILocation(line: 66, column: 1, scope: !5246)
!5359 = !{i64 2147587121, i64 2147587164, i64 2147587204}
!5360 = !DILocation(line: 67, column: 1, scope: !5246)
!5361 = !{i64 2147587329, i64 2147587372, i64 2147587412}
!5362 = !DILocation(line: 68, column: 1, scope: !5246)
!5363 = !{i64 2147587540, i64 2147587583, i64 2147587623}
!5364 = !DILocation(line: 69, column: 1, scope: !5246)
!5365 = !{i64 2147587775, i64 2147587818, i64 2147587858}
!5366 = !DILocation(line: 70, column: 1, scope: !5246)
!5367 = !{i64 2147588004, i64 2147588047, i64 2147588087}
!5368 = !DILocation(line: 71, column: 1, scope: !5246)
!5369 = !{i64 2147588221, i64 2147588264, i64 2147588304}
!5370 = !DILocation(line: 72, column: 1, scope: !5246)
!5371 = !{i64 2147588450, i64 2147588493, i64 2147588533}
!5372 = !DILocation(line: 73, column: 1, scope: !5246)
!5373 = !{i64 2147588688, i64 2147588731, i64 2147588771}
!5374 = !DILocation(line: 74, column: 1, scope: !5246)
!5375 = !{i64 2147588920, i64 2147588963, i64 2147589003}
!5376 = !DILocation(line: 75, column: 1, scope: !5246)
!5377 = !{i64 2147589146, i64 2147589189, i64 2147589229}
!5378 = !DILocation(line: 76, column: 1, scope: !5246)
!5379 = !{i64 2147589363, i64 2147589406, i64 2147589446}
!5380 = !DILocation(line: 77, column: 1, scope: !5246)
!5381 = !{i64 2147589595, i64 2147589638, i64 2147589678}
!5382 = !DILocation(line: 78, column: 1, scope: !5246)
!5383 = !{i64 2147589821, i64 2147589864, i64 2147589904}
!5384 = !DILocation(line: 79, column: 1, scope: !5246)
!5385 = !{i64 2147590035, i64 2147590078, i64 2147590118}
!5386 = !DILocation(line: 80, column: 1, scope: !5246)
!5387 = !{i64 2147590255, i64 2147590298, i64 2147590338}
!5388 = !DILocation(line: 81, column: 1, scope: !5246)
!5389 = !{i64 2147590487, i64 2147590530, i64 2147590570}
!5390 = !DILocation(line: 82, column: 1, scope: !5246)
!5391 = !{i64 2147590695, i64 2147590738, i64 2147590778}
!5392 = !DILocation(line: 83, column: 1, scope: !5246)
!5393 = !{i64 2147590900, i64 2147590943, i64 2147590983}
!5394 = !DILocation(line: 84, column: 1, scope: !5246)
!5395 = !{i64 2147591117, i64 2147591160, i64 2147591200}
!5396 = !DILocation(line: 85, column: 1, scope: !5246)
!5397 = !{i64 2147591331, i64 2147591374, i64 2147591414}
!5398 = !DILocation(line: 86, column: 1, scope: !5246)
!5399 = !{i64 2147591557, i64 2147591600, i64 2147591640}
!5400 = !DILocation(line: 87, column: 1, scope: !5246)
!5401 = !{i64 2147591777, i64 2147591820, i64 2147591860}
!5402 = !DILocation(line: 88, column: 1, scope: !5246)
!5403 = !{i64 2147596043, i64 2147596086, i64 2147596126}
!5404 = !DILocation(line: 89, column: 1, scope: !5246)
!5405 = !{i64 2147596275, i64 2147596318, i64 2147596358}
!5406 = !DILocation(line: 90, column: 1, scope: !5246)
!5407 = !{i64 2147596510, i64 2147596553, i64 2147596593}
!5408 = !DILocation(line: 91, column: 1, scope: !5246)
!5409 = !{i64 2147596760, i64 2147596803, i64 2147596843}
!5410 = !DILocation(line: 92, column: 1, scope: !5246)
!5411 = !{i64 2147597010, i64 2147597053, i64 2147597093}
!5412 = !DILocation(line: 93, column: 1, scope: !5246)
!5413 = !{i64 2147597248, i64 2147597291, i64 2147597331}
!5414 = !DILocation(line: 94, column: 1, scope: !5246)
!5415 = !{i64 2147597459, i64 2147597502, i64 2147597542}
!5416 = !DILocation(line: 95, column: 1, scope: !5246)
!5417 = !{i64 2147597676, i64 2147597719, i64 2147597759}
!5418 = !DILocation(line: 96, column: 1, scope: !5246)
!5419 = !{i64 2147597872, i64 2147597915, i64 2147597955}
!5420 = !DILocation(line: 97, column: 1, scope: !5246)
!5421 = !{i64 2147598074, i64 2147598117, i64 2147598157}
!5422 = !DILocation(line: 98, column: 1, scope: !5246)
!5423 = !{i64 2147598267, i64 2147598310, i64 2147598350}
!5424 = !DILocation(line: 99, column: 1, scope: !5246)
!5425 = !{i64 2147598475, i64 2147598518, i64 2147598558}
!5426 = !DILocation(line: 100, column: 1, scope: !5246)
!5427 = !{i64 2147598671, i64 2147598714, i64 2147598754}
!5428 = !DILocation(line: 101, column: 1, scope: !5246)
!5429 = !{i64 2147598921, i64 2147598964, i64 2147599004}
!5430 = !DILocation(line: 102, column: 1, scope: !5246)
!5431 = !{i64 2147599132, i64 2147599175, i64 2147599215}
!5432 = !DILocation(line: 103, column: 1, scope: !5246)
!5433 = !{i64 2147599331, i64 2147599374, i64 2147599414}
!5434 = !DILocation(line: 104, column: 1, scope: !5246)
!5435 = !{i64 2147599506, i64 2147599549, i64 2147599589}
!5436 = !DILocation(line: 105, column: 1, scope: !5246)
!5437 = !{i64 2147599690, i64 2147599733, i64 2147599773}
!5438 = !DILocation(line: 106, column: 1, scope: !5246)
!5439 = !{i64 2147599892, i64 2147599935, i64 2147599975}
!5440 = !DILocation(line: 107, column: 1, scope: !5246)
!5441 = !{i64 2147600073, i64 2147600116, i64 2147600156}
!5442 = !DILocation(line: 108, column: 1, scope: !5246)
!5443 = !{i64 2147600272, i64 2147600315, i64 2147600355}
!5444 = !DILocation(line: 109, column: 1, scope: !5246)
!5445 = !{i64 2147600477, i64 2147600520, i64 2147600560}
!5446 = !DILocation(line: 110, column: 1, scope: !5246)
!5447 = !{i64 2147600670, i64 2147600713, i64 2147600753}
!5448 = !DILocation(line: 111, column: 1, scope: !5246)
!5449 = !{i64 2147600836, i64 2147600879, i64 2147600919}
!5450 = !DILocation(line: 112, column: 1, scope: !5246)
!5451 = !{i64 2147601020, i64 2147601063, i64 2147601103}
!5452 = !DILocation(line: 113, column: 1, scope: !5246)
!5453 = !{i64 2147601210, i64 2147601253, i64 2147601293}
!5454 = !DILocation(line: 114, column: 1, scope: !5246)
!5455 = !{i64 2147601394, i64 2147601437, i64 2147601477}
!5456 = !DILocation(line: 115, column: 1, scope: !5246)
!5457 = !{i64 2147601608, i64 2147601651, i64 2147601691}
!5458 = !DILocation(line: 116, column: 1, scope: !5246)
!5459 = !{i64 2147601819, i64 2147601862, i64 2147601902}
!5460 = !DILocation(line: 117, column: 1, scope: !5246)
!5461 = !{i64 2147602042, i64 2147602085, i64 2147602125}
!5462 = !DILocation(line: 118, column: 1, scope: !5246)
!5463 = !{i64 2147602226, i64 2147602269, i64 2147602309}
!5464 = !DILocation(line: 119, column: 1, scope: !5246)
!5465 = !{i64 2147602440, i64 2147602483, i64 2147602523}
!5466 = !DILocation(line: 120, column: 1, scope: !5246)
!5467 = !{i64 2147602606, i64 2147602649, i64 2147602689}
!5468 = !DILocation(line: 121, column: 1, scope: !5246)
!5469 = !{i64 2147602787, i64 2147602830, i64 2147602870}
!5470 = !DILocation(line: 122, column: 1, scope: !5246)
!5471 = !{i64 2147602980, i64 2147603023, i64 2147603063}
!5472 = !DILocation(line: 123, column: 1, scope: !5246)
!5473 = !{i64 2147603206, i64 2147603249, i64 2147603289}
!5474 = !DILocation(line: 124, column: 1, scope: !5246)
!5475 = !{i64 2147603420, i64 2147603463, i64 2147603503}
!5476 = !DILocation(line: 125, column: 1, scope: !5246)
!5477 = !{i64 2147603646, i64 2147603689, i64 2147603729}
!5478 = !DILocation(line: 126, column: 1, scope: !5246)
!5479 = !{i64 2147603863, i64 2147603906, i64 2147603946}
!5480 = !DILocation(line: 127, column: 1, scope: !5246)
!5481 = !{i64 2147604140, i64 2147604183, i64 2147604223}
!5482 = !DILocation(line: 128, column: 1, scope: !5246)
!5483 = !{i64 2147604366, i64 2147604409, i64 2147604449}
!5484 = !DILocation(line: 129, column: 1, scope: !5246)
!5485 = !{i64 2147604574, i64 2147604617, i64 2147604657}
!5486 = !DILocation(line: 130, column: 1, scope: !5246)
!5487 = !{i64 2147604770, i64 2147604813, i64 2147604853}
!5488 = !DILocation(line: 131, column: 1, scope: !5246)
!5489 = !{i64 2147605035, i64 2147605078, i64 2147605118}
!5490 = !DILocation(line: 132, column: 1, scope: !5246)
!5491 = !{i64 2147609310, i64 2147609353, i64 2147609393}
!5492 = !DILocation(line: 133, column: 1, scope: !5246)
!5493 = !{i64 2147609485, i64 2147609528, i64 2147609568}
!5494 = !DILocation(line: 134, column: 1, scope: !5246)
!5495 = !{i64 2147609739, i64 2147609782, i64 2147609822}
!5496 = !DILocation(line: 135, column: 1, scope: !5246)
!5497 = !{i64 2147609938, i64 2147609981, i64 2147610021}
!5498 = !DILocation(line: 136, column: 1, scope: !5246)
!5499 = !{i64 2147610180, i64 2147610223, i64 2147610263}
!5500 = !DILocation(line: 137, column: 1, scope: !5246)
!5501 = !{i64 2147610343, i64 2147610386, i64 2147610426}
!5502 = !DILocation(line: 138, column: 1, scope: !5246)
!5503 = !{i64 2147610530, i64 2147610573, i64 2147610613}
!5504 = !DILocation(line: 139, column: 1, scope: !5246)
!5505 = !{i64 2147610738, i64 2147610781, i64 2147610821}
!5506 = !DILocation(line: 140, column: 1, scope: !5246)
!5507 = !{i64 2147610934, i64 2147610977, i64 2147611017}
!5508 = !DILocation(line: 141, column: 1, scope: !5246)
!5509 = !{i64 2147611127, i64 2147611170, i64 2147611210}
!5510 = !DILocation(line: 142, column: 1, scope: !5246)
!5511 = !{i64 2147611310, i64 2147611353, i64 2147611393}
!5512 = !DILocation(line: 143, column: 1, scope: !5246)
!5513 = !{i64 2147611524, i64 2147611567, i64 2147611607}
!5514 = !DILocation(line: 144, column: 1, scope: !5246)
!5515 = !{i64 2147611735, i64 2147611778, i64 2147611818}
!5516 = !DILocation(line: 145, column: 1, scope: !5246)
!5517 = !{i64 2147611955, i64 2147611998, i64 2147612038}
!5518 = !DILocation(line: 146, column: 1, scope: !5246)
!5519 = !{i64 2147612162, i64 2147612205, i64 2147612245}
!5520 = !DILocation(line: 147, column: 1, scope: !5246)
!5521 = !{i64 2147612435, i64 2147612478, i64 2147612518}
!5522 = !DILocation(line: 148, column: 1, scope: !5246)
!5523 = !{i64 2147612683, i64 2147612726, i64 2147612766}
!5524 = !DILocation(line: 149, column: 1, scope: !5246)
!5525 = !{i64 2147612882, i64 2147612925, i64 2147612965}
!5526 = !DILocation(line: 150, column: 1, scope: !5246)
!5527 = !{i64 2147613117, i64 2147613160, i64 2147613200}
!5528 = !DILocation(line: 151, column: 1, scope: !5246)
!5529 = !{i64 2147613367, i64 2147613410, i64 2147613450}
!5530 = !DILocation(line: 152, column: 1, scope: !5246)
!5531 = !{i64 2147613569, i64 2147613612, i64 2147613652}
!5532 = !DILocation(line: 153, column: 1, scope: !5246)
!5533 = !{i64 2147613792, i64 2147613835, i64 2147613875}
!5534 = !DILocation(line: 154, column: 1, scope: !5246)
!5535 = !{i64 2147614006, i64 2147614049, i64 2147614089}
!5536 = !DILocation(line: 155, column: 1, scope: !5246)
!5537 = !{i64 2147614250, i64 2147614293, i64 2147614333}
!5538 = !DILocation(line: 156, column: 1, scope: !5246)
!5539 = !{i64 2147614479, i64 2147614522, i64 2147614562}
!5540 = !DILocation(line: 157, column: 1, scope: !5246)
!5541 = !{i64 2147614708, i64 2147614751, i64 2147614791}
!5542 = !DILocation(line: 158, column: 1, scope: !5246)
!5543 = !{i64 2147614916, i64 2147614959, i64 2147614999}
!5544 = !DILocation(line: 159, column: 1, scope: !5246)
!5545 = !{i64 2147615154, i64 2147615197, i64 2147615237}
!5546 = !DILocation(line: 160, column: 1, scope: !5246)
!5547 = !{i64 2147615380, i64 2147615423, i64 2147615463}
!5548 = !DILocation(line: 161, column: 1, scope: !5246)
!5549 = !{i64 2147615639, i64 2147615682, i64 2147615722}
!5550 = !DILocation(line: 162, column: 1, scope: !5246)
!5551 = !{i64 2147615859, i64 2147615902, i64 2147615942}
!5552 = !DILocation(line: 163, column: 1, scope: !5246)
!5553 = !{i64 2147616091, i64 2147616134, i64 2147616174}
!5554 = !DILocation(line: 164, column: 1, scope: !5246)
!5555 = !{i64 2147616332, i64 2147616375, i64 2147616415}
!5556 = !DILocation(line: 165, column: 1, scope: !5246)
!5557 = !{i64 2147616573, i64 2147616616, i64 2147616656}
!5558 = !DILocation(line: 166, column: 1, scope: !5246)
!5559 = !{i64 2147616796, i64 2147616839, i64 2147616879}
!5560 = !DILocation(line: 167, column: 1, scope: !5246)
!5561 = !{i64 2147617013, i64 2147617056, i64 2147617096}
!5562 = !DILocation(line: 168, column: 1, scope: !5246)
!5563 = !{i64 2147617254, i64 2147617297, i64 2147617337}
!5564 = !DILocation(line: 169, column: 1, scope: !5246)
!5565 = !{i64 2147617441, i64 2147617484, i64 2147617524}
!5566 = !DILocation(line: 170, column: 1, scope: !5246)
!5567 = !{i64 2147617628, i64 2147617671, i64 2147617711}
!5568 = !DILocation(line: 171, column: 1, scope: !5246)
!5569 = !{i64 2147617791, i64 2147617834, i64 2147617874}
!5570 = !DILocation(line: 172, column: 1, scope: !5246)
!5571 = !{i64 2147622057, i64 2147622100, i64 2147622140}
!5572 = !DILocation(line: 173, column: 1, scope: !5246)
!5573 = !{i64 2147622250, i64 2147622293, i64 2147622333}
!5574 = !DILocation(line: 174, column: 1, scope: !5246)
!5575 = !{i64 2147622509, i64 2147622552, i64 2147622592}
!5576 = !DILocation(line: 175, column: 1, scope: !5246)
!5577 = !{i64 2147622732, i64 2147622775, i64 2147622815}
!5578 = !DILocation(line: 176, column: 1, scope: !5246)
!5579 = !{i64 2147622961, i64 2147623004, i64 2147623044}
!5580 = !DILocation(line: 177, column: 1, scope: !5246)
!5581 = !{i64 2147623175, i64 2147623218, i64 2147623258}
!5582 = !DILocation(line: 178, column: 1, scope: !5246)
!5583 = !{i64 2147623377, i64 2147623420, i64 2147623460}
!5584 = !DILocation(line: 179, column: 1, scope: !5246)
!5585 = !{i64 2147623573, i64 2147623616, i64 2147623656}
!5586 = !DILocation(line: 180, column: 1, scope: !5246)
!5587 = !{i64 2147623785, i64 2147623828, i64 2147623868}
!5588 = !DILocation(line: 181, column: 1, scope: !5246)
!5589 = !{i64 2147624006, i64 2147624049, i64 2147624089}
!5590 = !DILocation(line: 182, column: 1, scope: !5246)
!5591 = !{i64 2147624220, i64 2147624263, i64 2147624303}
!5592 = !DILocation(line: 183, column: 1, scope: !5246)
!5593 = !{i64 2147624410, i64 2147624453, i64 2147624493}
!5594 = !DILocation(line: 184, column: 1, scope: !5246)
!5595 = !{i64 2147624609, i64 2147624652, i64 2147624692}
!5596 = !DILocation(line: 185, column: 1, scope: !5246)
!5597 = !{i64 2147624814, i64 2147624857, i64 2147624897}
!5598 = !DILocation(line: 186, column: 1, scope: !5246)
!5599 = !{i64 2147625034, i64 2147625077, i64 2147625117}
!5600 = !DILocation(line: 187, column: 1, scope: !5246)
!5601 = !{i64 2147625235, i64 2147625278, i64 2147625318}
!5602 = !DILocation(line: 188, column: 1, scope: !5246)
!5603 = !{i64 2147625434, i64 2147625477, i64 2147625517}
!5604 = !DILocation(line: 189, column: 1, scope: !5246)
!5605 = !{i64 2147625639, i64 2147625682, i64 2147625722}
!5606 = !DILocation(line: 190, column: 1, scope: !5246)
!5607 = !{i64 2147625808, i64 2147625851, i64 2147625891}
!5608 = !DILocation(line: 191, column: 1, scope: !5246)
!5609 = !{i64 2147625992, i64 2147626035, i64 2147626075}
!5610 = !DILocation(line: 192, column: 1, scope: !5246)
!5611 = !{i64 2147626176, i64 2147626219, i64 2147626259}
!5612 = !DILocation(line: 193, column: 1, scope: !5246)
!5613 = !{i64 2147626363, i64 2147626406, i64 2147626446}
!5614 = !DILocation(line: 194, column: 1, scope: !5246)
!5615 = !{i64 2147626547, i64 2147626590, i64 2147626630}
!5616 = !DILocation(line: 195, column: 1, scope: !5246)
!5617 = !{i64 2147626734, i64 2147626777, i64 2147626817}
!5618 = !DILocation(line: 196, column: 1, scope: !5246)
!5619 = !{i64 2147626946, i64 2147626989, i64 2147627029}
!5620 = !DILocation(line: 197, column: 1, scope: !5246)
!5621 = !{i64 2147627184, i64 2147627227, i64 2147627267}
!5622 = !DILocation(line: 198, column: 1, scope: !5246)
!5623 = !{i64 2147627414, i64 2147627457, i64 2147627497}
!5624 = !DILocation(line: 199, column: 1, scope: !5246)
!5625 = !{i64 2147627643, i64 2147627686, i64 2147627726}
!5626 = !DILocation(line: 200, column: 1, scope: !5246)
!5627 = !{i64 2147627830, i64 2147627873, i64 2147627913}
!5628 = !DILocation(line: 201, column: 1, scope: !5246)
!5629 = !{i64 2147628026, i64 2147628069, i64 2147628109}
!5630 = !DILocation(line: 202, column: 1, scope: !5246)
!5631 = !{i64 2147628234, i64 2147628277, i64 2147628317}
!5632 = !DILocation(line: 203, column: 1, scope: !5246)
!5633 = !{i64 2147628446, i64 2147628489, i64 2147628529}
!5634 = !DILocation(line: 204, column: 1, scope: !5246)
!5635 = !{i64 2147628645, i64 2147628688, i64 2147628728}
!5636 = !DILocation(line: 205, column: 1, scope: !5246)
!5637 = !{i64 2147628883, i64 2147628926, i64 2147628966}
!5638 = !DILocation(line: 206, column: 1, scope: !5246)
!5639 = !{i64 2147629079, i64 2147629122, i64 2147629162}
!5640 = !DILocation(line: 207, column: 1, scope: !5246)
!5641 = !{i64 2147629281, i64 2147629324, i64 2147629364}
!5642 = !DILocation(line: 208, column: 1, scope: !5246)
!5643 = !{i64 2147629474, i64 2147629517, i64 2147629557}
!5644 = !DILocation(line: 209, column: 1, scope: !5246)
!5645 = !{i64 2147629708, i64 2147629751, i64 2147629791}
!5646 = !DILocation(line: 210, column: 1, scope: !5246)
!5647 = !{i64 2147629871, i64 2147629914, i64 2147629954}
!5648 = !DILocation(line: 211, column: 1, scope: !5246)
!5649 = !{i64 2147630110, i64 2147630153, i64 2147630193}
!5650 = !DILocation(line: 212, column: 1, scope: !5246)
!5651 = !{i64 2147630349, i64 2147630392, i64 2147630432}
!5652 = !DILocation(line: 213, column: 1, scope: !5246)
!5653 = !{i64 2147630585, i64 2147630628, i64 2147630668}
!5654 = !DILocation(line: 214, column: 1, scope: !5246)
!5655 = !{i64 2147630815, i64 2147630858, i64 2147630898}
!5656 = !DILocation(line: 215, column: 1, scope: !5246)
!5657 = !{i64 2147631002, i64 2147631045, i64 2147631085}
!5658 = !DILocation(line: 216, column: 1, scope: !5246)
!5659 = !{i64 2147635262, i64 2147635305, i64 2147635345}
!5660 = !DILocation(line: 217, column: 1, scope: !5246)
!5661 = !{i64 2147635533, i64 2147635576, i64 2147635616}
!5662 = !DILocation(line: 218, column: 1, scope: !5246)
!5663 = !{i64 2147635708, i64 2147635751, i64 2147635791}
!5664 = !DILocation(line: 219, column: 1, scope: !5246)
!5665 = !{i64 2147635942, i64 2147635985, i64 2147636025}
!5666 = !DILocation(line: 220, column: 1, scope: !5246)
!5667 = !{i64 2147636150, i64 2147636193, i64 2147636233}
!5668 = !DILocation(line: 221, column: 1, scope: !5246)
!5669 = !{i64 2147636368, i64 2147636411, i64 2147636451}
!5670 = !DILocation(line: 222, column: 1, scope: !5246)
!5671 = !{i64 2147636558, i64 2147636601, i64 2147636641}
!5672 = !DILocation(line: 223, column: 1, scope: !5246)
!5673 = !{i64 2147636790, i64 2147636833, i64 2147636873}
!5674 = !DILocation(line: 224, column: 1, scope: !5246)
!5675 = !{i64 2147637010, i64 2147637053, i64 2147637093}
!5676 = !DILocation(line: 225, column: 1, scope: !5246)
!5677 = !{i64 2147637206, i64 2147637249, i64 2147637289}
!5678 = !DILocation(line: 226, column: 1, scope: !5246)
!5679 = !{i64 2147637412, i64 2147637455, i64 2147637495}
!5680 = !DILocation(line: 227, column: 1, scope: !5246)
!5681 = !{i64 2147637617, i64 2147637660, i64 2147637700}
!5682 = !DILocation(line: 228, column: 1, scope: !5246)
!5683 = !{i64 2147637843, i64 2147637886, i64 2147637926}
!5684 = !DILocation(line: 229, column: 1, scope: !5246)
!5685 = !{i64 2147638051, i64 2147638094, i64 2147638134}
!5686 = !DILocation(line: 230, column: 1, scope: !5246)
!5687 = !{i64 2147638247, i64 2147638290, i64 2147638330}
!5688 = !DILocation(line: 231, column: 1, scope: !5246)
!5689 = !{i64 2147638479, i64 2147638522, i64 2147638562}
!5690 = !DILocation(line: 232, column: 1, scope: !5246)
!5691 = !{i64 2147638663, i64 2147638706, i64 2147638746}
!5692 = !DILocation(line: 233, column: 1, scope: !5246)
!5693 = !{i64 2147638872, i64 2147638915, i64 2147638955}
!5694 = !DILocation(line: 234, column: 1, scope: !5246)
!5695 = !{i64 2147639080, i64 2147639123, i64 2147639163}
!5696 = !DILocation(line: 235, column: 1, scope: !5246)
!5697 = !{i64 2147639276, i64 2147639319, i64 2147639359}
!5698 = !DILocation(line: 236, column: 1, scope: !5246)
!5699 = !{i64 2147639460, i64 2147639503, i64 2147639543}
!5700 = !DILocation(line: 237, column: 1, scope: !5246)
!5701 = !{i64 2147639686, i64 2147639729, i64 2147639769}
!5702 = !DILocation(line: 238, column: 1, scope: !5246)
!5703 = !{i64 2147639912, i64 2147639955, i64 2147639995}
!5704 = !DILocation(line: 239, column: 1, scope: !5246)
!5705 = !{i64 2147640138, i64 2147640181, i64 2147640221}
!5706 = !DILocation(line: 240, column: 1, scope: !5246)
!5707 = !{i64 2147640364, i64 2147640407, i64 2147640447}
!5708 = !DILocation(line: 241, column: 1, scope: !5246)
!5709 = !{i64 2147640590, i64 2147640633, i64 2147640673}
!5710 = !DILocation(line: 242, column: 1, scope: !5246)
!5711 = !{i64 2147640822, i64 2147640865, i64 2147640905}
!5712 = !DILocation(line: 243, column: 1, scope: !5246)
!5713 = !{i64 2147641060, i64 2147641103, i64 2147641143}
!5714 = !DILocation(line: 244, column: 1, scope: !5246)
!5715 = !{i64 2147641280, i64 2147641323, i64 2147641363}
!5716 = !DILocation(line: 245, column: 1, scope: !5246)
!5717 = !{i64 2147641524, i64 2147641567, i64 2147641607}
!5718 = !DILocation(line: 246, column: 1, scope: !5246)
!5719 = !{i64 2147641765, i64 2147641808, i64 2147641848}
!5720 = !DILocation(line: 247, column: 1, scope: !5246)
!5721 = !{i64 2147642000, i64 2147642043, i64 2147642083}
!5722 = !DILocation(line: 248, column: 1, scope: !5246)
!5723 = !{i64 2147642232, i64 2147642275, i64 2147642315}
!5724 = !DILocation(line: 249, column: 1, scope: !5246)
!5725 = !{i64 2147642434, i64 2147642477, i64 2147642517}
!5726 = !DILocation(line: 250, column: 1, scope: !5246)
!5727 = !{i64 2147642684, i64 2147642727, i64 2147642767}
!5728 = !DILocation(line: 251, column: 1, scope: !5246)
!5729 = !{i64 2147642922, i64 2147642965, i64 2147643005}
!5730 = !DILocation(line: 252, column: 1, scope: !5246)
!5731 = !{i64 2147643130, i64 2147643173, i64 2147643213}
!5732 = !DILocation(line: 253, column: 1, scope: !5246)
!5733 = !{i64 2147643326, i64 2147643369, i64 2147643409}
!5734 = !DILocation(line: 254, column: 1, scope: !5246)
!5735 = !{i64 2147643510, i64 2147643553, i64 2147643593}
!5736 = !DILocation(line: 255, column: 1, scope: !5246)
!5737 = !{i64 2147643727, i64 2147643770, i64 2147643810}
!5738 = !DILocation(line: 256, column: 1, scope: !5246)
!5739 = !{i64 2147647993, i64 2147648036, i64 2147648076}
!5740 = !DILocation(line: 257, column: 1, scope: !5246)
!5741 = !{i64 2147648228, i64 2147648271, i64 2147648311}
!5742 = !DILocation(line: 258, column: 1, scope: !5246)
!5743 = !{i64 2147648451, i64 2147648494, i64 2147648534}
!5744 = !DILocation(line: 259, column: 1, scope: !5246)
!5745 = !{i64 2147648675, i64 2147648718, i64 2147648758}
!5746 = !DILocation(line: 260, column: 1, scope: !5246)
!5747 = !{i64 2147648913, i64 2147648956, i64 2147648996}
!5748 = !DILocation(line: 261, column: 1, scope: !5246)
!5749 = !{i64 2147649151, i64 2147649194, i64 2147649234}
!5750 = !DILocation(line: 262, column: 1, scope: !5246)
!5751 = !{i64 2147649368, i64 2147649411, i64 2147649451}
!5752 = !DILocation(line: 263, column: 1, scope: !5246)
!5753 = !{i64 2147649573, i64 2147649616, i64 2147649656}
!5754 = !DILocation(line: 264, column: 1, scope: !5246)
!5755 = !{i64 2147649766, i64 2147649809, i64 2147649849}
!5756 = !DILocation(line: 265, column: 1, scope: !5246)
!5757 = !{i64 2147650019, i64 2147650062, i64 2147650102}
!5758 = !DILocation(line: 266, column: 1, scope: !5246)
!5759 = !{i64 2147650227, i64 2147650270, i64 2147650310}
!5760 = !DILocation(line: 267, column: 1, scope: !5246)
!5761 = !{i64 2147650423, i64 2147650466, i64 2147650506}
!5762 = !DILocation(line: 268, column: 1, scope: !5246)
!5763 = !{i64 2147650637, i64 2147650680, i64 2147650720}
!5764 = !DILocation(line: 269, column: 1, scope: !5246)
!5765 = !{i64 2147650845, i64 2147650888, i64 2147650928}
!5766 = !DILocation(line: 270, column: 1, scope: !5246)
!5767 = !{i64 2147651035, i64 2147651078, i64 2147651118}
!5768 = !DILocation(line: 271, column: 1, scope: !5246)
!5769 = !{i64 2147651249, i64 2147651292, i64 2147651332}
!5770 = !DILocation(line: 272, column: 1, scope: !5246)
!5771 = !{i64 2147651511, i64 2147651554, i64 2147651594}
!5772 = !DILocation(line: 273, column: 1, scope: !5246)
!5773 = !{i64 2147651722, i64 2147651765, i64 2147651805}
!5774 = !DILocation(line: 274, column: 1, scope: !5246)
!5775 = !{i64 2147651966, i64 2147652009, i64 2147652049}
!5776 = !DILocation(line: 275, column: 1, scope: !5246)
!5777 = !{i64 2147652177, i64 2147652220, i64 2147652260}
!5778 = !DILocation(line: 276, column: 1, scope: !5246)
!5779 = !{i64 2147652406, i64 2147652449, i64 2147652489}
!5780 = !DILocation(line: 277, column: 1, scope: !5246)
!5781 = !{i64 2147652671, i64 2147652714, i64 2147652754}
!5782 = !DILocation(line: 278, column: 1, scope: !5246)
!5783 = !{i64 2147652876, i64 2147652919, i64 2147652959}
!5784 = !DILocation(line: 279, column: 1, scope: !5246)
!5785 = !{i64 2147653072, i64 2147653115, i64 2147653155}
!5786 = !DILocation(line: 280, column: 1, scope: !5246)
!5787 = !{i64 2147653295, i64 2147653338, i64 2147653378}
!5788 = !DILocation(line: 281, column: 1, scope: !5246)
!5789 = !{i64 2147653458, i64 2147653501, i64 2147653541}
!5790 = !DILocation(line: 282, column: 1, scope: !5246)
!5791 = !{i64 2147653663, i64 2147653706, i64 2147653746}
!5792 = !DILocation(line: 283, column: 1, scope: !5246)
!5793 = !{i64 2147653883, i64 2147653926, i64 2147653966}
!5794 = !DILocation(line: 284, column: 1, scope: !5246)
!5795 = !{i64 2147654097, i64 2147654140, i64 2147654180}
!5796 = !DILocation(line: 285, column: 1, scope: !5246)
!5797 = !{i64 2147654341, i64 2147654384, i64 2147654424}
!5798 = !DILocation(line: 286, column: 1, scope: !5246)
!5799 = !{i64 2147654573, i64 2147654616, i64 2147654656}
!5800 = !DILocation(line: 287, column: 1, scope: !5246)
!5801 = !{i64 2147654787, i64 2147654830, i64 2147654870}
!5802 = !DILocation(line: 288, column: 1, scope: !5246)
!5803 = !{i64 2147654998, i64 2147655041, i64 2147655081}
!5804 = !DILocation(line: 289, column: 1, scope: !5246)
!5805 = !{i64 2147655191, i64 2147655234, i64 2147655274}
!5806 = !DILocation(line: 290, column: 1, scope: !5246)
!5807 = !{i64 2147655390, i64 2147655433, i64 2147655473}
!5808 = !DILocation(line: 291, column: 1, scope: !5246)
!5809 = !{i64 2147655562, i64 2147655605, i64 2147655645}
!5810 = !DILocation(line: 292, column: 1, scope: !5246)
!5811 = !{i64 2147655755, i64 2147655798, i64 2147655838}
!5812 = !DILocation(line: 293, column: 1, scope: !5246)
!5813 = !{i64 2147655927, i64 2147655970, i64 2147656010}
!5814 = !DILocation(line: 294, column: 1, scope: !5246)
!5815 = !{i64 2147656117, i64 2147656160, i64 2147656200}
!5816 = !DILocation(line: 295, column: 1, scope: !5246)
!5817 = !{i64 2147656310, i64 2147656353, i64 2147656393}
!5818 = !DILocation(line: 296, column: 1, scope: !5246)
!5819 = !{i64 2147656506, i64 2147656549, i64 2147656589}
!5820 = !DILocation(line: 297, column: 1, scope: !5246)
!5821 = !{i64 2147656669, i64 2147656712, i64 2147656752}
!5822 = !DILocation(line: 298, column: 1, scope: !5246)
!5823 = !{i64 2147660932, i64 2147660975, i64 2147661015}
!5824 = !DILocation(line: 299, column: 1, scope: !5246)
!5825 = !{i64 2147661143, i64 2147661186, i64 2147661226}
!5826 = !DILocation(line: 300, column: 1, scope: !5246)
!5827 = !{i64 2147661348, i64 2147661391, i64 2147661431}
!5828 = !DILocation(line: 301, column: 1, scope: !5246)
!5829 = !{i64 2147661556, i64 2147661599, i64 2147661639}
!5830 = !DILocation(line: 302, column: 1, scope: !5246)
!5831 = !{i64 2147661749, i64 2147661792, i64 2147661832}
!5832 = !DILocation(line: 303, column: 1, scope: !5246)
!5833 = !{i64 2147661987, i64 2147662030, i64 2147662070}
!5834 = !DILocation(line: 304, column: 1, scope: !5246)
!5835 = !{i64 2147662174, i64 2147662217, i64 2147662257}
!5836 = !DILocation(line: 305, column: 1, scope: !5246)
!5837 = !{i64 2147662343, i64 2147662386, i64 2147662426}
!5838 = !DILocation(line: 306, column: 1, scope: !5246)
!5839 = !{i64 2147662536, i64 2147662579, i64 2147662619}
!5840 = !DILocation(line: 307, column: 1, scope: !5246)
!5841 = !{i64 2147662741, i64 2147662784, i64 2147662824}
!5842 = !DILocation(line: 308, column: 1, scope: !5246)
!5843 = !{i64 2147662952, i64 2147662995, i64 2147663035}
!5844 = !DILocation(line: 309, column: 1, scope: !5246)
!5845 = !{i64 2147663175, i64 2147663218, i64 2147663258}
!5846 = !DILocation(line: 310, column: 1, scope: !5246)
!5847 = !{i64 2147663389, i64 2147663432, i64 2147663472}
!5848 = !DILocation(line: 311, column: 1, scope: !5246)
!5849 = !{i64 2147663607, i64 2147663650, i64 2147663690}
!5850 = !DILocation(line: 312, column: 1, scope: !5246)
!5851 = !{i64 2147663821, i64 2147663864, i64 2147663904}
!5852 = !DILocation(line: 313, column: 1, scope: !5246)
!5853 = !{i64 2147664035, i64 2147664078, i64 2147664118}
!5854 = !DILocation(line: 314, column: 1, scope: !5246)
!5855 = !{i64 2147664252, i64 2147664295, i64 2147664335}
!5856 = !DILocation(line: 315, column: 1, scope: !5246)
!5857 = !{i64 2147664466, i64 2147664509, i64 2147664549}
!5858 = !DILocation(line: 316, column: 1, scope: !5246)
!5859 = !{i64 2147664707, i64 2147664750, i64 2147664790}
!5860 = !DILocation(line: 317, column: 1, scope: !5246)
!5861 = !{i64 2147664873, i64 2147664916, i64 2147664956}
!5862 = !DILocation(line: 318, column: 1, scope: !5246)
!5863 = !{i64 2147665100, i64 2147665143, i64 2147665183}
!5864 = !DILocation(line: 319, column: 1, scope: !5246)
!5865 = !{i64 2147665317, i64 2147665360, i64 2147665400}
!5866 = !DILocation(line: 320, column: 1, scope: !5246)
!5867 = !{i64 2147665543, i64 2147665586, i64 2147665626}
!5868 = !DILocation(line: 321, column: 1, scope: !5246)
!5869 = !{i64 2147665748, i64 2147665791, i64 2147665831}
!5870 = !DILocation(line: 322, column: 1, scope: !5246)
!5871 = !{i64 2147665965, i64 2147666008, i64 2147666048}
!5872 = !DILocation(line: 323, column: 1, scope: !5246)
!5873 = !{i64 2147666257, i64 2147666300, i64 2147666340}
!5874 = !DILocation(line: 324, column: 1, scope: !5246)
!5875 = !{i64 2147666489, i64 2147666532, i64 2147666572}
!5876 = !DILocation(line: 325, column: 1, scope: !5246)
!5877 = !{i64 2147666706, i64 2147666749, i64 2147666789}
!5878 = !DILocation(line: 326, column: 1, scope: !5246)
!5879 = !{i64 2147666913, i64 2147666956, i64 2147666996}
!5880 = !DILocation(line: 327, column: 1, scope: !5246)
!5881 = !{i64 2147667114, i64 2147667157, i64 2147667197}
!5882 = !DILocation(line: 328, column: 1, scope: !5246)
!5883 = !{i64 2147667346, i64 2147667389, i64 2147667429}
!5884 = !DILocation(line: 329, column: 1, scope: !5246)
!5885 = !{i64 2147667554, i64 2147667597, i64 2147667637}
!5886 = !DILocation(line: 330, column: 1, scope: !5246)
!5887 = !{i64 2147667744, i64 2147667787, i64 2147667827}
!5888 = !DILocation(line: 331, column: 1, scope: !5246)
!5889 = !{i64 2147667970, i64 2147668013, i64 2147668053}
!5890 = !DILocation(line: 332, column: 1, scope: !5246)
!5891 = !{i64 2147668159, i64 2147668202, i64 2147668242}
!5892 = !DILocation(line: 333, column: 1, scope: !5246)
!5893 = !{i64 2147668430, i64 2147668473, i64 2147668513}
!5894 = !DILocation(line: 334, column: 1, scope: !5246)
!5895 = !{i64 2147668650, i64 2147668693, i64 2147668733}
!5896 = !DILocation(line: 335, column: 1, scope: !5246)
!5897 = !{i64 2147668903, i64 2147668946, i64 2147668986}
!5898 = !DILocation(line: 336, column: 1, scope: !5246)
!5899 = !{i64 2147669111, i64 2147669154, i64 2147669194}
!5900 = !DILocation(line: 337, column: 1, scope: !5246)
!5901 = !{i64 2147669343, i64 2147669386, i64 2147669426}
!5902 = !DILocation(line: 338, column: 1, scope: !5246)
!5903 = !{i64 2147669554, i64 2147669597, i64 2147669637}
!5904 = !DILocation(line: 339, column: 1, scope: !5246)
!5905 = !{i64 2147673805, i64 2147673848, i64 2147673888}
!5906 = !DILocation(line: 340, column: 1, scope: !5246)
!5907 = !{i64 2147674019, i64 2147674062, i64 2147674102}
!5908 = !DILocation(line: 341, column: 1, scope: !5246)
!5909 = !{i64 2147674218, i64 2147674261, i64 2147674301}
!5910 = !DILocation(line: 342, column: 1, scope: !5246)
!5911 = !{i64 2147674405, i64 2147674448, i64 2147674488}
!5912 = !DILocation(line: 343, column: 1, scope: !5246)
!5913 = !{i64 2147674601, i64 2147674644, i64 2147674684}
!5914 = !DILocation(line: 344, column: 1, scope: !5246)
!5915 = !{i64 2147674809, i64 2147674852, i64 2147674892}
!5916 = !DILocation(line: 345, column: 1, scope: !5246)
!5917 = !{i64 2147675038, i64 2147675081, i64 2147675121}
!5918 = !DILocation(line: 346, column: 1, scope: !5246)
!5919 = !{i64 2147675240, i64 2147675283, i64 2147675323}
!5920 = !DILocation(line: 347, column: 1, scope: !5246)
!5921 = !{i64 2147675439, i64 2147675482, i64 2147675522}
!5922 = !DILocation(line: 348, column: 1, scope: !5246)
!5923 = !{i64 2147675656, i64 2147675699, i64 2147675739}
!5924 = !DILocation(line: 350, column: 1, scope: !5246)
!5925 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !235, file: !235, line: 30, type: !242, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5926)
!5926 = !{!5927, !5928}
!5927 = !DILocalVariable(name: "arg", arg: 1, scope: !5925, file: !235, line: 30, type: !244)
!5928 = !DILocalVariable(name: "key", scope: !5925, file: !235, line: 32, type: !152)
!5929 = !DILocation(line: 0, scope: !5925)
!5930 = !DILocation(line: 37, column: 2, scope: !5925)
!5931 = !DILocation(line: 38, column: 2, scope: !5925)
!5932 = !DILocation(line: 55, column: 2, scope: !5933, inlinedAt: !5940)
!5933 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5934, file: !5934, line: 42, type: !5935, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5937)
!5934 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5935 = !DISubroutineType(types: !5936)
!5936 = !{!32}
!5937 = !{!5938, !5939}
!5938 = !DILocalVariable(name: "key", scope: !5933, file: !5934, line: 44, type: !32)
!5939 = !DILocalVariable(name: "tmp", scope: !5933, file: !5934, line: 53, type: !32)
!5940 = distinct !DILocation(line: 40, column: 8, scope: !5925)
!5941 = !{i64 2110900}
!5942 = !DILocation(line: 0, scope: !5933, inlinedAt: !5940)
!5943 = !DILocalVariable(name: "key", arg: 1, scope: !5944, file: !5934, line: 84, type: !32)
!5944 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5934, file: !5934, line: 84, type: !5945, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5947)
!5945 = !DISubroutineType(types: !5946)
!5946 = !{null, !32}
!5947 = !{!5943}
!5948 = !DILocation(line: 0, scope: !5944, inlinedAt: !5949)
!5949 = distinct !DILocation(line: 47, column: 2, scope: !5925)
!5950 = !DILocation(line: 95, column: 2, scope: !5944, inlinedAt: !5949)
!5951 = !{i64 2111717}
!5952 = !DILocation(line: 51, column: 18, scope: !5925)
!5953 = !DILocation(line: 53, column: 2, scope: !5925)
!5954 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5955, file: !5955, line: 1609, type: !3089, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2166)
!5955 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5956 = !DILocation(line: 1611, column: 3, scope: !5954)
!5957 = !DILocation(line: 1612, column: 1, scope: !5954)
!5958 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5955, file: !5955, line: 1629, type: !3089, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2166)
!5959 = !DILocation(line: 1631, column: 3, scope: !5958)
!5960 = !DILocation(line: 1632, column: 1, scope: !5958)
!5961 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !271, file: !271, line: 26, type: !277, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !268, retainedNodes: !5962)
!5962 = !{!5963}
!5963 = !DILocalVariable(name: "dev", arg: 1, scope: !5961, file: !271, line: 26, type: !279)
!5964 = !DILocation(line: 0, scope: !5961)
!5965 = !DILocation(line: 68, column: 2, scope: !5961)
!5966 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !5967, file: !5967, line: 14, type: !4199, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !5968)
!5967 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5968 = !{!5969, !5970}
!5969 = !DILocalVariable(name: "fmt", arg: 1, scope: !5966, file: !5967, line: 14, type: !118)
!5970 = !DILocalVariable(name: "ap", scope: !5966, file: !5967, line: 16, type: !5971)
!5971 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3209, line: 99, baseType: !5972)
!5972 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3209, line: 40, baseType: !5973)
!5973 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5967, baseType: !5974)
!5974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5975)
!5975 = !{!5976}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5974, file: !5967, line: 16, baseType: !106, size: 32)
!5977 = !DILocation(line: 0, scope: !5966)
!5978 = !DILocation(line: 16, column: 2, scope: !5966)
!5979 = !DILocation(line: 16, column: 10, scope: !5966)
!5980 = !DILocation(line: 18, column: 2, scope: !5966)
!5981 = !DILocation(line: 19, column: 2, scope: !5966)
!5982 = !DILocation(line: 20, column: 2, scope: !5966)
!5983 = !DILocation(line: 21, column: 1, scope: !5966)
!5984 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !5967, file: !5967, line: 23, type: !5985, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !5987)
!5985 = !DISubroutineType(types: !5986)
!5986 = !{null, !118, !5971}
!5987 = !{!5988, !5989}
!5988 = !DILocalVariable(name: "fmt", arg: 1, scope: !5984, file: !5967, line: 23, type: !118)
!5989 = !DILocalVariable(name: "ap", arg: 2, scope: !5984, file: !5967, line: 23, type: !5971)
!5990 = !DILocation(line: 0, scope: !5984)
!5991 = !DILocation(line: 25, column: 2, scope: !5984)
!5992 = !DILocation(line: 26, column: 1, scope: !5984)
!5993 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !5967, file: !5967, line: 52, type: !5994, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !5996)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{null, !107, !13, !185}
!5996 = !{!5997, !5998, !5999, !6000}
!5997 = !DILocalVariable(name: "level", arg: 1, scope: !5993, file: !5967, line: 52, type: !107)
!5998 = !DILocalVariable(name: "data", arg: 2, scope: !5993, file: !5967, line: 52, type: !13)
!5999 = !DILocalVariable(name: "size", arg: 3, scope: !5993, file: !5967, line: 52, type: !185)
!6000 = !DILocalVariable(name: "data_buffer", scope: !5993, file: !5967, line: 54, type: !118)
!6001 = !DILocation(line: 0, scope: !5993)
!6002 = !DILocation(line: 55, column: 14, scope: !5993)
!6003 = !DILocation(line: 55, column: 2, scope: !5993)
!6004 = !DILocation(line: 56, column: 3, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5993, file: !5967, line: 55, column: 20)
!6006 = !DILocation(line: 57, column: 3, scope: !6005)
!6007 = !DILocation(line: 59, column: 7, scope: !6005)
!6008 = distinct !{!6008, !6003, !6009}
!6009 = !DILocation(line: 65, column: 2, scope: !5993)
!6010 = !DILocation(line: 66, column: 1, scope: !5993)
!6011 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6012, file: !6012, line: 175, type: !6013, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6015)
!6012 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6013 = !DISubroutineType(types: !6014)
!6014 = !{!120, !107}
!6015 = !{!6016}
!6016 = !DILocalVariable(name: "level", arg: 1, scope: !6011, file: !6012, line: 175, type: !107)
!6017 = !DILocation(line: 0, scope: !6011)
!6018 = !DILocation(line: 177, column: 2, scope: !6011)
!6019 = !DILocation(line: 189, column: 1, scope: !6011)
!6020 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !5967, file: !5967, line: 28, type: !6021, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6023)
!6021 = !DISubroutineType(types: !6022)
!6022 = !{null, !118, !185}
!6023 = !{!6024, !6025, !6026, !6028, !6030}
!6024 = !DILocalVariable(name: "data", arg: 1, scope: !6020, file: !5967, line: 28, type: !118)
!6025 = !DILocalVariable(name: "length", arg: 2, scope: !6020, file: !5967, line: 28, type: !185)
!6026 = !DILocalVariable(name: "i", scope: !6027, file: !5967, line: 30, type: !185)
!6027 = distinct !DILexicalBlock(scope: !6020, file: !5967, line: 30, column: 2)
!6028 = !DILocalVariable(name: "i", scope: !6029, file: !5967, line: 40, type: !185)
!6029 = distinct !DILexicalBlock(scope: !6020, file: !5967, line: 40, column: 2)
!6030 = !DILocalVariable(name: "c", scope: !6031, file: !5967, line: 42, type: !196)
!6031 = distinct !DILexicalBlock(scope: !6032, file: !5967, line: 41, column: 19)
!6032 = distinct !DILexicalBlock(scope: !6033, file: !5967, line: 41, column: 7)
!6033 = distinct !DILexicalBlock(scope: !6034, file: !5967, line: 40, column: 54)
!6034 = distinct !DILexicalBlock(scope: !6029, file: !5967, line: 40, column: 2)
!6035 = !DILocation(line: 0, scope: !6020)
!6036 = !DILocation(line: 0, scope: !6027)
!6037 = !DILocation(line: 30, column: 2, scope: !6027)
!6038 = !DILocation(line: 38, column: 2, scope: !6020)
!6039 = !DILocation(line: 0, scope: !6029)
!6040 = !DILocation(line: 40, column: 2, scope: !6029)
!6041 = !DILocation(line: 31, column: 9, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6043, file: !5967, line: 31, column: 7)
!6043 = distinct !DILexicalBlock(scope: !6044, file: !5967, line: 30, column: 54)
!6044 = distinct !DILexicalBlock(scope: !6027, file: !5967, line: 30, column: 2)
!6045 = !DILocation(line: 31, column: 7, scope: !6043)
!6046 = !DILocation(line: 32, column: 35, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6042, file: !5967, line: 31, column: 19)
!6048 = !DILocation(line: 32, column: 20, scope: !6047)
!6049 = !DILocation(line: 32, column: 4, scope: !6047)
!6050 = !DILocation(line: 33, column: 3, scope: !6047)
!6051 = !DILocation(line: 34, column: 4, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6042, file: !5967, line: 33, column: 10)
!6053 = !DILocation(line: 30, column: 50, scope: !6044)
!6054 = !DILocation(line: 30, column: 24, scope: !6044)
!6055 = distinct !{!6055, !6037, !6056}
!6056 = !DILocation(line: 36, column: 2, scope: !6027)
!6057 = !DILocation(line: 49, column: 2, scope: !6020)
!6058 = !DILocation(line: 50, column: 1, scope: !6020)
!6059 = !DILocation(line: 41, column: 9, scope: !6032)
!6060 = !DILocation(line: 41, column: 7, scope: !6033)
!6061 = !DILocation(line: 42, column: 22, scope: !6031)
!6062 = !DILocation(line: 0, scope: !6031)
!6063 = !DILocation(line: 44, column: 25, scope: !6031)
!6064 = !DILocation(line: 44, column: 17, scope: !6031)
!6065 = !DILocation(line: 44, column: 33, scope: !6031)
!6066 = !DILocation(line: 44, column: 4, scope: !6031)
!6067 = !DILocation(line: 45, column: 3, scope: !6031)
!6068 = !DILocation(line: 46, column: 4, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6032, file: !5967, line: 45, column: 10)
!6070 = !DILocation(line: 40, column: 50, scope: !6034)
!6071 = !DILocation(line: 40, column: 24, scope: !6034)
!6072 = distinct !{!6072, !6040, !6073}
!6073 = !DILocation(line: 48, column: 2, scope: !6029)
!6074 = distinct !DISubprogram(name: "isprint", scope: !4990, file: !4990, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6075)
!6075 = !{!6076}
!6076 = !DILocalVariable(name: "c", arg: 1, scope: !6074, file: !4990, line: 37, type: !107)
!6077 = !DILocation(line: 0, scope: !6074)
!6078 = !DILocation(line: 39, column: 38, scope: !6074)
!6079 = !DILocation(line: 39, column: 2, scope: !6074)
!6080 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6081, file: !6081, line: 57, type: !6082, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !6128)
!6081 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6082 = !DISubroutineType(types: !6083)
!6083 = !{null, !32, !6084}
!6084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6085, size: 32)
!6085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6086)
!6086 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2675, line: 141, baseType: !6087)
!6087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2675, line: 97, size: 256, elements: !6088)
!6088 = !{!6089}
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6087, file: !2675, line: 107, baseType: !6090, size: 256)
!6090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !6091)
!6091 = !{!6092, !6097, !6102, !6107, !6112, !6117, !6122, !6127}
!6092 = !DIDerivedType(tag: DW_TAG_member, scope: !6090, file: !2675, line: 99, baseType: !6093, size: 32)
!6093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6090, file: !2675, line: 99, size: 32, elements: !6094)
!6094 = !{!6095, !6096}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6093, file: !2675, line: 99, baseType: !152, size: 32)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6093, file: !2675, line: 99, baseType: !152, size: 32)
!6097 = !DIDerivedType(tag: DW_TAG_member, scope: !6090, file: !2675, line: 100, baseType: !6098, size: 32, offset: 32)
!6098 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6090, file: !2675, line: 100, size: 32, elements: !6099)
!6099 = !{!6100, !6101}
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6098, file: !2675, line: 100, baseType: !152, size: 32)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6098, file: !2675, line: 100, baseType: !152, size: 32)
!6102 = !DIDerivedType(tag: DW_TAG_member, scope: !6090, file: !2675, line: 101, baseType: !6103, size: 32, offset: 64)
!6103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6090, file: !2675, line: 101, size: 32, elements: !6104)
!6104 = !{!6105, !6106}
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6103, file: !2675, line: 101, baseType: !152, size: 32)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6103, file: !2675, line: 101, baseType: !152, size: 32)
!6107 = !DIDerivedType(tag: DW_TAG_member, scope: !6090, file: !2675, line: 102, baseType: !6108, size: 32, offset: 96)
!6108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6090, file: !2675, line: 102, size: 32, elements: !6109)
!6109 = !{!6110, !6111}
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6108, file: !2675, line: 102, baseType: !152, size: 32)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6108, file: !2675, line: 102, baseType: !152, size: 32)
!6112 = !DIDerivedType(tag: DW_TAG_member, scope: !6090, file: !2675, line: 103, baseType: !6113, size: 32, offset: 128)
!6113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6090, file: !2675, line: 103, size: 32, elements: !6114)
!6114 = !{!6115, !6116}
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6113, file: !2675, line: 103, baseType: !152, size: 32)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6113, file: !2675, line: 103, baseType: !152, size: 32)
!6117 = !DIDerivedType(tag: DW_TAG_member, scope: !6090, file: !2675, line: 104, baseType: !6118, size: 32, offset: 160)
!6118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6090, file: !2675, line: 104, size: 32, elements: !6119)
!6119 = !{!6120, !6121}
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6118, file: !2675, line: 104, baseType: !152, size: 32)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6118, file: !2675, line: 104, baseType: !152, size: 32)
!6122 = !DIDerivedType(tag: DW_TAG_member, scope: !6090, file: !2675, line: 105, baseType: !6123, size: 32, offset: 192)
!6123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6090, file: !2675, line: 105, size: 32, elements: !6124)
!6124 = !{!6125, !6126}
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6123, file: !2675, line: 105, baseType: !152, size: 32)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6123, file: !2675, line: 105, baseType: !152, size: 32)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6090, file: !2675, line: 106, baseType: !152, size: 32, offset: 224)
!6128 = !{!6129, !6130}
!6129 = !DILocalVariable(name: "reason", arg: 1, scope: !6080, file: !6081, line: 57, type: !32)
!6130 = !DILocalVariable(name: "esf", arg: 2, scope: !6080, file: !6081, line: 57, type: !6084)
!6131 = !DILocation(line: 0, scope: !6080)
!6132 = !DILocation(line: 60, column: 10, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6080, file: !6081, line: 60, column: 6)
!6134 = !DILocation(line: 60, column: 6, scope: !6080)
!6135 = !DILocation(line: 61, column: 3, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6133, file: !6081, line: 60, column: 19)
!6137 = !DILocation(line: 62, column: 2, scope: !6136)
!6138 = !DILocation(line: 63, column: 2, scope: !6080)
!6139 = !DILocation(line: 64, column: 1, scope: !6080)
!6140 = distinct !DISubprogram(name: "esf_dump", scope: !6081, file: !6081, line: 20, type: !6141, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !6143)
!6141 = !DISubroutineType(types: !6142)
!6142 = !{null, !6084}
!6143 = !{!6144}
!6144 = !DILocalVariable(name: "esf", arg: 1, scope: !6140, file: !6081, line: 20, type: !6084)
!6145 = !DILocation(line: 0, scope: !6140)
!6146 = !DILocation(line: 22, column: 2, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6148, file: !6081, line: 22, column: 2)
!6148 = distinct !DILexicalBlock(scope: !6149, file: !6081, line: 22, column: 2)
!6149 = distinct !DILexicalBlock(scope: !6150, file: !6081, line: 22, column: 2)
!6150 = distinct !DILexicalBlock(scope: !6140, file: !6081, line: 22, column: 2)
!6151 = !DILocation(line: 24, column: 2, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6153, file: !6081, line: 24, column: 2)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !6081, line: 24, column: 2)
!6154 = distinct !DILexicalBlock(scope: !6155, file: !6081, line: 24, column: 2)
!6155 = distinct !DILexicalBlock(scope: !6140, file: !6081, line: 24, column: 2)
!6156 = !DILocation(line: 26, column: 2, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6158, file: !6081, line: 26, column: 2)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !6081, line: 26, column: 2)
!6159 = distinct !DILexicalBlock(scope: !6160, file: !6081, line: 26, column: 2)
!6160 = distinct !DILexicalBlock(scope: !6140, file: !6081, line: 26, column: 2)
!6161 = !DILocation(line: 53, column: 2, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !6081, line: 53, column: 2)
!6163 = distinct !DILexicalBlock(scope: !6164, file: !6081, line: 53, column: 2)
!6164 = distinct !DILexicalBlock(scope: !6165, file: !6081, line: 53, column: 2)
!6165 = distinct !DILexicalBlock(scope: !6140, file: !6081, line: 53, column: 2)
!6166 = !DILocation(line: 55, column: 1, scope: !6140)
!6167 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6081, file: !6081, line: 82, type: !6168, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !6183)
!6168 = !DISubroutineType(types: !6169)
!6169 = !{null, !6084, !6170}
!6170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6171, size: 32)
!6171 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6172)
!6172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6173)
!6173 = !{!6174, !6175, !6176, !6177, !6178, !6179, !6180, !6181, !6182}
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6172, file: !379, line: 26, baseType: !152, size: 32)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6172, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6172, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6172, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6172, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6172, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6172, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6172, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6172, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6183 = !{!6184, !6185, !6186}
!6184 = !DILocalVariable(name: "esf", arg: 1, scope: !6167, file: !6081, line: 82, type: !6084)
!6185 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6167, file: !6081, line: 82, type: !6170)
!6186 = !DILocalVariable(name: "reason", scope: !6167, file: !6081, line: 88, type: !32)
!6187 = !DILocation(line: 0, scope: !6167)
!6188 = !DILocation(line: 88, column: 35, scope: !6167)
!6189 = !DILocation(line: 108, column: 2, scope: !6167)
!6190 = !DILocation(line: 131, column: 1, scope: !6167)
!6191 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6081, file: !6081, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !6192)
!6192 = !{!6193, !6194, !6195}
!6193 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6191, file: !6081, line: 133, type: !106)
!6194 = !DILocalVariable(name: "ssf_contents", scope: !6191, file: !6081, line: 135, type: !1016)
!6195 = !DILocalVariable(name: "oops_esf", scope: !6191, file: !6081, line: 136, type: !6086)
!6196 = !DILocation(line: 0, scope: !6191)
!6197 = !DILocation(line: 136, column: 2, scope: !6191)
!6198 = !DILocation(line: 136, column: 15, scope: !6191)
!6199 = !DILocation(line: 139, column: 22, scope: !6191)
!6200 = !DILocation(line: 139, column: 17, scope: !6191)
!6201 = !DILocation(line: 139, column: 20, scope: !6191)
!6202 = !DILocation(line: 141, column: 2, scope: !6191)
!6203 = !DILocation(line: 142, column: 2, scope: !6191)
!6204 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6205, file: !6205, line: 40, type: !5945, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6206)
!6205 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6206 = !{!6207}
!6207 = !DILocalVariable(name: "irq", arg: 1, scope: !6204, file: !6205, line: 40, type: !32)
!6208 = !DILocation(line: 0, scope: !6204)
!6209 = !DILocation(line: 42, column: 2, scope: !6204)
!6210 = !DILocation(line: 43, column: 1, scope: !6204)
!6211 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !463, file: !463, line: 1684, type: !6212, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6214)
!6212 = !DISubroutineType(types: !6213)
!6213 = !{null, !922}
!6214 = !{!6215}
!6215 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6211, file: !463, line: 1684, type: !922)
!6216 = !DILocation(line: 0, scope: !6211)
!6217 = !DILocation(line: 1686, column: 23, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6211, file: !463, line: 1686, column: 7)
!6219 = !DILocation(line: 1686, column: 7, scope: !6211)
!6220 = !DILocation(line: 1688, column: 5, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6218, file: !463, line: 1687, column: 3)
!6222 = !{i64 2151074018}
!6223 = !DILocation(line: 1689, column: 81, scope: !6221)
!6224 = !DILocation(line: 1689, column: 60, scope: !6221)
!6225 = !DILocation(line: 1689, column: 34, scope: !6221)
!6226 = !DILocation(line: 1689, column: 5, scope: !6221)
!6227 = !DILocation(line: 1689, column: 43, scope: !6221)
!6228 = !DILocation(line: 1690, column: 5, scope: !6221)
!6229 = !{i64 2151074132}
!6230 = !DILocation(line: 1691, column: 3, scope: !6221)
!6231 = !DILocation(line: 1692, column: 1, scope: !6211)
!6232 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6205, file: !6205, line: 45, type: !5945, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6233)
!6233 = !{!6234}
!6234 = !DILocalVariable(name: "irq", arg: 1, scope: !6232, file: !6205, line: 45, type: !32)
!6235 = !DILocation(line: 0, scope: !6232)
!6236 = !DILocation(line: 47, column: 2, scope: !6232)
!6237 = !DILocation(line: 48, column: 1, scope: !6232)
!6238 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !463, file: !463, line: 1722, type: !6212, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6239)
!6239 = !{!6240}
!6240 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6238, file: !463, line: 1722, type: !922)
!6241 = !DILocation(line: 0, scope: !6238)
!6242 = !DILocation(line: 1724, column: 23, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6238, file: !463, line: 1724, column: 7)
!6244 = !DILocation(line: 1724, column: 7, scope: !6238)
!6245 = !DILocation(line: 1726, column: 81, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6243, file: !463, line: 1725, column: 3)
!6247 = !DILocation(line: 1726, column: 60, scope: !6246)
!6248 = !DILocation(line: 1726, column: 34, scope: !6246)
!6249 = !DILocation(line: 1726, column: 5, scope: !6246)
!6250 = !DILocation(line: 1726, column: 43, scope: !6246)
!6251 = !DILocation(line: 271, column: 3, scope: !6252, inlinedAt: !6254)
!6252 = distinct !DISubprogram(name: "__DSB", scope: !6253, file: !6253, line: 269, type: !3089, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !2166)
!6253 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6254 = distinct !DILocation(line: 1727, column: 5, scope: !6246)
!6255 = !{i64 3528401}
!6256 = !DILocation(line: 260, column: 3, scope: !6257, inlinedAt: !6258)
!6257 = distinct !DISubprogram(name: "__ISB", scope: !6253, file: !6253, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !2166)
!6258 = distinct !DILocation(line: 1728, column: 5, scope: !6246)
!6259 = !{i64 3528118}
!6260 = !DILocation(line: 1729, column: 3, scope: !6246)
!6261 = !DILocation(line: 1730, column: 1, scope: !6238)
!6262 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6205, file: !6205, line: 50, type: !6263, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6265)
!6263 = !DISubroutineType(types: !6264)
!6264 = !{!107, !32}
!6265 = !{!6266}
!6266 = !DILocalVariable(name: "irq", arg: 1, scope: !6262, file: !6205, line: 50, type: !32)
!6267 = !DILocation(line: 0, scope: !6262)
!6268 = !DILocation(line: 52, column: 20, scope: !6262)
!6269 = !DILocation(line: 52, column: 9, scope: !6262)
!6270 = !DILocation(line: 52, column: 41, scope: !6262)
!6271 = !DILocation(line: 52, column: 39, scope: !6262)
!6272 = !DILocation(line: 52, column: 2, scope: !6262)
!6273 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6205, file: !6205, line: 64, type: !6274, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6276)
!6274 = !DISubroutineType(types: !6275)
!6275 = !{null, !32, !32, !152}
!6276 = !{!6277, !6278, !6279}
!6277 = !DILocalVariable(name: "irq", arg: 1, scope: !6273, file: !6205, line: 64, type: !32)
!6278 = !DILocalVariable(name: "prio", arg: 2, scope: !6273, file: !6205, line: 64, type: !32)
!6279 = !DILocalVariable(name: "flags", arg: 3, scope: !6273, file: !6205, line: 64, type: !152)
!6280 = !DILocation(line: 0, scope: !6273)
!6281 = !DILocation(line: 83, column: 8, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6283, file: !6205, line: 82, column: 9)
!6283 = distinct !DILexicalBlock(scope: !6273, file: !6205, line: 76, column: 6)
!6284 = !DILocation(line: 91, column: 2, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !6205, line: 91, column: 2)
!6286 = distinct !DILexicalBlock(scope: !6273, file: !6205, line: 91, column: 2)
!6287 = !DILocation(line: 91, column: 2, scope: !6286)
!6288 = !DILocation(line: 91, column: 2, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6285, file: !6205, line: 91, column: 2)
!6290 = !DILocation(line: 95, column: 2, scope: !6273)
!6291 = !DILocation(line: 96, column: 1, scope: !6273)
!6292 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6293, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6295)
!6293 = !DISubroutineType(types: !6294)
!6294 = !{null, !922, !152}
!6295 = !{!6296, !6297}
!6296 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6292, file: !463, line: 1814, type: !922)
!6297 = !DILocalVariable(name: "priority", arg: 2, scope: !6292, file: !463, line: 1814, type: !152)
!6298 = !DILocation(line: 0, scope: !6292)
!6299 = !DILocation(line: 0, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6292, file: !463, line: 1816, column: 7)
!6301 = !DILocation(line: 1816, column: 7, scope: !6292)
!6302 = !DILocation(line: 1824, column: 1, scope: !6292)
!6303 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6205, file: !6205, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6304)
!6304 = !{!6305}
!6305 = !DILocalVariable(name: "unused", arg: 1, scope: !6303, file: !6205, line: 155, type: !13)
!6306 = !DILocation(line: 0, scope: !6303)
!6307 = !DILocation(line: 159, column: 2, scope: !6303)
!6308 = !DILocation(line: 160, column: 1, scope: !6303)
!6309 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6310, file: !6310, line: 87, type: !3089, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !2166)
!6310 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6311 = !DILocation(line: 89, column: 2, scope: !6309)
!6312 = !DILocation(line: 90, column: 2, scope: !6309)
!6313 = !DILocation(line: 91, column: 1, scope: !6309)
!6314 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6310, file: !6310, line: 23, type: !3089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!6315 = !DISubprogram(name: "z_arm_int_exit", scope: !6316, file: !6316, line: 153, type: !3089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!6316 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6317 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6318, file: !6318, line: 256, type: !3089, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2166)
!6318 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6319 = !DILocation(line: 258, column: 2, scope: !6317)
!6320 = !DILocation(line: 260, column: 2, scope: !6317)
!6321 = !DILocation(line: 262, column: 2, scope: !6317)
!6322 = !DILocation(line: 263, column: 2, scope: !6317)
!6323 = !DILocation(line: 267, column: 2, scope: !6317)
!6324 = !DILocation(line: 268, column: 2, scope: !6317)
!6325 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6318, file: !6318, line: 53, type: !3089, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2166)
!6326 = !DILocation(line: 55, column: 12, scope: !6325)
!6327 = !DILocation(line: 271, column: 3, scope: !6328, inlinedAt: !6329)
!6328 = distinct !DISubprogram(name: "__DSB", scope: !6253, file: !6253, line: 269, type: !3089, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2166)
!6329 = distinct !DILocation(line: 56, column: 2, scope: !6325)
!6330 = !{i64 3527072}
!6331 = !DILocation(line: 260, column: 3, scope: !6332, inlinedAt: !6333)
!6332 = distinct !DISubprogram(name: "__ISB", scope: !6253, file: !6253, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2166)
!6333 = distinct !DILocation(line: 57, column: 2, scope: !6325)
!6334 = !{i64 3526789}
!6335 = !DILocation(line: 58, column: 1, scope: !6325)
!6336 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6318, file: !6318, line: 96, type: !3089, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2166)
!6337 = !DILocation(line: 103, column: 13, scope: !6336)
!6338 = !DILocation(line: 975, column: 3, scope: !6339, inlinedAt: !6344)
!6339 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6253, file: !6253, line: 971, type: !6340, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !6342)
!6340 = !DISubroutineType(types: !6341)
!6341 = !{!152}
!6342 = !{!6343}
!6343 = !DILocalVariable(name: "result", scope: !6339, file: !6253, line: 973, type: !152)
!6344 = distinct !DILocation(line: 189, column: 16, scope: !6336)
!6345 = !{i64 3547902}
!6346 = !DILocation(line: 0, scope: !6339, inlinedAt: !6344)
!6347 = !DILocation(line: 189, column: 32, scope: !6336)
!6348 = !DILocalVariable(name: "control", arg: 1, scope: !6349, file: !6253, line: 1001, type: !152)
!6349 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6253, file: !6253, line: 1001, type: !6350, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !6352)
!6350 = !DISubroutineType(types: !6351)
!6351 = !{null, !152}
!6352 = !{!6348}
!6353 = !DILocation(line: 0, scope: !6349, inlinedAt: !6354)
!6354 = distinct !DILocation(line: 189, column: 2, scope: !6336)
!6355 = !DILocation(line: 1003, column: 3, scope: !6349, inlinedAt: !6354)
!6356 = !{i64 3548622}
!6357 = !DILocation(line: 260, column: 3, scope: !6332, inlinedAt: !6358)
!6358 = distinct !DILocation(line: 1004, column: 3, scope: !6349, inlinedAt: !6354)
!6359 = !DILocation(line: 191, column: 1, scope: !6336)
!6360 = distinct !DISubprogram(name: "arch_swap", scope: !6361, file: !6361, line: 33, type: !6263, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !6362)
!6361 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6362 = !{!6363}
!6363 = !DILocalVariable(name: "key", arg: 1, scope: !6360, file: !6361, line: 33, type: !32)
!6364 = !DILocation(line: 0, scope: !6360)
!6365 = !DILocation(line: 36, column: 2, scope: !6360)
!6366 = !DILocation(line: 36, column: 17, scope: !6360)
!6367 = !DILocation(line: 36, column: 25, scope: !6360)
!6368 = !DILocation(line: 37, column: 37, scope: !6360)
!6369 = !DILocation(line: 37, column: 17, scope: !6360)
!6370 = !DILocation(line: 37, column: 35, scope: !6360)
!6371 = !DILocation(line: 41, column: 12, scope: !6360)
!6372 = !DILocalVariable(name: "key", arg: 1, scope: !6373, file: !5934, line: 84, type: !32)
!6373 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5934, file: !5934, line: 84, type: !5945, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !6374)
!6374 = !{!6372}
!6375 = !DILocation(line: 0, scope: !6373, inlinedAt: !6376)
!6376 = distinct !DILocation(line: 44, column: 2, scope: !6360)
!6377 = !DILocation(line: 95, column: 2, scope: !6373, inlinedAt: !6376)
!6378 = !{i64 2226394}
!6379 = !DILocation(line: 53, column: 9, scope: !6360)
!6380 = !DILocation(line: 53, column: 24, scope: !6360)
!6381 = !DILocation(line: 53, column: 2, scope: !6360)
!6382 = distinct !DISubprogram(name: "arch_new_thread", scope: !6383, file: !6383, line: 56, type: !6384, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2670, retainedNodes: !6494)
!6383 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6384 = !DISubroutineType(types: !6385)
!6385 = !{null, !6386, !6489, !193, !559, !106, !106, !106}
!6386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6387, size: 32)
!6387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !6388)
!6388 = !{!6389, !6447, !6459, !6460, !6461, !6462, !6463, !6469, !6484}
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6387, file: !309, line: 247, baseType: !6390, size: 384)
!6390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !6391)
!6391 = !{!6392, !6416, !6423, !6424, !6425, !6434, !6435, !6436}
!6392 = !DIDerivedType(tag: DW_TAG_member, scope: !6390, file: !309, line: 60, baseType: !6393, size: 64)
!6393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6390, file: !309, line: 60, size: 64, elements: !6394)
!6394 = !{!6395, !6410}
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6393, file: !309, line: 61, baseType: !6396, size: 64)
!6396 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !6397)
!6397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !6398)
!6398 = !{!6399, !6405}
!6399 = !DIDerivedType(tag: DW_TAG_member, scope: !6397, file: !319, line: 38, baseType: !6400, size: 32)
!6400 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6397, file: !319, line: 38, size: 32, elements: !6401)
!6401 = !{!6402, !6404}
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6400, file: !319, line: 39, baseType: !6403, size: 32)
!6403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6397, size: 32)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6400, file: !319, line: 40, baseType: !6403, size: 32)
!6405 = !DIDerivedType(tag: DW_TAG_member, scope: !6397, file: !319, line: 42, baseType: !6406, size: 32, offset: 32)
!6406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6397, file: !319, line: 42, size: 32, elements: !6407)
!6407 = !{!6408, !6409}
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6406, file: !319, line: 43, baseType: !6403, size: 32)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6406, file: !319, line: 44, baseType: !6403, size: 32)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6393, file: !309, line: 62, baseType: !6411, size: 64)
!6411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !6412)
!6412 = !{!6413}
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6411, file: !335, line: 50, baseType: !6414, size: 64)
!6414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6415, size: 64, elements: !340)
!6415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6411, size: 32)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6390, file: !309, line: 68, baseType: !6417, size: 32, offset: 64)
!6417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6418, size: 32)
!6418 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !6419)
!6419 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !6420)
!6420 = !{!6421}
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6419, file: !345, line: 232, baseType: !6422, size: 64)
!6422 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !6397)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6390, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6390, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!6425 = !DIDerivedType(tag: DW_TAG_member, scope: !6390, file: !309, line: 90, baseType: !6426, size: 16, offset: 112)
!6426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6390, file: !309, line: 90, size: 16, elements: !6427)
!6427 = !{!6428, !6433}
!6428 = !DIDerivedType(tag: DW_TAG_member, scope: !6426, file: !309, line: 91, baseType: !6429, size: 16)
!6429 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6426, file: !309, line: 91, size: 16, elements: !6430)
!6430 = !{!6431, !6432}
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6429, file: !309, line: 96, baseType: !359, size: 8)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6429, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6426, file: !309, line: 100, baseType: !197, size: 16)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6390, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6390, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6390, file: !309, line: 131, baseType: !6437, size: 192, offset: 192)
!6437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !6438)
!6438 = !{!6439, !6440, !6446}
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6437, file: !345, line: 245, baseType: !6396, size: 64)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6437, file: !345, line: 246, baseType: !6441, size: 32, offset: 64)
!6441 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !6442)
!6442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6443, size: 32)
!6443 = !DISubroutineType(types: !6444)
!6444 = !{null, !6445}
!6445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6437, size: 32)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6437, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6387, file: !309, line: 250, baseType: !6448, size: 288, offset: 384)
!6448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6449)
!6449 = !{!6450, !6451, !6452, !6453, !6454, !6455, !6456, !6457, !6458}
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6448, file: !379, line: 26, baseType: !152, size: 32)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6448, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6448, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6448, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6448, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6448, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6448, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6448, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6448, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6387, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6387, file: !309, line: 256, baseType: !6418, size: 64, offset: 704)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6387, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6387, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6387, file: !309, line: 300, baseType: !6464, size: 96, offset: 1056)
!6464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !6465)
!6465 = !{!6466, !6467, !6468}
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6464, file: !309, line: 153, baseType: !22, size: 32)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6464, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6464, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6387, file: !309, line: 325, baseType: !6470, size: 32, offset: 1152)
!6470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6471, size: 32)
!6471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !6472)
!6472 = !{!6473, !6479, !6480}
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6471, file: !406, line: 5074, baseType: !6474, size: 96)
!6474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !6475)
!6475 = !{!6476, !6477, !6478}
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6474, file: !410, line: 57, baseType: !413, size: 32)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6474, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6474, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6471, file: !406, line: 5075, baseType: !6418, size: 64, offset: 96)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6471, file: !406, line: 5076, baseType: !6481, size: 32, offset: 160)
!6481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !6482)
!6482 = !{!6483}
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6481, file: !420, line: 52, baseType: !22, size: 32)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6387, file: !309, line: 343, baseType: !6485, size: 64, offset: 1184)
!6485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !6486)
!6486 = !{!6487, !6488}
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6485, file: !379, line: 63, baseType: !152, size: 32)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6485, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!6489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6490, size: 32)
!6490 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !6491)
!6491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !6492)
!6492 = !{!6493}
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6491, file: !577, line: 48, baseType: !120, size: 8)
!6494 = !{!6495, !6496, !6497, !6498, !6499, !6500, !6501, !6502}
!6495 = !DILocalVariable(name: "thread", arg: 1, scope: !6382, file: !6383, line: 56, type: !6386)
!6496 = !DILocalVariable(name: "stack", arg: 2, scope: !6382, file: !6383, line: 56, type: !6489)
!6497 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6382, file: !6383, line: 57, type: !193)
!6498 = !DILocalVariable(name: "entry", arg: 4, scope: !6382, file: !6383, line: 57, type: !559)
!6499 = !DILocalVariable(name: "p1", arg: 5, scope: !6382, file: !6383, line: 58, type: !106)
!6500 = !DILocalVariable(name: "p2", arg: 6, scope: !6382, file: !6383, line: 58, type: !106)
!6501 = !DILocalVariable(name: "p3", arg: 7, scope: !6382, file: !6383, line: 58, type: !106)
!6502 = !DILocalVariable(name: "iframe", scope: !6382, file: !6383, line: 60, type: !2673)
!6503 = !DILocation(line: 0, scope: !6382)
!6504 = !DILocation(line: 85, column: 11, scope: !6382)
!6505 = !DILocation(line: 93, column: 10, scope: !6382)
!6506 = !DILocation(line: 98, column: 13, scope: !6382)
!6507 = !DILocation(line: 100, column: 15, scope: !6382)
!6508 = !DILocation(line: 100, column: 10, scope: !6382)
!6509 = !DILocation(line: 100, column: 13, scope: !6382)
!6510 = !DILocation(line: 101, column: 15, scope: !6382)
!6511 = !DILocation(line: 101, column: 10, scope: !6382)
!6512 = !DILocation(line: 101, column: 13, scope: !6382)
!6513 = !DILocation(line: 102, column: 15, scope: !6382)
!6514 = !DILocation(line: 102, column: 10, scope: !6382)
!6515 = !DILocation(line: 102, column: 13, scope: !6382)
!6516 = !DILocation(line: 103, column: 15, scope: !6382)
!6517 = !DILocation(line: 103, column: 10, scope: !6382)
!6518 = !DILocation(line: 103, column: 13, scope: !6382)
!6519 = !DILocation(line: 106, column: 10, scope: !6382)
!6520 = !DILocation(line: 106, column: 15, scope: !6382)
!6521 = !DILocation(line: 122, column: 29, scope: !6382)
!6522 = !DILocation(line: 122, column: 23, scope: !6382)
!6523 = !DILocation(line: 122, column: 27, scope: !6382)
!6524 = !DILocation(line: 123, column: 15, scope: !6382)
!6525 = !DILocation(line: 123, column: 23, scope: !6382)
!6526 = !DILocation(line: 143, column: 1, scope: !6382)
!6527 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6383, file: !6383, line: 385, type: !6528, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2670, retainedNodes: !6531)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{!152, !6530, !6530}
!6530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!6531 = !{!6532, !6533, !6534, !6537}
!6532 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6527, file: !6383, line: 385, type: !6530)
!6533 = !DILocalVariable(name: "psp", arg: 2, scope: !6527, file: !6383, line: 385, type: !6530)
!6534 = !DILocalVariable(name: "thread", scope: !6527, file: !6383, line: 388, type: !6535)
!6535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6536, size: 32)
!6536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6387)
!6537 = !DILocalVariable(name: "guard_len", scope: !6527, file: !6383, line: 405, type: !152)
!6538 = !DILocation(line: 0, scope: !6527)
!6539 = !DILocation(line: 388, column: 34, scope: !6527)
!6540 = !DILocation(line: 390, column: 13, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6527, file: !6383, line: 390, column: 6)
!6542 = !DILocation(line: 390, column: 6, scope: !6527)
!6543 = !DILocation(line: 438, column: 6, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6527, file: !6383, line: 438, column: 6)
!6545 = !DILocation(line: 438, column: 6, scope: !6527)
!6546 = !DILocation(line: 442, column: 3, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6544, file: !6383, line: 440, column: 22)
!6548 = !DILocation(line: 455, column: 1, scope: !6527)
!6549 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6383, file: !6383, line: 530, type: !6550, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2670, retainedNodes: !6552)
!6550 = !DISubroutineType(types: !6551)
!6551 = !{null, !6386, !193, !559}
!6552 = !{!6553, !6554, !6555}
!6553 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6549, file: !6383, line: 530, type: !6386)
!6554 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6549, file: !6383, line: 530, type: !193)
!6555 = !DILocalVariable(name: "_main", arg: 3, scope: !6549, file: !6383, line: 531, type: !559)
!6556 = !DILocation(line: 0, scope: !6549)
!6557 = !DILocation(line: 535, column: 11, scope: !6549)
!6558 = !DILocation(line: 560, column: 2, scope: !6549)
!6559 = !DILocation(line: 576, column: 2, scope: !6549)
!6560 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6561 = !DILocation(line: 603, column: 2, scope: !6549)
!6562 = distinct !DISubprogram(name: "z_arm_fault", scope: !6563, file: !6563, line: 1036, type: !6564, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6579)
!6563 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6564 = !DISubroutineType(types: !6565)
!6565 = !{null, !152, !152, !152, !6566}
!6566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6567, size: 32)
!6567 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6568)
!6568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6569)
!6569 = !{!6570, !6571, !6572, !6573, !6574, !6575, !6576, !6577, !6578}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6568, file: !379, line: 26, baseType: !152, size: 32)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6568, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6568, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6568, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6568, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6568, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6568, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6568, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6568, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6579 = !{!6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589}
!6580 = !DILocalVariable(name: "msp", arg: 1, scope: !6562, file: !6563, line: 1036, type: !152)
!6581 = !DILocalVariable(name: "psp", arg: 2, scope: !6562, file: !6563, line: 1036, type: !152)
!6582 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6562, file: !6563, line: 1036, type: !152)
!6583 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6562, file: !6563, line: 1037, type: !6566)
!6584 = !DILocalVariable(name: "reason", scope: !6562, file: !6563, line: 1039, type: !152)
!6585 = !DILocalVariable(name: "fault", scope: !6562, file: !6563, line: 1040, type: !107)
!6586 = !DILocalVariable(name: "recoverable", scope: !6562, file: !6563, line: 1041, type: !145)
!6587 = !DILocalVariable(name: "nested_exc", scope: !6562, file: !6563, line: 1041, type: !145)
!6588 = !DILocalVariable(name: "esf", scope: !6562, file: !6563, line: 1042, type: !2741)
!6589 = !DILocalVariable(name: "esf_copy", scope: !6562, file: !6563, line: 1047, type: !2742)
!6590 = !DILocation(line: 0, scope: !6562)
!6591 = !DILocation(line: 1040, column: 19, scope: !6562)
!6592 = !DILocation(line: 1041, column: 2, scope: !6562)
!6593 = !DILocation(line: 1047, column: 2, scope: !6562)
!6594 = !DILocation(line: 1047, column: 15, scope: !6562)
!6595 = !DILocalVariable(name: "key", arg: 1, scope: !6596, file: !5934, line: 84, type: !32)
!6596 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5934, file: !5934, line: 84, type: !5945, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6597)
!6597 = !{!6595}
!6598 = !DILocation(line: 0, scope: !6596, inlinedAt: !6599)
!6599 = distinct !DILocation(line: 1050, column: 2, scope: !6562)
!6600 = !DILocation(line: 95, column: 2, scope: !6596, inlinedAt: !6599)
!6601 = !{i64 2259638}
!6602 = !DILocation(line: 1055, column: 9, scope: !6562)
!6603 = !DILocation(line: 1056, column: 2, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6605, file: !6563, line: 1056, column: 2)
!6605 = distinct !DILexicalBlock(scope: !6562, file: !6563, line: 1056, column: 2)
!6606 = !DILocation(line: 1056, column: 2, scope: !6605)
!6607 = !DILocation(line: 1056, column: 2, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6604, file: !6563, line: 1056, column: 2)
!6609 = !DILocation(line: 1040, column: 24, scope: !6562)
!6610 = !DILocation(line: 1063, column: 11, scope: !6562)
!6611 = !DILocation(line: 1064, column: 6, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6562, file: !6563, line: 1064, column: 6)
!6613 = !{i8 0, i8 2}
!6614 = !DILocation(line: 1064, column: 6, scope: !6562)
!6615 = !DILocation(line: 1070, column: 20, scope: !6562)
!6616 = !DILocation(line: 1070, column: 2, scope: !6562)
!6617 = !DILocation(line: 1089, column: 6, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6562, file: !6563, line: 1089, column: 6)
!6619 = !DILocation(line: 0, scope: !6618)
!6620 = !DILocation(line: 1089, column: 6, scope: !6562)
!6621 = !DILocation(line: 1090, column: 28, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6623, file: !6563, line: 1090, column: 7)
!6623 = distinct !DILexicalBlock(scope: !6618, file: !6563, line: 1089, column: 18)
!6624 = !DILocation(line: 1090, column: 44, scope: !6622)
!6625 = !DILocation(line: 1090, column: 7, scope: !6623)
!6626 = !DILocation(line: 1091, column: 24, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6622, file: !6563, line: 1090, column: 50)
!6628 = !DILocation(line: 1092, column: 3, scope: !6627)
!6629 = !DILocation(line: 1094, column: 23, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6618, file: !6563, line: 1093, column: 9)
!6631 = !DILocation(line: 1097, column: 2, scope: !6562)
!6632 = !DILocation(line: 1098, column: 1, scope: !6562)
!6633 = distinct !DISubprogram(name: "get_esf", scope: !6563, file: !6563, line: 894, type: !6634, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6637)
!6634 = !DISubroutineType(types: !6635)
!6635 = !{!2741, !152, !152, !152, !6636}
!6636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6637 = !{!6638, !6639, !6640, !6641, !6642, !6643}
!6638 = !DILocalVariable(name: "msp", arg: 1, scope: !6633, file: !6563, line: 894, type: !152)
!6639 = !DILocalVariable(name: "psp", arg: 2, scope: !6633, file: !6563, line: 894, type: !152)
!6640 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6633, file: !6563, line: 894, type: !152)
!6641 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6633, file: !6563, line: 895, type: !6636)
!6642 = !DILocalVariable(name: "alternative_state_exc", scope: !6633, file: !6563, line: 897, type: !145)
!6643 = !DILocalVariable(name: "ptr_esf", scope: !6633, file: !6563, line: 898, type: !2741)
!6644 = !DILocation(line: 0, scope: !6633)
!6645 = !DILocation(line: 900, column: 14, scope: !6633)
!6646 = !DILocation(line: 902, column: 49, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6633, file: !6563, line: 902, column: 6)
!6648 = !DILocation(line: 902, column: 6, scope: !6633)
!6649 = !DILocation(line: 983, column: 44, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6633, file: !6563, line: 983, column: 6)
!6651 = !DILocation(line: 985, column: 3, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6653, file: !6563, line: 985, column: 3)
!6653 = distinct !DILexicalBlock(scope: !6654, file: !6563, line: 985, column: 3)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !6563, line: 985, column: 3)
!6655 = distinct !DILexicalBlock(scope: !6656, file: !6563, line: 985, column: 3)
!6656 = distinct !DILexicalBlock(scope: !6650, file: !6563, line: 984, column: 47)
!6657 = !DILocation(line: 986, column: 3, scope: !6656)
!6658 = !DILocation(line: 983, column: 18, scope: !6650)
!6659 = !DILocation(line: 991, column: 7, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !6563, line: 990, column: 30)
!6661 = distinct !DILexicalBlock(scope: !6633, file: !6563, line: 990, column: 6)
!6662 = !DILocation(line: 998, column: 16, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6664, file: !6563, line: 995, column: 10)
!6664 = distinct !DILexicalBlock(scope: !6660, file: !6563, line: 991, column: 7)
!6665 = !DILocation(line: 1002, column: 2, scope: !6633)
!6666 = !DILocation(line: 1003, column: 1, scope: !6633)
!6667 = distinct !DISubprogram(name: "fault_handle", scope: !6563, file: !6563, line: 786, type: !6668, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6670)
!6668 = !DISubroutineType(types: !6669)
!6669 = !{!152, !2741, !107, !6636}
!6670 = !{!6671, !6672, !6673, !6674}
!6671 = !DILocalVariable(name: "esf", arg: 1, scope: !6667, file: !6563, line: 786, type: !2741)
!6672 = !DILocalVariable(name: "fault", arg: 2, scope: !6667, file: !6563, line: 786, type: !107)
!6673 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6667, file: !6563, line: 786, type: !6636)
!6674 = !DILocalVariable(name: "reason", scope: !6667, file: !6563, line: 788, type: !152)
!6675 = !DILocation(line: 0, scope: !6667)
!6676 = !DILocation(line: 790, column: 15, scope: !6667)
!6677 = !DILocation(line: 792, column: 2, scope: !6667)
!6678 = !DILocation(line: 794, column: 12, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6667, file: !6563, line: 792, column: 17)
!6680 = !DILocation(line: 795, column: 3, scope: !6679)
!6681 = !DILocation(line: 800, column: 12, scope: !6679)
!6682 = !DILocation(line: 801, column: 3, scope: !6679)
!6683 = !DILocation(line: 803, column: 12, scope: !6679)
!6684 = !DILocation(line: 804, column: 3, scope: !6679)
!6685 = !DILocation(line: 806, column: 12, scope: !6679)
!6686 = !DILocation(line: 807, column: 3, scope: !6679)
!6687 = !DILocation(line: 814, column: 3, scope: !6679)
!6688 = !DILocation(line: 815, column: 3, scope: !6679)
!6689 = !DILocation(line: 820, column: 3, scope: !6679)
!6690 = !DILocation(line: 821, column: 3, scope: !6679)
!6691 = !DILocation(line: 829, column: 2, scope: !6667)
!6692 = distinct !DISubprogram(name: "hard_fault", scope: !6563, file: !6563, line: 709, type: !6693, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6695)
!6693 = !DISubroutineType(types: !6694)
!6694 = !{!152, !2741, !6636}
!6695 = !{!6696, !6697, !6698}
!6696 = !DILocalVariable(name: "esf", arg: 1, scope: !6692, file: !6563, line: 709, type: !2741)
!6697 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6692, file: !6563, line: 709, type: !6636)
!6698 = !DILocalVariable(name: "reason", scope: !6692, file: !6563, line: 711, type: !152)
!6699 = !DILocation(line: 0, scope: !6692)
!6700 = !DILocation(line: 713, column: 2, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6702, file: !6563, line: 713, column: 2)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !6563, line: 713, column: 2)
!6703 = distinct !DILexicalBlock(scope: !6704, file: !6563, line: 713, column: 2)
!6704 = distinct !DILexicalBlock(scope: !6692, file: !6563, line: 713, column: 2)
!6705 = !DILocation(line: 732, column: 15, scope: !6692)
!6706 = !DILocation(line: 734, column: 12, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6692, file: !6563, line: 734, column: 6)
!6708 = !DILocation(line: 734, column: 17, scope: !6707)
!6709 = !DILocation(line: 734, column: 41, scope: !6707)
!6710 = !DILocation(line: 734, column: 6, scope: !6692)
!6711 = !DILocation(line: 735, column: 3, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6713, file: !6563, line: 735, column: 3)
!6713 = distinct !DILexicalBlock(scope: !6714, file: !6563, line: 735, column: 3)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !6563, line: 735, column: 3)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !6563, line: 735, column: 3)
!6716 = distinct !DILexicalBlock(scope: !6707, file: !6563, line: 734, column: 47)
!6717 = !DILocation(line: 736, column: 2, scope: !6716)
!6718 = !DILocation(line: 736, column: 19, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6707, file: !6563, line: 736, column: 13)
!6720 = !DILocation(line: 736, column: 49, scope: !6719)
!6721 = !DILocation(line: 736, column: 13, scope: !6707)
!6722 = !DILocation(line: 737, column: 3, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6724, file: !6563, line: 737, column: 3)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !6563, line: 737, column: 3)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !6563, line: 737, column: 3)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !6563, line: 737, column: 3)
!6727 = distinct !DILexicalBlock(scope: !6719, file: !6563, line: 736, column: 55)
!6728 = !DILocation(line: 738, column: 2, scope: !6727)
!6729 = !DILocation(line: 738, column: 19, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6719, file: !6563, line: 738, column: 13)
!6731 = !DILocation(line: 738, column: 24, scope: !6730)
!6732 = !DILocation(line: 738, column: 47, scope: !6730)
!6733 = !DILocation(line: 738, column: 13, scope: !6719)
!6734 = !DILocation(line: 739, column: 3, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !6563, line: 739, column: 3)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !6563, line: 739, column: 3)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !6563, line: 739, column: 3)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !6563, line: 739, column: 3)
!6739 = distinct !DILexicalBlock(scope: !6730, file: !6563, line: 738, column: 53)
!6740 = !DILocation(line: 740, column: 7, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6739, file: !6563, line: 740, column: 7)
!6742 = !DILocation(line: 740, column: 7, scope: !6739)
!6743 = !DILocation(line: 741, column: 4, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !6563, line: 741, column: 4)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !6563, line: 741, column: 4)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !6563, line: 741, column: 4)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !6563, line: 741, column: 4)
!6748 = distinct !DILexicalBlock(scope: !6741, file: !6563, line: 740, column: 38)
!6749 = !DILocation(line: 742, column: 24, scope: !6748)
!6750 = !DILocation(line: 743, column: 3, scope: !6748)
!6751 = !DILocation(line: 743, column: 20, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6741, file: !6563, line: 743, column: 14)
!6753 = !DILocation(line: 743, column: 25, scope: !6752)
!6754 = !DILocation(line: 743, column: 52, scope: !6752)
!6755 = !DILocation(line: 743, column: 14, scope: !6741)
!6756 = !DILocation(line: 744, column: 13, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6752, file: !6563, line: 743, column: 58)
!6758 = !DILocation(line: 745, column: 3, scope: !6757)
!6759 = !DILocation(line: 745, column: 20, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6752, file: !6563, line: 745, column: 14)
!6761 = !DILocation(line: 745, column: 25, scope: !6760)
!6762 = !DILocation(line: 745, column: 52, scope: !6760)
!6763 = !DILocation(line: 745, column: 14, scope: !6752)
!6764 = !DILocation(line: 746, column: 13, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6760, file: !6563, line: 745, column: 58)
!6766 = !DILocation(line: 747, column: 3, scope: !6765)
!6767 = !DILocation(line: 747, column: 20, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6760, file: !6563, line: 747, column: 14)
!6769 = !DILocation(line: 747, column: 52, scope: !6768)
!6770 = !DILocation(line: 747, column: 14, scope: !6760)
!6771 = !DILocation(line: 748, column: 13, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6768, file: !6563, line: 747, column: 58)
!6773 = !DILocation(line: 754, column: 4, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6775, file: !6563, line: 754, column: 4)
!6775 = distinct !DILexicalBlock(scope: !6776, file: !6563, line: 754, column: 4)
!6776 = distinct !DILexicalBlock(scope: !6777, file: !6563, line: 754, column: 4)
!6777 = distinct !DILexicalBlock(scope: !6768, file: !6563, line: 753, column: 10)
!6778 = !DILocation(line: 758, column: 3, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6780, file: !6563, line: 758, column: 3)
!6780 = distinct !DILexicalBlock(scope: !6781, file: !6563, line: 758, column: 3)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !6563, line: 758, column: 3)
!6782 = distinct !DILexicalBlock(scope: !6730, file: !6563, line: 757, column: 9)
!6783 = !DILocation(line: 766, column: 2, scope: !6692)
!6784 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6563, file: !6563, line: 229, type: !6668, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6785)
!6785 = !{!6786, !6787, !6788, !6789, !6790, !6791, !6794}
!6786 = !DILocalVariable(name: "esf", arg: 1, scope: !6784, file: !6563, line: 229, type: !2741)
!6787 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6784, file: !6563, line: 229, type: !107)
!6788 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6784, file: !6563, line: 230, type: !6636)
!6789 = !DILocalVariable(name: "reason", scope: !6784, file: !6563, line: 232, type: !152)
!6790 = !DILocalVariable(name: "mmfar", scope: !6784, file: !6563, line: 233, type: !152)
!6791 = !DILocalVariable(name: "temp", scope: !6792, file: !6563, line: 254, type: !152)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !6563, line: 244, column: 48)
!6793 = distinct !DILexicalBlock(scope: !6784, file: !6563, line: 244, column: 6)
!6794 = !DILocalVariable(name: "min_stack_ptr", scope: !6795, file: !6563, line: 309, type: !152)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !6563, line: 308, column: 43)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !6563, line: 308, column: 7)
!6797 = distinct !DILexicalBlock(scope: !6798, file: !6563, line: 289, column: 40)
!6798 = distinct !DILexicalBlock(scope: !6784, file: !6563, line: 288, column: 6)
!6799 = !DILocation(line: 0, scope: !6784)
!6800 = !DILocation(line: 235, column: 2, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !6563, line: 235, column: 2)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !6563, line: 235, column: 2)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !6563, line: 235, column: 2)
!6804 = distinct !DILexicalBlock(scope: !6784, file: !6563, line: 235, column: 2)
!6805 = !DILocation(line: 237, column: 12, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6784, file: !6563, line: 237, column: 6)
!6807 = !DILocation(line: 237, column: 17, scope: !6806)
!6808 = !DILocation(line: 237, column: 41, scope: !6806)
!6809 = !DILocation(line: 237, column: 6, scope: !6784)
!6810 = !DILocation(line: 238, column: 3, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !6563, line: 238, column: 3)
!6812 = distinct !DILexicalBlock(scope: !6813, file: !6563, line: 238, column: 3)
!6813 = distinct !DILexicalBlock(scope: !6814, file: !6563, line: 238, column: 3)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !6563, line: 238, column: 3)
!6815 = distinct !DILexicalBlock(scope: !6806, file: !6563, line: 237, column: 47)
!6816 = !DILocation(line: 240, column: 2, scope: !6815)
!6817 = !DILocation(line: 241, column: 12, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6784, file: !6563, line: 241, column: 6)
!6819 = !DILocation(line: 241, column: 17, scope: !6818)
!6820 = !DILocation(line: 241, column: 43, scope: !6818)
!6821 = !DILocation(line: 241, column: 6, scope: !6784)
!6822 = !DILocation(line: 242, column: 3, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !6563, line: 242, column: 3)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !6563, line: 242, column: 3)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !6563, line: 242, column: 3)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !6563, line: 242, column: 3)
!6827 = distinct !DILexicalBlock(scope: !6818, file: !6563, line: 241, column: 49)
!6828 = !DILocation(line: 243, column: 2, scope: !6827)
!6829 = !DILocation(line: 244, column: 12, scope: !6793)
!6830 = !DILocation(line: 244, column: 17, scope: !6793)
!6831 = !DILocation(line: 244, column: 42, scope: !6793)
!6832 = !DILocation(line: 244, column: 6, scope: !6784)
!6833 = !DILocation(line: 245, column: 3, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !6563, line: 245, column: 3)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !6563, line: 245, column: 3)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !6563, line: 245, column: 3)
!6837 = distinct !DILexicalBlock(scope: !6792, file: !6563, line: 245, column: 3)
!6838 = !DILocation(line: 254, column: 24, scope: !6792)
!6839 = !DILocation(line: 0, scope: !6792)
!6840 = !DILocation(line: 256, column: 13, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6792, file: !6563, line: 256, column: 7)
!6842 = !DILocation(line: 256, column: 18, scope: !6841)
!6843 = !DILocation(line: 256, column: 44, scope: !6841)
!6844 = !DILocation(line: 256, column: 7, scope: !6792)
!6845 = !DILocation(line: 258, column: 4, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !6563, line: 258, column: 4)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !6563, line: 258, column: 4)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !6563, line: 258, column: 4)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !6563, line: 258, column: 4)
!6850 = distinct !DILexicalBlock(scope: !6841, file: !6563, line: 256, column: 50)
!6851 = !DILocation(line: 259, column: 24, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6850, file: !6563, line: 259, column: 8)
!6853 = !DILocation(line: 259, column: 8, scope: !6850)
!6854 = !DILocation(line: 261, column: 15, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6852, file: !6563, line: 259, column: 30)
!6856 = !DILocation(line: 262, column: 4, scope: !6855)
!6857 = !DILocation(line: 265, column: 12, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6784, file: !6563, line: 265, column: 6)
!6859 = !DILocation(line: 265, column: 17, scope: !6858)
!6860 = !DILocation(line: 265, column: 42, scope: !6858)
!6861 = !DILocation(line: 265, column: 6, scope: !6784)
!6862 = !DILocation(line: 266, column: 3, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6864, file: !6563, line: 266, column: 3)
!6864 = distinct !DILexicalBlock(scope: !6865, file: !6563, line: 266, column: 3)
!6865 = distinct !DILexicalBlock(scope: !6866, file: !6563, line: 266, column: 3)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !6563, line: 266, column: 3)
!6867 = distinct !DILexicalBlock(scope: !6858, file: !6563, line: 265, column: 48)
!6868 = !DILocation(line: 267, column: 2, scope: !6867)
!6869 = !DILocation(line: 269, column: 12, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6784, file: !6563, line: 269, column: 6)
!6871 = !DILocation(line: 269, column: 17, scope: !6870)
!6872 = !DILocation(line: 269, column: 41, scope: !6870)
!6873 = !DILocation(line: 269, column: 6, scope: !6784)
!6874 = !DILocation(line: 270, column: 3, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6876, file: !6563, line: 270, column: 3)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !6563, line: 270, column: 3)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !6563, line: 270, column: 3)
!6878 = distinct !DILexicalBlock(scope: !6879, file: !6563, line: 270, column: 3)
!6879 = distinct !DILexicalBlock(scope: !6870, file: !6563, line: 269, column: 47)
!6880 = !DILocation(line: 272, column: 2, scope: !6879)
!6881 = !DILocation(line: 288, column: 12, scope: !6798)
!6882 = !DILocation(line: 288, column: 17, scope: !6798)
!6883 = !DILocation(line: 288, column: 41, scope: !6798)
!6884 = !DILocation(line: 289, column: 9, scope: !6798)
!6885 = !DILocation(line: 289, column: 14, scope: !6798)
!6886 = !DILocation(line: 288, column: 6, scope: !6784)
!6887 = !DILocation(line: 308, column: 12, scope: !6796)
!6888 = !DILocation(line: 308, column: 17, scope: !6796)
!6889 = !DILocation(line: 308, column: 7, scope: !6797)
!6890 = !DILocation(line: 310, column: 6, scope: !6795)
!6891 = !DILocation(line: 309, column: 29, scope: !6795)
!6892 = !DILocation(line: 0, scope: !6795)
!6893 = !DILocation(line: 312, column: 8, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6795, file: !6563, line: 312, column: 8)
!6895 = !DILocation(line: 312, column: 8, scope: !6795)
!6896 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6897, file: !6253, line: 1099, type: !152)
!6897 = distinct !DISubprogram(name: "__set_PSP", scope: !6253, file: !6253, line: 1099, type: !6350, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6898)
!6898 = !{!6896}
!6899 = !DILocation(line: 0, scope: !6897, inlinedAt: !6900)
!6900 = distinct !DILocation(line: 338, column: 5, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6894, file: !6563, line: 312, column: 23)
!6902 = !DILocation(line: 1101, column: 3, scope: !6897, inlinedAt: !6900)
!6903 = !{i64 3578041}
!6904 = !DILocation(line: 341, column: 4, scope: !6901)
!6905 = !DILocation(line: 342, column: 5, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6907, file: !6563, line: 342, column: 5)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !6563, line: 342, column: 5)
!6908 = distinct !DILexicalBlock(scope: !6894, file: !6563, line: 341, column: 11)
!6909 = !DILocation(line: 342, column: 5, scope: !6907)
!6910 = !DILocation(line: 342, column: 5, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6906, file: !6563, line: 342, column: 5)
!6912 = !DILocation(line: 360, column: 12, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6784, file: !6563, line: 360, column: 6)
!6914 = !DILocation(line: 360, column: 17, scope: !6913)
!6915 = !DILocation(line: 360, column: 41, scope: !6913)
!6916 = !DILocation(line: 360, column: 6, scope: !6784)
!6917 = !DILocation(line: 361, column: 14, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6913, file: !6563, line: 360, column: 47)
!6919 = !DILocation(line: 362, column: 2, scope: !6918)
!6920 = !DILocation(line: 366, column: 12, scope: !6784)
!6921 = !DILocation(line: 369, column: 15, scope: !6784)
!6922 = !DILocation(line: 371, column: 2, scope: !6784)
!6923 = distinct !DISubprogram(name: "bus_fault", scope: !6563, file: !6563, line: 383, type: !6924, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6926)
!6924 = !DISubroutineType(types: !6925)
!6925 = !{!107, !2741, !107, !6636}
!6926 = !{!6927, !6928, !6929, !6930, !6931}
!6927 = !DILocalVariable(name: "esf", arg: 1, scope: !6923, file: !6563, line: 383, type: !2741)
!6928 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6923, file: !6563, line: 383, type: !107)
!6929 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6923, file: !6563, line: 383, type: !6636)
!6930 = !DILocalVariable(name: "reason", scope: !6923, file: !6563, line: 385, type: !152)
!6931 = !DILocalVariable(name: "bfar", scope: !6932, file: !6563, line: 405, type: !152)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !6563, line: 395, column: 42)
!6933 = distinct !DILexicalBlock(scope: !6923, file: !6563, line: 395, column: 6)
!6934 = !DILocation(line: 0, scope: !6923)
!6935 = !DILocation(line: 387, column: 2, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !6563, line: 387, column: 2)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !6563, line: 387, column: 2)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !6563, line: 387, column: 2)
!6939 = distinct !DILexicalBlock(scope: !6923, file: !6563, line: 387, column: 2)
!6940 = !DILocation(line: 389, column: 11, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6923, file: !6563, line: 389, column: 6)
!6942 = !DILocation(line: 389, column: 16, scope: !6941)
!6943 = !DILocation(line: 389, column: 6, scope: !6923)
!6944 = !DILocation(line: 390, column: 3, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !6563, line: 390, column: 3)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !6563, line: 390, column: 3)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !6563, line: 390, column: 3)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !6563, line: 390, column: 3)
!6949 = distinct !DILexicalBlock(scope: !6941, file: !6563, line: 389, column: 39)
!6950 = !DILocation(line: 391, column: 2, scope: !6949)
!6951 = !DILocation(line: 392, column: 11, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6923, file: !6563, line: 392, column: 6)
!6953 = !DILocation(line: 392, column: 16, scope: !6952)
!6954 = !DILocation(line: 392, column: 6, scope: !6923)
!6955 = !DILocation(line: 393, column: 3, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !6563, line: 393, column: 3)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !6563, line: 393, column: 3)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !6563, line: 393, column: 3)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !6563, line: 393, column: 3)
!6960 = distinct !DILexicalBlock(scope: !6952, file: !6563, line: 392, column: 41)
!6961 = !DILocation(line: 394, column: 2, scope: !6960)
!6962 = !DILocation(line: 395, column: 11, scope: !6933)
!6963 = !DILocation(line: 395, column: 16, scope: !6933)
!6964 = !DILocation(line: 395, column: 6, scope: !6923)
!6965 = !DILocation(line: 396, column: 3, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !6563, line: 396, column: 3)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !6563, line: 396, column: 3)
!6968 = distinct !DILexicalBlock(scope: !6969, file: !6563, line: 396, column: 3)
!6969 = distinct !DILexicalBlock(scope: !6932, file: !6563, line: 396, column: 3)
!6970 = !DILocation(line: 405, column: 3, scope: !6932)
!6971 = !DILocation(line: 0, scope: !6932)
!6972 = !DILocation(line: 407, column: 13, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6932, file: !6563, line: 407, column: 7)
!6974 = !DILocation(line: 407, column: 18, scope: !6973)
!6975 = !DILocation(line: 407, column: 44, scope: !6973)
!6976 = !DILocation(line: 407, column: 7, scope: !6932)
!6977 = !DILocation(line: 408, column: 4, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !6563, line: 408, column: 4)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !6563, line: 408, column: 4)
!6980 = distinct !DILexicalBlock(scope: !6981, file: !6563, line: 408, column: 4)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !6563, line: 408, column: 4)
!6982 = distinct !DILexicalBlock(scope: !6973, file: !6563, line: 407, column: 50)
!6983 = !DILocation(line: 409, column: 24, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6982, file: !6563, line: 409, column: 8)
!6985 = !DILocation(line: 409, column: 8, scope: !6982)
!6986 = !DILocation(line: 411, column: 15, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6984, file: !6563, line: 409, column: 30)
!6988 = !DILocation(line: 412, column: 4, scope: !6987)
!6989 = !DILocation(line: 415, column: 11, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6923, file: !6563, line: 415, column: 6)
!6991 = !DILocation(line: 415, column: 16, scope: !6990)
!6992 = !DILocation(line: 415, column: 6, scope: !6923)
!6993 = !DILocation(line: 416, column: 3, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6995, file: !6563, line: 416, column: 3)
!6995 = distinct !DILexicalBlock(scope: !6996, file: !6563, line: 416, column: 3)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !6563, line: 416, column: 3)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !6563, line: 416, column: 3)
!6998 = distinct !DILexicalBlock(scope: !6990, file: !6563, line: 415, column: 44)
!6999 = !DILocation(line: 417, column: 2, scope: !6998)
!7000 = !DILocation(line: 418, column: 12, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6923, file: !6563, line: 418, column: 6)
!7002 = !DILocation(line: 418, column: 17, scope: !7001)
!7003 = !DILocation(line: 418, column: 41, scope: !7001)
!7004 = !DILocation(line: 418, column: 6, scope: !6923)
!7005 = !DILocation(line: 423, column: 18, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7001, file: !6563, line: 423, column: 13)
!7007 = !DILocation(line: 423, column: 23, scope: !7006)
!7008 = !DILocation(line: 423, column: 13, scope: !7001)
!7009 = !DILocation(line: 0, scope: !7001)
!7010 = !DILocation(line: 524, column: 12, scope: !6923)
!7011 = !DILocation(line: 526, column: 15, scope: !6923)
!7012 = !DILocation(line: 528, column: 2, scope: !6923)
!7013 = distinct !DISubprogram(name: "usage_fault", scope: !6563, file: !6563, line: 539, type: !7014, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7018)
!7014 = !DISubroutineType(types: !7015)
!7015 = !{!152, !7016}
!7016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7017, size: 32)
!7017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2742)
!7018 = !{!7019, !7020}
!7019 = !DILocalVariable(name: "esf", arg: 1, scope: !7013, file: !6563, line: 539, type: !7016)
!7020 = !DILocalVariable(name: "reason", scope: !7013, file: !6563, line: 541, type: !152)
!7021 = !DILocation(line: 0, scope: !7013)
!7022 = !DILocation(line: 543, column: 2, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7024, file: !6563, line: 543, column: 2)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !6563, line: 543, column: 2)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !6563, line: 543, column: 2)
!7026 = distinct !DILexicalBlock(scope: !7013, file: !6563, line: 543, column: 2)
!7027 = !DILocation(line: 546, column: 12, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7013, file: !6563, line: 546, column: 6)
!7029 = !DILocation(line: 546, column: 17, scope: !7028)
!7030 = !DILocation(line: 546, column: 43, scope: !7028)
!7031 = !DILocation(line: 546, column: 6, scope: !7013)
!7032 = !DILocation(line: 547, column: 3, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !6563, line: 547, column: 3)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !6563, line: 547, column: 3)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !6563, line: 547, column: 3)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !6563, line: 547, column: 3)
!7037 = distinct !DILexicalBlock(scope: !7028, file: !6563, line: 546, column: 49)
!7038 = !DILocation(line: 548, column: 2, scope: !7037)
!7039 = !DILocation(line: 549, column: 12, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7013, file: !6563, line: 549, column: 6)
!7041 = !DILocation(line: 549, column: 17, scope: !7040)
!7042 = !DILocation(line: 549, column: 43, scope: !7040)
!7043 = !DILocation(line: 549, column: 6, scope: !7013)
!7044 = !DILocation(line: 550, column: 3, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !6563, line: 550, column: 3)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !6563, line: 550, column: 3)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !6563, line: 550, column: 3)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !6563, line: 550, column: 3)
!7049 = distinct !DILexicalBlock(scope: !7040, file: !6563, line: 549, column: 49)
!7050 = !DILocation(line: 551, column: 2, scope: !7049)
!7051 = !DILocation(line: 567, column: 12, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7013, file: !6563, line: 567, column: 6)
!7053 = !DILocation(line: 567, column: 17, scope: !7052)
!7054 = !DILocation(line: 567, column: 38, scope: !7052)
!7055 = !DILocation(line: 567, column: 6, scope: !7013)
!7056 = !DILocation(line: 568, column: 3, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !6563, line: 568, column: 3)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !6563, line: 568, column: 3)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !6563, line: 568, column: 3)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !6563, line: 568, column: 3)
!7061 = distinct !DILexicalBlock(scope: !7052, file: !6563, line: 567, column: 44)
!7062 = !DILocation(line: 569, column: 2, scope: !7061)
!7063 = !DILocation(line: 570, column: 12, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7013, file: !6563, line: 570, column: 6)
!7065 = !DILocation(line: 570, column: 17, scope: !7064)
!7066 = !DILocation(line: 570, column: 39, scope: !7064)
!7067 = !DILocation(line: 570, column: 6, scope: !7013)
!7068 = !DILocation(line: 571, column: 3, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7070, file: !6563, line: 571, column: 3)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !6563, line: 571, column: 3)
!7071 = distinct !DILexicalBlock(scope: !7072, file: !6563, line: 571, column: 3)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !6563, line: 571, column: 3)
!7073 = distinct !DILexicalBlock(scope: !7064, file: !6563, line: 570, column: 45)
!7074 = !DILocation(line: 572, column: 2, scope: !7073)
!7075 = !DILocation(line: 573, column: 12, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7013, file: !6563, line: 573, column: 6)
!7077 = !DILocation(line: 573, column: 17, scope: !7076)
!7078 = !DILocation(line: 573, column: 42, scope: !7076)
!7079 = !DILocation(line: 573, column: 6, scope: !7013)
!7080 = !DILocation(line: 574, column: 3, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !6563, line: 574, column: 3)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !6563, line: 574, column: 3)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !6563, line: 574, column: 3)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !6563, line: 574, column: 3)
!7085 = distinct !DILexicalBlock(scope: !7076, file: !6563, line: 573, column: 48)
!7086 = !DILocation(line: 575, column: 2, scope: !7085)
!7087 = !DILocation(line: 576, column: 12, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7013, file: !6563, line: 576, column: 6)
!7089 = !DILocation(line: 576, column: 17, scope: !7088)
!7090 = !DILocation(line: 576, column: 44, scope: !7088)
!7091 = !DILocation(line: 576, column: 6, scope: !7013)
!7092 = !DILocation(line: 577, column: 3, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !6563, line: 577, column: 3)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !6563, line: 577, column: 3)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !6563, line: 577, column: 3)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !6563, line: 577, column: 3)
!7097 = distinct !DILexicalBlock(scope: !7088, file: !6563, line: 576, column: 50)
!7098 = !DILocation(line: 578, column: 2, scope: !7097)
!7099 = !DILocation(line: 581, column: 12, scope: !7013)
!7100 = !DILocation(line: 583, column: 2, scope: !7013)
!7101 = distinct !DISubprogram(name: "debug_monitor", scope: !6563, file: !6563, line: 632, type: !7102, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7104)
!7102 = !DISubroutineType(types: !7103)
!7103 = !{null, !2741, !6636}
!7104 = !{!7105, !7106}
!7105 = !DILocalVariable(name: "esf", arg: 1, scope: !7101, file: !6563, line: 632, type: !2741)
!7106 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7101, file: !6563, line: 632, type: !6636)
!7107 = !DILocation(line: 0, scope: !7101)
!7108 = !DILocation(line: 634, column: 15, scope: !7101)
!7109 = !DILocation(line: 636, column: 2, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !6563, line: 636, column: 2)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !6563, line: 636, column: 2)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !6563, line: 636, column: 2)
!7113 = distinct !DILexicalBlock(scope: !7101, file: !6563, line: 636, column: 2)
!7114 = !DILocation(line: 652, column: 1, scope: !7101)
!7115 = distinct !DISubprogram(name: "reserved_exception", scope: !6563, file: !6563, line: 776, type: !7116, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7118)
!7116 = !DISubroutineType(types: !7117)
!7117 = !{null, !7016, !107}
!7118 = !{!7119, !7120}
!7119 = !DILocalVariable(name: "esf", arg: 1, scope: !7115, file: !6563, line: 776, type: !7016)
!7120 = !DILocalVariable(name: "fault", arg: 2, scope: !7115, file: !6563, line: 776, type: !107)
!7121 = !DILocation(line: 0, scope: !7115)
!7122 = !DILocation(line: 780, column: 2, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7124, file: !6563, line: 780, column: 2)
!7124 = distinct !DILexicalBlock(scope: !7125, file: !6563, line: 780, column: 2)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !6563, line: 780, column: 2)
!7126 = distinct !DILexicalBlock(scope: !7115, file: !6563, line: 780, column: 2)
!7127 = !DILocation(line: 783, column: 1, scope: !7115)
!7128 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6563, file: !6563, line: 658, type: !7129, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7131)
!7129 = !DISubroutineType(types: !7130)
!7130 = !{!145, !2741}
!7131 = !{!7132, !7133, !7134}
!7132 = !DILocalVariable(name: "esf", arg: 1, scope: !7128, file: !6563, line: 658, type: !2741)
!7133 = !DILocalVariable(name: "ret_addr", scope: !7128, file: !6563, line: 660, type: !2784)
!7134 = !DILocalVariable(name: "fault_insn", scope: !7128, file: !6563, line: 686, type: !197)
!7135 = !DILocation(line: 0, scope: !7128)
!7136 = !DILocation(line: 660, column: 46, scope: !7128)
!7137 = !DILocation(line: 660, column: 23, scope: !7128)
!7138 = !DILocation(line: 682, column: 11, scope: !7128)
!7139 = !DILocation(line: 271, column: 3, scope: !7140, inlinedAt: !7141)
!7140 = distinct !DISubprogram(name: "__DSB", scope: !6253, file: !6253, line: 269, type: !3089, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !2166)
!7141 = distinct !DILocation(line: 683, column: 2, scope: !7128)
!7142 = !{i64 3554176}
!7143 = !DILocation(line: 260, column: 3, scope: !7144, inlinedAt: !7145)
!7144 = distinct !DISubprogram(name: "__ISB", scope: !6253, file: !6253, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !2166)
!7145 = distinct !DILocation(line: 684, column: 2, scope: !7128)
!7146 = !{i64 3553893}
!7147 = !DILocation(line: 686, column: 35, scope: !7128)
!7148 = !DILocation(line: 686, column: 24, scope: !7128)
!7149 = !DILocation(line: 688, column: 11, scope: !7128)
!7150 = !DILocation(line: 271, column: 3, scope: !7140, inlinedAt: !7151)
!7151 = distinct !DILocation(line: 689, column: 2, scope: !7128)
!7152 = !DILocation(line: 260, column: 3, scope: !7144, inlinedAt: !7153)
!7153 = distinct !DILocation(line: 690, column: 2, scope: !7128)
!7154 = !DILocation(line: 693, column: 45, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7128, file: !6563, line: 693, column: 6)
!7156 = !DILocation(line: 699, column: 1, scope: !7128)
!7157 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6563, file: !6563, line: 1107, type: !3089, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !2166)
!7158 = !DILocation(line: 1111, column: 11, scope: !7157)
!7159 = !DILocation(line: 1136, column: 1, scope: !7157)
!7160 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7161, file: !7161, line: 26, type: !3089, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7162)
!7161 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7162 = !{!7163}
!7163 = !DILocalVariable(name: "irq", scope: !7160, file: !7161, line: 28, type: !107)
!7164 = !DILocation(line: 0, scope: !7160)
!7165 = !DILocation(line: 30, column: 2, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7160, file: !7161, line: 30, column: 2)
!7167 = !DILocation(line: 31, column: 3, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !7161, line: 30, column: 39)
!7169 = distinct !DILexicalBlock(scope: !7166, file: !7161, line: 30, column: 2)
!7170 = !DILocation(line: 30, column: 35, scope: !7169)
!7171 = !DILocation(line: 30, column: 13, scope: !7169)
!7172 = distinct !{!7172, !7165, !7173}
!7173 = !DILocation(line: 32, column: 2, scope: !7166)
!7174 = !DILocation(line: 33, column: 1, scope: !7160)
!7175 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6293, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7176)
!7176 = !{!7177, !7178}
!7177 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7175, file: !463, line: 1814, type: !922)
!7178 = !DILocalVariable(name: "priority", arg: 2, scope: !7175, file: !463, line: 1814, type: !152)
!7179 = !DILocation(line: 0, scope: !7175)
!7180 = !DILocation(line: 1816, column: 7, scope: !7175)
!7181 = !DILocation(line: 0, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7175, file: !463, line: 1816, column: 7)
!7183 = !DILocation(line: 1824, column: 1, scope: !7175)
!7184 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7185, file: !7185, line: 27, type: !7186, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !7292)
!7185 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7186 = !DISubroutineType(types: !7187)
!7187 = !{null, !7188}
!7188 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !7189)
!7189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7190, size: 32)
!7190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !7191)
!7191 = !{!7192, !7250, !7262, !7263, !7264, !7265, !7266, !7272, !7287}
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7190, file: !309, line: 247, baseType: !7193, size: 384)
!7193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !7194)
!7194 = !{!7195, !7219, !7226, !7227, !7228, !7237, !7238, !7239}
!7195 = !DIDerivedType(tag: DW_TAG_member, scope: !7193, file: !309, line: 60, baseType: !7196, size: 64)
!7196 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7193, file: !309, line: 60, size: 64, elements: !7197)
!7197 = !{!7198, !7213}
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7196, file: !309, line: 61, baseType: !7199, size: 64)
!7199 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !7200)
!7200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !7201)
!7201 = !{!7202, !7208}
!7202 = !DIDerivedType(tag: DW_TAG_member, scope: !7200, file: !319, line: 38, baseType: !7203, size: 32)
!7203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7200, file: !319, line: 38, size: 32, elements: !7204)
!7204 = !{!7205, !7207}
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7203, file: !319, line: 39, baseType: !7206, size: 32)
!7206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7200, size: 32)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7203, file: !319, line: 40, baseType: !7206, size: 32)
!7208 = !DIDerivedType(tag: DW_TAG_member, scope: !7200, file: !319, line: 42, baseType: !7209, size: 32, offset: 32)
!7209 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7200, file: !319, line: 42, size: 32, elements: !7210)
!7210 = !{!7211, !7212}
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7209, file: !319, line: 43, baseType: !7206, size: 32)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7209, file: !319, line: 44, baseType: !7206, size: 32)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7196, file: !309, line: 62, baseType: !7214, size: 64)
!7214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !7215)
!7215 = !{!7216}
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7214, file: !335, line: 50, baseType: !7217, size: 64)
!7217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7218, size: 64, elements: !340)
!7218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7214, size: 32)
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7193, file: !309, line: 68, baseType: !7220, size: 32, offset: 64)
!7220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7221, size: 32)
!7221 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !7222)
!7222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !7223)
!7223 = !{!7224}
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7222, file: !345, line: 232, baseType: !7225, size: 64)
!7225 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !7200)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7193, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7193, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!7228 = !DIDerivedType(tag: DW_TAG_member, scope: !7193, file: !309, line: 90, baseType: !7229, size: 16, offset: 112)
!7229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7193, file: !309, line: 90, size: 16, elements: !7230)
!7230 = !{!7231, !7236}
!7231 = !DIDerivedType(tag: DW_TAG_member, scope: !7229, file: !309, line: 91, baseType: !7232, size: 16)
!7232 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7229, file: !309, line: 91, size: 16, elements: !7233)
!7233 = !{!7234, !7235}
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7232, file: !309, line: 96, baseType: !359, size: 8)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7232, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7229, file: !309, line: 100, baseType: !197, size: 16)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7193, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7193, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7193, file: !309, line: 131, baseType: !7240, size: 192, offset: 192)
!7240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !7241)
!7241 = !{!7242, !7243, !7249}
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7240, file: !345, line: 245, baseType: !7199, size: 64)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7240, file: !345, line: 246, baseType: !7244, size: 32, offset: 64)
!7244 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !7245)
!7245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7246, size: 32)
!7246 = !DISubroutineType(types: !7247)
!7247 = !{null, !7248}
!7248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7240, size: 32)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7240, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7190, file: !309, line: 250, baseType: !7251, size: 288, offset: 384)
!7251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !7252)
!7252 = !{!7253, !7254, !7255, !7256, !7257, !7258, !7259, !7260, !7261}
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7251, file: !379, line: 26, baseType: !152, size: 32)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7251, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7251, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7251, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7251, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7251, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7251, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7251, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7251, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7190, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7190, file: !309, line: 256, baseType: !7221, size: 64, offset: 704)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7190, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7190, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7190, file: !309, line: 300, baseType: !7267, size: 96, offset: 1056)
!7267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !7268)
!7268 = !{!7269, !7270, !7271}
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7267, file: !309, line: 153, baseType: !22, size: 32)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7267, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7267, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7190, file: !309, line: 325, baseType: !7273, size: 32, offset: 1152)
!7273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7274, size: 32)
!7274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !7275)
!7275 = !{!7276, !7282, !7283}
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7274, file: !406, line: 5074, baseType: !7277, size: 96)
!7277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !7278)
!7278 = !{!7279, !7280, !7281}
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7277, file: !410, line: 57, baseType: !413, size: 32)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7277, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7277, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7274, file: !406, line: 5075, baseType: !7221, size: 64, offset: 96)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7274, file: !406, line: 5076, baseType: !7284, size: 32, offset: 160)
!7284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !7285)
!7285 = !{!7286}
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7284, file: !420, line: 52, baseType: !22, size: 32)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7190, file: !309, line: 343, baseType: !7288, size: 64, offset: 1184)
!7288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !7289)
!7289 = !{!7290, !7291}
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7288, file: !379, line: 63, baseType: !152, size: 32)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7288, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!7292 = !{!7293}
!7293 = !DILocalVariable(name: "thread", arg: 1, scope: !7184, file: !7185, line: 27, type: !7188)
!7294 = !DILocation(line: 0, scope: !7184)
!7295 = !DILocation(line: 29, column: 6, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7184, file: !7185, line: 29, column: 6)
!7297 = !DILocation(line: 29, column: 15, scope: !7296)
!7298 = !DILocation(line: 29, column: 6, scope: !7184)
!7299 = !DILocation(line: 1031, column: 3, scope: !7300, inlinedAt: !7303)
!7300 = distinct !DISubprogram(name: "__get_IPSR", scope: !6253, file: !6253, line: 1027, type: !6340, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !7301)
!7301 = !{!7302}
!7302 = !DILocalVariable(name: "result", scope: !7300, file: !6253, line: 1029, type: !152)
!7303 = distinct !DILocation(line: 48, column: 10, scope: !7304, inlinedAt: !7308)
!7304 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7305, file: !7305, line: 46, type: !7306, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !2166)
!7305 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7306 = !DISubroutineType(types: !7307)
!7307 = !{!145}
!7308 = distinct !DILocation(line: 30, column: 7, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !7185, line: 30, column: 7)
!7310 = distinct !DILexicalBlock(scope: !7296, file: !7185, line: 29, column: 26)
!7311 = !{i64 3543024}
!7312 = !DILocation(line: 0, scope: !7300, inlinedAt: !7303)
!7313 = !DILocation(line: 48, column: 9, scope: !7304, inlinedAt: !7308)
!7314 = !DILocation(line: 30, column: 7, scope: !7310)
!7315 = !DILocation(line: 42, column: 14, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7309, file: !7185, line: 30, column: 25)
!7317 = !DILocation(line: 48, column: 15, scope: !7316)
!7318 = !DILocation(line: 49, column: 3, scope: !7316)
!7319 = !DILocation(line: 52, column: 2, scope: !7184)
!7320 = !DILocation(line: 53, column: 1, scope: !7184)
!7321 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !304, file: !304, line: 127, type: !3089, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2166)
!7322 = !DILocation(line: 134, column: 2, scope: !7321)
!7323 = !DILocation(line: 156, column: 1, scope: !7321)
!7324 = !DILocation(line: 0, scope: !303)
!7325 = !DILocation(line: 289, column: 36, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !303, file: !304, line: 285, column: 2)
!7327 = !DILocation(line: 289, column: 42, scope: !7326)
!7328 = !DILocation(line: 300, column: 36, scope: !303)
!7329 = !DILocation(line: 301, column: 35, scope: !303)
!7330 = !DILocation(line: 302, column: 37, scope: !303)
!7331 = !DILocation(line: 311, column: 2, scope: !303)
!7332 = !DILocation(line: 316, column: 1, scope: !303)
!7333 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !491, file: !491, line: 180, type: !3089, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2166)
!7334 = !DILocation(line: 188, column: 12, scope: !7333)
!7335 = !DILocation(line: 271, column: 3, scope: !7336, inlinedAt: !7337)
!7336 = distinct !DISubprogram(name: "__DSB", scope: !6253, file: !6253, line: 269, type: !3089, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2166)
!7337 = distinct !DILocation(line: 192, column: 2, scope: !7333)
!7338 = !{i64 3706690}
!7339 = !DILocation(line: 260, column: 3, scope: !7340, inlinedAt: !7341)
!7340 = distinct !DISubprogram(name: "__ISB", scope: !6253, file: !6253, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2166)
!7341 = distinct !DILocation(line: 193, column: 2, scope: !7333)
!7342 = !{i64 3706407}
!7343 = !DILocation(line: 194, column: 1, scope: !7333)
!7344 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !491, file: !491, line: 199, type: !3089, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2166)
!7345 = !DILocation(line: 282, column: 3, scope: !7346, inlinedAt: !7347)
!7346 = distinct !DISubprogram(name: "__DMB", scope: !6253, file: !6253, line: 280, type: !3089, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2166)
!7347 = distinct !DILocation(line: 202, column: 2, scope: !7344)
!7348 = !{i64 3706966}
!7349 = !DILocation(line: 205, column: 12, scope: !7344)
!7350 = !DILocation(line: 206, column: 1, scope: !7344)
!7351 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !491, file: !491, line: 275, type: !7352, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7365)
!7352 = !DISubroutineType(types: !7353)
!7353 = !{null, !7354, !1948, !6530, !6530}
!7354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7355, size: 32)
!7355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7356)
!7356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !7357)
!7357 = !{!7358, !7359, !7360}
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7356, file: !435, line: 53, baseType: !22, size: 32)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7356, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7356, file: !435, line: 55, baseType: !7361, size: 32, offset: 64)
!7361 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !7362)
!7362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !7363)
!7363 = !{!7364}
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7362, file: !441, line: 150, baseType: !152, size: 32)
!7365 = !{!7366, !7367, !7368, !7369}
!7366 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7351, file: !491, line: 276, type: !7354)
!7367 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7351, file: !491, line: 276, type: !1948)
!7368 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7351, file: !491, line: 277, type: !6530)
!7369 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7351, file: !491, line: 277, type: !6530)
!7370 = !DILocation(line: 0, scope: !7351)
!7371 = !DILocation(line: 279, column: 6, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7351, file: !491, line: 279, column: 6)
!7373 = !DILocation(line: 280, column: 57, scope: !7372)
!7374 = !DILocation(line: 279, column: 6, scope: !7351)
!7375 = !DILocation(line: 282, column: 3, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7377, file: !491, line: 282, column: 3)
!7377 = distinct !DILexicalBlock(scope: !7378, file: !491, line: 282, column: 3)
!7378 = distinct !DILexicalBlock(scope: !7379, file: !491, line: 282, column: 3)
!7379 = distinct !DILexicalBlock(scope: !7372, file: !491, line: 280, column: 69)
!7380 = !DILocation(line: 285, column: 1, scope: !7351)
!7381 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7382, file: !7382, line: 220, type: !7383, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7385)
!7382 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7383 = !DISubroutineType(types: !7384)
!7384 = !{!107, !7354, !1948, !6530, !6530}
!7385 = !{!7386, !7387, !7388, !7389, !7390}
!7386 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7381, file: !7382, line: 221, type: !7354)
!7387 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7381, file: !7382, line: 221, type: !1948)
!7388 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7381, file: !7382, line: 222, type: !6530)
!7389 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7381, file: !7382, line: 223, type: !6530)
!7390 = !DILocalVariable(name: "mpu_reg_index", scope: !7381, file: !7382, line: 225, type: !107)
!7391 = !DILocation(line: 0, scope: !7381)
!7392 = !DILocation(line: 225, column: 22, scope: !7381)
!7393 = !DILocation(line: 233, column: 18, scope: !7381)
!7394 = !DILocation(line: 236, column: 23, scope: !7381)
!7395 = !DILocation(line: 236, column: 21, scope: !7381)
!7396 = !DILocation(line: 238, column: 2, scope: !7381)
!7397 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !491, file: !491, line: 105, type: !7398, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7400)
!7398 = !DISubroutineType(types: !7399)
!7399 = !{!107, !7354, !195, !195, !145}
!7400 = !{!7401, !7402, !7403, !7404, !7405, !7406}
!7401 = !DILocalVariable(name: "regions", arg: 1, scope: !7397, file: !491, line: 106, type: !7354)
!7402 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7397, file: !491, line: 106, type: !195)
!7403 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7397, file: !491, line: 106, type: !195)
!7404 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7397, file: !491, line: 107, type: !145)
!7405 = !DILocalVariable(name: "i", scope: !7397, file: !491, line: 109, type: !107)
!7406 = !DILocalVariable(name: "reg_index", scope: !7397, file: !491, line: 110, type: !107)
!7407 = !DILocation(line: 0, scope: !7397)
!7408 = !DILocation(line: 110, column: 18, scope: !7397)
!7409 = !DILocation(line: 112, column: 16, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7411, file: !491, line: 112, column: 2)
!7411 = distinct !DILexicalBlock(scope: !7397, file: !491, line: 112, column: 2)
!7412 = !DILocation(line: 112, column: 2, scope: !7411)
!7413 = !DILocation(line: 113, column: 7, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7415, file: !491, line: 113, column: 7)
!7415 = distinct !DILexicalBlock(scope: !7410, file: !491, line: 112, column: 36)
!7416 = !DILocation(line: 113, column: 18, scope: !7414)
!7417 = !DILocation(line: 113, column: 23, scope: !7414)
!7418 = !DILocation(line: 113, column: 7, scope: !7415)
!7419 = !DILocation(line: 118, column: 23, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7415, file: !491, line: 118, column: 7)
!7421 = !DILocation(line: 119, column: 7, scope: !7420)
!7422 = !DILocation(line: 118, column: 7, scope: !7415)
!7423 = !DILocation(line: 120, column: 4, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7425, file: !491, line: 120, column: 4)
!7425 = distinct !DILexicalBlock(scope: !7426, file: !491, line: 120, column: 4)
!7426 = distinct !DILexicalBlock(scope: !7427, file: !491, line: 120, column: 4)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !491, line: 120, column: 4)
!7428 = distinct !DILexicalBlock(scope: !7420, file: !491, line: 119, column: 45)
!7429 = !DILocation(line: 121, column: 4, scope: !7428)
!7430 = !DILocation(line: 124, column: 36, scope: !7415)
!7431 = !DILocation(line: 124, column: 15, scope: !7415)
!7432 = !DILocation(line: 126, column: 17, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7415, file: !491, line: 126, column: 7)
!7434 = !DILocation(line: 126, column: 7, scope: !7415)
!7435 = !DILocation(line: 131, column: 12, scope: !7415)
!7436 = !DILocation(line: 132, column: 2, scope: !7415)
!7437 = !DILocation(line: 112, column: 32, scope: !7410)
!7438 = distinct !{!7438, !7412, !7439}
!7439 = !DILocation(line: 132, column: 2, scope: !7411)
!7440 = !DILocation(line: 135, column: 1, scope: !7397)
!7441 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7382, file: !7382, line: 63, type: !7442, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7444)
!7442 = !DISubroutineType(types: !7443)
!7443 = !{!107, !7354}
!7444 = !{!7445, !7446}
!7445 = !DILocalVariable(name: "part", arg: 1, scope: !7441, file: !7382, line: 63, type: !7354)
!7446 = !DILocalVariable(name: "partition_is_valid", scope: !7441, file: !7382, line: 70, type: !107)
!7447 = !DILocation(line: 0, scope: !7441)
!7448 = !DILocation(line: 71, column: 11, scope: !7441)
!7449 = !DILocation(line: 71, column: 37, scope: !7441)
!7450 = !{i32 0, i32 33}
!7451 = !DILocation(line: 72, column: 3, scope: !7441)
!7452 = !DILocation(line: 71, column: 30, scope: !7441)
!7453 = !DILocation(line: 75, column: 11, scope: !7441)
!7454 = !DILocation(line: 75, column: 17, scope: !7441)
!7455 = !DILocation(line: 75, column: 38, scope: !7441)
!7456 = !DILocation(line: 77, column: 2, scope: !7441)
!7457 = distinct !DISubprogram(name: "mpu_configure_region", scope: !491, file: !491, line: 79, type: !7458, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7460)
!7458 = !DISubroutineType(types: !7459)
!7459 = !{!107, !1948, !7354}
!7460 = !{!7461, !7462, !7463}
!7461 = !DILocalVariable(name: "index", arg: 1, scope: !7457, file: !491, line: 79, type: !1948)
!7462 = !DILocalVariable(name: "new_region", arg: 2, scope: !7457, file: !491, line: 80, type: !7354)
!7463 = !DILocalVariable(name: "region_conf", scope: !7457, file: !491, line: 82, type: !480)
!7464 = !DILocation(line: 0, scope: !7457)
!7465 = !DILocation(line: 82, column: 2, scope: !7457)
!7466 = !DILocation(line: 82, column: 24, scope: !7457)
!7467 = !DILocation(line: 87, column: 33, scope: !7457)
!7468 = !DILocation(line: 87, column: 14, scope: !7457)
!7469 = !DILocation(line: 87, column: 19, scope: !7457)
!7470 = !DILocation(line: 91, column: 55, scope: !7457)
!7471 = !DILocation(line: 92, column: 16, scope: !7457)
!7472 = !DILocation(line: 92, column: 53, scope: !7457)
!7473 = !DILocation(line: 91, column: 2, scope: !7457)
!7474 = !DILocation(line: 95, column: 9, scope: !7457)
!7475 = !DILocation(line: 97, column: 1, scope: !7457)
!7476 = !DILocation(line: 95, column: 2, scope: !7457)
!7477 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7382, file: !7382, line: 113, type: !7478, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7483)
!7478 = !DISubroutineType(types: !7479)
!7479 = !{null, !7480, !7481, !152, !152}
!7480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 32)
!7481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7482, size: 32)
!7482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7361)
!7483 = !{!7484, !7485, !7486, !7487}
!7484 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7477, file: !7382, line: 114, type: !7480)
!7485 = !DILocalVariable(name: "attr", arg: 2, scope: !7477, file: !7382, line: 115, type: !7481)
!7486 = !DILocalVariable(name: "base", arg: 3, scope: !7477, file: !7382, line: 115, type: !152)
!7487 = !DILocalVariable(name: "size", arg: 4, scope: !7477, file: !7382, line: 115, type: !152)
!7488 = !DILocation(line: 0, scope: !7477)
!7489 = !DILocation(line: 127, column: 23, scope: !7477)
!7490 = !DILocation(line: 127, column: 35, scope: !7477)
!7491 = !DILocation(line: 127, column: 33, scope: !7477)
!7492 = !DILocation(line: 127, column: 10, scope: !7477)
!7493 = !DILocation(line: 127, column: 15, scope: !7477)
!7494 = !DILocation(line: 129, column: 1, scope: !7477)
!7495 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !491, file: !491, line: 57, type: !7496, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7498)
!7496 = !DISubroutineType(types: !7497)
!7497 = !{!107, !1948, !478}
!7498 = !{!7499, !7500}
!7499 = !DILocalVariable(name: "index", arg: 1, scope: !7495, file: !491, line: 57, type: !1948)
!7500 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7495, file: !491, line: 58, type: !478)
!7501 = !DILocation(line: 0, scope: !7495)
!7502 = !DILocation(line: 61, column: 6, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7495, file: !491, line: 61, column: 6)
!7504 = !DILocation(line: 61, column: 12, scope: !7503)
!7505 = !DILocation(line: 61, column: 6, scope: !7495)
!7506 = !DILocation(line: 64, column: 3, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7508, file: !491, line: 64, column: 3)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !491, line: 64, column: 3)
!7509 = distinct !DILexicalBlock(scope: !7510, file: !491, line: 64, column: 3)
!7510 = distinct !DILexicalBlock(scope: !7511, file: !491, line: 64, column: 3)
!7511 = distinct !DILexicalBlock(scope: !7503, file: !491, line: 61, column: 40)
!7512 = !DILocation(line: 65, column: 3, scope: !7511)
!7513 = !DILocation(line: 71, column: 2, scope: !7495)
!7514 = !DILocation(line: 73, column: 2, scope: !7495)
!7515 = !DILocation(line: 74, column: 1, scope: !7495)
!7516 = distinct !DISubprogram(name: "region_init", scope: !7382, file: !7382, line: 29, type: !7517, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7519)
!7517 = !DISubroutineType(types: !7518)
!7518 = !{null, !6530, !478}
!7519 = !{!7520, !7521}
!7520 = !DILocalVariable(name: "index", arg: 1, scope: !7516, file: !7382, line: 29, type: !6530)
!7521 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7516, file: !7382, line: 30, type: !478)
!7522 = !DILocation(line: 0, scope: !7516)
!7523 = !DILocation(line: 33, column: 2, scope: !7516)
!7524 = !DILocation(line: 47, column: 28, scope: !7516)
!7525 = !DILocation(line: 47, column: 33, scope: !7516)
!7526 = !DILocation(line: 48, column: 26, scope: !7516)
!7527 = !DILocation(line: 47, column: 12, scope: !7516)
!7528 = !DILocation(line: 49, column: 32, scope: !7516)
!7529 = !DILocation(line: 49, column: 37, scope: !7516)
!7530 = !DILocation(line: 49, column: 12, scope: !7516)
!7531 = !DILocation(line: 53, column: 1, scope: !7516)
!7532 = distinct !DISubprogram(name: "set_region_number", scope: !7533, file: !7533, line: 32, type: !6350, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7534)
!7533 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7534 = !{!7535}
!7535 = !DILocalVariable(name: "index", arg: 1, scope: !7532, file: !7533, line: 32, type: !152)
!7536 = !DILocation(line: 0, scope: !7532)
!7537 = !DILocation(line: 34, column: 11, scope: !7532)
!7538 = !DILocation(line: 35, column: 1, scope: !7532)
!7539 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7382, file: !7382, line: 88, type: !7540, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7542)
!7540 = !DISubroutineType(types: !7541)
!7541 = !{!152, !152}
!7542 = !{!7543}
!7543 = !DILocalVariable(name: "size", arg: 1, scope: !7539, file: !7382, line: 88, type: !152)
!7544 = !DILocation(line: 0, scope: !7539)
!7545 = !DILocation(line: 91, column: 11, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7539, file: !7382, line: 91, column: 6)
!7547 = !DILocation(line: 91, column: 6, scope: !7539)
!7548 = !DILocation(line: 100, column: 11, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7539, file: !7382, line: 100, column: 6)
!7550 = !DILocation(line: 100, column: 6, scope: !7539)
!7551 = !DILocation(line: 104, column: 35, scope: !7539)
!7552 = !DILocation(line: 104, column: 16, scope: !7539)
!7553 = !DILocation(line: 104, column: 50, scope: !7539)
!7554 = !DILocation(line: 104, column: 72, scope: !7539)
!7555 = !DILocation(line: 104, column: 2, scope: !7539)
!7556 = !DILocation(line: 106, column: 1, scope: !7539)
!7557 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !491, file: !491, line: 307, type: !7558, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7560)
!7558 = !DISubroutineType(types: !7559)
!7559 = !{null, !7354, !195}
!7560 = !{!7561, !7562}
!7561 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7557, file: !491, line: 308, type: !7354)
!7562 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7557, file: !491, line: 308, type: !195)
!7563 = !DILocation(line: 0, scope: !7557)
!7564 = !DILocation(line: 310, column: 6, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7557, file: !491, line: 310, column: 6)
!7566 = !DILocation(line: 311, column: 3, scope: !7565)
!7567 = !DILocation(line: 310, column: 6, scope: !7557)
!7568 = !DILocation(line: 313, column: 3, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7570, file: !491, line: 313, column: 3)
!7570 = distinct !DILexicalBlock(scope: !7571, file: !491, line: 313, column: 3)
!7571 = distinct !DILexicalBlock(scope: !7572, file: !491, line: 313, column: 3)
!7572 = distinct !DILexicalBlock(scope: !7565, file: !491, line: 311, column: 15)
!7573 = !DILocation(line: 316, column: 1, scope: !7557)
!7574 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7382, file: !7382, line: 249, type: !7575, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7577)
!7575 = !DISubroutineType(types: !7576)
!7576 = !{!107, !7354, !195}
!7577 = !{!7578, !7579, !7580, !7581}
!7578 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7574, file: !7382, line: 250, type: !7354)
!7579 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7574, file: !7382, line: 250, type: !195)
!7580 = !DILocalVariable(name: "mpu_reg_index", scope: !7574, file: !7382, line: 252, type: !107)
!7581 = !DILocalVariable(name: "i", scope: !7582, file: !7382, line: 264, type: !107)
!7582 = distinct !DILexicalBlock(scope: !7583, file: !7382, line: 264, column: 3)
!7583 = distinct !DILexicalBlock(scope: !7584, file: !7382, line: 261, column: 32)
!7584 = distinct !DILexicalBlock(scope: !7574, file: !7382, line: 261, column: 6)
!7585 = !DILocation(line: 0, scope: !7574)
!7586 = !DILocation(line: 252, column: 22, scope: !7574)
!7587 = !DILocation(line: 258, column: 18, scope: !7574)
!7588 = !DILocation(line: 261, column: 20, scope: !7584)
!7589 = !DILocation(line: 261, column: 6, scope: !7574)
!7590 = !DILocation(line: 0, scope: !7582)
!7591 = !DILocation(line: 265, column: 4, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7593, file: !7382, line: 264, column: 59)
!7593 = distinct !DILexicalBlock(scope: !7582, file: !7382, line: 264, column: 3)
!7594 = !DILocation(line: 264, column: 55, scope: !7593)
!7595 = !DILocation(line: 264, column: 33, scope: !7593)
!7596 = !DILocation(line: 264, column: 3, scope: !7582)
!7597 = distinct !{!7597, !7596, !7598}
!7598 = !DILocation(line: 266, column: 3, scope: !7582)
!7599 = !DILocation(line: 269, column: 2, scope: !7574)
!7600 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7601, file: !7601, line: 218, type: !6350, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7602)
!7601 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7602 = !{!7603}
!7603 = !DILocalVariable(name: "rnr", arg: 1, scope: !7600, file: !7601, line: 218, type: !152)
!7604 = !DILocation(line: 0, scope: !7600)
!7605 = !DILocation(line: 220, column: 12, scope: !7600)
!7606 = !DILocation(line: 221, column: 13, scope: !7600)
!7607 = !DILocation(line: 222, column: 1, scope: !7600)
!7608 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !491, file: !491, line: 326, type: !7609, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7611)
!7609 = !DISubroutineType(types: !7610)
!7610 = !{!107}
!7611 = !{!7612}
!7612 = !DILocalVariable(name: "r_index", scope: !7608, file: !491, line: 328, type: !152)
!7613 = !DILocation(line: 330, column: 17, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7608, file: !491, line: 330, column: 6)
!7615 = !DILocation(line: 330, column: 29, scope: !7614)
!7616 = !DILocation(line: 330, column: 6, scope: !7608)
!7617 = !DILocation(line: 337, column: 3, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7619, file: !491, line: 337, column: 3)
!7619 = distinct !DILexicalBlock(scope: !7620, file: !491, line: 337, column: 3)
!7620 = distinct !DILexicalBlock(scope: !7621, file: !491, line: 337, column: 3)
!7621 = distinct !DILexicalBlock(scope: !7614, file: !491, line: 330, column: 50)
!7622 = !DILocation(line: 347, column: 2, scope: !7608)
!7623 = !DILocation(line: 0, scope: !7608)
!7624 = !DILocation(line: 364, column: 29, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7626, file: !491, line: 364, column: 2)
!7626 = distinct !DILexicalBlock(scope: !7608, file: !491, line: 364, column: 2)
!7627 = !DILocation(line: 364, column: 2, scope: !7626)
!7628 = !DILocation(line: 365, column: 25, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7625, file: !491, line: 364, column: 66)
!7630 = !DILocation(line: 365, column: 3, scope: !7629)
!7631 = !DILocation(line: 364, column: 62, scope: !7625)
!7632 = distinct !{!7632, !7627, !7633}
!7633 = !DILocation(line: 366, column: 2, scope: !7626)
!7634 = !DILocation(line: 369, column: 23, scope: !7608)
!7635 = !DILocation(line: 369, column: 21, scope: !7608)
!7636 = !DILocation(line: 372, column: 2, scope: !7608)
!7637 = !DILocation(line: 433, column: 2, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7639, file: !491, line: 433, column: 2)
!7639 = distinct !DILexicalBlock(scope: !7608, file: !491, line: 433, column: 2)
!7640 = !DILocation(line: 433, column: 2, scope: !7639)
!7641 = !DILocation(line: 433, column: 2, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7638, file: !491, line: 433, column: 2)
!7643 = !DILocation(line: 444, column: 1, scope: !7608)
!7644 = distinct !DISubprogram(name: "strcpy", scope: !7645, file: !7645, line: 20, type: !7646, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7650)
!7645 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7646 = !DISubroutineType(types: !7647)
!7647 = !{!193, !7648, !7649}
!7648 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7649 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7650 = !{!7651, !7652, !7653}
!7651 = !DILocalVariable(name: "d", arg: 1, scope: !7644, file: !7645, line: 20, type: !7648)
!7652 = !DILocalVariable(name: "s", arg: 2, scope: !7644, file: !7645, line: 20, type: !7649)
!7653 = !DILocalVariable(name: "dest", scope: !7644, file: !7645, line: 22, type: !193)
!7654 = !DILocation(line: 0, scope: !7644)
!7655 = !DILocation(line: 24, column: 9, scope: !7644)
!7656 = !DILocation(line: 24, column: 12, scope: !7644)
!7657 = !DILocation(line: 24, column: 2, scope: !7644)
!7658 = !DILocation(line: 25, column: 6, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7644, file: !7645, line: 24, column: 21)
!7660 = !DILocation(line: 26, column: 4, scope: !7659)
!7661 = !DILocation(line: 27, column: 4, scope: !7659)
!7662 = distinct !{!7662, !7657, !7663}
!7663 = !DILocation(line: 28, column: 2, scope: !7644)
!7664 = !DILocation(line: 30, column: 5, scope: !7644)
!7665 = !DILocation(line: 32, column: 2, scope: !7644)
!7666 = distinct !DISubprogram(name: "strncpy", scope: !7645, file: !7645, line: 42, type: !7667, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7669)
!7667 = !DISubroutineType(types: !7668)
!7668 = !{!193, !7648, !7649, !185}
!7669 = !{!7670, !7671, !7672, !7673}
!7670 = !DILocalVariable(name: "d", arg: 1, scope: !7666, file: !7645, line: 42, type: !7648)
!7671 = !DILocalVariable(name: "s", arg: 2, scope: !7666, file: !7645, line: 42, type: !7649)
!7672 = !DILocalVariable(name: "n", arg: 3, scope: !7666, file: !7645, line: 42, type: !185)
!7673 = !DILocalVariable(name: "dest", scope: !7666, file: !7645, line: 44, type: !193)
!7674 = !DILocation(line: 0, scope: !7666)
!7675 = !DILocation(line: 46, column: 12, scope: !7666)
!7676 = !DILocation(line: 46, column: 17, scope: !7666)
!7677 = !DILocation(line: 46, column: 20, scope: !7666)
!7678 = !DILocation(line: 46, column: 23, scope: !7666)
!7679 = !DILocation(line: 46, column: 2, scope: !7666)
!7680 = !DILocation(line: 47, column: 6, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7666, file: !7645, line: 46, column: 32)
!7682 = !DILocation(line: 48, column: 4, scope: !7681)
!7683 = !DILocation(line: 49, column: 4, scope: !7681)
!7684 = !DILocation(line: 50, column: 4, scope: !7681)
!7685 = distinct !{!7685, !7679, !7686}
!7686 = !DILocation(line: 51, column: 2, scope: !7666)
!7687 = !DILocation(line: 54, column: 6, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7666, file: !7645, line: 53, column: 16)
!7689 = !DILocation(line: 55, column: 4, scope: !7688)
!7690 = !DILocation(line: 56, column: 4, scope: !7688)
!7691 = !DILocation(line: 53, column: 11, scope: !7666)
!7692 = !DILocation(line: 53, column: 2, scope: !7666)
!7693 = distinct !{!7693, !7692, !7694}
!7694 = !DILocation(line: 57, column: 2, scope: !7666)
!7695 = !DILocation(line: 59, column: 2, scope: !7666)
!7696 = distinct !DISubprogram(name: "strchr", scope: !7645, file: !7645, line: 69, type: !7697, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7699)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{!193, !118, !107}
!7699 = !{!7700, !7701, !7702}
!7700 = !DILocalVariable(name: "s", arg: 1, scope: !7696, file: !7645, line: 69, type: !118)
!7701 = !DILocalVariable(name: "c", arg: 2, scope: !7696, file: !7645, line: 69, type: !107)
!7702 = !DILocalVariable(name: "tmp", scope: !7696, file: !7645, line: 71, type: !120)
!7703 = !DILocation(line: 0, scope: !7696)
!7704 = !DILocation(line: 73, column: 2, scope: !7696)
!7705 = !DILocation(line: 73, column: 10, scope: !7696)
!7706 = !DILocation(line: 73, column: 13, scope: !7696)
!7707 = !DILocation(line: 73, column: 21, scope: !7696)
!7708 = !DILocation(line: 74, column: 4, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7696, file: !7645, line: 73, column: 38)
!7710 = distinct !{!7710, !7704, !7711}
!7711 = !DILocation(line: 75, column: 2, scope: !7696)
!7712 = !DILocation(line: 77, column: 9, scope: !7696)
!7713 = !DILocation(line: 77, column: 2, scope: !7696)
!7714 = distinct !DISubprogram(name: "strrchr", scope: !7645, file: !7645, line: 87, type: !7697, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7715)
!7715 = !{!7716, !7717, !7718}
!7716 = !DILocalVariable(name: "s", arg: 1, scope: !7714, file: !7645, line: 87, type: !118)
!7717 = !DILocalVariable(name: "c", arg: 2, scope: !7714, file: !7645, line: 87, type: !107)
!7718 = !DILocalVariable(name: "match", scope: !7714, file: !7645, line: 89, type: !193)
!7719 = !DILocation(line: 0, scope: !7714)
!7720 = !DILocation(line: 91, column: 2, scope: !7714)
!7721 = !DILocation(line: 92, column: 7, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7723, file: !7645, line: 92, column: 7)
!7723 = distinct !DILexicalBlock(scope: !7714, file: !7645, line: 91, column: 5)
!7724 = !DILocation(line: 92, column: 10, scope: !7722)
!7725 = !DILocation(line: 92, column: 7, scope: !7723)
!7726 = !DILocation(line: 95, column: 13, scope: !7714)
!7727 = !DILocation(line: 95, column: 2, scope: !7723)
!7728 = distinct !{!7728, !7720, !7729}
!7729 = !DILocation(line: 95, column: 15, scope: !7714)
!7730 = !DILocation(line: 97, column: 2, scope: !7714)
!7731 = distinct !DISubprogram(name: "strlen", scope: !7645, file: !7645, line: 107, type: !7732, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7734)
!7732 = !DISubroutineType(types: !7733)
!7733 = !{!185, !118}
!7734 = !{!7735, !7736}
!7735 = !DILocalVariable(name: "s", arg: 1, scope: !7731, file: !7645, line: 107, type: !118)
!7736 = !DILocalVariable(name: "n", scope: !7731, file: !7645, line: 109, type: !185)
!7737 = !DILocation(line: 0, scope: !7731)
!7738 = !DILocation(line: 111, column: 9, scope: !7731)
!7739 = !DILocation(line: 111, column: 12, scope: !7731)
!7740 = !DILocation(line: 111, column: 2, scope: !7731)
!7741 = !DILocation(line: 112, column: 4, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7731, file: !7645, line: 111, column: 21)
!7743 = !DILocation(line: 113, column: 4, scope: !7742)
!7744 = distinct !{!7744, !7740, !7745}
!7745 = !DILocation(line: 114, column: 2, scope: !7731)
!7746 = !DILocation(line: 116, column: 2, scope: !7731)
!7747 = distinct !DISubprogram(name: "strnlen", scope: !7645, file: !7645, line: 126, type: !7748, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7750)
!7748 = !DISubroutineType(types: !7749)
!7749 = !{!185, !118, !185}
!7750 = !{!7751, !7752, !7753}
!7751 = !DILocalVariable(name: "s", arg: 1, scope: !7747, file: !7645, line: 126, type: !118)
!7752 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7747, file: !7645, line: 126, type: !185)
!7753 = !DILocalVariable(name: "n", scope: !7747, file: !7645, line: 128, type: !185)
!7754 = !DILocation(line: 0, scope: !7747)
!7755 = !DILocation(line: 130, column: 9, scope: !7747)
!7756 = !DILocation(line: 130, column: 12, scope: !7747)
!7757 = !DILocation(line: 130, column: 20, scope: !7747)
!7758 = !DILocation(line: 130, column: 2, scope: !7747)
!7759 = !DILocation(line: 131, column: 4, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7747, file: !7645, line: 130, column: 35)
!7761 = !DILocation(line: 132, column: 4, scope: !7760)
!7762 = distinct !{!7762, !7758, !7763}
!7763 = !DILocation(line: 133, column: 2, scope: !7747)
!7764 = !DILocation(line: 135, column: 2, scope: !7747)
!7765 = distinct !DISubprogram(name: "strcmp", scope: !7645, file: !7645, line: 145, type: !7766, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7768)
!7766 = !DISubroutineType(types: !7767)
!7767 = !{!107, !118, !118}
!7768 = !{!7769, !7770}
!7769 = !DILocalVariable(name: "s1", arg: 1, scope: !7765, file: !7645, line: 145, type: !118)
!7770 = !DILocalVariable(name: "s2", arg: 2, scope: !7765, file: !7645, line: 145, type: !118)
!7771 = !DILocation(line: 0, scope: !7765)
!7772 = !DILocation(line: 147, column: 10, scope: !7765)
!7773 = !DILocation(line: 147, column: 17, scope: !7765)
!7774 = !DILocation(line: 147, column: 14, scope: !7765)
!7775 = !DILocation(line: 147, column: 22, scope: !7765)
!7776 = !DILocation(line: 148, column: 5, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7765, file: !7645, line: 147, column: 40)
!7778 = !DILocation(line: 149, column: 5, scope: !7777)
!7779 = distinct !{!7779, !7780, !7781}
!7780 = !DILocation(line: 147, column: 2, scope: !7765)
!7781 = !DILocation(line: 150, column: 2, scope: !7765)
!7782 = !DILocation(line: 152, column: 9, scope: !7765)
!7783 = !DILocation(line: 152, column: 15, scope: !7765)
!7784 = !DILocation(line: 152, column: 13, scope: !7765)
!7785 = !DILocation(line: 152, column: 2, scope: !7765)
!7786 = distinct !DISubprogram(name: "strncmp", scope: !7645, file: !7645, line: 162, type: !7787, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7789)
!7787 = !DISubroutineType(types: !7788)
!7788 = !{!107, !118, !118, !185}
!7789 = !{!7790, !7791, !7792}
!7790 = !DILocalVariable(name: "s1", arg: 1, scope: !7786, file: !7645, line: 162, type: !118)
!7791 = !DILocalVariable(name: "s2", arg: 2, scope: !7786, file: !7645, line: 162, type: !118)
!7792 = !DILocalVariable(name: "n", arg: 3, scope: !7786, file: !7645, line: 162, type: !185)
!7793 = !DILocation(line: 0, scope: !7786)
!7794 = !DILocation(line: 164, column: 17, scope: !7786)
!7795 = !DILocation(line: 164, column: 21, scope: !7786)
!7796 = !DILocation(line: 164, column: 28, scope: !7786)
!7797 = !DILocation(line: 164, column: 25, scope: !7786)
!7798 = !DILocation(line: 164, column: 33, scope: !7786)
!7799 = !DILocation(line: 165, column: 5, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7786, file: !7645, line: 164, column: 51)
!7801 = !DILocation(line: 166, column: 5, scope: !7800)
!7802 = !DILocation(line: 167, column: 4, scope: !7800)
!7803 = distinct !{!7803, !7804, !7805}
!7804 = !DILocation(line: 164, column: 2, scope: !7786)
!7805 = !DILocation(line: 168, column: 2, scope: !7786)
!7806 = !DILocation(line: 170, column: 25, scope: !7786)
!7807 = !DILocation(line: 170, column: 31, scope: !7786)
!7808 = !DILocation(line: 170, column: 29, scope: !7786)
!7809 = !DILocation(line: 170, column: 9, scope: !7786)
!7810 = !DILocation(line: 170, column: 2, scope: !7786)
!7811 = distinct !DISubprogram(name: "strtok_r", scope: !7645, file: !7645, line: 180, type: !7812, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7814)
!7812 = !DISubroutineType(types: !7813)
!7813 = !{!193, !193, !118, !192}
!7814 = !{!7815, !7816, !7817, !7818, !7819}
!7815 = !DILocalVariable(name: "str", arg: 1, scope: !7811, file: !7645, line: 180, type: !193)
!7816 = !DILocalVariable(name: "sep", arg: 2, scope: !7811, file: !7645, line: 180, type: !118)
!7817 = !DILocalVariable(name: "state", arg: 3, scope: !7811, file: !7645, line: 180, type: !192)
!7818 = !DILocalVariable(name: "start", scope: !7811, file: !7645, line: 182, type: !193)
!7819 = !DILocalVariable(name: "end", scope: !7811, file: !7645, line: 182, type: !193)
!7820 = !DILocation(line: 0, scope: !7811)
!7821 = !DILocation(line: 184, column: 10, scope: !7811)
!7822 = !DILocation(line: 184, column: 22, scope: !7811)
!7823 = !DILocation(line: 187, column: 9, scope: !7811)
!7824 = !DILocation(line: 187, column: 16, scope: !7811)
!7825 = !DILocation(line: 187, column: 19, scope: !7811)
!7826 = !DILocation(line: 187, column: 2, scope: !7811)
!7827 = !DILocation(line: 188, column: 8, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7811, file: !7645, line: 187, column: 40)
!7829 = distinct !{!7829, !7826, !7830}
!7830 = !DILocation(line: 189, column: 2, scope: !7811)
!7831 = !DILocation(line: 198, column: 9, scope: !7811)
!7832 = !DILocation(line: 198, column: 18, scope: !7811)
!7833 = !DILocation(line: 198, column: 17, scope: !7811)
!7834 = !DILocation(line: 198, column: 2, scope: !7811)
!7835 = !DILocation(line: 199, column: 6, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7811, file: !7645, line: 198, column: 37)
!7837 = !DILocation(line: 198, column: 14, scope: !7811)
!7838 = distinct !{!7838, !7834, !7839}
!7839 = !DILocation(line: 200, column: 2, scope: !7811)
!7840 = !DILocation(line: 203, column: 8, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7842, file: !7645, line: 202, column: 20)
!7842 = distinct !DILexicalBlock(scope: !7811, file: !7645, line: 202, column: 6)
!7843 = !DILocation(line: 204, column: 16, scope: !7841)
!7844 = !DILocation(line: 205, column: 2, scope: !7841)
!7845 = !DILocation(line: 210, column: 1, scope: !7811)
!7846 = distinct !DISubprogram(name: "strcat", scope: !7645, file: !7645, line: 212, type: !7646, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7847)
!7847 = !{!7848, !7849}
!7848 = !DILocalVariable(name: "dest", arg: 1, scope: !7846, file: !7645, line: 212, type: !7648)
!7849 = !DILocalVariable(name: "src", arg: 2, scope: !7846, file: !7645, line: 212, type: !7649)
!7850 = !DILocation(line: 0, scope: !7846)
!7851 = !DILocation(line: 214, column: 16, scope: !7846)
!7852 = !DILocation(line: 214, column: 14, scope: !7846)
!7853 = !DILocation(line: 214, column: 2, scope: !7846)
!7854 = !DILocation(line: 215, column: 2, scope: !7846)
!7855 = distinct !DISubprogram(name: "strncat", scope: !7645, file: !7645, line: 218, type: !7667, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7856)
!7856 = !{!7857, !7858, !7859, !7860, !7861}
!7857 = !DILocalVariable(name: "dest", arg: 1, scope: !7855, file: !7645, line: 218, type: !7648)
!7858 = !DILocalVariable(name: "src", arg: 2, scope: !7855, file: !7645, line: 218, type: !7649)
!7859 = !DILocalVariable(name: "n", arg: 3, scope: !7855, file: !7645, line: 219, type: !185)
!7860 = !DILocalVariable(name: "orig_dest", scope: !7855, file: !7645, line: 221, type: !193)
!7861 = !DILocalVariable(name: "len", scope: !7855, file: !7645, line: 222, type: !185)
!7862 = !DILocation(line: 0, scope: !7855)
!7863 = !DILocation(line: 222, column: 15, scope: !7855)
!7864 = !DILocation(line: 224, column: 7, scope: !7855)
!7865 = !DILocation(line: 225, column: 14, scope: !7855)
!7866 = !DILocation(line: 225, column: 19, scope: !7855)
!7867 = !DILocation(line: 225, column: 11, scope: !7855)
!7868 = !DILocation(line: 225, column: 23, scope: !7855)
!7869 = !DILocation(line: 225, column: 28, scope: !7855)
!7870 = !DILocation(line: 225, column: 2, scope: !7855)
!7871 = !DILocation(line: 226, column: 17, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7855, file: !7645, line: 225, column: 38)
!7873 = !DILocation(line: 226, column: 8, scope: !7872)
!7874 = !DILocation(line: 226, column: 11, scope: !7872)
!7875 = distinct !{!7875, !7870, !7876}
!7876 = !DILocation(line: 227, column: 2, scope: !7855)
!7877 = !DILocation(line: 228, column: 8, scope: !7855)
!7878 = !DILocation(line: 230, column: 2, scope: !7855)
!7879 = distinct !DISubprogram(name: "memcmp", scope: !7645, file: !7645, line: 239, type: !7880, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7882)
!7880 = !DISubroutineType(types: !7881)
!7881 = !{!107, !13, !13, !185}
!7882 = !{!7883, !7884, !7885, !7886, !7887}
!7883 = !DILocalVariable(name: "m1", arg: 1, scope: !7879, file: !7645, line: 239, type: !13)
!7884 = !DILocalVariable(name: "m2", arg: 2, scope: !7879, file: !7645, line: 239, type: !13)
!7885 = !DILocalVariable(name: "n", arg: 3, scope: !7879, file: !7645, line: 239, type: !185)
!7886 = !DILocalVariable(name: "c1", scope: !7879, file: !7645, line: 241, type: !118)
!7887 = !DILocalVariable(name: "c2", scope: !7879, file: !7645, line: 242, type: !118)
!7888 = !DILocation(line: 0, scope: !7879)
!7889 = !DILocation(line: 244, column: 7, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7879, file: !7645, line: 244, column: 6)
!7891 = !DILocation(line: 244, column: 6, scope: !7879)
!7892 = !DILocation(line: 248, column: 10, scope: !7879)
!7893 = !DILocation(line: 248, column: 14, scope: !7879)
!7894 = !DILocation(line: 248, column: 19, scope: !7879)
!7895 = !DILocation(line: 248, column: 2, scope: !7879)
!7896 = !DILocation(line: 248, column: 23, scope: !7879)
!7897 = !DILocation(line: 248, column: 30, scope: !7879)
!7898 = !DILocation(line: 248, column: 27, scope: !7879)
!7899 = !DILocation(line: 249, column: 5, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7879, file: !7645, line: 248, column: 36)
!7901 = !DILocation(line: 250, column: 5, scope: !7900)
!7902 = distinct !{!7902, !7895, !7903}
!7903 = !DILocation(line: 251, column: 2, scope: !7879)
!7904 = !DILocation(line: 253, column: 9, scope: !7879)
!7905 = !DILocation(line: 253, column: 15, scope: !7879)
!7906 = !DILocation(line: 253, column: 13, scope: !7879)
!7907 = !DILocation(line: 253, column: 2, scope: !7879)
!7908 = !DILocation(line: 254, column: 1, scope: !7879)
!7909 = distinct !DISubprogram(name: "memmove", scope: !7645, file: !7645, line: 263, type: !7910, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7912)
!7910 = !DISubroutineType(types: !7911)
!7911 = !{!106, !106, !13, !185}
!7912 = !{!7913, !7914, !7915, !7916, !7917}
!7913 = !DILocalVariable(name: "d", arg: 1, scope: !7909, file: !7645, line: 263, type: !106)
!7914 = !DILocalVariable(name: "s", arg: 2, scope: !7909, file: !7645, line: 263, type: !13)
!7915 = !DILocalVariable(name: "n", arg: 3, scope: !7909, file: !7645, line: 263, type: !185)
!7916 = !DILocalVariable(name: "dest", scope: !7909, file: !7645, line: 265, type: !193)
!7917 = !DILocalVariable(name: "src", scope: !7909, file: !7645, line: 266, type: !118)
!7918 = !DILocation(line: 0, scope: !7909)
!7919 = !DILocation(line: 268, column: 21, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7909, file: !7645, line: 268, column: 6)
!7921 = !DILocation(line: 268, column: 28, scope: !7920)
!7922 = !DILocation(line: 268, column: 6, scope: !7909)
!7923 = !DILocation(line: 280, column: 12, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7920, file: !7645, line: 278, column: 9)
!7925 = !DILocation(line: 280, column: 3, scope: !7924)
!7926 = !DILocation(line: 275, column: 5, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7928, file: !7645, line: 274, column: 17)
!7928 = distinct !DILexicalBlock(scope: !7920, file: !7645, line: 268, column: 33)
!7929 = !DILocation(line: 276, column: 14, scope: !7927)
!7930 = !DILocation(line: 276, column: 4, scope: !7927)
!7931 = !DILocation(line: 276, column: 12, scope: !7927)
!7932 = !DILocation(line: 274, column: 12, scope: !7928)
!7933 = !DILocation(line: 274, column: 3, scope: !7928)
!7934 = distinct !{!7934, !7933, !7935}
!7935 = !DILocation(line: 277, column: 3, scope: !7928)
!7936 = !DILocation(line: 281, column: 12, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7924, file: !7645, line: 280, column: 17)
!7938 = !DILocation(line: 281, column: 10, scope: !7937)
!7939 = !DILocation(line: 282, column: 8, scope: !7937)
!7940 = !DILocation(line: 283, column: 7, scope: !7937)
!7941 = !DILocation(line: 284, column: 5, scope: !7937)
!7942 = distinct !{!7942, !7925, !7943}
!7943 = !DILocation(line: 285, column: 3, scope: !7924)
!7944 = !DILocation(line: 288, column: 2, scope: !7909)
!7945 = distinct !DISubprogram(name: "memcpy", scope: !7645, file: !7645, line: 298, type: !7946, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7950)
!7946 = !DISubroutineType(types: !7947)
!7947 = !{!106, !7948, !7949, !185}
!7948 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7949 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7950 = !{!7951, !7952, !7953, !7954, !7955}
!7951 = !DILocalVariable(name: "d", arg: 1, scope: !7945, file: !7645, line: 298, type: !7948)
!7952 = !DILocalVariable(name: "s", arg: 2, scope: !7945, file: !7645, line: 298, type: !7949)
!7953 = !DILocalVariable(name: "n", arg: 3, scope: !7945, file: !7645, line: 298, type: !185)
!7954 = !DILocalVariable(name: "d_byte", scope: !7945, file: !7645, line: 302, type: !1121)
!7955 = !DILocalVariable(name: "s_byte", scope: !7945, file: !7645, line: 303, type: !2861)
!7956 = !DILocation(line: 0, scope: !7945)
!7957 = !DILocation(line: 337, column: 11, scope: !7945)
!7958 = !DILocation(line: 337, column: 2, scope: !7945)
!7959 = !DILocation(line: 338, column: 25, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7945, file: !7645, line: 337, column: 16)
!7961 = !DILocation(line: 338, column: 17, scope: !7960)
!7962 = !DILocation(line: 338, column: 11, scope: !7960)
!7963 = !DILocation(line: 338, column: 15, scope: !7960)
!7964 = !DILocation(line: 339, column: 4, scope: !7960)
!7965 = distinct !{!7965, !7958, !7966}
!7966 = !DILocation(line: 340, column: 2, scope: !7945)
!7967 = !DILocation(line: 342, column: 2, scope: !7945)
!7968 = distinct !DISubprogram(name: "memset", scope: !7645, file: !7645, line: 352, type: !7969, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7971)
!7969 = !DISubroutineType(types: !7970)
!7970 = !{!106, !106, !107, !185}
!7971 = !{!7972, !7973, !7974, !7975, !7976}
!7972 = !DILocalVariable(name: "buf", arg: 1, scope: !7968, file: !7645, line: 352, type: !106)
!7973 = !DILocalVariable(name: "c", arg: 2, scope: !7968, file: !7645, line: 352, type: !107)
!7974 = !DILocalVariable(name: "n", arg: 3, scope: !7968, file: !7645, line: 352, type: !185)
!7975 = !DILocalVariable(name: "d_byte", scope: !7968, file: !7645, line: 356, type: !1121)
!7976 = !DILocalVariable(name: "c_byte", scope: !7968, file: !7645, line: 357, type: !196)
!7977 = !DILocation(line: 0, scope: !7968)
!7978 = !DILocation(line: 357, column: 25, scope: !7968)
!7979 = !DILocation(line: 389, column: 11, scope: !7968)
!7980 = !DILocation(line: 389, column: 2, scope: !7968)
!7981 = !DILocation(line: 390, column: 11, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7968, file: !7645, line: 389, column: 16)
!7983 = !DILocation(line: 390, column: 15, scope: !7982)
!7984 = !DILocation(line: 391, column: 4, scope: !7982)
!7985 = distinct !{!7985, !7980, !7986}
!7986 = !DILocation(line: 392, column: 2, scope: !7968)
!7987 = !DILocation(line: 394, column: 2, scope: !7968)
!7988 = distinct !DISubprogram(name: "memchr", scope: !7645, file: !7645, line: 404, type: !7989, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7991)
!7989 = !DISubroutineType(types: !7990)
!7990 = !{!106, !13, !107, !185}
!7991 = !{!7992, !7993, !7994, !7995}
!7992 = !DILocalVariable(name: "s", arg: 1, scope: !7988, file: !7645, line: 404, type: !13)
!7993 = !DILocalVariable(name: "c", arg: 2, scope: !7988, file: !7645, line: 404, type: !107)
!7994 = !DILocalVariable(name: "n", arg: 3, scope: !7988, file: !7645, line: 404, type: !185)
!7995 = !DILocalVariable(name: "p", scope: !7996, file: !7645, line: 407, type: !2861)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !7645, line: 406, column: 14)
!7997 = distinct !DILexicalBlock(scope: !7988, file: !7645, line: 406, column: 6)
!7998 = !DILocation(line: 0, scope: !7988)
!7999 = !DILocation(line: 406, column: 8, scope: !7997)
!8000 = !DILocation(line: 406, column: 6, scope: !7988)
!8001 = !DILocation(line: 409, column: 3, scope: !7996)
!8002 = !DILocation(line: 0, scope: !7996)
!8003 = !DILocation(line: 410, column: 8, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !8005, file: !7645, line: 410, column: 8)
!8005 = distinct !DILexicalBlock(scope: !7996, file: !7645, line: 409, column: 6)
!8006 = !DILocation(line: 410, column: 13, scope: !8004)
!8007 = !DILocation(line: 410, column: 8, scope: !8005)
!8008 = distinct !{!8008, !8001, !8009}
!8009 = !DILocation(line: 414, column: 20, scope: !7996)
!8010 = !DILocation(line: 417, column: 2, scope: !7988)
!8011 = !DILocation(line: 418, column: 1, scope: !7988)
!8012 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !501, file: !501, line: 23, type: !4123, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8013)
!8013 = !{!8014}
!8014 = !DILocalVariable(name: "hook", arg: 1, scope: !8012, file: !501, line: 23, type: !213)
!8015 = !DILocation(line: 0, scope: !8012)
!8016 = !DILocation(line: 25, column: 15, scope: !8012)
!8017 = !DILocation(line: 26, column: 1, scope: !8012)
!8018 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !501, file: !501, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8019)
!8019 = !{!8020}
!8020 = !DILocalVariable(name: "c", arg: 1, scope: !8018, file: !501, line: 14, type: !107)
!8021 = !DILocation(line: 0, scope: !8018)
!8022 = !DILocation(line: 18, column: 2, scope: !8018)
!8023 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !501, file: !501, line: 28, type: !8024, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8026)
!8024 = !DISubroutineType(types: !8025)
!8025 = !{!107, !107, !497}
!8026 = !{!8027, !8028}
!8027 = !DILocalVariable(name: "c", arg: 1, scope: !8023, file: !501, line: 28, type: !107)
!8028 = !DILocalVariable(name: "stream", arg: 2, scope: !8023, file: !501, line: 28, type: !497)
!8029 = !DILocation(line: 0, scope: !8023)
!8030 = !DILocation(line: 30, column: 27, scope: !8023)
!8031 = !DILocation(line: 30, column: 50, scope: !8023)
!8032 = !DILocation(line: 30, column: 9, scope: !8023)
!8033 = !DILocation(line: 30, column: 2, scope: !8023)
!8034 = distinct !DISubprogram(name: "fputc", scope: !501, file: !501, line: 41, type: !8024, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8035)
!8035 = !{!8036, !8037}
!8036 = !DILocalVariable(name: "c", arg: 1, scope: !8034, file: !501, line: 41, type: !107)
!8037 = !DILocalVariable(name: "stream", arg: 2, scope: !8034, file: !501, line: 41, type: !497)
!8038 = !DILocation(line: 0, scope: !8034)
!8039 = !DILocation(line: 43, column: 9, scope: !8034)
!8040 = !DILocation(line: 43, column: 2, scope: !8034)
!8041 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8042, file: !8042, line: 72, type: !8024, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8043)
!8042 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!8043 = !{!8044, !8045}
!8044 = !DILocalVariable(name: "c", arg: 1, scope: !8041, file: !8042, line: 72, type: !107)
!8045 = !DILocalVariable(name: "stream", arg: 2, scope: !8041, file: !8042, line: 72, type: !497)
!8046 = !DILocation(line: 0, scope: !8041)
!8047 = !DILocation(line: 81, column: 2, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8041, file: !8042, line: 81, column: 2)
!8049 = !{i64 2154912670}
!8050 = !DILocation(line: 82, column: 9, scope: !8041)
!8051 = !DILocation(line: 82, column: 2, scope: !8041)
!8052 = distinct !DISubprogram(name: "fputs", scope: !501, file: !501, line: 46, type: !8053, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8056)
!8053 = !DISubroutineType(types: !8054)
!8054 = !{!107, !7649, !8055}
!8055 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !497)
!8056 = !{!8057, !8058, !8059, !8060}
!8057 = !DILocalVariable(name: "s", arg: 1, scope: !8052, file: !501, line: 46, type: !7649)
!8058 = !DILocalVariable(name: "stream", arg: 2, scope: !8052, file: !501, line: 46, type: !8055)
!8059 = !DILocalVariable(name: "len", scope: !8052, file: !501, line: 48, type: !107)
!8060 = !DILocalVariable(name: "ret", scope: !8052, file: !501, line: 49, type: !107)
!8061 = !DILocation(line: 0, scope: !8052)
!8062 = !DILocation(line: 48, column: 12, scope: !8052)
!8063 = !DILocation(line: 51, column: 8, scope: !8052)
!8064 = !DILocation(line: 53, column: 13, scope: !8052)
!8065 = !DILocation(line: 53, column: 9, scope: !8052)
!8066 = !DILocation(line: 53, column: 2, scope: !8052)
!8067 = distinct !DISubprogram(name: "fwrite", scope: !501, file: !501, line: 99, type: !8068, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8070)
!8068 = !DISubroutineType(types: !8069)
!8069 = !{!185, !7949, !185, !185, !8055}
!8070 = !{!8071, !8072, !8073, !8074}
!8071 = !DILocalVariable(name: "ptr", arg: 1, scope: !8067, file: !501, line: 99, type: !7949)
!8072 = !DILocalVariable(name: "size", arg: 2, scope: !8067, file: !501, line: 99, type: !185)
!8073 = !DILocalVariable(name: "nitems", arg: 3, scope: !8067, file: !501, line: 99, type: !185)
!8074 = !DILocalVariable(name: "stream", arg: 4, scope: !8067, file: !501, line: 100, type: !8055)
!8075 = !DILocation(line: 0, scope: !8067)
!8076 = !DILocation(line: 102, column: 9, scope: !8067)
!8077 = !DILocation(line: 102, column: 2, scope: !8067)
!8078 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8042, file: !8042, line: 96, type: !8068, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8079)
!8079 = !{!8080, !8081, !8082, !8083}
!8080 = !DILocalVariable(name: "ptr", arg: 1, scope: !8078, file: !8042, line: 96, type: !7949)
!8081 = !DILocalVariable(name: "size", arg: 2, scope: !8078, file: !8042, line: 96, type: !185)
!8082 = !DILocalVariable(name: "nitems", arg: 3, scope: !8078, file: !8042, line: 96, type: !185)
!8083 = !DILocalVariable(name: "stream", arg: 4, scope: !8078, file: !8042, line: 96, type: !8055)
!8084 = !DILocation(line: 0, scope: !8078)
!8085 = !DILocation(line: 107, column: 2, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8078, file: !8042, line: 107, column: 2)
!8087 = !{i64 2154912774}
!8088 = !DILocation(line: 108, column: 9, scope: !8078)
!8089 = !DILocation(line: 108, column: 2, scope: !8078)
!8090 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !501, file: !501, line: 56, type: !8068, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8091)
!8091 = !{!8092, !8093, !8094, !8095, !8096, !8097, !8098, !8099}
!8092 = !DILocalVariable(name: "ptr", arg: 1, scope: !8090, file: !501, line: 56, type: !7949)
!8093 = !DILocalVariable(name: "size", arg: 2, scope: !8090, file: !501, line: 56, type: !185)
!8094 = !DILocalVariable(name: "nitems", arg: 3, scope: !8090, file: !501, line: 57, type: !185)
!8095 = !DILocalVariable(name: "stream", arg: 4, scope: !8090, file: !501, line: 57, type: !8055)
!8096 = !DILocalVariable(name: "i", scope: !8090, file: !501, line: 59, type: !185)
!8097 = !DILocalVariable(name: "j", scope: !8090, file: !501, line: 60, type: !185)
!8098 = !DILocalVariable(name: "p", scope: !8090, file: !501, line: 61, type: !2861)
!8099 = !DILabel(scope: !8090, name: "done", file: !501, line: 82)
!8100 = !DILocation(line: 0, scope: !8090)
!8101 = !DILocation(line: 63, column: 14, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8090, file: !501, line: 63, column: 6)
!8103 = !DILocation(line: 63, column: 24, scope: !8102)
!8104 = !DILocation(line: 72, column: 3, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8090, file: !501, line: 70, column: 5)
!8106 = !DILocation(line: 0, scope: !8105)
!8107 = !DILocation(line: 73, column: 8, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8109, file: !501, line: 73, column: 8)
!8109 = distinct !DILexicalBlock(scope: !8105, file: !501, line: 72, column: 6)
!8110 = !DILocation(line: 73, column: 29, scope: !8108)
!8111 = !DILocation(line: 73, column: 27, scope: !8108)
!8112 = !DILocation(line: 73, column: 21, scope: !8108)
!8113 = !DILocation(line: 73, column: 33, scope: !8108)
!8114 = !DILocation(line: 73, column: 8, scope: !8109)
!8115 = !DILocation(line: 76, column: 5, scope: !8109)
!8116 = !DILocation(line: 77, column: 14, scope: !8105)
!8117 = !DILocation(line: 77, column: 3, scope: !8109)
!8118 = distinct !{!8118, !8104, !8119}
!8119 = !DILocation(line: 77, column: 17, scope: !8105)
!8120 = !DILocation(line: 79, column: 4, scope: !8105)
!8121 = !DILocation(line: 80, column: 13, scope: !8090)
!8122 = !DILocation(line: 80, column: 2, scope: !8105)
!8123 = distinct !{!8123, !8124, !8125}
!8124 = !DILocation(line: 70, column: 2, scope: !8090)
!8125 = !DILocation(line: 80, column: 16, scope: !8090)
!8126 = !DILocation(line: 82, column: 1, scope: !8090)
!8127 = !DILocation(line: 83, column: 17, scope: !8090)
!8128 = !DILocation(line: 83, column: 2, scope: !8090)
!8129 = !DILocation(line: 84, column: 1, scope: !8090)
!8130 = distinct !DISubprogram(name: "puts", scope: !501, file: !501, line: 106, type: !8131, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8133)
!8131 = !DISubroutineType(types: !8132)
!8132 = !{!107, !118}
!8133 = !{!8134}
!8134 = !DILocalVariable(name: "s", arg: 1, scope: !8130, file: !501, line: 106, type: !118)
!8135 = !DILocation(line: 0, scope: !8130)
!8136 = !DILocation(line: 108, column: 6, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8130, file: !501, line: 108, column: 6)
!8138 = !DILocation(line: 108, column: 23, scope: !8137)
!8139 = !DILocation(line: 108, column: 6, scope: !8130)
!8140 = !DILocation(line: 112, column: 9, scope: !8130)
!8141 = !DILocation(line: 112, column: 29, scope: !8130)
!8142 = !DILocation(line: 112, column: 2, scope: !8130)
!8143 = !DILocation(line: 113, column: 1, scope: !8130)
!8144 = distinct !DISubprogram(name: "end_report", scope: !533, file: !533, line: 67, type: !3089, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8145 = !DILocation(line: 69, column: 6, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8144, file: !533, line: 69, column: 6)
!8147 = !DILocation(line: 0, scope: !8146)
!8148 = !DILocation(line: 74, column: 1, scope: !8144)
!8149 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !533, file: !533, line: 159, type: !3089, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8150 = !DILocation(line: 183, column: 1, scope: !8149)
!8151 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !533, file: !533, line: 185, type: !3089, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8152 = !DILocation(line: 196, column: 1, scope: !8151)
!8153 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !533, file: !533, line: 295, type: !3089, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8154 = !DILocation(line: 298, column: 34, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8156, file: !533, line: 297, column: 47)
!8156 = distinct !DILexicalBlock(scope: !8153, file: !533, line: 297, column: 6)
!8157 = !DILocation(line: 300, column: 2, scope: !8153)
!8158 = !DILocation(line: 301, column: 1, scope: !8153)
!8159 = distinct !DISubprogram(name: "ztest_test_skip", scope: !533, file: !533, line: 476, type: !3089, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8160 = !DILocation(line: 478, column: 10, scope: !8159)
!8161 = !DILocation(line: 478, column: 2, scope: !8159)
!8162 = !DILocation(line: 480, column: 15, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8159, file: !533, line: 478, column: 17)
!8164 = !DILocation(line: 481, column: 3, scope: !8163)
!8165 = !DILocation(line: 484, column: 15, scope: !8163)
!8166 = !DILocation(line: 485, column: 3, scope: !8163)
!8167 = !DILocation(line: 486, column: 3, scope: !8163)
!8168 = !DILocation(line: 489, column: 9, scope: !8163)
!8169 = !DILocation(line: 488, column: 3, scope: !8163)
!8170 = !DILocation(line: 490, column: 15, scope: !8163)
!8171 = !DILocation(line: 491, column: 3, scope: !8163)
!8172 = !DILocation(line: 493, column: 1, scope: !8159)
!8173 = distinct !DISubprogram(name: "test_finalize", scope: !533, file: !533, line: 432, type: !3089, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8174 = !DILocation(line: 435, column: 3, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8176, file: !533, line: 434, column: 41)
!8176 = distinct !DILexicalBlock(scope: !8173, file: !533, line: 434, column: 6)
!8177 = !DILocation(line: 436, column: 18, scope: !8175)
!8178 = !DILocation(line: 436, column: 3, scope: !8175)
!8179 = !DILocation(line: 438, column: 1, scope: !8173)
!8180 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !533, file: !533, line: 274, type: !8181, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8183)
!8181 = !DISubroutineType(types: !8182)
!8182 = !{!118, !532}
!8183 = !{!8184}
!8184 = !DILocalVariable(name: "phase", arg: 1, scope: !8180, file: !533, line: 274, type: !532)
!8185 = !DILocation(line: 0, scope: !8180)
!8186 = !DILocation(line: 276, column: 2, scope: !8180)
!8187 = !DILocation(line: 0, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8180, file: !533, line: 276, column: 17)
!8189 = !DILocation(line: 292, column: 1, scope: !8180)
!8190 = distinct !DISubprogram(name: "k_thread_abort", scope: !4417, file: !4417, line: 188, type: !8191, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8195)
!8191 = !DISubroutineType(types: !8192)
!8192 = !{null, !8193}
!8193 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !8194)
!8194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!8195 = !{!8196}
!8196 = !DILocalVariable(name: "thread", arg: 1, scope: !8190, file: !4417, line: 188, type: !8193)
!8197 = !DILocation(line: 0, scope: !8190)
!8198 = !DILocation(line: 197, column: 2, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8190, file: !4417, line: 197, column: 2)
!8200 = !{i64 2154874557}
!8201 = !DILocation(line: 198, column: 2, scope: !8190)
!8202 = !DILocation(line: 199, column: 1, scope: !8190)
!8203 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !8204, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8204 = !DISubroutineType(types: !8205)
!8205 = !{!8193}
!8206 = !DILocation(line: 535, column: 9, scope: !8203)
!8207 = !DILocation(line: 535, column: 2, scope: !8203)
!8208 = distinct !DISubprogram(name: "z_current_get", scope: !4417, file: !4417, line: 173, type: !8204, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8209 = !DILocation(line: 180, column: 2, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8208, file: !4417, line: 180, column: 2)
!8211 = !{i64 2154874489}
!8212 = !DILocation(line: 181, column: 9, scope: !8208)
!8213 = !DILocation(line: 181, column: 2, scope: !8208)
!8214 = distinct !DISubprogram(name: "ztest_test_fail", scope: !533, file: !533, line: 440, type: !3089, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8215 = !DILocation(line: 442, column: 10, scope: !8214)
!8216 = !DILocation(line: 442, column: 2, scope: !8214)
!8217 = !DILocation(line: 444, column: 15, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8214, file: !533, line: 442, column: 17)
!8219 = !DILocation(line: 445, column: 3, scope: !8218)
!8220 = !DILocation(line: 448, column: 15, scope: !8218)
!8221 = !DILocation(line: 449, column: 3, scope: !8218)
!8222 = !DILocation(line: 450, column: 3, scope: !8218)
!8223 = !DILocation(line: 453, column: 9, scope: !8218)
!8224 = !DILocation(line: 452, column: 3, scope: !8218)
!8225 = !DILocation(line: 454, column: 15, scope: !8218)
!8226 = !DILocation(line: 455, column: 3, scope: !8218)
!8227 = !DILocation(line: 457, column: 1, scope: !8214)
!8228 = distinct !DISubprogram(name: "ztest_test_pass", scope: !533, file: !533, line: 459, type: !3089, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8229 = !DILocation(line: 461, column: 10, scope: !8228)
!8230 = !DILocation(line: 461, column: 2, scope: !8228)
!8231 = !DILocation(line: 463, column: 15, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8228, file: !533, line: 461, column: 17)
!8233 = !DILocation(line: 465, column: 3, scope: !8232)
!8234 = !DILocation(line: 468, column: 9, scope: !8232)
!8235 = !DILocation(line: 467, column: 3, scope: !8232)
!8236 = !DILocation(line: 469, column: 15, scope: !8232)
!8237 = !DILocation(line: 470, column: 7, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8232, file: !533, line: 470, column: 7)
!8239 = !DILocation(line: 470, column: 13, scope: !8238)
!8240 = !DILocation(line: 470, column: 7, scope: !8232)
!8241 = !DILocation(line: 0, scope: !8232)
!8242 = !DILocation(line: 474, column: 1, scope: !8228)
!8243 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !533, file: !533, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8244)
!8244 = !{!8245}
!8245 = !DILocalVariable(name: "data", arg: 1, scope: !8243, file: !533, line: 495, type: !106)
!8246 = !DILocation(line: 0, scope: !8243)
!8247 = !DILocation(line: 498, column: 2, scope: !8243)
!8248 = !DILocation(line: 499, column: 1, scope: !8243)
!8249 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !8250, file: !8250, line: 24, type: !3089, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8250 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!8251 = !DILocation(line: 32, column: 2, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8249, file: !8250, line: 32, column: 2)
!8253 = !{i64 2154996860}
!8254 = !DILocation(line: 34, column: 1, scope: !8249)
!8255 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !533, file: !533, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8256)
!8256 = !{!8257}
!8257 = !DILocalVariable(name: "data", arg: 1, scope: !8255, file: !533, line: 501, type: !106)
!8258 = !DILocation(line: 0, scope: !8255)
!8259 = !DILocation(line: 504, column: 2, scope: !8255)
!8260 = !DILocation(line: 505, column: 1, scope: !8255)
!8261 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !8250, file: !8250, line: 47, type: !3089, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8262 = !DILocation(line: 55, column: 2, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8261, file: !8250, line: 55, column: 2)
!8264 = !{i64 2154996928}
!8265 = !DILocation(line: 57, column: 1, scope: !8261)
!8266 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !533, file: !533, line: 617, type: !8267, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8286)
!8267 = !DISubroutineType(types: !8268)
!8268 = !{!8269, !118, !8269}
!8269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8270, size: 32)
!8270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !8271)
!8271 = !{!8272, !8273, !8274, !8275, !8276}
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8270, file: !114, line: 98, baseType: !118, size: 32)
!8273 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8270, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8270, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !8270, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8270, file: !114, line: 104, baseType: !8277, size: 32, offset: 128)
!8277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8278)
!8278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8279, size: 32)
!8279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !8280)
!8280 = !{!8281, !8282, !8283, !8284, !8285}
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8279, file: !114, line: 125, baseType: !152, size: 32)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8279, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8279, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !8279, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !8279, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!8286 = !{!8287, !8288, !8289}
!8287 = !DILocalVariable(name: "suite", arg: 1, scope: !8266, file: !533, line: 617, type: !118)
!8288 = !DILocalVariable(name: "prev", arg: 2, scope: !8266, file: !533, line: 617, type: !8269)
!8289 = !DILocalVariable(name: "test", scope: !8266, file: !533, line: 619, type: !8269)
!8290 = !DILocation(line: 0, scope: !8266)
!8291 = !DILocation(line: 619, column: 39, scope: !8266)
!8292 = !DILocation(line: 619, column: 33, scope: !8266)
!8293 = !DILocation(line: 621, column: 14, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8295, file: !533, line: 621, column: 2)
!8295 = distinct !DILexicalBlock(scope: !8266, file: !533, line: 621, column: 2)
!8296 = !DILocation(line: 621, column: 2, scope: !8295)
!8297 = !DILocation(line: 622, column: 27, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8299, file: !533, line: 622, column: 7)
!8299 = distinct !DILexicalBlock(scope: !8294, file: !533, line: 621, column: 51)
!8300 = !DILocation(line: 622, column: 7, scope: !8298)
!8301 = !DILocation(line: 622, column: 44, scope: !8298)
!8302 = !DILocation(line: 622, column: 7, scope: !8299)
!8303 = !DILocation(line: 621, column: 43, scope: !8294)
!8304 = distinct !{!8304, !8296, !8305}
!8305 = !DILocation(line: 625, column: 2, scope: !8295)
!8306 = !DILocation(line: 627, column: 1, scope: !8266)
!8307 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !533, file: !533, line: 764, type: !8131, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8308)
!8308 = !{!8309}
!8309 = !DILocalVariable(name: "name", arg: 1, scope: !8307, file: !533, line: 764, type: !118)
!8310 = !DILocation(line: 0, scope: !8307)
!8311 = !DILocation(line: 766, column: 36, scope: !8307)
!8312 = !DILocation(line: 766, column: 9, scope: !8307)
!8313 = !DILocation(line: 766, column: 2, scope: !8307)
!8314 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !533, file: !533, line: 604, type: !8315, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8334)
!8315 = !DISubroutineType(types: !8316)
!8316 = !{!8317, !118}
!8317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8318, size: 32)
!8318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !8319)
!8319 = !{!8320, !8321, !8322, !8323, !8324, !8325, !8326}
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8318, file: !114, line: 179, baseType: !117, size: 32)
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8318, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !8318, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !8318, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !8318, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !8318, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8318, file: !114, line: 197, baseType: !8327, size: 32, offset: 192)
!8327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8328)
!8328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8329, size: 32)
!8329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !8330)
!8330 = !{!8331, !8332, !8333}
!8331 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8329, file: !114, line: 116, baseType: !152, size: 32)
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8329, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8329, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!8334 = !{!8335, !8336}
!8335 = !DILocalVariable(name: "name", arg: 1, scope: !8314, file: !533, line: 604, type: !118)
!8336 = !DILocalVariable(name: "node", scope: !8314, file: !533, line: 606, type: !8317)
!8337 = !DILocation(line: 0, scope: !8314)
!8338 = !DILocation(line: 608, column: 2, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8314, file: !533, line: 608, column: 2)
!8340 = !DILocation(line: 609, column: 26, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !533, line: 609, column: 7)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !533, line: 608, column: 87)
!8343 = distinct !DILexicalBlock(scope: !8339, file: !533, line: 608, column: 2)
!8344 = !DILocation(line: 609, column: 7, scope: !8341)
!8345 = !DILocation(line: 609, column: 32, scope: !8341)
!8346 = !DILocation(line: 609, column: 7, scope: !8342)
!8347 = !DILocation(line: 608, column: 79, scope: !8343)
!8348 = !DILocation(line: 608, column: 49, scope: !8343)
!8349 = distinct !{!8349, !8338, !8350}
!8350 = !DILocation(line: 612, column: 2, scope: !8339)
!8351 = !DILocation(line: 615, column: 1, scope: !8314)
!8352 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !533, file: !533, line: 652, type: !8353, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8355)
!8353 = !DISubroutineType(types: !8354)
!8354 = !{!107, !8317}
!8355 = !{!8356, !8357, !8358, !8359, !8360, !8361}
!8356 = !DILocalVariable(name: "suite", arg: 1, scope: !8352, file: !533, line: 652, type: !8317)
!8357 = !DILocalVariable(name: "test", scope: !8352, file: !533, line: 654, type: !8269)
!8358 = !DILocalVariable(name: "data", scope: !8352, file: !533, line: 655, type: !106)
!8359 = !DILocalVariable(name: "fail", scope: !8352, file: !533, line: 656, type: !107)
!8360 = !DILocalVariable(name: "tc_result", scope: !8352, file: !533, line: 657, type: !107)
!8361 = !DILocalVariable(name: "i", scope: !8362, file: !533, line: 692, type: !107)
!8362 = distinct !DILexicalBlock(scope: !8352, file: !533, line: 692, column: 2)
!8363 = !DILocation(line: 0, scope: !8352)
!8364 = !DILocation(line: 663, column: 12, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8352, file: !533, line: 663, column: 6)
!8366 = !DILocation(line: 663, column: 6, scope: !8352)
!8367 = !DILocation(line: 664, column: 15, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8365, file: !533, line: 663, column: 21)
!8369 = !DILocation(line: 665, column: 3, scope: !8368)
!8370 = !DILocation(line: 679, column: 2, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8352, file: !533, line: 679, column: 2)
!8372 = !DILocation(line: 680, column: 33, scope: !8352)
!8373 = !DILocation(line: 681, column: 14, scope: !8352)
!8374 = !DILocation(line: 682, column: 8, scope: !8352)
!8375 = !DILocation(line: 688, column: 55, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8352, file: !533, line: 688, column: 6)
!8377 = !DILocation(line: 688, column: 61, scope: !8376)
!8378 = !DILocation(line: 688, column: 6, scope: !8352)
!8379 = !DILocation(line: 689, column: 10, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8376, file: !533, line: 688, column: 70)
!8381 = !DILocation(line: 690, column: 2, scope: !8380)
!8382 = !DILocation(line: 0, scope: !8362)
!8383 = !DILocation(line: 727, column: 3, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8385, file: !533, line: 692, column: 46)
!8385 = distinct !DILexicalBlock(scope: !8362, file: !533, line: 692, column: 2)
!8386 = !DILocation(line: 0, scope: !8384)
!8387 = !DILocation(line: 727, column: 48, scope: !8384)
!8388 = !DILocation(line: 727, column: 19, scope: !8384)
!8389 = !DILocation(line: 727, column: 61, scope: !8384)
!8390 = !DILocation(line: 728, column: 41, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8392, file: !533, line: 728, column: 8)
!8392 = distinct !DILexicalBlock(scope: !8384, file: !533, line: 727, column: 71)
!8393 = !DILocation(line: 728, column: 53, scope: !8391)
!8394 = !DILocation(line: 728, column: 8, scope: !8391)
!8395 = !DILocation(line: 728, column: 8, scope: !8392)
!8396 = !DILocation(line: 729, column: 11, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8391, file: !533, line: 728, column: 60)
!8398 = !DILocation(line: 729, column: 18, scope: !8397)
!8399 = !DILocation(line: 729, column: 27, scope: !8397)
!8400 = !DILocation(line: 730, column: 17, scope: !8397)
!8401 = !DILocation(line: 731, column: 9, scope: !8397)
!8402 = !DILocation(line: 732, column: 12, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8404, file: !533, line: 731, column: 31)
!8404 = distinct !DILexicalBlock(scope: !8397, file: !533, line: 731, column: 9)
!8405 = !DILocation(line: 732, column: 19, scope: !8403)
!8406 = !DILocation(line: 733, column: 5, scope: !8403)
!8407 = !DILocation(line: 734, column: 12, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8409, file: !533, line: 733, column: 38)
!8409 = distinct !DILexicalBlock(scope: !8404, file: !533, line: 733, column: 16)
!8410 = !DILocation(line: 734, column: 19, scope: !8408)
!8411 = !DILocation(line: 735, column: 5, scope: !8408)
!8412 = !DILocation(line: 736, column: 12, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !533, line: 735, column: 38)
!8414 = distinct !DILexicalBlock(scope: !8409, file: !533, line: 735, column: 16)
!8415 = !DILocation(line: 736, column: 19, scope: !8413)
!8416 = !DILocation(line: 737, column: 5, scope: !8413)
!8417 = !DILocation(line: 0, scope: !8404)
!8418 = !DILocation(line: 739, column: 19, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8397, file: !533, line: 739, column: 9)
!8420 = !DILocation(line: 739, column: 9, scope: !8397)
!8421 = !DILocation(line: 744, column: 31, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8392, file: !533, line: 744, column: 8)
!8423 = !DILocation(line: 744, column: 43, scope: !8422)
!8424 = !DILocation(line: 744, column: 8, scope: !8392)
!8425 = distinct !{!8425, !8383, !8426}
!8426 = !DILocation(line: 747, column: 3, scope: !8384)
!8427 = !DILocation(line: 750, column: 7, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8384, file: !533, line: 750, column: 7)
!8429 = !DILocation(line: 750, column: 38, scope: !8428)
!8430 = !DILocation(line: 751, column: 16, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8428, file: !533, line: 750, column: 52)
!8432 = !DILocation(line: 752, column: 3, scope: !8431)
!8433 = !DILocation(line: 755, column: 2, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8435, file: !533, line: 755, column: 2)
!8435 = distinct !DILexicalBlock(scope: !8352, file: !533, line: 755, column: 2)
!8436 = !DILocation(line: 0, scope: !8434)
!8437 = !DILocation(line: 756, column: 8, scope: !8352)
!8438 = !DILocation(line: 757, column: 13, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8352, file: !533, line: 757, column: 6)
!8440 = !DILocation(line: 757, column: 22, scope: !8439)
!8441 = !DILocation(line: 757, column: 6, scope: !8352)
!8442 = !DILocation(line: 758, column: 3, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8439, file: !533, line: 757, column: 31)
!8444 = !DILocation(line: 759, column: 2, scope: !8443)
!8445 = !DILocation(line: 762, column: 1, scope: !8352)
!8446 = distinct !DISubprogram(name: "run_test", scope: !533, file: !533, line: 521, type: !8447, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8449)
!8447 = !DISubroutineType(types: !8448)
!8448 = !{!107, !8317, !8269, !106}
!8449 = !{!8450, !8451, !8452, !8453}
!8450 = !DILocalVariable(name: "suite", arg: 1, scope: !8446, file: !533, line: 521, type: !8317)
!8451 = !DILocalVariable(name: "test", arg: 2, scope: !8446, file: !533, line: 521, type: !8269)
!8452 = !DILocalVariable(name: "data", arg: 3, scope: !8446, file: !533, line: 521, type: !106)
!8453 = !DILocalVariable(name: "ret", scope: !8446, file: !533, line: 523, type: !107)
!8454 = !DILocation(line: 0, scope: !8446)
!8455 = !DILocation(line: 528, column: 2, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8446, file: !533, line: 528, column: 2)
!8457 = !DILocation(line: 530, column: 8, scope: !8446)
!8458 = !DILocation(line: 536, column: 3, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8460, file: !533, line: 535, column: 41)
!8460 = distinct !DILexicalBlock(scope: !8446, file: !533, line: 535, column: 6)
!8461 = !DILocation(line: 539, column: 32, scope: !8459)
!8462 = !DILocation(line: 539, column: 39, scope: !8459)
!8463 = !DILocation(line: 541, column: 11, scope: !8459)
!8464 = !DILocation(line: 541, column: 26, scope: !8459)
!8465 = !DILocation(line: 537, column: 3, scope: !8459)
!8466 = !DILocation(line: 543, column: 3, scope: !8459)
!8467 = !DILocation(line: 544, column: 13, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8459, file: !533, line: 544, column: 7)
!8469 = !DILocation(line: 544, column: 18, scope: !8468)
!8470 = !DILocation(line: 544, column: 7, scope: !8459)
!8471 = !DILocation(line: 545, column: 4, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8468, file: !533, line: 544, column: 27)
!8473 = !DILocation(line: 546, column: 3, scope: !8472)
!8474 = !DILocation(line: 548, column: 7, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8459, file: !533, line: 548, column: 7)
!8476 = !DILocation(line: 548, column: 46, scope: !8475)
!8477 = !DILocation(line: 550, column: 4, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8475, file: !533, line: 549, column: 47)
!8479 = !DILocation(line: 551, column: 4, scope: !8478)
!8480 = !DILocation(line: 552, column: 3, scope: !8478)
!8481 = !DILocation(line: 564, column: 8, scope: !8446)
!8482 = !DILocation(line: 565, column: 13, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8446, file: !533, line: 565, column: 6)
!8484 = !DILocation(line: 565, column: 19, scope: !8483)
!8485 = !DILocation(line: 565, column: 6, scope: !8446)
!8486 = !DILocation(line: 566, column: 3, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8483, file: !533, line: 565, column: 28)
!8488 = !DILocation(line: 567, column: 2, scope: !8487)
!8489 = !DILocation(line: 568, column: 2, scope: !8446)
!8490 = !DILocation(line: 570, column: 2, scope: !8446)
!8491 = !DILocation(line: 571, column: 6, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8446, file: !533, line: 571, column: 6)
!8493 = !DILocation(line: 571, column: 28, scope: !8492)
!8494 = !DILocation(line: 571, column: 35, scope: !8492)
!8495 = !DILocation(line: 571, column: 20, scope: !8492)
!8496 = !DILocation(line: 571, column: 6, scope: !8446)
!8497 = !DILocation(line: 572, column: 34, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8492, file: !533, line: 571, column: 54)
!8499 = !DILocation(line: 573, column: 2, scope: !8498)
!8500 = !DILocation(line: 575, column: 8, scope: !8446)
!8501 = !DILocation(line: 583, column: 6, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8446, file: !533, line: 583, column: 6)
!8503 = !DILocation(line: 583, column: 39, scope: !8502)
!8504 = !DILocation(line: 585, column: 46, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8502, file: !533, line: 585, column: 13)
!8506 = !DILocation(line: 590, column: 10, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8508, file: !533, line: 589, column: 54)
!8508 = distinct !DILexicalBlock(scope: !8446, file: !533, line: 589, column: 6)
!8509 = !DILocation(line: 593, column: 8, scope: !8446)
!8510 = !DILocation(line: 594, column: 2, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8446, file: !533, line: 594, column: 2)
!8512 = !DILocation(line: 595, column: 10, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8446, file: !533, line: 595, column: 6)
!8514 = !DILocation(line: 595, column: 21, scope: !8513)
!8515 = !DILocation(line: 595, column: 24, scope: !8513)
!8516 = !DILocation(line: 595, column: 6, scope: !8446)
!8517 = !DILocation(line: 596, column: 15, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8513, file: !533, line: 595, column: 56)
!8519 = !DILocation(line: 597, column: 2, scope: !8518)
!8520 = !DILocation(line: 599, column: 2, scope: !8446)
!8521 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !690, file: !690, line: 98, type: !3089, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8522 = !DILocation(line: 100, column: 18, scope: !8521)
!8523 = !DILocation(line: 100, column: 16, scope: !8521)
!8524 = !DILocation(line: 101, column: 1, scope: !8521)
!8525 = distinct !DISubprogram(name: "k_thread_create", scope: !4417, file: !4417, line: 24, type: !8526, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8534)
!8526 = !DISubroutineType(types: !8527)
!8527 = !{!8193, !8194, !8528, !185, !559, !106, !106, !106, !107, !152, !8530}
!8528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8529, size: 32)
!8529 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !576)
!8530 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !8531)
!8531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !8532)
!8532 = !{!8533}
!8533 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8531, file: !565, line: 66, baseType: !564, size: 64)
!8534 = !{!8535, !8536, !8537, !8538, !8539, !8540, !8541, !8542, !8543, !8544}
!8535 = !DILocalVariable(name: "new_thread", arg: 1, scope: !8525, file: !4417, line: 24, type: !8194)
!8536 = !DILocalVariable(name: "stack", arg: 2, scope: !8525, file: !4417, line: 24, type: !8528)
!8537 = !DILocalVariable(name: "stack_size", arg: 3, scope: !8525, file: !4417, line: 24, type: !185)
!8538 = !DILocalVariable(name: "entry", arg: 4, scope: !8525, file: !4417, line: 24, type: !559)
!8539 = !DILocalVariable(name: "p1", arg: 5, scope: !8525, file: !4417, line: 24, type: !106)
!8540 = !DILocalVariable(name: "p2", arg: 6, scope: !8525, file: !4417, line: 24, type: !106)
!8541 = !DILocalVariable(name: "p3", arg: 7, scope: !8525, file: !4417, line: 24, type: !106)
!8542 = !DILocalVariable(name: "prio", arg: 8, scope: !8525, file: !4417, line: 24, type: !107)
!8543 = !DILocalVariable(name: "options", arg: 9, scope: !8525, file: !4417, line: 24, type: !152)
!8544 = !DILocalVariable(name: "delay", arg: 10, scope: !8525, file: !4417, line: 24, type: !8530)
!8545 = !DILocation(line: 0, scope: !8525)
!8546 = !DILocation(line: 49, column: 2, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8525, file: !4417, line: 49, column: 2)
!8548 = !{i64 2154873945}
!8549 = !DILocation(line: 50, column: 9, scope: !8525)
!8550 = !DILocation(line: 50, column: 2, scope: !8525)
!8551 = distinct !DISubprogram(name: "k_object_access_grant", scope: !8552, file: !8552, line: 24, type: !8553, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8555)
!8552 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!8553 = !DISubroutineType(types: !8554)
!8554 = !{null, !13, !8194}
!8555 = !{!8556, !8557}
!8556 = !DILocalVariable(name: "object", arg: 1, scope: !8551, file: !8552, line: 24, type: !13)
!8557 = !DILocalVariable(name: "thread", arg: 2, scope: !8551, file: !8552, line: 24, type: !8194)
!8558 = !DILocation(line: 0, scope: !8551)
!8559 = !DILocation(line: 34, column: 2, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8551, file: !8552, line: 34, column: 2)
!8561 = !{i64 2154390365}
!8562 = !DILocation(line: 36, column: 1, scope: !8551)
!8563 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4417, file: !4417, line: 391, type: !8564, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8566)
!8564 = !DISubroutineType(types: !8565)
!8565 = !{!107, !8193, !118}
!8566 = !{!8567, !8568}
!8567 = !DILocalVariable(name: "thread", arg: 1, scope: !8563, file: !4417, line: 391, type: !8193)
!8568 = !DILocalVariable(name: "str", arg: 2, scope: !8563, file: !4417, line: 391, type: !118)
!8569 = !DILocation(line: 0, scope: !8563)
!8570 = !DILocation(line: 400, column: 2, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8563, file: !4417, line: 400, column: 2)
!8572 = !{i64 2154875373}
!8573 = !DILocation(line: 401, column: 9, scope: !8563)
!8574 = !DILocation(line: 401, column: 2, scope: !8563)
!8575 = distinct !DISubprogram(name: "k_thread_start", scope: !4417, file: !4417, line: 205, type: !8191, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8576)
!8576 = !{!8577}
!8577 = !DILocalVariable(name: "thread", arg: 1, scope: !8575, file: !4417, line: 205, type: !8193)
!8578 = !DILocation(line: 0, scope: !8575)
!8579 = !DILocation(line: 214, column: 2, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8575, file: !4417, line: 214, column: 2)
!8581 = !{i64 2154874625}
!8582 = !DILocation(line: 215, column: 2, scope: !8575)
!8583 = !DILocation(line: 216, column: 1, scope: !8575)
!8584 = distinct !DISubprogram(name: "k_thread_join", scope: !4417, file: !4417, line: 74, type: !8585, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8587)
!8585 = !DISubroutineType(types: !8586)
!8586 = !{!107, !8194, !8530}
!8587 = !{!8588, !8589}
!8588 = !DILocalVariable(name: "thread", arg: 1, scope: !8584, file: !4417, line: 74, type: !8194)
!8589 = !DILocalVariable(name: "timeout", arg: 2, scope: !8584, file: !4417, line: 74, type: !8530)
!8590 = !DILocation(line: 0, scope: !8584)
!8591 = !DILocation(line: 83, column: 2, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8584, file: !4417, line: 83, column: 2)
!8593 = !{i64 2154874081}
!8594 = !DILocation(line: 84, column: 9, scope: !8584)
!8595 = !DILocation(line: 84, column: 2, scope: !8584)
!8596 = distinct !DISubprogram(name: "run_test_rules", scope: !533, file: !533, line: 207, type: !8597, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8599)
!8597 = !DISubroutineType(types: !8598)
!8598 = !{null, !145, !8269, !106}
!8599 = !{!8600, !8601, !8602, !8603}
!8600 = !DILocalVariable(name: "is_before", arg: 1, scope: !8596, file: !533, line: 207, type: !145)
!8601 = !DILocalVariable(name: "test", arg: 2, scope: !8596, file: !533, line: 207, type: !8269)
!8602 = !DILocalVariable(name: "data", arg: 3, scope: !8596, file: !533, line: 207, type: !106)
!8603 = !DILocalVariable(name: "rule", scope: !8604, file: !533, line: 209, type: !8605)
!8604 = distinct !DILexicalBlock(scope: !8596, file: !533, line: 209, column: 2)
!8605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8606, size: 32)
!8606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !8607)
!8607 = !{!8608, !8615}
!8608 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !8606, file: !114, line: 438, baseType: !8609, size: 32)
!8609 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !8610)
!8610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8611, size: 32)
!8611 = !DISubroutineType(types: !8612)
!8612 = !{null, !8613, !106}
!8613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8614, size: 32)
!8614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8270)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !8606, file: !114, line: 439, baseType: !8609, size: 32, offset: 32)
!8616 = !DILocation(line: 0, scope: !8596)
!8617 = !DILocation(line: 0, scope: !8604)
!8618 = !DILocation(line: 209, column: 2, scope: !8604)
!8619 = !DILocation(line: 217, column: 1, scope: !8596)
!8620 = !DILocation(line: 211, column: 17, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8622, file: !533, line: 211, column: 7)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !533, line: 210, column: 49)
!8623 = distinct !DILexicalBlock(scope: !8604, file: !533, line: 209, column: 2)
!8624 = !DILocation(line: 211, column: 26, scope: !8621)
!8625 = !DILocation(line: 211, column: 20, scope: !8621)
!8626 = !DILocation(line: 211, column: 7, scope: !8622)
!8627 = !DILocation(line: 213, column: 34, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8621, file: !533, line: 213, column: 14)
!8629 = !DILocation(line: 213, column: 28, scope: !8628)
!8630 = !DILocation(line: 213, column: 14, scope: !8621)
!8631 = !DILocation(line: 0, scope: !8621)
!8632 = !DILocation(line: 210, column: 41, scope: !8623)
!8633 = !DILocation(line: 210, column: 12, scope: !8623)
!8634 = distinct !{!8634, !8618, !8635}
!8635 = !DILocation(line: 216, column: 2, scope: !8604)
!8636 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !690, file: !690, line: 103, type: !3089, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8637)
!8637 = !{!8638}
!8638 = !DILocalVariable(name: "spend_cycle", scope: !8636, file: !690, line: 105, type: !152)
!8639 = !DILocation(line: 105, column: 25, scope: !8636)
!8640 = !DILocation(line: 105, column: 44, scope: !8636)
!8641 = !DILocation(line: 105, column: 42, scope: !8636)
!8642 = !DILocation(line: 0, scope: !8636)
!8643 = !DILocation(line: 107, column: 18, scope: !8636)
!8644 = !DILocation(line: 107, column: 16, scope: !8636)
!8645 = !DILocation(line: 108, column: 1, scope: !8636)
!8646 = distinct !DISubprogram(name: "cleanup_test", scope: !533, file: !533, line: 76, type: !8647, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8649)
!8647 = !DISubroutineType(types: !8648)
!8648 = !{!107, !8269}
!8649 = !{!8650, !8651, !8652}
!8650 = !DILocalVariable(name: "test", arg: 1, scope: !8646, file: !533, line: 76, type: !8269)
!8651 = !DILocalVariable(name: "ret", scope: !8646, file: !533, line: 78, type: !107)
!8652 = !DILocalVariable(name: "mock_status", scope: !8646, file: !533, line: 79, type: !107)
!8653 = !DILocation(line: 0, scope: !8646)
!8654 = !DILocation(line: 89, column: 3, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8656, file: !533, line: 88, column: 41)
!8656 = distinct !DILexicalBlock(scope: !8646, file: !533, line: 88, column: 6)
!8657 = !DILocation(line: 103, column: 2, scope: !8646)
!8658 = distinct !DISubprogram(name: "get_final_test_result", scope: !533, file: !533, line: 236, type: !8659, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8661)
!8659 = !DISubroutineType(types: !8660)
!8660 = !{!107, !8613, !107}
!8661 = !{!8662, !8663, !8664, !8665}
!8662 = !DILocalVariable(name: "test", arg: 1, scope: !8658, file: !533, line: 236, type: !8613)
!8663 = !DILocalVariable(name: "ret", arg: 2, scope: !8658, file: !533, line: 236, type: !107)
!8664 = !DILocalVariable(name: "expected_result", scope: !8658, file: !533, line: 238, type: !554)
!8665 = !DILocalVariable(name: "expectation", scope: !8666, file: !533, line: 240, type: !8667)
!8666 = distinct !DILexicalBlock(scope: !8658, file: !533, line: 240, column: 2)
!8667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8668, size: 32)
!8668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8669)
!8669 = !{!8670, !8671, !8672}
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8668, file: !114, line: 48, baseType: !118, size: 32)
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8668, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8668, file: !114, line: 50, baseType: !554, size: 32, offset: 64)
!8673 = !DILocation(line: 0, scope: !8658)
!8674 = !DILocation(line: 0, scope: !8666)
!8675 = !DILocation(line: 240, column: 2, scope: !8666)
!8676 = !DILocation(line: 243, column: 27, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8678, file: !533, line: 243, column: 7)
!8678 = distinct !DILexicalBlock(scope: !8679, file: !533, line: 242, column: 75)
!8679 = distinct !DILexicalBlock(scope: !8666, file: !533, line: 240, column: 2)
!8680 = !DILocation(line: 243, column: 44, scope: !8677)
!8681 = !DILocation(line: 243, column: 7, scope: !8677)
!8682 = !DILocation(line: 243, column: 50, scope: !8677)
!8683 = !DILocation(line: 243, column: 55, scope: !8677)
!8684 = !DILocation(line: 244, column: 27, scope: !8677)
!8685 = !DILocation(line: 244, column: 50, scope: !8677)
!8686 = !DILocation(line: 244, column: 7, scope: !8677)
!8687 = !DILocation(line: 244, column: 67, scope: !8677)
!8688 = !DILocation(line: 243, column: 7, scope: !8678)
!8689 = !DILocation(line: 242, column: 60, scope: !8679)
!8690 = !DILocation(line: 242, column: 19, scope: !8679)
!8691 = distinct !{!8691, !8675, !8692}
!8692 = !DILocation(line: 248, column: 2, scope: !8666)
!8693 = !DILocation(line: 245, column: 35, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8677, file: !533, line: 244, column: 73)
!8695 = !DILocation(line: 250, column: 6, scope: !8658)
!8696 = !DILocation(line: 255, column: 15, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8698, file: !533, line: 250, column: 53)
!8698 = distinct !DILexicalBlock(scope: !8658, file: !533, line: 250, column: 6)
!8699 = !DILocation(line: 255, column: 10, scope: !8697)
!8700 = !DILocation(line: 255, column: 3, scope: !8697)
!8701 = !DILocation(line: 262, column: 15, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8703, file: !533, line: 257, column: 53)
!8703 = distinct !DILexicalBlock(scope: !8658, file: !533, line: 257, column: 6)
!8704 = !DILocation(line: 262, column: 10, scope: !8702)
!8705 = !DILocation(line: 262, column: 3, scope: !8702)
!8706 = !DILocation(line: 266, column: 1, scope: !8658)
!8707 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !690, file: !690, line: 81, type: !8708, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8710)
!8708 = !DISubroutineType(types: !8709)
!8709 = !{!118, !107}
!8710 = !{!8711}
!8711 = !DILocalVariable(name: "result", arg: 1, scope: !8707, file: !690, line: 81, type: !107)
!8712 = !DILocation(line: 0, scope: !8707)
!8713 = !DILocation(line: 83, column: 2, scope: !8707)
!8714 = !DILocation(line: 0, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8707, file: !690, line: 83, column: 18)
!8716 = !DILocation(line: 93, column: 1, scope: !8707)
!8717 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6340, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8718 = !DILocation(line: 1677, column: 9, scope: !8717)
!8719 = !DILocation(line: 1677, column: 2, scope: !8717)
!8720 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8721, file: !8721, line: 809, type: !7540, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8722)
!8721 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8722 = !{!8723}
!8723 = !DILocalVariable(name: "t", arg: 1, scope: !8720, file: !8721, line: 809, type: !152)
!8724 = !DILocation(line: 0, scope: !8720)
!8725 = !DILocation(line: 812, column: 17, scope: !8720)
!8726 = !DILocalVariable(name: "t", arg: 1, scope: !8727, file: !8721, line: 102, type: !566)
!8727 = distinct !DISubprogram(name: "z_tmcvt", scope: !8721, file: !8721, line: 102, type: !8728, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8730)
!8728 = !DISubroutineType(types: !8729)
!8729 = !{!566, !566, !152, !152, !145, !145, !145, !145}
!8730 = !{!8726, !8731, !8732, !8733, !8734, !8735, !8736, !8737, !8738, !8739, !8740}
!8731 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8727, file: !8721, line: 102, type: !152)
!8732 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8727, file: !8721, line: 103, type: !152)
!8733 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8727, file: !8721, line: 103, type: !145)
!8734 = !DILocalVariable(name: "result32", arg: 5, scope: !8727, file: !8721, line: 104, type: !145)
!8735 = !DILocalVariable(name: "round_up", arg: 6, scope: !8727, file: !8721, line: 104, type: !145)
!8736 = !DILocalVariable(name: "round_off", arg: 7, scope: !8727, file: !8721, line: 105, type: !145)
!8737 = !DILocalVariable(name: "mul_ratio", scope: !8727, file: !8721, line: 107, type: !145)
!8738 = !DILocalVariable(name: "div_ratio", scope: !8727, file: !8721, line: 109, type: !145)
!8739 = !DILocalVariable(name: "off", scope: !8727, file: !8721, line: 116, type: !566)
!8740 = !DILocalVariable(name: "rdivisor", scope: !8741, file: !8721, line: 119, type: !152)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !8721, line: 118, column: 18)
!8742 = distinct !DILexicalBlock(scope: !8727, file: !8721, line: 118, column: 6)
!8743 = !DILocation(line: 0, scope: !8727, inlinedAt: !8744)
!8744 = distinct !DILocation(line: 812, column: 9, scope: !8720)
!8745 = !DILocation(line: 135, column: 5, scope: !8746, inlinedAt: !8744)
!8746 = distinct !DILexicalBlock(scope: !8747, file: !8721, line: 134, column: 17)
!8747 = distinct !DILexicalBlock(scope: !8727, file: !8721, line: 134, column: 6)
!8748 = !DILocation(line: 136, column: 16, scope: !8749, inlinedAt: !8744)
!8749 = distinct !DILexicalBlock(scope: !8746, file: !8721, line: 136, column: 7)
!8750 = !DILocation(line: 812, column: 9, scope: !8720)
!8751 = !DILocation(line: 812, column: 2, scope: !8720)
!8752 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8753, file: !8753, line: 24, type: !6340, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!8753 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8754 = !DILocation(line: 26, column: 9, scope: !8752)
!8755 = !DILocation(line: 26, column: 2, scope: !8752)
!8756 = distinct !DISubprogram(name: "test_cb", scope: !533, file: !533, line: 507, type: !562, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8757)
!8757 = !{!8758, !8759, !8760, !8761, !8762}
!8758 = !DILocalVariable(name: "a", arg: 1, scope: !8756, file: !533, line: 507, type: !106)
!8759 = !DILocalVariable(name: "b", arg: 2, scope: !8756, file: !533, line: 507, type: !106)
!8760 = !DILocalVariable(name: "c", arg: 3, scope: !8756, file: !533, line: 507, type: !106)
!8761 = !DILocalVariable(name: "suite", scope: !8756, file: !533, line: 509, type: !8317)
!8762 = !DILocalVariable(name: "test", scope: !8756, file: !533, line: 510, type: !8269)
!8763 = !DILocation(line: 0, scope: !8756)
!8764 = !DILocation(line: 510, column: 33, scope: !8756)
!8765 = !DILocation(line: 512, column: 14, scope: !8756)
!8766 = !DILocation(line: 513, column: 2, scope: !8756)
!8767 = !DILocation(line: 514, column: 13, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8756, file: !533, line: 514, column: 6)
!8769 = !DILocation(line: 514, column: 6, scope: !8768)
!8770 = !DILocation(line: 514, column: 6, scope: !8756)
!8771 = !DILocation(line: 515, column: 3, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8768, file: !533, line: 514, column: 21)
!8773 = !DILocation(line: 516, column: 2, scope: !8772)
!8774 = !DILocation(line: 517, column: 2, scope: !8756)
!8775 = !DILocation(line: 518, column: 14, scope: !8756)
!8776 = !DILocation(line: 519, column: 1, scope: !8756)
!8777 = distinct !DISubprogram(name: "run_test_functions", scope: !533, file: !533, line: 219, type: !8778, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8780)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{null, !8317, !8269, !106}
!8780 = !{!8781, !8782, !8783}
!8781 = !DILocalVariable(name: "suite", arg: 1, scope: !8777, file: !533, line: 219, type: !8317)
!8782 = !DILocalVariable(name: "test", arg: 2, scope: !8777, file: !533, line: 219, type: !8269)
!8783 = !DILocalVariable(name: "data", arg: 3, scope: !8777, file: !533, line: 220, type: !106)
!8784 = !DILocation(line: 0, scope: !8777)
!8785 = !DILocation(line: 222, column: 8, scope: !8777)
!8786 = !DILocation(line: 223, column: 8, scope: !8777)
!8787 = !DILocation(line: 223, column: 2, scope: !8777)
!8788 = !DILocation(line: 224, column: 1, scope: !8777)
!8789 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !533, file: !533, line: 929, type: !8790, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8792)
!8790 = !DISubroutineType(types: !8791)
!8791 = !{!107, !13}
!8792 = !{!8793, !8794, !8795}
!8793 = !DILocalVariable(name: "state", arg: 1, scope: !8789, file: !533, line: 929, type: !13)
!8794 = !DILocalVariable(name: "count", scope: !8789, file: !533, line: 931, type: !107)
!8795 = !DILocalVariable(name: "ptr", scope: !8796, file: !533, line: 954, type: !8317)
!8796 = distinct !DILexicalBlock(scope: !8789, file: !533, line: 954, column: 2)
!8797 = !DILocation(line: 0, scope: !8789)
!8798 = !DILocation(line: 933, column: 6, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8789, file: !533, line: 933, column: 6)
!8800 = !DILocation(line: 933, column: 18, scope: !8799)
!8801 = !DILocation(line: 933, column: 6, scope: !8789)
!8802 = !DILocation(line: 0, scope: !8796)
!8803 = !DILocation(line: 954, column: 2, scope: !8796)
!8804 = !DILocation(line: 956, column: 12, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8806, file: !533, line: 955, column: 48)
!8806 = distinct !DILexicalBlock(scope: !8796, file: !533, line: 954, column: 2)
!8807 = !DILocation(line: 956, column: 9, scope: !8805)
!8808 = !DILocation(line: 960, column: 7, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8805, file: !533, line: 960, column: 7)
!8810 = !DILocation(line: 960, column: 19, scope: !8809)
!8811 = !DILocation(line: 955, column: 41, scope: !8806)
!8812 = !DILocation(line: 960, column: 50, scope: !8809)
!8813 = distinct !{!8813, !8803, !8814}
!8814 = !DILocation(line: 964, column: 2, scope: !8796)
!8815 = !DILocation(line: 967, column: 2, scope: !8789)
!8816 = !DILocation(line: 969, column: 2, scope: !8789)
!8817 = !DILocation(line: 970, column: 1, scope: !8789)
!8818 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !533, file: !533, line: 907, type: !8819, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8821)
!8819 = !DISubroutineType(types: !8820)
!8820 = !{!107, !8317, !13}
!8821 = !{!8822, !8823, !8824, !8825, !8826, !8828}
!8822 = !DILocalVariable(name: "ptr", arg: 1, scope: !8818, file: !533, line: 907, type: !8317)
!8823 = !DILocalVariable(name: "state", arg: 2, scope: !8818, file: !533, line: 907, type: !13)
!8824 = !DILocalVariable(name: "stats", scope: !8818, file: !533, line: 909, type: !8328)
!8825 = !DILocalVariable(name: "count", scope: !8818, file: !533, line: 910, type: !107)
!8826 = !DILocalVariable(name: "i", scope: !8827, file: !533, line: 914, type: !107)
!8827 = distinct !DILexicalBlock(scope: !8818, file: !533, line: 914, column: 2)
!8828 = !DILocalVariable(name: "fail", scope: !8829, file: !533, line: 916, type: !107)
!8829 = distinct !DILexicalBlock(scope: !8830, file: !533, line: 915, column: 47)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !533, line: 915, column: 7)
!8831 = distinct !DILexicalBlock(scope: !8832, file: !533, line: 914, column: 47)
!8832 = distinct !DILexicalBlock(scope: !8827, file: !533, line: 914, column: 2)
!8833 = !DILocation(line: 0, scope: !8818)
!8834 = !DILocation(line: 909, column: 41, scope: !8818)
!8835 = !DILocation(line: 912, column: 2, scope: !8818)
!8836 = !DILocation(line: 0, scope: !8827)
!8837 = !DILocation(line: 915, column: 7, scope: !8830)
!8838 = !DILocation(line: 915, column: 7, scope: !8831)
!8839 = !DILocation(line: 916, column: 15, scope: !8829)
!8840 = !DILocation(line: 0, scope: !8829)
!8841 = !DILocation(line: 919, column: 20, scope: !8829)
!8842 = !DILocation(line: 920, column: 31, scope: !8829)
!8843 = !DILocation(line: 920, column: 25, scope: !8829)
!8844 = !DILocation(line: 921, column: 3, scope: !8829)
!8845 = !DILocation(line: 0, scope: !8830)
!8846 = !DILocation(line: 926, column: 2, scope: !8818)
!8847 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !533, file: !533, line: 886, type: !3089, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8848)
!8848 = !{!8849}
!8849 = !DILocalVariable(name: "ptr", scope: !8850, file: !533, line: 894, type: !8317)
!8850 = distinct !DILexicalBlock(scope: !8847, file: !533, line: 894, column: 2)
!8851 = !DILocation(line: 892, column: 2, scope: !8847)
!8852 = !DILocation(line: 0, scope: !8850)
!8853 = !DILocation(line: 894, column: 2, scope: !8850)
!8854 = !DILocation(line: 903, column: 2, scope: !8847)
!8855 = !DILocation(line: 905, column: 1, scope: !8847)
!8856 = !DILocation(line: 898, column: 3, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8858, file: !533, line: 895, column: 48)
!8858 = distinct !DILexicalBlock(scope: !8850, file: !533, line: 894, column: 2)
!8859 = !DILocation(line: 895, column: 41, scope: !8858)
!8860 = !DILocation(line: 895, column: 11, scope: !8858)
!8861 = distinct !{!8861, !8853, !8862}
!8862 = !DILocation(line: 902, column: 2, scope: !8850)
!8863 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !533, file: !533, line: 852, type: !8864, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8866)
!8864 = !DISubroutineType(types: !8865)
!8865 = !{null, !8317}
!8866 = !{!8867, !8868, !8869, !8870}
!8867 = !DILocalVariable(name: "suite", arg: 1, scope: !8863, file: !533, line: 852, type: !8317)
!8868 = !DILocalVariable(name: "test", scope: !8863, file: !533, line: 854, type: !8269)
!8869 = !DILocalVariable(name: "tc_result", scope: !8863, file: !533, line: 855, type: !107)
!8870 = !DILocalVariable(name: "flush_frequency", scope: !8863, file: !533, line: 856, type: !107)
!8871 = !DILocation(line: 0, scope: !8863)
!8872 = !DILocation(line: 858, column: 2, scope: !8863)
!8873 = !DILocation(line: 860, column: 47, scope: !8863)
!8874 = !DILocation(line: 860, column: 18, scope: !8863)
!8875 = !DILocation(line: 860, column: 60, scope: !8863)
!8876 = !DILocation(line: 860, column: 2, scope: !8863)
!8877 = !DILocation(line: 861, column: 13, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !533, line: 861, column: 7)
!8879 = distinct !DILexicalBlock(scope: !8863, file: !533, line: 860, column: 70)
!8880 = !DILocation(line: 861, column: 20, scope: !8878)
!8881 = !DILocation(line: 861, column: 47, scope: !8878)
!8882 = !DILocation(line: 861, column: 31, scope: !8878)
!8883 = !DILocation(line: 861, column: 7, scope: !8879)
!8884 = !DILocation(line: 863, column: 27, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8878, file: !533, line: 863, column: 14)
!8886 = !DILocation(line: 863, column: 38, scope: !8885)
!8887 = !DILocation(line: 0, scope: !8878)
!8888 = !DILocation(line: 869, column: 3, scope: !8879)
!8889 = distinct !{!8889, !8876, !8890}
!8890 = !DILocation(line: 880, column: 2, scope: !8863)
!8891 = !DILocation(line: 881, column: 2, scope: !8863)
!8892 = !DILocation(line: 883, column: 1, scope: !8863)
!8893 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !533, file: !533, line: 801, type: !8864, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8894)
!8894 = !{!8895, !8896, !8897, !8898, !8899, !8900, !8901, !8902, !8903, !8904, !8905, !8906, !8907, !8908}
!8895 = !DILocalVariable(name: "suite", arg: 1, scope: !8893, file: !533, line: 801, type: !8317)
!8896 = !DILocalVariable(name: "distinct_pass", scope: !8893, file: !533, line: 803, type: !107)
!8897 = !DILocalVariable(name: "distinct_fail", scope: !8893, file: !533, line: 803, type: !107)
!8898 = !DILocalVariable(name: "distinct_skip", scope: !8893, file: !533, line: 803, type: !107)
!8899 = !DILocalVariable(name: "distinct_total", scope: !8893, file: !533, line: 803, type: !107)
!8900 = !DILocalVariable(name: "effective_total", scope: !8893, file: !533, line: 804, type: !107)
!8901 = !DILocalVariable(name: "expanded_pass", scope: !8893, file: !533, line: 805, type: !107)
!8902 = !DILocalVariable(name: "expanded_passrate", scope: !8893, file: !533, line: 805, type: !107)
!8903 = !DILocalVariable(name: "passrate_major", scope: !8893, file: !533, line: 806, type: !107)
!8904 = !DILocalVariable(name: "passrate_minor", scope: !8893, file: !533, line: 806, type: !107)
!8905 = !DILocalVariable(name: "passrate_tail", scope: !8893, file: !533, line: 806, type: !107)
!8906 = !DILocalVariable(name: "suite_result", scope: !8893, file: !533, line: 807, type: !107)
!8907 = !DILocalVariable(name: "test", scope: !8893, file: !533, line: 809, type: !8269)
!8908 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8893, file: !533, line: 810, type: !32)
!8909 = !DILocation(line: 0, scope: !8893)
!8910 = !DILocation(line: 813, column: 47, scope: !8893)
!8911 = !DILocation(line: 813, column: 18, scope: !8893)
!8912 = !DILocation(line: 813, column: 60, scope: !8893)
!8913 = !DILocation(line: 813, column: 2, scope: !8893)
!8914 = !DILocation(line: 814, column: 17, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8893, file: !533, line: 813, column: 70)
!8916 = !DILocation(line: 815, column: 36, scope: !8915)
!8917 = !DILocation(line: 815, column: 43, scope: !8915)
!8918 = !DILocation(line: 815, column: 27, scope: !8915)
!8919 = !DILocation(line: 816, column: 20, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8915, file: !533, line: 816, column: 7)
!8921 = !DILocation(line: 816, column: 47, scope: !8920)
!8922 = !DILocation(line: 816, column: 31, scope: !8920)
!8923 = !DILocation(line: 816, column: 7, scope: !8915)
!8924 = !DILocation(line: 817, column: 17, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8920, file: !533, line: 816, column: 58)
!8926 = !DILocation(line: 818, column: 3, scope: !8925)
!8927 = !DILocation(line: 818, column: 27, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8920, file: !533, line: 818, column: 14)
!8929 = !DILocation(line: 818, column: 38, scope: !8928)
!8930 = !DILocation(line: 818, column: 14, scope: !8920)
!8931 = !DILocation(line: 819, column: 17, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8928, file: !533, line: 818, column: 65)
!8933 = !DILocation(line: 820, column: 3, scope: !8932)
!8934 = !DILocation(line: 821, column: 17, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8928, file: !533, line: 820, column: 10)
!8936 = distinct !{!8936, !8913, !8937}
!8937 = !DILocation(line: 823, column: 2, scope: !8893)
!8938 = !DILocation(line: 825, column: 20, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8893, file: !533, line: 825, column: 6)
!8940 = !DILocation(line: 825, column: 6, scope: !8893)
!8941 = !DILocation(line: 829, column: 33, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8939, file: !533, line: 828, column: 9)
!8943 = !DILocation(line: 829, column: 18, scope: !8942)
!8944 = !DILocation(line: 830, column: 36, scope: !8942)
!8945 = !DILocation(line: 831, column: 33, scope: !8942)
!8946 = !DILocation(line: 832, column: 37, scope: !8942)
!8947 = !DILocation(line: 833, column: 38, scope: !8942)
!8948 = !DILocation(line: 834, column: 56, scope: !8942)
!8949 = !DILocation(line: 834, column: 39, scope: !8942)
!8950 = !DILocation(line: 834, column: 64, scope: !8942)
!8951 = !DILocation(line: 835, column: 78, scope: !8942)
!8952 = !DILocation(line: 835, column: 61, scope: !8942)
!8953 = !DILocation(line: 836, column: 21, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8942, file: !533, line: 836, column: 7)
!8955 = !DILocation(line: 836, column: 7, scope: !8942)
!8956 = !DILocation(line: 0, scope: !8939)
!8957 = !DILocation(line: 841, column: 2, scope: !8893)
!8958 = !DILocation(line: 849, column: 1, scope: !8893)
!8959 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !533, file: !533, line: 773, type: !8864, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8960)
!8960 = !{!8961, !8962}
!8961 = !DILocalVariable(name: "suite", arg: 1, scope: !8959, file: !533, line: 773, type: !8317)
!8962 = !DILocalVariable(name: "test", scope: !8959, file: !533, line: 775, type: !8269)
!8963 = !DILocation(line: 0, scope: !8959)
!8964 = !DILocation(line: 777, column: 47, scope: !8959)
!8965 = !DILocation(line: 777, column: 18, scope: !8959)
!8966 = !DILocation(line: 777, column: 60, scope: !8959)
!8967 = !DILocation(line: 777, column: 2, scope: !8959)
!8968 = !DILocation(line: 778, column: 9, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8959, file: !533, line: 777, column: 70)
!8970 = !DILocation(line: 778, column: 16, scope: !8969)
!8971 = !DILocation(line: 778, column: 26, scope: !8969)
!8972 = !DILocation(line: 779, column: 9, scope: !8969)
!8973 = !DILocation(line: 779, column: 16, scope: !8969)
!8974 = !DILocation(line: 779, column: 27, scope: !8969)
!8975 = !DILocation(line: 780, column: 9, scope: !8969)
!8976 = !DILocation(line: 780, column: 16, scope: !8969)
!8977 = !DILocation(line: 780, column: 27, scope: !8969)
!8978 = !DILocation(line: 781, column: 9, scope: !8969)
!8979 = !DILocation(line: 781, column: 16, scope: !8969)
!8980 = !DILocation(line: 781, column: 27, scope: !8969)
!8981 = !DILocation(line: 782, column: 9, scope: !8969)
!8982 = !DILocation(line: 782, column: 16, scope: !8969)
!8983 = !DILocation(line: 782, column: 34, scope: !8969)
!8984 = distinct !{!8984, !8967, !8985}
!8985 = !DILocation(line: 783, column: 2, scope: !8959)
!8986 = !DILocation(line: 784, column: 1, scope: !8959)
!8987 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !533, file: !533, line: 972, type: !3089, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8988)
!8988 = !{!8989, !8990, !8991}
!8989 = !DILocalVariable(name: "all_tests_run", scope: !8987, file: !533, line: 974, type: !145)
!8990 = !DILocalVariable(name: "suite", scope: !8987, file: !533, line: 975, type: !8317)
!8991 = !DILocalVariable(name: "test", scope: !8987, file: !533, line: 976, type: !8269)
!8992 = !DILocation(line: 0, scope: !8987)
!8993 = !DILocation(line: 979, column: 3, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8995, file: !533, line: 979, column: 3)
!8995 = distinct !DILexicalBlock(scope: !8996, file: !533, line: 978, column: 47)
!8996 = distinct !DILexicalBlock(scope: !8987, file: !533, line: 978, column: 6)
!8997 = !DILocation(line: 987, column: 3, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8995, file: !533, line: 987, column: 3)
!8999 = !DILocation(line: 981, column: 15, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !9001, file: !533, line: 981, column: 8)
!9001 = distinct !DILexicalBlock(scope: !9002, file: !533, line: 980, column: 17)
!9002 = distinct !DILexicalBlock(scope: !8994, file: !533, line: 979, column: 3)
!9003 = !DILocation(line: 981, column: 22, scope: !9000)
!9004 = !DILocation(line: 981, column: 32, scope: !9000)
!9005 = !DILocation(line: 981, column: 8, scope: !9001)
!9006 = !DILocation(line: 982, column: 59, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9000, file: !533, line: 981, column: 37)
!9008 = !DILocation(line: 982, column: 5, scope: !9007)
!9009 = !DILocation(line: 984, column: 4, scope: !9007)
!9010 = !DILocation(line: 980, column: 8, scope: !9002)
!9011 = !DILocation(line: 979, column: 52, scope: !9002)
!9012 = distinct !{!9012, !8993, !9013}
!9013 = !DILocation(line: 985, column: 3, scope: !8994)
!9014 = !DILocation(line: 988, column: 40, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9016, file: !533, line: 987, column: 86)
!9016 = distinct !DILexicalBlock(scope: !8998, file: !533, line: 987, column: 3)
!9017 = !DILocation(line: 988, column: 12, scope: !9015)
!9018 = !DILocation(line: 989, column: 14, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9015, file: !533, line: 989, column: 8)
!9020 = !DILocation(line: 989, column: 8, scope: !9015)
!9021 = !DILocation(line: 992, column: 17, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9019, file: !533, line: 989, column: 23)
!9023 = !DILocation(line: 992, column: 29, scope: !9022)
!9024 = !DILocation(line: 990, column: 5, scope: !9022)
!9025 = !DILocation(line: 994, column: 4, scope: !9022)
!9026 = !DILocation(line: 987, column: 78, scope: !9016)
!9027 = !DILocation(line: 987, column: 49, scope: !9016)
!9028 = distinct !{!9028, !8997, !9029}
!9029 = !DILocation(line: 995, column: 3, scope: !8998)
!9030 = !DILocation(line: 997, column: 7, scope: !8995)
!9031 = !DILocation(line: 998, column: 16, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9033, file: !533, line: 997, column: 23)
!9033 = distinct !DILexicalBlock(scope: !8995, file: !533, line: 997, column: 7)
!9034 = !DILocation(line: 999, column: 3, scope: !9032)
!9035 = !DILocation(line: 1002, column: 2, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !8987, file: !533, line: 1002, column: 2)
!9037 = !DILocation(line: 1003, column: 13, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9039, file: !533, line: 1003, column: 7)
!9039 = distinct !DILexicalBlock(scope: !9040, file: !533, line: 1002, column: 85)
!9040 = distinct !DILexicalBlock(scope: !9036, file: !533, line: 1002, column: 2)
!9041 = !DILocation(line: 1003, column: 20, scope: !9038)
!9042 = !DILocation(line: 1003, column: 46, scope: !9038)
!9043 = !DILocation(line: 1003, column: 31, scope: !9038)
!9044 = !DILocation(line: 1003, column: 72, scope: !9038)
!9045 = !DILocation(line: 1003, column: 57, scope: !9038)
!9046 = !DILocation(line: 1004, column: 20, scope: !9038)
!9047 = !DILocation(line: 1003, column: 83, scope: !9038)
!9048 = !DILocation(line: 1003, column: 7, scope: !9039)
!9049 = !DILocation(line: 1005, column: 41, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9038, file: !533, line: 1004, column: 31)
!9051 = !DILocation(line: 1005, column: 64, scope: !9050)
!9052 = !DILocation(line: 1005, column: 4, scope: !9050)
!9053 = !DILocation(line: 1006, column: 16, scope: !9050)
!9054 = !DILocation(line: 1007, column: 3, scope: !9050)
!9055 = !DILocation(line: 1002, column: 77, scope: !9040)
!9056 = !DILocation(line: 1002, column: 48, scope: !9040)
!9057 = distinct !{!9057, !9035, !9058}
!9058 = !DILocation(line: 1008, column: 2, scope: !9036)
!9059 = !DILocation(line: 1009, column: 1, scope: !8987)
!9060 = distinct !DISubprogram(name: "ztest_run_all", scope: !533, file: !533, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9061)
!9061 = !{!9062}
!9062 = !DILocalVariable(name: "state", arg: 1, scope: !9060, file: !533, line: 1011, type: !13)
!9063 = !DILocation(line: 0, scope: !9060)
!9064 = !DILocation(line: 1011, column: 51, scope: !9060)
!9065 = !DILocation(line: 1011, column: 41, scope: !9060)
!9066 = !DILocation(line: 1011, column: 67, scope: !9060)
!9067 = distinct !DISubprogram(name: "test_main", scope: !533, file: !533, line: 1013, type: !3089, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!9068 = !DILocation(line: 1015, column: 2, scope: !9067)
!9069 = !DILocation(line: 1017, column: 2, scope: !9067)
!9070 = !DILocation(line: 1018, column: 1, scope: !9067)
!9071 = distinct !DISubprogram(name: "main", scope: !533, file: !533, line: 1030, type: !3089, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2166)
!9072 = !DILocation(line: 1046, column: 2, scope: !9071)
!9073 = !DILocation(line: 1047, column: 2, scope: !9071)
!9074 = !DILocation(line: 1071, column: 1, scope: !9071)
!9075 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !699, file: !699, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9076)
!9076 = !{!9077}
!9077 = !DILocalVariable(name: "state", arg: 1, scope: !9075, file: !699, line: 30, type: !13)
!9078 = !DILocation(line: 0, scope: !9075)
!9079 = !DILocation(line: 32, column: 2, scope: !9075)
!9080 = !DILocation(line: 33, column: 1, scope: !9075)
!9081 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !699, file: !699, line: 45, type: !706, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9082)
!9082 = !{!9083, !9084, !9085}
!9083 = !DILocalVariable(name: "state", arg: 1, scope: !9081, file: !699, line: 45, type: !13)
!9084 = !DILocalVariable(name: "suite", arg: 2, scope: !9081, file: !699, line: 45, type: !708)
!9085 = !DILocalVariable(name: "run_suite", scope: !9081, file: !699, line: 47, type: !145)
!9086 = !DILocation(line: 0, scope: !9081)
!9087 = !DILocation(line: 49, column: 13, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9081, file: !699, line: 49, column: 6)
!9089 = !DILocation(line: 49, column: 23, scope: !9088)
!9090 = !DILocation(line: 49, column: 6, scope: !9081)
!9091 = !DILocation(line: 50, column: 15, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9088, file: !699, line: 49, column: 32)
!9093 = !DILocation(line: 51, column: 2, scope: !9092)
!9094 = !DILocation(line: 53, column: 2, scope: !9081)
!9095 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !699, file: !699, line: 65, type: !727, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9096)
!9096 = !{!9097, !9098}
!9097 = !DILocalVariable(name: "suite", arg: 1, scope: !9095, file: !699, line: 65, type: !118)
!9098 = !DILocalVariable(name: "test", arg: 2, scope: !9095, file: !699, line: 65, type: !118)
!9099 = !DILocation(line: 0, scope: !9095)
!9100 = !DILocation(line: 67, column: 2, scope: !9095)
!9101 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !9102, file: !9102, line: 24, type: !8790, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9103)
!9102 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!9103 = !{!9104}
!9104 = !DILocalVariable(name: "state", arg: 1, scope: !9101, file: !9102, line: 24, type: !13)
!9105 = !DILocation(line: 0, scope: !9101)
!9106 = !DILocation(line: 32, column: 2, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9101, file: !9102, line: 32, column: 2)
!9108 = !{i64 2154969612}
!9109 = !DILocation(line: 33, column: 9, scope: !9101)
!9110 = !DILocation(line: 33, column: 2, scope: !9101)
!9111 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !699, file: !699, line: 20, type: !9112, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9114)
!9112 = !DISubroutineType(types: !9113)
!9113 = !{!118, !118}
!9114 = !{!9115}
!9115 = !DILocalVariable(name: "file", arg: 1, scope: !9111, file: !699, line: 20, type: !118)
!9116 = !DILocation(line: 0, scope: !9111)
!9117 = !DILocation(line: 22, column: 2, scope: !9111)
!9118 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !836, file: !836, line: 368, type: !889, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9119)
!9119 = !{!9120}
!9120 = !DILocalVariable(name: "dev", arg: 1, scope: !9118, file: !836, line: 368, type: !865)
!9121 = !DILocation(line: 0, scope: !9118)
!9122 = !DILocation(line: 370, column: 2, scope: !9118)
!9123 = !DILocation(line: 371, column: 1, scope: !9118)
!9124 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !836, file: !836, line: 243, type: !9125, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9127)
!9125 = !DISubroutineType(types: !9126)
!9126 = !{null, !107, !107, !865}
!9127 = !{!9128, !9129, !9130, !9131, !9133}
!9128 = !DILocalVariable(name: "min", arg: 1, scope: !9124, file: !836, line: 243, type: !107)
!9129 = !DILocalVariable(name: "max", arg: 2, scope: !9124, file: !836, line: 243, type: !107)
!9130 = !DILocalVariable(name: "dev", arg: 3, scope: !9124, file: !836, line: 243, type: !865)
!9131 = !DILocalVariable(name: "data", scope: !9124, file: !836, line: 245, type: !9132)
!9132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!9133 = !DILocalVariable(name: "line", scope: !9124, file: !836, line: 246, type: !107)
!9134 = !DILocation(line: 0, scope: !9124)
!9135 = !DILocation(line: 245, column: 38, scope: !9124)
!9136 = !DILocation(line: 249, column: 24, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9138, file: !836, line: 249, column: 2)
!9138 = distinct !DILexicalBlock(scope: !9124, file: !836, line: 249, column: 2)
!9139 = !DILocation(line: 249, column: 2, scope: !9138)
!9140 = !DILocation(line: 251, column: 7, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9142, file: !836, line: 251, column: 7)
!9142 = distinct !DILexicalBlock(scope: !9137, file: !836, line: 249, column: 39)
!9143 = !DILocation(line: 251, column: 7, scope: !9142)
!9144 = !DILocation(line: 253, column: 4, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9141, file: !836, line: 251, column: 36)
!9146 = !DILocation(line: 256, column: 24, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9145, file: !836, line: 256, column: 8)
!9148 = !DILocation(line: 256, column: 9, scope: !9147)
!9149 = !DILocation(line: 256, column: 8, scope: !9145)
!9150 = !DILocation(line: 260, column: 43, scope: !9145)
!9151 = !DILocation(line: 260, column: 4, scope: !9145)
!9152 = !DILocation(line: 261, column: 3, scope: !9145)
!9153 = !DILocation(line: 249, column: 35, scope: !9137)
!9154 = distinct !{!9154, !9139, !9155}
!9155 = !DILocation(line: 262, column: 2, scope: !9138)
!9156 = !DILocation(line: 263, column: 1, scope: !9124)
!9157 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !836, file: !836, line: 158, type: !214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9158)
!9158 = !{!9159}
!9159 = !DILocalVariable(name: "line", arg: 1, scope: !9157, file: !836, line: 158, type: !107)
!9160 = !DILocation(line: 0, scope: !9157)
!9161 = !DILocation(line: 170, column: 38, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9163, file: !836, line: 160, column: 17)
!9163 = distinct !DILexicalBlock(scope: !9157, file: !836, line: 160, column: 6)
!9164 = !DILocation(line: 170, column: 10, scope: !9162)
!9165 = !DILocation(line: 176, column: 1, scope: !9157)
!9166 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !836, file: !836, line: 183, type: !9167, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9169)
!9167 = !DISubroutineType(types: !9168)
!9168 = !{null, !107}
!9169 = !{!9170}
!9170 = !DILocalVariable(name: "line", arg: 1, scope: !9166, file: !836, line: 183, type: !107)
!9171 = !DILocation(line: 0, scope: !9166)
!9172 = !DILocation(line: 195, column: 28, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9174, file: !836, line: 185, column: 17)
!9174 = distinct !DILexicalBlock(scope: !9166, file: !836, line: 185, column: 6)
!9175 = !DILocation(line: 195, column: 3, scope: !9173)
!9176 = !DILocation(line: 200, column: 1, scope: !9166)
!9177 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9178, file: !9178, line: 910, type: !6350, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9179)
!9178 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9179 = !{!9180}
!9180 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9177, file: !9178, line: 910, type: !152)
!9181 = !DILocation(line: 0, scope: !9177)
!9182 = !DILocation(line: 912, column: 3, scope: !9177)
!9183 = !DILocation(line: 913, column: 1, scope: !9177)
!9184 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9178, file: !9178, line: 834, type: !7540, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9185)
!9185 = !{!9186}
!9186 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9184, file: !9178, line: 834, type: !152)
!9187 = !DILocation(line: 0, scope: !9184)
!9188 = !DILocation(line: 836, column: 11, scope: !9184)
!9189 = !DILocation(line: 836, column: 40, scope: !9184)
!9190 = !DILocation(line: 836, column: 3, scope: !9184)
!9191 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !836, file: !836, line: 304, type: !889, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9192)
!9192 = !{!9193}
!9193 = !DILocalVariable(name: "dev", arg: 1, scope: !9191, file: !836, line: 304, type: !865)
!9194 = !DILocation(line: 0, scope: !9191)
!9195 = !DILocation(line: 306, column: 2, scope: !9191)
!9196 = !DILocation(line: 307, column: 1, scope: !9191)
!9197 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !836, file: !836, line: 299, type: !889, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9198)
!9198 = !{!9199}
!9199 = !DILocalVariable(name: "dev", arg: 1, scope: !9197, file: !836, line: 299, type: !865)
!9200 = !DILocation(line: 0, scope: !9197)
!9201 = !DILocation(line: 301, column: 2, scope: !9197)
!9202 = !DILocation(line: 302, column: 1, scope: !9197)
!9203 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !836, file: !836, line: 294, type: !889, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9204)
!9204 = !{!9205}
!9205 = !DILocalVariable(name: "dev", arg: 1, scope: !9203, file: !836, line: 294, type: !865)
!9206 = !DILocation(line: 0, scope: !9203)
!9207 = !DILocation(line: 296, column: 2, scope: !9203)
!9208 = !DILocation(line: 297, column: 1, scope: !9203)
!9209 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !836, file: !836, line: 397, type: !889, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9210)
!9210 = !{!9211}
!9211 = !DILocalVariable(name: "dev", arg: 1, scope: !9209, file: !836, line: 397, type: !865)
!9212 = !DILocation(line: 0, scope: !9209)
!9213 = !DILocation(line: 399, column: 2, scope: !9209)
!9214 = !DILocation(line: 400, column: 1, scope: !9209)
!9215 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !836, file: !836, line: 392, type: !889, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9216)
!9216 = !{!9217}
!9217 = !DILocalVariable(name: "dev", arg: 1, scope: !9215, file: !836, line: 392, type: !865)
!9218 = !DILocation(line: 0, scope: !9215)
!9219 = !DILocation(line: 394, column: 2, scope: !9215)
!9220 = !DILocation(line: 395, column: 1, scope: !9215)
!9221 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !836, file: !836, line: 289, type: !889, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9222)
!9222 = !{!9223}
!9223 = !DILocalVariable(name: "dev", arg: 1, scope: !9221, file: !836, line: 289, type: !865)
!9224 = !DILocation(line: 0, scope: !9221)
!9225 = !DILocation(line: 291, column: 2, scope: !9221)
!9226 = !DILocation(line: 292, column: 1, scope: !9221)
!9227 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !836, file: !836, line: 387, type: !889, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9228)
!9228 = !{!9229}
!9229 = !DILocalVariable(name: "dev", arg: 1, scope: !9227, file: !836, line: 387, type: !865)
!9230 = !DILocation(line: 0, scope: !9227)
!9231 = !DILocation(line: 389, column: 2, scope: !9227)
!9232 = !DILocation(line: 390, column: 1, scope: !9227)
!9233 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !836, file: !836, line: 382, type: !889, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9234)
!9234 = !{!9235}
!9235 = !DILocalVariable(name: "dev", arg: 1, scope: !9233, file: !836, line: 382, type: !865)
!9236 = !DILocation(line: 0, scope: !9233)
!9237 = !DILocation(line: 384, column: 2, scope: !9233)
!9238 = !DILocation(line: 385, column: 1, scope: !9233)
!9239 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !836, file: !836, line: 373, type: !889, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9240)
!9240 = !{!9241}
!9241 = !DILocalVariable(name: "dev", arg: 1, scope: !9239, file: !836, line: 373, type: !865)
!9242 = !DILocation(line: 0, scope: !9239)
!9243 = !DILocation(line: 375, column: 2, scope: !9239)
!9244 = !DILocation(line: 376, column: 1, scope: !9239)
!9245 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !836, file: !836, line: 284, type: !889, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9246)
!9246 = !{!9247}
!9247 = !DILocalVariable(name: "dev", arg: 1, scope: !9245, file: !836, line: 284, type: !865)
!9248 = !DILocation(line: 0, scope: !9245)
!9249 = !DILocation(line: 286, column: 2, scope: !9245)
!9250 = !DILocation(line: 287, column: 1, scope: !9245)
!9251 = distinct !DISubprogram(name: "stm32_exti_init", scope: !836, file: !836, line: 416, type: !863, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9252)
!9252 = !{!9253}
!9253 = !DILocalVariable(name: "dev", arg: 1, scope: !9251, file: !836, line: 416, type: !865)
!9254 = !DILocation(line: 0, scope: !9251)
!9255 = !DILocation(line: 418, column: 2, scope: !9251)
!9256 = !DILocation(line: 420, column: 2, scope: !9251)
!9257 = !DILocation(line: 0, scope: !888)
!9258 = !DILocation(line: 493, column: 2, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !888, file: !836, line: 493, column: 2)
!9260 = !DILocation(line: 497, column: 2, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !888, file: !836, line: 497, column: 2)
!9262 = !DILocation(line: 507, column: 2, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !888, file: !836, line: 507, column: 2)
!9264 = !DILocation(line: 512, column: 2, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !888, file: !836, line: 512, column: 2)
!9266 = !DILocation(line: 516, column: 2, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !888, file: !836, line: 516, column: 2)
!9268 = !DILocation(line: 523, column: 2, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !888, file: !836, line: 523, column: 2)
!9270 = !DILocation(line: 527, column: 2, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !888, file: !836, line: 527, column: 2)
!9272 = !DILocation(line: 581, column: 2, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !888, file: !836, line: 581, column: 2)
!9274 = !DILocation(line: 586, column: 2, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !888, file: !836, line: 586, column: 2)
!9276 = !DILocation(line: 591, column: 2, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !888, file: !836, line: 591, column: 2)
!9278 = !DILocation(line: 595, column: 2, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !888, file: !836, line: 595, column: 2)
!9280 = !DILocation(line: 607, column: 1, scope: !888)
!9281 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !836, file: !836, line: 112, type: !9167, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9282)
!9282 = !{!9283, !9284}
!9283 = !DILocalVariable(name: "line", arg: 1, scope: !9281, file: !836, line: 112, type: !107)
!9284 = !DILocalVariable(name: "irqnum", scope: !9281, file: !836, line: 114, type: !107)
!9285 = !DILocation(line: 0, scope: !9281)
!9286 = !DILocation(line: 122, column: 13, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9281, file: !836, line: 122, column: 6)
!9288 = !DILocation(line: 122, column: 6, scope: !9281)
!9289 = !DILocation(line: 123, column: 3, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9291, file: !836, line: 123, column: 3)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !836, line: 123, column: 3)
!9292 = distinct !DILexicalBlock(scope: !9293, file: !836, line: 123, column: 3)
!9293 = distinct !DILexicalBlock(scope: !9287, file: !836, line: 122, column: 22)
!9294 = !DILocation(line: 121, column: 11, scope: !9281)
!9295 = !DILocation(line: 130, column: 26, scope: !9281)
!9296 = !DILocation(line: 130, column: 2, scope: !9281)
!9297 = !DILocation(line: 134, column: 2, scope: !9281)
!9298 = !DILocation(line: 135, column: 1, scope: !9281)
!9299 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9178, file: !9178, line: 268, type: !6350, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9300)
!9300 = !{!9301}
!9301 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9299, file: !9178, line: 268, type: !152)
!9302 = !DILocation(line: 0, scope: !9299)
!9303 = !DILocation(line: 270, column: 3, scope: !9299)
!9304 = !DILocation(line: 271, column: 1, scope: !9299)
!9305 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !836, file: !836, line: 137, type: !9167, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9306)
!9306 = !{!9307}
!9307 = !DILocalVariable(name: "line", arg: 1, scope: !9305, file: !836, line: 137, type: !107)
!9308 = !DILocation(line: 0, scope: !9305)
!9309 = !DILocation(line: 141, column: 11, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9305, file: !836, line: 141, column: 6)
!9311 = !DILocation(line: 141, column: 6, scope: !9305)
!9312 = !DILocation(line: 145, column: 28, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9310, file: !836, line: 141, column: 17)
!9314 = !DILocation(line: 145, column: 3, scope: !9313)
!9315 = !DILocation(line: 147, column: 2, scope: !9313)
!9316 = !DILocation(line: 151, column: 1, scope: !9305)
!9317 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9178, file: !9178, line: 309, type: !6350, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9318)
!9318 = !{!9319}
!9319 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9317, file: !9178, line: 309, type: !152)
!9320 = !DILocation(line: 0, scope: !9317)
!9321 = !DILocation(line: 311, column: 3, scope: !9317)
!9322 = !DILocation(line: 312, column: 1, scope: !9317)
!9323 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !836, file: !836, line: 202, type: !9324, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9326)
!9324 = !DISubroutineType(types: !9325)
!9325 = !{null, !107, !107}
!9326 = !{!9327, !9328}
!9327 = !DILocalVariable(name: "line", arg: 1, scope: !9323, file: !836, line: 202, type: !107)
!9328 = !DILocalVariable(name: "trigger", arg: 2, scope: !9323, file: !836, line: 202, type: !107)
!9329 = !DILocation(line: 0, scope: !9323)
!9330 = !DILocation(line: 211, column: 2, scope: !9323)
!9331 = !DILocation(line: 213, column: 36, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9323, file: !836, line: 211, column: 19)
!9333 = !DILocation(line: 213, column: 3, scope: !9332)
!9334 = !DILocation(line: 214, column: 3, scope: !9332)
!9335 = !DILocation(line: 215, column: 3, scope: !9332)
!9336 = !DILocation(line: 217, column: 35, scope: !9332)
!9337 = !DILocation(line: 217, column: 3, scope: !9332)
!9338 = !DILocation(line: 218, column: 3, scope: !9332)
!9339 = !DILocation(line: 219, column: 3, scope: !9332)
!9340 = !DILocation(line: 221, column: 36, scope: !9332)
!9341 = !DILocation(line: 221, column: 3, scope: !9332)
!9342 = !DILocation(line: 222, column: 3, scope: !9332)
!9343 = !DILocation(line: 223, column: 3, scope: !9332)
!9344 = !DILocation(line: 225, column: 35, scope: !9332)
!9345 = !DILocation(line: 225, column: 3, scope: !9332)
!9346 = !DILocation(line: 226, column: 3, scope: !9332)
!9347 = !DILocation(line: 227, column: 3, scope: !9332)
!9348 = !DILocation(line: 232, column: 1, scope: !9323)
!9349 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9178, file: !9178, line: 573, type: !6350, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9350)
!9350 = !{!9351}
!9351 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9349, file: !9178, line: 573, type: !152)
!9352 = !DILocation(line: 0, scope: !9349)
!9353 = !DILocation(line: 575, column: 3, scope: !9349)
!9354 = !DILocation(line: 577, column: 1, scope: !9349)
!9355 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9178, file: !9178, line: 703, type: !6350, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9356)
!9356 = !{!9357}
!9357 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9355, file: !9178, line: 703, type: !152)
!9358 = !DILocation(line: 0, scope: !9355)
!9359 = !DILocation(line: 705, column: 3, scope: !9355)
!9360 = !DILocation(line: 706, column: 1, scope: !9355)
!9361 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9178, file: !9178, line: 529, type: !6350, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9362)
!9362 = !{!9363}
!9363 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9361, file: !9178, line: 529, type: !152)
!9364 = !DILocation(line: 0, scope: !9361)
!9365 = !DILocation(line: 531, column: 3, scope: !9361)
!9366 = !DILocation(line: 533, column: 1, scope: !9361)
!9367 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9178, file: !9178, line: 661, type: !6350, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9368)
!9368 = !{!9369}
!9369 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9367, file: !9178, line: 661, type: !152)
!9370 = !DILocation(line: 0, scope: !9367)
!9371 = !DILocation(line: 663, column: 3, scope: !9367)
!9372 = !DILocation(line: 664, column: 1, scope: !9367)
!9373 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !836, file: !836, line: 433, type: !9374, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9376)
!9374 = !DISubroutineType(types: !9375)
!9375 = !{!107, !107, !876, !106}
!9376 = !{!9377, !9378, !9379, !9380, !9382}
!9377 = !DILocalVariable(name: "line", arg: 1, scope: !9373, file: !836, line: 433, type: !107)
!9378 = !DILocalVariable(name: "cb", arg: 2, scope: !9373, file: !836, line: 433, type: !876)
!9379 = !DILocalVariable(name: "arg", arg: 3, scope: !9373, file: !836, line: 433, type: !106)
!9380 = !DILocalVariable(name: "dev", scope: !9373, file: !836, line: 435, type: !9381)
!9381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !865)
!9382 = !DILocalVariable(name: "data", scope: !9373, file: !836, line: 436, type: !9132)
!9383 = !DILocation(line: 0, scope: !9373)
!9384 = !DILocation(line: 438, column: 21, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9373, file: !836, line: 438, column: 6)
!9386 = !DILocation(line: 438, column: 6, scope: !9385)
!9387 = !DILocation(line: 438, column: 6, scope: !9373)
!9388 = !DILocation(line: 442, column: 20, scope: !9373)
!9389 = !DILocation(line: 443, column: 17, scope: !9373)
!9390 = !DILocation(line: 443, column: 22, scope: !9373)
!9391 = !DILocation(line: 445, column: 2, scope: !9373)
!9392 = !DILocation(line: 446, column: 1, scope: !9373)
!9393 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !836, file: !836, line: 448, type: !9167, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9394)
!9394 = !{!9395, !9396, !9397}
!9395 = !DILocalVariable(name: "line", arg: 1, scope: !9393, file: !836, line: 448, type: !107)
!9396 = !DILocalVariable(name: "dev", scope: !9393, file: !836, line: 450, type: !9381)
!9397 = !DILocalVariable(name: "data", scope: !9393, file: !836, line: 451, type: !9132)
!9398 = !DILocation(line: 0, scope: !9393)
!9399 = !DILocation(line: 453, column: 17, scope: !9393)
!9400 = !DILocation(line: 453, column: 20, scope: !9393)
!9401 = !DILocation(line: 454, column: 17, scope: !9393)
!9402 = !DILocation(line: 454, column: 22, scope: !9393)
!9403 = !DILocation(line: 455, column: 1, scope: !9393)
!9404 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1020, file: !1020, line: 183, type: !1058, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9405)
!9405 = !{!9406, !9407, !9408, !9409, !9410}
!9406 = !DILocalVariable(name: "dev", arg: 1, scope: !9404, file: !1020, line: 183, type: !1049)
!9407 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9404, file: !1020, line: 184, type: !1060)
!9408 = !DILocalVariable(name: "pclken", scope: !9404, file: !1020, line: 186, type: !1010)
!9409 = !DILocalVariable(name: "reg", scope: !9404, file: !1020, line: 187, type: !1610)
!9410 = !DILocalVariable(name: "reg_val", scope: !9404, file: !1020, line: 188, type: !152)
!9411 = !DILocation(line: 0, scope: !9404)
!9412 = !DILocation(line: 192, column: 6, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9404, file: !1020, line: 192, column: 6)
!9414 = !DILocation(line: 192, column: 6, scope: !9404)
!9415 = !DILocation(line: 197, column: 52, scope: !9404)
!9416 = !DILocation(line: 197, column: 8, scope: !9404)
!9417 = !DILocation(line: 198, column: 12, scope: !9404)
!9418 = !DILocation(line: 199, column: 21, scope: !9404)
!9419 = !DILocation(line: 199, column: 10, scope: !9404)
!9420 = !DILocation(line: 200, column: 7, scope: !9404)
!9421 = !DILocation(line: 202, column: 2, scope: !9404)
!9422 = !DILocation(line: 203, column: 1, scope: !9404)
!9423 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1020, file: !1020, line: 205, type: !1058, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9424)
!9424 = !{!9425, !9426, !9427, !9428, !9429}
!9425 = !DILocalVariable(name: "dev", arg: 1, scope: !9423, file: !1020, line: 205, type: !1049)
!9426 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9423, file: !1020, line: 206, type: !1060)
!9427 = !DILocalVariable(name: "pclken", scope: !9423, file: !1020, line: 208, type: !1010)
!9428 = !DILocalVariable(name: "reg", scope: !9423, file: !1020, line: 209, type: !1610)
!9429 = !DILocalVariable(name: "reg_val", scope: !9423, file: !1020, line: 210, type: !152)
!9430 = !DILocation(line: 0, scope: !9423)
!9431 = !DILocation(line: 214, column: 6, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9423, file: !1020, line: 214, column: 6)
!9433 = !DILocation(line: 214, column: 6, scope: !9423)
!9434 = !DILocation(line: 219, column: 52, scope: !9423)
!9435 = !DILocation(line: 219, column: 8, scope: !9423)
!9436 = !DILocation(line: 220, column: 12, scope: !9423)
!9437 = !DILocation(line: 221, column: 22, scope: !9423)
!9438 = !DILocation(line: 221, column: 13, scope: !9423)
!9439 = !DILocation(line: 221, column: 10, scope: !9423)
!9440 = !DILocation(line: 222, column: 7, scope: !9423)
!9441 = !DILocation(line: 224, column: 2, scope: !9423)
!9442 = !DILocation(line: 225, column: 1, scope: !9423)
!9443 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1020, file: !1020, line: 262, type: !1074, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9444)
!9444 = !{!9445, !9446, !9447, !9448, !9449, !9450, !9451, !9452}
!9445 = !DILocalVariable(name: "clock", arg: 1, scope: !9443, file: !1020, line: 262, type: !1049)
!9446 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9443, file: !1020, line: 263, type: !1060)
!9447 = !DILocalVariable(name: "rate", arg: 3, scope: !9443, file: !1020, line: 264, type: !1016)
!9448 = !DILocalVariable(name: "pclken", scope: !9443, file: !1020, line: 266, type: !1010)
!9449 = !DILocalVariable(name: "ahb_clock", scope: !9443, file: !1020, line: 273, type: !152)
!9450 = !DILocalVariable(name: "apb1_clock", scope: !9443, file: !1020, line: 274, type: !152)
!9451 = !DILocalVariable(name: "apb2_clock", scope: !9443, file: !1020, line: 276, type: !152)
!9452 = !DILocalVariable(name: "ahb3_clock", scope: !9443, file: !1020, line: 286, type: !152)
!9453 = !DILocation(line: 0, scope: !9443)
!9454 = !DILocation(line: 273, column: 23, scope: !9443)
!9455 = !DILocation(line: 299, column: 18, scope: !9443)
!9456 = !DILocation(line: 299, column: 2, scope: !9443)
!9457 = !DILocation(line: 274, column: 24, scope: !9443)
!9458 = !DILocation(line: 319, column: 3, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9443, file: !1020, line: 299, column: 23)
!9460 = !DILocation(line: 276, column: 24, scope: !9443)
!9461 = !DILocation(line: 323, column: 3, scope: !9459)
!9462 = !DILocation(line: 346, column: 33, scope: !9459)
!9463 = !DILocation(line: 346, column: 11, scope: !9459)
!9464 = !DILocation(line: 350, column: 3, scope: !9459)
!9465 = !DILocation(line: 354, column: 33, scope: !9459)
!9466 = !DILocation(line: 354, column: 11, scope: !9459)
!9467 = !DILocation(line: 358, column: 3, scope: !9459)
!9468 = !DILocation(line: 374, column: 3, scope: !9459)
!9469 = !DILocation(line: 379, column: 3, scope: !9459)
!9470 = !DILocation(line: 0, scope: !9459)
!9471 = !DILocation(line: 396, column: 1, scope: !9443)
!9472 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1020, file: !1020, line: 227, type: !1090, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9473)
!9473 = !{!9474, !9475, !9476, !9477, !9478, !9479, !9480, !9481}
!9474 = !DILocalVariable(name: "dev", arg: 1, scope: !9472, file: !1020, line: 227, type: !1049)
!9475 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9472, file: !1020, line: 228, type: !1060)
!9476 = !DILocalVariable(name: "data", arg: 3, scope: !9472, file: !1020, line: 229, type: !106)
!9477 = !DILocalVariable(name: "pclken", scope: !9472, file: !1020, line: 233, type: !1010)
!9478 = !DILocalVariable(name: "reg", scope: !9472, file: !1020, line: 234, type: !1610)
!9479 = !DILocalVariable(name: "reg_val", scope: !9472, file: !1020, line: 235, type: !152)
!9480 = !DILocalVariable(name: "dt_val", scope: !9472, file: !1020, line: 235, type: !152)
!9481 = !DILocalVariable(name: "err", scope: !9472, file: !1020, line: 236, type: !107)
!9482 = !DILocation(line: 0, scope: !9472)
!9483 = !DILocation(line: 241, column: 30, scope: !9472)
!9484 = !DILocation(line: 241, column: 8, scope: !9472)
!9485 = !DILocation(line: 242, column: 10, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9472, file: !1020, line: 242, column: 6)
!9487 = !DILocation(line: 242, column: 6, scope: !9472)
!9488 = !DILocation(line: 247, column: 11, scope: !9472)
!9489 = !DILocation(line: 248, column: 6, scope: !9472)
!9490 = !DILocation(line: 247, column: 44, scope: !9472)
!9491 = !DILocation(line: 250, column: 6, scope: !9472)
!9492 = !DILocation(line: 249, column: 52, scope: !9472)
!9493 = !DILocation(line: 249, column: 8, scope: !9472)
!9494 = !DILocation(line: 251, column: 12, scope: !9472)
!9495 = !DILocation(line: 252, column: 10, scope: !9472)
!9496 = !DILocation(line: 253, column: 7, scope: !9472)
!9497 = !DILocation(line: 255, column: 2, scope: !9472)
!9498 = !DILocation(line: 260, column: 1, scope: !9472)
!9499 = distinct !DISubprogram(name: "enabled_clock", scope: !1020, file: !1020, line: 100, type: !9500, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9502)
!9500 = !DISubroutineType(types: !9501)
!9501 = !{!107, !152}
!9502 = !{!9503, !9504}
!9503 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9499, file: !1020, line: 100, type: !152)
!9504 = !DILocalVariable(name: "r", scope: !9499, file: !1020, line: 102, type: !107)
!9505 = !DILocation(line: 0, scope: !9499)
!9506 = !DILocation(line: 104, column: 2, scope: !9499)
!9507 = !DILocation(line: 180, column: 2, scope: !9499)
!9508 = !DILocation(line: 181, column: 1, scope: !9499)
!9509 = distinct !DISubprogram(name: "get_bus_clock", scope: !1020, file: !1020, line: 79, type: !9510, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9512)
!9510 = !DISubroutineType(types: !9511)
!9511 = !{!152, !152, !152}
!9512 = !{!9513, !9514}
!9513 = !DILocalVariable(name: "clock", arg: 1, scope: !9509, file: !1020, line: 79, type: !152)
!9514 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9509, file: !1020, line: 79, type: !152)
!9515 = !DILocation(line: 0, scope: !9509)
!9516 = !DILocation(line: 81, column: 15, scope: !9509)
!9517 = !DILocation(line: 81, column: 2, scope: !9509)
!9518 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1020, file: !1020, line: 68, type: !9519, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9521)
!9519 = !DISubroutineType(types: !9520)
!9520 = !{!152, !152, !107, !107, !107}
!9521 = !{!9522, !9523, !9524, !9525}
!9522 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9518, file: !1020, line: 68, type: !152)
!9523 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9518, file: !1020, line: 69, type: !107)
!9524 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9518, file: !1020, line: 70, type: !107)
!9525 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9518, file: !1020, line: 71, type: !107)
!9526 = !DILocation(line: 0, scope: !9518)
!9527 = !DILocation(line: 75, column: 22, scope: !9518)
!9528 = !DILocation(line: 76, column: 13, scope: !9518)
!9529 = !DILocation(line: 75, column: 34, scope: !9518)
!9530 = !DILocation(line: 75, column: 2, scope: !9518)
!9531 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1020, file: !1020, line: 641, type: !1047, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9532)
!9532 = !{!9533, !9534, !9535}
!9533 = !DILocalVariable(name: "dev", arg: 1, scope: !9531, file: !1020, line: 641, type: !1049)
!9534 = !DILocalVariable(name: "old_flash_freq", scope: !9531, file: !1020, line: 664, type: !152)
!9535 = !DILocalVariable(name: "new_flash_freq", scope: !9531, file: !1020, line: 665, type: !152)
!9536 = !DILocation(line: 0, scope: !9531)
!9537 = !DILocation(line: 646, column: 2, scope: !9531)
!9538 = !DILocation(line: 667, column: 19, scope: !9531)
!9539 = !DILocation(line: 674, column: 21, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9531, file: !1020, line: 674, column: 6)
!9541 = !DILocation(line: 674, column: 6, scope: !9531)
!9542 = !DILocation(line: 675, column: 3, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9540, file: !1020, line: 674, column: 59)
!9544 = !DILocation(line: 676, column: 2, scope: !9543)
!9545 = !DILocation(line: 680, column: 2, scope: !9531)
!9546 = !DILocation(line: 683, column: 2, scope: !9531)
!9547 = !DILocation(line: 690, column: 3, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9549, file: !1020, line: 689, column: 9)
!9549 = distinct !DILexicalBlock(scope: !9531, file: !1020, line: 685, column: 6)
!9550 = !DILocation(line: 695, column: 2, scope: !9531)
!9551 = !DILocation(line: 696, column: 2, scope: !9531)
!9552 = !DILocation(line: 696, column: 9, scope: !9531)
!9553 = !DILocation(line: 696, column: 34, scope: !9531)
!9554 = distinct !{!9554, !9551, !9555}
!9555 = !DILocation(line: 697, column: 2, scope: !9531)
!9556 = !DILocation(line: 720, column: 21, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9531, file: !1020, line: 720, column: 6)
!9558 = !DILocation(line: 720, column: 6, scope: !9531)
!9559 = !DILocation(line: 721, column: 3, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9557, file: !1020, line: 720, column: 60)
!9561 = !DILocation(line: 722, column: 2, scope: !9560)
!9562 = !DILocation(line: 725, column: 18, scope: !9531)
!9563 = !DILocation(line: 728, column: 2, scope: !9531)
!9564 = !DILocation(line: 730, column: 2, scope: !9531)
!9565 = !DILocation(line: 745, column: 2, scope: !9531)
!9566 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9567, file: !9567, line: 3275, type: !6340, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9567 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9568 = !DILocation(line: 3277, column: 21, scope: !9566)
!9569 = !DILocation(line: 3277, column: 3, scope: !9566)
!9570 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1020, file: !1020, line: 507, type: !3089, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9571 = !DILocation(line: 516, column: 4, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9573, file: !1020, line: 515, column: 10)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !1020, line: 513, column: 7)
!9574 = distinct !DILexicalBlock(scope: !9575, file: !1020, line: 510, column: 37)
!9575 = distinct !DILexicalBlock(scope: !9570, file: !1020, line: 510, column: 6)
!9576 = !DILocation(line: 526, column: 3, scope: !9574)
!9577 = !DILocation(line: 527, column: 3, scope: !9574)
!9578 = !DILocation(line: 527, column: 10, scope: !9574)
!9579 = !DILocation(line: 527, column: 31, scope: !9574)
!9580 = distinct !{!9580, !9577, !9581}
!9581 = !DILocation(line: 529, column: 3, scope: !9574)
!9582 = !DILocation(line: 583, column: 3, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9584, file: !1020, line: 577, column: 37)
!9584 = distinct !DILexicalBlock(scope: !9570, file: !1020, line: 577, column: 6)
!9585 = !DILocation(line: 584, column: 3, scope: !9583)
!9586 = !DILocation(line: 584, column: 10, scope: !9583)
!9587 = !DILocation(line: 584, column: 31, scope: !9583)
!9588 = distinct !{!9588, !9585, !9589}
!9589 = !DILocation(line: 585, column: 3, scope: !9583)
!9590 = !DILocation(line: 627, column: 1, scope: !9570)
!9591 = distinct !DISubprogram(name: "set_up_plls", scope: !1020, file: !1020, line: 448, type: !3089, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9592 = !DILocation(line: 460, column: 6, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9591, file: !1020, line: 460, column: 6)
!9594 = !DILocation(line: 460, column: 31, scope: !9593)
!9595 = !DILocation(line: 460, column: 6, scope: !9591)
!9596 = !DILocation(line: 461, column: 3, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9593, file: !1020, line: 460, column: 67)
!9598 = !DILocation(line: 462, column: 3, scope: !9597)
!9599 = !DILocation(line: 463, column: 2, scope: !9597)
!9600 = !DILocation(line: 464, column: 2, scope: !9591)
!9601 = !DILocation(line: 488, column: 2, scope: !9591)
!9602 = !DILocation(line: 492, column: 2, scope: !9591)
!9603 = !DILocation(line: 496, column: 2, scope: !9591)
!9604 = !DILocation(line: 499, column: 2, scope: !9591)
!9605 = !DILocation(line: 500, column: 2, scope: !9591)
!9606 = !DILocation(line: 500, column: 9, scope: !9591)
!9607 = !DILocation(line: 500, column: 30, scope: !9591)
!9608 = distinct !{!9608, !9605, !9609}
!9609 = !DILocation(line: 502, column: 2, scope: !9591)
!9610 = !DILocation(line: 505, column: 1, scope: !9591)
!9611 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9567, file: !9567, line: 3224, type: !6350, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9612)
!9612 = !{!9613}
!9613 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9611, file: !9567, line: 3224, type: !152)
!9614 = !DILocation(line: 0, scope: !9611)
!9615 = !DILocation(line: 3226, column: 3, scope: !9611)
!9616 = !DILocation(line: 3227, column: 1, scope: !9611)
!9617 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9567, file: !9567, line: 3188, type: !6350, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9618)
!9618 = !{!9619}
!9619 = !DILocalVariable(name: "Source", arg: 1, scope: !9617, file: !9567, line: 3188, type: !152)
!9620 = !DILocation(line: 0, scope: !9617)
!9621 = !DILocation(line: 3190, column: 3, scope: !9617)
!9622 = !DILocation(line: 3191, column: 1, scope: !9617)
!9623 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9567, file: !9567, line: 3204, type: !6340, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9624 = !DILocation(line: 3206, column: 21, scope: !9623)
!9625 = !DILocation(line: 3206, column: 3, scope: !9623)
!9626 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9567, file: !9567, line: 3240, type: !6350, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9627)
!9627 = !{!9628}
!9628 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9626, file: !9567, line: 3240, type: !152)
!9629 = !DILocation(line: 0, scope: !9626)
!9630 = !DILocation(line: 3242, column: 3, scope: !9626)
!9631 = !DILocation(line: 3243, column: 1, scope: !9626)
!9632 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9567, file: !9567, line: 3256, type: !6350, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !9633)
!9633 = !{!9634}
!9634 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9632, file: !9567, line: 3256, type: !152)
!9635 = !DILocation(line: 0, scope: !9632)
!9636 = !DILocation(line: 3258, column: 3, scope: !9632)
!9637 = !DILocation(line: 3259, column: 1, scope: !9632)
!9638 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1020, file: !1020, line: 409, type: !3089, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9639 = !DILocation(line: 412, column: 6, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9638, file: !1020, line: 412, column: 6)
!9641 = !DILocation(line: 412, column: 27, scope: !9640)
!9642 = !DILocation(line: 412, column: 6, scope: !9638)
!9643 = !DILocation(line: 414, column: 3, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9640, file: !1020, line: 412, column: 33)
!9645 = !DILocation(line: 415, column: 3, scope: !9644)
!9646 = !DILocation(line: 415, column: 10, scope: !9644)
!9647 = !DILocation(line: 415, column: 31, scope: !9644)
!9648 = distinct !{!9648, !9645, !9649}
!9649 = !DILocation(line: 417, column: 3, scope: !9644)
!9650 = !DILocation(line: 421, column: 2, scope: !9638)
!9651 = !DILocation(line: 422, column: 2, scope: !9638)
!9652 = !DILocation(line: 422, column: 9, scope: !9638)
!9653 = !DILocation(line: 422, column: 34, scope: !9638)
!9654 = distinct !{!9654, !9651, !9655}
!9655 = !DILocation(line: 423, column: 2, scope: !9638)
!9656 = !DILocation(line: 424, column: 1, scope: !9638)
!9657 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9567, file: !9567, line: 4195, type: !3089, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9658 = !DILocation(line: 4197, column: 3, scope: !9657)
!9659 = !DILocation(line: 4198, column: 1, scope: !9657)
!9660 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9567, file: !9567, line: 4184, type: !3089, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9661 = !DILocation(line: 4186, column: 3, scope: !9660)
!9662 = !DILocation(line: 4187, column: 1, scope: !9660)
!9663 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9567, file: !9567, line: 4205, type: !6340, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9664 = !DILocation(line: 4207, column: 11, scope: !9663)
!9665 = !DILocation(line: 4207, column: 44, scope: !9663)
!9666 = !DILocation(line: 4207, column: 3, scope: !9663)
!9667 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9567, file: !9567, line: 3007, type: !6340, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9668 = !DILocation(line: 3009, column: 11, scope: !9667)
!9669 = !DILocation(line: 3009, column: 44, scope: !9667)
!9670 = !DILocation(line: 3009, column: 3, scope: !9667)
!9671 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9567, file: !9567, line: 2987, type: !3089, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9672 = !DILocation(line: 2989, column: 3, scope: !9671)
!9673 = !DILocation(line: 2990, column: 1, scope: !9671)
!9674 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9567, file: !9567, line: 2939, type: !3089, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9675 = !DILocation(line: 2941, column: 3, scope: !9674)
!9676 = !DILocation(line: 2942, column: 1, scope: !9674)
!9677 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9567, file: !9567, line: 2949, type: !3089, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9678 = !DILocation(line: 2951, column: 3, scope: !9677)
!9679 = !DILocation(line: 2952, column: 1, scope: !9677)
!9680 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9567, file: !9567, line: 2969, type: !6340, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9681 = !DILocation(line: 2971, column: 11, scope: !9680)
!9682 = !DILocation(line: 2971, column: 44, scope: !9680)
!9683 = !DILocation(line: 2971, column: 3, scope: !9680)
!9684 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9567, file: !9567, line: 3143, type: !3089, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9685 = !DILocation(line: 3145, column: 3, scope: !9684)
!9686 = !DILocation(line: 3146, column: 1, scope: !9684)
!9687 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9567, file: !9567, line: 3163, type: !6340, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !2166)
!9688 = !DILocation(line: 3165, column: 11, scope: !9687)
!9689 = !DILocation(line: 3165, column: 46, scope: !9687)
!9690 = !DILocation(line: 3165, column: 3, scope: !9687)
!9691 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9692, file: !9692, line: 40, type: !6340, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !2166)
!9692 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9693 = !DILocation(line: 45, column: 3, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9695, file: !9692, line: 44, column: 44)
!9695 = distinct !DILexicalBlock(scope: !9696, file: !9692, line: 44, column: 13)
!9696 = distinct !DILexicalBlock(scope: !9691, file: !9692, line: 42, column: 6)
!9697 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9692, file: !9692, line: 56, type: !3089, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !2166)
!9698 = !DILocation(line: 58, column: 2, scope: !9697)
!9699 = !DILocation(line: 62, column: 1, scope: !9697)
!9700 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9567, file: !9567, line: 4304, type: !9701, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !9703)
!9701 = !DISubroutineType(types: !9702)
!9702 = !{null, !152, !152, !152, !152}
!9703 = !{!9704, !9705, !9706, !9707}
!9704 = !DILocalVariable(name: "Source", arg: 1, scope: !9700, file: !9567, line: 4304, type: !152)
!9705 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9700, file: !9567, line: 4304, type: !152)
!9706 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9700, file: !9567, line: 4304, type: !152)
!9707 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9700, file: !9567, line: 4304, type: !152)
!9708 = !DILocation(line: 0, scope: !9700)
!9709 = !DILocation(line: 4306, column: 3, scope: !9700)
!9710 = !DILocation(line: 4308, column: 3, scope: !9700)
!9711 = !DILocation(line: 4312, column: 1, scope: !9700)
!9712 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9692, file: !9692, line: 69, type: !3089, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !2166)
!9713 = !DILocation(line: 72, column: 2, scope: !9712)
!9714 = !DILocation(line: 73, column: 1, scope: !9712)
!9715 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9716, file: !9716, line: 1185, type: !6350, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !9717)
!9716 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9717 = !{!9718, !9719}
!9718 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9715, file: !9716, line: 1185, type: !152)
!9719 = !DILocalVariable(name: "tmpreg", scope: !9715, file: !9716, line: 1187, type: !227)
!9720 = !DILocation(line: 0, scope: !9715)
!9721 = !DILocation(line: 1187, column: 3, scope: !9715)
!9722 = !DILocation(line: 1187, column: 17, scope: !9715)
!9723 = !DILocation(line: 1188, column: 3, scope: !9715)
!9724 = !DILocation(line: 1190, column: 12, scope: !9715)
!9725 = !DILocation(line: 1190, column: 10, scope: !9715)
!9726 = !DILocation(line: 1191, column: 9, scope: !9715)
!9727 = !DILocation(line: 1192, column: 1, scope: !9715)
!9728 = distinct !DISubprogram(name: "uart_console_init", scope: !1151, file: !1151, line: 588, type: !1128, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9729)
!9729 = !{!9730}
!9730 = !DILocalVariable(name: "arg", arg: 1, scope: !9728, file: !1151, line: 588, type: !1106)
!9731 = !DILocation(line: 0, scope: !9728)
!9732 = !DILocation(line: 593, column: 7, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9728, file: !1151, line: 593, column: 6)
!9734 = !DILocation(line: 593, column: 6, scope: !9728)
!9735 = !DILocation(line: 597, column: 2, scope: !9728)
!9736 = !DILocation(line: 599, column: 2, scope: !9728)
!9737 = !DILocation(line: 600, column: 1, scope: !9728)
!9738 = distinct !DISubprogram(name: "device_is_ready", scope: !9739, file: !9739, line: 47, type: !9740, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9742)
!9739 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!9740 = !DISubroutineType(types: !9741)
!9741 = !{!145, !1106}
!9742 = !{!9743}
!9743 = !DILocalVariable(name: "dev", arg: 1, scope: !9738, file: !9739, line: 47, type: !1106)
!9744 = !DILocation(line: 0, scope: !9738)
!9745 = !DILocation(line: 55, column: 2, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9738, file: !9739, line: 55, column: 2)
!9747 = !{i64 2155055672}
!9748 = !DILocation(line: 56, column: 9, scope: !9738)
!9749 = !DILocation(line: 56, column: 2, scope: !9738)
!9750 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1151, file: !1151, line: 573, type: !3089, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !2166)
!9751 = !DILocation(line: 576, column: 2, scope: !9750)
!9752 = !DILocation(line: 579, column: 2, scope: !9750)
!9753 = !DILocation(line: 581, column: 1, scope: !9750)
!9754 = distinct !DISubprogram(name: "console_out", scope: !1151, file: !1151, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9755)
!9755 = !{!9756}
!9756 = !DILocalVariable(name: "c", arg: 1, scope: !9754, file: !1151, line: 77, type: !107)
!9757 = !DILocation(line: 0, scope: !9754)
!9758 = !DILocation(line: 89, column: 11, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9754, file: !1151, line: 89, column: 6)
!9760 = !DILocation(line: 89, column: 6, scope: !9754)
!9761 = !DILocation(line: 90, column: 3, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9759, file: !1151, line: 89, column: 17)
!9763 = !DILocation(line: 91, column: 2, scope: !9762)
!9764 = !DILocation(line: 92, column: 34, scope: !9754)
!9765 = !DILocation(line: 92, column: 2, scope: !9754)
!9766 = !DILocation(line: 94, column: 2, scope: !9754)
!9767 = distinct !DISubprogram(name: "uart_poll_out", scope: !9768, file: !9768, line: 95, type: !1124, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9769)
!9768 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/testsuite/integration")
!9769 = !{!9770, !9771}
!9770 = !DILocalVariable(name: "dev", arg: 1, scope: !9767, file: !9768, line: 95, type: !1106)
!9771 = !DILocalVariable(name: "out_char", arg: 2, scope: !9767, file: !9768, line: 95, type: !196)
!9772 = !DILocation(line: 0, scope: !9767)
!9773 = !DILocation(line: 105, column: 2, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9767, file: !9768, line: 105, column: 2)
!9775 = !{i64 2155139063}
!9776 = !DILocation(line: 106, column: 2, scope: !9767)
!9777 = !DILocation(line: 107, column: 1, scope: !9767)
!9778 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1100, file: !1100, line: 574, type: !1124, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9779)
!9779 = !{!9780, !9781, !9782}
!9780 = !DILocalVariable(name: "dev", arg: 1, scope: !9778, file: !1100, line: 574, type: !1106)
!9781 = !DILocalVariable(name: "out_char", arg: 2, scope: !9778, file: !1100, line: 575, type: !196)
!9782 = !DILocalVariable(name: "api", scope: !9778, file: !1100, line: 577, type: !1097)
!9783 = !DILocation(line: 0, scope: !9778)
!9784 = !DILocation(line: 578, column: 40, scope: !9778)
!9785 = !DILocation(line: 580, column: 7, scope: !9778)
!9786 = !DILocation(line: 580, column: 2, scope: !9778)
!9787 = !DILocation(line: 581, column: 1, scope: !9778)
!9788 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !9740, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9789)
!9789 = !{!9790}
!9790 = !DILocalVariable(name: "dev", arg: 1, scope: !9788, file: !247, line: 730, type: !1106)
!9791 = !DILocation(line: 0, scope: !9788)
!9792 = !DILocation(line: 732, column: 9, scope: !9788)
!9793 = !DILocation(line: 732, column: 2, scope: !9788)
!9794 = distinct !DISubprogram(name: "uart_register_input", scope: !1151, file: !1151, line: 560, type: !9795, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !9842)
!9795 = !DISubroutineType(types: !9796)
!9796 = !{null, !9797, !9797, !9839}
!9797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9798, size: 32)
!9798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !406, line: 2208, size: 160, elements: !9799)
!9799 = !{!9800}
!9800 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9798, file: !406, line: 2209, baseType: !9801, size: 160)
!9801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !406, line: 1709, size: 160, elements: !9802)
!9802 = !{!9803, !9816, !9820}
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9801, file: !406, line: 1710, baseType: !9804, size: 64)
!9804 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9805, line: 46, baseType: !9806)
!9805 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9805, line: 41, size: 64, elements: !9807)
!9807 = !{!9808, !9815}
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9806, file: !9805, line: 42, baseType: !9809, size: 32)
!9809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9810, size: 32)
!9810 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9805, line: 39, baseType: !9811)
!9811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9805, line: 35, size: 32, elements: !9812)
!9812 = !{!9813}
!9813 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9811, file: !9805, line: 36, baseType: !9814, size: 32)
!9814 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9805, line: 32, baseType: !152)
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9806, file: !9805, line: 43, baseType: !9809, size: 32, offset: 32)
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9801, file: !406, line: 1711, baseType: !9817, size: 32, offset: 64)
!9817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !9818)
!9818 = !{!9819}
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9817, file: !420, line: 52, baseType: !22, size: 32)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9801, file: !406, line: 1712, baseType: !9821, size: 64, offset: 96)
!9821 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !9822)
!9822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !9823)
!9823 = !{!9824}
!9824 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9822, file: !345, line: 232, baseType: !9825, size: 64)
!9825 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !9826)
!9826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !9827)
!9827 = !{!9828, !9834}
!9828 = !DIDerivedType(tag: DW_TAG_member, scope: !9826, file: !319, line: 38, baseType: !9829, size: 32)
!9829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9826, file: !319, line: 38, size: 32, elements: !9830)
!9830 = !{!9831, !9833}
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9829, file: !319, line: 39, baseType: !9832, size: 32)
!9832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9826, size: 32)
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9829, file: !319, line: 40, baseType: !9832, size: 32)
!9834 = !DIDerivedType(tag: DW_TAG_member, scope: !9826, file: !319, line: 42, baseType: !9835, size: 32, offset: 32)
!9835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9826, file: !319, line: 42, size: 32, elements: !9836)
!9836 = !{!9837, !9838}
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9835, file: !319, line: 43, baseType: !9832, size: 32)
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9835, file: !319, line: 44, baseType: !9832, size: 32)
!9839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9840, size: 32)
!9840 = !DISubroutineType(types: !9841)
!9841 = !{!195, !193, !195}
!9842 = !{!9843, !9844, !9845}
!9843 = !DILocalVariable(name: "avail", arg: 1, scope: !9794, file: !1151, line: 560, type: !9797)
!9844 = !DILocalVariable(name: "lines", arg: 2, scope: !9794, file: !1151, line: 560, type: !9797)
!9845 = !DILocalVariable(name: "completion", arg: 3, scope: !9794, file: !1151, line: 561, type: !9839)
!9846 = !DILocation(line: 0, scope: !9794)
!9847 = !DILocation(line: 566, column: 1, scope: !9794)
!9848 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1329, file: !1329, line: 523, type: !1187, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9849)
!9849 = !{!9850, !9851, !9852, !9853, !9854}
!9850 = !DILocalVariable(name: "dev", arg: 1, scope: !9848, file: !1329, line: 523, type: !1189)
!9851 = !DILocalVariable(name: "pin", arg: 2, scope: !9848, file: !1329, line: 524, type: !1204)
!9852 = !DILocalVariable(name: "flags", arg: 3, scope: !9848, file: !1329, line: 524, type: !1205)
!9853 = !DILocalVariable(name: "err", scope: !9848, file: !1329, line: 526, type: !107)
!9854 = !DILocalVariable(name: "pincfg", scope: !9848, file: !1329, line: 527, type: !107)
!9855 = !DILocation(line: 0, scope: !9848)
!9856 = !DILocation(line: 527, column: 2, scope: !9848)
!9857 = !DILocation(line: 532, column: 8, scope: !9848)
!9858 = !DILocation(line: 533, column: 10, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9848, file: !1329, line: 533, column: 6)
!9860 = !DILocation(line: 533, column: 6, scope: !9848)
!9861 = !DILocation(line: 543, column: 13, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9848, file: !1329, line: 543, column: 6)
!9863 = !DILocation(line: 543, column: 28, scope: !9862)
!9864 = !DILocation(line: 543, column: 6, scope: !9848)
!9865 = !DILocation(line: 544, column: 14, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9867, file: !1329, line: 544, column: 7)
!9867 = distinct !DILexicalBlock(scope: !9862, file: !1329, line: 543, column: 34)
!9868 = !DILocation(line: 544, column: 39, scope: !9866)
!9869 = !DILocation(line: 544, column: 7, scope: !9867)
!9870 = !DILocation(line: 545, column: 38, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9866, file: !1329, line: 544, column: 45)
!9872 = !DILocation(line: 545, column: 4, scope: !9871)
!9873 = !DILocation(line: 546, column: 3, scope: !9871)
!9874 = !DILocation(line: 546, column: 21, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9866, file: !1329, line: 546, column: 14)
!9876 = !DILocation(line: 546, column: 45, scope: !9875)
!9877 = !DILocation(line: 546, column: 14, scope: !9866)
!9878 = !DILocation(line: 547, column: 40, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9875, file: !1329, line: 546, column: 51)
!9880 = !DILocation(line: 547, column: 4, scope: !9879)
!9881 = !DILocation(line: 548, column: 3, scope: !9879)
!9882 = !DILocation(line: 551, column: 32, scope: !9848)
!9883 = !DILocation(line: 551, column: 37, scope: !9848)
!9884 = !DILocation(line: 551, column: 2, scope: !9848)
!9885 = !DILocation(line: 554, column: 6, scope: !9848)
!9886 = !DILocation(line: 562, column: 1, scope: !9848)
!9887 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1329, file: !1329, line: 410, type: !9888, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9890)
!9888 = !DISubroutineType(types: !9889)
!9889 = !{!107, !1189, !1016}
!9890 = !{!9891, !9892, !9893, !9895}
!9891 = !DILocalVariable(name: "dev", arg: 1, scope: !9887, file: !1329, line: 410, type: !1189)
!9892 = !DILocalVariable(name: "value", arg: 2, scope: !9887, file: !1329, line: 410, type: !1016)
!9893 = !DILocalVariable(name: "cfg", scope: !9887, file: !1329, line: 412, type: !9894)
!9894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!9895 = !DILocalVariable(name: "gpio", scope: !9887, file: !1329, line: 413, type: !1262)
!9896 = !DILocation(line: 0, scope: !9887)
!9897 = !DILocation(line: 412, column: 45, scope: !9887)
!9898 = !DILocation(line: 413, column: 44, scope: !9887)
!9899 = !DILocation(line: 415, column: 11, scope: !9887)
!9900 = !DILocation(line: 415, column: 9, scope: !9887)
!9901 = !DILocation(line: 417, column: 2, scope: !9887)
!9902 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1329, file: !1329, line: 420, type: !1214, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9903)
!9903 = !{!9904, !9905, !9906, !9907, !9908, !9909}
!9904 = !DILocalVariable(name: "dev", arg: 1, scope: !9902, file: !1329, line: 420, type: !1189)
!9905 = !DILocalVariable(name: "mask", arg: 2, scope: !9902, file: !1329, line: 421, type: !1216)
!9906 = !DILocalVariable(name: "value", arg: 3, scope: !9902, file: !1329, line: 422, type: !1211)
!9907 = !DILocalVariable(name: "cfg", scope: !9902, file: !1329, line: 424, type: !9894)
!9908 = !DILocalVariable(name: "gpio", scope: !9902, file: !1329, line: 425, type: !1262)
!9909 = !DILocalVariable(name: "port_value", scope: !9902, file: !1329, line: 426, type: !152)
!9910 = !DILocation(line: 0, scope: !9902)
!9911 = !DILocation(line: 424, column: 45, scope: !9902)
!9912 = !DILocation(line: 425, column: 44, scope: !9902)
!9913 = !DILocation(line: 430, column: 15, scope: !9902)
!9914 = !DILocation(line: 431, column: 46, scope: !9902)
!9915 = !DILocation(line: 431, column: 44, scope: !9902)
!9916 = !DILocation(line: 431, column: 61, scope: !9902)
!9917 = !DILocation(line: 431, column: 53, scope: !9902)
!9918 = !DILocation(line: 431, column: 2, scope: !9902)
!9919 = !DILocation(line: 435, column: 2, scope: !9902)
!9920 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1329, file: !1329, line: 438, type: !1219, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9921)
!9921 = !{!9922, !9923, !9924, !9925}
!9922 = !DILocalVariable(name: "dev", arg: 1, scope: !9920, file: !1329, line: 438, type: !1189)
!9923 = !DILocalVariable(name: "pins", arg: 2, scope: !9920, file: !1329, line: 439, type: !1216)
!9924 = !DILocalVariable(name: "cfg", scope: !9920, file: !1329, line: 441, type: !9894)
!9925 = !DILocalVariable(name: "gpio", scope: !9920, file: !1329, line: 442, type: !1262)
!9926 = !DILocation(line: 0, scope: !9920)
!9927 = !DILocation(line: 441, column: 45, scope: !9920)
!9928 = !DILocation(line: 442, column: 44, scope: !9920)
!9929 = !DILocation(line: 448, column: 2, scope: !9920)
!9930 = !DILocation(line: 450, column: 2, scope: !9920)
!9931 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1329, file: !1329, line: 453, type: !1219, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9932)
!9932 = !{!9933, !9934, !9935, !9936}
!9933 = !DILocalVariable(name: "dev", arg: 1, scope: !9931, file: !1329, line: 453, type: !1189)
!9934 = !DILocalVariable(name: "pins", arg: 2, scope: !9931, file: !1329, line: 454, type: !1216)
!9935 = !DILocalVariable(name: "cfg", scope: !9931, file: !1329, line: 456, type: !9894)
!9936 = !DILocalVariable(name: "gpio", scope: !9931, file: !1329, line: 457, type: !1262)
!9937 = !DILocation(line: 0, scope: !9931)
!9938 = !DILocation(line: 456, column: 45, scope: !9931)
!9939 = !DILocation(line: 457, column: 44, scope: !9931)
!9940 = !DILocation(line: 467, column: 2, scope: !9931)
!9941 = !DILocation(line: 470, column: 2, scope: !9931)
!9942 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1329, file: !1329, line: 473, type: !1219, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9943)
!9943 = !{!9944, !9945, !9946, !9947}
!9944 = !DILocalVariable(name: "dev", arg: 1, scope: !9942, file: !1329, line: 473, type: !1189)
!9945 = !DILocalVariable(name: "pins", arg: 2, scope: !9942, file: !1329, line: 474, type: !1216)
!9946 = !DILocalVariable(name: "cfg", scope: !9942, file: !1329, line: 476, type: !9894)
!9947 = !DILocalVariable(name: "gpio", scope: !9942, file: !1329, line: 477, type: !1262)
!9948 = !DILocation(line: 0, scope: !9942)
!9949 = !DILocation(line: 476, column: 45, scope: !9942)
!9950 = !DILocation(line: 477, column: 44, scope: !9942)
!9951 = !DILocation(line: 484, column: 2, scope: !9942)
!9952 = !DILocation(line: 487, column: 2, scope: !9942)
!9953 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1329, file: !1329, line: 594, type: !1225, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9954)
!9954 = !{!9955, !9956, !9957, !9958, !9959, !9960, !9962, !9963, !9964}
!9955 = !DILocalVariable(name: "dev", arg: 1, scope: !9953, file: !1329, line: 594, type: !1189)
!9956 = !DILocalVariable(name: "pin", arg: 2, scope: !9953, file: !1329, line: 595, type: !1204)
!9957 = !DILocalVariable(name: "mode", arg: 3, scope: !9953, file: !1329, line: 596, type: !1163)
!9958 = !DILocalVariable(name: "trig", arg: 4, scope: !9953, file: !1329, line: 597, type: !1169)
!9959 = !DILocalVariable(name: "cfg", scope: !9953, file: !1329, line: 599, type: !9894)
!9960 = !DILocalVariable(name: "data", scope: !9953, file: !1329, line: 600, type: !9961)
!9961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!9962 = !DILocalVariable(name: "edge", scope: !9953, file: !1329, line: 601, type: !107)
!9963 = !DILocalVariable(name: "err", scope: !9953, file: !1329, line: 602, type: !107)
!9964 = !DILabel(scope: !9953, name: "exit", file: !1329, line: 643)
!9965 = !DILocation(line: 0, scope: !9953)
!9966 = !DILocation(line: 599, column: 45, scope: !9953)
!9967 = !DILocation(line: 604, column: 6, scope: !9953)
!9968 = !DILocation(line: 605, column: 34, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !1329, line: 605, column: 7)
!9970 = distinct !DILexicalBlock(scope: !9971, file: !1329, line: 604, column: 38)
!9971 = distinct !DILexicalBlock(scope: !9953, file: !1329, line: 604, column: 6)
!9972 = !DILocation(line: 605, column: 7, scope: !9969)
!9973 = !DILocation(line: 605, column: 47, scope: !9969)
!9974 = !DILocation(line: 605, column: 39, scope: !9969)
!9975 = !DILocation(line: 605, column: 7, scope: !9970)
!9976 = !DILocation(line: 606, column: 4, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9969, file: !1329, line: 605, column: 53)
!9978 = !DILocation(line: 607, column: 4, scope: !9977)
!9979 = !DILocation(line: 608, column: 4, scope: !9977)
!9980 = !DILocation(line: 609, column: 3, scope: !9977)
!9981 = !DILocation(line: 600, column: 38, scope: !9953)
!9982 = !DILocation(line: 620, column: 30, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9953, file: !1329, line: 620, column: 6)
!9984 = !DILocation(line: 620, column: 6, scope: !9983)
!9985 = !DILocation(line: 620, column: 57, scope: !9983)
!9986 = !DILocation(line: 620, column: 6, scope: !9953)
!9987 = !DILocation(line: 625, column: 29, scope: !9953)
!9988 = !DILocation(line: 625, column: 2, scope: !9953)
!9989 = !DILocation(line: 627, column: 2, scope: !9953)
!9990 = !DILocation(line: 630, column: 3, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9953, file: !1329, line: 627, column: 16)
!9992 = !DILocation(line: 633, column: 3, scope: !9991)
!9993 = !DILocation(line: 636, column: 3, scope: !9991)
!9994 = !DILocation(line: 639, column: 2, scope: !9953)
!9995 = !DILocation(line: 641, column: 2, scope: !9953)
!9996 = !DILocation(line: 643, column: 1, scope: !9953)
!9997 = !DILocation(line: 644, column: 2, scope: !9953)
!9998 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1329, file: !1329, line: 647, type: !1229, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !9999)
!9999 = !{!10000, !10001, !10002, !10003}
!10000 = !DILocalVariable(name: "dev", arg: 1, scope: !9998, file: !1329, line: 647, type: !1189)
!10001 = !DILocalVariable(name: "callback", arg: 2, scope: !9998, file: !1329, line: 648, type: !1231)
!10002 = !DILocalVariable(name: "set", arg: 3, scope: !9998, file: !1329, line: 649, type: !145)
!10003 = !DILocalVariable(name: "data", scope: !9998, file: !1329, line: 651, type: !9961)
!10004 = !DILocation(line: 0, scope: !9998)
!10005 = !DILocation(line: 651, column: 38, scope: !9998)
!10006 = !DILocation(line: 653, column: 37, scope: !9998)
!10007 = !DILocation(line: 653, column: 9, scope: !9998)
!10008 = !DILocation(line: 653, column: 2, scope: !9998)
!10009 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10010, file: !10010, line: 38, type: !10011, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10014)
!10010 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10011 = !DISubroutineType(types: !10012)
!10012 = !{!107, !10013, !1231, !145}
!10013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!10014 = !{!10015, !10016, !10017}
!10015 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10009, file: !10010, line: 38, type: !10013)
!10016 = !DILocalVariable(name: "callback", arg: 2, scope: !10009, file: !10010, line: 39, type: !1231)
!10017 = !DILocalVariable(name: "set", arg: 3, scope: !10009, file: !10010, line: 40, type: !145)
!10018 = !DILocation(line: 0, scope: !10009)
!10019 = !DILocation(line: 42, column: 2, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10021, file: !10010, line: 42, column: 2)
!10021 = distinct !DILexicalBlock(scope: !10009, file: !10010, line: 42, column: 2)
!10022 = !DILocation(line: 42, column: 2, scope: !10021)
!10023 = !DILocation(line: 42, column: 2, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10020, file: !10010, line: 42, column: 2)
!10025 = !DILocation(line: 43, column: 2, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !10010, line: 43, column: 2)
!10027 = distinct !DILexicalBlock(scope: !10009, file: !10010, line: 43, column: 2)
!10028 = !DILocation(line: 43, column: 2, scope: !10027)
!10029 = !DILocation(line: 43, column: 2, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10026, file: !10010, line: 43, column: 2)
!10031 = !DILocation(line: 45, column: 7, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10009, file: !10010, line: 45, column: 6)
!10033 = !DILocation(line: 45, column: 6, scope: !10009)
!10034 = !DILocation(line: 46, column: 56, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10036, file: !10010, line: 46, column: 7)
!10036 = distinct !DILexicalBlock(scope: !10032, file: !10010, line: 45, column: 38)
!10037 = !DILocation(line: 46, column: 8, scope: !10035)
!10038 = !DILocation(line: 46, column: 7, scope: !10036)
!10039 = !DILocation(line: 51, column: 13, scope: !10032)
!10040 = !DILocation(line: 56, column: 43, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10042, file: !10010, line: 55, column: 11)
!10042 = distinct !DILexicalBlock(scope: !10009, file: !10010, line: 55, column: 6)
!10043 = !DILocation(line: 56, column: 3, scope: !10041)
!10044 = !DILocation(line: 57, column: 2, scope: !10041)
!10045 = !DILocation(line: 60, column: 1, scope: !10009)
!10046 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1236, file: !1236, line: 261, type: !10047, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10049)
!10047 = !DISubroutineType(types: !10048)
!10048 = !{!145, !10013}
!10049 = !{!10050}
!10050 = !DILocalVariable(name: "list", arg: 1, scope: !10046, file: !1236, line: 261, type: !10013)
!10051 = !DILocation(line: 0, scope: !10046)
!10052 = !DILocation(line: 261, column: 1, scope: !10046)
!10053 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1236, file: !1236, line: 417, type: !10054, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10056)
!10054 = !DISubroutineType(types: !10055)
!10055 = !{!145, !10013, !1408}
!10056 = !{!10057, !10058, !10059, !10060}
!10057 = !DILocalVariable(name: "list", arg: 1, scope: !10053, file: !1236, line: 417, type: !10013)
!10058 = !DILocalVariable(name: "node", arg: 2, scope: !10053, file: !1236, line: 417, type: !1408)
!10059 = !DILocalVariable(name: "prev", scope: !10053, file: !1236, line: 417, type: !1408)
!10060 = !DILocalVariable(name: "test", scope: !10053, file: !1236, line: 417, type: !1408)
!10061 = !DILocation(line: 0, scope: !10053)
!10062 = !DILocation(line: 417, column: 1, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10053, file: !1236, line: 417, column: 1)
!10064 = !DILocation(line: 417, column: 1, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10063, file: !1236, line: 417, column: 1)
!10066 = !DILocation(line: 417, column: 1, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10068, file: !1236, line: 417, column: 1)
!10068 = distinct !DILexicalBlock(scope: !10065, file: !1236, line: 417, column: 1)
!10069 = !DILocation(line: 417, column: 1, scope: !10068)
!10070 = distinct !{!10070, !10062, !10062}
!10071 = !DILocation(line: 417, column: 1, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10067, file: !1236, line: 417, column: 1)
!10073 = !DILocation(line: 417, column: 1, scope: !10053)
!10074 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1236, file: !1236, line: 298, type: !10075, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10077)
!10075 = !DISubroutineType(types: !10076)
!10076 = !{null, !10013, !1408}
!10077 = !{!10078, !10079}
!10078 = !DILocalVariable(name: "list", arg: 1, scope: !10074, file: !1236, line: 298, type: !10013)
!10079 = !DILocalVariable(name: "node", arg: 2, scope: !10074, file: !1236, line: 298, type: !1408)
!10080 = !DILocation(line: 0, scope: !10074)
!10081 = !DILocation(line: 298, column: 1, scope: !10074)
!10082 = !DILocation(line: 298, column: 1, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10074, file: !1236, line: 298, column: 1)
!10084 = !DILocation(line: 298, column: 1, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10083, file: !1236, line: 298, column: 1)
!10086 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1236, file: !1236, line: 231, type: !10087, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10089)
!10087 = !DISubroutineType(types: !10088)
!10088 = !{!1408, !10013}
!10089 = !{!10090}
!10090 = !DILocalVariable(name: "list", arg: 1, scope: !10086, file: !1236, line: 231, type: !10013)
!10091 = !DILocation(line: 0, scope: !10086)
!10092 = !DILocation(line: 233, column: 15, scope: !10086)
!10093 = !DILocation(line: 233, column: 2, scope: !10086)
!10094 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1236, file: !1236, line: 209, type: !10095, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10097)
!10095 = !DISubroutineType(types: !10096)
!10096 = !{null, !1408, !1408}
!10097 = !{!10098, !10099}
!10098 = !DILocalVariable(name: "parent", arg: 1, scope: !10094, file: !1236, line: 209, type: !1408)
!10099 = !DILocalVariable(name: "child", arg: 2, scope: !10094, file: !1236, line: 209, type: !1408)
!10100 = !DILocation(line: 0, scope: !10094)
!10101 = !DILocation(line: 211, column: 10, scope: !10094)
!10102 = !DILocation(line: 211, column: 15, scope: !10094)
!10103 = !DILocation(line: 212, column: 1, scope: !10094)
!10104 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1236, file: !1236, line: 214, type: !10075, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10105)
!10105 = !{!10106, !10107}
!10106 = !DILocalVariable(name: "list", arg: 1, scope: !10104, file: !1236, line: 214, type: !10013)
!10107 = !DILocalVariable(name: "node", arg: 2, scope: !10104, file: !1236, line: 214, type: !1408)
!10108 = !DILocation(line: 0, scope: !10104)
!10109 = !DILocation(line: 216, column: 8, scope: !10104)
!10110 = !DILocation(line: 216, column: 13, scope: !10104)
!10111 = !DILocation(line: 217, column: 1, scope: !10104)
!10112 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1236, file: !1236, line: 243, type: !10087, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10113)
!10113 = !{!10114}
!10114 = !DILocalVariable(name: "list", arg: 1, scope: !10112, file: !1236, line: 243, type: !10013)
!10115 = !DILocation(line: 0, scope: !10112)
!10116 = !DILocation(line: 245, column: 15, scope: !10112)
!10117 = !DILocation(line: 245, column: 2, scope: !10112)
!10118 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1236, file: !1236, line: 219, type: !10075, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10119)
!10119 = !{!10120, !10121}
!10120 = !DILocalVariable(name: "list", arg: 1, scope: !10118, file: !1236, line: 219, type: !10013)
!10121 = !DILocalVariable(name: "node", arg: 2, scope: !10118, file: !1236, line: 219, type: !1408)
!10122 = !DILocation(line: 0, scope: !10118)
!10123 = !DILocation(line: 221, column: 8, scope: !10118)
!10124 = !DILocation(line: 221, column: 13, scope: !10118)
!10125 = !DILocation(line: 222, column: 1, scope: !10118)
!10126 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1236, file: !1236, line: 401, type: !10127, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10129)
!10127 = !DISubroutineType(types: !10128)
!10128 = !{null, !10013, !1408, !1408}
!10129 = !{!10130, !10131, !10132}
!10130 = !DILocalVariable(name: "list", arg: 1, scope: !10126, file: !1236, line: 401, type: !10013)
!10131 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10126, file: !1236, line: 401, type: !1408)
!10132 = !DILocalVariable(name: "node", arg: 3, scope: !10126, file: !1236, line: 401, type: !1408)
!10133 = !DILocation(line: 0, scope: !10126)
!10134 = !DILocation(line: 401, column: 1, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10126, file: !1236, line: 401, column: 1)
!10136 = !DILocation(line: 0, scope: !10135)
!10137 = !DILocation(line: 401, column: 1, scope: !10126)
!10138 = !DILocation(line: 401, column: 1, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10135, file: !1236, line: 401, column: 1)
!10140 = !DILocation(line: 401, column: 1, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10139, file: !1236, line: 401, column: 1)
!10142 = !DILocation(line: 401, column: 1, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10141, file: !1236, line: 401, column: 1)
!10144 = !DILocation(line: 401, column: 1, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10135, file: !1236, line: 401, column: 1)
!10146 = !DILocation(line: 401, column: 1, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10145, file: !1236, line: 401, column: 1)
!10148 = !DILocation(line: 401, column: 1, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10147, file: !1236, line: 401, column: 1)
!10150 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1236, file: !1236, line: 285, type: !10151, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10153)
!10151 = !DISubroutineType(types: !10152)
!10152 = !{!1408, !1408}
!10153 = !{!10154}
!10154 = !DILocalVariable(name: "node", arg: 1, scope: !10150, file: !1236, line: 285, type: !1408)
!10155 = !DILocation(line: 0, scope: !10150)
!10156 = !DILocation(line: 285, column: 1, scope: !10150)
!10157 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1236, file: !1236, line: 274, type: !10151, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10158)
!10158 = !{!10159}
!10159 = !DILocalVariable(name: "node", arg: 1, scope: !10157, file: !1236, line: 274, type: !1408)
!10160 = !DILocation(line: 0, scope: !10157)
!10161 = !DILocation(line: 274, column: 1, scope: !10157)
!10162 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1236, file: !1236, line: 204, type: !10151, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10163)
!10163 = !{!10164}
!10164 = !DILocalVariable(name: "node", arg: 1, scope: !10162, file: !1236, line: 204, type: !1408)
!10165 = !DILocation(line: 0, scope: !10162)
!10166 = !DILocation(line: 206, column: 15, scope: !10162)
!10167 = !DILocation(line: 206, column: 2, scope: !10162)
!10168 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1329, file: !1329, line: 342, type: !214, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10169)
!10169 = !{!10170, !10171, !10172}
!10170 = !DILocalVariable(name: "pin", arg: 1, scope: !10168, file: !1329, line: 342, type: !107)
!10171 = !DILocalVariable(name: "line", scope: !10168, file: !1329, line: 344, type: !152)
!10172 = !DILocalVariable(name: "port", scope: !10168, file: !1329, line: 345, type: !107)
!10173 = !DILocation(line: 0, scope: !10168)
!10174 = !DILocation(line: 344, column: 18, scope: !10168)
!10175 = !{i32 983040, i32 0}
!10176 = !DILocation(line: 356, column: 9, scope: !10168)
!10177 = !DILocation(line: 370, column: 2, scope: !10168)
!10178 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1329, file: !1329, line: 37, type: !879, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10179)
!10179 = !{!10180, !10181, !10182}
!10180 = !DILocalVariable(name: "line", arg: 1, scope: !10178, file: !1329, line: 37, type: !107)
!10181 = !DILocalVariable(name: "arg", arg: 2, scope: !10178, file: !1329, line: 37, type: !106)
!10182 = !DILocalVariable(name: "data", scope: !10178, file: !1329, line: 39, type: !9961)
!10183 = !DILocation(line: 0, scope: !10178)
!10184 = !DILocation(line: 41, column: 29, scope: !10178)
!10185 = !DILocation(line: 41, column: 39, scope: !10178)
!10186 = !DILocation(line: 41, column: 44, scope: !10178)
!10187 = !DILocation(line: 41, column: 2, scope: !10178)
!10188 = !DILocation(line: 42, column: 1, scope: !10178)
!10189 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1329, file: !1329, line: 376, type: !10190, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10192)
!10190 = !DISubroutineType(types: !10191)
!10191 = !{!107, !107, !107}
!10192 = !{!10193, !10194, !10195, !10197, !10198}
!10193 = !DILocalVariable(name: "port", arg: 1, scope: !10189, file: !1329, line: 376, type: !107)
!10194 = !DILocalVariable(name: "pin", arg: 2, scope: !10189, file: !1329, line: 376, type: !107)
!10195 = !DILocalVariable(name: "clk", scope: !10189, file: !1329, line: 386, type: !10196)
!10196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1189)
!10197 = !DILocalVariable(name: "pclken", scope: !10189, file: !1329, line: 387, type: !1455)
!10198 = !DILocalVariable(name: "ret", scope: !10189, file: !1329, line: 396, type: !107)
!10199 = !DILocation(line: 0, scope: !10189)
!10200 = !DILocation(line: 387, column: 2, scope: !10189)
!10201 = !DILocation(line: 387, column: 22, scope: !10189)
!10202 = !DILocation(line: 399, column: 8, scope: !10189)
!10203 = !DILocation(line: 400, column: 10, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10189, file: !1329, line: 400, column: 6)
!10205 = !DILocation(line: 400, column: 6, scope: !10189)
!10206 = !DILocation(line: 405, column: 2, scope: !10189)
!10207 = !DILocation(line: 407, column: 2, scope: !10189)
!10208 = !DILocation(line: 408, column: 1, scope: !10189)
!10209 = distinct !DISubprogram(name: "clock_control_on", scope: !968, file: !968, line: 123, type: !1294, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10210)
!10210 = !{!10211, !10212, !10213}
!10211 = !DILocalVariable(name: "dev", arg: 1, scope: !10209, file: !968, line: 123, type: !1189)
!10212 = !DILocalVariable(name: "sys", arg: 2, scope: !10209, file: !968, line: 124, type: !1060)
!10213 = !DILocalVariable(name: "api", scope: !10209, file: !968, line: 126, type: !1287)
!10214 = !DILocation(line: 0, scope: !10209)
!10215 = !DILocation(line: 127, column: 49, scope: !10209)
!10216 = !DILocation(line: 129, column: 14, scope: !10209)
!10217 = !DILocation(line: 129, column: 9, scope: !10209)
!10218 = !DILocation(line: 129, column: 2, scope: !10209)
!10219 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1329, file: !1329, line: 311, type: !9324, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10220)
!10220 = !{!10221, !10222, !10223}
!10221 = !DILocalVariable(name: "port", arg: 1, scope: !10219, file: !1329, line: 311, type: !107)
!10222 = !DILocalVariable(name: "pin", arg: 2, scope: !10219, file: !1329, line: 311, type: !107)
!10223 = !DILocalVariable(name: "line", scope: !10219, file: !1329, line: 313, type: !152)
!10224 = !DILocation(line: 0, scope: !10219)
!10225 = !DILocation(line: 313, column: 18, scope: !10219)
!10226 = !DILocation(line: 337, column: 2, scope: !10219)
!10227 = !DILocation(line: 340, column: 1, scope: !10219)
!10228 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1329, file: !1329, line: 295, type: !10229, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10231)
!10229 = !DISubroutineType(types: !10230)
!10230 = !{!152, !107}
!10231 = !{!10232}
!10232 = !DILocalVariable(name: "pin", arg: 1, scope: !10228, file: !1329, line: 295, type: !107)
!10233 = !DILocation(line: 0, scope: !10228)
!10234 = !DILocation(line: 307, column: 46, scope: !10228)
!10235 = !DILocation(line: 307, column: 27, scope: !10228)
!10236 = !DILocation(line: 307, column: 32, scope: !10228)
!10237 = !DILocation(line: 307, column: 14, scope: !10228)
!10238 = !DILocation(line: 307, column: 39, scope: !10228)
!10239 = !DILocation(line: 307, column: 2, scope: !10228)
!10240 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5955, file: !5955, line: 671, type: !10241, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10243)
!10241 = !DISubroutineType(types: !10242)
!10242 = !{null, !152, !152}
!10243 = !{!10244, !10245}
!10244 = !DILocalVariable(name: "Port", arg: 1, scope: !10240, file: !5955, line: 671, type: !152)
!10245 = !DILocalVariable(name: "Line", arg: 2, scope: !10240, file: !5955, line: 671, type: !152)
!10246 = !DILocation(line: 0, scope: !10240)
!10247 = !DILocation(line: 673, column: 3, scope: !10240)
!10248 = !DILocalVariable(name: "value", arg: 1, scope: !10249, file: !6253, line: 373, type: !152)
!10249 = distinct !DISubprogram(name: "__RBIT", scope: !6253, file: !6253, line: 373, type: !7540, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10250)
!10250 = !{!10248, !10251}
!10251 = !DILocalVariable(name: "result", scope: !10249, file: !6253, line: 375, type: !152)
!10252 = !DILocation(line: 0, scope: !10249, inlinedAt: !10253)
!10253 = distinct !DILocation(line: 673, column: 3, scope: !10240)
!10254 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10253)
!10255 = !{i64 3550324}
!10256 = !DILocalVariable(name: "value", arg: 1, scope: !10257, file: !6253, line: 403, type: !152)
!10257 = distinct !DISubprogram(name: "__CLZ", scope: !6253, file: !6253, line: 403, type: !10258, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10260)
!10258 = !DISubroutineType(types: !10259)
!10259 = !{!195, !152}
!10260 = !{!10256}
!10261 = !DILocation(line: 0, scope: !10257, inlinedAt: !10262)
!10262 = distinct !DILocation(line: 673, column: 3, scope: !10240)
!10263 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10262)
!10264 = !DILocation(line: 674, column: 1, scope: !10240)
!10265 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10010, file: !10010, line: 69, type: !10266, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10268)
!10266 = !DISubroutineType(types: !10267)
!10267 = !{null, !10013, !1189, !152}
!10268 = !{!10269, !10270, !10271, !10272, !10273}
!10269 = !DILocalVariable(name: "list", arg: 1, scope: !10265, file: !10010, line: 69, type: !10013)
!10270 = !DILocalVariable(name: "port", arg: 2, scope: !10265, file: !10010, line: 70, type: !1189)
!10271 = !DILocalVariable(name: "pins", arg: 3, scope: !10265, file: !10010, line: 71, type: !152)
!10272 = !DILocalVariable(name: "cb", scope: !10265, file: !10010, line: 73, type: !1231)
!10273 = !DILocalVariable(name: "tmp", scope: !10265, file: !10010, line: 73, type: !1231)
!10274 = !DILocation(line: 0, scope: !10265)
!10275 = !DILocation(line: 75, column: 2, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10265, file: !10010, line: 75, column: 2)
!10277 = !DILocation(line: 0, scope: !10276)
!10278 = !DILocation(line: 76, column: 11, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10280, file: !10010, line: 76, column: 7)
!10280 = distinct !DILexicalBlock(scope: !10281, file: !10010, line: 75, column: 57)
!10281 = distinct !DILexicalBlock(scope: !10276, file: !10010, line: 75, column: 2)
!10282 = !DILocation(line: 76, column: 20, scope: !10279)
!10283 = !DILocation(line: 76, column: 7, scope: !10280)
!10284 = !DILocation(line: 77, column: 4, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10286, file: !10010, line: 77, column: 4)
!10286 = distinct !DILexicalBlock(scope: !10287, file: !10010, line: 77, column: 4)
!10287 = distinct !DILexicalBlock(scope: !10279, file: !10010, line: 76, column: 28)
!10288 = !DILocation(line: 77, column: 4, scope: !10286)
!10289 = !DILocation(line: 77, column: 4, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10285, file: !10010, line: 77, column: 4)
!10291 = !DILocation(line: 78, column: 4, scope: !10287)
!10292 = !DILocation(line: 79, column: 3, scope: !10287)
!10293 = !DILocation(line: 75, column: 2, scope: !10281)
!10294 = !DILocation(line: 81, column: 1, scope: !10265)
!10295 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5955, file: !5955, line: 710, type: !7540, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10296)
!10296 = !{!10297}
!10297 = !DILocalVariable(name: "Line", arg: 1, scope: !10295, file: !5955, line: 710, type: !152)
!10298 = !DILocation(line: 0, scope: !10295)
!10299 = !DILocation(line: 712, column: 21, scope: !10295)
!10300 = !DILocation(line: 0, scope: !10249, inlinedAt: !10301)
!10301 = distinct !DILocation(line: 712, column: 76, scope: !10295)
!10302 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10301)
!10303 = !DILocation(line: 0, scope: !10257, inlinedAt: !10304)
!10304 = distinct !DILocation(line: 712, column: 76, scope: !10295)
!10305 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10304)
!10306 = !DILocation(line: 712, column: 73, scope: !10295)
!10307 = !DILocation(line: 712, column: 3, scope: !10295)
!10308 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10309, file: !10309, line: 910, type: !10310, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10312)
!10309 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10310 = !DISubroutineType(types: !10311)
!10311 = !{null, !1262, !152}
!10312 = !{!10313, !10314}
!10313 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10308, file: !10309, line: 910, type: !1262)
!10314 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10308, file: !10309, line: 910, type: !152)
!10315 = !DILocation(line: 0, scope: !10308)
!10316 = !DILocation(line: 912, column: 3, scope: !10308)
!10317 = !DILocation(line: 913, column: 1, scope: !10308)
!10318 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10309, file: !10309, line: 823, type: !10319, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10321)
!10319 = !DISubroutineType(types: !10320)
!10320 = !{!152, !1262}
!10321 = !{!10322}
!10322 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10318, file: !10309, line: 823, type: !1262)
!10323 = !DILocation(line: 0, scope: !10318)
!10324 = !DILocation(line: 825, column: 21, scope: !10318)
!10325 = !DILocation(line: 825, column: 3, scope: !10318)
!10326 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10309, file: !10309, line: 812, type: !10310, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10327)
!10327 = !{!10328, !10329}
!10328 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10326, file: !10309, line: 812, type: !1262)
!10329 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10326, file: !10309, line: 812, type: !152)
!10330 = !DILocation(line: 0, scope: !10326)
!10331 = !DILocation(line: 814, column: 3, scope: !10326)
!10332 = !DILocation(line: 815, column: 1, scope: !10326)
!10333 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10309, file: !10309, line: 771, type: !10319, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10334)
!10334 = !{!10335}
!10335 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10333, file: !10309, line: 771, type: !1262)
!10336 = !DILocation(line: 0, scope: !10333)
!10337 = !DILocation(line: 773, column: 21, scope: !10333)
!10338 = !DILocation(line: 773, column: 3, scope: !10333)
!10339 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1329, file: !1329, line: 47, type: !10340, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10342)
!10340 = !DISubroutineType(types: !10341)
!10341 = !{!107, !1205, !187}
!10342 = !{!10343, !10344}
!10343 = !DILocalVariable(name: "flags", arg: 1, scope: !10339, file: !1329, line: 47, type: !1205)
!10344 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10339, file: !1329, line: 47, type: !187)
!10345 = !DILocation(line: 0, scope: !10339)
!10346 = !DILocation(line: 50, column: 13, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10339, file: !1329, line: 50, column: 6)
!10348 = !DILocation(line: 50, column: 28, scope: !10347)
!10349 = !DILocation(line: 50, column: 6, scope: !10339)
!10350 = !DILocation(line: 53, column: 11, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10347, file: !1329, line: 50, column: 34)
!10352 = !DILocation(line: 55, column: 14, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10351, file: !1329, line: 55, column: 7)
!10354 = !DILocation(line: 55, column: 35, scope: !10353)
!10355 = !DILocation(line: 55, column: 7, scope: !10351)
!10356 = !DILocation(line: 56, column: 14, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10358, file: !1329, line: 56, column: 8)
!10358 = distinct !DILexicalBlock(scope: !10353, file: !1329, line: 55, column: 41)
!10359 = !DILocation(line: 56, column: 8, scope: !10358)
!10360 = !DILocation(line: 0, scope: !10353)
!10361 = !DILocation(line: 66, column: 14, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10351, file: !1329, line: 66, column: 7)
!10363 = !DILocation(line: 66, column: 30, scope: !10362)
!10364 = !DILocation(line: 66, column: 7, scope: !10351)
!10365 = !DILocation(line: 67, column: 12, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10362, file: !1329, line: 66, column: 36)
!10367 = !DILocation(line: 68, column: 3, scope: !10366)
!10368 = !DILocation(line: 68, column: 21, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10362, file: !1329, line: 68, column: 14)
!10370 = !DILocation(line: 68, column: 39, scope: !10369)
!10371 = !DILocation(line: 68, column: 14, scope: !10362)
!10372 = !DILocation(line: 69, column: 12, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10369, file: !1329, line: 68, column: 45)
!10374 = !DILocation(line: 70, column: 3, scope: !10373)
!10375 = !DILocation(line: 72, column: 21, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10347, file: !1329, line: 72, column: 14)
!10377 = !DILocation(line: 72, column: 35, scope: !10376)
!10378 = !DILocation(line: 72, column: 14, scope: !10347)
!10379 = !DILocation(line: 77, column: 14, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10381, file: !1329, line: 77, column: 7)
!10381 = distinct !DILexicalBlock(scope: !10376, file: !1329, line: 72, column: 41)
!10382 = !DILocation(line: 77, column: 30, scope: !10380)
!10383 = !DILocation(line: 77, column: 7, scope: !10381)
!10384 = !DILocation(line: 0, scope: !10347)
!10385 = !DILocation(line: 90, column: 1, scope: !10339)
!10386 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1329, file: !1329, line: 157, type: !10387, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10389)
!10387 = !DISubroutineType(types: !10388)
!10388 = !{null, !1189, !107, !107, !107}
!10389 = !{!10390, !10391, !10392, !10393, !10394, !10395, !10396, !10397, !10398, !10399, !10400}
!10390 = !DILocalVariable(name: "dev", arg: 1, scope: !10386, file: !1329, line: 157, type: !1189)
!10391 = !DILocalVariable(name: "pin", arg: 2, scope: !10386, file: !1329, line: 157, type: !107)
!10392 = !DILocalVariable(name: "conf", arg: 3, scope: !10386, file: !1329, line: 158, type: !107)
!10393 = !DILocalVariable(name: "func", arg: 4, scope: !10386, file: !1329, line: 158, type: !107)
!10394 = !DILocalVariable(name: "cfg", scope: !10386, file: !1329, line: 160, type: !9894)
!10395 = !DILocalVariable(name: "gpio", scope: !10386, file: !1329, line: 161, type: !1262)
!10396 = !DILocalVariable(name: "pin_ll", scope: !10386, file: !1329, line: 163, type: !107)
!10397 = !DILocalVariable(name: "mode", scope: !10386, file: !1329, line: 227, type: !32)
!10398 = !DILocalVariable(name: "otype", scope: !10386, file: !1329, line: 227, type: !32)
!10399 = !DILocalVariable(name: "ospeed", scope: !10386, file: !1329, line: 227, type: !32)
!10400 = !DILocalVariable(name: "pupd", scope: !10386, file: !1329, line: 227, type: !32)
!10401 = !DILocation(line: 0, scope: !10386)
!10402 = !DILocation(line: 160, column: 45, scope: !10386)
!10403 = !DILocation(line: 161, column: 44, scope: !10386)
!10404 = !DILocation(line: 163, column: 15, scope: !10386)
!10405 = !DILocation(line: 229, column: 14, scope: !10386)
!10406 = !DILocation(line: 246, column: 47, scope: !10386)
!10407 = !DILocation(line: 246, column: 2, scope: !10386)
!10408 = !DILocation(line: 248, column: 43, scope: !10386)
!10409 = !DILocation(line: 248, column: 2, scope: !10386)
!10410 = !DILocation(line: 250, column: 40, scope: !10386)
!10411 = !DILocation(line: 250, column: 2, scope: !10386)
!10412 = !DILocation(line: 252, column: 11, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10386, file: !1329, line: 252, column: 6)
!10414 = !DILocation(line: 252, column: 6, scope: !10386)
!10415 = !DILocation(line: 253, column: 11, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10417, file: !1329, line: 253, column: 7)
!10417 = distinct !DILexicalBlock(scope: !10413, file: !1329, line: 252, column: 36)
!10418 = !DILocation(line: 253, column: 7, scope: !10417)
!10419 = !DILocation(line: 254, column: 4, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10416, file: !1329, line: 253, column: 16)
!10421 = !DILocation(line: 255, column: 3, scope: !10420)
!10422 = !DILocation(line: 256, column: 4, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10416, file: !1329, line: 255, column: 10)
!10424 = !DILocation(line: 260, column: 40, scope: !10386)
!10425 = !DILocation(line: 260, column: 2, scope: !10386)
!10426 = !DILocation(line: 265, column: 1, scope: !10386)
!10427 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1329, file: !1329, line: 137, type: !10229, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10428)
!10428 = !{!10429, !10430}
!10429 = !DILocalVariable(name: "pin", arg: 1, scope: !10427, file: !1329, line: 137, type: !107)
!10430 = !DILocalVariable(name: "pinval", scope: !10427, file: !1329, line: 139, type: !152)
!10431 = !DILocation(line: 0, scope: !10427)
!10432 = !DILocation(line: 149, column: 13, scope: !10427)
!10433 = !DILocation(line: 151, column: 2, scope: !10427)
!10434 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10309, file: !10309, line: 342, type: !10435, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10437)
!10435 = !DISubroutineType(types: !10436)
!10436 = !{null, !1262, !152, !152}
!10437 = !{!10438, !10439, !10440}
!10438 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10434, file: !10309, line: 342, type: !1262)
!10439 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10434, file: !10309, line: 342, type: !152)
!10440 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10434, file: !10309, line: 342, type: !152)
!10441 = !DILocation(line: 0, scope: !10434)
!10442 = !DILocation(line: 344, column: 3, scope: !10434)
!10443 = !DILocation(line: 345, column: 1, scope: !10434)
!10444 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10309, file: !10309, line: 413, type: !10435, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10445)
!10445 = !{!10446, !10447, !10448}
!10446 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10444, file: !10309, line: 413, type: !1262)
!10447 = !DILocalVariable(name: "Pin", arg: 2, scope: !10444, file: !10309, line: 413, type: !152)
!10448 = !DILocalVariable(name: "Speed", arg: 3, scope: !10444, file: !10309, line: 413, type: !152)
!10449 = !DILocation(line: 0, scope: !10444)
!10450 = !DILocation(line: 415, column: 3, scope: !10444)
!10451 = !DILocation(line: 0, scope: !10249, inlinedAt: !10452)
!10452 = distinct !DILocation(line: 415, column: 3, scope: !10444)
!10453 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10452)
!10454 = !DILocation(line: 0, scope: !10257, inlinedAt: !10455)
!10455 = distinct !DILocation(line: 415, column: 3, scope: !10444)
!10456 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10455)
!10457 = !DILocation(line: 0, scope: !10249, inlinedAt: !10458)
!10458 = distinct !DILocation(line: 415, column: 3, scope: !10444)
!10459 = !DILocation(line: 0, scope: !10257, inlinedAt: !10460)
!10460 = distinct !DILocation(line: 415, column: 3, scope: !10444)
!10461 = !DILocation(line: 417, column: 1, scope: !10444)
!10462 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10309, file: !10309, line: 484, type: !10435, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10463)
!10463 = !{!10464, !10465, !10466}
!10464 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10462, file: !10309, line: 484, type: !1262)
!10465 = !DILocalVariable(name: "Pin", arg: 2, scope: !10462, file: !10309, line: 484, type: !152)
!10466 = !DILocalVariable(name: "Pull", arg: 3, scope: !10462, file: !10309, line: 484, type: !152)
!10467 = !DILocation(line: 0, scope: !10462)
!10468 = !DILocation(line: 486, column: 3, scope: !10462)
!10469 = !DILocation(line: 0, scope: !10249, inlinedAt: !10470)
!10470 = distinct !DILocation(line: 486, column: 3, scope: !10462)
!10471 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10470)
!10472 = !DILocation(line: 0, scope: !10257, inlinedAt: !10473)
!10473 = distinct !DILocation(line: 486, column: 3, scope: !10462)
!10474 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10473)
!10475 = !DILocation(line: 0, scope: !10249, inlinedAt: !10476)
!10476 = distinct !DILocation(line: 486, column: 3, scope: !10462)
!10477 = !DILocation(line: 0, scope: !10257, inlinedAt: !10478)
!10478 = distinct !DILocation(line: 486, column: 3, scope: !10462)
!10479 = !DILocation(line: 487, column: 1, scope: !10462)
!10480 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10309, file: !10309, line: 556, type: !10435, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10481)
!10481 = !{!10482, !10483, !10484}
!10482 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10480, file: !10309, line: 556, type: !1262)
!10483 = !DILocalVariable(name: "Pin", arg: 2, scope: !10480, file: !10309, line: 556, type: !152)
!10484 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10480, file: !10309, line: 556, type: !152)
!10485 = !DILocation(line: 0, scope: !10480)
!10486 = !DILocation(line: 558, column: 3, scope: !10480)
!10487 = !DILocation(line: 0, scope: !10249, inlinedAt: !10488)
!10488 = distinct !DILocation(line: 558, column: 3, scope: !10480)
!10489 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10488)
!10490 = !DILocation(line: 0, scope: !10257, inlinedAt: !10491)
!10491 = distinct !DILocation(line: 558, column: 3, scope: !10480)
!10492 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10491)
!10493 = !DILocation(line: 0, scope: !10249, inlinedAt: !10494)
!10494 = distinct !DILocation(line: 558, column: 3, scope: !10480)
!10495 = !DILocation(line: 0, scope: !10257, inlinedAt: !10496)
!10496 = distinct !DILocation(line: 558, column: 3, scope: !10480)
!10497 = !DILocation(line: 560, column: 1, scope: !10480)
!10498 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10309, file: !10309, line: 633, type: !10435, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10499)
!10499 = !{!10500, !10501, !10502}
!10500 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10498, file: !10309, line: 633, type: !1262)
!10501 = !DILocalVariable(name: "Pin", arg: 2, scope: !10498, file: !10309, line: 633, type: !152)
!10502 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10498, file: !10309, line: 633, type: !152)
!10503 = !DILocation(line: 0, scope: !10498)
!10504 = !DILocation(line: 635, column: 3, scope: !10498)
!10505 = !DILocation(line: 0, scope: !10249, inlinedAt: !10506)
!10506 = distinct !DILocation(line: 635, column: 3, scope: !10498)
!10507 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10506)
!10508 = !DILocation(line: 0, scope: !10257, inlinedAt: !10509)
!10509 = distinct !DILocation(line: 635, column: 3, scope: !10498)
!10510 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10509)
!10511 = !DILocation(line: 0, scope: !10249, inlinedAt: !10512)
!10512 = distinct !DILocation(line: 635, column: 3, scope: !10498)
!10513 = !DILocation(line: 0, scope: !10257, inlinedAt: !10514)
!10514 = distinct !DILocation(line: 635, column: 3, scope: !10498)
!10515 = !DILocation(line: 637, column: 1, scope: !10498)
!10516 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10309, file: !10309, line: 273, type: !10435, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10517)
!10517 = !{!10518, !10519, !10520}
!10518 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10516, file: !10309, line: 273, type: !1262)
!10519 = !DILocalVariable(name: "Pin", arg: 2, scope: !10516, file: !10309, line: 273, type: !152)
!10520 = !DILocalVariable(name: "Mode", arg: 3, scope: !10516, file: !10309, line: 273, type: !152)
!10521 = !DILocation(line: 0, scope: !10516)
!10522 = !DILocation(line: 275, column: 3, scope: !10516)
!10523 = !DILocation(line: 0, scope: !10249, inlinedAt: !10524)
!10524 = distinct !DILocation(line: 275, column: 3, scope: !10516)
!10525 = !DILocation(line: 380, column: 4, scope: !10249, inlinedAt: !10524)
!10526 = !DILocation(line: 0, scope: !10257, inlinedAt: !10527)
!10527 = distinct !DILocation(line: 275, column: 3, scope: !10516)
!10528 = !DILocation(line: 414, column: 7, scope: !10257, inlinedAt: !10527)
!10529 = !DILocation(line: 0, scope: !10249, inlinedAt: !10530)
!10530 = distinct !DILocation(line: 275, column: 3, scope: !10516)
!10531 = !DILocation(line: 0, scope: !10257, inlinedAt: !10532)
!10532 = distinct !DILocation(line: 275, column: 3, scope: !10516)
!10533 = !DILocation(line: 276, column: 1, scope: !10516)
!10534 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1329, file: !1329, line: 698, type: !1342, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10535)
!10535 = !{!10536, !10537, !10538}
!10536 = !DILocalVariable(name: "dev", arg: 1, scope: !10534, file: !1329, line: 698, type: !1189)
!10537 = !DILocalVariable(name: "data", scope: !10534, file: !1329, line: 700, type: !9961)
!10538 = !DILocalVariable(name: "ret", scope: !10534, file: !1329, line: 701, type: !107)
!10539 = !DILocation(line: 0, scope: !10534)
!10540 = !DILocation(line: 700, column: 38, scope: !10534)
!10541 = !DILocation(line: 703, column: 8, scope: !10534)
!10542 = !DILocation(line: 703, column: 12, scope: !10534)
!10543 = !DILocation(line: 705, column: 7, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10534, file: !1329, line: 705, column: 6)
!10545 = !DILocation(line: 705, column: 6, scope: !10534)
!10546 = !DILocation(line: 722, column: 8, scope: !10534)
!10547 = !DILocation(line: 723, column: 10, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10534, file: !1329, line: 723, column: 6)
!10549 = !DILocation(line: 723, column: 6, scope: !10534)
!10550 = !DILocation(line: 731, column: 1, scope: !10534)
!10551 = distinct !DISubprogram(name: "device_is_ready", scope: !9739, file: !9739, line: 47, type: !10552, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10554)
!10552 = !DISubroutineType(types: !10553)
!10553 = !{!145, !1189}
!10554 = !{!10555}
!10555 = !DILocalVariable(name: "dev", arg: 1, scope: !10551, file: !9739, line: 47, type: !1189)
!10556 = !DILocation(line: 0, scope: !10551)
!10557 = !DILocation(line: 55, column: 2, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10551, file: !9739, line: 55, column: 2)
!10559 = !{i64 2155046879}
!10560 = !DILocation(line: 56, column: 9, scope: !10551)
!10561 = !DILocation(line: 56, column: 2, scope: !10551)
!10562 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1329, file: !1329, line: 270, type: !10563, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10565)
!10563 = !DISubroutineType(types: !10564)
!10564 = !{!107, !1189, !145}
!10565 = !{!10566, !10567, !10568, !10569, !10570}
!10566 = !DILocalVariable(name: "dev", arg: 1, scope: !10562, file: !1329, line: 270, type: !1189)
!10567 = !DILocalVariable(name: "on", arg: 2, scope: !10562, file: !1329, line: 270, type: !145)
!10568 = !DILocalVariable(name: "cfg", scope: !10562, file: !1329, line: 272, type: !9894)
!10569 = !DILocalVariable(name: "ret", scope: !10562, file: !1329, line: 273, type: !107)
!10570 = !DILocalVariable(name: "clk", scope: !10562, file: !1329, line: 278, type: !10196)
!10571 = !DILocation(line: 0, scope: !10562)
!10572 = !DILocation(line: 272, column: 45, scope: !10562)
!10573 = !DILocation(line: 282, column: 38, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10575, file: !1329, line: 280, column: 10)
!10575 = distinct !DILexicalBlock(scope: !10562, file: !1329, line: 280, column: 6)
!10576 = !DILocation(line: 282, column: 6, scope: !10574)
!10577 = !DILocation(line: 281, column: 9, scope: !10574)
!10578 = !DILocation(line: 293, column: 1, scope: !10562)
!10579 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !10552, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10580)
!10580 = !{!10581}
!10581 = !DILocalVariable(name: "dev", arg: 1, scope: !10579, file: !247, line: 730, type: !1189)
!10582 = !DILocation(line: 0, scope: !10579)
!10583 = !DILocation(line: 732, column: 9, scope: !10579)
!10584 = !DILocation(line: 732, column: 2, scope: !10579)
!10585 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1329, file: !1329, line: 496, type: !10586, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1160, retainedNodes: !10588)
!10586 = !DISubroutineType(types: !10587)
!10587 = !{!107, !1189, !107, !107, !107}
!10588 = !{!10589, !10590, !10591, !10592, !10593, !10594}
!10589 = !DILocalVariable(name: "dev", arg: 1, scope: !10585, file: !1329, line: 496, type: !1189)
!10590 = !DILocalVariable(name: "pin", arg: 2, scope: !10585, file: !1329, line: 496, type: !107)
!10591 = !DILocalVariable(name: "conf", arg: 3, scope: !10585, file: !1329, line: 496, type: !107)
!10592 = !DILocalVariable(name: "func", arg: 4, scope: !10585, file: !1329, line: 496, type: !107)
!10593 = !DILocalVariable(name: "ret", scope: !10585, file: !1329, line: 498, type: !107)
!10594 = !DILocalVariable(name: "gpio_out", scope: !10595, file: !1329, line: 508, type: !152)
!10595 = distinct !DILexicalBlock(scope: !10596, file: !1329, line: 507, column: 27)
!10596 = distinct !DILexicalBlock(scope: !10585, file: !1329, line: 507, column: 6)
!10597 = !DILocation(line: 0, scope: !10585)
!10598 = !DILocation(line: 505, column: 2, scope: !10585)
!10599 = !DILocation(line: 507, column: 11, scope: !10596)
!10600 = !DILocation(line: 507, column: 6, scope: !10585)
!10601 = !DILocation(line: 508, column: 28, scope: !10595)
!10602 = !DILocation(line: 0, scope: !10595)
!10603 = !DILocation(line: 510, column: 16, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10595, file: !1329, line: 510, column: 7)
!10605 = !DILocation(line: 0, scope: !10604)
!10606 = !DILocation(line: 510, column: 7, scope: !10595)
!10607 = !DILocation(line: 511, column: 4, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10604, file: !1329, line: 510, column: 32)
!10609 = !DILocation(line: 512, column: 3, scope: !10608)
!10610 = !DILocation(line: 513, column: 4, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10612, file: !1329, line: 512, column: 39)
!10612 = distinct !DILexicalBlock(scope: !10604, file: !1329, line: 512, column: 14)
!10613 = !DILocation(line: 514, column: 3, scope: !10611)
!10614 = !DILocation(line: 518, column: 1, scope: !10585)
!10615 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1614, file: !1614, line: 526, type: !1517, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10616)
!10616 = !{!10617, !10618, !10619}
!10617 = !DILocalVariable(name: "dev", arg: 1, scope: !10615, file: !1614, line: 526, type: !1519)
!10618 = !DILocalVariable(name: "c", arg: 2, scope: !10615, file: !1614, line: 526, type: !1121)
!10619 = !DILocalVariable(name: "config", scope: !10615, file: !1614, line: 528, type: !10620)
!10620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!10621 = !DILocation(line: 0, scope: !10615)
!10622 = !DILocation(line: 528, column: 48, scope: !10615)
!10623 = !DILocation(line: 531, column: 40, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10615, file: !1614, line: 531, column: 6)
!10625 = !DILocation(line: 531, column: 6, scope: !10624)
!10626 = !DILocation(line: 531, column: 6, scope: !10615)
!10627 = !DILocation(line: 532, column: 34, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10624, file: !1614, line: 531, column: 48)
!10629 = !DILocation(line: 532, column: 3, scope: !10628)
!10630 = !DILocation(line: 533, column: 2, scope: !10628)
!10631 = !DILocation(line: 539, column: 42, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10615, file: !1614, line: 539, column: 6)
!10633 = !DILocation(line: 539, column: 7, scope: !10632)
!10634 = !DILocation(line: 539, column: 6, scope: !10615)
!10635 = !DILocation(line: 543, column: 52, scope: !10615)
!10636 = !DILocation(line: 543, column: 22, scope: !10615)
!10637 = !DILocation(line: 543, column: 5, scope: !10615)
!10638 = !DILocation(line: 545, column: 2, scope: !10615)
!10639 = !DILocation(line: 546, column: 1, scope: !10615)
!10640 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1614, file: !1614, line: 548, type: !1536, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10641)
!10641 = !{!10642, !10643, !10644, !10645}
!10642 = !DILocalVariable(name: "dev", arg: 1, scope: !10640, file: !1614, line: 548, type: !1519)
!10643 = !DILocalVariable(name: "c", arg: 2, scope: !10640, file: !1614, line: 549, type: !196)
!10644 = !DILocalVariable(name: "config", scope: !10640, file: !1614, line: 551, type: !10620)
!10645 = !DILocalVariable(name: "key", scope: !10640, file: !1614, line: 555, type: !32)
!10646 = !DILocation(line: 0, scope: !10640)
!10647 = !DILocation(line: 551, column: 48, scope: !10640)
!10648 = !DILocation(line: 562, column: 2, scope: !10640)
!10649 = !DILocation(line: 563, column: 41, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10651, file: !1614, line: 563, column: 7)
!10651 = distinct !DILexicalBlock(scope: !10640, file: !1614, line: 562, column: 12)
!10652 = !DILocation(line: 563, column: 7, scope: !10650)
!10653 = !DILocation(line: 563, column: 7, scope: !10651)
!10654 = !DILocation(line: 55, column: 2, scope: !10655, inlinedAt: !10659)
!10655 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5934, file: !5934, line: 42, type: !5935, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10656)
!10656 = !{!10657, !10658}
!10657 = !DILocalVariable(name: "key", scope: !10655, file: !5934, line: 44, type: !32)
!10658 = !DILocalVariable(name: "tmp", scope: !10655, file: !5934, line: 53, type: !32)
!10659 = distinct !DILocation(line: 564, column: 10, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10650, file: !1614, line: 563, column: 49)
!10661 = !{i64 2275995}
!10662 = !DILocation(line: 0, scope: !10655, inlinedAt: !10659)
!10663 = !DILocation(line: 565, column: 42, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10660, file: !1614, line: 565, column: 8)
!10665 = !DILocation(line: 565, column: 8, scope: !10664)
!10666 = !DILocation(line: 565, column: 8, scope: !10660)
!10667 = !DILocalVariable(name: "key", arg: 1, scope: !10668, file: !5934, line: 84, type: !32)
!10668 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5934, file: !5934, line: 84, type: !5945, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10669)
!10669 = !{!10667}
!10670 = !DILocation(line: 0, scope: !10668, inlinedAt: !10671)
!10671 = distinct !DILocation(line: 568, column: 4, scope: !10660)
!10672 = !DILocation(line: 95, column: 2, scope: !10668, inlinedAt: !10671)
!10673 = !{i64 2276812}
!10674 = !DILocation(line: 569, column: 3, scope: !10660)
!10675 = distinct !{!10675, !10648, !10676}
!10676 = !DILocation(line: 570, column: 2, scope: !10640)
!10677 = !DILocation(line: 592, column: 33, scope: !10640)
!10678 = !DILocation(line: 592, column: 2, scope: !10640)
!10679 = !DILocation(line: 0, scope: !10668, inlinedAt: !10680)
!10680 = distinct !DILocation(line: 593, column: 2, scope: !10640)
!10681 = !DILocation(line: 95, column: 2, scope: !10668, inlinedAt: !10680)
!10682 = !DILocation(line: 594, column: 1, scope: !10640)
!10683 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1614, file: !1614, line: 596, type: !1540, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10684)
!10684 = !{!10685, !10686, !10687}
!10685 = !DILocalVariable(name: "dev", arg: 1, scope: !10683, file: !1614, line: 596, type: !1519)
!10686 = !DILocalVariable(name: "config", scope: !10683, file: !1614, line: 598, type: !10620)
!10687 = !DILocalVariable(name: "err", scope: !10683, file: !1614, line: 599, type: !152)
!10688 = !DILocation(line: 0, scope: !10683)
!10689 = !DILocation(line: 598, column: 48, scope: !10683)
!10690 = !DILocation(line: 606, column: 40, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10683, file: !1614, line: 606, column: 6)
!10692 = !DILocation(line: 606, column: 6, scope: !10691)
!10693 = !DILocation(line: 606, column: 6, scope: !10683)
!10694 = !DILocation(line: 610, column: 39, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10683, file: !1614, line: 610, column: 6)
!10696 = !DILocation(line: 610, column: 6, scope: !10695)
!10697 = !DILocation(line: 610, column: 6, scope: !10683)
!10698 = !DILocation(line: 614, column: 39, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10683, file: !1614, line: 614, column: 6)
!10700 = !DILocation(line: 614, column: 6, scope: !10699)
!10701 = !DILocation(line: 614, column: 6, scope: !10683)
!10702 = !DILocation(line: 619, column: 40, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10683, file: !1614, line: 619, column: 6)
!10704 = !DILocation(line: 619, column: 6, scope: !10703)
!10705 = !DILocation(line: 619, column: 6, scope: !10683)
!10706 = !DILocation(line: 623, column: 10, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10683, file: !1614, line: 623, column: 6)
!10708 = !DILocation(line: 623, column: 6, scope: !10683)
!10709 = !DILocation(line: 624, column: 34, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10707, file: !1614, line: 623, column: 24)
!10711 = !DILocation(line: 624, column: 3, scope: !10710)
!10712 = !DILocation(line: 625, column: 2, scope: !10710)
!10713 = !DILocation(line: 632, column: 10, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10683, file: !1614, line: 632, column: 6)
!10715 = !DILocation(line: 632, column: 6, scope: !10683)
!10716 = !DILocation(line: 633, column: 34, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10714, file: !1614, line: 632, column: 32)
!10718 = !DILocation(line: 633, column: 3, scope: !10717)
!10719 = !DILocation(line: 634, column: 2, scope: !10717)
!10720 = !DILocation(line: 636, column: 10, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10683, file: !1614, line: 636, column: 6)
!10722 = !DILocation(line: 636, column: 6, scope: !10683)
!10723 = !DILocation(line: 637, column: 33, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10721, file: !1614, line: 636, column: 31)
!10725 = !DILocation(line: 637, column: 3, scope: !10724)
!10726 = !DILocation(line: 638, column: 2, scope: !10724)
!10727 = !DILocation(line: 640, column: 10, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10683, file: !1614, line: 640, column: 6)
!10729 = !DILocation(line: 640, column: 6, scope: !10683)
!10730 = !DILocation(line: 641, column: 33, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10728, file: !1614, line: 640, column: 32)
!10732 = !DILocation(line: 641, column: 3, scope: !10731)
!10733 = !DILocation(line: 642, column: 2, scope: !10731)
!10734 = !DILocation(line: 646, column: 32, scope: !10683)
!10735 = !DILocation(line: 646, column: 2, scope: !10683)
!10736 = !DILocation(line: 648, column: 2, scope: !10683)
!10737 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1614, file: !1614, line: 419, type: !1544, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10738)
!10738 = !{!10739, !10740, !10741, !10742, !10744, !10745, !10746, !10747}
!10739 = !DILocalVariable(name: "dev", arg: 1, scope: !10737, file: !1614, line: 419, type: !1519)
!10740 = !DILocalVariable(name: "cfg", arg: 2, scope: !10737, file: !1614, line: 420, type: !1546)
!10741 = !DILocalVariable(name: "config", scope: !10737, file: !1614, line: 422, type: !10620)
!10742 = !DILocalVariable(name: "data", scope: !10737, file: !1614, line: 423, type: !10743)
!10743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!10744 = !DILocalVariable(name: "parity", scope: !10737, file: !1614, line: 424, type: !6530)
!10745 = !DILocalVariable(name: "stopbits", scope: !10737, file: !1614, line: 425, type: !6530)
!10746 = !DILocalVariable(name: "databits", scope: !10737, file: !1614, line: 426, type: !6530)
!10747 = !DILocalVariable(name: "flowctrl", scope: !10737, file: !1614, line: 428, type: !6530)
!10748 = !DILocation(line: 0, scope: !10737)
!10749 = !DILocation(line: 422, column: 48, scope: !10737)
!10750 = !DILocation(line: 423, column: 38, scope: !10737)
!10751 = !DILocation(line: 424, column: 56, scope: !10737)
!10752 = !DILocation(line: 424, column: 51, scope: !10737)
!10753 = !DILocation(line: 424, column: 26, scope: !10737)
!10754 = !DILocation(line: 425, column: 60, scope: !10737)
!10755 = !DILocation(line: 425, column: 55, scope: !10737)
!10756 = !DILocation(line: 425, column: 28, scope: !10737)
!10757 = !DILocation(line: 426, column: 60, scope: !10737)
!10758 = !DILocation(line: 426, column: 55, scope: !10737)
!10759 = !DILocation(line: 426, column: 28, scope: !10737)
!10760 = !DILocation(line: 428, column: 58, scope: !10737)
!10761 = !DILocation(line: 428, column: 53, scope: !10737)
!10762 = !DILocation(line: 428, column: 28, scope: !10737)
!10763 = !DILocation(line: 431, column: 44, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10737, file: !1614, line: 431, column: 6)
!10765 = !DILocation(line: 438, column: 22, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10737, file: !1614, line: 437, column: 6)
!10767 = !DILocation(line: 437, column: 6, scope: !10737)
!10768 = !DILocation(line: 448, column: 6, scope: !10737)
!10769 = !DILocation(line: 465, column: 47, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10737, file: !1614, line: 465, column: 6)
!10771 = !DILocation(line: 475, column: 21, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10737, file: !1614, line: 475, column: 6)
!10773 = !DILocation(line: 475, column: 6, scope: !10737)
!10774 = !DILocation(line: 476, column: 8, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10776, file: !1614, line: 476, column: 7)
!10776 = distinct !DILexicalBlock(scope: !10772, file: !1614, line: 475, column: 49)
!10777 = !DILocation(line: 477, column: 34, scope: !10775)
!10778 = !DILocation(line: 476, column: 7, scope: !10776)
!10779 = !DILocation(line: 482, column: 27, scope: !10737)
!10780 = !DILocation(line: 482, column: 2, scope: !10737)
!10781 = !DILocation(line: 484, column: 16, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10737, file: !1614, line: 484, column: 6)
!10783 = !DILocation(line: 484, column: 13, scope: !10782)
!10784 = !DILocation(line: 484, column: 6, scope: !10737)
!10785 = !DILocation(line: 485, column: 3, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10782, file: !1614, line: 484, column: 44)
!10787 = !DILocation(line: 486, column: 2, scope: !10786)
!10788 = !DILocation(line: 488, column: 18, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10737, file: !1614, line: 488, column: 6)
!10790 = !DILocation(line: 488, column: 15, scope: !10789)
!10791 = !DILocation(line: 488, column: 6, scope: !10737)
!10792 = !DILocation(line: 489, column: 3, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10789, file: !1614, line: 488, column: 48)
!10794 = !DILocation(line: 490, column: 2, scope: !10793)
!10795 = !DILocation(line: 492, column: 18, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10737, file: !1614, line: 492, column: 6)
!10797 = !DILocation(line: 492, column: 15, scope: !10796)
!10798 = !DILocation(line: 492, column: 6, scope: !10737)
!10799 = !DILocation(line: 493, column: 3, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10796, file: !1614, line: 492, column: 48)
!10801 = !DILocation(line: 494, column: 2, scope: !10800)
!10802 = !DILocation(line: 496, column: 18, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10737, file: !1614, line: 496, column: 6)
!10804 = !DILocation(line: 496, column: 15, scope: !10803)
!10805 = !DILocation(line: 496, column: 6, scope: !10737)
!10806 = !DILocation(line: 497, column: 3, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10803, file: !1614, line: 496, column: 46)
!10808 = !DILocation(line: 498, column: 2, scope: !10807)
!10809 = !DILocation(line: 500, column: 11, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10737, file: !1614, line: 500, column: 6)
!10811 = !DILocation(line: 500, column: 29, scope: !10810)
!10812 = !DILocation(line: 500, column: 20, scope: !10810)
!10813 = !DILocation(line: 500, column: 6, scope: !10737)
!10814 = !DILocation(line: 501, column: 3, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10810, file: !1614, line: 500, column: 40)
!10816 = !DILocation(line: 502, column: 26, scope: !10815)
!10817 = !DILocation(line: 502, column: 19, scope: !10815)
!10818 = !DILocation(line: 503, column: 2, scope: !10815)
!10819 = !DILocation(line: 505, column: 26, scope: !10737)
!10820 = !DILocation(line: 505, column: 2, scope: !10737)
!10821 = !DILocation(line: 506, column: 2, scope: !10737)
!10822 = !DILocation(line: 507, column: 1, scope: !10737)
!10823 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1614, file: !1614, line: 509, type: !1557, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10824)
!10824 = !{!10825, !10826, !10827}
!10825 = !DILocalVariable(name: "dev", arg: 1, scope: !10823, file: !1614, line: 509, type: !1519)
!10826 = !DILocalVariable(name: "cfg", arg: 2, scope: !10823, file: !1614, line: 510, type: !1559)
!10827 = !DILocalVariable(name: "data", scope: !10823, file: !1614, line: 512, type: !10743)
!10828 = !DILocation(line: 0, scope: !10823)
!10829 = !DILocation(line: 512, column: 38, scope: !10823)
!10830 = !DILocation(line: 514, column: 24, scope: !10823)
!10831 = !DILocation(line: 514, column: 7, scope: !10823)
!10832 = !DILocation(line: 514, column: 16, scope: !10823)
!10833 = !DILocation(line: 515, column: 41, scope: !10823)
!10834 = !{i32 0, i32 1537}
!10835 = !DILocation(line: 515, column: 16, scope: !10823)
!10836 = !DILocation(line: 515, column: 7, scope: !10823)
!10837 = !DILocation(line: 515, column: 14, scope: !10823)
!10838 = !DILocation(line: 517, column: 3, scope: !10823)
!10839 = !{i32 0, i32 12289}
!10840 = !DILocation(line: 516, column: 19, scope: !10823)
!10841 = !DILocation(line: 516, column: 7, scope: !10823)
!10842 = !DILocation(line: 516, column: 17, scope: !10823)
!10843 = !DILocation(line: 519, column: 3, scope: !10823)
!10844 = !DILocation(line: 519, column: 33, scope: !10823)
!10845 = !DILocation(line: 518, column: 19, scope: !10823)
!10846 = !DILocation(line: 518, column: 7, scope: !10823)
!10847 = !DILocation(line: 518, column: 17, scope: !10823)
!10848 = !DILocation(line: 521, column: 3, scope: !10823)
!10849 = !{i32 0, i32 769}
!10850 = !DILocation(line: 520, column: 19, scope: !10823)
!10851 = !DILocation(line: 520, column: 7, scope: !10823)
!10852 = !DILocation(line: 520, column: 17, scope: !10823)
!10853 = !DILocation(line: 522, column: 2, scope: !10823)
!10854 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1614, file: !1614, line: 205, type: !10855, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10857)
!10855 = !DISubroutineType(types: !10856)
!10856 = !{!152, !1519}
!10857 = !{!10858, !10859}
!10858 = !DILocalVariable(name: "dev", arg: 1, scope: !10854, file: !1614, line: 205, type: !1519)
!10859 = !DILocalVariable(name: "config", scope: !10854, file: !1614, line: 207, type: !10620)
!10860 = !DILocation(line: 0, scope: !10854)
!10861 = !DILocation(line: 207, column: 48, scope: !10854)
!10862 = !DILocation(line: 209, column: 36, scope: !10854)
!10863 = !DILocation(line: 209, column: 9, scope: !10854)
!10864 = !DILocation(line: 209, column: 2, scope: !10854)
!10865 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1614, file: !1614, line: 270, type: !10866, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10868)
!10866 = !DISubroutineType(types: !10867)
!10867 = !{!1485, !152}
!10868 = !{!10869}
!10869 = !DILocalVariable(name: "parity", arg: 1, scope: !10865, file: !1614, line: 270, type: !152)
!10870 = !DILocation(line: 0, scope: !10865)
!10871 = !DILocation(line: 272, column: 2, scope: !10865)
!10872 = !DILocation(line: 281, column: 1, scope: !10865)
!10873 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1614, file: !1614, line: 220, type: !10855, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10874)
!10874 = !{!10875, !10876}
!10875 = !DILocalVariable(name: "dev", arg: 1, scope: !10873, file: !1614, line: 220, type: !1519)
!10876 = !DILocalVariable(name: "config", scope: !10873, file: !1614, line: 222, type: !10620)
!10877 = !DILocation(line: 0, scope: !10873)
!10878 = !DILocation(line: 222, column: 48, scope: !10873)
!10879 = !DILocation(line: 224, column: 44, scope: !10873)
!10880 = !DILocation(line: 224, column: 9, scope: !10873)
!10881 = !DILocation(line: 224, column: 2, scope: !10873)
!10882 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1614, file: !1614, line: 304, type: !10883, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10885)
!10883 = !DISubroutineType(types: !10884)
!10884 = !{!1499, !152}
!10885 = !{!10886}
!10886 = !DILocalVariable(name: "sb", arg: 1, scope: !10882, file: !1614, line: 304, type: !152)
!10887 = !DILocation(line: 0, scope: !10882)
!10888 = !DILocation(line: 306, column: 2, scope: !10882)
!10889 = !DILocation(line: 0, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10882, file: !1614, line: 306, column: 14)
!10891 = !DILocation(line: 323, column: 1, scope: !10882)
!10892 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1614, file: !1614, line: 235, type: !10855, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10893)
!10893 = !{!10894, !10895}
!10894 = !DILocalVariable(name: "dev", arg: 1, scope: !10892, file: !1614, line: 235, type: !1519)
!10895 = !DILocalVariable(name: "config", scope: !10892, file: !1614, line: 237, type: !10620)
!10896 = !DILocation(line: 0, scope: !10892)
!10897 = !DILocation(line: 237, column: 48, scope: !10892)
!10898 = !DILocation(line: 239, column: 39, scope: !10892)
!10899 = !DILocation(line: 239, column: 9, scope: !10892)
!10900 = !DILocation(line: 239, column: 2, scope: !10892)
!10901 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1614, file: !1614, line: 355, type: !10902, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10904)
!10902 = !DISubroutineType(types: !10903)
!10903 = !{!1492, !152, !152}
!10904 = !{!10905, !10906}
!10905 = !DILocalVariable(name: "db", arg: 1, scope: !10901, file: !1614, line: 355, type: !152)
!10906 = !DILocalVariable(name: "p", arg: 2, scope: !10901, file: !1614, line: 356, type: !152)
!10907 = !DILocation(line: 0, scope: !10901)
!10908 = !DILocation(line: 358, column: 2, scope: !10901)
!10909 = !DILocation(line: 384, column: 1, scope: !10901)
!10910 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1614, file: !1614, line: 250, type: !10855, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10911)
!10911 = !{!10912, !10913}
!10912 = !DILocalVariable(name: "dev", arg: 1, scope: !10910, file: !1614, line: 250, type: !1519)
!10913 = !DILocalVariable(name: "config", scope: !10910, file: !1614, line: 252, type: !10620)
!10914 = !DILocation(line: 0, scope: !10910)
!10915 = !DILocation(line: 252, column: 48, scope: !10910)
!10916 = !DILocation(line: 254, column: 40, scope: !10910)
!10917 = !DILocation(line: 254, column: 9, scope: !10910)
!10918 = !DILocation(line: 254, column: 2, scope: !10910)
!10919 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1614, file: !1614, line: 409, type: !10920, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10922)
!10920 = !DISubroutineType(types: !10921)
!10921 = !{!1505, !152}
!10922 = !{!10923}
!10923 = !DILocalVariable(name: "fc", arg: 1, scope: !10919, file: !1614, line: 409, type: !152)
!10924 = !DILocation(line: 0, scope: !10919)
!10925 = !DILocation(line: 411, column: 9, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10919, file: !1614, line: 411, column: 6)
!10927 = !DILocation(line: 416, column: 1, scope: !10919)
!10928 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10929, file: !10929, line: 967, type: !10930, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10932)
!10929 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10930 = !DISubroutineType(types: !10931)
!10931 = !{!152, !1560}
!10932 = !{!10933}
!10933 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10928, file: !10929, line: 967, type: !1560)
!10934 = !DILocation(line: 0, scope: !10928)
!10935 = !DILocation(line: 969, column: 21, scope: !10928)
!10936 = !DILocation(line: 969, column: 3, scope: !10928)
!10937 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10929, file: !10929, line: 601, type: !10930, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10938)
!10938 = !{!10939}
!10939 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10937, file: !10929, line: 601, type: !1560)
!10940 = !DILocation(line: 0, scope: !10937)
!10941 = !DILocation(line: 603, column: 21, scope: !10937)
!10942 = !DILocation(line: 603, column: 3, scope: !10937)
!10943 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10929, file: !10929, line: 820, type: !10930, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10944)
!10944 = !{!10945}
!10945 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10943, file: !10929, line: 820, type: !1560)
!10946 = !DILocation(line: 0, scope: !10943)
!10947 = !DILocation(line: 822, column: 21, scope: !10943)
!10948 = !DILocation(line: 822, column: 3, scope: !10943)
!10949 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10929, file: !10929, line: 547, type: !10930, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10950)
!10950 = !{!10951}
!10951 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10949, file: !10929, line: 547, type: !1560)
!10952 = !DILocation(line: 0, scope: !10949)
!10953 = !DILocation(line: 549, column: 21, scope: !10949)
!10954 = !DILocation(line: 549, column: 3, scope: !10949)
!10955 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1614, file: !1614, line: 257, type: !10956, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10958)
!10956 = !DISubroutineType(types: !10957)
!10957 = !{!152, !1485}
!10958 = !{!10959}
!10959 = !DILocalVariable(name: "parity", arg: 1, scope: !10955, file: !1614, line: 257, type: !1485)
!10960 = !DILocation(line: 0, scope: !10955)
!10961 = !DILocation(line: 259, column: 2, scope: !10955)
!10962 = !DILocation(line: 268, column: 1, scope: !10955)
!10963 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1614, file: !1614, line: 283, type: !10964, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10966)
!10964 = !DISubroutineType(types: !10965)
!10965 = !{!152, !1499}
!10966 = !{!10967}
!10967 = !DILocalVariable(name: "sb", arg: 1, scope: !10963, file: !1614, line: 283, type: !1499)
!10968 = !DILocation(line: 0, scope: !10963)
!10969 = !DILocation(line: 285, column: 2, scope: !10963)
!10970 = !DILocation(line: 0, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10963, file: !1614, line: 285, column: 14)
!10972 = !DILocation(line: 302, column: 1, scope: !10963)
!10973 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1614, file: !1614, line: 325, type: !10974, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10976)
!10974 = !DISubroutineType(types: !10975)
!10975 = !{!152, !1492, !1485}
!10976 = !{!10977, !10978}
!10977 = !DILocalVariable(name: "db", arg: 1, scope: !10973, file: !1614, line: 325, type: !1492)
!10978 = !DILocalVariable(name: "p", arg: 2, scope: !10973, file: !1614, line: 326, type: !1485)
!10979 = !DILocation(line: 0, scope: !10973)
!10980 = !DILocation(line: 328, column: 2, scope: !10973)
!10981 = !DILocation(line: 353, column: 1, scope: !10973)
!10982 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1614, file: !1614, line: 393, type: !10983, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10985)
!10983 = !DISubroutineType(types: !10984)
!10984 = !{!152, !1505}
!10985 = !{!10986}
!10986 = !DILocalVariable(name: "fc", arg: 1, scope: !10982, file: !1614, line: 393, type: !1505)
!10987 = !DILocation(line: 0, scope: !10982)
!10988 = !DILocation(line: 395, column: 9, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10982, file: !1614, line: 395, column: 6)
!10990 = !DILocation(line: 400, column: 1, scope: !10982)
!10991 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10929, file: !10929, line: 424, type: !10992, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10994)
!10992 = !DISubroutineType(types: !10993)
!10993 = !{null, !1560}
!10994 = !{!10995}
!10995 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10991, file: !10929, line: 424, type: !1560)
!10996 = !DILocation(line: 0, scope: !10991)
!10997 = !DILocation(line: 426, column: 3, scope: !10991)
!10998 = !DILocation(line: 427, column: 1, scope: !10991)
!10999 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1614, file: !1614, line: 197, type: !11000, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11002)
!11000 = !DISubroutineType(types: !11001)
!11001 = !{null, !1519, !152}
!11002 = !{!11003, !11004, !11005}
!11003 = !DILocalVariable(name: "dev", arg: 1, scope: !10999, file: !1614, line: 197, type: !1519)
!11004 = !DILocalVariable(name: "parity", arg: 2, scope: !10999, file: !1614, line: 198, type: !152)
!11005 = !DILocalVariable(name: "config", scope: !10999, file: !1614, line: 200, type: !10620)
!11006 = !DILocation(line: 0, scope: !10999)
!11007 = !DILocation(line: 200, column: 48, scope: !10999)
!11008 = !DILocation(line: 202, column: 29, scope: !10999)
!11009 = !DILocation(line: 202, column: 2, scope: !10999)
!11010 = !DILocation(line: 203, column: 1, scope: !10999)
!11011 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1614, file: !1614, line: 212, type: !11000, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11012)
!11012 = !{!11013, !11014, !11015}
!11013 = !DILocalVariable(name: "dev", arg: 1, scope: !11011, file: !1614, line: 212, type: !1519)
!11014 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11011, file: !1614, line: 213, type: !152)
!11015 = !DILocalVariable(name: "config", scope: !11011, file: !1614, line: 215, type: !10620)
!11016 = !DILocation(line: 0, scope: !11011)
!11017 = !DILocation(line: 215, column: 48, scope: !11011)
!11018 = !DILocation(line: 217, column: 37, scope: !11011)
!11019 = !DILocation(line: 217, column: 2, scope: !11011)
!11020 = !DILocation(line: 218, column: 1, scope: !11011)
!11021 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1614, file: !1614, line: 227, type: !11000, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11022)
!11022 = !{!11023, !11024, !11025}
!11023 = !DILocalVariable(name: "dev", arg: 1, scope: !11021, file: !1614, line: 227, type: !1519)
!11024 = !DILocalVariable(name: "databits", arg: 2, scope: !11021, file: !1614, line: 228, type: !152)
!11025 = !DILocalVariable(name: "config", scope: !11021, file: !1614, line: 230, type: !10620)
!11026 = !DILocation(line: 0, scope: !11021)
!11027 = !DILocation(line: 230, column: 48, scope: !11021)
!11028 = !DILocation(line: 232, column: 32, scope: !11021)
!11029 = !DILocation(line: 232, column: 2, scope: !11021)
!11030 = !DILocation(line: 233, column: 1, scope: !11021)
!11031 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1614, file: !1614, line: 242, type: !11000, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11032)
!11032 = !{!11033, !11034, !11035}
!11033 = !DILocalVariable(name: "dev", arg: 1, scope: !11031, file: !1614, line: 242, type: !1519)
!11034 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11031, file: !1614, line: 243, type: !152)
!11035 = !DILocalVariable(name: "config", scope: !11031, file: !1614, line: 245, type: !10620)
!11036 = !DILocation(line: 0, scope: !11031)
!11037 = !DILocation(line: 245, column: 48, scope: !11031)
!11038 = !DILocation(line: 247, column: 33, scope: !11031)
!11039 = !DILocation(line: 247, column: 2, scope: !11031)
!11040 = !DILocation(line: 248, column: 1, scope: !11031)
!11041 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1614, file: !1614, line: 107, type: !11000, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11042)
!11042 = !{!11043, !11044, !11045, !11046, !11047}
!11043 = !DILocalVariable(name: "dev", arg: 1, scope: !11041, file: !1614, line: 107, type: !1519)
!11044 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11041, file: !1614, line: 107, type: !152)
!11045 = !DILocalVariable(name: "config", scope: !11041, file: !1614, line: 109, type: !10620)
!11046 = !DILocalVariable(name: "data", scope: !11041, file: !1614, line: 110, type: !10743)
!11047 = !DILocalVariable(name: "clock_rate", scope: !11041, file: !1614, line: 112, type: !152)
!11048 = !DILocation(line: 0, scope: !11041)
!11049 = !DILocation(line: 109, column: 48, scope: !11041)
!11050 = !DILocation(line: 110, column: 38, scope: !11041)
!11051 = !DILocation(line: 112, column: 2, scope: !11041)
!11052 = !DILocation(line: 123, column: 36, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11054, file: !1614, line: 123, column: 7)
!11054 = distinct !DILexicalBlock(scope: !11055, file: !1614, line: 122, column: 9)
!11055 = distinct !DILexicalBlock(scope: !11041, file: !1614, line: 115, column: 6)
!11056 = !DILocation(line: 124, column: 42, scope: !11053)
!11057 = !DILocation(line: 123, column: 7, scope: !11053)
!11058 = !DILocation(line: 125, column: 22, scope: !11053)
!11059 = !DILocation(line: 123, column: 7, scope: !11054)
!11060 = !DILocation(line: 126, column: 4, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11062, file: !1614, line: 126, column: 4)
!11062 = distinct !DILexicalBlock(scope: !11063, file: !1614, line: 126, column: 4)
!11063 = distinct !DILexicalBlock(scope: !11064, file: !1614, line: 126, column: 4)
!11064 = distinct !DILexicalBlock(scope: !11065, file: !1614, line: 126, column: 4)
!11065 = distinct !DILexicalBlock(scope: !11053, file: !1614, line: 125, column: 27)
!11066 = !DILocation(line: 127, column: 4, scope: !11065)
!11067 = !DILocation(line: 176, column: 36, scope: !11041)
!11068 = !DILocation(line: 176, column: 3, scope: !11041)
!11069 = !DILocation(line: 179, column: 32, scope: !11041)
!11070 = !DILocation(line: 180, column: 10, scope: !11041)
!11071 = !DILocation(line: 179, column: 3, scope: !11041)
!11072 = !DILocation(line: 189, column: 3, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !1614, line: 189, column: 3)
!11074 = distinct !DILexicalBlock(scope: !11041, file: !1614, line: 189, column: 3)
!11075 = !DILocation(line: 189, column: 3, scope: !11074)
!11076 = !DILocation(line: 189, column: 3, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11073, file: !1614, line: 189, column: 3)
!11078 = !DILocation(line: 195, column: 1, scope: !11041)
!11079 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10929, file: !10929, line: 410, type: !10992, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11080)
!11080 = !{!11081}
!11081 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11079, file: !10929, line: 410, type: !1560)
!11082 = !DILocation(line: 0, scope: !11079)
!11083 = !DILocation(line: 412, column: 3, scope: !11079)
!11084 = !DILocation(line: 413, column: 1, scope: !11079)
!11085 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !968, file: !968, line: 216, type: !1593, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11086)
!11086 = !{!11087, !11088, !11089, !11090}
!11087 = !DILocalVariable(name: "dev", arg: 1, scope: !11085, file: !968, line: 216, type: !1519)
!11088 = !DILocalVariable(name: "sys", arg: 2, scope: !11085, file: !968, line: 217, type: !1060)
!11089 = !DILocalVariable(name: "rate", arg: 3, scope: !11085, file: !968, line: 218, type: !1016)
!11090 = !DILocalVariable(name: "api", scope: !11085, file: !968, line: 220, type: !1571)
!11091 = !DILocation(line: 0, scope: !11085)
!11092 = !DILocation(line: 221, column: 49, scope: !11085)
!11093 = !DILocation(line: 223, column: 11, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11085, file: !968, line: 223, column: 6)
!11095 = !DILocation(line: 223, column: 20, scope: !11094)
!11096 = !DILocation(line: 223, column: 6, scope: !11085)
!11097 = !DILocation(line: 227, column: 9, scope: !11085)
!11098 = !DILocation(line: 227, column: 2, scope: !11085)
!11099 = !DILocation(line: 228, column: 1, scope: !11085)
!11100 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6012, file: !6012, line: 175, type: !6013, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11101)
!11101 = !{!11102}
!11102 = !DILocalVariable(name: "level", arg: 1, scope: !11100, file: !6012, line: 175, type: !107)
!11103 = !DILocation(line: 0, scope: !11100)
!11104 = !DILocation(line: 177, column: 2, scope: !11100)
!11105 = !DILocation(line: 189, column: 1, scope: !11100)
!11106 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10929, file: !10929, line: 615, type: !11107, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11109)
!11107 = !DISubroutineType(types: !11108)
!11108 = !{null, !1560, !152}
!11109 = !{!11110, !11111}
!11110 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11106, file: !10929, line: 615, type: !1560)
!11111 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11106, file: !10929, line: 615, type: !152)
!11112 = !DILocation(line: 0, scope: !11106)
!11113 = !DILocation(line: 617, column: 3, scope: !11106)
!11114 = !DILocation(line: 618, column: 1, scope: !11106)
!11115 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10929, file: !10929, line: 1020, type: !11116, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11118)
!11116 = !DISubroutineType(types: !11117)
!11117 = !{null, !1560, !152, !152, !152}
!11118 = !{!11119, !11120, !11121, !11122}
!11119 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11115, file: !10929, line: 1020, type: !1560)
!11120 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11115, file: !10929, line: 1020, type: !152)
!11121 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11115, file: !10929, line: 1020, type: !152)
!11122 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11115, file: !10929, line: 1021, type: !152)
!11123 = !DILocation(line: 0, scope: !11115)
!11124 = !DILocation(line: 1029, column: 30, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11126, file: !10929, line: 1028, column: 3)
!11126 = distinct !DILexicalBlock(scope: !11115, file: !10929, line: 1023, column: 7)
!11127 = !DILocation(line: 1029, column: 19, scope: !11125)
!11128 = !DILocation(line: 1029, column: 13, scope: !11125)
!11129 = !DILocation(line: 1029, column: 17, scope: !11125)
!11130 = !DILocation(line: 1031, column: 1, scope: !11115)
!11131 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10929, file: !10929, line: 949, type: !11107, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11132)
!11132 = !{!11133, !11134}
!11133 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11131, file: !10929, line: 949, type: !1560)
!11134 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11131, file: !10929, line: 949, type: !152)
!11135 = !DILocation(line: 0, scope: !11131)
!11136 = !DILocation(line: 951, column: 3, scope: !11131)
!11137 = !DILocation(line: 952, column: 1, scope: !11131)
!11138 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10929, file: !10929, line: 588, type: !11107, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11139)
!11139 = !{!11140, !11141}
!11140 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11138, file: !10929, line: 588, type: !1560)
!11141 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11138, file: !10929, line: 588, type: !152)
!11142 = !DILocation(line: 0, scope: !11138)
!11143 = !DILocation(line: 590, column: 3, scope: !11138)
!11144 = !DILocation(line: 591, column: 1, scope: !11138)
!11145 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10929, file: !10929, line: 805, type: !11107, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11146)
!11146 = !{!11147, !11148}
!11147 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11145, file: !10929, line: 805, type: !1560)
!11148 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11145, file: !10929, line: 805, type: !152)
!11149 = !DILocation(line: 0, scope: !11145)
!11150 = !DILocation(line: 807, column: 3, scope: !11145)
!11151 = !DILocation(line: 808, column: 1, scope: !11145)
!11152 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10929, file: !10929, line: 532, type: !11107, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11153)
!11153 = !{!11154, !11155}
!11154 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11152, file: !10929, line: 532, type: !1560)
!11155 = !DILocalVariable(name: "Parity", arg: 2, scope: !11152, file: !10929, line: 532, type: !152)
!11156 = !DILocation(line: 0, scope: !11152)
!11157 = !DILocation(line: 534, column: 3, scope: !11152)
!11158 = !DILocation(line: 535, column: 1, scope: !11152)
!11159 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10929, file: !10929, line: 1770, type: !10930, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11160)
!11160 = !{!11161}
!11161 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11159, file: !10929, line: 1770, type: !1560)
!11162 = !DILocation(line: 0, scope: !11159)
!11163 = !DILocation(line: 1772, column: 11, scope: !11159)
!11164 = !DILocation(line: 1772, column: 46, scope: !11159)
!11165 = !DILocation(line: 1772, column: 3, scope: !11159)
!11166 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10929, file: !10929, line: 1737, type: !10930, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11167)
!11167 = !{!11168}
!11168 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11166, file: !10929, line: 1737, type: !1560)
!11169 = !DILocation(line: 0, scope: !11166)
!11170 = !DILocation(line: 1739, column: 11, scope: !11166)
!11171 = !DILocation(line: 1739, column: 3, scope: !11166)
!11172 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10929, file: !10929, line: 1748, type: !10930, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11173)
!11173 = !{!11174}
!11174 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11172, file: !10929, line: 1748, type: !1560)
!11175 = !DILocation(line: 0, scope: !11172)
!11176 = !DILocation(line: 1750, column: 11, scope: !11172)
!11177 = !DILocation(line: 1750, column: 45, scope: !11172)
!11178 = !DILocation(line: 1750, column: 3, scope: !11172)
!11179 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10929, file: !10929, line: 1827, type: !10930, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11180)
!11180 = !{!11181}
!11181 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11179, file: !10929, line: 1827, type: !1560)
!11182 = !DILocation(line: 0, scope: !11179)
!11183 = !DILocation(line: 1829, column: 11, scope: !11179)
!11184 = !DILocation(line: 1829, column: 46, scope: !11179)
!11185 = !DILocation(line: 1829, column: 3, scope: !11179)
!11186 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10929, file: !10929, line: 1992, type: !10992, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11187)
!11187 = !{!11188}
!11188 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11186, file: !10929, line: 1992, type: !1560)
!11189 = !DILocation(line: 0, scope: !11186)
!11190 = !DILocation(line: 1994, column: 3, scope: !11186)
!11191 = !DILocation(line: 1995, column: 1, scope: !11186)
!11192 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10929, file: !10929, line: 1934, type: !10992, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11193)
!11193 = !{!11194, !11195}
!11194 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11192, file: !10929, line: 1934, type: !1560)
!11195 = !DILocalVariable(name: "tmpreg", scope: !11192, file: !10929, line: 1936, type: !227)
!11196 = !DILocation(line: 0, scope: !11192)
!11197 = !DILocation(line: 1936, column: 3, scope: !11192)
!11198 = !DILocation(line: 1936, column: 17, scope: !11192)
!11199 = !DILocation(line: 1937, column: 20, scope: !11192)
!11200 = !DILocation(line: 1937, column: 10, scope: !11192)
!11201 = !DILocation(line: 1938, column: 10, scope: !11192)
!11202 = !DILocation(line: 1939, column: 20, scope: !11192)
!11203 = !DILocation(line: 1939, column: 10, scope: !11192)
!11204 = !DILocation(line: 1940, column: 10, scope: !11192)
!11205 = !DILocation(line: 1941, column: 1, scope: !11192)
!11206 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10929, file: !10929, line: 1877, type: !10992, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11207)
!11207 = !{!11208, !11209}
!11208 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11206, file: !10929, line: 1877, type: !1560)
!11209 = !DILocalVariable(name: "tmpreg", scope: !11206, file: !10929, line: 1879, type: !227)
!11210 = !DILocation(line: 0, scope: !11206)
!11211 = !DILocation(line: 1879, column: 3, scope: !11206)
!11212 = !DILocation(line: 1879, column: 17, scope: !11206)
!11213 = !DILocation(line: 1880, column: 20, scope: !11206)
!11214 = !DILocation(line: 1880, column: 10, scope: !11206)
!11215 = !DILocation(line: 1881, column: 10, scope: !11206)
!11216 = !DILocation(line: 1882, column: 20, scope: !11206)
!11217 = !DILocation(line: 1882, column: 10, scope: !11206)
!11218 = !DILocation(line: 1883, column: 10, scope: !11206)
!11219 = !DILocation(line: 1884, column: 1, scope: !11206)
!11220 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10929, file: !10929, line: 1896, type: !10992, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11221)
!11221 = !{!11222, !11223}
!11222 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11220, file: !10929, line: 1896, type: !1560)
!11223 = !DILocalVariable(name: "tmpreg", scope: !11220, file: !10929, line: 1898, type: !227)
!11224 = !DILocation(line: 0, scope: !11220)
!11225 = !DILocation(line: 1898, column: 3, scope: !11220)
!11226 = !DILocation(line: 1898, column: 17, scope: !11220)
!11227 = !DILocation(line: 1899, column: 20, scope: !11220)
!11228 = !DILocation(line: 1899, column: 10, scope: !11220)
!11229 = !DILocation(line: 1900, column: 10, scope: !11220)
!11230 = !DILocation(line: 1901, column: 20, scope: !11220)
!11231 = !DILocation(line: 1901, column: 10, scope: !11220)
!11232 = !DILocation(line: 1902, column: 10, scope: !11220)
!11233 = !DILocation(line: 1903, column: 1, scope: !11220)
!11234 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10929, file: !10929, line: 1915, type: !10992, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11235)
!11235 = !{!11236, !11237}
!11236 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11234, file: !10929, line: 1915, type: !1560)
!11237 = !DILocalVariable(name: "tmpreg", scope: !11234, file: !10929, line: 1917, type: !227)
!11238 = !DILocation(line: 0, scope: !11234)
!11239 = !DILocation(line: 1917, column: 3, scope: !11234)
!11240 = !DILocation(line: 1917, column: 17, scope: !11234)
!11241 = !DILocation(line: 1918, column: 20, scope: !11234)
!11242 = !DILocation(line: 1918, column: 10, scope: !11234)
!11243 = !DILocation(line: 1919, column: 10, scope: !11234)
!11244 = !DILocation(line: 1920, column: 20, scope: !11234)
!11245 = !DILocation(line: 1920, column: 10, scope: !11234)
!11246 = !DILocation(line: 1921, column: 10, scope: !11234)
!11247 = !DILocation(line: 1922, column: 1, scope: !11234)
!11248 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10929, file: !10929, line: 1814, type: !10930, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11249)
!11249 = !{!11250}
!11250 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11248, file: !10929, line: 1814, type: !1560)
!11251 = !DILocation(line: 0, scope: !11248)
!11252 = !DILocation(line: 1816, column: 11, scope: !11248)
!11253 = !DILocation(line: 1816, column: 46, scope: !11248)
!11254 = !DILocation(line: 1816, column: 3, scope: !11248)
!11255 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10929, file: !10929, line: 2426, type: !11256, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11258)
!11256 = !DISubroutineType(types: !11257)
!11257 = !{null, !1560, !195}
!11258 = !{!11259, !11260}
!11259 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11255, file: !10929, line: 2426, type: !1560)
!11260 = !DILocalVariable(name: "Value", arg: 2, scope: !11255, file: !10929, line: 2426, type: !195)
!11261 = !DILocation(line: 0, scope: !11255)
!11262 = !DILocation(line: 2428, column: 16, scope: !11255)
!11263 = !DILocation(line: 2428, column: 11, scope: !11255)
!11264 = !DILocation(line: 2428, column: 14, scope: !11255)
!11265 = !DILocation(line: 2429, column: 1, scope: !11255)
!11266 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10929, file: !10929, line: 1792, type: !10930, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11267)
!11267 = !{!11268}
!11268 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11266, file: !10929, line: 1792, type: !1560)
!11269 = !DILocation(line: 0, scope: !11266)
!11270 = !DILocation(line: 1794, column: 11, scope: !11266)
!11271 = !DILocation(line: 1794, column: 47, scope: !11266)
!11272 = !DILocation(line: 1794, column: 3, scope: !11266)
!11273 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10929, file: !10929, line: 2403, type: !11274, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11276)
!11274 = !DISubroutineType(types: !11275)
!11275 = !{!195, !1560}
!11276 = !{!11277}
!11277 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11273, file: !10929, line: 2403, type: !1560)
!11278 = !DILocation(line: 0, scope: !11273)
!11279 = !DILocation(line: 2405, column: 20, scope: !11273)
!11280 = !DILocation(line: 2405, column: 10, scope: !11273)
!11281 = !DILocation(line: 2405, column: 3, scope: !11273)
!11282 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1614, file: !1614, line: 1583, type: !1540, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11283)
!11283 = !{!11284, !11285, !11286, !11287, !11288, !11289}
!11284 = !DILocalVariable(name: "dev", arg: 1, scope: !11282, file: !1614, line: 1583, type: !1519)
!11285 = !DILocalVariable(name: "config", scope: !11282, file: !1614, line: 1585, type: !10620)
!11286 = !DILocalVariable(name: "data", scope: !11282, file: !1614, line: 1586, type: !10743)
!11287 = !DILocalVariable(name: "ll_parity", scope: !11282, file: !1614, line: 1587, type: !152)
!11288 = !DILocalVariable(name: "ll_datawidth", scope: !11282, file: !1614, line: 1588, type: !152)
!11289 = !DILocalVariable(name: "err", scope: !11282, file: !1614, line: 1589, type: !107)
!11290 = !DILocation(line: 0, scope: !11282)
!11291 = !DILocation(line: 1585, column: 48, scope: !11282)
!11292 = !DILocation(line: 1586, column: 38, scope: !11282)
!11293 = !DILocation(line: 1591, column: 2, scope: !11282)
!11294 = !DILocation(line: 1593, column: 29, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11282, file: !1614, line: 1593, column: 6)
!11296 = !DILocation(line: 1593, column: 7, scope: !11295)
!11297 = !DILocation(line: 1593, column: 6, scope: !11282)
!11298 = !DILocation(line: 1594, column: 3, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11300, file: !1614, line: 1594, column: 3)
!11300 = distinct !DILexicalBlock(scope: !11301, file: !1614, line: 1594, column: 3)
!11301 = distinct !DILexicalBlock(scope: !11302, file: !1614, line: 1594, column: 3)
!11302 = distinct !DILexicalBlock(scope: !11303, file: !1614, line: 1594, column: 3)
!11303 = distinct !DILexicalBlock(scope: !11295, file: !1614, line: 1593, column: 37)
!11304 = !DILocation(line: 1595, column: 3, scope: !11303)
!11305 = !DILocation(line: 1599, column: 31, scope: !11282)
!11306 = !DILocation(line: 1599, column: 71, scope: !11282)
!11307 = !DILocation(line: 1599, column: 8, scope: !11282)
!11308 = !DILocation(line: 1600, column: 10, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11282, file: !1614, line: 1600, column: 6)
!11310 = !DILocation(line: 1600, column: 6, scope: !11282)
!11311 = !DILocation(line: 1601, column: 3, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11313, file: !1614, line: 1601, column: 3)
!11313 = distinct !DILexicalBlock(scope: !11314, file: !1614, line: 1601, column: 3)
!11314 = distinct !DILexicalBlock(scope: !11315, file: !1614, line: 1601, column: 3)
!11315 = distinct !DILexicalBlock(scope: !11316, file: !1614, line: 1601, column: 3)
!11316 = distinct !DILexicalBlock(scope: !11309, file: !1614, line: 1600, column: 16)
!11317 = !DILocation(line: 1602, column: 3, scope: !11316)
!11318 = !DILocation(line: 1616, column: 36, scope: !11282)
!11319 = !DILocation(line: 1616, column: 8, scope: !11282)
!11320 = !DILocation(line: 1617, column: 10, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11282, file: !1614, line: 1617, column: 6)
!11322 = !DILocation(line: 1617, column: 6, scope: !11282)
!11323 = !DILocation(line: 1621, column: 27, scope: !11282)
!11324 = !DILocation(line: 1621, column: 2, scope: !11282)
!11325 = !DILocation(line: 1624, column: 40, scope: !11282)
!11326 = !DILocation(line: 1624, column: 2, scope: !11282)
!11327 = !DILocation(line: 1630, column: 14, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11282, file: !1614, line: 1630, column: 6)
!11329 = !DILocation(line: 1630, column: 6, scope: !11282)
!11330 = !DILocation(line: 1640, column: 4, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11332, file: !1614, line: 1640, column: 4)
!11332 = distinct !DILexicalBlock(scope: !11333, file: !1614, line: 1640, column: 4)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !1614, line: 1640, column: 4)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !1614, line: 1640, column: 4)
!11335 = distinct !DILexicalBlock(scope: !11336, file: !1614, line: 1639, column: 28)
!11336 = distinct !DILexicalBlock(scope: !11337, file: !1614, line: 1639, column: 7)
!11337 = distinct !DILexicalBlock(scope: !11338, file: !1614, line: 1638, column: 9)
!11338 = distinct !DILexicalBlock(scope: !11328, file: !1614, line: 1634, column: 13)
!11339 = !DILocation(line: 0, scope: !11328)
!11340 = !DILocation(line: 1649, column: 35, scope: !11282)
!11341 = !DILocation(line: 1649, column: 2, scope: !11282)
!11342 = !DILocation(line: 1654, column: 14, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11282, file: !1614, line: 1654, column: 6)
!11344 = !DILocation(line: 1654, column: 6, scope: !11282)
!11345 = !DILocation(line: 1655, column: 3, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11343, file: !1614, line: 1654, column: 31)
!11347 = !DILocation(line: 1656, column: 2, scope: !11346)
!11348 = !DILocation(line: 1659, column: 37, scope: !11282)
!11349 = !DILocation(line: 1659, column: 2, scope: !11282)
!11350 = !DILocation(line: 1662, column: 14, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11282, file: !1614, line: 1662, column: 6)
!11352 = !DILocation(line: 1662, column: 6, scope: !11282)
!11353 = !DILocation(line: 1663, column: 37, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11351, file: !1614, line: 1662, column: 27)
!11355 = !DILocation(line: 1663, column: 3, scope: !11354)
!11356 = !DILocation(line: 1664, column: 2, scope: !11354)
!11357 = !DILocation(line: 1684, column: 26, scope: !11282)
!11358 = !DILocation(line: 1684, column: 2, scope: !11282)
!11359 = !DILocation(line: 1722, column: 2, scope: !11282)
!11360 = !DILocation(line: 1724, column: 1, scope: !11282)
!11361 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1614, file: !1614, line: 651, type: !11362, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11364)
!11362 = !DISubroutineType(types: !11363)
!11363 = !{null, !1519}
!11364 = !{!11365, !11366, !11367}
!11365 = !DILocalVariable(name: "dev", arg: 1, scope: !11361, file: !1614, line: 651, type: !1519)
!11366 = !DILocalVariable(name: "data", scope: !11361, file: !1614, line: 653, type: !10743)
!11367 = !DILocalVariable(name: "clk", scope: !11361, file: !1614, line: 654, type: !11368)
!11368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1519)
!11369 = !DILocation(line: 0, scope: !11361)
!11370 = !DILocation(line: 653, column: 38, scope: !11361)
!11371 = !DILocation(line: 656, column: 8, scope: !11361)
!11372 = !DILocation(line: 656, column: 14, scope: !11361)
!11373 = !DILocation(line: 657, column: 1, scope: !11361)
!11374 = distinct !DISubprogram(name: "device_is_ready", scope: !9739, file: !9739, line: 47, type: !11375, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11377)
!11375 = !DISubroutineType(types: !11376)
!11376 = !{!145, !1519}
!11377 = !{!11378}
!11378 = !DILocalVariable(name: "dev", arg: 1, scope: !11374, file: !9739, line: 47, type: !1519)
!11379 = !DILocation(line: 0, scope: !11374)
!11380 = !DILocation(line: 55, column: 2, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11374, file: !9739, line: 55, column: 2)
!11382 = !{i64 2155138042}
!11383 = !DILocation(line: 56, column: 9, scope: !11374)
!11384 = !DILocation(line: 56, column: 2, scope: !11374)
!11385 = distinct !DISubprogram(name: "clock_control_on", scope: !968, file: !968, line: 123, type: !1578, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11386)
!11386 = !{!11387, !11388, !11389}
!11387 = !DILocalVariable(name: "dev", arg: 1, scope: !11385, file: !968, line: 123, type: !1519)
!11388 = !DILocalVariable(name: "sys", arg: 2, scope: !11385, file: !968, line: 124, type: !1060)
!11389 = !DILocalVariable(name: "api", scope: !11385, file: !968, line: 126, type: !1571)
!11390 = !DILocation(line: 0, scope: !11385)
!11391 = !DILocation(line: 127, column: 49, scope: !11385)
!11392 = !DILocation(line: 129, column: 14, scope: !11385)
!11393 = !DILocation(line: 129, column: 9, scope: !11385)
!11394 = !DILocation(line: 129, column: 2, scope: !11385)
!11395 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1654, file: !1654, line: 342, type: !11396, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11398)
!11396 = !DISubroutineType(types: !11397)
!11397 = !{!107, !1651, !195}
!11398 = !{!11399, !11400, !11401, !11402}
!11399 = !DILocalVariable(name: "config", arg: 1, scope: !11395, file: !1654, line: 342, type: !1651)
!11400 = !DILocalVariable(name: "id", arg: 2, scope: !11395, file: !1654, line: 343, type: !195)
!11401 = !DILocalVariable(name: "ret", scope: !11395, file: !1654, line: 345, type: !107)
!11402 = !DILocalVariable(name: "state", scope: !11395, file: !1654, line: 346, type: !1657)
!11403 = !DILocation(line: 0, scope: !11395)
!11404 = !DILocation(line: 346, column: 2, scope: !11395)
!11405 = !DILocation(line: 348, column: 8, scope: !11395)
!11406 = !DILocation(line: 349, column: 10, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11395, file: !1654, line: 349, column: 6)
!11408 = !DILocation(line: 349, column: 6, scope: !11395)
!11409 = !DILocation(line: 353, column: 44, scope: !11395)
!11410 = !DILocation(line: 353, column: 9, scope: !11395)
!11411 = !DILocation(line: 353, column: 2, scope: !11395)
!11412 = !DILocation(line: 354, column: 1, scope: !11395)
!11413 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10929, file: !10929, line: 497, type: !11107, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11414)
!11414 = !{!11415, !11416, !11417}
!11415 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11413, file: !10929, line: 497, type: !1560)
!11416 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11413, file: !10929, line: 497, type: !152)
!11417 = !DILocalVariable(name: "val", scope: !11418, file: !10929, line: 499, type: !152)
!11418 = distinct !DILexicalBlock(scope: !11413, file: !10929, line: 499, column: 3)
!11419 = !DILocation(line: 0, scope: !11413)
!11420 = !DILocation(line: 499, column: 3, scope: !11418)
!11421 = !DILocalVariable(name: "addr", arg: 1, scope: !11422, file: !6253, line: 476, type: !1610)
!11422 = distinct !DISubprogram(name: "__LDREXW", scope: !6253, file: !6253, line: 476, type: !11423, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11425)
!11423 = !DISubroutineType(types: !11424)
!11424 = !{!152, !1610}
!11425 = !{!11421, !11426}
!11426 = !DILocalVariable(name: "result", scope: !11422, file: !6253, line: 478, type: !152)
!11427 = !DILocation(line: 0, scope: !11422, inlinedAt: !11428)
!11428 = distinct !DILocation(line: 499, column: 3, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11418, file: !10929, line: 499, column: 3)
!11430 = !DILocation(line: 480, column: 4, scope: !11422, inlinedAt: !11428)
!11431 = !{i64 3577931}
!11432 = !DILocation(line: 499, column: 3, scope: !11429)
!11433 = !DILocation(line: 0, scope: !11418)
!11434 = !DILocalVariable(name: "value", arg: 1, scope: !11435, file: !6253, line: 527, type: !152)
!11435 = distinct !DISubprogram(name: "__STREXW", scope: !6253, file: !6253, line: 527, type: !11436, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11438)
!11436 = !DISubroutineType(types: !11437)
!11437 = !{!152, !152, !1610}
!11438 = !{!11434, !11439, !11440}
!11439 = !DILocalVariable(name: "addr", arg: 2, scope: !11435, file: !6253, line: 527, type: !1610)
!11440 = !DILocalVariable(name: "result", scope: !11435, file: !6253, line: 529, type: !152)
!11441 = !DILocation(line: 0, scope: !11435, inlinedAt: !11442)
!11442 = distinct !DILocation(line: 499, column: 3, scope: !11418)
!11443 = !DILocation(line: 531, column: 4, scope: !11435, inlinedAt: !11442)
!11444 = !{i64 3579367}
!11445 = distinct !{!11445, !11420, !11420}
!11446 = !DILocation(line: 500, column: 1, scope: !11413)
!11447 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10929, file: !10929, line: 850, type: !11116, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11448)
!11448 = !{!11449, !11450, !11451, !11452}
!11449 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11447, file: !10929, line: 850, type: !1560)
!11450 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11447, file: !10929, line: 850, type: !152)
!11451 = !DILocalVariable(name: "Parity", arg: 3, scope: !11447, file: !10929, line: 850, type: !152)
!11452 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11447, file: !10929, line: 851, type: !152)
!11453 = !DILocation(line: 0, scope: !11447)
!11454 = !DILocation(line: 853, column: 3, scope: !11447)
!11455 = !DILocation(line: 854, column: 3, scope: !11447)
!11456 = !DILocation(line: 855, column: 1, scope: !11447)
!11457 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10929, file: !10929, line: 1337, type: !10992, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11458)
!11458 = !{!11459}
!11459 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11457, file: !10929, line: 1337, type: !1560)
!11460 = !DILocation(line: 0, scope: !11457)
!11461 = !DILocation(line: 1339, column: 3, scope: !11457)
!11462 = !DILocation(line: 1340, column: 1, scope: !11457)
!11463 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1654, file: !1654, line: 316, type: !11464, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11466)
!11464 = !DISubroutineType(types: !11465)
!11465 = !{!107, !1651, !1657}
!11466 = !{!11467, !11468, !11469}
!11467 = !DILocalVariable(name: "config", arg: 1, scope: !11463, file: !1654, line: 317, type: !1651)
!11468 = !DILocalVariable(name: "state", arg: 2, scope: !11463, file: !1654, line: 318, type: !1657)
!11469 = !DILocalVariable(name: "reg", scope: !11463, file: !1654, line: 320, type: !22)
!11470 = !DILocation(line: 0, scope: !11463)
!11471 = !DILocation(line: 329, column: 39, scope: !11463)
!11472 = !DILocation(line: 329, column: 52, scope: !11463)
!11473 = !DILocation(line: 329, column: 9, scope: !11463)
!11474 = !DILocation(line: 329, column: 2, scope: !11463)
!11475 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11375, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !11476)
!11476 = !{!11477}
!11477 = !DILocalVariable(name: "dev", arg: 1, scope: !11475, file: !247, line: 730, type: !1519)
!11478 = !DILocation(line: 0, scope: !11475)
!11479 = !DILocation(line: 732, column: 9, scope: !11475)
!11480 = !DILocation(line: 732, column: 2, scope: !11475)
!11481 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1777, file: !1777, line: 270, type: !1783, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11482)
!11482 = !{!11483}
!11483 = !DILocalVariable(name: "dev", arg: 1, scope: !11481, file: !1777, line: 270, type: !1785)
!11484 = !DILocation(line: 0, scope: !11481)
!11485 = !DILocation(line: 274, column: 2, scope: !11481)
!11486 = !DILocation(line: 275, column: 12, scope: !11481)
!11487 = !DILocation(line: 276, column: 15, scope: !11481)
!11488 = !DILocation(line: 277, column: 16, scope: !11481)
!11489 = !DILocation(line: 278, column: 15, scope: !11481)
!11490 = !DILocation(line: 279, column: 16, scope: !11481)
!11491 = !DILocation(line: 282, column: 2, scope: !11481)
!11492 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6293, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11493)
!11493 = !{!11494, !11495}
!11494 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11492, file: !463, line: 1814, type: !922)
!11495 = !DILocalVariable(name: "priority", arg: 2, scope: !11492, file: !463, line: 1814, type: !152)
!11496 = !DILocation(line: 0, scope: !11492)
!11497 = !DILocation(line: 1822, column: 46, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11499, file: !463, line: 1821, column: 3)
!11499 = distinct !DILexicalBlock(scope: !11492, file: !463, line: 1816, column: 7)
!11500 = !DILocation(line: 1824, column: 1, scope: !11492)
!11501 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1777, file: !1777, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11502)
!11502 = !{!11503, !11504}
!11503 = !DILocalVariable(name: "arg", arg: 1, scope: !11501, file: !1777, line: 118, type: !106)
!11504 = !DILocalVariable(name: "dticks", scope: !11501, file: !1777, line: 121, type: !152)
!11505 = !DILocation(line: 0, scope: !11501)
!11506 = !DILocation(line: 124, column: 2, scope: !11501)
!11507 = !DILocation(line: 129, column: 17, scope: !11501)
!11508 = !DILocation(line: 129, column: 14, scope: !11501)
!11509 = !DILocation(line: 130, column: 15, scope: !11501)
!11510 = !DILocation(line: 145, column: 27, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !1777, line: 132, column: 16)
!11512 = distinct !DILexicalBlock(scope: !11501, file: !1777, line: 132, column: 6)
!11513 = !DILocation(line: 145, column: 25, scope: !11511)
!11514 = !DILocation(line: 145, column: 45, scope: !11511)
!11515 = !DILocation(line: 146, column: 30, scope: !11511)
!11516 = !DILocation(line: 146, column: 20, scope: !11511)
!11517 = !DILocation(line: 147, column: 3, scope: !11511)
!11518 = !DILocation(line: 151, column: 2, scope: !11501)
!11519 = !DILocation(line: 152, column: 1, scope: !11501)
!11520 = distinct !DISubprogram(name: "elapsed", scope: !1777, file: !1777, line: 85, type: !6340, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11521)
!11521 = !{!11522, !11523, !11524}
!11522 = !DILocalVariable(name: "val1", scope: !11520, file: !1777, line: 87, type: !152)
!11523 = !DILocalVariable(name: "ctrl", scope: !11520, file: !1777, line: 88, type: !152)
!11524 = !DILocalVariable(name: "val2", scope: !11520, file: !1777, line: 89, type: !152)
!11525 = !DILocation(line: 87, column: 27, scope: !11520)
!11526 = !DILocation(line: 0, scope: !11520)
!11527 = !DILocation(line: 88, column: 27, scope: !11520)
!11528 = !DILocation(line: 89, column: 27, scope: !11520)
!11529 = !DILocation(line: 105, column: 12, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11520, file: !1777, line: 105, column: 6)
!11531 = !DILocation(line: 106, column: 6, scope: !11530)
!11532 = !DILocation(line: 107, column: 16, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11530, file: !1777, line: 106, column: 24)
!11534 = !DILocation(line: 111, column: 18, scope: !11533)
!11535 = !DILocation(line: 112, column: 2, scope: !11533)
!11536 = !DILocation(line: 114, column: 20, scope: !11520)
!11537 = !DILocation(line: 114, column: 30, scope: !11520)
!11538 = !DILocation(line: 114, column: 28, scope: !11520)
!11539 = !DILocation(line: 114, column: 2, scope: !11520)
!11540 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1777, file: !1777, line: 154, type: !11541, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11543)
!11541 = !DISubroutineType(types: !11542)
!11542 = !{null, !896, !145}
!11543 = !{!11544, !11545, !11546, !11547, !11548, !11549, !11550, !11555, !11556}
!11544 = !DILocalVariable(name: "ticks", arg: 1, scope: !11540, file: !1777, line: 154, type: !896)
!11545 = !DILocalVariable(name: "idle", arg: 2, scope: !11540, file: !1777, line: 154, type: !145)
!11546 = !DILocalVariable(name: "delay", scope: !11540, file: !1777, line: 169, type: !152)
!11547 = !DILocalVariable(name: "val1", scope: !11540, file: !1777, line: 170, type: !152)
!11548 = !DILocalVariable(name: "val2", scope: !11540, file: !1777, line: 170, type: !152)
!11549 = !DILocalVariable(name: "last_load_", scope: !11540, file: !1777, line: 171, type: !152)
!11550 = !DILocalVariable(name: "key", scope: !11540, file: !1777, line: 176, type: !11551)
!11551 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !11552)
!11552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !11553)
!11553 = !{!11554}
!11554 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11552, file: !420, line: 33, baseType: !107, size: 32)
!11555 = !DILocalVariable(name: "pending", scope: !11540, file: !1777, line: 178, type: !152)
!11556 = !DILocalVariable(name: "unannounced", scope: !11540, file: !1777, line: 185, type: !152)
!11557 = !DILocation(line: 0, scope: !11540)
!11558 = !DILocation(line: 162, column: 49, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11540, file: !1777, line: 162, column: 6)
!11560 = !DILocation(line: 163, column: 17, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11559, file: !1777, line: 162, column: 78)
!11562 = !DILocation(line: 164, column: 13, scope: !11561)
!11563 = !DILocation(line: 165, column: 3, scope: !11561)
!11564 = !DILocation(line: 171, column: 24, scope: !11540)
!11565 = !DILocation(line: 173, column: 10, scope: !11540)
!11566 = !DILocation(line: 174, column: 10, scope: !11540)
!11567 = !DILocalVariable(name: "l", arg: 1, scope: !11568, file: !420, line: 136, type: !11571)
!11568 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !11569, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11572)
!11569 = !DISubroutineType(types: !11570)
!11570 = !{!11551, !11571}
!11571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!11572 = !{!11567, !11573}
!11573 = !DILocalVariable(name: "k", scope: !11568, file: !420, line: 139, type: !11551)
!11574 = !DILocation(line: 0, scope: !11568, inlinedAt: !11575)
!11575 = distinct !DILocation(line: 176, column: 25, scope: !11540)
!11576 = !DILocation(line: 55, column: 2, scope: !11577, inlinedAt: !11581)
!11577 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5934, file: !5934, line: 42, type: !5935, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11578)
!11578 = !{!11579, !11580}
!11579 = !DILocalVariable(name: "key", scope: !11577, file: !5934, line: 44, type: !32)
!11580 = !DILocalVariable(name: "tmp", scope: !11577, file: !5934, line: 53, type: !32)
!11581 = distinct !DILocation(line: 145, column: 10, scope: !11568, inlinedAt: !11575)
!11582 = !{i64 2201129}
!11583 = !DILocation(line: 0, scope: !11577, inlinedAt: !11581)
!11584 = !DILocation(line: 148, column: 2, scope: !11585, inlinedAt: !11575)
!11585 = distinct !DILexicalBlock(scope: !11586, file: !420, line: 148, column: 2)
!11586 = distinct !DILexicalBlock(scope: !11568, file: !420, line: 148, column: 2)
!11587 = !DILocation(line: 148, column: 2, scope: !11586, inlinedAt: !11575)
!11588 = !DILocation(line: 148, column: 2, scope: !11589, inlinedAt: !11575)
!11589 = distinct !DILexicalBlock(scope: !11585, file: !420, line: 148, column: 2)
!11590 = !DILocation(line: 160, column: 2, scope: !11568, inlinedAt: !11575)
!11591 = !DILocation(line: 178, column: 21, scope: !11540)
!11592 = !DILocation(line: 180, column: 18, scope: !11540)
!11593 = !DILocation(line: 182, column: 14, scope: !11540)
!11594 = !DILocation(line: 183, column: 15, scope: !11540)
!11595 = !DILocation(line: 185, column: 39, scope: !11540)
!11596 = !DILocation(line: 185, column: 37, scope: !11540)
!11597 = !DILocation(line: 187, column: 27, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11540, file: !1777, line: 187, column: 6)
!11599 = !DILocation(line: 187, column: 6, scope: !11540)
!11600 = !DILocation(line: 202, column: 27, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11598, file: !1777, line: 195, column: 9)
!11602 = !DILocation(line: 202, column: 48, scope: !11601)
!11603 = !DILocation(line: 203, column: 9, scope: !11601)
!11604 = !DILocation(line: 204, column: 11, scope: !11601)
!11605 = !DILocation(line: 205, column: 13, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11601, file: !1777, line: 205, column: 7)
!11607 = !DILocation(line: 205, column: 7, scope: !11601)
!11608 = !DILocation(line: 0, scope: !11598)
!11609 = !DILocation(line: 212, column: 18, scope: !11540)
!11610 = !DILocation(line: 214, column: 28, scope: !11540)
!11611 = !DILocation(line: 214, column: 16, scope: !11540)
!11612 = !DILocation(line: 215, column: 15, scope: !11540)
!11613 = !DILocation(line: 227, column: 11, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11540, file: !1777, line: 227, column: 6)
!11615 = !DILocation(line: 227, column: 6, scope: !11540)
!11616 = !DILocation(line: 228, column: 15, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11614, file: !1777, line: 227, column: 19)
!11618 = !DILocation(line: 228, column: 38, scope: !11617)
!11619 = !DILocation(line: 228, column: 24, scope: !11617)
!11620 = !DILocation(line: 229, column: 2, scope: !11617)
!11621 = !DILocation(line: 230, column: 24, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11614, file: !1777, line: 229, column: 9)
!11623 = !DILocation(line: 230, column: 15, scope: !11622)
!11624 = !DILocation(line: 0, scope: !11614)
!11625 = !DILocalVariable(name: "key", arg: 2, scope: !11626, file: !420, line: 190, type: !11551)
!11626 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !11627, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11629)
!11627 = !DISubroutineType(types: !11628)
!11628 = !{null, !11571, !11551}
!11629 = !{!11630, !11625}
!11630 = !DILocalVariable(name: "l", arg: 1, scope: !11626, file: !420, line: 189, type: !11571)
!11631 = !DILocation(line: 0, scope: !11626, inlinedAt: !11632)
!11632 = distinct !DILocation(line: 232, column: 2, scope: !11540)
!11633 = !DILocation(line: 194, column: 2, scope: !11634, inlinedAt: !11632)
!11634 = distinct !DILexicalBlock(scope: !11635, file: !420, line: 194, column: 2)
!11635 = distinct !DILexicalBlock(scope: !11626, file: !420, line: 194, column: 2)
!11636 = !DILocation(line: 194, column: 2, scope: !11635, inlinedAt: !11632)
!11637 = !DILocation(line: 194, column: 2, scope: !11638, inlinedAt: !11632)
!11638 = distinct !DILexicalBlock(scope: !11634, file: !420, line: 194, column: 2)
!11639 = !DILocalVariable(name: "key", arg: 1, scope: !11640, file: !5934, line: 84, type: !32)
!11640 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5934, file: !5934, line: 84, type: !5945, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11641)
!11641 = !{!11639}
!11642 = !DILocation(line: 0, scope: !11640, inlinedAt: !11643)
!11643 = distinct !DILocation(line: 215, column: 2, scope: !11626, inlinedAt: !11632)
!11644 = !DILocation(line: 95, column: 2, scope: !11640, inlinedAt: !11643)
!11645 = !{i64 2201946}
!11646 = !DILocation(line: 234, column: 1, scope: !11540)
!11647 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1777, file: !1777, line: 236, type: !6340, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11648)
!11648 = !{!11649, !11650}
!11649 = !DILocalVariable(name: "key", scope: !11647, file: !1777, line: 242, type: !11551)
!11650 = !DILocalVariable(name: "cyc", scope: !11647, file: !1777, line: 243, type: !152)
!11651 = !DILocation(line: 0, scope: !11568, inlinedAt: !11652)
!11652 = distinct !DILocation(line: 242, column: 25, scope: !11647)
!11653 = !DILocation(line: 55, column: 2, scope: !11577, inlinedAt: !11654)
!11654 = distinct !DILocation(line: 145, column: 10, scope: !11568, inlinedAt: !11652)
!11655 = !DILocation(line: 0, scope: !11577, inlinedAt: !11654)
!11656 = !DILocation(line: 148, column: 2, scope: !11585, inlinedAt: !11652)
!11657 = !DILocation(line: 148, column: 2, scope: !11586, inlinedAt: !11652)
!11658 = !DILocation(line: 148, column: 2, scope: !11589, inlinedAt: !11652)
!11659 = !DILocation(line: 160, column: 2, scope: !11568, inlinedAt: !11652)
!11660 = !DILocation(line: 0, scope: !11647)
!11661 = !DILocation(line: 243, column: 17, scope: !11647)
!11662 = !DILocation(line: 243, column: 29, scope: !11647)
!11663 = !DILocation(line: 243, column: 43, scope: !11647)
!11664 = !DILocation(line: 0, scope: !11626, inlinedAt: !11665)
!11665 = distinct !DILocation(line: 245, column: 2, scope: !11647)
!11666 = !DILocation(line: 194, column: 2, scope: !11634, inlinedAt: !11665)
!11667 = !DILocation(line: 194, column: 2, scope: !11635, inlinedAt: !11665)
!11668 = !DILocation(line: 194, column: 2, scope: !11638, inlinedAt: !11665)
!11669 = !DILocation(line: 243, column: 27, scope: !11647)
!11670 = !DILocation(line: 243, column: 41, scope: !11647)
!11671 = !DILocation(line: 0, scope: !11640, inlinedAt: !11672)
!11672 = distinct !DILocation(line: 215, column: 2, scope: !11626, inlinedAt: !11665)
!11673 = !DILocation(line: 95, column: 2, scope: !11640, inlinedAt: !11672)
!11674 = !DILocation(line: 246, column: 13, scope: !11647)
!11675 = !DILocation(line: 246, column: 2, scope: !11647)
!11676 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1777, file: !1777, line: 249, type: !6340, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !11677)
!11677 = !{!11678, !11679}
!11678 = !DILocalVariable(name: "key", scope: !11676, file: !1777, line: 251, type: !11551)
!11679 = !DILocalVariable(name: "ret", scope: !11676, file: !1777, line: 252, type: !152)
!11680 = !DILocation(line: 0, scope: !11568, inlinedAt: !11681)
!11681 = distinct !DILocation(line: 251, column: 25, scope: !11676)
!11682 = !DILocation(line: 55, column: 2, scope: !11577, inlinedAt: !11683)
!11683 = distinct !DILocation(line: 145, column: 10, scope: !11568, inlinedAt: !11681)
!11684 = !DILocation(line: 0, scope: !11577, inlinedAt: !11683)
!11685 = !DILocation(line: 148, column: 2, scope: !11585, inlinedAt: !11681)
!11686 = !DILocation(line: 148, column: 2, scope: !11586, inlinedAt: !11681)
!11687 = !DILocation(line: 148, column: 2, scope: !11589, inlinedAt: !11681)
!11688 = !DILocation(line: 160, column: 2, scope: !11568, inlinedAt: !11681)
!11689 = !DILocation(line: 0, scope: !11676)
!11690 = !DILocation(line: 252, column: 17, scope: !11676)
!11691 = !DILocation(line: 252, column: 29, scope: !11676)
!11692 = !DILocation(line: 0, scope: !11626, inlinedAt: !11693)
!11693 = distinct !DILocation(line: 254, column: 2, scope: !11676)
!11694 = !DILocation(line: 194, column: 2, scope: !11634, inlinedAt: !11693)
!11695 = !DILocation(line: 194, column: 2, scope: !11635, inlinedAt: !11693)
!11696 = !DILocation(line: 194, column: 2, scope: !11638, inlinedAt: !11693)
!11697 = !DILocation(line: 252, column: 27, scope: !11676)
!11698 = !DILocation(line: 0, scope: !11640, inlinedAt: !11699)
!11699 = distinct !DILocation(line: 215, column: 2, scope: !11626, inlinedAt: !11693)
!11700 = !DILocation(line: 95, column: 2, scope: !11640, inlinedAt: !11699)
!11701 = !DILocation(line: 255, column: 2, scope: !11676)
!11702 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1777, file: !1777, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !2166)
!11703 = !DILocation(line: 260, column: 6, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11702, file: !1777, line: 260, column: 6)
!11705 = !DILocation(line: 260, column: 16, scope: !11704)
!11706 = !DILocation(line: 260, column: 6, scope: !11702)
!11707 = !DILocation(line: 261, column: 17, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11704, file: !1777, line: 260, column: 34)
!11709 = !DILocation(line: 262, column: 2, scope: !11708)
!11710 = !DILocation(line: 263, column: 1, scope: !11702)
!11711 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1777, file: !1777, line: 265, type: !3089, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !2166)
!11712 = !DILocation(line: 267, column: 16, scope: !11711)
!11713 = !DILocation(line: 268, column: 1, scope: !11711)
!11714 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11715, file: !11715, line: 9, type: !11716, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11739)
!11715 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11716 = !DISubroutineType(types: !11717)
!11717 = !{!107, !11718, !195, !11738}
!11718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11719, size: 32)
!11719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11720)
!11720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1654, line: 60, size: 64, elements: !11721)
!11721 = !{!11722, !11737}
!11722 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11720, file: !1654, line: 69, baseType: !11723, size: 32)
!11723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11724, size: 32)
!11724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11725)
!11725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1654, line: 50, size: 64, elements: !11726)
!11726 = !{!11727, !11735, !11736}
!11727 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11725, file: !1654, line: 52, baseType: !11728, size: 32)
!11728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11729, size: 32)
!11729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11730)
!11730 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1665, line: 37, baseType: !11731)
!11731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1665, line: 32, size: 64, elements: !11732)
!11732 = !{!11733, !11734}
!11733 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11731, file: !1665, line: 34, baseType: !152, size: 32)
!11734 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11731, file: !1665, line: 36, baseType: !152, size: 32, offset: 32)
!11735 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11725, file: !1654, line: 54, baseType: !195, size: 8, offset: 32)
!11736 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11725, file: !1654, line: 56, baseType: !195, size: 8, offset: 40)
!11737 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11720, file: !1654, line: 71, baseType: !195, size: 8, offset: 32)
!11738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11723, size: 32)
!11739 = !{!11740, !11741, !11742}
!11740 = !DILocalVariable(name: "config", arg: 1, scope: !11714, file: !11715, line: 9, type: !11718)
!11741 = !DILocalVariable(name: "id", arg: 2, scope: !11714, file: !11715, line: 9, type: !195)
!11742 = !DILocalVariable(name: "state", arg: 3, scope: !11714, file: !11715, line: 10, type: !11738)
!11743 = !DILocation(line: 0, scope: !11714)
!11744 = !DILocation(line: 12, column: 20, scope: !11714)
!11745 = !DILocation(line: 13, column: 27, scope: !11714)
!11746 = !DILocation(line: 13, column: 42, scope: !11714)
!11747 = !DILocation(line: 13, column: 19, scope: !11714)
!11748 = !DILocation(line: 13, column: 16, scope: !11714)
!11749 = !DILocation(line: 13, column: 2, scope: !11714)
!11750 = distinct !{!11750, !11749, !11751}
!11751 = !DILocation(line: 19, column: 2, scope: !11714)
!11752 = !DILocation(line: 14, column: 23, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11754, file: !11715, line: 14, column: 7)
!11754 = distinct !DILexicalBlock(scope: !11714, file: !11715, line: 13, column: 54)
!11755 = !DILocation(line: 14, column: 10, scope: !11753)
!11756 = !DILocation(line: 18, column: 11, scope: !11754)
!11757 = !DILocation(line: 14, column: 7, scope: !11754)
!11758 = !DILocation(line: 22, column: 1, scope: !11714)
!11759 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1896, file: !1896, line: 193, type: !11760, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1814, retainedNodes: !11769)
!11760 = !DISubroutineType(types: !11761)
!11761 = !{!107, !11762, !195, !22}
!11762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11763, size: 32)
!11763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11764)
!11764 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1665, line: 37, baseType: !11765)
!11765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1665, line: 32, size: 64, elements: !11766)
!11766 = !{!11767, !11768}
!11767 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11765, file: !1665, line: 34, baseType: !152, size: 32)
!11768 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11765, file: !1665, line: 36, baseType: !152, size: 32, offset: 32)
!11769 = !{!11770, !11771, !11772, !11773, !11774, !11775, !11776, !11777, !11779}
!11770 = !DILocalVariable(name: "pins", arg: 1, scope: !11759, file: !1896, line: 193, type: !11762)
!11771 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11759, file: !1896, line: 193, type: !195)
!11772 = !DILocalVariable(name: "reg", arg: 3, scope: !11759, file: !1896, line: 194, type: !22)
!11773 = !DILocalVariable(name: "pin", scope: !11759, file: !1896, line: 196, type: !152)
!11774 = !DILocalVariable(name: "mux", scope: !11759, file: !1896, line: 196, type: !152)
!11775 = !DILocalVariable(name: "pin_cgf", scope: !11759, file: !1896, line: 197, type: !152)
!11776 = !DILocalVariable(name: "ret", scope: !11759, file: !1896, line: 198, type: !107)
!11777 = !DILocalVariable(name: "i", scope: !11778, file: !1896, line: 209, type: !195)
!11778 = distinct !DILexicalBlock(scope: !11759, file: !1896, line: 209, column: 2)
!11779 = !DILocalVariable(name: "gpio_out", scope: !11780, file: !1896, line: 239, type: !152)
!11780 = distinct !DILexicalBlock(scope: !11781, file: !1896, line: 238, column: 55)
!11781 = distinct !DILexicalBlock(scope: !11782, file: !1896, line: 238, column: 14)
!11782 = distinct !DILexicalBlock(scope: !11783, file: !1896, line: 236, column: 14)
!11783 = distinct !DILexicalBlock(scope: !11784, file: !1896, line: 234, column: 7)
!11784 = distinct !DILexicalBlock(scope: !11785, file: !1896, line: 209, column: 41)
!11785 = distinct !DILexicalBlock(scope: !11778, file: !1896, line: 209, column: 2)
!11786 = !DILocation(line: 0, scope: !11759)
!11787 = !DILocation(line: 0, scope: !11778)
!11788 = !DILocation(line: 209, column: 25, scope: !11785)
!11789 = !DILocation(line: 209, column: 2, scope: !11778)
!11790 = distinct !{!11790, !11789, !11791}
!11791 = !DILocation(line: 259, column: 2, scope: !11778)
!11792 = !DILocation(line: 210, column: 17, scope: !11784)
!11793 = !DILocation(line: 234, column: 7, scope: !11783)
!11794 = !DILocation(line: 234, column: 33, scope: !11783)
!11795 = !DILocation(line: 234, column: 7, scope: !11784)
!11796 = !DILocation(line: 235, column: 22, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11783, file: !1896, line: 234, column: 49)
!11798 = !DILocation(line: 235, column: 29, scope: !11797)
!11799 = !DILocation(line: 236, column: 3, scope: !11797)
!11800 = !DILocation(line: 236, column: 14, scope: !11783)
!11801 = !DILocation(line: 239, column: 32, scope: !11780)
!11802 = !DILocation(line: 0, scope: !11780)
!11803 = !DILocation(line: 241, column: 8, scope: !11780)
!11804 = !DILocation(line: 246, column: 3, scope: !11780)
!11805 = !DILocation(line: 252, column: 9, scope: !11784)
!11806 = !DILocation(line: 255, column: 9, scope: !11784)
!11807 = !DILocation(line: 256, column: 11, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11784, file: !1896, line: 256, column: 7)
!11809 = !DILocation(line: 209, column: 37, scope: !11785)
!11810 = !DILocation(line: 256, column: 7, scope: !11784)
!11811 = !DILocation(line: 262, column: 1, scope: !11759)
!11812 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1896, file: !1896, line: 176, type: !11813, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1814, retainedNodes: !11815)
!11813 = !DISubroutineType(types: !11814)
!11814 = !{!107, !152, !152, !152}
!11815 = !{!11816, !11817, !11818, !11819}
!11816 = !DILocalVariable(name: "pin", arg: 1, scope: !11812, file: !1896, line: 176, type: !152)
!11817 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11812, file: !1896, line: 176, type: !152)
!11818 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11812, file: !1896, line: 176, type: !152)
!11819 = !DILocalVariable(name: "port_device", scope: !11812, file: !1896, line: 178, type: !1826)
!11820 = !DILocation(line: 0, scope: !11812)
!11821 = !DILocation(line: 180, column: 22, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11812, file: !1896, line: 180, column: 6)
!11823 = !DILocation(line: 180, column: 6, scope: !11812)
!11824 = !DILocation(line: 180, column: 6, scope: !11822)
!11825 = !DILocation(line: 184, column: 16, scope: !11812)
!11826 = !DILocation(line: 186, column: 19, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11812, file: !1896, line: 186, column: 6)
!11828 = !DILocation(line: 186, column: 28, scope: !11827)
!11829 = !DILocation(line: 186, column: 33, scope: !11827)
!11830 = !DILocation(line: 186, column: 6, scope: !11812)
!11831 = !DILocation(line: 190, column: 43, scope: !11812)
!11832 = !DILocation(line: 190, column: 9, scope: !11812)
!11833 = !DILocation(line: 190, column: 2, scope: !11812)
!11834 = !DILocation(line: 191, column: 1, scope: !11812)
!11835 = distinct !DISubprogram(name: "device_is_ready", scope: !9739, file: !9739, line: 47, type: !11836, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1814, retainedNodes: !11838)
!11836 = !DISubroutineType(types: !11837)
!11837 = !{!145, !1826}
!11838 = !{!11839}
!11839 = !DILocalVariable(name: "dev", arg: 1, scope: !11835, file: !9739, line: 47, type: !1826)
!11840 = !DILocation(line: 0, scope: !11835)
!11841 = !DILocation(line: 55, column: 2, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11835, file: !9739, line: 55, column: 2)
!11843 = !{i64 2149439196}
!11844 = !DILocation(line: 56, column: 9, scope: !11835)
!11845 = !DILocation(line: 56, column: 2, scope: !11835)
!11846 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11836, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1814, retainedNodes: !11847)
!11847 = !{!11848}
!11848 = !DILocalVariable(name: "dev", arg: 1, scope: !11846, file: !247, line: 730, type: !1826)
!11849 = !DILocation(line: 0, scope: !11846)
!11850 = !DILocation(line: 732, column: 9, scope: !11846)
!11851 = !DILocation(line: 732, column: 2, scope: !11846)
!11852 = distinct !DISubprogram(name: "SystemInit", scope: !1944, file: !1944, line: 167, type: !3089, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !2166)
!11853 = !DILocation(line: 182, column: 1, scope: !11852)
!11854 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1944, file: !1944, line: 220, type: !3089, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !11855)
!11855 = !{!11856, !11857, !11858, !11859, !11860}
!11856 = !DILocalVariable(name: "tmp", scope: !11854, file: !1944, line: 222, type: !152)
!11857 = !DILocalVariable(name: "pllvco", scope: !11854, file: !1944, line: 222, type: !152)
!11858 = !DILocalVariable(name: "pllp", scope: !11854, file: !1944, line: 222, type: !152)
!11859 = !DILocalVariable(name: "pllsource", scope: !11854, file: !1944, line: 222, type: !152)
!11860 = !DILocalVariable(name: "pllm", scope: !11854, file: !1944, line: 222, type: !152)
!11861 = !DILocation(line: 0, scope: !11854)
!11862 = !DILocation(line: 225, column: 14, scope: !11854)
!11863 = !DILocation(line: 225, column: 19, scope: !11854)
!11864 = !DILocation(line: 227, column: 3, scope: !11854)
!11865 = !DILocation(line: 234, column: 7, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11854, file: !1944, line: 228, column: 3)
!11867 = !DILocation(line: 240, column: 25, scope: !11866)
!11868 = !DILocation(line: 241, column: 19, scope: !11866)
!11869 = !DILocation(line: 241, column: 27, scope: !11866)
!11870 = !DILocation(line: 243, column: 21, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11866, file: !1944, line: 243, column: 11)
!11872 = !DILocation(line: 0, scope: !11871)
!11873 = !DILocation(line: 254, column: 22, scope: !11866)
!11874 = !DILocation(line: 254, column: 62, scope: !11866)
!11875 = !DILocation(line: 255, column: 31, scope: !11866)
!11876 = !DILocation(line: 256, column: 7, scope: !11866)
!11877 = !DILocation(line: 0, scope: !11866)
!11878 = !DILocation(line: 263, column: 30, scope: !11854)
!11879 = !DILocation(line: 263, column: 52, scope: !11854)
!11880 = !DILocation(line: 263, column: 9, scope: !11854)
!11881 = !DILocation(line: 265, column: 19, scope: !11854)
!11882 = !DILocation(line: 266, column: 1, scope: !11854)
!11883 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11884, file: !11884, line: 200, type: !11885, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!11884 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11885 = !DISubroutineType(types: !11886)
!11886 = !{!11887}
!11887 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2906, line: 44, baseType: !2905)
!11888 = !DILocation(line: 202, column: 3, scope: !11883)
!11889 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11884, file: !11884, line: 219, type: !11890, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !11914)
!11890 = !DISubroutineType(types: !11891)
!11891 = !{!11887, !11892}
!11892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11893, size: 32)
!11893 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11894, line: 70, baseType: !11895)
!11894 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11894, line: 49, size: 384, elements: !11896)
!11896 = !{!11897, !11898, !11899, !11900, !11901, !11902, !11903}
!11897 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11895, file: !11894, line: 51, baseType: !152, size: 32)
!11898 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11895, file: !11894, line: 54, baseType: !152, size: 32, offset: 32)
!11899 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11895, file: !11894, line: 57, baseType: !152, size: 32, offset: 64)
!11900 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11895, file: !11894, line: 60, baseType: !152, size: 32, offset: 96)
!11901 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11895, file: !11894, line: 63, baseType: !152, size: 32, offset: 128)
!11902 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11895, file: !11894, line: 66, baseType: !152, size: 32, offset: 160)
!11903 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11895, file: !11894, line: 69, baseType: !11904, size: 192, offset: 192)
!11904 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11905, line: 73, baseType: !11906)
!11905 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11906 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11905, line: 45, size: 192, elements: !11907)
!11907 = !{!11908, !11909, !11910, !11911, !11912, !11913}
!11908 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11906, file: !11905, line: 47, baseType: !152, size: 32)
!11909 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11906, file: !11905, line: 50, baseType: !152, size: 32, offset: 32)
!11910 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11906, file: !11905, line: 53, baseType: !152, size: 32, offset: 64)
!11911 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11906, file: !11905, line: 56, baseType: !152, size: 32, offset: 96)
!11912 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11906, file: !11905, line: 60, baseType: !152, size: 32, offset: 128)
!11913 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11906, file: !11905, line: 63, baseType: !152, size: 32, offset: 160)
!11914 = !{!11915, !11916, !11917, !11918, !11922}
!11915 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11889, file: !11884, line: 219, type: !11892)
!11916 = !DILocalVariable(name: "tickstart", scope: !11889, file: !11884, line: 221, type: !152)
!11917 = !DILocalVariable(name: "pll_config", scope: !11889, file: !11884, line: 221, type: !152)
!11918 = !DILocalVariable(name: "pwrclkchanged", scope: !11919, file: !11884, line: 391, type: !11921)
!11919 = distinct !DILexicalBlock(scope: !11920, file: !11884, line: 390, column: 3)
!11920 = distinct !DILexicalBlock(scope: !11889, file: !11884, line: 389, column: 6)
!11921 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !963, line: 188, baseType: !2912)
!11922 = !DILocalVariable(name: "tmpreg", scope: !11923, file: !11884, line: 400, type: !227)
!11923 = distinct !DILexicalBlock(scope: !11924, file: !11884, line: 400, column: 7)
!11924 = distinct !DILexicalBlock(scope: !11925, file: !11884, line: 399, column: 5)
!11925 = distinct !DILexicalBlock(scope: !11919, file: !11884, line: 398, column: 8)
!11926 = !DILocation(line: 0, scope: !11889)
!11927 = !DILocation(line: 224, column: 24, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11889, file: !11884, line: 224, column: 6)
!11929 = !DILocation(line: 224, column: 6, scope: !11889)
!11930 = !DILocation(line: 232, column: 27, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11889, file: !11884, line: 232, column: 6)
!11932 = !DILocation(line: 232, column: 43, scope: !11931)
!11933 = !DILocation(line: 232, column: 69, scope: !11931)
!11934 = !DILocation(line: 232, column: 6, scope: !11889)
!11935 = !DILocation(line: 237, column: 9, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11937, file: !11884, line: 237, column: 8)
!11937 = distinct !DILexicalBlock(scope: !11931, file: !11884, line: 233, column: 3)
!11938 = !DILocation(line: 237, column: 39, scope: !11936)
!11939 = !DILocation(line: 237, column: 60, scope: !11936)
!11940 = !DILocation(line: 238, column: 9, scope: !11936)
!11941 = !DILocation(line: 238, column: 39, scope: !11936)
!11942 = !DILocation(line: 238, column: 60, scope: !11936)
!11943 = !DILocation(line: 238, column: 70, scope: !11936)
!11944 = !DILocation(line: 238, column: 78, scope: !11936)
!11945 = !DILocation(line: 238, column: 100, scope: !11936)
!11946 = !DILocation(line: 237, column: 8, scope: !11937)
!11947 = !DILocation(line: 240, column: 11, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11949, file: !11884, line: 240, column: 10)
!11949 = distinct !DILexicalBlock(scope: !11936, file: !11884, line: 239, column: 5)
!11950 = !DILocation(line: 240, column: 57, scope: !11948)
!11951 = !DILocation(line: 240, column: 80, scope: !11948)
!11952 = !DILocation(line: 240, column: 89, scope: !11948)
!11953 = !DILocation(line: 240, column: 10, scope: !11949)
!11954 = !DILocation(line: 248, column: 7, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11956, file: !11884, line: 248, column: 7)
!11956 = distinct !DILexicalBlock(scope: !11957, file: !11884, line: 248, column: 7)
!11957 = distinct !DILexicalBlock(scope: !11936, file: !11884, line: 246, column: 5)
!11958 = !DILocation(line: 248, column: 7, scope: !11956)
!11959 = !DILocation(line: 248, column: 7, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11955, file: !11884, line: 248, column: 7)
!11961 = !DILocation(line: 248, column: 7, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11963, file: !11884, line: 248, column: 7)
!11963 = distinct !DILexicalBlock(scope: !11955, file: !11884, line: 248, column: 7)
!11964 = !DILocation(line: 248, column: 7, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11963, file: !11884, line: 248, column: 7)
!11966 = !DILocation(line: 0, scope: !11955)
!11967 = !DILocation(line: 251, column: 30, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11957, file: !11884, line: 251, column: 10)
!11969 = !DILocation(line: 251, column: 40, scope: !11968)
!11970 = !DILocation(line: 0, scope: !11968)
!11971 = !DILocation(line: 251, column: 10, scope: !11957)
!11972 = !DILocation(line: 257, column: 15, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11968, file: !11884, line: 252, column: 7)
!11974 = !DILocation(line: 257, column: 51, scope: !11973)
!11975 = !DILocation(line: 257, column: 9, scope: !11973)
!11976 = !DILocation(line: 259, column: 15, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11978, file: !11884, line: 259, column: 14)
!11978 = distinct !DILexicalBlock(scope: !11973, file: !11884, line: 258, column: 9)
!11979 = !DILocation(line: 259, column: 29, scope: !11977)
!11980 = !DILocation(line: 259, column: 43, scope: !11977)
!11981 = !DILocation(line: 259, column: 14, scope: !11978)
!11982 = distinct !{!11982, !11975, !11983}
!11983 = !DILocation(line: 263, column: 9, scope: !11973)
!11984 = !DILocation(line: 271, column: 15, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11968, file: !11884, line: 266, column: 7)
!11986 = !DILocation(line: 271, column: 9, scope: !11985)
!11987 = !DILocation(line: 273, column: 15, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11989, file: !11884, line: 273, column: 14)
!11989 = distinct !DILexicalBlock(scope: !11985, file: !11884, line: 272, column: 9)
!11990 = !DILocation(line: 273, column: 29, scope: !11988)
!11991 = !DILocation(line: 273, column: 43, scope: !11988)
!11992 = !DILocation(line: 273, column: 14, scope: !11989)
!11993 = distinct !{!11993, !11986, !11994}
!11994 = !DILocation(line: 277, column: 9, scope: !11985)
!11995 = !DILocation(line: 282, column: 27, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11889, file: !11884, line: 282, column: 6)
!11997 = !DILocation(line: 282, column: 43, scope: !11996)
!11998 = !DILocation(line: 282, column: 69, scope: !11996)
!11999 = !DILocation(line: 282, column: 6, scope: !11889)
!12000 = !DILocation(line: 289, column: 9, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !12002, file: !11884, line: 289, column: 8)
!12002 = distinct !DILexicalBlock(scope: !11996, file: !11884, line: 283, column: 3)
!12003 = !DILocation(line: 289, column: 39, scope: !12001)
!12004 = !DILocation(line: 289, column: 60, scope: !12001)
!12005 = !DILocation(line: 290, column: 9, scope: !12001)
!12006 = !DILocation(line: 290, column: 39, scope: !12001)
!12007 = !DILocation(line: 290, column: 60, scope: !12001)
!12008 = !DILocation(line: 290, column: 70, scope: !12001)
!12009 = !DILocation(line: 290, column: 78, scope: !12001)
!12010 = !DILocation(line: 290, column: 100, scope: !12001)
!12011 = !DILocation(line: 289, column: 8, scope: !12002)
!12012 = !DILocation(line: 293, column: 11, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12014, file: !11884, line: 293, column: 10)
!12014 = distinct !DILexicalBlock(scope: !12001, file: !11884, line: 291, column: 5)
!12015 = !DILocation(line: 293, column: 57, scope: !12013)
!12016 = !DILocation(line: 293, column: 80, scope: !12013)
!12017 = !DILocation(line: 293, column: 89, scope: !12013)
!12018 = !DILocation(line: 293, column: 10, scope: !12014)
!12019 = !DILocation(line: 307, column: 30, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12021, file: !11884, line: 307, column: 10)
!12021 = distinct !DILexicalBlock(scope: !12001, file: !11884, line: 305, column: 5)
!12022 = !DILocation(line: 307, column: 39, scope: !12020)
!12023 = !DILocation(line: 307, column: 10, scope: !12021)
!12024 = !DILocation(line: 310, column: 9, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12020, file: !11884, line: 308, column: 7)
!12026 = !DILocation(line: 313, column: 21, scope: !12025)
!12027 = !DILocation(line: 316, column: 9, scope: !12025)
!12028 = !DILocation(line: 316, column: 15, scope: !12025)
!12029 = !DILocation(line: 316, column: 51, scope: !12025)
!12030 = !DILocation(line: 318, column: 15, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12032, file: !11884, line: 318, column: 14)
!12032 = distinct !DILexicalBlock(scope: !12025, file: !11884, line: 317, column: 9)
!12033 = !DILocation(line: 318, column: 29, scope: !12031)
!12034 = !DILocation(line: 318, column: 43, scope: !12031)
!12035 = !DILocation(line: 318, column: 14, scope: !12032)
!12036 = distinct !{!12036, !12027, !12037}
!12037 = !DILocation(line: 322, column: 9, scope: !12025)
!12038 = !DILocation(line: 330, column: 9, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12020, file: !11884, line: 328, column: 7)
!12040 = !DILocation(line: 333, column: 21, scope: !12039)
!12041 = !DILocation(line: 336, column: 9, scope: !12039)
!12042 = !DILocation(line: 336, column: 15, scope: !12039)
!12043 = !DILocation(line: 338, column: 15, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12045, file: !11884, line: 338, column: 14)
!12045 = distinct !DILexicalBlock(scope: !12039, file: !11884, line: 337, column: 9)
!12046 = !DILocation(line: 338, column: 29, scope: !12044)
!12047 = !DILocation(line: 338, column: 43, scope: !12044)
!12048 = !DILocation(line: 338, column: 14, scope: !12045)
!12049 = distinct !{!12049, !12041, !12050}
!12050 = !DILocation(line: 342, column: 9, scope: !12039)
!12051 = !DILocation(line: 0, scope: !12001)
!12052 = !DILocation(line: 347, column: 27, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !11889, file: !11884, line: 347, column: 6)
!12054 = !DILocation(line: 347, column: 43, scope: !12053)
!12055 = !DILocation(line: 347, column: 69, scope: !12053)
!12056 = !DILocation(line: 347, column: 6, scope: !11889)
!12057 = !DILocation(line: 353, column: 28, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12059, file: !11884, line: 353, column: 8)
!12059 = distinct !DILexicalBlock(scope: !12053, file: !11884, line: 348, column: 3)
!12060 = !DILocation(line: 353, column: 37, scope: !12058)
!12061 = !DILocation(line: 353, column: 8, scope: !12059)
!12062 = !DILocation(line: 356, column: 7, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12058, file: !11884, line: 354, column: 5)
!12064 = !DILocation(line: 359, column: 19, scope: !12063)
!12065 = !DILocation(line: 362, column: 7, scope: !12063)
!12066 = !DILocation(line: 362, column: 13, scope: !12063)
!12067 = !DILocation(line: 362, column: 49, scope: !12063)
!12068 = !DILocation(line: 364, column: 13, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12070, file: !11884, line: 364, column: 12)
!12070 = distinct !DILexicalBlock(scope: !12063, file: !11884, line: 363, column: 7)
!12071 = !DILocation(line: 364, column: 27, scope: !12069)
!12072 = !DILocation(line: 364, column: 41, scope: !12069)
!12073 = !DILocation(line: 364, column: 12, scope: !12070)
!12074 = distinct !{!12074, !12065, !12075}
!12075 = !DILocation(line: 368, column: 7, scope: !12063)
!12076 = !DILocation(line: 373, column: 7, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12058, file: !11884, line: 371, column: 5)
!12078 = !DILocation(line: 376, column: 19, scope: !12077)
!12079 = !DILocation(line: 379, column: 7, scope: !12077)
!12080 = !DILocation(line: 379, column: 13, scope: !12077)
!12081 = !DILocation(line: 381, column: 13, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12083, file: !11884, line: 381, column: 12)
!12083 = distinct !DILexicalBlock(scope: !12077, file: !11884, line: 380, column: 7)
!12084 = !DILocation(line: 381, column: 27, scope: !12082)
!12085 = !DILocation(line: 381, column: 41, scope: !12082)
!12086 = !DILocation(line: 381, column: 12, scope: !12083)
!12087 = distinct !{!12087, !12079, !12088}
!12088 = !DILocation(line: 385, column: 7, scope: !12077)
!12089 = !DILocation(line: 389, column: 27, scope: !11920)
!12090 = !DILocation(line: 389, column: 43, scope: !11920)
!12091 = !DILocation(line: 389, column: 69, scope: !11920)
!12092 = !DILocation(line: 389, column: 6, scope: !11889)
!12093 = !DILocation(line: 0, scope: !11919)
!12094 = !DILocation(line: 398, column: 8, scope: !11925)
!12095 = !DILocation(line: 398, column: 8, scope: !11919)
!12096 = !DILocation(line: 400, column: 7, scope: !11923)
!12097 = !DILocation(line: 400, column: 7, scope: !11924)
!12098 = !DILocation(line: 402, column: 5, scope: !11924)
!12099 = !DILocation(line: 404, column: 8, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !11919, file: !11884, line: 404, column: 8)
!12101 = !DILocation(line: 404, column: 8, scope: !11919)
!12102 = !DILocation(line: 407, column: 7, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12100, file: !11884, line: 405, column: 5)
!12104 = !DILocation(line: 410, column: 19, scope: !12103)
!12105 = !DILocation(line: 412, column: 7, scope: !12103)
!12106 = !DILocation(line: 412, column: 13, scope: !12103)
!12107 = !DILocation(line: 414, column: 13, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12109, file: !11884, line: 414, column: 12)
!12109 = distinct !DILexicalBlock(scope: !12103, file: !11884, line: 413, column: 7)
!12110 = !DILocation(line: 414, column: 27, scope: !12108)
!12111 = !DILocation(line: 414, column: 40, scope: !12108)
!12112 = !DILocation(line: 414, column: 12, scope: !12109)
!12113 = distinct !{!12113, !12105, !12114}
!12114 = !DILocation(line: 418, column: 7, scope: !12103)
!12115 = !DILocation(line: 422, column: 5, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !12117, file: !11884, line: 422, column: 5)
!12117 = distinct !DILexicalBlock(scope: !11919, file: !11884, line: 422, column: 5)
!12118 = !DILocation(line: 422, column: 5, scope: !12117)
!12119 = !DILocation(line: 422, column: 5, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12116, file: !11884, line: 422, column: 5)
!12121 = !DILocation(line: 422, column: 5, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12123, file: !11884, line: 422, column: 5)
!12123 = distinct !DILexicalBlock(scope: !12116, file: !11884, line: 422, column: 5)
!12124 = !DILocation(line: 422, column: 5, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12123, file: !11884, line: 422, column: 5)
!12126 = !DILocation(line: 0, scope: !12116)
!12127 = !DILocation(line: 424, column: 28, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !11919, file: !11884, line: 424, column: 8)
!12129 = !DILocation(line: 424, column: 38, scope: !12128)
!12130 = !DILocation(line: 0, scope: !12128)
!12131 = !DILocation(line: 424, column: 8, scope: !11919)
!12132 = !DILocation(line: 430, column: 13, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12128, file: !11884, line: 425, column: 5)
!12134 = !DILocation(line: 430, column: 49, scope: !12133)
!12135 = !DILocation(line: 430, column: 7, scope: !12133)
!12136 = !DILocation(line: 432, column: 13, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12138, file: !11884, line: 432, column: 12)
!12138 = distinct !DILexicalBlock(scope: !12133, file: !11884, line: 431, column: 7)
!12139 = !DILocation(line: 432, column: 27, scope: !12137)
!12140 = !DILocation(line: 432, column: 41, scope: !12137)
!12141 = !DILocation(line: 432, column: 12, scope: !12138)
!12142 = distinct !{!12142, !12135, !12143}
!12143 = !DILocation(line: 436, column: 7, scope: !12133)
!12144 = !DILocation(line: 444, column: 13, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12128, file: !11884, line: 439, column: 5)
!12146 = !DILocation(line: 444, column: 7, scope: !12145)
!12147 = !DILocation(line: 446, column: 13, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12149, file: !11884, line: 446, column: 12)
!12149 = distinct !DILexicalBlock(scope: !12145, file: !11884, line: 445, column: 7)
!12150 = !DILocation(line: 446, column: 27, scope: !12148)
!12151 = !DILocation(line: 446, column: 41, scope: !12148)
!12152 = !DILocation(line: 446, column: 12, scope: !12149)
!12153 = distinct !{!12153, !12146, !12154}
!12154 = !DILocation(line: 450, column: 7, scope: !12145)
!12155 = !DILocation(line: 454, column: 8, scope: !11919)
!12156 = !DILocation(line: 456, column: 7, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12158, file: !11884, line: 455, column: 5)
!12158 = distinct !DILexicalBlock(scope: !11919, file: !11884, line: 454, column: 8)
!12159 = !DILocation(line: 457, column: 5, scope: !12157)
!12160 = !DILocation(line: 462, column: 31, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !11889, file: !11884, line: 462, column: 7)
!12162 = !DILocation(line: 462, column: 41, scope: !12161)
!12163 = !DILocation(line: 462, column: 7, scope: !11889)
!12164 = !DILocation(line: 465, column: 8, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12166, file: !11884, line: 465, column: 8)
!12166 = distinct !DILexicalBlock(scope: !12161, file: !11884, line: 463, column: 3)
!12167 = !DILocation(line: 465, column: 38, scope: !12165)
!12168 = !DILocation(line: 465, column: 8, scope: !12166)
!12169 = !DILocation(line: 467, column: 44, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12171, file: !11884, line: 467, column: 10)
!12171 = distinct !DILexicalBlock(scope: !12165, file: !11884, line: 466, column: 5)
!12172 = !DILocation(line: 0, scope: !12170)
!12173 = !DILocation(line: 467, column: 10, scope: !12171)
!12174 = !DILocation(line: 483, column: 15, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12170, file: !11884, line: 468, column: 7)
!12176 = !DILocation(line: 483, column: 9, scope: !12175)
!12177 = !DILocation(line: 485, column: 15, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12179, file: !11884, line: 485, column: 14)
!12179 = distinct !DILexicalBlock(scope: !12175, file: !11884, line: 484, column: 9)
!12180 = !DILocation(line: 485, column: 29, scope: !12178)
!12181 = !DILocation(line: 485, column: 43, scope: !12178)
!12182 = !DILocation(line: 485, column: 14, scope: !12179)
!12183 = distinct !{!12183, !12176, !12184}
!12184 = !DILocation(line: 489, column: 9, scope: !12175)
!12185 = !DILocation(line: 492, column: 9, scope: !12175)
!12186 = !DILocation(line: 498, column: 9, scope: !12175)
!12187 = !DILocation(line: 501, column: 21, scope: !12175)
!12188 = !DILocation(line: 504, column: 9, scope: !12175)
!12189 = !DILocation(line: 504, column: 15, scope: !12175)
!12190 = !DILocation(line: 504, column: 51, scope: !12175)
!12191 = !DILocation(line: 506, column: 15, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12193, file: !11884, line: 506, column: 14)
!12193 = distinct !DILexicalBlock(scope: !12175, file: !11884, line: 505, column: 9)
!12194 = !DILocation(line: 506, column: 29, scope: !12192)
!12195 = !DILocation(line: 506, column: 43, scope: !12192)
!12196 = !DILocation(line: 506, column: 14, scope: !12193)
!12197 = distinct !{!12197, !12188, !12198}
!12198 = !DILocation(line: 510, column: 9, scope: !12175)
!12199 = !DILocation(line: 521, column: 15, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12170, file: !11884, line: 513, column: 7)
!12201 = !DILocation(line: 521, column: 9, scope: !12200)
!12202 = !DILocation(line: 523, column: 15, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12204, file: !11884, line: 523, column: 14)
!12204 = distinct !DILexicalBlock(scope: !12200, file: !11884, line: 522, column: 9)
!12205 = !DILocation(line: 523, column: 29, scope: !12203)
!12206 = !DILocation(line: 523, column: 43, scope: !12203)
!12207 = !DILocation(line: 523, column: 14, scope: !12204)
!12208 = distinct !{!12208, !12201, !12209}
!12209 = !DILocation(line: 527, column: 9, scope: !12200)
!12210 = !DILocation(line: 533, column: 44, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12212, file: !11884, line: 533, column: 10)
!12212 = distinct !DILexicalBlock(scope: !12165, file: !11884, line: 531, column: 5)
!12213 = !DILocation(line: 533, column: 10, scope: !12212)
!12214 = !DILocation(line: 540, column: 27, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12211, file: !11884, line: 538, column: 7)
!12216 = !DILocation(line: 551, column: 14, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12215, file: !11884, line: 550, column: 13)
!12218 = !DILocation(line: 551, column: 81, scope: !12217)
!12219 = !DILocation(line: 551, column: 55, scope: !12217)
!12220 = !DILocation(line: 551, column: 92, scope: !12217)
!12221 = !DILocation(line: 552, column: 14, scope: !12217)
!12222 = !DILocation(line: 552, column: 80, scope: !12217)
!12223 = !DILocation(line: 552, column: 53, scope: !12217)
!12224 = !DILocation(line: 552, column: 111, scope: !12217)
!12225 = !DILocation(line: 553, column: 14, scope: !12217)
!12226 = !DILocation(line: 553, column: 80, scope: !12217)
!12227 = !DILocation(line: 553, column: 86, scope: !12217)
!12228 = !DILocation(line: 553, column: 53, scope: !12217)
!12229 = !DILocation(line: 553, column: 111, scope: !12217)
!12230 = !DILocation(line: 554, column: 14, scope: !12217)
!12231 = !DILocation(line: 554, column: 82, scope: !12217)
!12232 = !DILocation(line: 554, column: 101, scope: !12217)
!12233 = !DILocation(line: 554, column: 53, scope: !12217)
!12234 = !DILocation(line: 554, column: 126, scope: !12217)
!12235 = !DILocation(line: 555, column: 14, scope: !12217)
!12236 = !DILocation(line: 555, column: 80, scope: !12217)
!12237 = !DILocation(line: 555, column: 85, scope: !12217)
!12238 = !DILocation(line: 555, column: 53, scope: !12217)
!12239 = !DILocation(line: 550, column: 13, scope: !12215)
!12240 = !DILocation(line: 563, column: 3, scope: !11889)
!12241 = !DILocation(line: 564, column: 1, scope: !11889)
!12242 = !DISubprogram(name: "HAL_GetTick", scope: !12243, file: !12243, line: 234, type: !6340, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!12243 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12244 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11884, file: !11884, line: 591, type: !12245, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !12256)
!12245 = !DISubroutineType(types: !12246)
!12246 = !{!11887, !12247, !152}
!12247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12248, size: 32)
!12248 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11894, line: 92, baseType: !12249)
!12249 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11894, line: 75, size: 160, elements: !12250)
!12250 = !{!12251, !12252, !12253, !12254, !12255}
!12251 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12249, file: !11894, line: 77, baseType: !152, size: 32)
!12252 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12249, file: !11894, line: 80, baseType: !152, size: 32, offset: 32)
!12253 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12249, file: !11894, line: 83, baseType: !152, size: 32, offset: 64)
!12254 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12249, file: !11894, line: 86, baseType: !152, size: 32, offset: 96)
!12255 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12249, file: !11894, line: 89, baseType: !152, size: 32, offset: 128)
!12256 = !{!12257, !12258, !12259}
!12257 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12244, file: !11884, line: 591, type: !12247)
!12258 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12244, file: !11884, line: 591, type: !152)
!12259 = !DILocalVariable(name: "tickstart", scope: !12244, file: !11884, line: 593, type: !152)
!12260 = !DILocation(line: 0, scope: !12244)
!12261 = !DILocation(line: 596, column: 24, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12244, file: !11884, line: 596, column: 6)
!12263 = !DILocation(line: 596, column: 6, scope: !12244)
!12264 = !DILocation(line: 610, column: 17, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12244, file: !11884, line: 610, column: 6)
!12266 = !DILocation(line: 610, column: 15, scope: !12265)
!12267 = !DILocation(line: 610, column: 6, scope: !12244)
!12268 = !DILocation(line: 613, column: 5, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12265, file: !11884, line: 611, column: 3)
!12270 = !DILocation(line: 617, column: 8, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12269, file: !11884, line: 617, column: 8)
!12272 = !DILocation(line: 617, column: 34, scope: !12271)
!12273 = !DILocation(line: 617, column: 8, scope: !12269)
!12274 = !DILocation(line: 624, column: 27, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12244, file: !11884, line: 624, column: 6)
!12276 = !DILocation(line: 624, column: 38, scope: !12275)
!12277 = !DILocation(line: 624, column: 60, scope: !12275)
!12278 = !DILocation(line: 624, column: 6, scope: !12244)
!12279 = !DILocation(line: 628, column: 40, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12281, file: !11884, line: 628, column: 8)
!12281 = distinct !DILexicalBlock(scope: !12275, file: !11884, line: 625, column: 3)
!12282 = !DILocation(line: 628, column: 63, scope: !12280)
!12283 = !DILocation(line: 628, column: 8, scope: !12281)
!12284 = !DILocation(line: 630, column: 7, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12280, file: !11884, line: 629, column: 5)
!12286 = !DILocation(line: 633, column: 29, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12281, file: !11884, line: 633, column: 8)
!12288 = !DILocation(line: 631, column: 5, scope: !12285)
!12289 = !DILocation(line: 633, column: 40, scope: !12287)
!12290 = !DILocation(line: 633, column: 63, scope: !12287)
!12291 = !DILocation(line: 633, column: 8, scope: !12281)
!12292 = !DILocation(line: 635, column: 7, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12287, file: !11884, line: 634, column: 5)
!12294 = !DILocation(line: 636, column: 5, scope: !12293)
!12295 = !DILocation(line: 639, column: 5, scope: !12281)
!12296 = !DILocation(line: 643, column: 27, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12244, file: !11884, line: 643, column: 6)
!12298 = !DILocation(line: 640, column: 3, scope: !12281)
!12299 = !DILocation(line: 643, column: 38, scope: !12297)
!12300 = !DILocation(line: 643, column: 62, scope: !12297)
!12301 = !DILocation(line: 643, column: 6, scope: !12244)
!12302 = !DILocation(line: 648, column: 27, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12304, file: !11884, line: 648, column: 8)
!12304 = distinct !DILexicalBlock(scope: !12297, file: !11884, line: 644, column: 3)
!12305 = !DILocation(line: 648, column: 8, scope: !12304)
!12306 = !DILocation(line: 651, column: 10, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12308, file: !11884, line: 651, column: 10)
!12308 = distinct !DILexicalBlock(scope: !12303, file: !11884, line: 649, column: 5)
!12309 = !DILocation(line: 651, column: 46, scope: !12307)
!12310 = !DILocation(line: 651, column: 10, scope: !12308)
!12311 = !DILocation(line: 661, column: 10, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12313, file: !11884, line: 661, column: 10)
!12313 = distinct !DILexicalBlock(scope: !12314, file: !11884, line: 659, column: 5)
!12314 = distinct !DILexicalBlock(scope: !12303, file: !11884, line: 657, column: 13)
!12315 = !DILocation(line: 661, column: 46, scope: !12312)
!12316 = !DILocation(line: 661, column: 10, scope: !12313)
!12317 = !DILocation(line: 670, column: 10, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12319, file: !11884, line: 670, column: 10)
!12319 = distinct !DILexicalBlock(scope: !12314, file: !11884, line: 668, column: 5)
!12320 = !DILocation(line: 670, column: 46, scope: !12318)
!12321 = !DILocation(line: 670, column: 10, scope: !12319)
!12322 = !DILocation(line: 676, column: 5, scope: !12304)
!12323 = !DILocation(line: 679, column: 17, scope: !12304)
!12324 = !DILocation(line: 681, column: 5, scope: !12304)
!12325 = !DILocation(line: 681, column: 12, scope: !12304)
!12326 = !DILocation(line: 681, column: 65, scope: !12304)
!12327 = !DILocation(line: 681, column: 78, scope: !12304)
!12328 = !DILocation(line: 681, column: 42, scope: !12304)
!12329 = !DILocation(line: 683, column: 12, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12331, file: !11884, line: 683, column: 11)
!12331 = distinct !DILexicalBlock(scope: !12304, file: !11884, line: 682, column: 5)
!12332 = !DILocation(line: 683, column: 26, scope: !12330)
!12333 = !DILocation(line: 683, column: 39, scope: !12330)
!12334 = !DILocation(line: 683, column: 11, scope: !12331)
!12335 = distinct !{!12335, !12324, !12336}
!12336 = !DILocation(line: 687, column: 5, scope: !12304)
!12337 = !DILocation(line: 691, column: 17, scope: !12338)
!12338 = distinct !DILexicalBlock(scope: !12244, file: !11884, line: 691, column: 6)
!12339 = !DILocation(line: 691, column: 15, scope: !12338)
!12340 = !DILocation(line: 691, column: 6, scope: !12244)
!12341 = !DILocation(line: 694, column: 5, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12338, file: !11884, line: 692, column: 3)
!12343 = !DILocation(line: 698, column: 8, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12342, file: !11884, line: 698, column: 8)
!12345 = !DILocation(line: 698, column: 34, scope: !12344)
!12346 = !DILocation(line: 698, column: 8, scope: !12342)
!12347 = !DILocation(line: 705, column: 27, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12244, file: !11884, line: 705, column: 6)
!12349 = !DILocation(line: 705, column: 38, scope: !12348)
!12350 = !DILocation(line: 705, column: 61, scope: !12348)
!12351 = !DILocation(line: 705, column: 6, scope: !12244)
!12352 = !DILocation(line: 708, column: 5, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12348, file: !11884, line: 706, column: 3)
!12354 = !DILocation(line: 712, column: 27, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12244, file: !11884, line: 712, column: 6)
!12356 = !DILocation(line: 709, column: 3, scope: !12353)
!12357 = !DILocation(line: 712, column: 38, scope: !12355)
!12358 = !DILocation(line: 712, column: 61, scope: !12355)
!12359 = !DILocation(line: 712, column: 6, scope: !12244)
!12360 = !DILocation(line: 715, column: 5, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12355, file: !11884, line: 713, column: 3)
!12362 = !DILocation(line: 716, column: 3, scope: !12361)
!12363 = !DILocation(line: 719, column: 21, scope: !12244)
!12364 = !DILocation(line: 719, column: 70, scope: !12244)
!12365 = !DILocation(line: 719, column: 91, scope: !12244)
!12366 = !DILocation(line: 719, column: 50, scope: !12244)
!12367 = !DILocation(line: 719, column: 47, scope: !12244)
!12368 = !DILocation(line: 719, column: 19, scope: !12244)
!12369 = !DILocation(line: 722, column: 17, scope: !12244)
!12370 = !DILocation(line: 722, column: 3, scope: !12244)
!12371 = !DILocation(line: 724, column: 3, scope: !12244)
!12372 = !DILocation(line: 725, column: 1, scope: !12244)
!12373 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11884, file: !11884, line: 885, type: !6340, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !12374)
!12374 = !{!12375, !12376, !12377, !12378}
!12375 = !DILocalVariable(name: "pllm", scope: !12373, file: !11884, line: 887, type: !152)
!12376 = !DILocalVariable(name: "pllvco", scope: !12373, file: !11884, line: 887, type: !152)
!12377 = !DILocalVariable(name: "pllp", scope: !12373, file: !11884, line: 887, type: !152)
!12378 = !DILocalVariable(name: "sysclockfreq", scope: !12373, file: !11884, line: 888, type: !152)
!12379 = !DILocation(line: 0, scope: !12373)
!12380 = !DILocation(line: 891, column: 16, scope: !12373)
!12381 = !DILocation(line: 891, column: 21, scope: !12373)
!12382 = !DILocation(line: 891, column: 3, scope: !12373)
!12383 = !DILocation(line: 901, column: 7, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12385, file: !11884, line: 899, column: 5)
!12385 = distinct !DILexicalBlock(scope: !12373, file: !11884, line: 892, column: 3)
!12386 = !DILocation(line: 907, column: 19, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12385, file: !11884, line: 904, column: 5)
!12388 = !DILocation(line: 907, column: 27, scope: !12387)
!12389 = !DILocation(line: 908, column: 10, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12387, file: !11884, line: 908, column: 10)
!12391 = !DILocation(line: 908, column: 40, scope: !12390)
!12392 = !DILocation(line: 0, scope: !12390)
!12393 = !DILocation(line: 918, column: 23, scope: !12387)
!12394 = !DILocation(line: 918, column: 82, scope: !12387)
!12395 = !DILocation(line: 920, column: 28, scope: !12387)
!12396 = !DILocation(line: 921, column: 7, scope: !12387)
!12397 = !DILocation(line: 0, scope: !12385)
!12398 = !DILocation(line: 929, column: 3, scope: !12373)
!12399 = !DISubprogram(name: "HAL_InitTick", scope: !12243, file: !12243, line: 223, type: !12400, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!12400 = !DISubroutineType(types: !12401)
!12401 = !{!11887, !152}
!12402 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11884, file: !11884, line: 775, type: !12403, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !12405)
!12403 = !DISubroutineType(types: !12404)
!12404 = !{null, !152, !152, !152}
!12405 = !{!12406, !12407, !12408, !12409, !12419, !12423}
!12406 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12402, file: !11884, line: 775, type: !152)
!12407 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12402, file: !11884, line: 775, type: !152)
!12408 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12402, file: !11884, line: 775, type: !152)
!12409 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12402, file: !11884, line: 777, type: !12410)
!12410 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12411, line: 62, baseType: !12412)
!12411 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12411, line: 46, size: 160, elements: !12413)
!12413 = !{!12414, !12415, !12416, !12417, !12418}
!12414 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12412, file: !12411, line: 48, baseType: !152, size: 32)
!12415 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12412, file: !12411, line: 51, baseType: !152, size: 32, offset: 32)
!12416 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12412, file: !12411, line: 54, baseType: !152, size: 32, offset: 64)
!12417 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12412, file: !12411, line: 57, baseType: !152, size: 32, offset: 96)
!12418 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12412, file: !12411, line: 60, baseType: !152, size: 32, offset: 128)
!12419 = !DILocalVariable(name: "tmpreg", scope: !12420, file: !11884, line: 787, type: !227)
!12420 = distinct !DILexicalBlock(scope: !12421, file: !11884, line: 787, column: 5)
!12421 = distinct !DILexicalBlock(scope: !12422, file: !11884, line: 783, column: 3)
!12422 = distinct !DILexicalBlock(scope: !12402, file: !11884, line: 782, column: 6)
!12423 = !DILocalVariable(name: "tmpreg", scope: !12424, file: !11884, line: 811, type: !227)
!12424 = distinct !DILexicalBlock(scope: !12425, file: !11884, line: 811, column: 5)
!12425 = distinct !DILexicalBlock(scope: !12422, file: !11884, line: 807, column: 3)
!12426 = !DILocation(line: 0, scope: !12402)
!12427 = !DILocation(line: 777, column: 3, scope: !12402)
!12428 = !DILocation(line: 777, column: 20, scope: !12402)
!12429 = !DILocation(line: 782, column: 15, scope: !12422)
!12430 = !DILocation(line: 782, column: 6, scope: !12402)
!12431 = !DILocation(line: 787, column: 5, scope: !12420)
!12432 = !DILocation(line: 787, column: 5, scope: !12421)
!12433 = !DILocation(line: 790, column: 21, scope: !12421)
!12434 = !DILocation(line: 790, column: 25, scope: !12421)
!12435 = !DILocation(line: 791, column: 21, scope: !12421)
!12436 = !DILocation(line: 791, column: 26, scope: !12421)
!12437 = !DILocation(line: 792, column: 21, scope: !12421)
!12438 = !DILocation(line: 792, column: 27, scope: !12421)
!12439 = !DILocation(line: 793, column: 21, scope: !12421)
!12440 = !DILocation(line: 793, column: 26, scope: !12421)
!12441 = !DILocation(line: 794, column: 21, scope: !12421)
!12442 = !DILocation(line: 794, column: 31, scope: !12421)
!12443 = !DILocation(line: 795, column: 5, scope: !12421)
!12444 = !DILocation(line: 798, column: 5, scope: !12421)
!12445 = !DILocation(line: 804, column: 3, scope: !12421)
!12446 = !DILocation(line: 811, column: 5, scope: !12424)
!12447 = !DILocation(line: 811, column: 5, scope: !12425)
!12448 = !DILocation(line: 814, column: 21, scope: !12425)
!12449 = !DILocation(line: 814, column: 25, scope: !12425)
!12450 = !DILocation(line: 815, column: 21, scope: !12425)
!12451 = !DILocation(line: 815, column: 26, scope: !12425)
!12452 = !DILocation(line: 816, column: 21, scope: !12425)
!12453 = !DILocation(line: 816, column: 27, scope: !12425)
!12454 = !DILocation(line: 817, column: 21, scope: !12425)
!12455 = !DILocation(line: 817, column: 26, scope: !12425)
!12456 = !DILocation(line: 818, column: 21, scope: !12425)
!12457 = !DILocation(line: 818, column: 31, scope: !12425)
!12458 = !DILocation(line: 819, column: 5, scope: !12425)
!12459 = !DILocation(line: 822, column: 5, scope: !12425)
!12460 = !DILocation(line: 0, scope: !12422)
!12461 = !DILocation(line: 830, column: 1, scope: !12402)
!12462 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12411, file: !12411, line: 224, type: !12463, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!12463 = !DISubroutineType(types: !12464)
!12464 = !{null, !2973, !12465}
!12465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12410, size: 32)
!12466 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11884, file: !11884, line: 841, type: !3089, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12467 = !DILocation(line: 843, column: 38, scope: !12466)
!12468 = !DILocation(line: 844, column: 1, scope: !12466)
!12469 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11884, file: !11884, line: 850, type: !3089, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12470 = !DILocation(line: 852, column: 38, scope: !12469)
!12471 = !DILocation(line: 853, column: 1, scope: !12469)
!12472 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11884, file: !11884, line: 941, type: !6340, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12473 = !DILocation(line: 943, column: 10, scope: !12472)
!12474 = !DILocation(line: 943, column: 3, scope: !12472)
!12475 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11884, file: !11884, line: 952, type: !6340, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12476 = !DILocation(line: 955, column: 11, scope: !12475)
!12477 = !DILocation(line: 955, column: 56, scope: !12475)
!12478 = !DILocation(line: 955, column: 78, scope: !12475)
!12479 = !DILocation(line: 955, column: 36, scope: !12475)
!12480 = !DILocation(line: 955, column: 33, scope: !12475)
!12481 = !DILocation(line: 955, column: 3, scope: !12475)
!12482 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11884, file: !11884, line: 964, type: !6340, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12483 = !DILocation(line: 967, column: 11, scope: !12482)
!12484 = !DILocation(line: 967, column: 55, scope: !12482)
!12485 = !DILocation(line: 967, column: 77, scope: !12482)
!12486 = !DILocation(line: 967, column: 35, scope: !12482)
!12487 = !DILocation(line: 967, column: 32, scope: !12482)
!12488 = !DILocation(line: 967, column: 3, scope: !12482)
!12489 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11884, file: !11884, line: 977, type: !12490, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !12492)
!12490 = !DISubroutineType(types: !12491)
!12491 = !{null, !11892}
!12492 = !{!12493}
!12493 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12489, file: !11884, line: 977, type: !11892)
!12494 = !DILocation(line: 0, scope: !12489)
!12495 = !DILocation(line: 980, column: 22, scope: !12489)
!12496 = !DILocation(line: 980, column: 37, scope: !12489)
!12497 = !DILocation(line: 983, column: 12, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12489, file: !11884, line: 983, column: 6)
!12499 = !DILocation(line: 983, column: 15, scope: !12498)
!12500 = !DILocation(line: 983, column: 31, scope: !12498)
!12501 = !DILocation(line: 983, column: 6, scope: !12489)
!12502 = !DILocation(line: 985, column: 24, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12498, file: !11884, line: 984, column: 3)
!12504 = !DILocation(line: 985, column: 33, scope: !12503)
!12505 = !DILocation(line: 986, column: 3, scope: !12503)
!12506 = !DILocation(line: 987, column: 17, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12498, file: !11884, line: 987, column: 11)
!12508 = !DILocation(line: 987, column: 20, scope: !12507)
!12509 = !DILocation(line: 987, column: 35, scope: !12507)
!12510 = !DILocation(line: 0, scope: !12507)
!12511 = !DILocation(line: 987, column: 11, scope: !12498)
!12512 = !DILocation(line: 989, column: 33, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12507, file: !11884, line: 988, column: 3)
!12514 = !DILocation(line: 990, column: 3, scope: !12513)
!12515 = !DILocation(line: 993, column: 33, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12507, file: !11884, line: 992, column: 3)
!12517 = !DILocation(line: 997, column: 12, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12489, file: !11884, line: 997, column: 6)
!12519 = !DILocation(line: 997, column: 15, scope: !12518)
!12520 = !DILocation(line: 1003, column: 24, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12518, file: !11884, line: 1002, column: 3)
!12522 = !DILocation(line: 1003, column: 33, scope: !12521)
!12523 = !DILocation(line: 1006, column: 61, scope: !12489)
!12524 = !DILocation(line: 1006, column: 81, scope: !12489)
!12525 = !DILocation(line: 1006, column: 22, scope: !12489)
!12526 = !DILocation(line: 1006, column: 42, scope: !12489)
!12527 = !DILocation(line: 1009, column: 12, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12489, file: !11884, line: 1009, column: 6)
!12529 = !DILocation(line: 1009, column: 17, scope: !12528)
!12530 = !DILocation(line: 1009, column: 35, scope: !12528)
!12531 = !DILocation(line: 1009, column: 6, scope: !12489)
!12532 = !DILocation(line: 1011, column: 24, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12528, file: !11884, line: 1010, column: 3)
!12534 = !DILocation(line: 1011, column: 33, scope: !12533)
!12535 = !DILocation(line: 1012, column: 3, scope: !12533)
!12536 = !DILocation(line: 1013, column: 17, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12528, file: !11884, line: 1013, column: 11)
!12538 = !DILocation(line: 1013, column: 22, scope: !12537)
!12539 = !DILocation(line: 1013, column: 39, scope: !12537)
!12540 = !DILocation(line: 0, scope: !12537)
!12541 = !DILocation(line: 1013, column: 11, scope: !12528)
!12542 = !DILocation(line: 1015, column: 33, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12537, file: !11884, line: 1014, column: 3)
!12544 = !DILocation(line: 1016, column: 3, scope: !12543)
!12545 = !DILocation(line: 1019, column: 33, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12537, file: !11884, line: 1018, column: 3)
!12547 = !DILocation(line: 1023, column: 12, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12489, file: !11884, line: 1023, column: 6)
!12549 = !DILocation(line: 1023, column: 16, scope: !12548)
!12550 = !DILocation(line: 1029, column: 24, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12548, file: !11884, line: 1028, column: 3)
!12552 = !DILocation(line: 1029, column: 33, scope: !12551)
!12553 = !DILocation(line: 1033, column: 12, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12489, file: !11884, line: 1033, column: 6)
!12555 = !DILocation(line: 1033, column: 15, scope: !12554)
!12556 = !DILocation(line: 1033, column: 30, scope: !12554)
!12557 = !DILocation(line: 1033, column: 6, scope: !12489)
!12558 = !DILocation(line: 1039, column: 28, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12554, file: !11884, line: 1038, column: 3)
!12560 = !DILocation(line: 1039, column: 37, scope: !12559)
!12561 = !DILocation(line: 1041, column: 54, scope: !12489)
!12562 = !DILocation(line: 1041, column: 62, scope: !12489)
!12563 = !DILocation(line: 1041, column: 26, scope: !12489)
!12564 = !DILocation(line: 1041, column: 36, scope: !12489)
!12565 = !DILocation(line: 1042, column: 49, scope: !12489)
!12566 = !DILocation(line: 1042, column: 57, scope: !12489)
!12567 = !DILocation(line: 1042, column: 26, scope: !12489)
!12568 = !DILocation(line: 1042, column: 31, scope: !12489)
!12569 = !DILocation(line: 1043, column: 50, scope: !12489)
!12570 = !DILocation(line: 1043, column: 78, scope: !12489)
!12571 = !DILocation(line: 1043, column: 26, scope: !12489)
!12572 = !DILocation(line: 1043, column: 31, scope: !12489)
!12573 = !DILocation(line: 1044, column: 52, scope: !12489)
!12574 = !DILocation(line: 1044, column: 102, scope: !12489)
!12575 = !DILocation(line: 1044, column: 109, scope: !12489)
!12576 = !DILocation(line: 1044, column: 26, scope: !12489)
!12577 = !DILocation(line: 1044, column: 31, scope: !12489)
!12578 = !DILocation(line: 1045, column: 50, scope: !12489)
!12579 = !DILocation(line: 1045, column: 78, scope: !12489)
!12580 = !DILocation(line: 1045, column: 26, scope: !12489)
!12581 = !DILocation(line: 1045, column: 31, scope: !12489)
!12582 = !DILocation(line: 1046, column: 1, scope: !12489)
!12583 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11884, file: !11884, line: 1056, type: !12584, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !12586)
!12584 = !DISubroutineType(types: !12585)
!12585 = !{null, !12247, !1016}
!12586 = !{!12587, !12588}
!12587 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12583, file: !11884, line: 1056, type: !12247)
!12588 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12583, file: !11884, line: 1056, type: !1016)
!12589 = !DILocation(line: 0, scope: !12583)
!12590 = !DILocation(line: 1059, column: 22, scope: !12583)
!12591 = !DILocation(line: 1059, column: 32, scope: !12583)
!12592 = !DILocation(line: 1062, column: 53, scope: !12583)
!12593 = !DILocation(line: 1062, column: 58, scope: !12583)
!12594 = !DILocation(line: 1062, column: 22, scope: !12583)
!12595 = !DILocation(line: 1062, column: 35, scope: !12583)
!12596 = !DILocation(line: 1065, column: 54, scope: !12583)
!12597 = !DILocation(line: 1065, column: 59, scope: !12583)
!12598 = !DILocation(line: 1065, column: 22, scope: !12583)
!12599 = !DILocation(line: 1065, column: 36, scope: !12583)
!12600 = !DILocation(line: 1068, column: 55, scope: !12583)
!12601 = !DILocation(line: 1068, column: 60, scope: !12583)
!12602 = !DILocation(line: 1068, column: 22, scope: !12583)
!12603 = !DILocation(line: 1068, column: 37, scope: !12583)
!12604 = !DILocation(line: 1071, column: 56, scope: !12583)
!12605 = !DILocation(line: 1071, column: 79, scope: !12583)
!12606 = !DILocation(line: 1071, column: 22, scope: !12583)
!12607 = !DILocation(line: 1071, column: 37, scope: !12583)
!12608 = !DILocation(line: 1074, column: 34, scope: !12583)
!12609 = !DILocation(line: 1074, column: 38, scope: !12583)
!12610 = !DILocation(line: 1074, column: 14, scope: !12583)
!12611 = !DILocation(line: 1075, column: 1, scope: !12583)
!12612 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11884, file: !11884, line: 1082, type: !3089, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12613 = !DILocation(line: 1085, column: 6, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12612, file: !11884, line: 1085, column: 6)
!12615 = !DILocation(line: 1085, column: 6, scope: !12612)
!12616 = !DILocation(line: 1088, column: 5, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12614, file: !11884, line: 1086, column: 3)
!12618 = !DILocation(line: 1091, column: 5, scope: !12617)
!12619 = !DILocation(line: 1092, column: 3, scope: !12617)
!12620 = !DILocation(line: 1093, column: 1, scope: !12612)
!12621 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11884, file: !11884, line: 1099, type: !3089, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2166)
!12622 = !DILocation(line: 1104, column: 1, scope: !12621)
!12623 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12624, file: !12624, line: 257, type: !6350, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12625)
!12624 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12625 = !{!12626}
!12626 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12623, file: !12624, line: 257, type: !152)
!12627 = !DILocation(line: 0, scope: !12623)
!12628 = !DILocation(line: 260, column: 3, scope: !12623)
!12629 = !DILocation(line: 261, column: 1, scope: !12623)
!12630 = distinct !DISubprogram(name: "LL_InitTick", scope: !12631, file: !12631, line: 260, type: !10241, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12632)
!12631 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12632 = !{!12633, !12634}
!12633 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12630, file: !12631, line: 260, type: !152)
!12634 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12630, file: !12631, line: 260, type: !152)
!12635 = !DILocation(line: 0, scope: !12630)
!12636 = !DILocation(line: 263, column: 46, scope: !12630)
!12637 = !DILocation(line: 263, column: 55, scope: !12630)
!12638 = !DILocation(line: 263, column: 18, scope: !12630)
!12639 = !DILocation(line: 264, column: 18, scope: !12630)
!12640 = !DILocation(line: 265, column: 18, scope: !12630)
!12641 = !DILocation(line: 267, column: 1, scope: !12630)
!12642 = distinct !DISubprogram(name: "LL_mDelay", scope: !12624, file: !12624, line: 273, type: !6350, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12643)
!12643 = !{!12644, !12645}
!12644 = !DILocalVariable(name: "Delay", arg: 1, scope: !12642, file: !12624, line: 273, type: !152)
!12645 = !DILocalVariable(name: "tmp", scope: !12642, file: !12624, line: 275, type: !227)
!12646 = !DILocation(line: 0, scope: !12642)
!12647 = !DILocation(line: 275, column: 3, scope: !12642)
!12648 = !DILocation(line: 275, column: 18, scope: !12642)
!12649 = !DILocation(line: 275, column: 33, scope: !12642)
!12650 = !DILocation(line: 277, column: 10, scope: !12642)
!12651 = !DILocation(line: 280, column: 12, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12642, file: !12624, line: 280, column: 6)
!12653 = !DILocation(line: 285, column: 3, scope: !12642)
!12654 = !DILocation(line: 287, column: 18, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12656, file: !12624, line: 287, column: 8)
!12656 = distinct !DILexicalBlock(scope: !12642, file: !12624, line: 286, column: 3)
!12657 = !DILocation(line: 292, column: 1, scope: !12642)
!12658 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12624, file: !12624, line: 323, type: !6350, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12659)
!12659 = !{!12660}
!12660 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12658, file: !12624, line: 323, type: !152)
!12661 = !DILocation(line: 0, scope: !12658)
!12662 = !DILocation(line: 326, column: 19, scope: !12658)
!12663 = !DILocation(line: 327, column: 1, scope: !12658)
!12664 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12624, file: !12624, line: 338, type: !12665, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12668)
!12665 = !DISubroutineType(types: !12666)
!12666 = !{!12667, !152}
!12667 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !963, line: 201, baseType: !962)
!12668 = !{!12669, !12670, !12671, !12672, !12673}
!12669 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12664, file: !12624, line: 338, type: !152)
!12670 = !DILocalVariable(name: "timeout", scope: !12664, file: !12624, line: 340, type: !152)
!12671 = !DILocalVariable(name: "getlatency", scope: !12664, file: !12624, line: 341, type: !152)
!12672 = !DILocalVariable(name: "latency", scope: !12664, file: !12624, line: 342, type: !152)
!12673 = !DILocalVariable(name: "status", scope: !12664, file: !12624, line: 343, type: !12667)
!12674 = !DILocation(line: 0, scope: !12664)
!12675 = !DILocation(line: 347, column: 21, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12664, file: !12624, line: 347, column: 6)
!12677 = !DILocation(line: 347, column: 6, scope: !12664)
!12678 = !DILocation(line: 353, column: 8, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12680, file: !12624, line: 353, column: 8)
!12680 = distinct !DILexicalBlock(scope: !12676, file: !12624, line: 352, column: 3)
!12681 = !DILocation(line: 353, column: 40, scope: !12679)
!12682 = !DILocation(line: 353, column: 8, scope: !12680)
!12683 = !DILocation(line: 356, column: 26, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12685, file: !12624, line: 356, column: 10)
!12685 = distinct !DILexicalBlock(scope: !12679, file: !12624, line: 354, column: 5)
!12686 = !DILocation(line: 356, column: 55, scope: !12684)
!12687 = !DILocation(line: 362, column: 55, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12685, file: !12624, line: 362, column: 10)
!12689 = !DILocation(line: 368, column: 55, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12685, file: !12624, line: 368, column: 10)
!12691 = !DILocation(line: 374, column: 26, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12685, file: !12624, line: 374, column: 10)
!12693 = !DILocation(line: 374, column: 55, scope: !12692)
!12694 = !DILocation(line: 380, column: 28, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12696, file: !12624, line: 380, column: 12)
!12696 = distinct !DILexicalBlock(scope: !12692, file: !12624, line: 379, column: 7)
!12697 = !DILocation(line: 380, column: 57, scope: !12695)
!12698 = !DILocation(line: 387, column: 8, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12680, file: !12624, line: 387, column: 8)
!12700 = !DILocation(line: 387, column: 40, scope: !12699)
!12701 = !DILocation(line: 387, column: 8, scope: !12680)
!12702 = !DILocation(line: 396, column: 26, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12704, file: !12624, line: 396, column: 10)
!12704 = distinct !DILexicalBlock(scope: !12699, file: !12624, line: 388, column: 5)
!12705 = !DILocation(line: 396, column: 55, scope: !12703)
!12706 = !DILocation(line: 402, column: 26, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12704, file: !12624, line: 402, column: 10)
!12708 = !DILocation(line: 402, column: 55, scope: !12707)
!12709 = !DILocation(line: 407, column: 26, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12704, file: !12624, line: 407, column: 10)
!12711 = !DILocation(line: 407, column: 55, scope: !12710)
!12712 = !DILocation(line: 413, column: 28, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12714, file: !12624, line: 413, column: 12)
!12714 = distinct !DILexicalBlock(scope: !12710, file: !12624, line: 412, column: 7)
!12715 = !DILocation(line: 413, column: 57, scope: !12713)
!12716 = !DILocation(line: 0, scope: !12680)
!12717 = !DILocation(line: 444, column: 5, scope: !12680)
!12718 = !DILocation(line: 448, column: 5, scope: !12680)
!12719 = !DILocation(line: 451, column: 18, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12680, file: !12624, line: 449, column: 5)
!12721 = !DILocation(line: 452, column: 12, scope: !12720)
!12722 = !DILocation(line: 453, column: 26, scope: !12680)
!12723 = !DILocation(line: 453, column: 38, scope: !12680)
!12724 = !DILocation(line: 453, column: 5, scope: !12720)
!12725 = distinct !{!12725, !12718, !12726}
!12726 = !DILocation(line: 453, column: 54, scope: !12680)
!12727 = !DILocation(line: 0, scope: !12676)
!12728 = !DILocation(line: 464, column: 3, scope: !12664)
!12729 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12730, file: !12730, line: 519, type: !6340, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12730 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12731 = !DILocation(line: 521, column: 21, scope: !12729)
!12732 = !DILocation(line: 521, column: 3, scope: !12729)
!12733 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5955, file: !5955, line: 1543, type: !6350, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12734)
!12734 = !{!12735}
!12735 = !DILocalVariable(name: "Latency", arg: 1, scope: !12733, file: !5955, line: 1543, type: !152)
!12736 = !DILocation(line: 0, scope: !12733)
!12737 = !DILocation(line: 1545, column: 3, scope: !12733)
!12738 = !DILocation(line: 1546, column: 1, scope: !12733)
!12739 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5955, file: !5955, line: 1569, type: !6340, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12740 = !DILocation(line: 1571, column: 21, scope: !12739)
!12741 = !DILocation(line: 1571, column: 3, scope: !12739)
!12742 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12624, file: !12624, line: 483, type: !12743, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12759)
!12743 = !DISubroutineType(types: !12744)
!12744 = !{!12667, !12745, !12752}
!12745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12746, size: 32)
!12746 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12631, line: 114, baseType: !12747)
!12747 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12631, line: 94, size: 96, elements: !12748)
!12748 = !{!12749, !12750, !12751}
!12749 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12747, file: !12631, line: 96, baseType: !152, size: 32)
!12750 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12747, file: !12631, line: 102, baseType: !152, size: 32, offset: 32)
!12751 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12747, file: !12631, line: 109, baseType: !152, size: 32, offset: 64)
!12752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12753, size: 32)
!12753 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12631, line: 139, baseType: !12754)
!12754 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12631, line: 119, size: 96, elements: !12755)
!12755 = !{!12756, !12757, !12758}
!12756 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12754, file: !12631, line: 121, baseType: !152, size: 32)
!12757 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12754, file: !12631, line: 127, baseType: !152, size: 32, offset: 32)
!12758 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12754, file: !12631, line: 133, baseType: !152, size: 32, offset: 64)
!12759 = !{!12760, !12761, !12762, !12763}
!12760 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12742, file: !12624, line: 483, type: !12745)
!12761 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12742, file: !12624, line: 484, type: !12752)
!12762 = !DILocalVariable(name: "status", scope: !12742, file: !12624, line: 486, type: !12667)
!12763 = !DILocalVariable(name: "pllfreq", scope: !12742, file: !12624, line: 487, type: !152)
!12764 = !DILocation(line: 0, scope: !12742)
!12765 = !DILocation(line: 490, column: 6, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12742, file: !12624, line: 490, column: 6)
!12767 = !DILocation(line: 490, column: 25, scope: !12766)
!12768 = !DILocation(line: 490, column: 6, scope: !12742)
!12769 = !DILocation(line: 493, column: 15, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12766, file: !12624, line: 491, column: 3)
!12771 = !DILocation(line: 496, column: 8, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12770, file: !12624, line: 496, column: 8)
!12773 = !DILocation(line: 496, column: 29, scope: !12772)
!12774 = !DILocation(line: 496, column: 8, scope: !12770)
!12775 = !DILocation(line: 498, column: 7, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12772, file: !12624, line: 497, column: 5)
!12777 = !DILocation(line: 499, column: 7, scope: !12776)
!12778 = !DILocation(line: 499, column: 14, scope: !12776)
!12779 = !DILocation(line: 499, column: 35, scope: !12776)
!12780 = distinct !{!12780, !12777, !12781}
!12781 = !DILocation(line: 502, column: 7, scope: !12776)
!12782 = !DILocation(line: 506, column: 76, scope: !12770)
!12783 = !DILocation(line: 506, column: 103, scope: !12770)
!12784 = !DILocation(line: 507, column: 54, scope: !12770)
!12785 = !DILocation(line: 506, column: 5, scope: !12770)
!12786 = !DILocation(line: 510, column: 14, scope: !12770)
!12787 = !DILocation(line: 511, column: 3, scope: !12770)
!12788 = !DILocation(line: 0, scope: !12766)
!12789 = !DILocation(line: 518, column: 3, scope: !12742)
!12790 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12624, file: !12624, line: 642, type: !12791, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12793)
!12791 = !DISubroutineType(types: !12792)
!12792 = !{!12667}
!12793 = !{!12794}
!12794 = !DILocalVariable(name: "status", scope: !12790, file: !12624, line: 644, type: !12667)
!12795 = !DILocation(line: 0, scope: !12790)
!12796 = !DILocation(line: 647, column: 6, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12790, file: !12624, line: 647, column: 6)
!12798 = !DILocation(line: 647, column: 27, scope: !12797)
!12799 = !DILocation(line: 663, column: 6, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12790, file: !12624, line: 663, column: 6)
!12801 = !DILocation(line: 663, column: 30, scope: !12800)
!12802 = !DILocation(line: 663, column: 6, scope: !12790)
!12803 = !DILocation(line: 669, column: 3, scope: !12790)
!12804 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12624, file: !12624, line: 611, type: !12805, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12807)
!12805 = !DISubroutineType(types: !12806)
!12806 = !{!152, !152, !12745}
!12807 = !{!12808, !12809, !12810}
!12808 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12804, file: !12624, line: 611, type: !152)
!12809 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12804, file: !12624, line: 611, type: !12745)
!12810 = !DILocalVariable(name: "pllfreq", scope: !12804, file: !12624, line: 613, type: !152)
!12811 = !DILocation(line: 0, scope: !12804)
!12812 = !DILocation(line: 622, column: 56, scope: !12804)
!12813 = !DILocation(line: 622, column: 61, scope: !12804)
!12814 = !DILocation(line: 622, column: 32, scope: !12804)
!12815 = !DILocation(line: 626, column: 45, scope: !12804)
!12816 = !DILocation(line: 626, column: 50, scope: !12804)
!12817 = !DILocation(line: 626, column: 21, scope: !12804)
!12818 = !DILocation(line: 630, column: 47, scope: !12804)
!12819 = !DILocation(line: 630, column: 82, scope: !12804)
!12820 = !DILocation(line: 630, column: 21, scope: !12804)
!12821 = !DILocation(line: 633, column: 3, scope: !12804)
!12822 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9567, file: !9567, line: 3007, type: !6340, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12823 = !DILocation(line: 3009, column: 11, scope: !12822)
!12824 = !DILocation(line: 3009, column: 44, scope: !12822)
!12825 = !DILocation(line: 3009, column: 3, scope: !12822)
!12826 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9567, file: !9567, line: 2987, type: !3089, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12827 = !DILocation(line: 2989, column: 3, scope: !12826)
!12828 = !DILocation(line: 2990, column: 1, scope: !12826)
!12829 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9567, file: !9567, line: 4304, type: !9701, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12830)
!12830 = !{!12831, !12832, !12833, !12834}
!12831 = !DILocalVariable(name: "Source", arg: 1, scope: !12829, file: !9567, line: 4304, type: !152)
!12832 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12829, file: !9567, line: 4304, type: !152)
!12833 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12829, file: !9567, line: 4304, type: !152)
!12834 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12829, file: !9567, line: 4304, type: !152)
!12835 = !DILocation(line: 0, scope: !12829)
!12836 = !DILocation(line: 4306, column: 3, scope: !12829)
!12837 = !DILocation(line: 4308, column: 3, scope: !12829)
!12838 = !DILocation(line: 4312, column: 1, scope: !12829)
!12839 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12624, file: !12624, line: 681, type: !12840, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12842)
!12840 = !DISubroutineType(types: !12841)
!12841 = !{!12667, !152, !12752}
!12842 = !{!12843, !12844, !12845, !12846}
!12843 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12839, file: !12624, line: 681, type: !152)
!12844 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12839, file: !12624, line: 681, type: !12752)
!12845 = !DILocalVariable(name: "status", scope: !12839, file: !12624, line: 683, type: !12667)
!12846 = !DILocalVariable(name: "hclk_frequency", scope: !12839, file: !12624, line: 684, type: !152)
!12847 = !DILocation(line: 0, scope: !12839)
!12848 = !DILocation(line: 691, column: 20, scope: !12839)
!12849 = !DILocation(line: 694, column: 6, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12839, file: !12624, line: 694, column: 6)
!12851 = !DILocation(line: 694, column: 22, scope: !12850)
!12852 = !DILocation(line: 694, column: 6, scope: !12839)
!12853 = !DILocation(line: 697, column: 14, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12850, file: !12624, line: 695, column: 3)
!12855 = !DILocation(line: 701, column: 13, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12839, file: !12624, line: 701, column: 6)
!12857 = !DILocation(line: 701, column: 6, scope: !12839)
!12858 = !DILocation(line: 704, column: 5, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12856, file: !12624, line: 702, column: 3)
!12860 = !DILocation(line: 705, column: 5, scope: !12859)
!12861 = !DILocation(line: 705, column: 12, scope: !12859)
!12862 = !DILocation(line: 705, column: 33, scope: !12859)
!12863 = distinct !{!12863, !12860, !12864}
!12864 = !DILocation(line: 708, column: 5, scope: !12859)
!12865 = !DILocation(line: 711, column: 49, scope: !12859)
!12866 = !DILocation(line: 711, column: 5, scope: !12859)
!12867 = !DILocation(line: 712, column: 5, scope: !12859)
!12868 = !DILocation(line: 713, column: 5, scope: !12859)
!12869 = !DILocation(line: 713, column: 12, scope: !12859)
!12870 = !DILocation(line: 713, column: 37, scope: !12859)
!12871 = distinct !{!12871, !12868, !12872}
!12872 = !DILocation(line: 716, column: 5, scope: !12859)
!12873 = !DILocation(line: 719, column: 50, scope: !12859)
!12874 = !DILocation(line: 719, column: 5, scope: !12859)
!12875 = !DILocation(line: 720, column: 50, scope: !12859)
!12876 = !DILocation(line: 720, column: 5, scope: !12859)
!12877 = !DILocation(line: 721, column: 3, scope: !12859)
!12878 = !DILocation(line: 724, column: 6, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12839, file: !12624, line: 724, column: 6)
!12880 = !DILocation(line: 724, column: 22, scope: !12879)
!12881 = !DILocation(line: 724, column: 6, scope: !12839)
!12882 = !DILocation(line: 727, column: 14, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12879, file: !12624, line: 725, column: 3)
!12884 = !DILocation(line: 728, column: 3, scope: !12883)
!12885 = !DILocation(line: 731, column: 13, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12839, file: !12624, line: 731, column: 6)
!12887 = !DILocation(line: 731, column: 6, scope: !12839)
!12888 = !DILocation(line: 733, column: 5, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12886, file: !12624, line: 732, column: 3)
!12890 = !DILocation(line: 734, column: 3, scope: !12889)
!12891 = !DILocation(line: 736, column: 3, scope: !12839)
!12892 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9567, file: !9567, line: 4184, type: !3089, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12893 = !DILocation(line: 4186, column: 3, scope: !12892)
!12894 = !DILocation(line: 4187, column: 1, scope: !12892)
!12895 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9567, file: !9567, line: 4205, type: !6340, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12896 = !DILocation(line: 4207, column: 11, scope: !12895)
!12897 = !DILocation(line: 4207, column: 44, scope: !12895)
!12898 = !DILocation(line: 4207, column: 3, scope: !12895)
!12899 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9567, file: !9567, line: 3224, type: !6350, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12900)
!12900 = !{!12901}
!12901 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12899, file: !9567, line: 3224, type: !152)
!12902 = !DILocation(line: 0, scope: !12899)
!12903 = !DILocation(line: 3226, column: 3, scope: !12899)
!12904 = !DILocation(line: 3227, column: 1, scope: !12899)
!12905 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9567, file: !9567, line: 3188, type: !6350, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12906)
!12906 = !{!12907}
!12907 = !DILocalVariable(name: "Source", arg: 1, scope: !12905, file: !9567, line: 3188, type: !152)
!12908 = !DILocation(line: 0, scope: !12905)
!12909 = !DILocation(line: 3190, column: 3, scope: !12905)
!12910 = !DILocation(line: 3191, column: 1, scope: !12905)
!12911 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9567, file: !9567, line: 3204, type: !6340, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12912 = !DILocation(line: 3206, column: 21, scope: !12911)
!12913 = !DILocation(line: 3206, column: 3, scope: !12911)
!12914 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9567, file: !9567, line: 3240, type: !6350, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12915)
!12915 = !{!12916}
!12916 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12914, file: !9567, line: 3240, type: !152)
!12917 = !DILocation(line: 0, scope: !12914)
!12918 = !DILocation(line: 3242, column: 3, scope: !12914)
!12919 = !DILocation(line: 3243, column: 1, scope: !12914)
!12920 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9567, file: !9567, line: 3256, type: !6350, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12921)
!12921 = !{!12922}
!12922 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12920, file: !9567, line: 3256, type: !152)
!12923 = !DILocation(line: 0, scope: !12920)
!12924 = !DILocation(line: 3258, column: 3, scope: !12920)
!12925 = !DILocation(line: 3259, column: 1, scope: !12920)
!12926 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9567, file: !9567, line: 5153, type: !6340, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12927 = !DILocation(line: 5155, column: 11, scope: !12926)
!12928 = !DILocation(line: 5155, column: 47, scope: !12926)
!12929 = !DILocation(line: 5155, column: 3, scope: !12926)
!12930 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12624, file: !12624, line: 540, type: !12931, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12933)
!12931 = !DISubroutineType(types: !12932)
!12932 = !{!12667, !152, !152, !12745, !12752}
!12933 = !{!12934, !12935, !12936, !12937, !12938, !12939}
!12934 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12930, file: !12624, line: 540, type: !152)
!12935 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12930, file: !12624, line: 540, type: !152)
!12936 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12930, file: !12624, line: 541, type: !12745)
!12937 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12930, file: !12624, line: 541, type: !12752)
!12938 = !DILocalVariable(name: "status", scope: !12930, file: !12624, line: 543, type: !12667)
!12939 = !DILocalVariable(name: "pllfreq", scope: !12930, file: !12624, line: 544, type: !152)
!12940 = !DILocation(line: 0, scope: !12930)
!12941 = !DILocation(line: 551, column: 6, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12930, file: !12624, line: 551, column: 6)
!12943 = !DILocation(line: 551, column: 25, scope: !12942)
!12944 = !DILocation(line: 551, column: 6, scope: !12930)
!12945 = !DILocation(line: 554, column: 15, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12942, file: !12624, line: 552, column: 3)
!12947 = !DILocation(line: 557, column: 8, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12946, file: !12624, line: 557, column: 8)
!12949 = !DILocation(line: 557, column: 29, scope: !12948)
!12950 = !DILocation(line: 557, column: 8, scope: !12946)
!12951 = !DILocation(line: 560, column: 20, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12953, file: !12624, line: 560, column: 10)
!12953 = distinct !DILexicalBlock(scope: !12948, file: !12624, line: 558, column: 5)
!12954 = !DILocation(line: 560, column: 10, scope: !12953)
!12955 = !DILocation(line: 562, column: 9, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12952, file: !12624, line: 561, column: 7)
!12957 = !DILocation(line: 563, column: 7, scope: !12956)
!12958 = !DILocation(line: 566, column: 9, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12952, file: !12624, line: 565, column: 7)
!12960 = !DILocation(line: 570, column: 7, scope: !12953)
!12961 = !DILocation(line: 571, column: 7, scope: !12953)
!12962 = !DILocation(line: 571, column: 14, scope: !12953)
!12963 = !DILocation(line: 571, column: 35, scope: !12953)
!12964 = distinct !{!12964, !12961, !12965}
!12965 = !DILocation(line: 574, column: 7, scope: !12953)
!12966 = !DILocation(line: 578, column: 76, scope: !12946)
!12967 = !DILocation(line: 578, column: 103, scope: !12946)
!12968 = !DILocation(line: 579, column: 54, scope: !12946)
!12969 = !DILocation(line: 578, column: 5, scope: !12946)
!12970 = !DILocation(line: 582, column: 14, scope: !12946)
!12971 = !DILocation(line: 583, column: 3, scope: !12946)
!12972 = !DILocation(line: 0, scope: !12942)
!12973 = !DILocation(line: 590, column: 3, scope: !12930)
!12974 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9567, file: !9567, line: 2969, type: !6340, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12975 = !DILocation(line: 2971, column: 11, scope: !12974)
!12976 = !DILocation(line: 2971, column: 44, scope: !12974)
!12977 = !DILocation(line: 2971, column: 3, scope: !12974)
!12978 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9567, file: !9567, line: 2929, type: !3089, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12979 = !DILocation(line: 2931, column: 3, scope: !12978)
!12980 = !DILocation(line: 2932, column: 1, scope: !12978)
!12981 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9567, file: !9567, line: 2939, type: !3089, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12982 = !DILocation(line: 2941, column: 3, scope: !12981)
!12983 = !DILocation(line: 2942, column: 1, scope: !12981)
!12984 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9567, file: !9567, line: 2949, type: !3089, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2166)
!12985 = !DILocation(line: 2951, column: 3, scope: !12984)
!12986 = !DILocation(line: 2952, column: 1, scope: !12984)
!12987 = distinct !DISubprogram(name: "z_device_state_init", scope: !12988, file: !12988, line: 23, type: !3089, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12989)
!12988 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12989 = !{!12990}
!12990 = !DILocalVariable(name: "dev", scope: !12987, file: !12988, line: 25, type: !12991)
!12991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12992, size: 32)
!12992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12993)
!12993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !12994)
!12994 = !{!12995, !12996, !12997, !12998, !13004, !13005}
!12995 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12993, file: !247, line: 380, baseType: !118, size: 32)
!12996 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12993, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!12997 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12993, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!12998 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12993, file: !247, line: 386, baseType: !12999, size: 32, offset: 96)
!12999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13000, size: 32)
!13000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !13001)
!13001 = !{!13002, !13003}
!13002 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13000, file: !247, line: 359, baseType: !195, size: 8)
!13003 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13000, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13004 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12993, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!13005 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12993, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!13006 = !DILocation(line: 0, scope: !12987)
!13007 = !DILocation(line: 31, column: 1, scope: !12987)
!13008 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12988, file: !12988, line: 33, type: !13009, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13011)
!13009 = !DISubroutineType(types: !13010)
!13010 = !{!12991, !118}
!13011 = !{!13012, !13013}
!13012 = !DILocalVariable(name: "name", arg: 1, scope: !13008, file: !12988, line: 33, type: !118)
!13013 = !DILocalVariable(name: "dev", scope: !13008, file: !12988, line: 35, type: !12991)
!13014 = !DILocation(line: 0, scope: !13008)
!13015 = !DILocation(line: 40, column: 12, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !13008, file: !12988, line: 40, column: 6)
!13017 = !DILocation(line: 40, column: 21, scope: !13016)
!13018 = !DILocation(line: 40, column: 25, scope: !13016)
!13019 = !DILocation(line: 40, column: 33, scope: !13016)
!13020 = !DILocation(line: 40, column: 6, scope: !13008)
!13021 = !DILocation(line: 55, column: 2, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13008, file: !12988, line: 55, column: 2)
!13023 = !DILocation(line: 50, column: 7, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13025, file: !12988, line: 50, column: 7)
!13025 = distinct !DILexicalBlock(scope: !13026, file: !12988, line: 49, column: 57)
!13026 = distinct !DILexicalBlock(scope: !13027, file: !12988, line: 49, column: 2)
!13027 = distinct !DILexicalBlock(scope: !13008, file: !12988, line: 49, column: 2)
!13028 = !DILocation(line: 50, column: 30, scope: !13024)
!13029 = !DILocation(line: 50, column: 39, scope: !13024)
!13030 = !DILocation(line: 50, column: 44, scope: !13024)
!13031 = !DILocation(line: 50, column: 7, scope: !13025)
!13032 = !DILocation(line: 49, column: 53, scope: !13026)
!13033 = !DILocation(line: 49, column: 33, scope: !13026)
!13034 = !DILocation(line: 49, column: 2, scope: !13027)
!13035 = distinct !{!13035, !13034, !13036}
!13036 = !DILocation(line: 53, column: 2, scope: !13027)
!13037 = !DILocation(line: 56, column: 7, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13039, file: !12988, line: 56, column: 7)
!13039 = distinct !DILexicalBlock(scope: !13040, file: !12988, line: 55, column: 57)
!13040 = distinct !DILexicalBlock(scope: !13022, file: !12988, line: 55, column: 2)
!13041 = !DILocation(line: 56, column: 30, scope: !13038)
!13042 = !DILocation(line: 56, column: 52, scope: !13038)
!13043 = !DILocation(line: 56, column: 34, scope: !13038)
!13044 = !DILocation(line: 56, column: 58, scope: !13038)
!13045 = !DILocation(line: 56, column: 7, scope: !13039)
!13046 = !DILocation(line: 55, column: 53, scope: !13040)
!13047 = !DILocation(line: 55, column: 33, scope: !13040)
!13048 = distinct !{!13048, !13021, !13049}
!13049 = !DILocation(line: 59, column: 2, scope: !13022)
!13050 = !DILocation(line: 62, column: 1, scope: !13008)
!13051 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12988, file: !12988, line: 93, type: !13052, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13054)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{!145, !12991}
!13054 = !{!13055}
!13055 = !DILocalVariable(name: "dev", arg: 1, scope: !13051, file: !12988, line: 93, type: !12991)
!13056 = !DILocation(line: 0, scope: !13051)
!13057 = !DILocation(line: 99, column: 10, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13051, file: !12988, line: 99, column: 6)
!13059 = !DILocation(line: 99, column: 6, scope: !13051)
!13060 = !DILocation(line: 103, column: 14, scope: !13051)
!13061 = !DILocation(line: 103, column: 21, scope: !13051)
!13062 = !DILocation(line: 103, column: 33, scope: !13051)
!13063 = !DILocation(line: 103, column: 49, scope: !13051)
!13064 = !DILocation(line: 103, column: 58, scope: !13051)
!13065 = !DILocation(line: 104, column: 1, scope: !13051)
!13066 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12988, file: !12988, line: 87, type: !13067, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13070)
!13067 = !DISubroutineType(types: !13068)
!13068 = !{!185, !13069}
!13069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12991, size: 32)
!13070 = !{!13071}
!13071 = !DILocalVariable(name: "devices", arg: 1, scope: !13066, file: !12988, line: 87, type: !13069)
!13072 = !DILocation(line: 0, scope: !13066)
!13073 = !DILocation(line: 89, column: 11, scope: !13066)
!13074 = !DILocation(line: 90, column: 2, scope: !13066)
!13075 = distinct !DISubprogram(name: "device_required_foreach", scope: !12988, file: !12988, line: 125, type: !13076, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13082)
!13076 = !DISubroutineType(types: !13077)
!13077 = !{!107, !12991, !13078, !106}
!13078 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !247, line: 471, baseType: !13079)
!13079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13080, size: 32)
!13080 = !DISubroutineType(types: !13081)
!13081 = !{!107, !12991, !106}
!13082 = !{!13083, !13084, !13085, !13086, !13087}
!13083 = !DILocalVariable(name: "dev", arg: 1, scope: !13075, file: !12988, line: 125, type: !12991)
!13084 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13075, file: !12988, line: 126, type: !13078)
!13085 = !DILocalVariable(name: "context", arg: 3, scope: !13075, file: !12988, line: 127, type: !106)
!13086 = !DILocalVariable(name: "handle_count", scope: !13075, file: !12988, line: 129, type: !185)
!13087 = !DILocalVariable(name: "handles", scope: !13075, file: !12988, line: 130, type: !260)
!13088 = !DILocation(line: 0, scope: !13075)
!13089 = !DILocation(line: 129, column: 2, scope: !13075)
!13090 = !DILocation(line: 129, column: 9, scope: !13075)
!13091 = !DILocation(line: 130, column: 35, scope: !13075)
!13092 = !DILocation(line: 132, column: 33, scope: !13075)
!13093 = !DILocation(line: 132, column: 9, scope: !13075)
!13094 = !DILocation(line: 133, column: 1, scope: !13075)
!13095 = !DILocation(line: 132, column: 2, scope: !13075)
!13096 = distinct !DISubprogram(name: "device_required_handles_get", scope: !247, file: !247, line: 493, type: !13097, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13099)
!13097 = !DISubroutineType(types: !13098)
!13098 = !{!260, !12991, !2545}
!13099 = !{!13100, !13101, !13102, !13103}
!13100 = !DILocalVariable(name: "dev", arg: 1, scope: !13096, file: !247, line: 493, type: !12991)
!13101 = !DILocalVariable(name: "count", arg: 2, scope: !13096, file: !247, line: 493, type: !2545)
!13102 = !DILocalVariable(name: "rv", scope: !13096, file: !247, line: 495, type: !260)
!13103 = !DILocalVariable(name: "i", scope: !13104, file: !247, line: 498, type: !185)
!13104 = distinct !DILexicalBlock(scope: !13105, file: !247, line: 497, column: 18)
!13105 = distinct !DILexicalBlock(scope: !13096, file: !247, line: 497, column: 6)
!13106 = !DILocation(line: 0, scope: !13096)
!13107 = !DILocation(line: 495, column: 35, scope: !13096)
!13108 = !DILocation(line: 497, column: 9, scope: !13105)
!13109 = !DILocation(line: 497, column: 6, scope: !13096)
!13110 = !DILocation(line: 0, scope: !13104)
!13111 = !DILocation(line: 500, column: 11, scope: !13104)
!13112 = !DILocation(line: 500, column: 40, scope: !13104)
!13113 = !DILocation(line: 502, column: 4, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13104, file: !247, line: 501, column: 40)
!13115 = distinct !{!13115, !13116, !13117}
!13116 = !DILocation(line: 500, column: 3, scope: !13104)
!13117 = !DILocation(line: 503, column: 3, scope: !13104)
!13118 = !DILocation(line: 504, column: 10, scope: !13104)
!13119 = !DILocation(line: 505, column: 2, scope: !13104)
!13120 = !DILocation(line: 507, column: 2, scope: !13096)
!13121 = distinct !DISubprogram(name: "device_visitor", scope: !12988, file: !12988, line: 106, type: !13122, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13124)
!13122 = !DISubroutineType(types: !13123)
!13123 = !{!107, !260, !185, !13078, !106}
!13124 = !{!13125, !13126, !13127, !13128, !13129, !13131, !13134, !13135}
!13125 = !DILocalVariable(name: "handles", arg: 1, scope: !13121, file: !12988, line: 106, type: !260)
!13126 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13121, file: !12988, line: 107, type: !185)
!13127 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13121, file: !12988, line: 108, type: !13078)
!13128 = !DILocalVariable(name: "context", arg: 4, scope: !13121, file: !12988, line: 109, type: !106)
!13129 = !DILocalVariable(name: "i", scope: !13130, file: !12988, line: 112, type: !185)
!13130 = distinct !DILexicalBlock(scope: !13121, file: !12988, line: 112, column: 2)
!13131 = !DILocalVariable(name: "dh", scope: !13132, file: !12988, line: 113, type: !262)
!13132 = distinct !DILexicalBlock(scope: !13133, file: !12988, line: 112, column: 44)
!13133 = distinct !DILexicalBlock(scope: !13130, file: !12988, line: 112, column: 2)
!13134 = !DILocalVariable(name: "rdev", scope: !13132, file: !12988, line: 114, type: !12991)
!13135 = !DILocalVariable(name: "rc", scope: !13132, file: !12988, line: 115, type: !107)
!13136 = !DILocation(line: 0, scope: !13121)
!13137 = !DILocation(line: 0, scope: !13130)
!13138 = !DILocation(line: 112, column: 23, scope: !13133)
!13139 = !DILocation(line: 112, column: 2, scope: !13130)
!13140 = distinct !{!13140, !13139, !13141}
!13141 = !DILocation(line: 120, column: 2, scope: !13130)
!13142 = !DILocation(line: 113, column: 24, scope: !13132)
!13143 = !DILocation(line: 0, scope: !13132)
!13144 = !DILocation(line: 114, column: 31, scope: !13132)
!13145 = !DILocation(line: 115, column: 12, scope: !13132)
!13146 = !DILocation(line: 117, column: 10, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13132, file: !12988, line: 117, column: 7)
!13148 = !DILocation(line: 112, column: 39, scope: !13133)
!13149 = !DILocation(line: 123, column: 1, scope: !13121)
!13150 = distinct !DISubprogram(name: "device_from_handle", scope: !247, file: !247, line: 439, type: !13151, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13153)
!13151 = !DISubroutineType(types: !13152)
!13152 = !{!12991, !262}
!13153 = !{!13154, !13155, !13156}
!13154 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13150, file: !247, line: 439, type: !262)
!13155 = !DILocalVariable(name: "dev", scope: !13150, file: !247, line: 443, type: !12991)
!13156 = !DILocalVariable(name: "numdev", scope: !13150, file: !247, line: 444, type: !185)
!13157 = !DILocation(line: 0, scope: !13150)
!13158 = !DILocation(line: 446, column: 7, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13150, file: !247, line: 446, column: 6)
!13160 = !DILocation(line: 446, column: 18, scope: !13159)
!13161 = !DILocation(line: 446, column: 23, scope: !13159)
!13162 = !DILocation(line: 450, column: 2, scope: !13150)
!13163 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12988, file: !12988, line: 135, type: !13076, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13164)
!13164 = !{!13165, !13166, !13167, !13168, !13169}
!13165 = !DILocalVariable(name: "dev", arg: 1, scope: !13163, file: !12988, line: 135, type: !12991)
!13166 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13163, file: !12988, line: 136, type: !13078)
!13167 = !DILocalVariable(name: "context", arg: 3, scope: !13163, file: !12988, line: 137, type: !106)
!13168 = !DILocalVariable(name: "handle_count", scope: !13163, file: !12988, line: 139, type: !185)
!13169 = !DILocalVariable(name: "handles", scope: !13163, file: !12988, line: 140, type: !260)
!13170 = !DILocation(line: 0, scope: !13163)
!13171 = !DILocation(line: 139, column: 2, scope: !13163)
!13172 = !DILocation(line: 139, column: 9, scope: !13163)
!13173 = !DILocation(line: 140, column: 35, scope: !13163)
!13174 = !DILocation(line: 142, column: 33, scope: !13163)
!13175 = !DILocation(line: 142, column: 9, scope: !13163)
!13176 = !DILocation(line: 143, column: 1, scope: !13163)
!13177 = !DILocation(line: 142, column: 2, scope: !13163)
!13178 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !247, file: !247, line: 573, type: !13097, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !13179)
!13179 = !{!13180, !13181, !13182, !13183, !13184}
!13180 = !DILocalVariable(name: "dev", arg: 1, scope: !13178, file: !247, line: 573, type: !12991)
!13181 = !DILocalVariable(name: "count", arg: 2, scope: !13178, file: !247, line: 573, type: !2545)
!13182 = !DILocalVariable(name: "rv", scope: !13178, file: !247, line: 575, type: !260)
!13183 = !DILocalVariable(name: "region", scope: !13178, file: !247, line: 576, type: !185)
!13184 = !DILocalVariable(name: "i", scope: !13178, file: !247, line: 577, type: !185)
!13185 = !DILocation(line: 0, scope: !13178)
!13186 = !DILocation(line: 575, column: 35, scope: !13178)
!13187 = !DILocation(line: 579, column: 9, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13178, file: !247, line: 579, column: 6)
!13189 = !DILocation(line: 579, column: 6, scope: !13178)
!13190 = !DILocation(line: 582, column: 8, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13192, file: !247, line: 582, column: 8)
!13192 = distinct !DILexicalBlock(scope: !13193, file: !247, line: 581, column: 23)
!13193 = distinct !DILexicalBlock(scope: !13188, file: !247, line: 579, column: 18)
!13194 = !DILocation(line: 582, column: 12, scope: !13191)
!13195 = !DILocation(line: 585, column: 6, scope: !13192)
!13196 = !DILocation(line: 0, scope: !13193)
!13197 = !DILocation(line: 581, column: 17, scope: !13193)
!13198 = !DILocation(line: 581, column: 3, scope: !13193)
!13199 = !DILocation(line: 588, column: 10, scope: !13193)
!13200 = !DILocation(line: 588, column: 16, scope: !13193)
!13201 = !DILocation(line: 589, column: 4, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13193, file: !247, line: 588, column: 39)
!13203 = !DILocation(line: 588, column: 3, scope: !13193)
!13204 = distinct !{!13204, !13203, !13205}
!13205 = !DILocation(line: 590, column: 3, scope: !13193)
!13206 = !DILocation(line: 591, column: 10, scope: !13193)
!13207 = !DILocation(line: 592, column: 2, scope: !13193)
!13208 = !DILocation(line: 575, column: 25, scope: !13178)
!13209 = !DILocation(line: 594, column: 2, scope: !13178)
!13210 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1957, file: !1957, line: 49, type: !13211, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1954, retainedNodes: !2166)
!13211 = !DISubroutineType(types: !13212)
!13212 = !{!187}
!13213 = !DILocation(line: 51, column: 10, scope: !13210)
!13214 = !DILocation(line: 51, column: 20, scope: !13210)
!13215 = !DILocation(line: 51, column: 2, scope: !13210)
!13216 = distinct !DISubprogram(name: "coredump", scope: !3056, file: !3056, line: 209, type: !13217, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13366)
!13217 = !DISubroutineType(types: !13218)
!13218 = !{null, !32, !13219, !13263}
!13219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13220, size: 32)
!13220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13221)
!13221 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2675, line: 141, baseType: !13222)
!13222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2675, line: 97, size: 256, elements: !13223)
!13223 = !{!13224}
!13224 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13222, file: !2675, line: 107, baseType: !13225, size: 256)
!13225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !13226)
!13226 = !{!13227, !13232, !13237, !13242, !13247, !13252, !13257, !13262}
!13227 = !DIDerivedType(tag: DW_TAG_member, scope: !13225, file: !2675, line: 99, baseType: !13228, size: 32)
!13228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13225, file: !2675, line: 99, size: 32, elements: !13229)
!13229 = !{!13230, !13231}
!13230 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13228, file: !2675, line: 99, baseType: !152, size: 32)
!13231 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13228, file: !2675, line: 99, baseType: !152, size: 32)
!13232 = !DIDerivedType(tag: DW_TAG_member, scope: !13225, file: !2675, line: 100, baseType: !13233, size: 32, offset: 32)
!13233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13225, file: !2675, line: 100, size: 32, elements: !13234)
!13234 = !{!13235, !13236}
!13235 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13233, file: !2675, line: 100, baseType: !152, size: 32)
!13236 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13233, file: !2675, line: 100, baseType: !152, size: 32)
!13237 = !DIDerivedType(tag: DW_TAG_member, scope: !13225, file: !2675, line: 101, baseType: !13238, size: 32, offset: 64)
!13238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13225, file: !2675, line: 101, size: 32, elements: !13239)
!13239 = !{!13240, !13241}
!13240 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13238, file: !2675, line: 101, baseType: !152, size: 32)
!13241 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13238, file: !2675, line: 101, baseType: !152, size: 32)
!13242 = !DIDerivedType(tag: DW_TAG_member, scope: !13225, file: !2675, line: 102, baseType: !13243, size: 32, offset: 96)
!13243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13225, file: !2675, line: 102, size: 32, elements: !13244)
!13244 = !{!13245, !13246}
!13245 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13243, file: !2675, line: 102, baseType: !152, size: 32)
!13246 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13243, file: !2675, line: 102, baseType: !152, size: 32)
!13247 = !DIDerivedType(tag: DW_TAG_member, scope: !13225, file: !2675, line: 103, baseType: !13248, size: 32, offset: 128)
!13248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13225, file: !2675, line: 103, size: 32, elements: !13249)
!13249 = !{!13250, !13251}
!13250 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13248, file: !2675, line: 103, baseType: !152, size: 32)
!13251 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13248, file: !2675, line: 103, baseType: !152, size: 32)
!13252 = !DIDerivedType(tag: DW_TAG_member, scope: !13225, file: !2675, line: 104, baseType: !13253, size: 32, offset: 160)
!13253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13225, file: !2675, line: 104, size: 32, elements: !13254)
!13254 = !{!13255, !13256}
!13255 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13253, file: !2675, line: 104, baseType: !152, size: 32)
!13256 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13253, file: !2675, line: 104, baseType: !152, size: 32)
!13257 = !DIDerivedType(tag: DW_TAG_member, scope: !13225, file: !2675, line: 105, baseType: !13258, size: 32, offset: 192)
!13258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13225, file: !2675, line: 105, size: 32, elements: !13259)
!13259 = !{!13260, !13261}
!13260 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13258, file: !2675, line: 105, baseType: !152, size: 32)
!13261 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13258, file: !2675, line: 105, baseType: !152, size: 32)
!13262 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13225, file: !2675, line: 106, baseType: !152, size: 32, offset: 224)
!13263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13264, size: 32)
!13264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !13265)
!13265 = !{!13266, !13324, !13336, !13337, !13338, !13339, !13340, !13346, !13361}
!13266 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13264, file: !309, line: 247, baseType: !13267, size: 384)
!13267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !13268)
!13268 = !{!13269, !13293, !13300, !13301, !13302, !13311, !13312, !13313}
!13269 = !DIDerivedType(tag: DW_TAG_member, scope: !13267, file: !309, line: 60, baseType: !13270, size: 64)
!13270 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13267, file: !309, line: 60, size: 64, elements: !13271)
!13271 = !{!13272, !13287}
!13272 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13270, file: !309, line: 61, baseType: !13273, size: 64)
!13273 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !13274)
!13274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !13275)
!13275 = !{!13276, !13282}
!13276 = !DIDerivedType(tag: DW_TAG_member, scope: !13274, file: !319, line: 38, baseType: !13277, size: 32)
!13277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13274, file: !319, line: 38, size: 32, elements: !13278)
!13278 = !{!13279, !13281}
!13279 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13277, file: !319, line: 39, baseType: !13280, size: 32)
!13280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13274, size: 32)
!13281 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13277, file: !319, line: 40, baseType: !13280, size: 32)
!13282 = !DIDerivedType(tag: DW_TAG_member, scope: !13274, file: !319, line: 42, baseType: !13283, size: 32, offset: 32)
!13283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13274, file: !319, line: 42, size: 32, elements: !13284)
!13284 = !{!13285, !13286}
!13285 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13283, file: !319, line: 43, baseType: !13280, size: 32)
!13286 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13283, file: !319, line: 44, baseType: !13280, size: 32)
!13287 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13270, file: !309, line: 62, baseType: !13288, size: 64)
!13288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !13289)
!13289 = !{!13290}
!13290 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13288, file: !335, line: 50, baseType: !13291, size: 64)
!13291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13292, size: 64, elements: !340)
!13292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13288, size: 32)
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13267, file: !309, line: 68, baseType: !13294, size: 32, offset: 64)
!13294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13295, size: 32)
!13295 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !13296)
!13296 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !13297)
!13297 = !{!13298}
!13298 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13296, file: !345, line: 232, baseType: !13299, size: 64)
!13299 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !13274)
!13300 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13267, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!13301 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13267, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!13302 = !DIDerivedType(tag: DW_TAG_member, scope: !13267, file: !309, line: 90, baseType: !13303, size: 16, offset: 112)
!13303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13267, file: !309, line: 90, size: 16, elements: !13304)
!13304 = !{!13305, !13310}
!13305 = !DIDerivedType(tag: DW_TAG_member, scope: !13303, file: !309, line: 91, baseType: !13306, size: 16)
!13306 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13303, file: !309, line: 91, size: 16, elements: !13307)
!13307 = !{!13308, !13309}
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13306, file: !309, line: 96, baseType: !359, size: 8)
!13309 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13306, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!13310 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13303, file: !309, line: 100, baseType: !197, size: 16)
!13311 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13267, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13267, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!13313 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13267, file: !309, line: 131, baseType: !13314, size: 192, offset: 192)
!13314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !13315)
!13315 = !{!13316, !13317, !13323}
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13314, file: !345, line: 245, baseType: !13273, size: 64)
!13317 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13314, file: !345, line: 246, baseType: !13318, size: 32, offset: 64)
!13318 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !13319)
!13319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13320, size: 32)
!13320 = !DISubroutineType(types: !13321)
!13321 = !{null, !13322}
!13322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13314, size: 32)
!13323 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13314, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!13324 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13264, file: !309, line: 250, baseType: !13325, size: 288, offset: 384)
!13325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !13326)
!13326 = !{!13327, !13328, !13329, !13330, !13331, !13332, !13333, !13334, !13335}
!13327 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13325, file: !379, line: 26, baseType: !152, size: 32)
!13328 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13325, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!13329 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13325, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!13330 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13325, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!13331 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13325, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!13332 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13325, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!13333 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13325, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!13334 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13325, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!13335 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13325, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!13336 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13264, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!13337 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13264, file: !309, line: 256, baseType: !13295, size: 64, offset: 704)
!13338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13264, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13264, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!13340 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13264, file: !309, line: 300, baseType: !13341, size: 96, offset: 1056)
!13341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !13342)
!13342 = !{!13343, !13344, !13345}
!13343 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13341, file: !309, line: 153, baseType: !22, size: 32)
!13344 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13341, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!13345 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13341, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!13346 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13264, file: !309, line: 325, baseType: !13347, size: 32, offset: 1152)
!13347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13348, size: 32)
!13348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !13349)
!13349 = !{!13350, !13356, !13357}
!13350 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13348, file: !406, line: 5074, baseType: !13351, size: 96)
!13351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !13352)
!13352 = !{!13353, !13354, !13355}
!13353 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13351, file: !410, line: 57, baseType: !413, size: 32)
!13354 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13351, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!13355 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13351, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!13356 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13348, file: !406, line: 5075, baseType: !13295, size: 64, offset: 96)
!13357 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13348, file: !406, line: 5076, baseType: !13358, size: 32, offset: 160)
!13358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !13359)
!13359 = !{!13360}
!13360 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13358, file: !420, line: 52, baseType: !22, size: 32)
!13361 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13264, file: !309, line: 343, baseType: !13362, size: 64, offset: 1184)
!13362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !13363)
!13363 = !{!13364, !13365}
!13364 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13362, file: !379, line: 63, baseType: !152, size: 32)
!13365 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13362, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!13366 = !{!13367, !13368, !13369}
!13367 = !DILocalVariable(name: "reason", arg: 1, scope: !13216, file: !3056, line: 209, type: !32)
!13368 = !DILocalVariable(name: "esf", arg: 2, scope: !13216, file: !3056, line: 209, type: !13219)
!13369 = !DILocalVariable(name: "thread", arg: 3, scope: !13216, file: !3056, line: 210, type: !13263)
!13370 = !DILocation(line: 0, scope: !13216)
!13371 = !DILocation(line: 212, column: 1, scope: !13216)
!13372 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3056, file: !3056, line: 214, type: !13373, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13375)
!13373 = !DISubroutineType(types: !13374)
!13374 = !{null, !22, !22}
!13375 = !{!13376, !13377}
!13376 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13372, file: !3056, line: 214, type: !22)
!13377 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13372, file: !3056, line: 214, type: !22)
!13378 = !DILocation(line: 0, scope: !13372)
!13379 = !DILocation(line: 216, column: 1, scope: !13372)
!13380 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3056, file: !3056, line: 218, type: !13381, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13383)
!13381 = !DISubroutineType(types: !13382)
!13382 = !{null, !194, !185}
!13383 = !{!13384, !13385}
!13384 = !DILocalVariable(name: "buf", arg: 1, scope: !13380, file: !3056, line: 218, type: !194)
!13385 = !DILocalVariable(name: "buflen", arg: 2, scope: !13380, file: !3056, line: 218, type: !185)
!13386 = !DILocation(line: 0, scope: !13380)
!13387 = !DILocation(line: 220, column: 1, scope: !13380)
!13388 = distinct !DISubprogram(name: "coredump_query", scope: !3056, file: !3056, line: 222, type: !13389, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13391)
!13389 = !DISubroutineType(types: !13390)
!13390 = !{!107, !3055, !106}
!13391 = !{!13392, !13393}
!13392 = !DILocalVariable(name: "query_id", arg: 1, scope: !13388, file: !3056, line: 222, type: !3055)
!13393 = !DILocalVariable(name: "arg", arg: 2, scope: !13388, file: !3056, line: 222, type: !106)
!13394 = !DILocation(line: 0, scope: !13388)
!13395 = !DILocation(line: 224, column: 2, scope: !13388)
!13396 = distinct !DISubprogram(name: "coredump_cmd", scope: !3056, file: !3056, line: 227, type: !13397, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13399)
!13397 = !DISubroutineType(types: !13398)
!13398 = !{!107, !3062, !106}
!13399 = !{!13400, !13401}
!13400 = !DILocalVariable(name: "query_id", arg: 1, scope: !13396, file: !3056, line: 227, type: !3062)
!13401 = !DILocalVariable(name: "arg", arg: 2, scope: !13396, file: !3056, line: 227, type: !106)
!13402 = !DILocation(line: 0, scope: !13396)
!13403 = !DILocation(line: 229, column: 2, scope: !13396)
!13404 = distinct !DISubprogram(name: "arch_system_halt", scope: !13405, file: !13405, line: 23, type: !5945, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13406)
!13405 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13406 = !{!13407}
!13407 = !DILocalVariable(name: "reason", arg: 1, scope: !13404, file: !13405, line: 23, type: !32)
!13408 = !DILocation(line: 0, scope: !13404)
!13409 = !DILocation(line: 55, column: 2, scope: !13410, inlinedAt: !13414)
!13410 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5934, file: !5934, line: 42, type: !5935, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13411)
!13411 = !{!13412, !13413}
!13412 = !DILocalVariable(name: "key", scope: !13410, file: !5934, line: 44, type: !32)
!13413 = !DILocalVariable(name: "tmp", scope: !13410, file: !5934, line: 53, type: !32)
!13414 = distinct !DILocation(line: 31, column: 8, scope: !13404)
!13415 = !{i64 2228555}
!13416 = !DILocation(line: 0, scope: !13410, inlinedAt: !13414)
!13417 = !DILocation(line: 32, column: 2, scope: !13404)
!13418 = !DILocation(line: 32, column: 2, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13420, file: !13405, line: 32, column: 2)
!13420 = distinct !DILexicalBlock(scope: !13404, file: !13405, line: 32, column: 2)
!13421 = distinct !{!13421, !13422, !13423}
!13422 = !DILocation(line: 32, column: 2, scope: !13420)
!13423 = !DILocation(line: 34, column: 2, scope: !13420)
!13424 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13405, file: !13405, line: 39, type: !13425, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13427)
!13425 = !DISubroutineType(types: !13426)
!13426 = !{null, !32, !13219}
!13427 = !{!13428, !13429}
!13428 = !DILocalVariable(name: "reason", arg: 1, scope: !13424, file: !13405, line: 39, type: !32)
!13429 = !DILocalVariable(name: "esf", arg: 2, scope: !13424, file: !13405, line: 40, type: !13219)
!13430 = !DILocation(line: 0, scope: !13424)
!13431 = !DILocation(line: 45, column: 2, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13433, file: !13405, line: 45, column: 2)
!13433 = distinct !DILexicalBlock(scope: !13434, file: !13405, line: 45, column: 2)
!13434 = distinct !DILexicalBlock(scope: !13435, file: !13405, line: 45, column: 2)
!13435 = distinct !DILexicalBlock(scope: !13424, file: !13405, line: 45, column: 2)
!13436 = !DILocation(line: 46, column: 2, scope: !13424)
!13437 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13405, file: !13405, line: 81, type: !5945, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13438)
!13438 = !{!13439}
!13439 = !DILocalVariable(name: "reason", arg: 1, scope: !13437, file: !13405, line: 81, type: !32)
!13440 = !DILocation(line: 0, scope: !13437)
!13441 = !DILocation(line: 83, column: 2, scope: !13437)
!13442 = distinct !DISubprogram(name: "z_fatal_error", scope: !13405, file: !13405, line: 96, type: !13425, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13443)
!13443 = !{!13444, !13445, !13446, !13447}
!13444 = !DILocalVariable(name: "reason", arg: 1, scope: !13442, file: !13405, line: 96, type: !32)
!13445 = !DILocalVariable(name: "esf", arg: 2, scope: !13442, file: !13405, line: 96, type: !13219)
!13446 = !DILocalVariable(name: "key", scope: !13442, file: !13405, line: 102, type: !32)
!13447 = !DILocalVariable(name: "thread", scope: !13442, file: !13405, line: 103, type: !13263)
!13448 = !DILocation(line: 0, scope: !13442)
!13449 = !DILocation(line: 55, column: 2, scope: !13410, inlinedAt: !13450)
!13450 = distinct !DILocation(line: 102, column: 21, scope: !13442)
!13451 = !DILocation(line: 0, scope: !13410, inlinedAt: !13450)
!13452 = !DILocation(line: 104, column: 4, scope: !13442)
!13453 = !DILocation(line: 109, column: 2, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !13405, line: 109, column: 2)
!13455 = distinct !DILexicalBlock(scope: !13456, file: !13405, line: 109, column: 2)
!13456 = distinct !DILexicalBlock(scope: !13457, file: !13405, line: 109, column: 2)
!13457 = distinct !DILexicalBlock(scope: !13442, file: !13405, line: 109, column: 2)
!13458 = !DILocation(line: 119, column: 11, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13442, file: !13405, line: 119, column: 6)
!13460 = !DILocation(line: 119, column: 20, scope: !13459)
!13461 = !DILocalVariable(name: "esf", arg: 1, scope: !13462, file: !7305, line: 71, type: !13219)
!13462 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7305, file: !7305, line: 71, type: !13463, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13465)
!13463 = !DISubroutineType(types: !13464)
!13464 = !{!145, !13219}
!13465 = !{!13461}
!13466 = !DILocation(line: 0, scope: !13462, inlinedAt: !13467)
!13467 = distinct !DILocation(line: 119, column: 23, scope: !13459)
!13468 = !DILocation(line: 73, column: 21, scope: !13462, inlinedAt: !13467)
!13469 = !DILocation(line: 73, column: 26, scope: !13462, inlinedAt: !13467)
!13470 = !DILocation(line: 73, column: 9, scope: !13462, inlinedAt: !13467)
!13471 = !DILocation(line: 119, column: 6, scope: !13442)
!13472 = !DILocation(line: 120, column: 3, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13474, file: !13405, line: 120, column: 3)
!13474 = distinct !DILexicalBlock(scope: !13475, file: !13405, line: 120, column: 3)
!13475 = distinct !DILexicalBlock(scope: !13476, file: !13405, line: 120, column: 3)
!13476 = distinct !DILexicalBlock(scope: !13477, file: !13405, line: 120, column: 3)
!13477 = distinct !DILexicalBlock(scope: !13459, file: !13405, line: 119, column: 57)
!13478 = !DILocation(line: 121, column: 2, scope: !13477)
!13479 = !DILocation(line: 124, column: 2, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13481, file: !13405, line: 124, column: 2)
!13481 = distinct !DILexicalBlock(scope: !13482, file: !13405, line: 124, column: 2)
!13482 = distinct !DILexicalBlock(scope: !13483, file: !13405, line: 124, column: 2)
!13483 = distinct !DILexicalBlock(scope: !13442, file: !13405, line: 124, column: 2)
!13484 = !DILocation(line: 131, column: 2, scope: !13442)
!13485 = !DILocation(line: 0, scope: !13462, inlinedAt: !13486)
!13486 = distinct !DILocation(line: 163, column: 24, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13488, file: !13405, line: 163, column: 7)
!13488 = distinct !DILexicalBlock(scope: !13489, file: !13405, line: 160, column: 9)
!13489 = distinct !DILexicalBlock(scope: !13442, file: !13405, line: 146, column: 6)
!13490 = !DILocation(line: 73, column: 21, scope: !13462, inlinedAt: !13486)
!13491 = !DILocation(line: 73, column: 26, scope: !13462, inlinedAt: !13486)
!13492 = !DILocation(line: 73, column: 9, scope: !13462, inlinedAt: !13486)
!13493 = !DILocation(line: 163, column: 7, scope: !13488)
!13494 = !DILocalVariable(name: "key", arg: 1, scope: !13495, file: !5934, line: 84, type: !32)
!13495 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5934, file: !5934, line: 84, type: !5945, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13496)
!13496 = !{!13494}
!13497 = !DILocation(line: 0, scope: !13495, inlinedAt: !13498)
!13498 = distinct !DILocation(line: 171, column: 4, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13487, file: !13405, line: 163, column: 58)
!13500 = !DILocation(line: 95, column: 2, scope: !13495, inlinedAt: !13498)
!13501 = !{i64 2229372}
!13502 = !DILocation(line: 172, column: 4, scope: !13499)
!13503 = !DILocation(line: 163, column: 21, scope: !13487)
!13504 = !DILocation(line: 178, column: 15, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13506, file: !13405, line: 178, column: 8)
!13506 = distinct !DILexicalBlock(scope: !13487, file: !13405, line: 174, column: 10)
!13507 = !DILocation(line: 0, scope: !13495, inlinedAt: !13508)
!13508 = distinct !DILocation(line: 179, column: 5, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13505, file: !13405, line: 178, column: 38)
!13510 = !DILocation(line: 0, scope: !13495, inlinedAt: !13511)
!13511 = distinct !DILocation(line: 186, column: 2, scope: !13442)
!13512 = !DILocation(line: 178, column: 8, scope: !13506)
!13513 = !DILocation(line: 189, column: 3, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13515, file: !13405, line: 188, column: 41)
!13515 = distinct !DILexicalBlock(scope: !13442, file: !13405, line: 188, column: 6)
!13516 = !DILocation(line: 191, column: 1, scope: !13442)
!13517 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !13518, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !2166)
!13518 = !DISubroutineType(types: !13519)
!13519 = !{!13520}
!13520 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !13263)
!13521 = !DILocation(line: 535, column: 9, scope: !13517)
!13522 = !DILocation(line: 535, column: 2, scope: !13517)
!13523 = distinct !DISubprogram(name: "reason_to_str", scope: !13405, file: !13405, line: 62, type: !13524, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13526)
!13524 = !DISubroutineType(types: !13525)
!13525 = !{!118, !32}
!13526 = !{!13527}
!13527 = !DILocalVariable(name: "reason", arg: 1, scope: !13523, file: !13405, line: 62, type: !32)
!13528 = !DILocation(line: 0, scope: !13523)
!13529 = !DILocation(line: 64, column: 2, scope: !13523)
!13530 = !DILocation(line: 0, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13523, file: !13405, line: 64, column: 18)
!13532 = !DILocation(line: 78, column: 1, scope: !13523)
!13533 = distinct !DISubprogram(name: "thread_name_get", scope: !13405, file: !13405, line: 51, type: !13534, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13536)
!13534 = !DISubroutineType(types: !13535)
!13535 = !{!118, !13263}
!13536 = !{!13537, !13538}
!13537 = !DILocalVariable(name: "thread", arg: 1, scope: !13533, file: !13405, line: 51, type: !13263)
!13538 = !DILocalVariable(name: "thread_name", scope: !13533, file: !13405, line: 53, type: !118)
!13539 = !DILocation(line: 0, scope: !13533)
!13540 = !DILocation(line: 53, column: 36, scope: !13533)
!13541 = !DILocation(line: 53, column: 28, scope: !13533)
!13542 = !DILocation(line: 53, column: 47, scope: !13533)
!13543 = !DILocation(line: 55, column: 19, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13533, file: !13405, line: 55, column: 6)
!13545 = !DILocation(line: 55, column: 28, scope: !13544)
!13546 = !DILocation(line: 55, column: 32, scope: !13544)
!13547 = !DILocation(line: 55, column: 47, scope: !13544)
!13548 = !DILocation(line: 55, column: 6, scope: !13533)
!13549 = !DILocation(line: 57, column: 2, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13544, file: !13405, line: 55, column: 57)
!13551 = !DILocation(line: 59, column: 2, scope: !13533)
!13552 = distinct !DISubprogram(name: "k_thread_abort", scope: !4417, file: !4417, line: 188, type: !13553, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !13555)
!13553 = !DISubroutineType(types: !13554)
!13554 = !{null, !13520}
!13555 = !{!13556}
!13556 = !DILocalVariable(name: "thread", arg: 1, scope: !13552, file: !4417, line: 188, type: !13520)
!13557 = !DILocation(line: 0, scope: !13552)
!13558 = !DILocation(line: 197, column: 2, scope: !13559)
!13559 = distinct !DILexicalBlock(scope: !13552, file: !4417, line: 197, column: 2)
!13560 = !{i64 2154850910}
!13561 = !DILocation(line: 198, column: 2, scope: !13552)
!13562 = !DILocation(line: 199, column: 1, scope: !13552)
!13563 = distinct !DISubprogram(name: "z_current_get", scope: !4417, file: !4417, line: 173, type: !13518, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !2166)
!13564 = !DILocation(line: 180, column: 2, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13563, file: !4417, line: 180, column: 2)
!13566 = !{i64 2154850842}
!13567 = !DILocation(line: 181, column: 9, scope: !13563)
!13568 = !DILocation(line: 181, column: 2, scope: !13563)
!13569 = distinct !DISubprogram(name: "z_early_memset", scope: !1965, file: !1965, line: 108, type: !13570, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13572)
!13570 = !DISubroutineType(types: !13571)
!13571 = !{null, !106, !107, !185}
!13572 = !{!13573, !13574, !13575}
!13573 = !DILocalVariable(name: "dst", arg: 1, scope: !13569, file: !1965, line: 108, type: !106)
!13574 = !DILocalVariable(name: "c", arg: 2, scope: !13569, file: !1965, line: 108, type: !107)
!13575 = !DILocalVariable(name: "n", arg: 3, scope: !13569, file: !1965, line: 108, type: !185)
!13576 = !DILocation(line: 0, scope: !13569)
!13577 = !DILocation(line: 110, column: 9, scope: !13569)
!13578 = !DILocation(line: 111, column: 1, scope: !13569)
!13579 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1965, file: !1965, line: 121, type: !13580, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13582)
!13580 = !DISubroutineType(types: !13581)
!13581 = !{null, !106, !13, !185}
!13582 = !{!13583, !13584, !13585}
!13583 = !DILocalVariable(name: "dst", arg: 1, scope: !13579, file: !1965, line: 121, type: !106)
!13584 = !DILocalVariable(name: "src", arg: 2, scope: !13579, file: !1965, line: 121, type: !13)
!13585 = !DILocalVariable(name: "n", arg: 3, scope: !13579, file: !1965, line: 121, type: !185)
!13586 = !DILocation(line: 0, scope: !13579)
!13587 = !DILocation(line: 123, column: 9, scope: !13579)
!13588 = !DILocation(line: 124, column: 1, scope: !13579)
!13589 = distinct !DISubprogram(name: "z_bss_zero", scope: !1965, file: !1965, line: 132, type: !3089, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !2166)
!13590 = !DILocation(line: 143, column: 2, scope: !13589)
!13591 = !DILocation(line: 145, column: 2, scope: !13589)
!13592 = !DILocation(line: 168, column: 1, scope: !13589)
!13593 = distinct !DISubprogram(name: "z_init_cpu", scope: !1965, file: !1965, line: 372, type: !9167, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13594)
!13594 = !{!13595}
!13595 = !DILocalVariable(name: "id", arg: 1, scope: !13593, file: !1965, line: 372, type: !107)
!13596 = !DILocation(line: 0, scope: !13593)
!13597 = !DILocation(line: 374, column: 2, scope: !13593)
!13598 = !DILocation(line: 375, column: 34, scope: !13593)
!13599 = !DILocation(line: 375, column: 19, scope: !13593)
!13600 = !DILocation(line: 375, column: 31, scope: !13593)
!13601 = !DILocation(line: 376, column: 24, scope: !13593)
!13602 = !DILocation(line: 376, column: 19, scope: !13593)
!13603 = !DILocation(line: 376, column: 22, scope: !13593)
!13604 = !DILocation(line: 378, column: 26, scope: !13593)
!13605 = !DILocation(line: 378, column: 4, scope: !13593)
!13606 = !DILocation(line: 378, column: 50, scope: !13593)
!13607 = !DILocation(line: 377, column: 19, scope: !13593)
!13608 = !DILocation(line: 377, column: 29, scope: !13593)
!13609 = !DILocation(line: 384, column: 1, scope: !13593)
!13610 = distinct !DISubprogram(name: "init_idle_thread", scope: !1965, file: !1965, line: 343, type: !9167, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13611)
!13611 = !{!13612, !13613, !13614, !13617}
!13612 = !DILocalVariable(name: "i", arg: 1, scope: !13610, file: !1965, line: 343, type: !107)
!13613 = !DILocalVariable(name: "thread", scope: !13610, file: !1965, line: 345, type: !2057)
!13614 = !DILocalVariable(name: "stack", scope: !13610, file: !1965, line: 346, type: !13615)
!13615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13616, size: 32)
!13616 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !2175)
!13617 = !DILocalVariable(name: "tname", scope: !13610, file: !1965, line: 354, type: !193)
!13618 = !DILocation(line: 0, scope: !13610)
!13619 = !DILocation(line: 345, column: 29, scope: !13610)
!13620 = !DILocation(line: 346, column: 28, scope: !13610)
!13621 = !DILocation(line: 362, column: 37, scope: !13610)
!13622 = !DILocation(line: 362, column: 36, scope: !13610)
!13623 = !DILocation(line: 361, column: 2, scope: !13610)
!13624 = !DILocation(line: 365, column: 2, scope: !13610)
!13625 = !DILocation(line: 370, column: 1, scope: !13610)
!13626 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !13627, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13629)
!13627 = !DISubroutineType(types: !13628)
!13628 = !{!193, !13615}
!13629 = !{!13630}
!13630 = !DILocalVariable(name: "sym", arg: 1, scope: !13626, file: !577, line: 331, type: !13615)
!13631 = !DILocation(line: 0, scope: !13626)
!13632 = !DILocation(line: 333, column: 21, scope: !13626)
!13633 = !DILocation(line: 333, column: 2, scope: !13626)
!13634 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13635, file: !13635, line: 155, type: !13636, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13638)
!13635 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13636 = !DISubroutineType(types: !13637)
!13637 = !{null, !2057}
!13638 = !{!13639}
!13639 = !DILocalVariable(name: "thread", arg: 1, scope: !13634, file: !13635, line: 155, type: !2057)
!13640 = !DILocation(line: 0, scope: !13634)
!13641 = !DILocation(line: 157, column: 15, scope: !13634)
!13642 = !DILocation(line: 157, column: 28, scope: !13634)
!13643 = !DILocation(line: 158, column: 1, scope: !13634)
!13644 = distinct !DISubprogram(name: "z_cstart", scope: !1965, file: !1965, line: 501, type: !3089, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13645)
!13645 = !{!13646}
!13646 = !DILocalVariable(name: "dummy_thread", scope: !13644, file: !1965, line: 518, type: !2058)
!13647 = !DILocation(line: 507, column: 2, scope: !13644)
!13648 = !DILocation(line: 43, column: 14, scope: !13649, inlinedAt: !13653)
!13649 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13650, file: !13650, line: 40, type: !3089, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13651)
!13650 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13651 = !{!13652}
!13652 = !DILocalVariable(name: "msp", scope: !13649, file: !13650, line: 42, type: !152)
!13653 = distinct !DILocation(line: 44, column: 2, scope: !13654, inlinedAt: !13656)
!13654 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13655, file: !13655, line: 42, type: !3089, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !2166)
!13655 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13656 = distinct !DILocation(line: 510, column: 2, scope: !13644)
!13657 = !DILocation(line: 43, column: 3, scope: !13649, inlinedAt: !13653)
!13658 = !DILocation(line: 43, column: 60, scope: !13649, inlinedAt: !13653)
!13659 = !DILocation(line: 0, scope: !13649, inlinedAt: !13653)
!13660 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13661, file: !6253, line: 1153, type: !152)
!13661 = distinct !DISubprogram(name: "__set_MSP", scope: !6253, file: !6253, line: 1153, type: !6350, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13662)
!13662 = !{!13660}
!13663 = !DILocation(line: 0, scope: !13661, inlinedAt: !13664)
!13664 = distinct !DILocation(line: 46, column: 2, scope: !13649, inlinedAt: !13653)
!13665 = !DILocation(line: 1155, column: 3, scope: !13661, inlinedAt: !13664)
!13666 = !{i64 3565673}
!13667 = !DILocation(line: 62, column: 11, scope: !13649, inlinedAt: !13653)
!13668 = !DILocation(line: 102, column: 2, scope: !13669, inlinedAt: !13670)
!13669 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7305, file: !7305, line: 97, type: !3089, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !2166)
!13670 = distinct !DILocation(line: 45, column: 2, scope: !13654, inlinedAt: !13656)
!13671 = !DILocation(line: 108, column: 2, scope: !13669, inlinedAt: !13670)
!13672 = !DILocation(line: 112, column: 2, scope: !13669, inlinedAt: !13670)
!13673 = !DILocation(line: 113, column: 2, scope: !13669, inlinedAt: !13670)
!13674 = !DILocation(line: 114, column: 2, scope: !13669, inlinedAt: !13670)
!13675 = !DILocation(line: 116, column: 2, scope: !13669, inlinedAt: !13670)
!13676 = !DILocation(line: 123, column: 13, scope: !13669, inlinedAt: !13670)
!13677 = !DILocation(line: 46, column: 2, scope: !13654, inlinedAt: !13656)
!13678 = !DILocation(line: 47, column: 2, scope: !13654, inlinedAt: !13656)
!13679 = !DILocation(line: 174, column: 12, scope: !13680, inlinedAt: !13681)
!13680 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7305, file: !7305, line: 169, type: !3089, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !2166)
!13681 = distinct !DILocation(line: 48, column: 2, scope: !13654, inlinedAt: !13656)
!13682 = !DILocation(line: 179, column: 12, scope: !13680, inlinedAt: !13681)
!13683 = !DILocation(line: 50, column: 2, scope: !13654, inlinedAt: !13656)
!13684 = !DILocation(line: 57, column: 2, scope: !13654, inlinedAt: !13656)
!13685 = !DILocation(line: 518, column: 2, scope: !13644)
!13686 = !DILocation(line: 518, column: 18, scope: !13644)
!13687 = !DILocation(line: 520, column: 2, scope: !13644)
!13688 = !DILocation(line: 523, column: 2, scope: !13644)
!13689 = !DILocation(line: 526, column: 2, scope: !13644)
!13690 = !DILocation(line: 527, column: 2, scope: !13644)
!13691 = !DILocation(line: 543, column: 24, scope: !13644)
!13692 = !DILocation(line: 543, column: 2, scope: !13644)
!13693 = !DILocation(line: 0, scope: !2197)
!13694 = !DILocation(line: 246, column: 15, scope: !2215)
!13695 = !DILocation(line: 246, column: 36, scope: !2214)
!13696 = !DILocation(line: 246, column: 2, scope: !2215)
!13697 = !DILocation(line: 247, column: 37, scope: !2213)
!13698 = !DILocation(line: 0, scope: !2213)
!13699 = !DILocation(line: 248, column: 19, scope: !2213)
!13700 = !DILocation(line: 248, column: 12, scope: !2213)
!13701 = !DILocation(line: 250, column: 11, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !2213, file: !1965, line: 250, column: 7)
!13703 = !DILocation(line: 250, column: 7, scope: !2213)
!13704 = !DILocation(line: 254, column: 11, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !13706, file: !1965, line: 254, column: 8)
!13706 = distinct !DILexicalBlock(scope: !13702, file: !1965, line: 250, column: 20)
!13707 = !DILocation(line: 254, column: 8, scope: !13706)
!13708 = !DILocation(line: 255, column: 9, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !13705, file: !1965, line: 254, column: 17)
!13710 = !DILocation(line: 258, column: 9, scope: !13709)
!13711 = !DILocation(line: 261, column: 28, scope: !13709)
!13712 = !DILocation(line: 261, column: 10, scope: !13709)
!13713 = !DILocation(line: 261, column: 17, scope: !13709)
!13714 = !DILocation(line: 261, column: 26, scope: !13709)
!13715 = !DILocation(line: 262, column: 4, scope: !13709)
!13716 = !DILocation(line: 263, column: 9, scope: !13706)
!13717 = !DILocation(line: 263, column: 16, scope: !13706)
!13718 = !DILocation(line: 263, column: 28, scope: !13706)
!13719 = !DILocation(line: 264, column: 3, scope: !13706)
!13720 = !DILocation(line: 246, column: 60, scope: !2214)
!13721 = distinct !{!13721, !13696, !13722}
!13722 = !DILocation(line: 265, column: 2, scope: !2215)
!13723 = !DILocation(line: 266, column: 1, scope: !2197)
!13724 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6293, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13725)
!13725 = !{!13726, !13727}
!13726 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13724, file: !463, line: 1814, type: !922)
!13727 = !DILocalVariable(name: "priority", arg: 2, scope: !13724, file: !463, line: 1814, type: !152)
!13728 = !DILocation(line: 0, scope: !13724)
!13729 = !DILocation(line: 1822, column: 48, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13731, file: !463, line: 1821, column: 3)
!13731 = distinct !DILexicalBlock(scope: !13724, file: !463, line: 1816, column: 7)
!13732 = !DILocation(line: 1822, column: 32, scope: !13730)
!13733 = !DILocation(line: 1822, column: 40, scope: !13730)
!13734 = !DILocation(line: 1822, column: 5, scope: !13730)
!13735 = !DILocation(line: 1822, column: 46, scope: !13730)
!13736 = !DILocation(line: 1824, column: 1, scope: !13724)
!13737 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13655, file: !13655, line: 32, type: !3089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!13738 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13739, file: !13739, line: 215, type: !13636, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13740)
!13739 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13740 = !{!13741}
!13741 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13738, file: !13739, line: 215, type: !2057)
!13742 = !DILocation(line: 0, scope: !13738)
!13743 = !DILocation(line: 217, column: 21, scope: !13738)
!13744 = !DILocation(line: 217, column: 34, scope: !13738)
!13745 = !DILocation(line: 221, column: 21, scope: !13738)
!13746 = !DILocation(line: 221, column: 34, scope: !13738)
!13747 = !DILocation(line: 223, column: 27, scope: !13738)
!13748 = !DILocation(line: 223, column: 33, scope: !13738)
!13749 = !DILocation(line: 224, column: 27, scope: !13738)
!13750 = !DILocation(line: 224, column: 32, scope: !13738)
!13751 = !DILocation(line: 232, column: 16, scope: !13738)
!13752 = !DILocation(line: 232, column: 30, scope: !13738)
!13753 = !DILocation(line: 239, column: 24, scope: !13738)
!13754 = !DILocation(line: 240, column: 1, scope: !13738)
!13755 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1965, file: !1965, line: 399, type: !13756, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13758)
!13756 = !DISubroutineType(types: !13757)
!13757 = !{!193}
!13758 = !{!13759}
!13759 = !DILocalVariable(name: "stack_ptr", scope: !13755, file: !1965, line: 401, type: !193)
!13760 = !DILocation(line: 404, column: 2, scope: !13755)
!13761 = !DILocation(line: 416, column: 24, scope: !13755)
!13762 = !DILocation(line: 418, column: 14, scope: !13755)
!13763 = !DILocation(line: 0, scope: !13755)
!13764 = !DILocation(line: 423, column: 2, scope: !13755)
!13765 = !DILocation(line: 424, column: 2, scope: !13755)
!13766 = !DILocation(line: 426, column: 2, scope: !13755)
!13767 = !DILocation(line: 428, column: 2, scope: !13755)
!13768 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1965, file: !1965, line: 432, type: !13769, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13771)
!13769 = !DISubroutineType(types: !13770)
!13770 = !{null, !193}
!13771 = !{!13772}
!13772 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13768, file: !1965, line: 432, type: !193)
!13773 = !DILocation(line: 0, scope: !13768)
!13774 = !DILocation(line: 435, column: 2, scope: !13768)
!13775 = !DILocation(line: 445, column: 2, scope: !13768)
!13776 = distinct !DISubprogram(name: "bg_thread_main", scope: !1965, file: !1965, line: 277, type: !562, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1961, retainedNodes: !13777)
!13777 = !{!13778, !13779, !13780}
!13778 = !DILocalVariable(name: "unused1", arg: 1, scope: !13776, file: !1965, line: 277, type: !106)
!13779 = !DILocalVariable(name: "unused2", arg: 2, scope: !13776, file: !1965, line: 277, type: !106)
!13780 = !DILocalVariable(name: "unused3", arg: 3, scope: !13776, file: !1965, line: 277, type: !106)
!13781 = !DILocation(line: 0, scope: !13776)
!13782 = !DILocation(line: 291, column: 20, scope: !13776)
!13783 = !DILocation(line: 293, column: 2, scope: !13776)
!13784 = !DILocation(line: 297, column: 2, scope: !13776)
!13785 = !DILocation(line: 305, column: 2, scope: !13776)
!13786 = !DILocation(line: 307, column: 2, scope: !13776)
!13787 = !DILocation(line: 330, column: 8, scope: !13776)
!13788 = !DILocation(line: 333, column: 34, scope: !13776)
!13789 = !DILocation(line: 339, column: 1, scope: !13776)
!13790 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2226, file: !2226, line: 45, type: !13791, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13799)
!13791 = !DISubroutineType(types: !13792)
!13792 = !{null, !13793, !106}
!13793 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !406, line: 103, baseType: !13794)
!13794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13795, size: 32)
!13795 = !DISubroutineType(types: !13796)
!13796 = !{null, !13797, !106}
!13797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13798, size: 32)
!13798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2231)
!13799 = !{!13800, !13801}
!13800 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13790, file: !2226, line: 45, type: !13793)
!13801 = !DILocalVariable(name: "user_data", arg: 2, scope: !13790, file: !2226, line: 45, type: !106)
!13802 = !DILocation(line: 0, scope: !13790)
!13803 = !DILocation(line: 71, column: 1, scope: !13790)
!13804 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2226, file: !2226, line: 73, type: !13791, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13805)
!13805 = !{!13806, !13807}
!13806 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13804, file: !2226, line: 73, type: !13793)
!13807 = !DILocalVariable(name: "user_data", arg: 2, scope: !13804, file: !2226, line: 73, type: !106)
!13808 = !DILocation(line: 0, scope: !13804)
!13809 = !DILocation(line: 95, column: 1, scope: !13804)
!13810 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2226, file: !2226, line: 97, type: !7306, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2166)
!13811 = !DILocation(line: 1031, column: 3, scope: !13812, inlinedAt: !13815)
!13812 = distinct !DISubprogram(name: "__get_IPSR", scope: !6253, file: !6253, line: 1027, type: !6340, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13813)
!13813 = !{!13814}
!13814 = !DILocalVariable(name: "result", scope: !13812, file: !6253, line: 1029, type: !152)
!13815 = distinct !DILocation(line: 48, column: 10, scope: !13816, inlinedAt: !13817)
!13816 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7305, file: !7305, line: 46, type: !7306, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2166)
!13817 = distinct !DILocation(line: 99, column: 9, scope: !13810)
!13818 = !{i64 3571324}
!13819 = !DILocation(line: 0, scope: !13812, inlinedAt: !13815)
!13820 = !DILocation(line: 48, column: 9, scope: !13816, inlinedAt: !13817)
!13821 = !DILocation(line: 99, column: 2, scope: !13810)
!13822 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2226, file: !2226, line: 106, type: !3089, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2166)
!13823 = !DILocation(line: 108, column: 2, scope: !13822)
!13824 = !DILocation(line: 108, column: 17, scope: !13822)
!13825 = !DILocation(line: 108, column: 30, scope: !13822)
!13826 = !DILocation(line: 109, column: 1, scope: !13822)
!13827 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2226, file: !2226, line: 116, type: !3089, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2166)
!13828 = !DILocation(line: 118, column: 2, scope: !13827)
!13829 = !DILocation(line: 118, column: 17, scope: !13827)
!13830 = !DILocation(line: 118, column: 30, scope: !13827)
!13831 = !DILocation(line: 119, column: 1, scope: !13827)
!13832 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2226, file: !2226, line: 126, type: !7306, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2166)
!13833 = !DILocation(line: 128, column: 10, scope: !13832)
!13834 = !DILocation(line: 128, column: 25, scope: !13832)
!13835 = !DILocation(line: 128, column: 38, scope: !13832)
!13836 = !DILocation(line: 128, column: 53, scope: !13832)
!13837 = !DILocation(line: 128, column: 2, scope: !13832)
!13838 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2226, file: !2226, line: 187, type: !13839, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13841)
!13839 = !DISubroutineType(types: !13840)
!13840 = !{!107, !2230, !118}
!13841 = !{!13842, !13843}
!13842 = !DILocalVariable(name: "thread", arg: 1, scope: !13838, file: !2226, line: 187, type: !2230)
!13843 = !DILocalVariable(name: "value", arg: 2, scope: !13838, file: !2226, line: 187, type: !118)
!13844 = !DILocation(line: 0, scope: !13838)
!13845 = !DILocation(line: 190, column: 13, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13838, file: !2226, line: 190, column: 6)
!13847 = !DILocation(line: 190, column: 6, scope: !13838)
!13848 = !DILocation(line: 194, column: 10, scope: !13838)
!13849 = !DILocation(line: 194, column: 2, scope: !13838)
!13850 = !DILocation(line: 195, column: 2, scope: !13838)
!13851 = !DILocation(line: 195, column: 47, scope: !13838)
!13852 = !DILocation(line: 199, column: 2, scope: !13838)
!13853 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2226, file: !2226, line: 238, type: !13854, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13856)
!13854 = !DISubroutineType(types: !13855)
!13855 = !{!118, !2230}
!13856 = !{!13857}
!13857 = !DILocalVariable(name: "thread", arg: 1, scope: !13853, file: !2226, line: 238, type: !2230)
!13858 = !DILocation(line: 0, scope: !13853)
!13859 = !DILocation(line: 241, column: 23, scope: !13853)
!13860 = !DILocation(line: 241, column: 2, scope: !13853)
!13861 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2226, file: !2226, line: 248, type: !13862, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13864)
!13862 = !DISubroutineType(types: !13863)
!13863 = !{!107, !2229, !193, !185}
!13864 = !{!13865, !13866, !13867}
!13865 = !DILocalVariable(name: "thread", arg: 1, scope: !13861, file: !2226, line: 248, type: !2229)
!13866 = !DILocalVariable(name: "buf", arg: 2, scope: !13861, file: !2226, line: 248, type: !193)
!13867 = !DILocalVariable(name: "size", arg: 3, scope: !13861, file: !2226, line: 248, type: !185)
!13868 = !DILocation(line: 0, scope: !13861)
!13869 = !DILocation(line: 251, column: 15, scope: !13861)
!13870 = !DILocation(line: 251, column: 2, scope: !13861)
!13871 = !DILocation(line: 252, column: 2, scope: !13861)
!13872 = !DILocation(line: 0, scope: !2225)
!13873 = !DILocation(line: 281, column: 11, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !2225, file: !2226, line: 281, column: 6)
!13875 = !DILocation(line: 281, column: 20, scope: !13874)
!13876 = !DILocation(line: 275, column: 45, scope: !2225)
!13877 = !DILocation(line: 285, column: 10, scope: !2225)
!13878 = !DILocation(line: 0, scope: !2349)
!13879 = !DILocation(line: 293, column: 39, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !2349, file: !2226, line: 293, column: 2)
!13881 = !DILocation(line: 293, column: 2, scope: !2349)
!13882 = !DILocation(line: 273, column: 14, scope: !2225)
!13883 = !DILocation(line: 309, column: 2, scope: !2225)
!13884 = !DILocation(line: 309, column: 11, scope: !2225)
!13885 = !DILocation(line: 311, column: 2, scope: !2225)
!13886 = !DILocation(line: 293, column: 26, scope: !13880)
!13887 = !DILocation(line: 294, column: 9, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13880, file: !2226, line: 293, column: 54)
!13889 = !DILocation(line: 295, column: 21, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13888, file: !2226, line: 295, column: 7)
!13891 = !DILocation(line: 295, column: 28, scope: !13890)
!13892 = !DILocation(line: 295, column: 7, scope: !13888)
!13893 = !DILocation(line: 299, column: 25, scope: !13888)
!13894 = !DILocation(line: 299, column: 41, scope: !13888)
!13895 = !DILocation(line: 300, column: 7, scope: !13888)
!13896 = !DILocation(line: 300, column: 26, scope: !13888)
!13897 = !DILocation(line: 299, column: 10, scope: !13888)
!13898 = !DILocation(line: 299, column: 7, scope: !13888)
!13899 = !DILocation(line: 302, column: 16, scope: !13888)
!13900 = !DILocation(line: 304, column: 20, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13888, file: !2226, line: 304, column: 7)
!13902 = !DILocation(line: 304, column: 7, scope: !13888)
!13903 = !DILocation(line: 305, column: 26, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13901, file: !2226, line: 304, column: 26)
!13905 = !DILocation(line: 305, column: 42, scope: !13904)
!13906 = !DILocation(line: 305, column: 11, scope: !13904)
!13907 = !DILocation(line: 305, column: 8, scope: !13904)
!13908 = !DILocation(line: 306, column: 3, scope: !13904)
!13909 = !DILocation(line: 293, column: 50, scope: !13880)
!13910 = !DILocation(line: 312, column: 1, scope: !2225)
!13911 = distinct !DISubprogram(name: "copy_bytes", scope: !2226, file: !2226, line: 261, type: !13912, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13914)
!13912 = !DISubroutineType(types: !13913)
!13913 = !{!185, !193, !185, !118, !185}
!13914 = !{!13915, !13916, !13917, !13918, !13919}
!13915 = !DILocalVariable(name: "dest", arg: 1, scope: !13911, file: !2226, line: 261, type: !193)
!13916 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13911, file: !2226, line: 261, type: !185)
!13917 = !DILocalVariable(name: "src", arg: 3, scope: !13911, file: !2226, line: 261, type: !118)
!13918 = !DILocalVariable(name: "src_size", arg: 4, scope: !13911, file: !2226, line: 261, type: !185)
!13919 = !DILocalVariable(name: "bytes_to_copy", scope: !13911, file: !2226, line: 263, type: !185)
!13920 = !DILocation(line: 0, scope: !13911)
!13921 = !DILocation(line: 265, column: 18, scope: !13911)
!13922 = !DILocation(line: 266, column: 2, scope: !13911)
!13923 = !DILocation(line: 268, column: 2, scope: !13911)
!13924 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2226, file: !2226, line: 383, type: !13925, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13927)
!13925 = !DISubroutineType(types: !13926)
!13926 = !{null, !2230}
!13927 = !{!13928}
!13928 = !DILocalVariable(name: "thread", arg: 1, scope: !13924, file: !2226, line: 383, type: !2230)
!13929 = !DILocation(line: 0, scope: !13924)
!13930 = !DILocation(line: 387, column: 2, scope: !13924)
!13931 = !DILocation(line: 388, column: 1, scope: !13924)
!13932 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2226, file: !2226, line: 528, type: !13933, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13940)
!13933 = !DISubroutineType(types: !13934)
!13934 = !{!193, !2230, !13935, !185, !559, !106, !106, !106, !107, !152, !118}
!13935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13936, size: 32)
!13936 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !13937)
!13937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !13938)
!13938 = !{!13939}
!13939 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13937, file: !577, line: 48, baseType: !120, size: 8)
!13940 = !{!13941, !13942, !13943, !13944, !13945, !13946, !13947, !13948, !13949, !13950, !13951}
!13941 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13932, file: !2226, line: 528, type: !2230)
!13942 = !DILocalVariable(name: "stack", arg: 2, scope: !13932, file: !2226, line: 529, type: !13935)
!13943 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13932, file: !2226, line: 529, type: !185)
!13944 = !DILocalVariable(name: "entry", arg: 4, scope: !13932, file: !2226, line: 530, type: !559)
!13945 = !DILocalVariable(name: "p1", arg: 5, scope: !13932, file: !2226, line: 531, type: !106)
!13946 = !DILocalVariable(name: "p2", arg: 6, scope: !13932, file: !2226, line: 531, type: !106)
!13947 = !DILocalVariable(name: "p3", arg: 7, scope: !13932, file: !2226, line: 531, type: !106)
!13948 = !DILocalVariable(name: "prio", arg: 8, scope: !13932, file: !2226, line: 532, type: !107)
!13949 = !DILocalVariable(name: "options", arg: 9, scope: !13932, file: !2226, line: 532, type: !152)
!13950 = !DILocalVariable(name: "name", arg: 10, scope: !13932, file: !2226, line: 532, type: !118)
!13951 = !DILocalVariable(name: "stack_ptr", scope: !13932, file: !2226, line: 534, type: !193)
!13952 = !DILocation(line: 0, scope: !13932)
!13953 = !DILocation(line: 536, column: 2, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13955, file: !2226, line: 536, column: 2)
!13955 = distinct !DILexicalBlock(scope: !13956, file: !2226, line: 536, column: 2)
!13956 = distinct !DILexicalBlock(scope: !13932, file: !2226, line: 536, column: 2)
!13957 = !DILocation(line: 536, column: 2, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13954, file: !2226, line: 536, column: 2)
!13959 = !DILocation(line: 550, column: 28, scope: !13932)
!13960 = !DILocation(line: 550, column: 2, scope: !13932)
!13961 = !DILocation(line: 553, column: 34, scope: !13932)
!13962 = !DILocation(line: 553, column: 2, scope: !13932)
!13963 = !DILocation(line: 554, column: 14, scope: !13932)
!13964 = !DILocation(line: 564, column: 2, scope: !13932)
!13965 = !DILocation(line: 567, column: 14, scope: !13932)
!13966 = !DILocation(line: 567, column: 24, scope: !13932)
!13967 = !DILocation(line: 594, column: 11, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13932, file: !2226, line: 594, column: 6)
!13969 = !DILocation(line: 0, scope: !13968)
!13970 = !DILocation(line: 594, column: 6, scope: !13932)
!13971 = !DILocation(line: 595, column: 3, scope: !13972)
!13972 = distinct !DILexicalBlock(scope: !13968, file: !2226, line: 594, column: 20)
!13973 = !DILocation(line: 598, column: 3, scope: !13972)
!13974 = !DILocation(line: 598, column: 52, scope: !13972)
!13975 = !DILocation(line: 599, column: 2, scope: !13972)
!13976 = !DILocation(line: 600, column: 23, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13968, file: !2226, line: 599, column: 9)
!13978 = !DILocation(line: 612, column: 7, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13932, file: !2226, line: 612, column: 6)
!13980 = !DILocation(line: 612, column: 6, scope: !13932)
!13981 = !DILocation(line: 627, column: 40, scope: !13932)
!13982 = !DILocation(line: 637, column: 2, scope: !13932)
!13983 = !DILocation(line: 613, column: 15, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13979, file: !2226, line: 612, column: 17)
!13985 = !DILocation(line: 613, column: 29, scope: !13984)
!13986 = !DILocation(line: 638, column: 1, scope: !13932)
!13987 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13635, file: !13635, line: 78, type: !13988, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13990)
!13988 = !DISubroutineType(types: !13989)
!13989 = !{!145, !106}
!13990 = !{!13991}
!13991 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13987, file: !13635, line: 78, type: !106)
!13992 = !DILocation(line: 0, scope: !13987)
!13993 = !DILocation(line: 80, column: 21, scope: !13987)
!13994 = !DILocation(line: 80, column: 2, scope: !13987)
!13995 = distinct !DISubprogram(name: "z_waitq_init", scope: !13996, file: !13996, line: 47, type: !13997, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13999)
!13996 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13997 = !DISubroutineType(types: !13998)
!13998 = !{null, !2261}
!13999 = !{!14000}
!14000 = !DILocalVariable(name: "w", arg: 1, scope: !13995, file: !13996, line: 47, type: !2261)
!14001 = !DILocation(line: 0, scope: !13995)
!14002 = !DILocation(line: 49, column: 21, scope: !13995)
!14003 = !DILocation(line: 49, column: 2, scope: !13995)
!14004 = !DILocation(line: 50, column: 1, scope: !13995)
!14005 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2226, file: !2226, line: 791, type: !14006, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14009)
!14006 = !DISubroutineType(types: !14007)
!14007 = !{null, !14008, !107, !152, !32}
!14008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 32)
!14009 = !{!14010, !14011, !14012, !14013}
!14010 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14005, file: !2226, line: 791, type: !14008)
!14011 = !DILocalVariable(name: "priority", arg: 2, scope: !14005, file: !2226, line: 791, type: !107)
!14012 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14005, file: !2226, line: 792, type: !152)
!14013 = !DILocalVariable(name: "options", arg: 4, scope: !14005, file: !2226, line: 792, type: !32)
!14014 = !DILocation(line: 0, scope: !14005)
!14015 = !DILocation(line: 795, column: 15, scope: !14005)
!14016 = !DILocation(line: 795, column: 25, scope: !14005)
!14017 = !DILocation(line: 796, column: 30, scope: !14005)
!14018 = !DILocation(line: 796, column: 15, scope: !14005)
!14019 = !DILocation(line: 796, column: 28, scope: !14005)
!14020 = !DILocation(line: 797, column: 30, scope: !14005)
!14021 = !DILocation(line: 797, column: 15, scope: !14005)
!14022 = !DILocation(line: 797, column: 28, scope: !14005)
!14023 = !DILocation(line: 799, column: 22, scope: !14005)
!14024 = !DILocation(line: 799, column: 15, scope: !14005)
!14025 = !DILocation(line: 799, column: 20, scope: !14005)
!14026 = !DILocation(line: 801, column: 15, scope: !14005)
!14027 = !DILocation(line: 801, column: 28, scope: !14005)
!14028 = !DILocation(line: 814, column: 2, scope: !14005)
!14029 = !DILocation(line: 815, column: 1, scope: !14005)
!14030 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2226, file: !2226, line: 449, type: !14031, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14033)
!14031 = !DISubroutineType(types: !14032)
!14032 = !{!193, !2230, !13935, !185}
!14033 = !{!14034, !14035, !14036, !14037, !14038, !14039, !14040, !14041}
!14034 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14030, file: !2226, line: 449, type: !2230)
!14035 = !DILocalVariable(name: "stack", arg: 2, scope: !14030, file: !2226, line: 450, type: !13935)
!14036 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14030, file: !2226, line: 450, type: !185)
!14037 = !DILocalVariable(name: "stack_obj_size", scope: !14030, file: !2226, line: 452, type: !185)
!14038 = !DILocalVariable(name: "stack_buf_size", scope: !14030, file: !2226, line: 452, type: !185)
!14039 = !DILocalVariable(name: "stack_ptr", scope: !14030, file: !2226, line: 453, type: !193)
!14040 = !DILocalVariable(name: "stack_buf_start", scope: !14030, file: !2226, line: 453, type: !193)
!14041 = !DILocalVariable(name: "delta", scope: !14030, file: !2226, line: 454, type: !185)
!14042 = !DILocation(line: 0, scope: !14030)
!14043 = !DILocation(line: 465, column: 20, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !14030, file: !2226, line: 463, column: 2)
!14045 = !DILocation(line: 466, column: 21, scope: !14044)
!14046 = !DILocation(line: 473, column: 28, scope: !14030)
!14047 = !DILocation(line: 514, column: 33, scope: !14030)
!14048 = !DILocation(line: 514, column: 25, scope: !14030)
!14049 = !DILocation(line: 514, column: 31, scope: !14030)
!14050 = !DILocation(line: 515, column: 25, scope: !14030)
!14051 = !DILocation(line: 515, column: 30, scope: !14030)
!14052 = !DILocation(line: 516, column: 25, scope: !14030)
!14053 = !DILocation(line: 516, column: 31, scope: !14030)
!14054 = !DILocation(line: 520, column: 2, scope: !14030)
!14055 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !14056, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14058)
!14056 = !DISubroutineType(types: !14057)
!14057 = !{!193, !13935}
!14058 = !{!14059}
!14059 = !DILocalVariable(name: "sym", arg: 1, scope: !14055, file: !577, line: 331, type: !13935)
!14060 = !DILocation(line: 0, scope: !14055)
!14061 = !DILocation(line: 333, column: 21, scope: !14055)
!14062 = !DILocation(line: 333, column: 2, scope: !14055)
!14063 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14064, file: !14064, line: 40, type: !14065, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14067)
!14064 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14065 = !DISubroutineType(types: !14066)
!14066 = !{null, !14008}
!14067 = !{!14068}
!14068 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14063, file: !14064, line: 40, type: !14008)
!14069 = !DILocation(line: 0, scope: !14063)
!14070 = !DILocation(line: 42, column: 31, scope: !14063)
!14071 = !DILocation(line: 42, column: 2, scope: !14063)
!14072 = !DILocation(line: 43, column: 1, scope: !14063)
!14073 = distinct !DISubprogram(name: "z_init_timeout", scope: !14064, file: !14064, line: 25, type: !2287, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14074)
!14074 = !{!14075}
!14075 = !DILocalVariable(name: "to", arg: 1, scope: !14073, file: !14064, line: 25, type: !2289)
!14076 = !DILocation(line: 0, scope: !14073)
!14077 = !DILocation(line: 27, column: 22, scope: !14073)
!14078 = !DILocation(line: 27, column: 2, scope: !14073)
!14079 = !DILocation(line: 28, column: 1, scope: !14073)
!14080 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14081, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14083)
!14081 = !DISubroutineType(types: !14082)
!14082 = !{null, !2336}
!14083 = !{!14084}
!14084 = !DILocalVariable(name: "node", arg: 1, scope: !14080, file: !319, line: 211, type: !2336)
!14085 = !DILocation(line: 0, scope: !14080)
!14086 = !DILocation(line: 213, column: 8, scope: !14080)
!14087 = !DILocation(line: 213, column: 13, scope: !14080)
!14088 = !DILocation(line: 214, column: 8, scope: !14080)
!14089 = !DILocation(line: 214, column: 13, scope: !14080)
!14090 = !DILocation(line: 215, column: 1, scope: !14080)
!14091 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !14092, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14095)
!14092 = !DISubroutineType(types: !14093)
!14093 = !{null, !14094}
!14094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!14095 = !{!14096}
!14096 = !DILocalVariable(name: "list", arg: 1, scope: !14091, file: !319, line: 197, type: !14094)
!14097 = !DILocation(line: 0, scope: !14091)
!14098 = !DILocation(line: 199, column: 8, scope: !14091)
!14099 = !DILocation(line: 199, column: 13, scope: !14091)
!14100 = !DILocation(line: 200, column: 8, scope: !14091)
!14101 = !DILocation(line: 200, column: 13, scope: !14091)
!14102 = !DILocation(line: 201, column: 1, scope: !14091)
!14103 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2226, file: !2226, line: 641, type: !14104, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14110)
!14104 = !DISubroutineType(types: !14105)
!14105 = !{!2229, !2230, !13935, !185, !559, !106, !106, !106, !107, !152, !14106}
!14106 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !14107)
!14107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !14108)
!14108 = !{!14109}
!14109 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14107, file: !565, line: 66, baseType: !564, size: 64)
!14110 = !{!14111, !14112, !14113, !14114, !14115, !14116, !14117, !14118, !14119, !14120}
!14111 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14103, file: !2226, line: 641, type: !2230)
!14112 = !DILocalVariable(name: "stack", arg: 2, scope: !14103, file: !2226, line: 642, type: !13935)
!14113 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14103, file: !2226, line: 643, type: !185)
!14114 = !DILocalVariable(name: "entry", arg: 4, scope: !14103, file: !2226, line: 643, type: !559)
!14115 = !DILocalVariable(name: "p1", arg: 5, scope: !14103, file: !2226, line: 644, type: !106)
!14116 = !DILocalVariable(name: "p2", arg: 6, scope: !14103, file: !2226, line: 644, type: !106)
!14117 = !DILocalVariable(name: "p3", arg: 7, scope: !14103, file: !2226, line: 644, type: !106)
!14118 = !DILocalVariable(name: "prio", arg: 8, scope: !14103, file: !2226, line: 645, type: !107)
!14119 = !DILocalVariable(name: "options", arg: 9, scope: !14103, file: !2226, line: 645, type: !152)
!14120 = !DILocalVariable(name: "delay", arg: 10, scope: !14103, file: !2226, line: 645, type: !14106)
!14121 = !DILocation(line: 0, scope: !14103)
!14122 = !DILocation(line: 1031, column: 3, scope: !13812, inlinedAt: !14123)
!14123 = distinct !DILocation(line: 48, column: 10, scope: !13816, inlinedAt: !14124)
!14124 = distinct !DILocation(line: 647, column: 2, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14126, file: !2226, line: 647, column: 2)
!14126 = distinct !DILexicalBlock(scope: !14103, file: !2226, line: 647, column: 2)
!14127 = !DILocation(line: 0, scope: !13812, inlinedAt: !14123)
!14128 = !DILocation(line: 48, column: 9, scope: !13816, inlinedAt: !14124)
!14129 = !DILocation(line: 647, column: 2, scope: !14126)
!14130 = !DILocation(line: 647, column: 2, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14125, file: !2226, line: 647, column: 2)
!14132 = !DILocation(line: 649, column: 2, scope: !14103)
!14133 = !DILocation(line: 652, column: 7, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14103, file: !2226, line: 652, column: 6)
!14135 = !DILocation(line: 652, column: 6, scope: !14103)
!14136 = !DILocation(line: 653, column: 3, scope: !14137)
!14137 = distinct !DILexicalBlock(scope: !14134, file: !2226, line: 652, column: 39)
!14138 = !DILocation(line: 654, column: 2, scope: !14137)
!14139 = !DILocation(line: 656, column: 2, scope: !14103)
!14140 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2226, file: !2226, line: 401, type: !14141, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14143)
!14141 = !DISubroutineType(types: !14142)
!14142 = !{null, !2230, !14106}
!14143 = !{!14144, !14145}
!14144 = !DILocalVariable(name: "thread", arg: 1, scope: !14140, file: !2226, line: 401, type: !2230)
!14145 = !DILocalVariable(name: "delay", arg: 2, scope: !14140, file: !2226, line: 401, type: !14106)
!14146 = !DILocation(line: 0, scope: !14140)
!14147 = !DILocation(line: 404, column: 6, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14140, file: !2226, line: 404, column: 6)
!14149 = !DILocation(line: 404, column: 6, scope: !14140)
!14150 = !DILocation(line: 405, column: 3, scope: !14151)
!14151 = distinct !DILexicalBlock(scope: !14148, file: !2226, line: 404, column: 38)
!14152 = !DILocation(line: 406, column: 2, scope: !14151)
!14153 = !DILocation(line: 407, column: 3, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14148, file: !2226, line: 406, column: 9)
!14155 = !DILocation(line: 413, column: 1, scope: !14140)
!14156 = distinct !DISubprogram(name: "k_thread_start", scope: !4417, file: !4417, line: 205, type: !14157, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14159)
!14157 = !DISubroutineType(types: !14158)
!14158 = !{null, !2229}
!14159 = !{!14160}
!14160 = !DILocalVariable(name: "thread", arg: 1, scope: !14156, file: !4417, line: 205, type: !2229)
!14161 = !DILocation(line: 0, scope: !14156)
!14162 = !DILocation(line: 214, column: 2, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14156, file: !4417, line: 214, column: 2)
!14164 = !{i64 2154876134}
!14165 = !DILocation(line: 215, column: 2, scope: !14156)
!14166 = !DILocation(line: 216, column: 1, scope: !14156)
!14167 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14064, file: !14064, line: 47, type: !14141, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14168)
!14168 = !{!14169, !14170}
!14169 = !DILocalVariable(name: "thread", arg: 1, scope: !14167, file: !14064, line: 47, type: !2230)
!14170 = !DILocalVariable(name: "ticks", arg: 2, scope: !14167, file: !14064, line: 47, type: !14106)
!14171 = !DILocation(line: 0, scope: !14167)
!14172 = !DILocation(line: 49, column: 30, scope: !14167)
!14173 = !DILocation(line: 49, column: 2, scope: !14167)
!14174 = !DILocation(line: 50, column: 1, scope: !14167)
!14175 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2226, file: !2226, line: 748, type: !3089, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14176)
!14176 = !{!14177, !14195}
!14177 = !DILocalVariable(name: "thread_data", scope: !14178, file: !2226, line: 750, type: !14179)
!14178 = distinct !DILexicalBlock(scope: !14175, file: !2226, line: 750, column: 2)
!14179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14180, size: 32)
!14180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !406, line: 620, size: 384, elements: !14181)
!14181 = !{!14182, !14183, !14184, !14185, !14186, !14187, !14188, !14189, !14190, !14191, !14192, !14194}
!14182 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14180, file: !406, line: 621, baseType: !2230, size: 32)
!14183 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14180, file: !406, line: 622, baseType: !13935, size: 32, offset: 32)
!14184 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14180, file: !406, line: 623, baseType: !32, size: 32, offset: 64)
!14185 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14180, file: !406, line: 624, baseType: !559, size: 32, offset: 96)
!14186 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14180, file: !406, line: 625, baseType: !106, size: 32, offset: 128)
!14187 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14180, file: !406, line: 626, baseType: !106, size: 32, offset: 160)
!14188 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14180, file: !406, line: 627, baseType: !106, size: 32, offset: 192)
!14189 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14180, file: !406, line: 628, baseType: !107, size: 32, offset: 224)
!14190 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14180, file: !406, line: 629, baseType: !152, size: 32, offset: 256)
!14191 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14180, file: !406, line: 630, baseType: !896, size: 32, offset: 288)
!14192 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14180, file: !406, line: 631, baseType: !14193, size: 32, offset: 320)
!14193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 32)
!14194 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14180, file: !406, line: 632, baseType: !118, size: 32, offset: 352)
!14195 = !DILocalVariable(name: "thread_data", scope: !14196, file: !2226, line: 781, type: !14179)
!14196 = distinct !DILexicalBlock(scope: !14175, file: !2226, line: 781, column: 2)
!14197 = !DILocation(line: 0, scope: !14178)
!14198 = !DILocation(line: 750, column: 2, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14200, file: !2226, line: 750, column: 2)
!14200 = distinct !DILexicalBlock(scope: !14201, file: !2226, line: 750, column: 2)
!14201 = distinct !DILexicalBlock(scope: !14178, file: !2226, line: 750, column: 2)
!14202 = !DILocation(line: 750, column: 2, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14204, file: !2226, line: 750, column: 2)
!14204 = distinct !DILexicalBlock(scope: !14199, file: !2226, line: 750, column: 2)
!14205 = !DILocation(line: 750, column: 2, scope: !14200)
!14206 = !DILocation(line: 750, column: 2, scope: !14178)
!14207 = !DILocation(line: 780, column: 2, scope: !14175)
!14208 = !DILocation(line: 0, scope: !14196)
!14209 = !DILocation(line: 781, column: 2, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14211, file: !2226, line: 781, column: 2)
!14211 = distinct !DILexicalBlock(scope: !14212, file: !2226, line: 781, column: 2)
!14212 = distinct !DILexicalBlock(scope: !14196, file: !2226, line: 781, column: 2)
!14213 = !DILocation(line: 752, column: 17, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14201, file: !2226, line: 750, column: 38)
!14215 = !DILocation(line: 753, column: 17, scope: !14214)
!14216 = !DILocation(line: 754, column: 17, scope: !14214)
!14217 = !DILocation(line: 755, column: 17, scope: !14214)
!14218 = !DILocation(line: 756, column: 17, scope: !14214)
!14219 = !DILocation(line: 757, column: 17, scope: !14214)
!14220 = !DILocation(line: 758, column: 17, scope: !14214)
!14221 = !DILocation(line: 759, column: 17, scope: !14214)
!14222 = !DILocation(line: 760, column: 17, scope: !14214)
!14223 = !DILocation(line: 761, column: 17, scope: !14214)
!14224 = !DILocation(line: 751, column: 3, scope: !14214)
!14225 = !DILocation(line: 763, column: 16, scope: !14214)
!14226 = !DILocation(line: 763, column: 29, scope: !14214)
!14227 = !DILocation(line: 763, column: 39, scope: !14214)
!14228 = !DILocation(line: 750, column: 2, scope: !14201)
!14229 = !DILocation(line: 750, column: 2, scope: !14204)
!14230 = distinct !{!14230, !14206, !14231}
!14231 = !DILocation(line: 764, column: 2, scope: !14178)
!14232 = !DILocation(line: 781, column: 2, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14234, file: !2226, line: 781, column: 2)
!14234 = distinct !DILexicalBlock(scope: !14210, file: !2226, line: 781, column: 2)
!14235 = !DILocation(line: 781, column: 2, scope: !14211)
!14236 = !DILocation(line: 781, column: 2, scope: !14196)
!14237 = !DILocation(line: 787, column: 2, scope: !14175)
!14238 = !DILocation(line: 788, column: 1, scope: !14175)
!14239 = !DILocation(line: 782, column: 20, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14241, file: !2226, line: 782, column: 7)
!14241 = distinct !DILexicalBlock(scope: !14212, file: !2226, line: 781, column: 38)
!14242 = !DILocation(line: 782, column: 31, scope: !14240)
!14243 = !DILocation(line: 782, column: 7, scope: !14241)
!14244 = !DILocation(line: 783, column: 37, scope: !14245)
!14245 = distinct !DILexicalBlock(scope: !14240, file: !2226, line: 782, column: 51)
!14246 = !DILocation(line: 784, column: 10, scope: !14245)
!14247 = !DILocation(line: 783, column: 4, scope: !14245)
!14248 = !DILocation(line: 785, column: 3, scope: !14245)
!14249 = !DILocation(line: 781, column: 2, scope: !14212)
!14250 = !DILocation(line: 781, column: 2, scope: !14234)
!14251 = distinct !{!14251, !14236, !14252}
!14252 = !DILocation(line: 786, column: 2, scope: !14196)
!14253 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8721, file: !8721, line: 403, type: !14254, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14256)
!14254 = !DISubroutineType(types: !14255)
!14255 = !{!566, !566}
!14256 = !{!14257}
!14257 = !DILocalVariable(name: "t", arg: 1, scope: !14253, file: !8721, line: 403, type: !566)
!14258 = !DILocation(line: 0, scope: !14253)
!14259 = !DILocalVariable(name: "t", arg: 1, scope: !14260, file: !8721, line: 102, type: !566)
!14260 = distinct !DISubprogram(name: "z_tmcvt", scope: !8721, file: !8721, line: 102, type: !8728, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14261)
!14261 = !{!14259, !14262, !14263, !14264, !14265, !14266, !14267, !14268, !14269, !14270, !14271}
!14262 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14260, file: !8721, line: 102, type: !152)
!14263 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14260, file: !8721, line: 103, type: !152)
!14264 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14260, file: !8721, line: 103, type: !145)
!14265 = !DILocalVariable(name: "result32", arg: 5, scope: !14260, file: !8721, line: 104, type: !145)
!14266 = !DILocalVariable(name: "round_up", arg: 6, scope: !14260, file: !8721, line: 104, type: !145)
!14267 = !DILocalVariable(name: "round_off", arg: 7, scope: !14260, file: !8721, line: 105, type: !145)
!14268 = !DILocalVariable(name: "mul_ratio", scope: !14260, file: !8721, line: 107, type: !145)
!14269 = !DILocalVariable(name: "div_ratio", scope: !14260, file: !8721, line: 109, type: !145)
!14270 = !DILocalVariable(name: "off", scope: !14260, file: !8721, line: 116, type: !566)
!14271 = !DILocalVariable(name: "rdivisor", scope: !14272, file: !8721, line: 119, type: !152)
!14272 = distinct !DILexicalBlock(scope: !14273, file: !8721, line: 118, column: 18)
!14273 = distinct !DILexicalBlock(scope: !14260, file: !8721, line: 118, column: 6)
!14274 = !DILocation(line: 0, scope: !14260, inlinedAt: !14275)
!14275 = distinct !DILocation(line: 406, column: 9, scope: !14253)
!14276 = !DILocation(line: 145, column: 13, scope: !14277, inlinedAt: !14275)
!14277 = distinct !DILexicalBlock(scope: !14278, file: !8721, line: 144, column: 10)
!14278 = distinct !DILexicalBlock(scope: !14279, file: !8721, line: 142, column: 7)
!14279 = distinct !DILexicalBlock(scope: !14280, file: !8721, line: 141, column: 24)
!14280 = distinct !DILexicalBlock(scope: !14281, file: !8721, line: 141, column: 13)
!14281 = distinct !DILexicalBlock(scope: !14260, file: !8721, line: 134, column: 6)
!14282 = !DILocation(line: 406, column: 2, scope: !14253)
!14283 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2226, file: !2226, line: 817, type: !4295, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14284)
!14284 = !{!14285, !14286, !14287, !14288}
!14285 = !DILocalVariable(name: "entry", arg: 1, scope: !14283, file: !2226, line: 817, type: !559)
!14286 = !DILocalVariable(name: "p1", arg: 2, scope: !14283, file: !2226, line: 818, type: !106)
!14287 = !DILocalVariable(name: "p2", arg: 3, scope: !14283, file: !2226, line: 818, type: !106)
!14288 = !DILocalVariable(name: "p3", arg: 4, scope: !14283, file: !2226, line: 818, type: !106)
!14289 = !DILocation(line: 0, scope: !14283)
!14290 = !DILocation(line: 822, column: 2, scope: !14283)
!14291 = !DILocation(line: 822, column: 17, scope: !14283)
!14292 = !DILocation(line: 822, column: 30, scope: !14283)
!14293 = !DILocation(line: 823, column: 2, scope: !14283)
!14294 = !DILocation(line: 845, column: 2, scope: !14283)
!14295 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2226, file: !2226, line: 853, type: !14296, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14299)
!14296 = !DISubroutineType(types: !14297)
!14297 = !{!145, !14298}
!14298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!14299 = !{!14300, !14301}
!14300 = !DILocalVariable(name: "l", arg: 1, scope: !14295, file: !2226, line: 853, type: !14298)
!14301 = !DILocalVariable(name: "thread_cpu", scope: !14295, file: !2226, line: 855, type: !22)
!14302 = !DILocation(line: 0, scope: !14295)
!14303 = !DILocation(line: 855, column: 28, scope: !14295)
!14304 = !DILocation(line: 857, column: 17, scope: !14305)
!14305 = distinct !DILexicalBlock(scope: !14295, file: !2226, line: 857, column: 6)
!14306 = !DILocation(line: 857, column: 6, scope: !14295)
!14307 = !DILocation(line: 858, column: 19, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14309, file: !2226, line: 858, column: 7)
!14309 = distinct !DILexicalBlock(scope: !14305, file: !2226, line: 857, column: 24)
!14310 = !DILocation(line: 858, column: 42, scope: !14308)
!14311 = !DILocation(line: 858, column: 28, scope: !14308)
!14312 = !DILocation(line: 858, column: 25, scope: !14308)
!14313 = !DILocation(line: 858, column: 7, scope: !14309)
!14314 = !DILocation(line: 862, column: 2, scope: !14295)
!14315 = !DILocation(line: 863, column: 1, scope: !14295)
!14316 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2226, file: !2226, line: 865, type: !14296, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14317)
!14317 = !{!14318}
!14318 = !DILocalVariable(name: "l", arg: 1, scope: !14316, file: !2226, line: 865, type: !14298)
!14319 = !DILocation(line: 0, scope: !14316)
!14320 = !DILocation(line: 867, column: 9, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14316, file: !2226, line: 867, column: 6)
!14322 = !DILocation(line: 867, column: 38, scope: !14321)
!14323 = !DILocation(line: 867, column: 24, scope: !14321)
!14324 = !DILocation(line: 867, column: 54, scope: !14321)
!14325 = !DILocation(line: 867, column: 43, scope: !14321)
!14326 = !DILocation(line: 867, column: 41, scope: !14321)
!14327 = !DILocation(line: 867, column: 20, scope: !14321)
!14328 = !DILocation(line: 867, column: 6, scope: !14316)
!14329 = !DILocation(line: 870, column: 16, scope: !14316)
!14330 = !DILocation(line: 871, column: 2, scope: !14316)
!14331 = !DILocation(line: 872, column: 1, scope: !14316)
!14332 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2226, file: !2226, line: 874, type: !14333, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14335)
!14333 = !DISubroutineType(types: !14334)
!14334 = !{null, !14298}
!14335 = !{!14336}
!14336 = !DILocalVariable(name: "l", arg: 1, scope: !14332, file: !2226, line: 874, type: !14298)
!14337 = !DILocation(line: 0, scope: !14332)
!14338 = !DILocation(line: 876, column: 32, scope: !14332)
!14339 = !DILocation(line: 876, column: 18, scope: !14332)
!14340 = !DILocation(line: 876, column: 48, scope: !14332)
!14341 = !DILocation(line: 876, column: 37, scope: !14332)
!14342 = !DILocation(line: 876, column: 35, scope: !14332)
!14343 = !DILocation(line: 876, column: 5, scope: !14332)
!14344 = !DILocation(line: 876, column: 16, scope: !14332)
!14345 = !DILocation(line: 877, column: 1, scope: !14332)
!14346 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2226, file: !2226, line: 888, type: !14347, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14349)
!14347 = !DISubroutineType(types: !14348)
!14348 = !{!107, !2230}
!14349 = !{!14350}
!14350 = !DILocalVariable(name: "thread", arg: 1, scope: !14346, file: !2226, line: 888, type: !2230)
!14351 = !DILocation(line: 0, scope: !14346)
!14352 = !DILocation(line: 893, column: 2, scope: !14346)
!14353 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2226, file: !2226, line: 897, type: !14354, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14356)
!14354 = !DISubroutineType(types: !14355)
!14355 = !{!107, !2230, !32}
!14356 = !{!14357, !14358}
!14357 = !DILocalVariable(name: "thread", arg: 1, scope: !14353, file: !2226, line: 897, type: !2230)
!14358 = !DILocalVariable(name: "options", arg: 2, scope: !14353, file: !2226, line: 897, type: !32)
!14359 = !DILocation(line: 0, scope: !14353)
!14360 = !DILocation(line: 902, column: 2, scope: !14353)
!14361 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2226, file: !2226, line: 1072, type: !14362, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14367)
!14362 = !DISubroutineType(types: !14363)
!14363 = !{!107, !2229, !14364}
!14364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14365, size: 32)
!14365 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !309, line: 234, baseType: !14366)
!14366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !309, line: 192, elements: !2166)
!14367 = !{!14368, !14369}
!14368 = !DILocalVariable(name: "thread", arg: 1, scope: !14361, file: !2226, line: 1072, type: !2229)
!14369 = !DILocalVariable(name: "stats", arg: 2, scope: !14361, file: !2226, line: 1073, type: !14364)
!14370 = !DILocation(line: 0, scope: !14361)
!14371 = !DILocation(line: 1075, column: 14, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14361, file: !2226, line: 1075, column: 6)
!14373 = !DILocation(line: 1075, column: 23, scope: !14372)
!14374 = !DILocation(line: 1086, column: 1, scope: !14361)
!14375 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2226, file: !2226, line: 1088, type: !14376, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14378)
!14376 = !DISubroutineType(types: !14377)
!14377 = !{!107, !14364}
!14378 = !{!14379}
!14379 = !DILocalVariable(name: "stats", arg: 1, scope: !14375, file: !2226, line: 1088, type: !14364)
!14380 = !DILocation(line: 0, scope: !14375)
!14381 = !DILocation(line: 1094, column: 12, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14375, file: !2226, line: 1094, column: 6)
!14383 = !DILocation(line: 1120, column: 1, scope: !14375)
!14384 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14385, file: !14385, line: 20, type: !3089, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !2166)
!14385 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14386 = !DILocation(line: 30, column: 2, scope: !14384)
!14387 = !DILocation(line: 31, column: 1, scope: !14384)
!14388 = distinct !DISubprogram(name: "idle", scope: !14385, file: !14385, line: 33, type: !562, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !14389)
!14389 = !{!14390, !14391, !14392}
!14390 = !DILocalVariable(name: "unused1", arg: 1, scope: !14388, file: !14385, line: 33, type: !106)
!14391 = !DILocalVariable(name: "unused2", arg: 2, scope: !14388, file: !14385, line: 33, type: !106)
!14392 = !DILocalVariable(name: "unused3", arg: 3, scope: !14388, file: !14385, line: 33, type: !106)
!14393 = !DILocation(line: 0, scope: !14388)
!14394 = !DILocation(line: 39, column: 2, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14396, file: !14385, line: 39, column: 2)
!14396 = distinct !DILexicalBlock(scope: !14388, file: !14385, line: 39, column: 2)
!14397 = !DILocation(line: 39, column: 2, scope: !14396)
!14398 = !DILocation(line: 39, column: 2, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14395, file: !14385, line: 39, column: 2)
!14400 = !DILocation(line: 55, column: 2, scope: !14401, inlinedAt: !14405)
!14401 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5934, file: !5934, line: 42, type: !5935, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !14402)
!14402 = !{!14403, !14404}
!14403 = !DILocalVariable(name: "key", scope: !14401, file: !5934, line: 44, type: !32)
!14404 = !DILocalVariable(name: "tmp", scope: !14401, file: !5934, line: 53, type: !32)
!14405 = distinct !DILocation(line: 62, column: 10, scope: !14406)
!14406 = distinct !DILexicalBlock(scope: !14388, file: !14385, line: 41, column: 15)
!14407 = !{i64 2226897}
!14408 = !DILocation(line: 0, scope: !14401, inlinedAt: !14405)
!14409 = !DILocation(line: 86, column: 3, scope: !14406)
!14410 = !DILocation(line: 41, column: 2, scope: !14388)
!14411 = distinct !{!14411, !14410, !14412}
!14412 = !DILocation(line: 105, column: 2, scope: !14388)
!14413 = distinct !DISubprogram(name: "k_cpu_idle", scope: !406, file: !406, line: 5627, type: !3089, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !2166)
!14414 = !DILocation(line: 5629, column: 2, scope: !14413)
!14415 = !DILocation(line: 5630, column: 1, scope: !14413)
!14416 = !DISubprogram(name: "arch_cpu_idle", scope: !560, file: !560, line: 167, type: !3089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!14417 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2464, file: !2464, line: 93, type: !14418, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14420)
!14418 = !DISubroutineType(types: !14419)
!14419 = !{!896, !2356, !2356}
!14420 = !{!14421, !14422, !14423, !14424}
!14421 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14417, file: !2464, line: 93, type: !2356)
!14422 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14417, file: !2464, line: 94, type: !2356)
!14423 = !DILocalVariable(name: "b1", scope: !14417, file: !2464, line: 97, type: !896)
!14424 = !DILocalVariable(name: "b2", scope: !14417, file: !2464, line: 98, type: !896)
!14425 = !DILocation(line: 0, scope: !14417)
!14426 = !DILocation(line: 97, column: 30, scope: !14417)
!14427 = !DILocation(line: 98, column: 30, scope: !14417)
!14428 = !DILocation(line: 100, column: 9, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14417, file: !2464, line: 100, column: 6)
!14430 = !DILocation(line: 100, column: 6, scope: !14417)
!14431 = !DILocation(line: 125, column: 1, scope: !14417)
!14432 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2464, file: !2464, line: 428, type: !14433, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14435)
!14433 = !DISubroutineType(types: !14434)
!14434 = !{null, !2356}
!14435 = !{!14436}
!14436 = !DILocalVariable(name: "curr", arg: 1, scope: !14432, file: !2464, line: 428, type: !2356)
!14437 = !DILocation(line: 0, scope: !14432)
!14438 = !DILocation(line: 434, column: 6, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14432, file: !2464, line: 434, column: 6)
!14440 = !DILocation(line: 434, column: 23, scope: !14439)
!14441 = !DILocation(line: 434, column: 6, scope: !14432)
!14442 = !DILocation(line: 435, column: 50, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14439, file: !2464, line: 434, column: 29)
!14444 = !DILocation(line: 435, column: 48, scope: !14443)
!14445 = !DILocation(line: 435, column: 29, scope: !14443)
!14446 = !DILocation(line: 436, column: 24, scope: !14443)
!14447 = !DILocation(line: 436, column: 3, scope: !14443)
!14448 = !DILocation(line: 437, column: 2, scope: !14443)
!14449 = !DILocation(line: 438, column: 1, scope: !14432)
!14450 = distinct !DISubprogram(name: "slice_time", scope: !2464, file: !2464, line: 407, type: !14451, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14453)
!14451 = !DISubroutineType(types: !14452)
!14452 = !{!107, !2356}
!14453 = !{!14454, !14455}
!14454 = !DILocalVariable(name: "curr", arg: 1, scope: !14450, file: !2464, line: 407, type: !2356)
!14455 = !DILocalVariable(name: "ret", scope: !14450, file: !2464, line: 409, type: !107)
!14456 = !DILocation(line: 0, scope: !14450)
!14457 = !DILocation(line: 409, column: 12, scope: !14450)
!14458 = !DILocation(line: 416, column: 2, scope: !14450)
!14459 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2464, file: !2464, line: 440, type: !14460, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14462)
!14460 = !DISubroutineType(types: !14461)
!14461 = !{null, !896, !107}
!14462 = !{!14463, !14464, !14465, !14471}
!14463 = !DILocalVariable(name: "slice", arg: 1, scope: !14459, file: !2464, line: 440, type: !896)
!14464 = !DILocalVariable(name: "prio", arg: 2, scope: !14459, file: !2464, line: 440, type: !107)
!14465 = !DILocalVariable(name: "__i", scope: !14466, file: !2464, line: 442, type: !14467)
!14466 = distinct !DILexicalBlock(scope: !14459, file: !2464, line: 442, column: 2)
!14467 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !14468)
!14468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !14469)
!14469 = !{!14470}
!14470 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14468, file: !420, line: 33, baseType: !107, size: 32)
!14471 = !DILocalVariable(name: "__key", scope: !14466, file: !2464, line: 442, type: !14467)
!14472 = !DILocation(line: 0, scope: !14459)
!14473 = !DILocation(line: 0, scope: !14466)
!14474 = !DILocalVariable(name: "l", arg: 1, scope: !14475, file: !420, line: 136, type: !14478)
!14475 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !14476, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14479)
!14476 = !DISubroutineType(types: !14477)
!14477 = !{!14467, !14478}
!14478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 32)
!14479 = !{!14474, !14480}
!14480 = !DILocalVariable(name: "k", scope: !14475, file: !420, line: 139, type: !14467)
!14481 = !DILocation(line: 0, scope: !14475, inlinedAt: !14482)
!14482 = distinct !DILocation(line: 442, column: 2, scope: !14466)
!14483 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !14488)
!14484 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5934, file: !5934, line: 42, type: !5935, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14485)
!14485 = !{!14486, !14487}
!14486 = !DILocalVariable(name: "key", scope: !14484, file: !5934, line: 44, type: !32)
!14487 = !DILocalVariable(name: "tmp", scope: !14484, file: !5934, line: 53, type: !32)
!14488 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !14482)
!14489 = !{i64 2270868}
!14490 = !DILocation(line: 0, scope: !14484, inlinedAt: !14488)
!14491 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !14482)
!14492 = distinct !DILexicalBlock(scope: !14493, file: !420, line: 148, column: 2)
!14493 = distinct !DILexicalBlock(scope: !14475, file: !420, line: 148, column: 2)
!14494 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !14482)
!14495 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !14482)
!14496 = distinct !DILexicalBlock(scope: !14492, file: !420, line: 148, column: 2)
!14497 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !14482)
!14498 = !DILocation(line: 443, column: 29, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14500, file: !2464, line: 442, column: 26)
!14500 = distinct !DILexicalBlock(scope: !14466, file: !2464, line: 442, column: 2)
!14501 = !DILocation(line: 444, column: 17, scope: !14499)
!14502 = !DILocation(line: 445, column: 51, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14499, file: !2464, line: 445, column: 7)
!14504 = !DILocation(line: 445, column: 7, scope: !14499)
!14505 = !DILocation(line: 0, scope: !14499)
!14506 = !DILocation(line: 451, column: 18, scope: !14499)
!14507 = !DILocation(line: 452, column: 3, scope: !14499)
!14508 = !DILocalVariable(name: "key", arg: 2, scope: !14509, file: !420, line: 190, type: !14467)
!14509 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !14510, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14512)
!14510 = !DISubroutineType(types: !14511)
!14511 = !{null, !14478, !14467}
!14512 = !{!14513, !14508}
!14513 = !DILocalVariable(name: "l", arg: 1, scope: !14509, file: !420, line: 189, type: !14478)
!14514 = !DILocation(line: 0, scope: !14509, inlinedAt: !14515)
!14515 = distinct !DILocation(line: 442, column: 2, scope: !14500)
!14516 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !14515)
!14517 = distinct !DILexicalBlock(scope: !14518, file: !420, line: 194, column: 2)
!14518 = distinct !DILexicalBlock(scope: !14509, file: !420, line: 194, column: 2)
!14519 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !14515)
!14520 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !14515)
!14521 = distinct !DILexicalBlock(scope: !14517, file: !420, line: 194, column: 2)
!14522 = !DILocalVariable(name: "key", arg: 1, scope: !14523, file: !5934, line: 84, type: !32)
!14523 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5934, file: !5934, line: 84, type: !5945, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14524)
!14524 = !{!14522}
!14525 = !DILocation(line: 0, scope: !14523, inlinedAt: !14526)
!14526 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !14515)
!14527 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !14526)
!14528 = !{i64 2271685}
!14529 = !DILocation(line: 454, column: 1, scope: !14459)
!14530 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8721, file: !8721, line: 389, type: !7540, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14531)
!14531 = !{!14532}
!14532 = !DILocalVariable(name: "t", arg: 1, scope: !14530, file: !8721, line: 389, type: !152)
!14533 = !DILocation(line: 0, scope: !14530)
!14534 = !DILocalVariable(name: "t", arg: 1, scope: !14535, file: !8721, line: 102, type: !566)
!14535 = distinct !DISubprogram(name: "z_tmcvt", scope: !8721, file: !8721, line: 102, type: !8728, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14536)
!14536 = !{!14534, !14537, !14538, !14539, !14540, !14541, !14542, !14543, !14544, !14545, !14546}
!14537 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14535, file: !8721, line: 102, type: !152)
!14538 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14535, file: !8721, line: 103, type: !152)
!14539 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14535, file: !8721, line: 103, type: !145)
!14540 = !DILocalVariable(name: "result32", arg: 5, scope: !14535, file: !8721, line: 104, type: !145)
!14541 = !DILocalVariable(name: "round_up", arg: 6, scope: !14535, file: !8721, line: 104, type: !145)
!14542 = !DILocalVariable(name: "round_off", arg: 7, scope: !14535, file: !8721, line: 105, type: !145)
!14543 = !DILocalVariable(name: "mul_ratio", scope: !14535, file: !8721, line: 107, type: !145)
!14544 = !DILocalVariable(name: "div_ratio", scope: !14535, file: !8721, line: 109, type: !145)
!14545 = !DILocalVariable(name: "off", scope: !14535, file: !8721, line: 116, type: !566)
!14546 = !DILocalVariable(name: "rdivisor", scope: !14547, file: !8721, line: 119, type: !152)
!14547 = distinct !DILexicalBlock(scope: !14548, file: !8721, line: 118, column: 18)
!14548 = distinct !DILexicalBlock(scope: !14535, file: !8721, line: 118, column: 6)
!14549 = !DILocation(line: 0, scope: !14535, inlinedAt: !14550)
!14550 = distinct !DILocation(line: 392, column: 9, scope: !14530)
!14551 = !DILocation(line: 143, column: 25, scope: !14552, inlinedAt: !14550)
!14552 = distinct !DILexicalBlock(scope: !14553, file: !8721, line: 142, column: 17)
!14553 = distinct !DILexicalBlock(scope: !14554, file: !8721, line: 142, column: 7)
!14554 = distinct !DILexicalBlock(scope: !14555, file: !8721, line: 141, column: 24)
!14555 = distinct !DILexicalBlock(scope: !14556, file: !8721, line: 141, column: 13)
!14556 = distinct !DILexicalBlock(scope: !14535, file: !8721, line: 134, column: 6)
!14557 = !DILocation(line: 392, column: 2, scope: !14530)
!14558 = distinct !DISubprogram(name: "z_time_slice", scope: !2464, file: !2464, line: 502, type: !9167, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14559)
!14559 = !{!14560, !14561}
!14560 = !DILocalVariable(name: "ticks", arg: 1, scope: !14558, file: !2464, line: 502, type: !107)
!14561 = !DILocalVariable(name: "key", scope: !14558, file: !2464, line: 511, type: !14467)
!14562 = !DILocation(line: 0, scope: !14558)
!14563 = !DILocation(line: 0, scope: !14475, inlinedAt: !14564)
!14564 = distinct !DILocation(line: 511, column: 25, scope: !14558)
!14565 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !14566)
!14566 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !14564)
!14567 = !DILocation(line: 0, scope: !14484, inlinedAt: !14566)
!14568 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !14564)
!14569 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !14564)
!14570 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !14564)
!14571 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !14564)
!14572 = !DILocation(line: 514, column: 6, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14558, file: !2464, line: 514, column: 6)
!14574 = !DILocation(line: 514, column: 25, scope: !14573)
!14575 = !DILocation(line: 514, column: 22, scope: !14573)
!14576 = !DILocation(line: 514, column: 6, scope: !14558)
!14577 = !DILocation(line: 515, column: 3, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14573, file: !2464, line: 514, column: 35)
!14579 = !DILocation(line: 0, scope: !14509, inlinedAt: !14580)
!14580 = distinct !DILocation(line: 516, column: 3, scope: !14578)
!14581 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !14580)
!14582 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !14580)
!14583 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !14580)
!14584 = !DILocation(line: 0, scope: !14523, inlinedAt: !14585)
!14585 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !14580)
!14586 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !14585)
!14587 = !DILocation(line: 517, column: 3, scope: !14578)
!14588 = !DILocation(line: 519, column: 18, scope: !14558)
!14589 = !DILocation(line: 522, column: 6, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14558, file: !2464, line: 522, column: 6)
!14591 = !DILocation(line: 522, column: 27, scope: !14590)
!14592 = !DILocation(line: 522, column: 30, scope: !14590)
!14593 = !DILocation(line: 522, column: 6, scope: !14558)
!14594 = !DILocation(line: 523, column: 30, scope: !14595)
!14595 = distinct !DILexicalBlock(scope: !14596, file: !2464, line: 523, column: 7)
!14596 = distinct !DILexicalBlock(scope: !14590, file: !2464, line: 522, column: 51)
!14597 = !DILocation(line: 523, column: 13, scope: !14595)
!14598 = !DILocation(line: 523, column: 7, scope: !14596)
!14599 = !DILocation(line: 530, column: 10, scope: !14600)
!14600 = distinct !DILexicalBlock(scope: !14595, file: !2464, line: 523, column: 43)
!14601 = !DILocation(line: 531, column: 3, scope: !14600)
!14602 = !DILocation(line: 532, column: 30, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14595, file: !2464, line: 531, column: 10)
!14604 = !DILocation(line: 535, column: 29, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14590, file: !2464, line: 534, column: 9)
!14606 = !DILocation(line: 0, scope: !14509, inlinedAt: !14607)
!14607 = distinct !DILocation(line: 537, column: 2, scope: !14558)
!14608 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !14607)
!14609 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !14607)
!14610 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !14607)
!14611 = !DILocation(line: 0, scope: !14523, inlinedAt: !14612)
!14612 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !14607)
!14613 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !14612)
!14614 = !DILocation(line: 538, column: 1, scope: !14558)
!14615 = distinct !DISubprogram(name: "sliceable", scope: !2464, file: !2464, line: 468, type: !14616, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14618)
!14616 = !DISubroutineType(types: !14617)
!14617 = !{!145, !2356}
!14618 = !{!14619, !14620}
!14619 = !DILocalVariable(name: "thread", arg: 1, scope: !14615, file: !2464, line: 468, type: !2356)
!14620 = !DILocalVariable(name: "ret", scope: !14615, file: !2464, line: 470, type: !145)
!14621 = !DILocation(line: 0, scope: !14615)
!14622 = !DILocation(line: 470, column: 13, scope: !14615)
!14623 = !DILocation(line: 471, column: 3, scope: !14615)
!14624 = !DILocation(line: 471, column: 7, scope: !14615)
!14625 = !DILocation(line: 472, column: 3, scope: !14615)
!14626 = !DILocation(line: 472, column: 37, scope: !14615)
!14627 = !DILocation(line: 472, column: 24, scope: !14615)
!14628 = !DILocation(line: 472, column: 43, scope: !14615)
!14629 = !DILocation(line: 472, column: 7, scope: !14615)
!14630 = !DILocation(line: 473, column: 3, scope: !14615)
!14631 = !DILocation(line: 473, column: 7, scope: !14615)
!14632 = !DILocation(line: 473, column: 6, scope: !14615)
!14633 = !DILocation(line: 479, column: 2, scope: !14615)
!14634 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2464, file: !2464, line: 482, type: !14635, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14637)
!14635 = !DISubroutineType(types: !14636)
!14636 = !{!14467, !14467}
!14637 = !{!14638, !14639}
!14638 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14634, file: !2464, line: 482, type: !14467)
!14639 = !DILocalVariable(name: "curr", scope: !14634, file: !2464, line: 484, type: !2356)
!14640 = !DILocation(line: 0, scope: !14634)
!14641 = !DILocation(line: 484, column: 26, scope: !14634)
!14642 = !DILocation(line: 493, column: 7, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14634, file: !2464, line: 493, column: 6)
!14644 = !DILocation(line: 493, column: 6, scope: !14634)
!14645 = !DILocation(line: 494, column: 3, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14643, file: !2464, line: 493, column: 49)
!14647 = !DILocation(line: 495, column: 2, scope: !14646)
!14648 = !DILocation(line: 496, column: 2, scope: !14634)
!14649 = !DILocation(line: 499, column: 1, scope: !14634)
!14650 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13635, file: !13635, line: 106, type: !14616, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14651)
!14651 = !{!14652, !14653}
!14652 = !DILocalVariable(name: "thread", arg: 1, scope: !14650, file: !13635, line: 106, type: !2356)
!14653 = !DILocalVariable(name: "state", scope: !14650, file: !13635, line: 108, type: !195)
!14654 = !DILocation(line: 0, scope: !14650)
!14655 = !DILocation(line: 108, column: 31, scope: !14650)
!14656 = !DILocation(line: 110, column: 16, scope: !14650)
!14657 = !DILocation(line: 111, column: 41, scope: !14650)
!14658 = !DILocation(line: 110, column: 2, scope: !14650)
!14659 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2464, file: !2464, line: 393, type: !14433, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14660)
!14660 = !{!14661}
!14661 = !DILocalVariable(name: "thread", arg: 1, scope: !14659, file: !2464, line: 393, type: !2356)
!14662 = !DILocation(line: 0, scope: !14659)
!14663 = !DILocation(line: 395, column: 6, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14659, file: !2464, line: 395, column: 6)
!14665 = !DILocation(line: 395, column: 6, scope: !14659)
!14666 = !DILocalVariable(name: "thread", arg: 1, scope: !14667, file: !2464, line: 264, type: !2356)
!14667 = distinct !DISubprogram(name: "dequeue_thread", scope: !2464, file: !2464, line: 264, type: !14433, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14668)
!14668 = !{!14666}
!14669 = !DILocation(line: 0, scope: !14667, inlinedAt: !14670)
!14670 = distinct !DILocation(line: 396, column: 3, scope: !14671)
!14671 = distinct !DILexicalBlock(scope: !14664, file: !2464, line: 395, column: 34)
!14672 = !DILocation(line: 266, column: 15, scope: !14667, inlinedAt: !14670)
!14673 = !DILocation(line: 266, column: 28, scope: !14667, inlinedAt: !14670)
!14674 = !DILocalVariable(name: "thread", arg: 1, scope: !14675, file: !2464, line: 232, type: !2356)
!14675 = distinct !DISubprogram(name: "runq_remove", scope: !2464, file: !2464, line: 232, type: !14433, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14676)
!14676 = !{!14674}
!14677 = !DILocation(line: 0, scope: !14675, inlinedAt: !14678)
!14678 = distinct !DILocation(line: 268, column: 3, scope: !14679, inlinedAt: !14670)
!14679 = distinct !DILexicalBlock(scope: !14680, file: !2464, line: 267, column: 35)
!14680 = distinct !DILexicalBlock(scope: !14667, file: !2464, line: 267, column: 6)
!14681 = !DILocation(line: 234, column: 2, scope: !14675, inlinedAt: !14678)
!14682 = !DILocation(line: 397, column: 2, scope: !14671)
!14683 = !DILocalVariable(name: "thread", arg: 1, scope: !14684, file: !2464, line: 250, type: !2356)
!14684 = distinct !DISubprogram(name: "queue_thread", scope: !2464, file: !2464, line: 250, type: !14433, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14685)
!14685 = !{!14683}
!14686 = !DILocation(line: 0, scope: !14684, inlinedAt: !14687)
!14687 = distinct !DILocation(line: 398, column: 2, scope: !14659)
!14688 = !DILocation(line: 252, column: 15, scope: !14684, inlinedAt: !14687)
!14689 = !DILocation(line: 252, column: 28, scope: !14684, inlinedAt: !14687)
!14690 = !DILocalVariable(name: "thread", arg: 1, scope: !14691, file: !2464, line: 227, type: !2356)
!14691 = distinct !DISubprogram(name: "runq_add", scope: !2464, file: !2464, line: 227, type: !14433, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14692)
!14692 = !{!14690}
!14693 = !DILocation(line: 0, scope: !14691, inlinedAt: !14694)
!14694 = distinct !DILocation(line: 254, column: 3, scope: !14695, inlinedAt: !14687)
!14695 = distinct !DILexicalBlock(scope: !14696, file: !2464, line: 253, column: 35)
!14696 = distinct !DILexicalBlock(scope: !14684, file: !2464, line: 253, column: 6)
!14697 = !DILocalVariable(name: "pq", arg: 1, scope: !14698, file: !2464, line: 181, type: !14701)
!14698 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2464, file: !2464, line: 181, type: !14699, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14702)
!14699 = !DISubroutineType(types: !14700)
!14700 = !{null, !14701, !2356}
!14701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 32)
!14702 = !{!14697, !14703, !14704}
!14703 = !DILocalVariable(name: "thread", arg: 2, scope: !14698, file: !2464, line: 182, type: !2356)
!14704 = !DILocalVariable(name: "t", scope: !14698, file: !2464, line: 184, type: !2356)
!14705 = !DILocation(line: 0, scope: !14698, inlinedAt: !14706)
!14706 = distinct !DILocation(line: 229, column: 2, scope: !14691, inlinedAt: !14694)
!14707 = !DILocation(line: 186, column: 2, scope: !14708, inlinedAt: !14706)
!14708 = distinct !DILexicalBlock(scope: !14709, file: !2464, line: 186, column: 2)
!14709 = distinct !DILexicalBlock(scope: !14698, file: !2464, line: 186, column: 2)
!14710 = !DILocation(line: 186, column: 2, scope: !14709, inlinedAt: !14706)
!14711 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !14706)
!14712 = distinct !DILexicalBlock(scope: !14708, file: !2464, line: 186, column: 2)
!14713 = !DILocation(line: 188, column: 2, scope: !14714, inlinedAt: !14706)
!14714 = distinct !DILexicalBlock(scope: !14698, file: !2464, line: 188, column: 2)
!14715 = !DILocation(line: 188, column: 2, scope: !14716, inlinedAt: !14706)
!14716 = distinct !DILexicalBlock(scope: !14714, file: !2464, line: 188, column: 2)
!14717 = !DILocation(line: 0, scope: !14714, inlinedAt: !14706)
!14718 = !DILocation(line: 189, column: 7, scope: !14719, inlinedAt: !14706)
!14719 = distinct !DILexicalBlock(scope: !14720, file: !2464, line: 189, column: 7)
!14720 = distinct !DILexicalBlock(scope: !14716, file: !2464, line: 188, column: 56)
!14721 = !DILocation(line: 189, column: 35, scope: !14719, inlinedAt: !14706)
!14722 = !DILocation(line: 189, column: 7, scope: !14720, inlinedAt: !14706)
!14723 = !DILocation(line: 191, column: 21, scope: !14724, inlinedAt: !14706)
!14724 = distinct !DILexicalBlock(scope: !14719, file: !2464, line: 189, column: 40)
!14725 = !DILocation(line: 190, column: 4, scope: !14724, inlinedAt: !14706)
!14726 = !DILocation(line: 192, column: 4, scope: !14724, inlinedAt: !14706)
!14727 = distinct !{!14727, !14713, !14728}
!14728 = !DILocation(line: 194, column: 2, scope: !14714, inlinedAt: !14706)
!14729 = !DILocation(line: 196, column: 37, scope: !14698, inlinedAt: !14706)
!14730 = !DILocation(line: 196, column: 2, scope: !14698, inlinedAt: !14706)
!14731 = !DILocation(line: 197, column: 1, scope: !14698, inlinedAt: !14706)
!14732 = !DILocation(line: 399, column: 25, scope: !14659)
!14733 = !DILocation(line: 399, column: 22, scope: !14659)
!14734 = !DILocation(line: 399, column: 2, scope: !14659)
!14735 = !DILocation(line: 400, column: 1, scope: !14659)
!14736 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13635, file: !13635, line: 136, type: !14616, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14737)
!14737 = !{!14738}
!14738 = !DILocalVariable(name: "thread", arg: 1, scope: !14736, file: !13635, line: 136, type: !2356)
!14739 = !DILocation(line: 0, scope: !14736)
!14740 = !DILocation(line: 138, column: 9, scope: !14736)
!14741 = !DILocation(line: 138, column: 2, scope: !14736)
!14742 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2464, file: !2464, line: 1137, type: !14699, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14743)
!14743 = !{!14744, !14745}
!14744 = !DILocalVariable(name: "pq", arg: 1, scope: !14742, file: !2464, line: 1137, type: !14701)
!14745 = !DILocalVariable(name: "thread", arg: 2, scope: !14742, file: !2464, line: 1137, type: !2356)
!14746 = !DILocation(line: 0, scope: !14742)
!14747 = !DILocation(line: 1139, column: 2, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14749, file: !2464, line: 1139, column: 2)
!14749 = distinct !DILexicalBlock(scope: !14742, file: !2464, line: 1139, column: 2)
!14750 = !DILocation(line: 1139, column: 2, scope: !14749)
!14751 = !DILocation(line: 1139, column: 2, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14748, file: !2464, line: 1139, column: 2)
!14753 = !DILocation(line: 1141, column: 33, scope: !14742)
!14754 = !DILocation(line: 1141, column: 2, scope: !14742)
!14755 = !DILocation(line: 1142, column: 1, scope: !14742)
!14756 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13635, file: !13635, line: 83, type: !14616, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14757)
!14757 = !{!14758}
!14758 = !DILocalVariable(name: "thread", arg: 1, scope: !14756, file: !13635, line: 83, type: !2356)
!14759 = !DILocation(line: 0, scope: !14756)
!14760 = !DILocation(line: 89, column: 16, scope: !14756)
!14761 = !DILocation(line: 89, column: 2, scope: !14756)
!14762 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !14763, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14765)
!14763 = !DISubroutineType(types: !14764)
!14764 = !{!2460, !14701}
!14765 = !{!14766}
!14766 = !DILocalVariable(name: "list", arg: 1, scope: !14762, file: !319, line: 294, type: !14701)
!14767 = !DILocation(line: 0, scope: !14762)
!14768 = !DILocation(line: 296, column: 9, scope: !14762)
!14769 = !DILocation(line: 296, column: 49, scope: !14762)
!14770 = !DILocation(line: 296, column: 2, scope: !14762)
!14771 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !14772, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14774)
!14772 = !DISubroutineType(types: !14773)
!14773 = !{null, !2460, !2460}
!14774 = !{!14775, !14776, !14777}
!14775 = !DILocalVariable(name: "successor", arg: 1, scope: !14771, file: !319, line: 443, type: !2460)
!14776 = !DILocalVariable(name: "node", arg: 2, scope: !14771, file: !319, line: 443, type: !2460)
!14777 = !DILocalVariable(name: "prev", scope: !14771, file: !319, line: 445, type: !14778)
!14778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2460)
!14779 = !DILocation(line: 0, scope: !14771)
!14780 = !DILocation(line: 445, column: 39, scope: !14771)
!14781 = !DILocation(line: 447, column: 8, scope: !14771)
!14782 = !DILocation(line: 447, column: 13, scope: !14771)
!14783 = !DILocation(line: 448, column: 8, scope: !14771)
!14784 = !DILocation(line: 448, column: 13, scope: !14771)
!14785 = !DILocation(line: 449, column: 8, scope: !14771)
!14786 = !DILocation(line: 449, column: 13, scope: !14771)
!14787 = !DILocation(line: 450, column: 18, scope: !14771)
!14788 = !DILocation(line: 451, column: 1, scope: !14771)
!14789 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !14790, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14792)
!14790 = !DISubroutineType(types: !14791)
!14791 = !{!2460, !14701, !2460}
!14792 = !{!14793, !14794}
!14793 = !DILocalVariable(name: "list", arg: 1, scope: !14789, file: !319, line: 341, type: !14701)
!14794 = !DILocalVariable(name: "node", arg: 2, scope: !14789, file: !319, line: 342, type: !2460)
!14795 = !DILocation(line: 0, scope: !14789)
!14796 = !DILocation(line: 344, column: 15, scope: !14789)
!14797 = !DILocation(line: 344, column: 9, scope: !14789)
!14798 = !DILocation(line: 344, column: 26, scope: !14789)
!14799 = !DILocation(line: 344, column: 2, scope: !14789)
!14800 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !14801, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14803)
!14801 = !DISubroutineType(types: !14802)
!14802 = !{null, !14701, !2460}
!14803 = !{!14804, !14805, !14806}
!14804 = !DILocalVariable(name: "list", arg: 1, scope: !14800, file: !319, line: 404, type: !14701)
!14805 = !DILocalVariable(name: "node", arg: 2, scope: !14800, file: !319, line: 404, type: !2460)
!14806 = !DILocalVariable(name: "tail", scope: !14800, file: !319, line: 406, type: !14778)
!14807 = !DILocation(line: 0, scope: !14800)
!14808 = !DILocation(line: 406, column: 34, scope: !14800)
!14809 = !DILocation(line: 408, column: 8, scope: !14800)
!14810 = !DILocation(line: 408, column: 13, scope: !14800)
!14811 = !DILocation(line: 409, column: 8, scope: !14800)
!14812 = !DILocation(line: 409, column: 13, scope: !14800)
!14813 = !DILocation(line: 411, column: 8, scope: !14800)
!14814 = !DILocation(line: 411, column: 13, scope: !14800)
!14815 = !DILocation(line: 412, column: 13, scope: !14800)
!14816 = !DILocation(line: 413, column: 1, scope: !14800)
!14817 = distinct !DISubprogram(name: "update_cache", scope: !2464, file: !2464, line: 559, type: !9167, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14818)
!14818 = !{!14819, !14820}
!14819 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14817, file: !2464, line: 559, type: !107)
!14820 = !DILocalVariable(name: "thread", scope: !14817, file: !2464, line: 562, type: !2356)
!14821 = !DILocation(line: 0, scope: !14817)
!14822 = !DILocation(line: 239, column: 9, scope: !14823, inlinedAt: !14826)
!14823 = distinct !DISubprogram(name: "runq_best", scope: !2464, file: !2464, line: 237, type: !14824, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!14824 = !DISubroutineType(types: !14825)
!14825 = !{!2356}
!14826 = distinct !DILocation(line: 314, column: 28, scope: !14827, inlinedAt: !14830)
!14827 = distinct !DISubprogram(name: "next_up", scope: !2464, file: !2464, line: 312, type: !14824, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14828)
!14828 = !{!14829}
!14829 = !DILocalVariable(name: "thread", scope: !14827, file: !2464, line: 314, type: !2356)
!14830 = distinct !DILocation(line: 562, column: 28, scope: !14817)
!14831 = !DILocation(line: 0, scope: !14827, inlinedAt: !14830)
!14832 = !DILocation(line: 340, column: 17, scope: !14827, inlinedAt: !14830)
!14833 = !DILocation(line: 340, column: 9, scope: !14827, inlinedAt: !14830)
!14834 = !DILocalVariable(name: "thread", arg: 1, scope: !14835, file: !2464, line: 127, type: !2356)
!14835 = distinct !DISubprogram(name: "should_preempt", scope: !2464, file: !2464, line: 127, type: !14836, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14838)
!14836 = !DISubroutineType(types: !14837)
!14837 = !{!145, !2356, !107}
!14838 = !{!14834, !14839}
!14839 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14835, file: !2464, line: 128, type: !107)
!14840 = !DILocation(line: 0, scope: !14835, inlinedAt: !14841)
!14841 = distinct !DILocation(line: 564, column: 6, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14817, file: !2464, line: 564, column: 6)
!14843 = !DILocation(line: 133, column: 17, scope: !14844, inlinedAt: !14841)
!14844 = distinct !DILexicalBlock(scope: !14835, file: !2464, line: 133, column: 6)
!14845 = !DILocation(line: 0, scope: !14842)
!14846 = !DILocation(line: 133, column: 6, scope: !14835, inlinedAt: !14841)
!14847 = !DILocation(line: 137, column: 2, scope: !14848, inlinedAt: !14841)
!14848 = distinct !DILexicalBlock(scope: !14849, file: !2464, line: 137, column: 2)
!14849 = distinct !DILexicalBlock(scope: !14835, file: !2464, line: 137, column: 2)
!14850 = !DILocation(line: 137, column: 2, scope: !14849, inlinedAt: !14841)
!14851 = !DILocation(line: 137, column: 2, scope: !14852, inlinedAt: !14841)
!14852 = distinct !DILexicalBlock(scope: !14848, file: !2464, line: 137, column: 2)
!14853 = !DILocation(line: 140, column: 6, scope: !14854, inlinedAt: !14841)
!14854 = distinct !DILexicalBlock(scope: !14835, file: !2464, line: 140, column: 6)
!14855 = !DILocation(line: 140, column: 6, scope: !14835, inlinedAt: !14841)
!14856 = !DILocation(line: 150, column: 9, scope: !14857, inlinedAt: !14841)
!14857 = distinct !DILexicalBlock(scope: !14835, file: !2464, line: 149, column: 6)
!14858 = !DILocation(line: 149, column: 6, scope: !14835, inlinedAt: !14841)
!14859 = !DILocation(line: 157, column: 6, scope: !14860, inlinedAt: !14841)
!14860 = distinct !DILexicalBlock(scope: !14835, file: !2464, line: 157, column: 6)
!14861 = !DILocation(line: 564, column: 6, scope: !14817)
!14862 = !DILocation(line: 566, column: 14, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14864, file: !2464, line: 566, column: 7)
!14864 = distinct !DILexicalBlock(scope: !14842, file: !2464, line: 564, column: 42)
!14865 = !DILocation(line: 566, column: 7, scope: !14864)
!14866 = !DILocation(line: 567, column: 4, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14863, file: !2464, line: 566, column: 27)
!14868 = !DILocation(line: 568, column: 3, scope: !14867)
!14869 = !DILocation(line: 585, column: 1, scope: !14817)
!14870 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2464, file: !2464, line: 1144, type: !14871, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14873)
!14871 = !DISubroutineType(types: !14872)
!14872 = !{!2356, !14701}
!14873 = !{!14874, !14875, !14876}
!14874 = !DILocalVariable(name: "pq", arg: 1, scope: !14870, file: !2464, line: 1144, type: !14701)
!14875 = !DILocalVariable(name: "thread", scope: !14870, file: !2464, line: 1146, type: !2356)
!14876 = !DILocalVariable(name: "n", scope: !14870, file: !2464, line: 1147, type: !2460)
!14877 = !DILocation(line: 0, scope: !14870)
!14878 = !DILocation(line: 1147, column: 19, scope: !14870)
!14879 = !DILocation(line: 1152, column: 2, scope: !14870)
!14880 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13635, file: !13635, line: 115, type: !14616, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14881)
!14881 = !{!14882}
!14882 = !DILocalVariable(name: "thread", arg: 1, scope: !14880, file: !13635, line: 115, type: !2356)
!14883 = !DILocation(line: 0, scope: !14880)
!14884 = !DILocation(line: 117, column: 46, scope: !14880)
!14885 = !DILocation(line: 117, column: 10, scope: !14880)
!14886 = !DILocation(line: 117, column: 9, scope: !14880)
!14887 = !DILocation(line: 117, column: 2, scope: !14880)
!14888 = distinct !DISubprogram(name: "is_preempt", scope: !2464, file: !2464, line: 62, type: !14451, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14889)
!14889 = !{!14890}
!14890 = !DILocalVariable(name: "thread", arg: 1, scope: !14888, file: !2464, line: 62, type: !2356)
!14891 = !DILocation(line: 0, scope: !14888)
!14892 = !DILocation(line: 65, column: 22, scope: !14888)
!14893 = !DILocation(line: 65, column: 30, scope: !14888)
!14894 = !DILocation(line: 65, column: 2, scope: !14888)
!14895 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14064, file: !14064, line: 35, type: !14896, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14900)
!14896 = !DISubroutineType(types: !14897)
!14897 = !{!145, !14898}
!14898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14899, size: 32)
!14899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2407)
!14900 = !{!14901}
!14901 = !DILocalVariable(name: "to", arg: 1, scope: !14895, file: !14064, line: 35, type: !14898)
!14902 = !DILocation(line: 0, scope: !14895)
!14903 = !DILocation(line: 37, column: 35, scope: !14895)
!14904 = !DILocation(line: 37, column: 10, scope: !14895)
!14905 = !DILocation(line: 37, column: 9, scope: !14895)
!14906 = !DILocation(line: 37, column: 2, scope: !14895)
!14907 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !14908, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14912)
!14908 = !DISubroutineType(types: !14909)
!14909 = !{!145, !14910}
!14910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14911, size: 32)
!14911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2366)
!14912 = !{!14913}
!14913 = !DILocalVariable(name: "node", arg: 1, scope: !14907, file: !319, line: 225, type: !14910)
!14914 = !DILocation(line: 0, scope: !14907)
!14915 = !DILocation(line: 227, column: 15, scope: !14907)
!14916 = !DILocation(line: 227, column: 20, scope: !14907)
!14917 = !DILocation(line: 227, column: 2, scope: !14907)
!14918 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !14790, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14919)
!14919 = !{!14920, !14921}
!14920 = !DILocalVariable(name: "list", arg: 1, scope: !14918, file: !319, line: 325, type: !14701)
!14921 = !DILocalVariable(name: "node", arg: 2, scope: !14918, file: !319, line: 326, type: !2460)
!14922 = !DILocation(line: 0, scope: !14918)
!14923 = !DILocation(line: 328, column: 24, scope: !14918)
!14924 = !DILocation(line: 328, column: 15, scope: !14918)
!14925 = !DILocation(line: 328, column: 9, scope: !14918)
!14926 = !DILocation(line: 328, column: 45, scope: !14918)
!14927 = !DILocation(line: 328, column: 2, scope: !14918)
!14928 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !14929, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14931)
!14929 = !DISubroutineType(types: !14930)
!14930 = !{!145, !14701}
!14931 = !{!14932}
!14932 = !DILocalVariable(name: "list", arg: 1, scope: !14928, file: !319, line: 266, type: !14701)
!14933 = !DILocation(line: 0, scope: !14928)
!14934 = !DILocation(line: 268, column: 15, scope: !14928)
!14935 = !DILocation(line: 268, column: 20, scope: !14928)
!14936 = !DILocation(line: 268, column: 2, scope: !14928)
!14937 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !14938, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14940)
!14938 = !DISubroutineType(types: !14939)
!14939 = !{null, !2460}
!14940 = !{!14941, !14942, !14943}
!14941 = !DILocalVariable(name: "node", arg: 1, scope: !14937, file: !319, line: 496, type: !2460)
!14942 = !DILocalVariable(name: "prev", scope: !14937, file: !319, line: 498, type: !14778)
!14943 = !DILocalVariable(name: "next", scope: !14937, file: !319, line: 499, type: !14778)
!14944 = !DILocation(line: 0, scope: !14937)
!14945 = !DILocation(line: 498, column: 34, scope: !14937)
!14946 = !DILocation(line: 499, column: 34, scope: !14937)
!14947 = !DILocation(line: 501, column: 8, scope: !14937)
!14948 = !DILocation(line: 501, column: 13, scope: !14937)
!14949 = !DILocation(line: 502, column: 8, scope: !14937)
!14950 = !DILocation(line: 502, column: 13, scope: !14937)
!14951 = !DILocation(line: 503, column: 2, scope: !14937)
!14952 = !DILocation(line: 504, column: 1, scope: !14937)
!14953 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14938, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14954)
!14954 = !{!14955}
!14955 = !DILocalVariable(name: "node", arg: 1, scope: !14953, file: !319, line: 211, type: !2460)
!14956 = !DILocation(line: 0, scope: !14953)
!14957 = !DILocation(line: 213, column: 8, scope: !14953)
!14958 = !DILocation(line: 213, column: 13, scope: !14953)
!14959 = !DILocation(line: 214, column: 8, scope: !14953)
!14960 = !DILocation(line: 214, column: 13, scope: !14953)
!14961 = !DILocation(line: 215, column: 1, scope: !14953)
!14962 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13635, file: !13635, line: 131, type: !14963, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14965)
!14963 = !DISubroutineType(types: !14964)
!14964 = !{!145, !2356, !152}
!14965 = !{!14966, !14967}
!14966 = !DILocalVariable(name: "thread", arg: 1, scope: !14962, file: !13635, line: 131, type: !2356)
!14967 = !DILocalVariable(name: "state", arg: 2, scope: !14962, file: !13635, line: 131, type: !152)
!14968 = !DILocation(line: 0, scope: !14962)
!14969 = !DILocation(line: 133, column: 23, scope: !14962)
!14970 = !DILocation(line: 133, column: 10, scope: !14962)
!14971 = !DILocation(line: 133, column: 36, scope: !14962)
!14972 = !DILocation(line: 133, column: 45, scope: !14962)
!14973 = !DILocation(line: 133, column: 2, scope: !14962)
!14974 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13635, file: !13635, line: 211, type: !14975, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14977)
!14975 = !DISubroutineType(types: !14976)
!14976 = !{!145, !107, !107}
!14977 = !{!14978, !14979}
!14978 = !DILocalVariable(name: "prio", arg: 1, scope: !14974, file: !13635, line: 211, type: !107)
!14979 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14974, file: !13635, line: 211, type: !107)
!14980 = !DILocation(line: 0, scope: !14974)
!14981 = !DILocation(line: 213, column: 9, scope: !14974)
!14982 = !DILocation(line: 213, column: 2, scope: !14974)
!14983 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13635, file: !13635, line: 206, type: !14975, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14984)
!14984 = !{!14985, !14986}
!14985 = !DILocalVariable(name: "prio1", arg: 1, scope: !14983, file: !13635, line: 206, type: !107)
!14986 = !DILocalVariable(name: "prio2", arg: 2, scope: !14983, file: !13635, line: 206, type: !107)
!14987 = !DILocation(line: 0, scope: !14983)
!14988 = !DILocation(line: 208, column: 15, scope: !14983)
!14989 = !DILocation(line: 208, column: 2, scope: !14983)
!14990 = distinct !DISubprogram(name: "z_ready_thread", scope: !2464, file: !2464, line: 635, type: !14433, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14991)
!14991 = !{!14992, !14993, !14995}
!14992 = !DILocalVariable(name: "thread", arg: 1, scope: !14990, file: !2464, line: 635, type: !2356)
!14993 = !DILocalVariable(name: "__i", scope: !14994, file: !2464, line: 637, type: !14467)
!14994 = distinct !DILexicalBlock(scope: !14990, file: !2464, line: 637, column: 2)
!14995 = !DILocalVariable(name: "__key", scope: !14994, file: !2464, line: 637, type: !14467)
!14996 = !DILocation(line: 0, scope: !14990)
!14997 = !DILocation(line: 0, scope: !14994)
!14998 = !DILocation(line: 0, scope: !14475, inlinedAt: !14999)
!14999 = distinct !DILocation(line: 637, column: 2, scope: !14994)
!15000 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15001)
!15001 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !14999)
!15002 = !DILocation(line: 0, scope: !14484, inlinedAt: !15001)
!15003 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !14999)
!15004 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !14999)
!15005 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !14999)
!15006 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !14999)
!15007 = !DILocation(line: 639, column: 4, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !15009, file: !2464, line: 638, column: 41)
!15009 = distinct !DILexicalBlock(scope: !15010, file: !2464, line: 638, column: 7)
!15010 = distinct !DILexicalBlock(scope: !15011, file: !2464, line: 637, column: 26)
!15011 = distinct !DILexicalBlock(scope: !14994, file: !2464, line: 637, column: 2)
!15012 = !DILocation(line: 0, scope: !14509, inlinedAt: !15013)
!15013 = distinct !DILocation(line: 637, column: 2, scope: !15011)
!15014 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15013)
!15015 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15013)
!15016 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15013)
!15017 = !DILocation(line: 0, scope: !14523, inlinedAt: !15018)
!15018 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15013)
!15019 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15018)
!15020 = !DILocation(line: 642, column: 1, scope: !14990)
!15021 = distinct !DISubprogram(name: "ready_thread", scope: !2464, file: !2464, line: 617, type: !14433, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15022)
!15022 = !{!15023}
!15023 = !DILocalVariable(name: "thread", arg: 1, scope: !15021, file: !2464, line: 617, type: !2356)
!15024 = !DILocation(line: 0, scope: !15021)
!15025 = !DILocation(line: 626, column: 7, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !15021, file: !2464, line: 626, column: 6)
!15027 = !DILocation(line: 626, column: 34, scope: !15026)
!15028 = !DILocation(line: 626, column: 37, scope: !15026)
!15029 = !DILocation(line: 626, column: 6, scope: !15021)
!15030 = !DILocation(line: 0, scope: !14684, inlinedAt: !15031)
!15031 = distinct !DILocation(line: 629, column: 3, scope: !15032)
!15032 = distinct !DILexicalBlock(scope: !15026, file: !2464, line: 626, column: 64)
!15033 = !DILocation(line: 252, column: 15, scope: !14684, inlinedAt: !15031)
!15034 = !DILocation(line: 252, column: 28, scope: !14684, inlinedAt: !15031)
!15035 = !DILocation(line: 0, scope: !14691, inlinedAt: !15036)
!15036 = distinct !DILocation(line: 254, column: 3, scope: !14695, inlinedAt: !15031)
!15037 = !DILocation(line: 0, scope: !14698, inlinedAt: !15038)
!15038 = distinct !DILocation(line: 229, column: 2, scope: !14691, inlinedAt: !15036)
!15039 = !DILocation(line: 186, column: 2, scope: !14708, inlinedAt: !15038)
!15040 = !DILocation(line: 186, column: 2, scope: !14709, inlinedAt: !15038)
!15041 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !15038)
!15042 = !DILocation(line: 188, column: 2, scope: !14714, inlinedAt: !15038)
!15043 = !DILocation(line: 188, column: 2, scope: !14716, inlinedAt: !15038)
!15044 = !DILocation(line: 0, scope: !14714, inlinedAt: !15038)
!15045 = !DILocation(line: 189, column: 7, scope: !14719, inlinedAt: !15038)
!15046 = !DILocation(line: 189, column: 35, scope: !14719, inlinedAt: !15038)
!15047 = !DILocation(line: 189, column: 7, scope: !14720, inlinedAt: !15038)
!15048 = !DILocation(line: 191, column: 21, scope: !14724, inlinedAt: !15038)
!15049 = !DILocation(line: 190, column: 4, scope: !14724, inlinedAt: !15038)
!15050 = !DILocation(line: 192, column: 4, scope: !14724, inlinedAt: !15038)
!15051 = distinct !{!15051, !15042, !15052}
!15052 = !DILocation(line: 194, column: 2, scope: !14714, inlinedAt: !15038)
!15053 = !DILocation(line: 196, column: 37, scope: !14698, inlinedAt: !15038)
!15054 = !DILocation(line: 196, column: 2, scope: !14698, inlinedAt: !15038)
!15055 = !DILocation(line: 197, column: 1, scope: !14698, inlinedAt: !15038)
!15056 = !DILocation(line: 630, column: 3, scope: !15032)
!15057 = !DILocation(line: 632, column: 2, scope: !15032)
!15058 = !DILocation(line: 633, column: 1, scope: !15021)
!15059 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13635, file: !13635, line: 120, type: !14616, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15060)
!15060 = !{!15061}
!15061 = !DILocalVariable(name: "thread", arg: 1, scope: !15059, file: !13635, line: 120, type: !2356)
!15062 = !DILocation(line: 0, scope: !15059)
!15063 = !DILocation(line: 122, column: 12, scope: !15059)
!15064 = !DILocation(line: 122, column: 62, scope: !15059)
!15065 = !DILocation(line: 123, column: 4, scope: !15059)
!15066 = !DILocation(line: 122, column: 2, scope: !15059)
!15067 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2464, file: !2464, line: 644, type: !14433, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15068)
!15068 = !{!15069, !15070, !15072}
!15069 = !DILocalVariable(name: "thread", arg: 1, scope: !15067, file: !2464, line: 644, type: !2356)
!15070 = !DILocalVariable(name: "__i", scope: !15071, file: !2464, line: 646, type: !14467)
!15071 = distinct !DILexicalBlock(scope: !15067, file: !2464, line: 646, column: 2)
!15072 = !DILocalVariable(name: "__key", scope: !15071, file: !2464, line: 646, type: !14467)
!15073 = !DILocation(line: 0, scope: !15067)
!15074 = !DILocation(line: 0, scope: !15071)
!15075 = !DILocation(line: 0, scope: !14475, inlinedAt: !15076)
!15076 = distinct !DILocation(line: 646, column: 2, scope: !15071)
!15077 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15078)
!15078 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15076)
!15079 = !DILocation(line: 0, scope: !14484, inlinedAt: !15078)
!15080 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15076)
!15081 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15076)
!15082 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15076)
!15083 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15076)
!15084 = !DILocation(line: 647, column: 3, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !15086, file: !2464, line: 646, column: 26)
!15086 = distinct !DILexicalBlock(scope: !15071, file: !2464, line: 646, column: 2)
!15087 = !DILocation(line: 0, scope: !14509, inlinedAt: !15088)
!15088 = distinct !DILocation(line: 646, column: 2, scope: !15086)
!15089 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15088)
!15090 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15088)
!15091 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15088)
!15092 = !DILocation(line: 0, scope: !14523, inlinedAt: !15093)
!15093 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15088)
!15094 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15093)
!15095 = !DILocation(line: 649, column: 1, scope: !15067)
!15096 = distinct !DISubprogram(name: "z_sched_start", scope: !2464, file: !2464, line: 651, type: !14433, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15097)
!15097 = !{!15098, !15099}
!15098 = !DILocalVariable(name: "thread", arg: 1, scope: !15096, file: !2464, line: 651, type: !2356)
!15099 = !DILocalVariable(name: "key", scope: !15096, file: !2464, line: 653, type: !14467)
!15100 = !DILocation(line: 0, scope: !15096)
!15101 = !DILocation(line: 0, scope: !14475, inlinedAt: !15102)
!15102 = distinct !DILocation(line: 653, column: 25, scope: !15096)
!15103 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15104)
!15104 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15102)
!15105 = !DILocation(line: 0, scope: !14484, inlinedAt: !15104)
!15106 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15102)
!15107 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15102)
!15108 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15102)
!15109 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15102)
!15110 = !DILocation(line: 655, column: 6, scope: !15111)
!15111 = distinct !DILexicalBlock(scope: !15096, file: !2464, line: 655, column: 6)
!15112 = !DILocation(line: 655, column: 6, scope: !15096)
!15113 = !DILocation(line: 0, scope: !14509, inlinedAt: !15114)
!15114 = distinct !DILocation(line: 656, column: 3, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15111, file: !2464, line: 655, column: 36)
!15116 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15114)
!15117 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15114)
!15118 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15114)
!15119 = !DILocation(line: 0, scope: !14523, inlinedAt: !15120)
!15120 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15114)
!15121 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15120)
!15122 = !DILocation(line: 657, column: 3, scope: !15115)
!15123 = !DILocation(line: 660, column: 2, scope: !15096)
!15124 = !DILocation(line: 661, column: 2, scope: !15096)
!15125 = !DILocation(line: 662, column: 2, scope: !15096)
!15126 = !DILocation(line: 663, column: 1, scope: !15096)
!15127 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13635, file: !13635, line: 126, type: !14616, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15128)
!15128 = !{!15129}
!15129 = !DILocalVariable(name: "thread", arg: 1, scope: !15127, file: !13635, line: 126, type: !2356)
!15130 = !DILocation(line: 0, scope: !15127)
!15131 = !DILocation(line: 128, column: 23, scope: !15127)
!15132 = !DILocation(line: 128, column: 36, scope: !15127)
!15133 = !DILocation(line: 128, column: 56, scope: !15127)
!15134 = !DILocation(line: 128, column: 2, scope: !15127)
!15135 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13635, file: !13635, line: 155, type: !14433, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15136)
!15136 = !{!15137}
!15137 = !DILocalVariable(name: "thread", arg: 1, scope: !15135, file: !13635, line: 155, type: !2356)
!15138 = !DILocation(line: 0, scope: !15135)
!15139 = !DILocation(line: 157, column: 15, scope: !15135)
!15140 = !DILocation(line: 157, column: 28, scope: !15135)
!15141 = !DILocation(line: 158, column: 1, scope: !15135)
!15142 = distinct !DISubprogram(name: "z_reschedule", scope: !2464, file: !2464, line: 967, type: !14510, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15143)
!15143 = !{!15144, !15145}
!15144 = !DILocalVariable(name: "lock", arg: 1, scope: !15142, file: !2464, line: 967, type: !14478)
!15145 = !DILocalVariable(name: "key", arg: 2, scope: !15142, file: !2464, line: 967, type: !14467)
!15146 = !DILocation(line: 0, scope: !15142)
!15147 = !DILocation(line: 969, column: 6, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15142, file: !2464, line: 969, column: 6)
!15149 = !DILocation(line: 969, column: 23, scope: !15148)
!15150 = !DILocation(line: 969, column: 26, scope: !15148)
!15151 = !DILocation(line: 969, column: 6, scope: !15142)
!15152 = !DILocalVariable(name: "key", arg: 2, scope: !15153, file: !13739, line: 193, type: !14467)
!15153 = distinct !DISubprogram(name: "z_swap", scope: !13739, file: !13739, line: 193, type: !15154, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15156)
!15154 = !DISubroutineType(types: !15155)
!15155 = !{!107, !14478, !14467}
!15156 = !{!15157, !15152}
!15157 = !DILocalVariable(name: "lock", arg: 1, scope: !15153, file: !13739, line: 193, type: !14478)
!15158 = !DILocation(line: 0, scope: !15153, inlinedAt: !15159)
!15159 = distinct !DILocation(line: 970, column: 3, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15148, file: !2464, line: 969, column: 39)
!15161 = !DILocalVariable(name: "l", arg: 1, scope: !15162, file: !420, line: 221, type: !14478)
!15162 = distinct !DISubprogram(name: "k_spin_release", scope: !420, file: !420, line: 221, type: !15163, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15165)
!15163 = !DISubroutineType(types: !15164)
!15164 = !{null, !14478}
!15165 = !{!15161}
!15166 = !DILocation(line: 0, scope: !15162, inlinedAt: !15167)
!15167 = distinct !DILocation(line: 195, column: 2, scope: !15153, inlinedAt: !15159)
!15168 = !DILocation(line: 225, column: 2, scope: !15169, inlinedAt: !15167)
!15169 = distinct !DILexicalBlock(scope: !15170, file: !420, line: 225, column: 2)
!15170 = distinct !DILexicalBlock(scope: !15162, file: !420, line: 225, column: 2)
!15171 = !DILocation(line: 225, column: 2, scope: !15170, inlinedAt: !15167)
!15172 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !15167)
!15173 = distinct !DILexicalBlock(scope: !15169, file: !420, line: 225, column: 2)
!15174 = !DILocation(line: 196, column: 9, scope: !15153, inlinedAt: !15159)
!15175 = !DILocation(line: 971, column: 2, scope: !15160)
!15176 = !DILocation(line: 0, scope: !14509, inlinedAt: !15177)
!15177 = distinct !DILocation(line: 972, column: 3, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15148, file: !2464, line: 971, column: 9)
!15179 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15177)
!15180 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15177)
!15181 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15177)
!15182 = !DILocation(line: 0, scope: !14523, inlinedAt: !15183)
!15183 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15177)
!15184 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15183)
!15185 = !DILocation(line: 975, column: 1, scope: !15142)
!15186 = distinct !DISubprogram(name: "resched", scope: !2464, file: !2464, line: 940, type: !15187, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15189)
!15187 = !DISubroutineType(types: !15188)
!15188 = !{!145, !152}
!15189 = !{!15190}
!15190 = !DILocalVariable(name: "key", arg: 1, scope: !15186, file: !2464, line: 940, type: !152)
!15191 = !DILocation(line: 0, scope: !15186)
!15192 = !DILocalVariable(name: "key", arg: 1, scope: !15193, file: !5934, line: 112, type: !32)
!15193 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5934, file: !5934, line: 112, type: !15194, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15196)
!15194 = !DISubroutineType(types: !15195)
!15195 = !{!145, !32}
!15196 = !{!15192}
!15197 = !DILocation(line: 0, scope: !15193, inlinedAt: !15198)
!15198 = distinct !DILocation(line: 946, column: 9, scope: !15186)
!15199 = !DILocation(line: 115, column: 13, scope: !15193, inlinedAt: !15198)
!15200 = !DILocation(line: 946, column: 32, scope: !15186)
!15201 = !DILocation(line: 1031, column: 3, scope: !15202, inlinedAt: !15205)
!15202 = distinct !DISubprogram(name: "__get_IPSR", scope: !6253, file: !6253, line: 1027, type: !6340, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15203)
!15203 = !{!15204}
!15204 = !DILocalVariable(name: "result", scope: !15202, file: !6253, line: 1029, type: !152)
!15205 = distinct !DILocation(line: 48, column: 10, scope: !15206, inlinedAt: !15207)
!15206 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7305, file: !7305, line: 46, type: !7306, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!15207 = distinct !DILocation(line: 946, column: 36, scope: !15186)
!15208 = !{i64 3588481}
!15209 = !DILocation(line: 0, scope: !15202, inlinedAt: !15205)
!15210 = !DILocation(line: 48, column: 9, scope: !15206, inlinedAt: !15207)
!15211 = !DILocation(line: 946, column: 2, scope: !15186)
!15212 = distinct !DISubprogram(name: "need_swap", scope: !2464, file: !2464, line: 953, type: !7306, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15213)
!15213 = !{!15214}
!15214 = !DILocalVariable(name: "new_thread", scope: !15212, file: !2464, line: 959, type: !2356)
!15215 = !DILocation(line: 962, column: 31, scope: !15212)
!15216 = !DILocation(line: 0, scope: !15212)
!15217 = !DILocation(line: 963, column: 23, scope: !15212)
!15218 = !DILocation(line: 963, column: 20, scope: !15212)
!15219 = !DILocation(line: 963, column: 2, scope: !15212)
!15220 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13739, file: !13739, line: 181, type: !6263, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15221)
!15221 = !{!15222, !15223}
!15222 = !DILocalVariable(name: "key", arg: 1, scope: !15220, file: !13739, line: 181, type: !32)
!15223 = !DILocalVariable(name: "ret", scope: !15220, file: !13739, line: 183, type: !107)
!15224 = !DILocation(line: 0, scope: !15220)
!15225 = !DILocation(line: 185, column: 8, scope: !15220)
!15226 = !DILocation(line: 186, column: 2, scope: !15220)
!15227 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2464, file: !2464, line: 665, type: !14433, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15228)
!15228 = !{!15229, !15230, !15232}
!15229 = !DILocalVariable(name: "thread", arg: 1, scope: !15227, file: !2464, line: 665, type: !2356)
!15230 = !DILocalVariable(name: "__i", scope: !15231, file: !2464, line: 671, type: !14467)
!15231 = distinct !DILexicalBlock(scope: !15227, file: !2464, line: 671, column: 2)
!15232 = !DILocalVariable(name: "__key", scope: !15231, file: !2464, line: 671, type: !14467)
!15233 = !DILocation(line: 0, scope: !15227)
!15234 = !DILocation(line: 669, column: 8, scope: !15227)
!15235 = !DILocation(line: 0, scope: !15231)
!15236 = !DILocation(line: 0, scope: !14475, inlinedAt: !15237)
!15237 = distinct !DILocation(line: 671, column: 2, scope: !15231)
!15238 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15239)
!15239 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15237)
!15240 = !DILocation(line: 0, scope: !14484, inlinedAt: !15239)
!15241 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15237)
!15242 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15237)
!15243 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15237)
!15244 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15237)
!15245 = !DILocation(line: 672, column: 7, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !15247, file: !2464, line: 672, column: 7)
!15247 = distinct !DILexicalBlock(scope: !15248, file: !2464, line: 671, column: 26)
!15248 = distinct !DILexicalBlock(scope: !15231, file: !2464, line: 671, column: 2)
!15249 = !DILocation(line: 672, column: 7, scope: !15247)
!15250 = !DILocation(line: 0, scope: !14667, inlinedAt: !15251)
!15251 = distinct !DILocation(line: 673, column: 4, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15246, file: !2464, line: 672, column: 35)
!15253 = !DILocation(line: 266, column: 15, scope: !14667, inlinedAt: !15251)
!15254 = !DILocation(line: 266, column: 28, scope: !14667, inlinedAt: !15251)
!15255 = !DILocation(line: 0, scope: !14675, inlinedAt: !15256)
!15256 = distinct !DILocation(line: 268, column: 3, scope: !14679, inlinedAt: !15251)
!15257 = !DILocation(line: 234, column: 2, scope: !14675, inlinedAt: !15256)
!15258 = !DILocation(line: 674, column: 3, scope: !15252)
!15259 = !DILocation(line: 675, column: 3, scope: !15247)
!15260 = !DILocation(line: 676, column: 26, scope: !15247)
!15261 = !DILocation(line: 676, column: 23, scope: !15247)
!15262 = !DILocation(line: 676, column: 3, scope: !15247)
!15263 = !DILocation(line: 0, scope: !14509, inlinedAt: !15264)
!15264 = distinct !DILocation(line: 671, column: 2, scope: !15248)
!15265 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15264)
!15266 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15264)
!15267 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15264)
!15268 = !DILocation(line: 0, scope: !14523, inlinedAt: !15269)
!15269 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15264)
!15270 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15269)
!15271 = !DILocation(line: 679, column: 16, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15227, file: !2464, line: 679, column: 6)
!15273 = !DILocation(line: 679, column: 13, scope: !15272)
!15274 = !DILocation(line: 679, column: 6, scope: !15227)
!15275 = !DILocation(line: 680, column: 3, scope: !15276)
!15276 = distinct !DILexicalBlock(scope: !15272, file: !2464, line: 679, column: 26)
!15277 = !DILocation(line: 681, column: 2, scope: !15276)
!15278 = !DILocation(line: 684, column: 1, scope: !15227)
!15279 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14064, file: !14064, line: 52, type: !14451, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15280)
!15280 = !{!15281}
!15281 = !DILocalVariable(name: "thread", arg: 1, scope: !15279, file: !14064, line: 52, type: !2356)
!15282 = !DILocation(line: 0, scope: !15279)
!15283 = !DILocation(line: 54, column: 39, scope: !15279)
!15284 = !DILocation(line: 54, column: 9, scope: !15279)
!15285 = !DILocation(line: 54, column: 2, scope: !15279)
!15286 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13635, file: !13635, line: 141, type: !14433, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15287)
!15287 = !{!15288}
!15288 = !DILocalVariable(name: "thread", arg: 1, scope: !15286, file: !13635, line: 141, type: !2356)
!15289 = !DILocation(line: 0, scope: !15286)
!15290 = !DILocation(line: 143, column: 15, scope: !15286)
!15291 = !DILocation(line: 143, column: 28, scope: !15286)
!15292 = !DILocation(line: 146, column: 1, scope: !15286)
!15293 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13635, file: !13635, line: 73, type: !3089, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!15294 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 75, column: 30, scope: !15293)
!15296 = !DILocation(line: 0, scope: !14484, inlinedAt: !15295)
!15297 = !DILocation(line: 75, column: 9, scope: !15293)
!15298 = !DILocation(line: 76, column: 1, scope: !15293)
!15299 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2464, file: !2464, line: 977, type: !6350, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15300)
!15300 = !{!15301}
!15301 = !DILocalVariable(name: "key", arg: 1, scope: !15299, file: !2464, line: 977, type: !152)
!15302 = !DILocation(line: 0, scope: !15299)
!15303 = !DILocation(line: 979, column: 6, scope: !15304)
!15304 = distinct !DILexicalBlock(scope: !15299, file: !2464, line: 979, column: 6)
!15305 = !DILocation(line: 979, column: 6, scope: !15299)
!15306 = !DILocation(line: 980, column: 3, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !15304, file: !2464, line: 979, column: 20)
!15308 = !DILocation(line: 981, column: 2, scope: !15307)
!15309 = !DILocation(line: 0, scope: !14523, inlinedAt: !15310)
!15310 = distinct !DILocation(line: 982, column: 3, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15304, file: !2464, line: 981, column: 9)
!15312 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15310)
!15313 = !DILocation(line: 985, column: 1, scope: !15299)
!15314 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2464, file: !2464, line: 695, type: !14433, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15315)
!15315 = !{!15316, !15317}
!15316 = !DILocalVariable(name: "thread", arg: 1, scope: !15314, file: !2464, line: 695, type: !2356)
!15317 = !DILocalVariable(name: "key", scope: !15314, file: !2464, line: 699, type: !14467)
!15318 = !DILocation(line: 0, scope: !15314)
!15319 = !DILocation(line: 0, scope: !14475, inlinedAt: !15320)
!15320 = distinct !DILocation(line: 699, column: 25, scope: !15314)
!15321 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15322)
!15322 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15320)
!15323 = !DILocation(line: 0, scope: !14484, inlinedAt: !15322)
!15324 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15320)
!15325 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15320)
!15326 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15320)
!15327 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15320)
!15328 = !DILocation(line: 702, column: 7, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15314, file: !2464, line: 702, column: 6)
!15330 = !DILocation(line: 702, column: 6, scope: !15314)
!15331 = !DILocation(line: 0, scope: !14509, inlinedAt: !15332)
!15332 = distinct !DILocation(line: 703, column: 3, scope: !15333)
!15333 = distinct !DILexicalBlock(scope: !15329, file: !2464, line: 702, column: 38)
!15334 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15332)
!15335 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15332)
!15336 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15332)
!15337 = !DILocation(line: 0, scope: !14523, inlinedAt: !15338)
!15338 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15332)
!15339 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15338)
!15340 = !DILocation(line: 704, column: 3, scope: !15333)
!15341 = !DILocation(line: 707, column: 2, scope: !15314)
!15342 = !DILocation(line: 708, column: 2, scope: !15314)
!15343 = !DILocation(line: 710, column: 2, scope: !15314)
!15344 = !DILocation(line: 713, column: 1, scope: !15314)
!15345 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13635, file: !13635, line: 96, type: !14616, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15346)
!15346 = !{!15347}
!15347 = !DILocalVariable(name: "thread", arg: 1, scope: !15345, file: !13635, line: 96, type: !2356)
!15348 = !DILocation(line: 0, scope: !15345)
!15349 = !DILocation(line: 98, column: 23, scope: !15345)
!15350 = !DILocation(line: 98, column: 36, scope: !15345)
!15351 = !DILocation(line: 98, column: 57, scope: !15345)
!15352 = !DILocation(line: 98, column: 2, scope: !15345)
!15353 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13635, file: !13635, line: 148, type: !14433, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15354)
!15354 = !{!15355}
!15355 = !DILocalVariable(name: "thread", arg: 1, scope: !15353, file: !13635, line: 148, type: !2356)
!15356 = !DILocation(line: 0, scope: !15353)
!15357 = !DILocation(line: 150, column: 15, scope: !15353)
!15358 = !DILocation(line: 150, column: 28, scope: !15353)
!15359 = !DILocation(line: 153, column: 1, scope: !15353)
!15360 = distinct !DISubprogram(name: "z_pend_thread", scope: !2464, file: !2464, line: 770, type: !15361, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15367)
!15361 = !DISubroutineType(types: !15362)
!15362 = !{null, !2356, !2387, !15363}
!15363 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !15364)
!15364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !15365)
!15365 = !{!15366}
!15366 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15364, file: !565, line: 66, baseType: !564, size: 64)
!15367 = !{!15368, !15369, !15370, !15371, !15373}
!15368 = !DILocalVariable(name: "thread", arg: 1, scope: !15360, file: !2464, line: 770, type: !2356)
!15369 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15360, file: !2464, line: 770, type: !2387)
!15370 = !DILocalVariable(name: "timeout", arg: 3, scope: !15360, file: !2464, line: 771, type: !15363)
!15371 = !DILocalVariable(name: "__i", scope: !15372, file: !2464, line: 774, type: !14467)
!15372 = distinct !DILexicalBlock(scope: !15360, file: !2464, line: 774, column: 2)
!15373 = !DILocalVariable(name: "__key", scope: !15372, file: !2464, line: 774, type: !14467)
!15374 = !DILocation(line: 0, scope: !15360)
!15375 = !DILocation(line: 773, column: 2, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15377, file: !2464, line: 773, column: 2)
!15377 = distinct !DILexicalBlock(scope: !15360, file: !2464, line: 773, column: 2)
!15378 = !DILocation(line: 773, column: 2, scope: !15377)
!15379 = !DILocation(line: 773, column: 2, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15376, file: !2464, line: 773, column: 2)
!15381 = !DILocation(line: 0, scope: !15372)
!15382 = !DILocation(line: 0, scope: !14475, inlinedAt: !15383)
!15383 = distinct !DILocation(line: 774, column: 2, scope: !15372)
!15384 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15385)
!15385 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15383)
!15386 = !DILocation(line: 0, scope: !14484, inlinedAt: !15385)
!15387 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15383)
!15388 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15383)
!15389 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15383)
!15390 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15383)
!15391 = !DILocation(line: 775, column: 3, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !15393, file: !2464, line: 774, column: 26)
!15393 = distinct !DILexicalBlock(scope: !15372, file: !2464, line: 774, column: 2)
!15394 = !DILocation(line: 0, scope: !14509, inlinedAt: !15395)
!15395 = distinct !DILocation(line: 774, column: 2, scope: !15393)
!15396 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15395)
!15397 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15395)
!15398 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15395)
!15399 = !DILocation(line: 0, scope: !14523, inlinedAt: !15400)
!15400 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15395)
!15401 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15400)
!15402 = !DILocation(line: 777, column: 1, scope: !15360)
!15403 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2464, file: !2464, line: 79, type: !14616, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15404)
!15404 = !{!15405}
!15405 = !DILocalVariable(name: "thread", arg: 1, scope: !15403, file: !2464, line: 79, type: !2356)
!15406 = !DILocation(line: 0, scope: !15403)
!15407 = !DILocation(line: 81, column: 23, scope: !15403)
!15408 = !DILocation(line: 81, column: 36, scope: !15403)
!15409 = !DILocation(line: 81, column: 53, scope: !15403)
!15410 = !DILocation(line: 81, column: 2, scope: !15403)
!15411 = distinct !DISubprogram(name: "pend_locked", scope: !2464, file: !2464, line: 760, type: !15361, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15412)
!15412 = !{!15413, !15414, !15415}
!15413 = !DILocalVariable(name: "thread", arg: 1, scope: !15411, file: !2464, line: 760, type: !2356)
!15414 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15411, file: !2464, line: 760, type: !2387)
!15415 = !DILocalVariable(name: "timeout", arg: 3, scope: !15411, file: !2464, line: 761, type: !15363)
!15416 = !DILocation(line: 0, scope: !15411)
!15417 = !DILocation(line: 766, column: 2, scope: !15411)
!15418 = !DILocation(line: 767, column: 2, scope: !15411)
!15419 = !DILocation(line: 768, column: 1, scope: !15411)
!15420 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2464, file: !2464, line: 740, type: !15421, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15423)
!15421 = !DISubroutineType(types: !15422)
!15422 = !{null, !2356, !2387}
!15423 = !{!15424, !15425}
!15424 = !DILocalVariable(name: "thread", arg: 1, scope: !15420, file: !2464, line: 740, type: !2356)
!15425 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15420, file: !2464, line: 740, type: !2387)
!15426 = !DILocation(line: 0, scope: !15420)
!15427 = !DILocation(line: 742, column: 2, scope: !15420)
!15428 = !DILocation(line: 743, column: 2, scope: !15420)
!15429 = !DILocation(line: 747, column: 13, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15420, file: !2464, line: 747, column: 6)
!15431 = !DILocation(line: 747, column: 6, scope: !15420)
!15432 = !DILocation(line: 748, column: 16, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15430, file: !2464, line: 747, column: 22)
!15434 = !DILocation(line: 748, column: 26, scope: !15433)
!15435 = !DILocation(line: 749, column: 28, scope: !15433)
!15436 = !DILocation(line: 0, scope: !14698, inlinedAt: !15437)
!15437 = distinct !DILocation(line: 749, column: 3, scope: !15433)
!15438 = !DILocation(line: 186, column: 2, scope: !14708, inlinedAt: !15437)
!15439 = !DILocation(line: 186, column: 2, scope: !14709, inlinedAt: !15437)
!15440 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !15437)
!15441 = !DILocation(line: 188, column: 2, scope: !14714, inlinedAt: !15437)
!15442 = !DILocation(line: 188, column: 2, scope: !14716, inlinedAt: !15437)
!15443 = !DILocation(line: 0, scope: !14714, inlinedAt: !15437)
!15444 = !DILocation(line: 189, column: 7, scope: !14719, inlinedAt: !15437)
!15445 = !DILocation(line: 189, column: 35, scope: !14719, inlinedAt: !15437)
!15446 = !DILocation(line: 189, column: 7, scope: !14720, inlinedAt: !15437)
!15447 = !DILocation(line: 191, column: 21, scope: !14724, inlinedAt: !15437)
!15448 = !DILocation(line: 190, column: 4, scope: !14724, inlinedAt: !15437)
!15449 = !DILocation(line: 192, column: 4, scope: !14724, inlinedAt: !15437)
!15450 = distinct !{!15450, !15441, !15451}
!15451 = !DILocation(line: 194, column: 2, scope: !14714, inlinedAt: !15437)
!15452 = !DILocation(line: 196, column: 37, scope: !14698, inlinedAt: !15437)
!15453 = !DILocation(line: 196, column: 2, scope: !14698, inlinedAt: !15437)
!15454 = !DILocation(line: 197, column: 1, scope: !14698, inlinedAt: !15437)
!15455 = !DILocation(line: 751, column: 1, scope: !15420)
!15456 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2464, file: !2464, line: 753, type: !15457, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15459)
!15457 = !DISubroutineType(types: !15458)
!15458 = !{null, !2356, !15363}
!15459 = !{!15460, !15461}
!15460 = !DILocalVariable(name: "thread", arg: 1, scope: !15456, file: !2464, line: 753, type: !2356)
!15461 = !DILocalVariable(name: "timeout", arg: 2, scope: !15456, file: !2464, line: 753, type: !15363)
!15462 = !DILocation(line: 0, scope: !15456)
!15463 = !DILocation(line: 755, column: 7, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !15456, file: !2464, line: 755, column: 6)
!15465 = !DILocation(line: 755, column: 6, scope: !15456)
!15466 = !DILocation(line: 756, column: 3, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !15464, file: !2464, line: 755, column: 41)
!15468 = !DILocation(line: 757, column: 2, scope: !15467)
!15469 = !DILocation(line: 758, column: 1, scope: !15456)
!15470 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14064, file: !14064, line: 47, type: !15457, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15471)
!15471 = !{!15472, !15473}
!15472 = !DILocalVariable(name: "thread", arg: 1, scope: !15470, file: !14064, line: 47, type: !2356)
!15473 = !DILocalVariable(name: "ticks", arg: 2, scope: !15470, file: !14064, line: 47, type: !15363)
!15474 = !DILocation(line: 0, scope: !15470)
!15475 = !DILocation(line: 49, column: 30, scope: !15470)
!15476 = !DILocation(line: 49, column: 2, scope: !15470)
!15477 = !DILocation(line: 50, column: 1, scope: !15470)
!15478 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2464, file: !2464, line: 795, type: !2413, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15479)
!15479 = !{!15480, !15481, !15482, !15484, !15485}
!15480 = !DILocalVariable(name: "timeout", arg: 1, scope: !15478, file: !2464, line: 795, type: !2415)
!15481 = !DILocalVariable(name: "thread", scope: !15478, file: !2464, line: 797, type: !2356)
!15482 = !DILocalVariable(name: "__i", scope: !15483, file: !2464, line: 800, type: !14467)
!15483 = distinct !DILexicalBlock(scope: !15478, file: !2464, line: 800, column: 2)
!15484 = !DILocalVariable(name: "__key", scope: !15483, file: !2464, line: 800, type: !14467)
!15485 = !DILocalVariable(name: "killed", scope: !15486, file: !2464, line: 801, type: !145)
!15486 = distinct !DILexicalBlock(scope: !15487, file: !2464, line: 800, column: 26)
!15487 = distinct !DILexicalBlock(scope: !15483, file: !2464, line: 800, column: 2)
!15488 = !DILocation(line: 0, scope: !15478)
!15489 = !DILocation(line: 797, column: 28, scope: !15478)
!15490 = !DILocation(line: 0, scope: !15483)
!15491 = !DILocation(line: 0, scope: !14475, inlinedAt: !15492)
!15492 = distinct !DILocation(line: 800, column: 2, scope: !15483)
!15493 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15494)
!15494 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15492)
!15495 = !DILocation(line: 0, scope: !14484, inlinedAt: !15494)
!15496 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15492)
!15497 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15492)
!15498 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15492)
!15499 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15492)
!15500 = !DILocation(line: 801, column: 27, scope: !15486)
!15501 = !DILocation(line: 801, column: 32, scope: !15486)
!15502 = !DILocation(line: 801, column: 61, scope: !15486)
!15503 = !DILocation(line: 0, scope: !15486)
!15504 = !DILocation(line: 804, column: 7, scope: !15486)
!15505 = !DILocation(line: 805, column: 21, scope: !15506)
!15506 = distinct !DILexicalBlock(scope: !15507, file: !2464, line: 805, column: 8)
!15507 = distinct !DILexicalBlock(scope: !15508, file: !2464, line: 804, column: 16)
!15508 = distinct !DILexicalBlock(scope: !15486, file: !2464, line: 804, column: 7)
!15509 = !DILocation(line: 805, column: 31, scope: !15506)
!15510 = !DILocation(line: 805, column: 8, scope: !15507)
!15511 = !DILocation(line: 806, column: 5, scope: !15512)
!15512 = distinct !DILexicalBlock(scope: !15506, file: !2464, line: 805, column: 40)
!15513 = !DILocation(line: 807, column: 4, scope: !15512)
!15514 = !DILocation(line: 808, column: 4, scope: !15507)
!15515 = !DILocation(line: 809, column: 4, scope: !15507)
!15516 = !DILocation(line: 810, column: 4, scope: !15507)
!15517 = !DILocation(line: 811, column: 3, scope: !15507)
!15518 = !DILocation(line: 0, scope: !14509, inlinedAt: !15519)
!15519 = distinct !DILocation(line: 800, column: 2, scope: !15487)
!15520 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15519)
!15521 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15519)
!15522 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15519)
!15523 = !DILocation(line: 0, scope: !14523, inlinedAt: !15524)
!15524 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15519)
!15525 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15524)
!15526 = !DILocation(line: 813, column: 1, scope: !15478)
!15527 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2464, file: !2464, line: 779, type: !14433, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15528)
!15528 = !{!15529}
!15529 = !DILocalVariable(name: "thread", arg: 1, scope: !15527, file: !2464, line: 779, type: !2356)
!15530 = !DILocation(line: 0, scope: !15527)
!15531 = !DILocation(line: 781, column: 21, scope: !15527)
!15532 = !DILocation(line: 781, column: 2, scope: !15527)
!15533 = !DILocation(line: 782, column: 2, scope: !15527)
!15534 = !DILocation(line: 783, column: 15, scope: !15527)
!15535 = !DILocation(line: 783, column: 25, scope: !15527)
!15536 = !DILocation(line: 784, column: 1, scope: !15527)
!15537 = distinct !DISubprogram(name: "pended_on_thread", scope: !2464, file: !2464, line: 724, type: !15538, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15540)
!15538 = !DISubroutineType(types: !15539)
!15539 = !{!2387, !2356}
!15540 = !{!15541}
!15541 = !DILocalVariable(name: "thread", arg: 1, scope: !15537, file: !2464, line: 724, type: !2356)
!15542 = !DILocation(line: 0, scope: !15537)
!15543 = !DILocation(line: 726, column: 2, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15545, file: !2464, line: 726, column: 2)
!15545 = distinct !DILexicalBlock(scope: !15537, file: !2464, line: 726, column: 2)
!15546 = !DILocation(line: 726, column: 2, scope: !15545)
!15547 = !DILocation(line: 726, column: 2, scope: !15548)
!15548 = distinct !DILexicalBlock(scope: !15544, file: !2464, line: 726, column: 2)
!15549 = !DILocation(line: 728, column: 2, scope: !15537)
!15550 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13635, file: !13635, line: 165, type: !14433, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15551)
!15551 = !{!15552}
!15552 = !DILocalVariable(name: "thread", arg: 1, scope: !15550, file: !13635, line: 165, type: !2356)
!15553 = !DILocation(line: 0, scope: !15550)
!15554 = !DILocation(line: 167, column: 15, scope: !15550)
!15555 = !DILocation(line: 167, column: 28, scope: !15550)
!15556 = !DILocation(line: 168, column: 1, scope: !15550)
!15557 = distinct !DISubprogram(name: "unready_thread", scope: !2464, file: !2464, line: 731, type: !14433, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15558)
!15558 = !{!15559}
!15559 = !DILocalVariable(name: "thread", arg: 1, scope: !15557, file: !2464, line: 731, type: !2356)
!15560 = !DILocation(line: 0, scope: !15557)
!15561 = !DILocation(line: 733, column: 6, scope: !15562)
!15562 = distinct !DILexicalBlock(scope: !15557, file: !2464, line: 733, column: 6)
!15563 = !DILocation(line: 733, column: 6, scope: !15557)
!15564 = !DILocation(line: 0, scope: !14667, inlinedAt: !15565)
!15565 = distinct !DILocation(line: 734, column: 3, scope: !15566)
!15566 = distinct !DILexicalBlock(scope: !15562, file: !2464, line: 733, column: 34)
!15567 = !DILocation(line: 266, column: 15, scope: !14667, inlinedAt: !15565)
!15568 = !DILocation(line: 266, column: 28, scope: !14667, inlinedAt: !15565)
!15569 = !DILocation(line: 0, scope: !14675, inlinedAt: !15570)
!15570 = distinct !DILocation(line: 268, column: 3, scope: !14679, inlinedAt: !15565)
!15571 = !DILocation(line: 234, column: 2, scope: !14675, inlinedAt: !15570)
!15572 = !DILocation(line: 735, column: 2, scope: !15566)
!15573 = !DILocation(line: 736, column: 25, scope: !15557)
!15574 = !DILocation(line: 736, column: 22, scope: !15557)
!15575 = !DILocation(line: 736, column: 2, scope: !15557)
!15576 = !DILocation(line: 737, column: 1, scope: !15557)
!15577 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13635, file: !13635, line: 160, type: !14433, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15578)
!15578 = !{!15579}
!15579 = !DILocalVariable(name: "thread", arg: 1, scope: !15577, file: !13635, line: 160, type: !2356)
!15580 = !DILocation(line: 0, scope: !15577)
!15581 = !DILocation(line: 162, column: 15, scope: !15577)
!15582 = !DILocation(line: 162, column: 28, scope: !15577)
!15583 = !DILocation(line: 163, column: 1, scope: !15577)
!15584 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2464, file: !2464, line: 786, type: !14433, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15585)
!15585 = !{!15586, !15587, !15589}
!15586 = !DILocalVariable(name: "thread", arg: 1, scope: !15584, file: !2464, line: 786, type: !2356)
!15587 = !DILocalVariable(name: "__i", scope: !15588, file: !2464, line: 788, type: !14467)
!15588 = distinct !DILexicalBlock(scope: !15584, file: !2464, line: 788, column: 2)
!15589 = !DILocalVariable(name: "__key", scope: !15588, file: !2464, line: 788, type: !14467)
!15590 = !DILocation(line: 0, scope: !15584)
!15591 = !DILocation(line: 0, scope: !15588)
!15592 = !DILocation(line: 0, scope: !14475, inlinedAt: !15593)
!15593 = distinct !DILocation(line: 788, column: 2, scope: !15588)
!15594 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15595)
!15595 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15593)
!15596 = !DILocation(line: 0, scope: !14484, inlinedAt: !15595)
!15597 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15593)
!15598 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15593)
!15599 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15593)
!15600 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15593)
!15601 = !DILocation(line: 789, column: 3, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15603, file: !2464, line: 788, column: 26)
!15603 = distinct !DILexicalBlock(scope: !15588, file: !2464, line: 788, column: 2)
!15604 = !DILocation(line: 0, scope: !14509, inlinedAt: !15605)
!15605 = distinct !DILocation(line: 788, column: 2, scope: !15603)
!15606 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15605)
!15607 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15605)
!15608 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15605)
!15609 = !DILocation(line: 0, scope: !14523, inlinedAt: !15610)
!15610 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15605)
!15611 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15610)
!15612 = !DILocation(line: 791, column: 1, scope: !15584)
!15613 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2464, file: !2464, line: 816, type: !15614, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15616)
!15614 = !DISubroutineType(types: !15615)
!15615 = !{!107, !152, !2387, !15363}
!15616 = !{!15617, !15618, !15619, !15620, !15621, !15623}
!15617 = !DILocalVariable(name: "key", arg: 1, scope: !15613, file: !2464, line: 816, type: !152)
!15618 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15613, file: !2464, line: 816, type: !2387)
!15619 = !DILocalVariable(name: "timeout", arg: 3, scope: !15613, file: !2464, line: 816, type: !15363)
!15620 = !DILocalVariable(name: "ret", scope: !15613, file: !2464, line: 828, type: !107)
!15621 = !DILocalVariable(name: "__i", scope: !15622, file: !2464, line: 829, type: !14467)
!15622 = distinct !DILexicalBlock(scope: !15613, file: !2464, line: 829, column: 2)
!15623 = !DILocalVariable(name: "__key", scope: !15622, file: !2464, line: 829, type: !14467)
!15624 = !DILocation(line: 0, scope: !15613)
!15625 = !DILocation(line: 823, column: 14, scope: !15613)
!15626 = !DILocation(line: 823, column: 2, scope: !15613)
!15627 = !DILocation(line: 826, column: 20, scope: !15613)
!15628 = !DILocation(line: 826, column: 18, scope: !15613)
!15629 = !DILocation(line: 828, column: 12, scope: !15613)
!15630 = !DILocation(line: 0, scope: !15622)
!15631 = !DILocation(line: 0, scope: !14475, inlinedAt: !15632)
!15632 = distinct !DILocation(line: 829, column: 2, scope: !15622)
!15633 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15634)
!15634 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15632)
!15635 = !DILocation(line: 0, scope: !14484, inlinedAt: !15634)
!15636 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15632)
!15637 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15632)
!15638 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15632)
!15639 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15632)
!15640 = !DILocation(line: 830, column: 7, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !15642, file: !2464, line: 830, column: 7)
!15642 = distinct !DILexicalBlock(scope: !15643, file: !2464, line: 829, column: 26)
!15643 = distinct !DILexicalBlock(scope: !15622, file: !2464, line: 829, column: 2)
!15644 = !DILocation(line: 830, column: 26, scope: !15641)
!15645 = !DILocation(line: 830, column: 23, scope: !15641)
!15646 = !DILocation(line: 830, column: 7, scope: !15642)
!15647 = !DILocation(line: 831, column: 20, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15641, file: !2464, line: 830, column: 36)
!15649 = !DILocation(line: 832, column: 3, scope: !15648)
!15650 = !DILocation(line: 0, scope: !14509, inlinedAt: !15651)
!15651 = distinct !DILocation(line: 829, column: 2, scope: !15643)
!15652 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15651)
!15653 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15651)
!15654 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15651)
!15655 = !DILocation(line: 0, scope: !14523, inlinedAt: !15656)
!15656 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15651)
!15657 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15656)
!15658 = !DILocation(line: 834, column: 2, scope: !15613)
!15659 = distinct !DISubprogram(name: "z_pend_curr", scope: !2464, file: !2464, line: 840, type: !15660, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15662)
!15660 = !DISubroutineType(types: !15661)
!15661 = !{!107, !14478, !14467, !2387, !15363}
!15662 = !{!15663, !15664, !15665, !15666}
!15663 = !DILocalVariable(name: "lock", arg: 1, scope: !15659, file: !2464, line: 840, type: !14478)
!15664 = !DILocalVariable(name: "key", arg: 2, scope: !15659, file: !2464, line: 840, type: !14467)
!15665 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15659, file: !2464, line: 841, type: !2387)
!15666 = !DILocalVariable(name: "timeout", arg: 4, scope: !15659, file: !2464, line: 841, type: !15363)
!15667 = !DILocation(line: 0, scope: !15659)
!15668 = !DILocation(line: 844, column: 20, scope: !15659)
!15669 = !DILocation(line: 844, column: 18, scope: !15659)
!15670 = !DILocation(line: 846, column: 2, scope: !15671)
!15671 = distinct !DILexicalBlock(scope: !15672, file: !2464, line: 846, column: 2)
!15672 = distinct !DILexicalBlock(scope: !15659, file: !2464, line: 846, column: 2)
!15673 = !DILocation(line: 846, column: 2, scope: !15672)
!15674 = !DILocation(line: 846, column: 2, scope: !15675)
!15675 = distinct !DILexicalBlock(scope: !15671, file: !2464, line: 846, column: 2)
!15676 = !DILocation(line: 0, scope: !14475, inlinedAt: !15677)
!15677 = distinct !DILocation(line: 856, column: 9, scope: !15659)
!15678 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15679)
!15679 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15677)
!15680 = !DILocation(line: 0, scope: !14484, inlinedAt: !15679)
!15681 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15677)
!15682 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15677)
!15683 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15677)
!15684 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15677)
!15685 = !DILocation(line: 857, column: 14, scope: !15659)
!15686 = !DILocation(line: 857, column: 2, scope: !15659)
!15687 = !DILocation(line: 0, scope: !15162, inlinedAt: !15688)
!15688 = distinct !DILocation(line: 858, column: 2, scope: !15659)
!15689 = !DILocation(line: 225, column: 2, scope: !15169, inlinedAt: !15688)
!15690 = !DILocation(line: 225, column: 2, scope: !15170, inlinedAt: !15688)
!15691 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !15688)
!15692 = !DILocation(line: 0, scope: !15153, inlinedAt: !15693)
!15693 = distinct !DILocation(line: 859, column: 9, scope: !15659)
!15694 = !DILocation(line: 0, scope: !15162, inlinedAt: !15695)
!15695 = distinct !DILocation(line: 195, column: 2, scope: !15153, inlinedAt: !15693)
!15696 = !DILocation(line: 225, column: 2, scope: !15169, inlinedAt: !15695)
!15697 = !DILocation(line: 225, column: 2, scope: !15170, inlinedAt: !15695)
!15698 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !15695)
!15699 = !DILocation(line: 196, column: 9, scope: !15153, inlinedAt: !15693)
!15700 = !DILocation(line: 859, column: 2, scope: !15659)
!15701 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2464, file: !2464, line: 862, type: !15702, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15704)
!15702 = !DISubroutineType(types: !15703)
!15703 = !{!2356, !2387}
!15704 = !{!15705, !15706, !15707, !15709}
!15705 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15701, file: !2464, line: 862, type: !2387)
!15706 = !DILocalVariable(name: "thread", scope: !15701, file: !2464, line: 864, type: !2356)
!15707 = !DILocalVariable(name: "__i", scope: !15708, file: !2464, line: 866, type: !14467)
!15708 = distinct !DILexicalBlock(scope: !15701, file: !2464, line: 866, column: 2)
!15709 = !DILocalVariable(name: "__key", scope: !15708, file: !2464, line: 866, type: !14467)
!15710 = !DILocation(line: 0, scope: !15701)
!15711 = !DILocation(line: 0, scope: !15708)
!15712 = !DILocation(line: 0, scope: !14475, inlinedAt: !15713)
!15713 = distinct !DILocation(line: 866, column: 2, scope: !15708)
!15714 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15715)
!15715 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15713)
!15716 = !DILocation(line: 0, scope: !14484, inlinedAt: !15715)
!15717 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15713)
!15718 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15713)
!15719 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15713)
!15720 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15713)
!15721 = !DILocation(line: 867, column: 12, scope: !15722)
!15722 = distinct !DILexicalBlock(scope: !15723, file: !2464, line: 866, column: 26)
!15723 = distinct !DILexicalBlock(scope: !15708, file: !2464, line: 866, column: 2)
!15724 = !DILocation(line: 869, column: 14, scope: !15725)
!15725 = distinct !DILexicalBlock(scope: !15722, file: !2464, line: 869, column: 7)
!15726 = !DILocation(line: 869, column: 7, scope: !15722)
!15727 = !DILocation(line: 870, column: 4, scope: !15728)
!15728 = distinct !DILexicalBlock(scope: !15725, file: !2464, line: 869, column: 23)
!15729 = !DILocation(line: 871, column: 3, scope: !15728)
!15730 = !DILocation(line: 0, scope: !14509, inlinedAt: !15731)
!15731 = distinct !DILocation(line: 866, column: 2, scope: !15723)
!15732 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15731)
!15733 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15731)
!15734 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15731)
!15735 = !DILocation(line: 0, scope: !14523, inlinedAt: !15736)
!15736 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15731)
!15737 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15736)
!15738 = !DILocation(line: 874, column: 2, scope: !15701)
!15739 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2464, file: !2464, line: 877, type: !15702, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15740)
!15740 = !{!15741, !15742, !15743, !15745}
!15741 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15739, file: !2464, line: 877, type: !2387)
!15742 = !DILocalVariable(name: "thread", scope: !15739, file: !2464, line: 879, type: !2356)
!15743 = !DILocalVariable(name: "__i", scope: !15744, file: !2464, line: 881, type: !14467)
!15744 = distinct !DILexicalBlock(scope: !15739, file: !2464, line: 881, column: 2)
!15745 = !DILocalVariable(name: "__key", scope: !15744, file: !2464, line: 881, type: !14467)
!15746 = !DILocation(line: 0, scope: !15739)
!15747 = !DILocation(line: 0, scope: !15744)
!15748 = !DILocation(line: 0, scope: !14475, inlinedAt: !15749)
!15749 = distinct !DILocation(line: 881, column: 2, scope: !15744)
!15750 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15751)
!15751 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15749)
!15752 = !DILocation(line: 0, scope: !14484, inlinedAt: !15751)
!15753 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15749)
!15754 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15749)
!15755 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15749)
!15756 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15749)
!15757 = !DILocation(line: 882, column: 12, scope: !15758)
!15758 = distinct !DILexicalBlock(scope: !15759, file: !2464, line: 881, column: 26)
!15759 = distinct !DILexicalBlock(scope: !15744, file: !2464, line: 881, column: 2)
!15760 = !DILocation(line: 884, column: 14, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15758, file: !2464, line: 884, column: 7)
!15762 = !DILocation(line: 884, column: 7, scope: !15758)
!15763 = !DILocation(line: 885, column: 4, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15761, file: !2464, line: 884, column: 23)
!15765 = !DILocation(line: 886, column: 10, scope: !15764)
!15766 = !DILocation(line: 887, column: 3, scope: !15764)
!15767 = !DILocation(line: 0, scope: !14509, inlinedAt: !15768)
!15768 = distinct !DILocation(line: 881, column: 2, scope: !15759)
!15769 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15768)
!15770 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15768)
!15771 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15768)
!15772 = !DILocation(line: 0, scope: !14523, inlinedAt: !15773)
!15773 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15768)
!15774 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15773)
!15775 = !DILocation(line: 890, column: 2, scope: !15739)
!15776 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2464, file: !2464, line: 893, type: !14433, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15777)
!15777 = !{!15778}
!15778 = !DILocalVariable(name: "thread", arg: 1, scope: !15776, file: !2464, line: 893, type: !2356)
!15779 = !DILocation(line: 0, scope: !15776)
!15780 = !DILocation(line: 0, scope: !15584, inlinedAt: !15781)
!15781 = distinct !DILocation(line: 895, column: 2, scope: !15776)
!15782 = !DILocation(line: 0, scope: !15588, inlinedAt: !15781)
!15783 = !DILocation(line: 0, scope: !14475, inlinedAt: !15784)
!15784 = distinct !DILocation(line: 788, column: 2, scope: !15588, inlinedAt: !15781)
!15785 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15786)
!15786 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15784)
!15787 = !DILocation(line: 0, scope: !14484, inlinedAt: !15786)
!15788 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15784)
!15789 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15784)
!15790 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15784)
!15791 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15784)
!15792 = !DILocation(line: 789, column: 3, scope: !15602, inlinedAt: !15781)
!15793 = !DILocation(line: 0, scope: !14509, inlinedAt: !15794)
!15794 = distinct !DILocation(line: 788, column: 2, scope: !15603, inlinedAt: !15781)
!15795 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15794)
!15796 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15794)
!15797 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15794)
!15798 = !DILocation(line: 0, scope: !14523, inlinedAt: !15799)
!15799 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15794)
!15800 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15799)
!15801 = !DILocation(line: 896, column: 8, scope: !15776)
!15802 = !DILocation(line: 897, column: 1, scope: !15776)
!15803 = distinct !DISubprogram(name: "z_set_prio", scope: !2464, file: !2464, line: 902, type: !14836, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15804)
!15804 = !{!15805, !15806, !15807, !15808, !15810}
!15805 = !DILocalVariable(name: "thread", arg: 1, scope: !15803, file: !2464, line: 902, type: !2356)
!15806 = !DILocalVariable(name: "prio", arg: 2, scope: !15803, file: !2464, line: 902, type: !107)
!15807 = !DILocalVariable(name: "need_sched", scope: !15803, file: !2464, line: 904, type: !145)
!15808 = !DILocalVariable(name: "__i", scope: !15809, file: !2464, line: 906, type: !14467)
!15809 = distinct !DILexicalBlock(scope: !15803, file: !2464, line: 906, column: 2)
!15810 = !DILocalVariable(name: "__key", scope: !15809, file: !2464, line: 906, type: !14467)
!15811 = !DILocation(line: 0, scope: !15803)
!15812 = !DILocation(line: 0, scope: !15809)
!15813 = !DILocation(line: 0, scope: !14475, inlinedAt: !15814)
!15814 = distinct !DILocation(line: 906, column: 2, scope: !15809)
!15815 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15816)
!15816 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15814)
!15817 = !DILocation(line: 0, scope: !14484, inlinedAt: !15816)
!15818 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15814)
!15819 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15814)
!15820 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15814)
!15821 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15814)
!15822 = !DILocation(line: 907, column: 16, scope: !15823)
!15823 = distinct !DILexicalBlock(scope: !15824, file: !2464, line: 906, column: 26)
!15824 = distinct !DILexicalBlock(scope: !15809, file: !2464, line: 906, column: 2)
!15825 = !DILocation(line: 909, column: 7, scope: !15823)
!15826 = !DILocation(line: 0, scope: !14667, inlinedAt: !15827)
!15827 = distinct !DILocation(line: 912, column: 5, scope: !15828)
!15828 = distinct !DILexicalBlock(scope: !15829, file: !2464, line: 911, column: 63)
!15829 = distinct !DILexicalBlock(scope: !15830, file: !2464, line: 911, column: 8)
!15830 = distinct !DILexicalBlock(scope: !15831, file: !2464, line: 909, column: 19)
!15831 = distinct !DILexicalBlock(scope: !15823, file: !2464, line: 909, column: 7)
!15832 = !DILocation(line: 266, column: 28, scope: !14667, inlinedAt: !15827)
!15833 = !DILocation(line: 0, scope: !14675, inlinedAt: !15834)
!15834 = distinct !DILocation(line: 268, column: 3, scope: !14679, inlinedAt: !15827)
!15835 = !DILocation(line: 234, column: 2, scope: !14675, inlinedAt: !15834)
!15836 = !DILocation(line: 913, column: 23, scope: !15828)
!15837 = !DILocation(line: 0, scope: !14684, inlinedAt: !15838)
!15838 = distinct !DILocation(line: 914, column: 5, scope: !15828)
!15839 = !DILocation(line: 252, column: 28, scope: !14684, inlinedAt: !15838)
!15840 = !DILocation(line: 0, scope: !14691, inlinedAt: !15841)
!15841 = distinct !DILocation(line: 254, column: 3, scope: !14695, inlinedAt: !15838)
!15842 = !DILocation(line: 0, scope: !14698, inlinedAt: !15843)
!15843 = distinct !DILocation(line: 229, column: 2, scope: !14691, inlinedAt: !15841)
!15844 = !DILocation(line: 186, column: 2, scope: !14708, inlinedAt: !15843)
!15845 = !DILocation(line: 186, column: 2, scope: !14709, inlinedAt: !15843)
!15846 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !15843)
!15847 = !DILocation(line: 188, column: 2, scope: !14714, inlinedAt: !15843)
!15848 = !DILocation(line: 188, column: 2, scope: !14716, inlinedAt: !15843)
!15849 = !DILocation(line: 0, scope: !14714, inlinedAt: !15843)
!15850 = !DILocation(line: 189, column: 7, scope: !14719, inlinedAt: !15843)
!15851 = !DILocation(line: 189, column: 35, scope: !14719, inlinedAt: !15843)
!15852 = !DILocation(line: 189, column: 7, scope: !14720, inlinedAt: !15843)
!15853 = !DILocation(line: 190, column: 4, scope: !14724, inlinedAt: !15843)
!15854 = !DILocation(line: 192, column: 4, scope: !14724, inlinedAt: !15843)
!15855 = distinct !{!15855, !15847, !15856}
!15856 = !DILocation(line: 194, column: 2, scope: !14714, inlinedAt: !15843)
!15857 = !DILocation(line: 196, column: 2, scope: !14698, inlinedAt: !15843)
!15858 = !DILocation(line: 197, column: 1, scope: !14698, inlinedAt: !15843)
!15859 = !DILocation(line: 918, column: 4, scope: !15830)
!15860 = !DILocation(line: 919, column: 3, scope: !15830)
!15861 = !DILocation(line: 920, column: 22, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15831, file: !2464, line: 919, column: 10)
!15863 = !DILocation(line: 0, scope: !14509, inlinedAt: !15864)
!15864 = distinct !DILocation(line: 906, column: 2, scope: !15824)
!15865 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15864)
!15866 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15864)
!15867 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15864)
!15868 = !DILocation(line: 0, scope: !14523, inlinedAt: !15869)
!15869 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15864)
!15870 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15869)
!15871 = !DILocation(line: 926, column: 2, scope: !15803)
!15872 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2464, file: !2464, line: 929, type: !15873, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15875)
!15873 = !DISubroutineType(types: !15874)
!15874 = !{null, !2356, !107}
!15875 = !{!15876, !15877, !15878}
!15876 = !DILocalVariable(name: "thread", arg: 1, scope: !15872, file: !2464, line: 929, type: !2356)
!15877 = !DILocalVariable(name: "prio", arg: 2, scope: !15872, file: !2464, line: 929, type: !107)
!15878 = !DILocalVariable(name: "need_sched", scope: !15872, file: !2464, line: 931, type: !145)
!15879 = !DILocation(line: 0, scope: !15872)
!15880 = !DILocation(line: 931, column: 20, scope: !15872)
!15881 = !DILocation(line: 935, column: 17, scope: !15882)
!15882 = distinct !DILexicalBlock(scope: !15872, file: !2464, line: 935, column: 6)
!15883 = !DILocation(line: 935, column: 20, scope: !15882)
!15884 = !DILocation(line: 935, column: 35, scope: !15882)
!15885 = !DILocation(line: 935, column: 48, scope: !15882)
!15886 = !DILocation(line: 935, column: 6, scope: !15872)
!15887 = !DILocation(line: 936, column: 3, scope: !15888)
!15888 = distinct !DILexicalBlock(scope: !15882, file: !2464, line: 935, column: 55)
!15889 = !DILocation(line: 937, column: 2, scope: !15888)
!15890 = !DILocation(line: 938, column: 1, scope: !15872)
!15891 = distinct !DISubprogram(name: "k_sched_lock", scope: !2464, file: !2464, line: 987, type: !3089, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15892)
!15892 = !{!15893, !15895}
!15893 = !DILocalVariable(name: "__i", scope: !15894, file: !2464, line: 989, type: !14467)
!15894 = distinct !DILexicalBlock(scope: !15891, file: !2464, line: 989, column: 2)
!15895 = !DILocalVariable(name: "__key", scope: !15894, file: !2464, line: 989, type: !14467)
!15896 = !DILocation(line: 0, scope: !15894)
!15897 = !DILocation(line: 0, scope: !14475, inlinedAt: !15898)
!15898 = distinct !DILocation(line: 989, column: 2, scope: !15894)
!15899 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15900)
!15900 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15898)
!15901 = !DILocation(line: 0, scope: !14484, inlinedAt: !15900)
!15902 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15898)
!15903 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15898)
!15904 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15898)
!15905 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15898)
!15906 = !DILocation(line: 992, column: 3, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15908, file: !2464, line: 989, column: 26)
!15908 = distinct !DILexicalBlock(scope: !15894, file: !2464, line: 989, column: 2)
!15909 = !DILocation(line: 0, scope: !14509, inlinedAt: !15910)
!15910 = distinct !DILocation(line: 989, column: 2, scope: !15908)
!15911 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15910)
!15912 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15910)
!15913 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15910)
!15914 = !DILocation(line: 0, scope: !14523, inlinedAt: !15915)
!15915 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15910)
!15916 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15915)
!15917 = !DILocation(line: 994, column: 1, scope: !15891)
!15918 = distinct !DISubprogram(name: "z_sched_lock", scope: !13635, file: !13635, line: 251, type: !3089, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!15919 = !DILocation(line: 1031, column: 3, scope: !15202, inlinedAt: !15920)
!15920 = distinct !DILocation(line: 48, column: 10, scope: !15206, inlinedAt: !15921)
!15921 = distinct !DILocation(line: 253, column: 2, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15923, file: !13635, line: 253, column: 2)
!15923 = distinct !DILexicalBlock(scope: !15918, file: !13635, line: 253, column: 2)
!15924 = !DILocation(line: 0, scope: !15202, inlinedAt: !15920)
!15925 = !DILocation(line: 48, column: 9, scope: !15206, inlinedAt: !15921)
!15926 = !DILocation(line: 253, column: 2, scope: !15923)
!15927 = !DILocation(line: 253, column: 2, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !15922, file: !13635, line: 253, column: 2)
!15929 = !DILocation(line: 254, column: 2, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15931, file: !13635, line: 254, column: 2)
!15931 = distinct !DILexicalBlock(scope: !15918, file: !13635, line: 254, column: 2)
!15932 = !DILocation(line: 254, column: 2, scope: !15931)
!15933 = !DILocation(line: 254, column: 2, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15930, file: !13635, line: 254, column: 2)
!15935 = !DILocation(line: 256, column: 2, scope: !15918)
!15936 = !DILocation(line: 258, column: 2, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15918, file: !13635, line: 258, column: 2)
!15938 = !{i64 2154977541}
!15939 = !DILocation(line: 259, column: 1, scope: !15918)
!15940 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2464, file: !2464, line: 996, type: !3089, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15941)
!15941 = !{!15942, !15944}
!15942 = !DILocalVariable(name: "__i", scope: !15943, file: !2464, line: 998, type: !14467)
!15943 = distinct !DILexicalBlock(scope: !15940, file: !2464, line: 998, column: 2)
!15944 = !DILocalVariable(name: "__key", scope: !15943, file: !2464, line: 998, type: !14467)
!15945 = !DILocation(line: 0, scope: !15943)
!15946 = !DILocation(line: 0, scope: !14475, inlinedAt: !15947)
!15947 = distinct !DILocation(line: 998, column: 2, scope: !15943)
!15948 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !15949)
!15949 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !15947)
!15950 = !DILocation(line: 0, scope: !14484, inlinedAt: !15949)
!15951 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15947)
!15952 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !15947)
!15953 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !15947)
!15954 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !15947)
!15955 = !DILocation(line: 999, column: 3, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !15957, file: !2464, line: 999, column: 3)
!15957 = distinct !DILexicalBlock(scope: !15958, file: !2464, line: 999, column: 3)
!15958 = distinct !DILexicalBlock(scope: !15959, file: !2464, line: 998, column: 26)
!15959 = distinct !DILexicalBlock(scope: !15943, file: !2464, line: 998, column: 2)
!15960 = !DILocation(line: 999, column: 3, scope: !15957)
!15961 = !DILocation(line: 999, column: 3, scope: !15962)
!15962 = distinct !DILexicalBlock(scope: !15956, file: !2464, line: 999, column: 3)
!15963 = !DILocation(line: 1031, column: 3, scope: !15202, inlinedAt: !15964)
!15964 = distinct !DILocation(line: 48, column: 10, scope: !15206, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 1000, column: 3, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15967, file: !2464, line: 1000, column: 3)
!15967 = distinct !DILexicalBlock(scope: !15958, file: !2464, line: 1000, column: 3)
!15968 = !DILocation(line: 0, scope: !15202, inlinedAt: !15964)
!15969 = !DILocation(line: 48, column: 9, scope: !15206, inlinedAt: !15965)
!15970 = !DILocation(line: 1000, column: 3, scope: !15967)
!15971 = !DILocation(line: 1000, column: 3, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15966, file: !2464, line: 1000, column: 3)
!15973 = !DILocation(line: 1002, column: 5, scope: !15958)
!15974 = !DILocation(line: 1002, column: 20, scope: !15958)
!15975 = !DILocation(line: 1002, column: 3, scope: !15958)
!15976 = !DILocation(line: 1003, column: 3, scope: !15958)
!15977 = !DILocation(line: 0, scope: !14509, inlinedAt: !15978)
!15978 = distinct !DILocation(line: 998, column: 2, scope: !15959)
!15979 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !15978)
!15980 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !15978)
!15981 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !15978)
!15982 = !DILocation(line: 0, scope: !14523, inlinedAt: !15983)
!15983 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !15978)
!15984 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !15983)
!15985 = !DILocation(line: 1011, column: 2, scope: !15940)
!15986 = !DILocation(line: 1012, column: 1, scope: !15940)
!15987 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2464, file: !2464, line: 1014, type: !14824, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!15988 = !DILocation(line: 1028, column: 25, scope: !15987)
!15989 = !DILocation(line: 1028, column: 2, scope: !15987)
!15990 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2464, file: !2464, line: 1155, type: !15991, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15993)
!15991 = !DISubroutineType(types: !15992)
!15992 = !{!145, !2385, !2385}
!15993 = !{!15994, !15995, !15996, !15997, !15998}
!15994 = !DILocalVariable(name: "a", arg: 1, scope: !15990, file: !2464, line: 1155, type: !2385)
!15995 = !DILocalVariable(name: "b", arg: 2, scope: !15990, file: !2464, line: 1155, type: !2385)
!15996 = !DILocalVariable(name: "thread_a", scope: !15990, file: !2464, line: 1157, type: !2356)
!15997 = !DILocalVariable(name: "thread_b", scope: !15990, file: !2464, line: 1157, type: !2356)
!15998 = !DILocalVariable(name: "cmp", scope: !15990, file: !2464, line: 1158, type: !896)
!15999 = !DILocation(line: 0, scope: !15990)
!16000 = !DILocation(line: 1160, column: 13, scope: !15990)
!16001 = !DILocation(line: 1161, column: 13, scope: !15990)
!16002 = !DILocation(line: 1163, column: 8, scope: !15990)
!16003 = !DILocation(line: 1165, column: 10, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !15990, file: !2464, line: 1165, column: 6)
!16005 = !DILocation(line: 1165, column: 6, scope: !15990)
!16006 = !DILocation(line: 1167, column: 17, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !16004, file: !2464, line: 1167, column: 13)
!16008 = !DILocation(line: 1167, column: 13, scope: !16004)
!16009 = !DILocation(line: 1170, column: 25, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !16007, file: !2464, line: 1169, column: 9)
!16011 = !DILocation(line: 1170, column: 52, scope: !16010)
!16012 = !DILocation(line: 1170, column: 35, scope: !16010)
!16013 = !DILocation(line: 1170, column: 3, scope: !16010)
!16014 = !DILocation(line: 0, scope: !16004)
!16015 = !DILocation(line: 1173, column: 1, scope: !15990)
!16016 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2464, file: !2464, line: 1175, type: !16017, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16032)
!16017 = !DISubroutineType(types: !16018)
!16018 = !{null, !16019, !2356}
!16019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16020, size: 32)
!16020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16021, line: 37, size: 128, elements: !16022)
!16021 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16022 = !{!16023, !16031}
!16023 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16020, file: !16021, line: 38, baseType: !16024, size: 96)
!16024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !335, line: 83, size: 96, elements: !16025)
!16025 = !{!16026, !16027, !16030}
!16026 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16024, file: !335, line: 84, baseType: !2385, size: 32)
!16027 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16024, file: !335, line: 85, baseType: !16028, size: 32, offset: 32)
!16028 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !335, line: 81, baseType: !16029)
!16029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15991, size: 32)
!16030 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16024, file: !335, line: 86, baseType: !107, size: 32, offset: 64)
!16031 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16020, file: !16021, line: 39, baseType: !107, size: 32, offset: 96)
!16032 = !{!16033, !16034, !16035, !16036, !16045}
!16033 = !DILocalVariable(name: "pq", arg: 1, scope: !16016, file: !2464, line: 1175, type: !16019)
!16034 = !DILocalVariable(name: "thread", arg: 2, scope: !16016, file: !2464, line: 1175, type: !2356)
!16035 = !DILocalVariable(name: "t", scope: !16016, file: !2464, line: 1177, type: !2356)
!16036 = !DILocalVariable(name: "__f", scope: !16037, file: !2464, line: 1190, type: !16040)
!16037 = distinct !DILexicalBlock(scope: !16038, file: !2464, line: 1190, column: 3)
!16038 = distinct !DILexicalBlock(scope: !16039, file: !2464, line: 1189, column: 27)
!16039 = distinct !DILexicalBlock(scope: !16016, file: !2464, line: 1189, column: 6)
!16040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !335, line: 155, size: 96, elements: !16041)
!16041 = !{!16042, !16043, !16044}
!16042 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16040, file: !335, line: 156, baseType: !2459, size: 32)
!16043 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16040, file: !335, line: 157, baseType: !194, size: 32, offset: 32)
!16044 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16040, file: !335, line: 158, baseType: !896, size: 32, offset: 64)
!16045 = !DILocalVariable(name: "n", scope: !16046, file: !2464, line: 1190, type: !2385)
!16046 = distinct !DILexicalBlock(scope: !16047, file: !2464, line: 1190, column: 3)
!16047 = distinct !DILexicalBlock(scope: !16037, file: !2464, line: 1190, column: 3)
!16048 = !DILocation(line: 0, scope: !16016)
!16049 = !DILocation(line: 1179, column: 2, scope: !16050)
!16050 = distinct !DILexicalBlock(scope: !16051, file: !2464, line: 1179, column: 2)
!16051 = distinct !DILexicalBlock(scope: !16016, file: !2464, line: 1179, column: 2)
!16052 = !DILocation(line: 1179, column: 2, scope: !16051)
!16053 = !DILocation(line: 1179, column: 2, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16050, file: !2464, line: 1179, column: 2)
!16055 = !DILocation(line: 1181, column: 31, scope: !16016)
!16056 = !DILocation(line: 1181, column: 45, scope: !16016)
!16057 = !DILocation(line: 1181, column: 15, scope: !16016)
!16058 = !DILocation(line: 1181, column: 25, scope: !16016)
!16059 = !DILocation(line: 1189, column: 11, scope: !16039)
!16060 = !DILocation(line: 1189, column: 7, scope: !16039)
!16061 = !DILocation(line: 1189, column: 6, scope: !16016)
!16062 = !DILocation(line: 1190, column: 3, scope: !16037)
!16063 = !DILocation(line: 1190, column: 3, scope: !16046)
!16064 = !DILocation(line: 0, scope: !16046)
!16065 = !DILocation(line: 1190, column: 3, scope: !16047)
!16066 = !DILocation(line: 1193, column: 2, scope: !16038)
!16067 = !DILocation(line: 1191, column: 42, scope: !16068)
!16068 = distinct !DILexicalBlock(scope: !16047, file: !2464, line: 1190, column: 54)
!16069 = !DILocation(line: 1191, column: 12, scope: !16068)
!16070 = !DILocation(line: 1191, column: 22, scope: !16068)
!16071 = distinct !{!16071, !16062, !16072}
!16072 = !DILocation(line: 1192, column: 3, scope: !16037)
!16073 = !DILocation(line: 1195, column: 17, scope: !16016)
!16074 = !DILocation(line: 1195, column: 37, scope: !16016)
!16075 = !DILocation(line: 1195, column: 2, scope: !16016)
!16076 = !DILocation(line: 1196, column: 1, scope: !16016)
!16077 = !DISubprogram(name: "z_rb_foreach_next", scope: !335, file: !335, line: 176, type: !16078, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!16078 = !DISubroutineType(types: !16079)
!16079 = !{!2385, !16080, !16081}
!16080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16024, size: 32)
!16081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16040, size: 32)
!16082 = !DISubprogram(name: "rb_insert", scope: !335, file: !335, line: 105, type: !16083, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!16083 = !DISubroutineType(types: !16084)
!16084 = !{null, !16080, !2385}
!16085 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2464, file: !2464, line: 1198, type: !16017, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16086)
!16086 = !{!16087, !16088}
!16087 = !DILocalVariable(name: "pq", arg: 1, scope: !16085, file: !2464, line: 1198, type: !16019)
!16088 = !DILocalVariable(name: "thread", arg: 2, scope: !16085, file: !2464, line: 1198, type: !2356)
!16089 = !DILocation(line: 0, scope: !16085)
!16090 = !DILocation(line: 1200, column: 2, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16092, file: !2464, line: 1200, column: 2)
!16092 = distinct !DILexicalBlock(scope: !16085, file: !2464, line: 1200, column: 2)
!16093 = !DILocation(line: 1200, column: 2, scope: !16092)
!16094 = !DILocation(line: 1200, column: 2, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !16091, file: !2464, line: 1200, column: 2)
!16096 = !DILocation(line: 1202, column: 17, scope: !16085)
!16097 = !DILocation(line: 1202, column: 37, scope: !16085)
!16098 = !DILocation(line: 1202, column: 2, scope: !16085)
!16099 = !DILocation(line: 1204, column: 16, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !16085, file: !2464, line: 1204, column: 6)
!16101 = !DILocation(line: 1204, column: 7, scope: !16100)
!16102 = !DILocation(line: 1204, column: 6, scope: !16085)
!16103 = !DILocation(line: 1205, column: 7, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !16100, file: !2464, line: 1204, column: 22)
!16105 = !DILocation(line: 1205, column: 22, scope: !16104)
!16106 = !DILocation(line: 1206, column: 2, scope: !16104)
!16107 = !DILocation(line: 1207, column: 1, scope: !16085)
!16108 = !DISubprogram(name: "rb_remove", scope: !335, file: !335, line: 110, type: !16083, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!16109 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2464, file: !2464, line: 1209, type: !16110, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16112)
!16110 = !DISubroutineType(types: !16111)
!16111 = !{!2356, !16019}
!16112 = !{!16113, !16114, !16115}
!16113 = !DILocalVariable(name: "pq", arg: 1, scope: !16109, file: !2464, line: 1209, type: !16019)
!16114 = !DILocalVariable(name: "thread", scope: !16109, file: !2464, line: 1211, type: !2356)
!16115 = !DILocalVariable(name: "n", scope: !16109, file: !2464, line: 1212, type: !2385)
!16116 = !DILocation(line: 0, scope: !16109)
!16117 = !DILocation(line: 1212, column: 37, scope: !16109)
!16118 = !DILocation(line: 1212, column: 21, scope: !16109)
!16119 = !DILocation(line: 1217, column: 2, scope: !16109)
!16120 = distinct !DISubprogram(name: "rb_get_min", scope: !335, file: !335, line: 115, type: !16121, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16123)
!16121 = !DISubroutineType(types: !16122)
!16122 = !{!2385, !16080}
!16123 = !{!16124}
!16124 = !DILocalVariable(name: "tree", arg: 1, scope: !16120, file: !335, line: 115, type: !16080)
!16125 = !DILocation(line: 0, scope: !16120)
!16126 = !DILocation(line: 117, column: 9, scope: !16120)
!16127 = !DILocation(line: 117, column: 2, scope: !16120)
!16128 = !DISubprogram(name: "z_rb_get_minmax", scope: !335, file: !335, line: 100, type: !16129, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2166)
!16129 = !DISubroutineType(types: !16130)
!16130 = !{!2385, !16080, !195}
!16131 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2464, file: !2464, line: 1246, type: !16132, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16140)
!16132 = !DISubroutineType(types: !16133)
!16133 = !{!2356, !16134}
!16134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16135, size: 32)
!16135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16021, line: 53, size: 2080, elements: !16136)
!16136 = !{!16137, !16139}
!16137 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16135, file: !16021, line: 54, baseType: !16138, size: 2048)
!16138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2392, size: 2048, elements: !394)
!16139 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16135, file: !16021, line: 55, baseType: !32, size: 32, offset: 2048)
!16140 = !{!16141, !16142, !16143, !16144}
!16141 = !DILocalVariable(name: "pq", arg: 1, scope: !16131, file: !2464, line: 1246, type: !16134)
!16142 = !DILocalVariable(name: "thread", scope: !16131, file: !2464, line: 1252, type: !2356)
!16143 = !DILocalVariable(name: "l", scope: !16131, file: !2464, line: 1253, type: !14701)
!16144 = !DILocalVariable(name: "n", scope: !16131, file: !2464, line: 1254, type: !2460)
!16145 = !DILocation(line: 0, scope: !16131)
!16146 = !DILocation(line: 1248, column: 11, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16131, file: !2464, line: 1248, column: 6)
!16148 = !DILocation(line: 1248, column: 7, scope: !16147)
!16149 = !DILocation(line: 1248, column: 6, scope: !16131)
!16150 = !DILocation(line: 1253, column: 31, scope: !16131)
!16151 = !DILocation(line: 1253, column: 20, scope: !16131)
!16152 = !DILocation(line: 1254, column: 19, scope: !16131)
!16153 = !DILocation(line: 1260, column: 1, scope: !16131)
!16154 = distinct !DISubprogram(name: "z_unpend_all", scope: !2464, file: !2464, line: 1262, type: !16155, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16157)
!16155 = !DISubroutineType(types: !16156)
!16156 = !{!107, !2387}
!16157 = !{!16158, !16159, !16160}
!16158 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16154, file: !2464, line: 1262, type: !2387)
!16159 = !DILocalVariable(name: "need_sched", scope: !16154, file: !2464, line: 1264, type: !107)
!16160 = !DILocalVariable(name: "thread", scope: !16154, file: !2464, line: 1265, type: !2356)
!16161 = !DILocation(line: 0, scope: !16154)
!16162 = !DILocation(line: 1267, column: 19, scope: !16154)
!16163 = !DILocation(line: 1267, column: 41, scope: !16154)
!16164 = !DILocation(line: 1267, column: 2, scope: !16154)
!16165 = !DILocation(line: 1268, column: 3, scope: !16166)
!16166 = distinct !DILexicalBlock(scope: !16154, file: !2464, line: 1267, column: 50)
!16167 = !DILocation(line: 1269, column: 3, scope: !16166)
!16168 = distinct !{!16168, !16164, !16169}
!16169 = !DILocation(line: 1271, column: 2, scope: !16154)
!16170 = !DILocation(line: 1273, column: 2, scope: !16154)
!16171 = distinct !DISubprogram(name: "z_waitq_head", scope: !13996, file: !13996, line: 52, type: !15702, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16172)
!16172 = !{!16173}
!16173 = !DILocalVariable(name: "w", arg: 1, scope: !16171, file: !13996, line: 52, type: !2387)
!16174 = !DILocation(line: 0, scope: !16171)
!16175 = !DILocation(line: 54, column: 52, scope: !16171)
!16176 = !DILocation(line: 54, column: 28, scope: !16171)
!16177 = !DILocation(line: 54, column: 9, scope: !16171)
!16178 = !DILocation(line: 54, column: 2, scope: !16171)
!16179 = distinct !DISubprogram(name: "init_ready_q", scope: !2464, file: !2464, line: 1276, type: !16180, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16187)
!16180 = !DISubroutineType(types: !16181)
!16181 = !{null, !16182}
!16182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16183, size: 32)
!16183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !16184)
!16184 = !{!16185, !16186}
!16185 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16183, file: !345, line: 86, baseType: !2356, size: 32)
!16186 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16183, file: !345, line: 90, baseType: !2392, size: 64, offset: 32)
!16187 = !{!16188}
!16188 = !DILocalVariable(name: "rq", arg: 1, scope: !16179, file: !2464, line: 1276, type: !16182)
!16189 = !DILocation(line: 0, scope: !16179)
!16190 = !DILocation(line: 1289, column: 22, scope: !16179)
!16191 = !DILocation(line: 1289, column: 2, scope: !16179)
!16192 = !DILocation(line: 1291, column: 1, scope: !16179)
!16193 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !16194, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16196)
!16194 = !DISubroutineType(types: !16195)
!16195 = !{null, !14701}
!16196 = !{!16197}
!16197 = !DILocalVariable(name: "list", arg: 1, scope: !16193, file: !319, line: 197, type: !14701)
!16198 = !DILocation(line: 0, scope: !16193)
!16199 = !DILocation(line: 199, column: 8, scope: !16193)
!16200 = !DILocation(line: 199, column: 13, scope: !16193)
!16201 = !DILocation(line: 200, column: 8, scope: !16193)
!16202 = !DILocation(line: 200, column: 13, scope: !16193)
!16203 = !DILocation(line: 201, column: 1, scope: !16193)
!16204 = distinct !DISubprogram(name: "z_sched_init", scope: !2464, file: !2464, line: 1293, type: !3089, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!16205 = !DILocation(line: 1302, column: 2, scope: !16204)
!16206 = !DILocation(line: 1306, column: 2, scope: !16204)
!16207 = !DILocation(line: 1309, column: 1, scope: !16204)
!16208 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2464, file: !2464, line: 1311, type: !16209, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16212)
!16209 = !DISubroutineType(types: !16210)
!16210 = !{!107, !16211}
!16211 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2356)
!16212 = !{!16213}
!16213 = !DILocalVariable(name: "thread", arg: 1, scope: !16208, file: !2464, line: 1311, type: !16211)
!16214 = !DILocation(line: 0, scope: !16208)
!16215 = !DILocation(line: 1313, column: 22, scope: !16208)
!16216 = !DILocation(line: 1313, column: 9, scope: !16208)
!16217 = !DILocation(line: 1313, column: 2, scope: !16208)
!16218 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2464, file: !2464, line: 1325, type: !16219, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16221)
!16219 = !DISubroutineType(types: !16220)
!16220 = !{null, !16211, !107}
!16221 = !{!16222, !16223, !16224}
!16222 = !DILocalVariable(name: "thread", arg: 1, scope: !16218, file: !2464, line: 1325, type: !16211)
!16223 = !DILocalVariable(name: "prio", arg: 2, scope: !16218, file: !2464, line: 1325, type: !107)
!16224 = !DILocalVariable(name: "th", scope: !16218, file: !2464, line: 1334, type: !2356)
!16225 = !DILocation(line: 0, scope: !16218)
!16226 = !DILocation(line: 1331, column: 2, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16228, file: !2464, line: 1331, column: 2)
!16228 = distinct !DILexicalBlock(scope: !16229, file: !2464, line: 1331, column: 2)
!16229 = distinct !DILexicalBlock(scope: !16218, file: !2464, line: 1331, column: 2)
!16230 = !DILocation(line: 1331, column: 2, scope: !16231)
!16231 = distinct !DILexicalBlock(scope: !16227, file: !2464, line: 1331, column: 2)
!16232 = !DILocation(line: 1031, column: 3, scope: !15202, inlinedAt: !16233)
!16233 = distinct !DILocation(line: 48, column: 10, scope: !15206, inlinedAt: !16234)
!16234 = distinct !DILocation(line: 1332, column: 2, scope: !16235)
!16235 = distinct !DILexicalBlock(scope: !16236, file: !2464, line: 1332, column: 2)
!16236 = distinct !DILexicalBlock(scope: !16218, file: !2464, line: 1332, column: 2)
!16237 = !DILocation(line: 0, scope: !15202, inlinedAt: !16233)
!16238 = !DILocation(line: 48, column: 9, scope: !15206, inlinedAt: !16234)
!16239 = !DILocation(line: 1332, column: 2, scope: !16236)
!16240 = !DILocation(line: 1332, column: 2, scope: !16241)
!16241 = distinct !DILexicalBlock(scope: !16235, file: !2464, line: 1332, column: 2)
!16242 = !DILocation(line: 1336, column: 2, scope: !16218)
!16243 = !DILocation(line: 1337, column: 1, scope: !16218)
!16244 = distinct !DISubprogram(name: "k_can_yield", scope: !2464, file: !2464, line: 1384, type: !7306, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!16245 = !DILocation(line: 1386, column: 11, scope: !16244)
!16246 = !DILocation(line: 1386, column: 29, scope: !16244)
!16247 = !DILocation(line: 1386, column: 32, scope: !16244)
!16248 = !DILocation(line: 1386, column: 46, scope: !16244)
!16249 = !DILocation(line: 1387, column: 28, scope: !16244)
!16250 = !DILocation(line: 1387, column: 4, scope: !16244)
!16251 = !DILocation(line: 1386, column: 2, scope: !16244)
!16252 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !406, file: !406, line: 989, type: !7306, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!16253 = !DILocation(line: 993, column: 10, scope: !16252)
!16254 = !DILocation(line: 993, column: 2, scope: !16252)
!16255 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2464, file: !2464, line: 1390, type: !3089, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16256)
!16256 = !{!16257}
!16257 = !DILocalVariable(name: "key", scope: !16255, file: !2464, line: 1396, type: !14467)
!16258 = !DILocation(line: 1031, column: 3, scope: !15202, inlinedAt: !16259)
!16259 = distinct !DILocation(line: 48, column: 10, scope: !15206, inlinedAt: !16260)
!16260 = distinct !DILocation(line: 1392, column: 2, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16262, file: !2464, line: 1392, column: 2)
!16262 = distinct !DILexicalBlock(scope: !16255, file: !2464, line: 1392, column: 2)
!16263 = !DILocation(line: 0, scope: !15202, inlinedAt: !16259)
!16264 = !DILocation(line: 48, column: 9, scope: !15206, inlinedAt: !16260)
!16265 = !DILocation(line: 1392, column: 2, scope: !16262)
!16266 = !DILocation(line: 1392, column: 2, scope: !16267)
!16267 = distinct !DILexicalBlock(scope: !16261, file: !2464, line: 1392, column: 2)
!16268 = !DILocation(line: 0, scope: !14475, inlinedAt: !16269)
!16269 = distinct !DILocation(line: 1396, column: 25, scope: !16255)
!16270 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !16271)
!16271 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !16269)
!16272 = !DILocation(line: 0, scope: !14484, inlinedAt: !16271)
!16273 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !16269)
!16274 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !16269)
!16275 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16269)
!16276 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !16269)
!16277 = !DILocation(line: 0, scope: !16255)
!16278 = !DILocation(line: 1400, column: 18, scope: !16279)
!16279 = distinct !DILexicalBlock(scope: !16280, file: !2464, line: 1399, column: 36)
!16280 = distinct !DILexicalBlock(scope: !16255, file: !2464, line: 1398, column: 6)
!16281 = !DILocation(line: 0, scope: !14667, inlinedAt: !16282)
!16282 = distinct !DILocation(line: 1400, column: 3, scope: !16279)
!16283 = !DILocation(line: 266, column: 15, scope: !14667, inlinedAt: !16282)
!16284 = !DILocation(line: 266, column: 28, scope: !14667, inlinedAt: !16282)
!16285 = !DILocation(line: 0, scope: !14675, inlinedAt: !16286)
!16286 = distinct !DILocation(line: 268, column: 3, scope: !14679, inlinedAt: !16282)
!16287 = !DILocation(line: 234, column: 2, scope: !14675, inlinedAt: !16286)
!16288 = !DILocation(line: 1402, column: 15, scope: !16255)
!16289 = !DILocation(line: 0, scope: !14684, inlinedAt: !16290)
!16290 = distinct !DILocation(line: 1402, column: 2, scope: !16255)
!16291 = !DILocation(line: 252, column: 15, scope: !14684, inlinedAt: !16290)
!16292 = !DILocation(line: 252, column: 28, scope: !14684, inlinedAt: !16290)
!16293 = !DILocation(line: 0, scope: !14691, inlinedAt: !16294)
!16294 = distinct !DILocation(line: 254, column: 3, scope: !14695, inlinedAt: !16290)
!16295 = !DILocation(line: 0, scope: !14698, inlinedAt: !16296)
!16296 = distinct !DILocation(line: 229, column: 2, scope: !14691, inlinedAt: !16294)
!16297 = !DILocation(line: 186, column: 2, scope: !14708, inlinedAt: !16296)
!16298 = !DILocation(line: 186, column: 2, scope: !14709, inlinedAt: !16296)
!16299 = !DILocation(line: 186, column: 2, scope: !14712, inlinedAt: !16296)
!16300 = !DILocation(line: 188, column: 2, scope: !14714, inlinedAt: !16296)
!16301 = !DILocation(line: 188, column: 2, scope: !14716, inlinedAt: !16296)
!16302 = !DILocation(line: 0, scope: !14714, inlinedAt: !16296)
!16303 = !DILocation(line: 189, column: 7, scope: !14719, inlinedAt: !16296)
!16304 = !DILocation(line: 189, column: 35, scope: !14719, inlinedAt: !16296)
!16305 = !DILocation(line: 189, column: 7, scope: !14720, inlinedAt: !16296)
!16306 = !DILocation(line: 191, column: 21, scope: !14724, inlinedAt: !16296)
!16307 = !DILocation(line: 190, column: 4, scope: !14724, inlinedAt: !16296)
!16308 = !DILocation(line: 192, column: 4, scope: !14724, inlinedAt: !16296)
!16309 = distinct !{!16309, !16300, !16310}
!16310 = !DILocation(line: 194, column: 2, scope: !14714, inlinedAt: !16296)
!16311 = !DILocation(line: 196, column: 37, scope: !14698, inlinedAt: !16296)
!16312 = !DILocation(line: 196, column: 2, scope: !14698, inlinedAt: !16296)
!16313 = !DILocation(line: 197, column: 1, scope: !14698, inlinedAt: !16296)
!16314 = !DILocation(line: 1403, column: 2, scope: !16255)
!16315 = !DILocation(line: 0, scope: !15153, inlinedAt: !16316)
!16316 = distinct !DILocation(line: 1404, column: 2, scope: !16255)
!16317 = !DILocation(line: 0, scope: !15162, inlinedAt: !16318)
!16318 = distinct !DILocation(line: 195, column: 2, scope: !15153, inlinedAt: !16316)
!16319 = !DILocation(line: 225, column: 2, scope: !15169, inlinedAt: !16318)
!16320 = !DILocation(line: 225, column: 2, scope: !15170, inlinedAt: !16318)
!16321 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !16318)
!16322 = !DILocation(line: 196, column: 9, scope: !15153, inlinedAt: !16316)
!16323 = !DILocation(line: 1405, column: 1, scope: !16255)
!16324 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2464, file: !2464, line: 1459, type: !16325, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16327)
!16325 = !DISubroutineType(types: !16326)
!16326 = !{!896, !15363}
!16327 = !{!16328, !16329, !16330}
!16328 = !DILocalVariable(name: "timeout", arg: 1, scope: !16324, file: !2464, line: 1459, type: !15363)
!16329 = !DILocalVariable(name: "ticks", scope: !16324, file: !2464, line: 1461, type: !564)
!16330 = !DILocalVariable(name: "ret", scope: !16324, file: !2464, line: 1480, type: !896)
!16331 = !DILocation(line: 0, scope: !16324)
!16332 = !DILocation(line: 1031, column: 3, scope: !15202, inlinedAt: !16333)
!16333 = distinct !DILocation(line: 48, column: 10, scope: !15206, inlinedAt: !16334)
!16334 = distinct !DILocation(line: 1463, column: 2, scope: !16335)
!16335 = distinct !DILexicalBlock(scope: !16336, file: !2464, line: 1463, column: 2)
!16336 = distinct !DILexicalBlock(scope: !16324, file: !2464, line: 1463, column: 2)
!16337 = !DILocation(line: 0, scope: !15202, inlinedAt: !16333)
!16338 = !DILocation(line: 48, column: 9, scope: !15206, inlinedAt: !16334)
!16339 = !DILocation(line: 1463, column: 2, scope: !16336)
!16340 = !DILocation(line: 1463, column: 2, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16335, file: !2464, line: 1463, column: 2)
!16342 = !DILocation(line: 1468, column: 6, scope: !16343)
!16343 = distinct !DILexicalBlock(scope: !16324, file: !2464, line: 1468, column: 6)
!16344 = !DILocation(line: 1468, column: 6, scope: !16324)
!16345 = !DILocation(line: 1469, column: 20, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !16343, file: !2464, line: 1468, column: 40)
!16347 = !DILocation(line: 1469, column: 3, scope: !16346)
!16348 = !DILocation(line: 1473, column: 3, scope: !16346)
!16349 = !DILocation(line: 1478, column: 10, scope: !16324)
!16350 = !DILocation(line: 1480, column: 16, scope: !16324)
!16351 = !DILocation(line: 1485, column: 1, scope: !16324)
!16352 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4417, file: !4417, line: 310, type: !16353, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16355)
!16353 = !DISubroutineType(types: !16354)
!16354 = !{null, !16211}
!16355 = !{!16356}
!16356 = !DILocalVariable(name: "thread", arg: 1, scope: !16352, file: !4417, line: 310, type: !16211)
!16357 = !DILocation(line: 0, scope: !16352)
!16358 = !DILocation(line: 319, column: 2, scope: !16359)
!16359 = distinct !DILexicalBlock(scope: !16352, file: !4417, line: 319, column: 2)
!16360 = !{i64 2154893699}
!16361 = !DILocation(line: 320, column: 2, scope: !16352)
!16362 = !DILocation(line: 321, column: 1, scope: !16352)
!16363 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2464, file: !2464, line: 1415, type: !16364, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16366)
!16364 = !DISubroutineType(types: !16365)
!16365 = !{!896, !564}
!16366 = !{!16367, !16368, !16369, !16370}
!16367 = !DILocalVariable(name: "ticks", arg: 1, scope: !16363, file: !2464, line: 1415, type: !564)
!16368 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16363, file: !2464, line: 1418, type: !152)
!16369 = !DILocalVariable(name: "timeout", scope: !16363, file: !2464, line: 1430, type: !15363)
!16370 = !DILocalVariable(name: "key", scope: !16363, file: !2464, line: 1437, type: !14467)
!16371 = !DILocation(line: 0, scope: !16363)
!16372 = !DILocation(line: 1031, column: 3, scope: !15202, inlinedAt: !16373)
!16373 = distinct !DILocation(line: 48, column: 10, scope: !15206, inlinedAt: !16374)
!16374 = distinct !DILocation(line: 1420, column: 2, scope: !16375)
!16375 = distinct !DILexicalBlock(scope: !16376, file: !2464, line: 1420, column: 2)
!16376 = distinct !DILexicalBlock(scope: !16363, file: !2464, line: 1420, column: 2)
!16377 = !DILocation(line: 0, scope: !15202, inlinedAt: !16373)
!16378 = !DILocation(line: 48, column: 9, scope: !15206, inlinedAt: !16374)
!16379 = !DILocation(line: 1420, column: 2, scope: !16376)
!16380 = !DILocation(line: 1420, column: 2, scope: !16381)
!16381 = distinct !DILexicalBlock(scope: !16375, file: !2464, line: 1420, column: 2)
!16382 = !DILocation(line: 1425, column: 12, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16363, file: !2464, line: 1425, column: 6)
!16384 = !DILocation(line: 1425, column: 6, scope: !16363)
!16385 = !DILocation(line: 1426, column: 3, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16383, file: !2464, line: 1425, column: 18)
!16387 = !DILocation(line: 1427, column: 3, scope: !16386)
!16388 = !DILocation(line: 1431, column: 24, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16363, file: !2464, line: 1431, column: 6)
!16390 = !DILocation(line: 1431, column: 6, scope: !16363)
!16391 = !DILocation(line: 1432, column: 35, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !16389, file: !2464, line: 1431, column: 30)
!16393 = !DILocation(line: 1432, column: 27, scope: !16392)
!16394 = !DILocation(line: 1433, column: 2, scope: !16392)
!16395 = !DILocation(line: 1434, column: 27, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !16389, file: !2464, line: 1433, column: 9)
!16397 = !DILocation(line: 0, scope: !16389)
!16398 = !DILocation(line: 0, scope: !14475, inlinedAt: !16399)
!16399 = distinct !DILocation(line: 1437, column: 25, scope: !16363)
!16400 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !16401)
!16401 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !16399)
!16402 = !DILocation(line: 0, scope: !14484, inlinedAt: !16401)
!16403 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !16399)
!16404 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !16399)
!16405 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16399)
!16406 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !16399)
!16407 = !DILocation(line: 1440, column: 20, scope: !16363)
!16408 = !DILocation(line: 1440, column: 18, scope: !16363)
!16409 = !DILocation(line: 1442, column: 2, scope: !16363)
!16410 = !DILocation(line: 1443, column: 23, scope: !16363)
!16411 = !DILocation(line: 1443, column: 2, scope: !16363)
!16412 = !DILocation(line: 1444, column: 29, scope: !16363)
!16413 = !DILocation(line: 1444, column: 2, scope: !16363)
!16414 = !DILocation(line: 0, scope: !15153, inlinedAt: !16415)
!16415 = distinct !DILocation(line: 1446, column: 8, scope: !16363)
!16416 = !DILocation(line: 0, scope: !15162, inlinedAt: !16417)
!16417 = distinct !DILocation(line: 195, column: 2, scope: !15153, inlinedAt: !16415)
!16418 = !DILocation(line: 225, column: 2, scope: !15169, inlinedAt: !16417)
!16419 = !DILocation(line: 225, column: 2, scope: !15170, inlinedAt: !16417)
!16420 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !16417)
!16421 = !DILocation(line: 196, column: 9, scope: !15153, inlinedAt: !16415)
!16422 = !DILocation(line: 1448, column: 2, scope: !16423)
!16423 = distinct !DILexicalBlock(scope: !16424, file: !2464, line: 1448, column: 2)
!16424 = distinct !DILexicalBlock(scope: !16363, file: !2464, line: 1448, column: 2)
!16425 = !DILocation(line: 1448, column: 2, scope: !16424)
!16426 = !DILocation(line: 1448, column: 2, scope: !16427)
!16427 = distinct !DILexicalBlock(scope: !16423, file: !2464, line: 1448, column: 2)
!16428 = !DILocation(line: 1450, column: 10, scope: !16363)
!16429 = !DILocation(line: 1450, column: 45, scope: !16363)
!16430 = !DILocation(line: 1450, column: 43, scope: !16363)
!16431 = !DILocation(line: 1451, column: 6, scope: !16363)
!16432 = !DILocation(line: 1457, column: 1, scope: !16363)
!16433 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8721, file: !8721, line: 1103, type: !14254, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16434)
!16434 = !{!16435}
!16435 = !DILocalVariable(name: "t", arg: 1, scope: !16433, file: !8721, line: 1103, type: !566)
!16436 = !DILocation(line: 0, scope: !16433)
!16437 = !DILocation(line: 0, scope: !14535, inlinedAt: !16438)
!16438 = distinct !DILocation(line: 1106, column: 9, scope: !16433)
!16439 = !DILocation(line: 139, column: 13, scope: !16440, inlinedAt: !16438)
!16440 = distinct !DILexicalBlock(scope: !16441, file: !8721, line: 138, column: 10)
!16441 = distinct !DILexicalBlock(scope: !16442, file: !8721, line: 136, column: 7)
!16442 = distinct !DILexicalBlock(scope: !14556, file: !8721, line: 134, column: 17)
!16443 = !DILocation(line: 1106, column: 2, scope: !16433)
!16444 = distinct !DISubprogram(name: "k_yield", scope: !4417, file: !4417, line: 140, type: !3089, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!16445 = !DILocation(line: 148, column: 2, scope: !16446)
!16446 = distinct !DILexicalBlock(scope: !16444, file: !4417, line: 148, column: 2)
!16447 = !{i64 2154893019}
!16448 = !DILocation(line: 149, column: 2, scope: !16444)
!16449 = !DILocation(line: 150, column: 1, scope: !16444)
!16450 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2464, file: !2464, line: 1495, type: !16451, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16453)
!16451 = !DISubroutineType(types: !16452)
!16452 = !{!896, !107}
!16453 = !{!16454, !16455}
!16454 = !DILocalVariable(name: "us", arg: 1, scope: !16450, file: !2464, line: 1495, type: !107)
!16455 = !DILocalVariable(name: "ticks", scope: !16450, file: !2464, line: 1497, type: !896)
!16456 = !DILocation(line: 0, scope: !16450)
!16457 = !DILocation(line: 1501, column: 31, scope: !16450)
!16458 = !DILocation(line: 1501, column: 10, scope: !16450)
!16459 = !DILocation(line: 1502, column: 23, scope: !16450)
!16460 = !DILocation(line: 1502, column: 10, scope: !16450)
!16461 = !DILocation(line: 1506, column: 31, scope: !16450)
!16462 = !DILocation(line: 1506, column: 9, scope: !16450)
!16463 = !DILocation(line: 1506, column: 2, scope: !16450)
!16464 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8721, file: !8721, line: 571, type: !14254, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16465)
!16465 = !{!16466}
!16466 = !DILocalVariable(name: "t", arg: 1, scope: !16464, file: !8721, line: 571, type: !566)
!16467 = !DILocation(line: 0, scope: !16464)
!16468 = !DILocation(line: 0, scope: !14535, inlinedAt: !16469)
!16469 = distinct !DILocation(line: 574, column: 9, scope: !16464)
!16470 = !DILocation(line: 135, column: 5, scope: !16442, inlinedAt: !16469)
!16471 = !DILocation(line: 139, column: 13, scope: !16440, inlinedAt: !16469)
!16472 = !DILocation(line: 574, column: 2, scope: !16464)
!16473 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8721, file: !8721, line: 1187, type: !14254, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16474)
!16474 = !{!16475}
!16475 = !DILocalVariable(name: "t", arg: 1, scope: !16473, file: !8721, line: 1187, type: !566)
!16476 = !DILocation(line: 0, scope: !16473)
!16477 = !DILocation(line: 0, scope: !14535, inlinedAt: !16478)
!16478 = distinct !DILocation(line: 1190, column: 9, scope: !16473)
!16479 = !DILocation(line: 145, column: 13, scope: !16480, inlinedAt: !16478)
!16480 = distinct !DILexicalBlock(scope: !14553, file: !8721, line: 144, column: 10)
!16481 = !DILocation(line: 1190, column: 2, scope: !16473)
!16482 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2464, file: !2464, line: 1517, type: !16353, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16483)
!16483 = !{!16484}
!16484 = !DILocalVariable(name: "thread", arg: 1, scope: !16482, file: !2464, line: 1517, type: !16211)
!16485 = !DILocation(line: 0, scope: !16482)
!16486 = !DILocation(line: 1521, column: 6, scope: !16487)
!16487 = distinct !DILexicalBlock(scope: !16482, file: !2464, line: 1521, column: 6)
!16488 = !DILocation(line: 1521, column: 6, scope: !16482)
!16489 = !DILocation(line: 1525, column: 6, scope: !16490)
!16490 = distinct !DILexicalBlock(scope: !16482, file: !2464, line: 1525, column: 6)
!16491 = !DILocation(line: 1525, column: 37, scope: !16490)
!16492 = !DILocation(line: 1525, column: 6, scope: !16482)
!16493 = !DILocation(line: 1527, column: 20, scope: !16494)
!16494 = distinct !DILexicalBlock(scope: !16495, file: !2464, line: 1527, column: 7)
!16495 = distinct !DILexicalBlock(scope: !16490, file: !2464, line: 1525, column: 42)
!16496 = !DILocation(line: 1527, column: 33, scope: !16494)
!16497 = !DILocation(line: 1527, column: 7, scope: !16495)
!16498 = !DILocation(line: 1532, column: 2, scope: !16482)
!16499 = !DILocation(line: 1533, column: 2, scope: !16482)
!16500 = !DILocation(line: 1031, column: 3, scope: !15202, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 48, column: 10, scope: !15206, inlinedAt: !16502)
!16502 = distinct !DILocation(line: 1537, column: 7, scope: !16503)
!16503 = distinct !DILexicalBlock(scope: !16482, file: !2464, line: 1537, column: 6)
!16504 = !DILocation(line: 0, scope: !15202, inlinedAt: !16501)
!16505 = !DILocation(line: 48, column: 9, scope: !15206, inlinedAt: !16502)
!16506 = !DILocation(line: 1537, column: 6, scope: !16482)
!16507 = !DILocation(line: 1538, column: 3, scope: !16508)
!16508 = distinct !DILexicalBlock(scope: !16503, file: !2464, line: 1537, column: 25)
!16509 = !DILocation(line: 1539, column: 2, scope: !16508)
!16510 = !DILocation(line: 1540, column: 1, scope: !16482)
!16511 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13635, file: !13635, line: 101, type: !14616, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16512)
!16512 = !{!16513}
!16513 = !DILocalVariable(name: "thread", arg: 1, scope: !16511, file: !13635, line: 101, type: !2356)
!16514 = !DILocation(line: 0, scope: !16511)
!16515 = !DILocation(line: 103, column: 23, scope: !16511)
!16516 = !DILocation(line: 103, column: 36, scope: !16511)
!16517 = !DILocation(line: 103, column: 55, scope: !16511)
!16518 = !DILocation(line: 103, column: 2, scope: !16511)
!16519 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2464, file: !2464, line: 1567, type: !16520, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16522)
!16520 = !DISubroutineType(types: !16521)
!16521 = !{!16211}
!16522 = !{!16523}
!16523 = !DILocalVariable(name: "ret", scope: !16519, file: !2464, line: 1577, type: !16211)
!16524 = !DILocation(line: 1577, column: 30, scope: !16519)
!16525 = !DILocation(line: 0, scope: !16519)
!16526 = !DILocation(line: 1582, column: 2, scope: !16519)
!16527 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2464, file: !2464, line: 1593, type: !7609, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2166)
!16528 = !DILocation(line: 1031, column: 3, scope: !15202, inlinedAt: !16529)
!16529 = distinct !DILocation(line: 48, column: 10, scope: !15206, inlinedAt: !16530)
!16530 = distinct !DILocation(line: 1595, column: 10, scope: !16527)
!16531 = !DILocation(line: 0, scope: !15202, inlinedAt: !16529)
!16532 = !DILocation(line: 48, column: 9, scope: !15206, inlinedAt: !16530)
!16533 = !DILocation(line: 1595, column: 27, scope: !16527)
!16534 = !DILocation(line: 1595, column: 41, scope: !16527)
!16535 = !DILocation(line: 1595, column: 30, scope: !16527)
!16536 = !DILocation(line: 1595, column: 2, scope: !16527)
!16537 = distinct !DISubprogram(name: "z_thread_abort", scope: !2464, file: !2464, line: 1725, type: !14433, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16538)
!16538 = !{!16539, !16540}
!16539 = !DILocalVariable(name: "thread", arg: 1, scope: !16537, file: !2464, line: 1725, type: !2356)
!16540 = !DILocalVariable(name: "key", scope: !16537, file: !2464, line: 1727, type: !14467)
!16541 = !DILocation(line: 0, scope: !16537)
!16542 = !DILocation(line: 0, scope: !14475, inlinedAt: !16543)
!16543 = distinct !DILocation(line: 1727, column: 25, scope: !16537)
!16544 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !16545)
!16545 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !16543)
!16546 = !DILocation(line: 0, scope: !14484, inlinedAt: !16545)
!16547 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !16543)
!16548 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !16543)
!16549 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16543)
!16550 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !16543)
!16551 = !DILocation(line: 1729, column: 20, scope: !16552)
!16552 = distinct !DILexicalBlock(scope: !16537, file: !2464, line: 1729, column: 6)
!16553 = !DILocation(line: 1729, column: 33, scope: !16552)
!16554 = !DILocation(line: 1729, column: 48, scope: !16552)
!16555 = !DILocation(line: 1729, column: 6, scope: !16537)
!16556 = !DILocation(line: 0, scope: !14509, inlinedAt: !16557)
!16557 = distinct !DILocation(line: 1730, column: 3, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16552, file: !2464, line: 1729, column: 54)
!16559 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !16557)
!16560 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !16557)
!16561 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16557)
!16562 = !DILocation(line: 0, scope: !14523, inlinedAt: !16563)
!16563 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !16557)
!16564 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !16563)
!16565 = !DILocation(line: 1731, column: 3, scope: !16566)
!16566 = distinct !DILexicalBlock(scope: !16567, file: !2464, line: 1731, column: 3)
!16567 = distinct !DILexicalBlock(scope: !16568, file: !2464, line: 1731, column: 3)
!16568 = distinct !DILexicalBlock(scope: !16558, file: !2464, line: 1731, column: 3)
!16569 = !DILocation(line: 1736, column: 20, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16537, file: !2464, line: 1736, column: 6)
!16571 = !DILocation(line: 1736, column: 33, scope: !16570)
!16572 = !DILocation(line: 1736, column: 49, scope: !16570)
!16573 = !DILocation(line: 1736, column: 6, scope: !16537)
!16574 = !DILocation(line: 0, scope: !14509, inlinedAt: !16575)
!16575 = distinct !DILocation(line: 1737, column: 3, scope: !16576)
!16576 = distinct !DILexicalBlock(scope: !16570, file: !2464, line: 1736, column: 56)
!16577 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !16575)
!16578 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !16575)
!16579 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16575)
!16580 = !DILocation(line: 0, scope: !14523, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !16575)
!16582 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !16581)
!16583 = !DILocation(line: 1738, column: 3, scope: !16576)
!16584 = !DILocation(line: 1775, column: 2, scope: !16537)
!16585 = !DILocation(line: 1776, column: 16, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16537, file: !2464, line: 1776, column: 6)
!16587 = !DILocation(line: 1776, column: 13, scope: !16586)
!16588 = !DILocation(line: 1776, column: 25, scope: !16586)
!16589 = !DILocation(line: 1031, column: 3, scope: !15202, inlinedAt: !16590)
!16590 = distinct !DILocation(line: 48, column: 10, scope: !15206, inlinedAt: !16591)
!16591 = distinct !DILocation(line: 1776, column: 29, scope: !16586)
!16592 = !DILocation(line: 0, scope: !15202, inlinedAt: !16590)
!16593 = !DILocation(line: 48, column: 9, scope: !15206, inlinedAt: !16591)
!16594 = !DILocation(line: 1776, column: 6, scope: !16537)
!16595 = !DILocation(line: 0, scope: !15153, inlinedAt: !16596)
!16596 = distinct !DILocation(line: 1777, column: 3, scope: !16597)
!16597 = distinct !DILexicalBlock(scope: !16586, file: !2464, line: 1776, column: 47)
!16598 = !DILocation(line: 0, scope: !15162, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 195, column: 2, scope: !15153, inlinedAt: !16596)
!16600 = !DILocation(line: 225, column: 2, scope: !15169, inlinedAt: !16599)
!16601 = !DILocation(line: 225, column: 2, scope: !15170, inlinedAt: !16599)
!16602 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !16599)
!16603 = !DILocation(line: 196, column: 9, scope: !15153, inlinedAt: !16596)
!16604 = !DILocation(line: 1778, column: 3, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16606, file: !2464, line: 1778, column: 3)
!16606 = distinct !DILexicalBlock(scope: !16607, file: !2464, line: 1778, column: 3)
!16607 = distinct !DILexicalBlock(scope: !16597, file: !2464, line: 1778, column: 3)
!16608 = !DILocation(line: 0, scope: !14509, inlinedAt: !16609)
!16609 = distinct !DILocation(line: 1780, column: 2, scope: !16537)
!16610 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !16609)
!16611 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !16609)
!16612 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16609)
!16613 = !DILocation(line: 0, scope: !14523, inlinedAt: !16614)
!16614 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !16609)
!16615 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !16614)
!16616 = !DILocation(line: 1781, column: 1, scope: !16537)
!16617 = distinct !DISubprogram(name: "end_thread", scope: !2464, file: !2464, line: 1690, type: !14433, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16618)
!16618 = !{!16619}
!16619 = !DILocalVariable(name: "thread", arg: 1, scope: !16617, file: !2464, line: 1690, type: !2356)
!16620 = !DILocation(line: 0, scope: !16617)
!16621 = !DILocation(line: 1695, column: 20, scope: !16622)
!16622 = distinct !DILexicalBlock(scope: !16617, file: !2464, line: 1695, column: 6)
!16623 = !DILocation(line: 1695, column: 33, scope: !16622)
!16624 = !DILocation(line: 1695, column: 49, scope: !16622)
!16625 = !DILocation(line: 1695, column: 6, scope: !16617)
!16626 = !DILocation(line: 1697, column: 29, scope: !16627)
!16627 = distinct !DILexicalBlock(scope: !16622, file: !2464, line: 1695, column: 56)
!16628 = !DILocation(line: 1698, column: 7, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16627, file: !2464, line: 1698, column: 7)
!16630 = !DILocation(line: 1698, column: 7, scope: !16627)
!16631 = !DILocation(line: 0, scope: !14667, inlinedAt: !16632)
!16632 = distinct !DILocation(line: 1699, column: 4, scope: !16633)
!16633 = distinct !DILexicalBlock(scope: !16629, file: !2464, line: 1698, column: 35)
!16634 = !DILocation(line: 266, column: 28, scope: !14667, inlinedAt: !16632)
!16635 = !DILocation(line: 0, scope: !14675, inlinedAt: !16636)
!16636 = distinct !DILocation(line: 268, column: 3, scope: !14679, inlinedAt: !16632)
!16637 = !DILocation(line: 234, column: 2, scope: !14675, inlinedAt: !16636)
!16638 = !DILocation(line: 1700, column: 3, scope: !16633)
!16639 = !DILocation(line: 1701, column: 20, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16627, file: !2464, line: 1701, column: 7)
!16641 = !DILocation(line: 1701, column: 30, scope: !16640)
!16642 = !DILocation(line: 1701, column: 7, scope: !16627)
!16643 = !DILocation(line: 1702, column: 4, scope: !16644)
!16644 = distinct !DILexicalBlock(scope: !16640, file: !2464, line: 1701, column: 39)
!16645 = !DILocation(line: 1703, column: 3, scope: !16644)
!16646 = !DILocation(line: 1704, column: 9, scope: !16627)
!16647 = !DILocation(line: 1705, column: 23, scope: !16627)
!16648 = !DILocation(line: 1705, column: 3, scope: !16627)
!16649 = !DILocation(line: 1706, column: 3, scope: !16627)
!16650 = !DILocation(line: 1722, column: 2, scope: !16627)
!16651 = !DILocation(line: 1723, column: 1, scope: !16617)
!16652 = distinct !DISubprogram(name: "unpend_all", scope: !2464, file: !2464, line: 1674, type: !16653, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16655)
!16653 = !DISubroutineType(types: !16654)
!16654 = !{null, !2387}
!16655 = !{!16656, !16657}
!16656 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16652, file: !2464, line: 1674, type: !2387)
!16657 = !DILocalVariable(name: "thread", scope: !16652, file: !2464, line: 1676, type: !2356)
!16658 = !DILocation(line: 0, scope: !16652)
!16659 = !DILocation(line: 1678, column: 19, scope: !16652)
!16660 = !DILocation(line: 1678, column: 41, scope: !16652)
!16661 = !DILocation(line: 1678, column: 2, scope: !16652)
!16662 = !DILocation(line: 1679, column: 3, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16652, file: !2464, line: 1678, column: 50)
!16664 = !DILocation(line: 1680, column: 9, scope: !16663)
!16665 = !DILocalVariable(name: "thread", arg: 1, scope: !16666, file: !13655, line: 65, type: !2356)
!16666 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13655, file: !13655, line: 65, type: !16667, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16669)
!16667 = !DISubroutineType(types: !16668)
!16668 = !{null, !2356, !32}
!16669 = !{!16665, !16670}
!16670 = !DILocalVariable(name: "value", arg: 2, scope: !16666, file: !13655, line: 65, type: !32)
!16671 = !DILocation(line: 0, scope: !16666, inlinedAt: !16672)
!16672 = distinct !DILocation(line: 1681, column: 3, scope: !16663)
!16673 = !DILocation(line: 67, column: 15, scope: !16666, inlinedAt: !16672)
!16674 = !DILocation(line: 67, column: 33, scope: !16666, inlinedAt: !16672)
!16675 = !DILocation(line: 1682, column: 3, scope: !16663)
!16676 = distinct !{!16676, !16661, !16677}
!16677 = !DILocation(line: 1683, column: 2, scope: !16652)
!16678 = !DILocation(line: 1684, column: 1, scope: !16652)
!16679 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2464, file: !2464, line: 1794, type: !16680, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16682)
!16680 = !DISubroutineType(types: !16681)
!16681 = !{!107, !2356, !15363}
!16682 = !{!16683, !16684, !16685, !16686}
!16683 = !DILocalVariable(name: "thread", arg: 1, scope: !16679, file: !2464, line: 1794, type: !2356)
!16684 = !DILocalVariable(name: "timeout", arg: 2, scope: !16679, file: !2464, line: 1794, type: !15363)
!16685 = !DILocalVariable(name: "key", scope: !16679, file: !2464, line: 1796, type: !14467)
!16686 = !DILocalVariable(name: "ret", scope: !16679, file: !2464, line: 1797, type: !107)
!16687 = !DILocation(line: 0, scope: !16679)
!16688 = !DILocation(line: 0, scope: !14475, inlinedAt: !16689)
!16689 = distinct !DILocation(line: 1796, column: 25, scope: !16679)
!16690 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !16691)
!16691 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !16689)
!16692 = !DILocation(line: 0, scope: !14484, inlinedAt: !16691)
!16693 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !16689)
!16694 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !16689)
!16695 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16689)
!16696 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !16689)
!16697 = !DILocation(line: 1801, column: 20, scope: !16698)
!16698 = distinct !DILexicalBlock(scope: !16679, file: !2464, line: 1801, column: 6)
!16699 = !DILocation(line: 1801, column: 33, scope: !16698)
!16700 = !DILocation(line: 1801, column: 49, scope: !16698)
!16701 = !DILocation(line: 1801, column: 6, scope: !16679)
!16702 = !DILocation(line: 1803, column: 13, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16698, file: !2464, line: 1803, column: 13)
!16704 = !DILocation(line: 1803, column: 13, scope: !16698)
!16705 = !DILocation(line: 1805, column: 24, scope: !16706)
!16706 = distinct !DILexicalBlock(scope: !16703, file: !2464, line: 1805, column: 13)
!16707 = !DILocation(line: 1805, column: 21, scope: !16706)
!16708 = !DILocation(line: 1805, column: 34, scope: !16706)
!16709 = !DILocation(line: 1806, column: 20, scope: !16706)
!16710 = !DILocation(line: 1806, column: 44, scope: !16706)
!16711 = !DILocation(line: 1806, column: 30, scope: !16706)
!16712 = !DILocation(line: 1805, column: 13, scope: !16703)
!16713 = !DILocation(line: 1031, column: 3, scope: !15202, inlinedAt: !16714)
!16714 = distinct !DILocation(line: 48, column: 10, scope: !15206, inlinedAt: !16715)
!16715 = distinct !DILocation(line: 1809, column: 3, scope: !16716)
!16716 = distinct !DILexicalBlock(scope: !16717, file: !2464, line: 1809, column: 3)
!16717 = distinct !DILexicalBlock(scope: !16718, file: !2464, line: 1809, column: 3)
!16718 = distinct !DILexicalBlock(scope: !16706, file: !2464, line: 1808, column: 9)
!16719 = !DILocation(line: 0, scope: !15202, inlinedAt: !16714)
!16720 = !DILocation(line: 48, column: 9, scope: !15206, inlinedAt: !16715)
!16721 = !DILocation(line: 1809, column: 3, scope: !16717)
!16722 = !DILocation(line: 1809, column: 3, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16716, file: !2464, line: 1809, column: 3)
!16724 = !DILocation(line: 1810, column: 23, scope: !16718)
!16725 = !DILocation(line: 1810, column: 42, scope: !16718)
!16726 = !DILocation(line: 1810, column: 3, scope: !16718)
!16727 = !DILocation(line: 1811, column: 22, scope: !16718)
!16728 = !DILocation(line: 1811, column: 3, scope: !16718)
!16729 = !DILocation(line: 0, scope: !15153, inlinedAt: !16730)
!16730 = distinct !DILocation(line: 1814, column: 9, scope: !16718)
!16731 = !DILocation(line: 0, scope: !15162, inlinedAt: !16732)
!16732 = distinct !DILocation(line: 195, column: 2, scope: !15153, inlinedAt: !16730)
!16733 = !DILocation(line: 225, column: 2, scope: !15169, inlinedAt: !16732)
!16734 = !DILocation(line: 225, column: 2, scope: !15170, inlinedAt: !16732)
!16735 = !DILocation(line: 225, column: 2, scope: !15173, inlinedAt: !16732)
!16736 = !DILocation(line: 196, column: 9, scope: !15153, inlinedAt: !16730)
!16737 = !DILocation(line: 1817, column: 3, scope: !16718)
!16738 = !DILocation(line: 0, scope: !16698)
!16739 = !DILocation(line: 0, scope: !14509, inlinedAt: !16740)
!16740 = distinct !DILocation(line: 1822, column: 2, scope: !16679)
!16741 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !16740)
!16742 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !16740)
!16743 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16740)
!16744 = !DILocation(line: 0, scope: !14523, inlinedAt: !16745)
!16745 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !16740)
!16746 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !16745)
!16747 = !DILocation(line: 1823, column: 2, scope: !16679)
!16748 = !DILocation(line: 1824, column: 1, scope: !16679)
!16749 = distinct !DISubprogram(name: "z_sched_wake", scope: !2464, file: !2464, line: 1882, type: !16750, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16752)
!16750 = !DISubroutineType(types: !16751)
!16751 = !{!145, !2387, !107, !106}
!16752 = !{!16753, !16754, !16755, !16756, !16757, !16758, !16760}
!16753 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16749, file: !2464, line: 1882, type: !2387)
!16754 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16749, file: !2464, line: 1882, type: !107)
!16755 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16749, file: !2464, line: 1882, type: !106)
!16756 = !DILocalVariable(name: "thread", scope: !16749, file: !2464, line: 1884, type: !2356)
!16757 = !DILocalVariable(name: "ret", scope: !16749, file: !2464, line: 1885, type: !145)
!16758 = !DILocalVariable(name: "__i", scope: !16759, file: !2464, line: 1887, type: !14467)
!16759 = distinct !DILexicalBlock(scope: !16749, file: !2464, line: 1887, column: 2)
!16760 = !DILocalVariable(name: "__key", scope: !16759, file: !2464, line: 1887, type: !14467)
!16761 = !DILocation(line: 0, scope: !16749)
!16762 = !DILocation(line: 0, scope: !16759)
!16763 = !DILocation(line: 0, scope: !14475, inlinedAt: !16764)
!16764 = distinct !DILocation(line: 1887, column: 2, scope: !16759)
!16765 = !DILocation(line: 55, column: 2, scope: !14484, inlinedAt: !16766)
!16766 = distinct !DILocation(line: 145, column: 10, scope: !14475, inlinedAt: !16764)
!16767 = !DILocation(line: 0, scope: !14484, inlinedAt: !16766)
!16768 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !16764)
!16769 = !DILocation(line: 148, column: 2, scope: !14493, inlinedAt: !16764)
!16770 = !DILocation(line: 148, column: 2, scope: !14496, inlinedAt: !16764)
!16771 = !DILocation(line: 160, column: 2, scope: !14475, inlinedAt: !16764)
!16772 = !DILocation(line: 1888, column: 12, scope: !16773)
!16773 = distinct !DILexicalBlock(scope: !16774, file: !2464, line: 1887, column: 26)
!16774 = distinct !DILexicalBlock(scope: !16759, file: !2464, line: 1887, column: 2)
!16775 = !DILocation(line: 1890, column: 14, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16773, file: !2464, line: 1890, column: 7)
!16777 = !DILocation(line: 1890, column: 7, scope: !16773)
!16778 = !DILocalVariable(name: "thread", arg: 1, scope: !16779, file: !16780, line: 134, type: !2356)
!16779 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16780, file: !16780, line: 134, type: !16781, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16783)
!16780 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16781 = !DISubroutineType(types: !16782)
!16782 = !{null, !2356, !32, !106}
!16783 = !{!16778, !16784, !16785}
!16784 = !DILocalVariable(name: "value", arg: 2, scope: !16779, file: !16780, line: 135, type: !32)
!16785 = !DILocalVariable(name: "data", arg: 3, scope: !16779, file: !16780, line: 136, type: !106)
!16786 = !DILocation(line: 0, scope: !16779, inlinedAt: !16787)
!16787 = distinct !DILocation(line: 1891, column: 4, scope: !16788)
!16788 = distinct !DILexicalBlock(scope: !16776, file: !2464, line: 1890, column: 23)
!16789 = !DILocation(line: 0, scope: !16666, inlinedAt: !16790)
!16790 = distinct !DILocation(line: 138, column: 2, scope: !16779, inlinedAt: !16787)
!16791 = !DILocation(line: 67, column: 15, scope: !16666, inlinedAt: !16790)
!16792 = !DILocation(line: 67, column: 33, scope: !16666, inlinedAt: !16790)
!16793 = !DILocation(line: 139, column: 15, scope: !16779, inlinedAt: !16787)
!16794 = !DILocation(line: 139, column: 25, scope: !16779, inlinedAt: !16787)
!16795 = !DILocation(line: 1894, column: 4, scope: !16788)
!16796 = !DILocation(line: 1895, column: 10, scope: !16788)
!16797 = !DILocation(line: 1896, column: 4, scope: !16788)
!16798 = !DILocation(line: 1898, column: 3, scope: !16788)
!16799 = !DILocation(line: 0, scope: !14509, inlinedAt: !16800)
!16800 = distinct !DILocation(line: 1887, column: 2, scope: !16774)
!16801 = !DILocation(line: 194, column: 2, scope: !14517, inlinedAt: !16800)
!16802 = !DILocation(line: 194, column: 2, scope: !14518, inlinedAt: !16800)
!16803 = !DILocation(line: 194, column: 2, scope: !14521, inlinedAt: !16800)
!16804 = !DILocation(line: 0, scope: !14523, inlinedAt: !16805)
!16805 = distinct !DILocation(line: 215, column: 2, scope: !14509, inlinedAt: !16800)
!16806 = !DILocation(line: 95, column: 2, scope: !14523, inlinedAt: !16805)
!16807 = !DILocation(line: 1901, column: 2, scope: !16749)
!16808 = distinct !DISubprogram(name: "z_sched_wait", scope: !2464, file: !2464, line: 1904, type: !16809, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16812)
!16809 = !DISubroutineType(types: !16810)
!16810 = !{!107, !14478, !14467, !2387, !15363, !16811}
!16811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!16812 = !{!16813, !16814, !16815, !16816, !16817, !16818}
!16813 = !DILocalVariable(name: "lock", arg: 1, scope: !16808, file: !2464, line: 1904, type: !14478)
!16814 = !DILocalVariable(name: "key", arg: 2, scope: !16808, file: !2464, line: 1904, type: !14467)
!16815 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16808, file: !2464, line: 1905, type: !2387)
!16816 = !DILocalVariable(name: "timeout", arg: 4, scope: !16808, file: !2464, line: 1905, type: !15363)
!16817 = !DILocalVariable(name: "data", arg: 5, scope: !16808, file: !2464, line: 1905, type: !16811)
!16818 = !DILocalVariable(name: "ret", scope: !16808, file: !2464, line: 1907, type: !107)
!16819 = !DILocation(line: 0, scope: !16808)
!16820 = !DILocation(line: 1907, column: 12, scope: !16808)
!16821 = !DILocation(line: 1909, column: 11, scope: !16822)
!16822 = distinct !DILexicalBlock(scope: !16808, file: !2464, line: 1909, column: 6)
!16823 = !DILocation(line: 1909, column: 6, scope: !16808)
!16824 = !DILocation(line: 1910, column: 11, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16822, file: !2464, line: 1909, column: 20)
!16826 = !DILocation(line: 1910, column: 26, scope: !16825)
!16827 = !DILocation(line: 1910, column: 9, scope: !16825)
!16828 = !DILocation(line: 1911, column: 2, scope: !16825)
!16829 = !DILocation(line: 1912, column: 2, scope: !16808)
!16830 = distinct !DISubprogram(name: "z_data_copy", scope: !16831, file: !16831, line: 22, type: !3089, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3072, retainedNodes: !2166)
!16831 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16832 = !DILocation(line: 24, column: 2, scope: !16830)
!16833 = !DILocation(line: 27, column: 2, scope: !16830)
!16834 = !DILocation(line: 31, column: 2, scope: !16830)
!16835 = !DILocation(line: 71, column: 1, scope: !16830)
!16836 = distinct !DISubprogram(name: "z_add_timeout", scope: !2501, file: !2501, line: 88, type: !16837, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16843)
!16837 = !DISubroutineType(types: !16838)
!16838 = !{null, !2474, !2493, !16839}
!16839 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !16840)
!16840 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !16841)
!16841 = !{!16842}
!16842 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16840, file: !565, line: 66, baseType: !564, size: 64)
!16843 = !{!16844, !16845, !16846, !16847, !16853, !16854, !16857, !16860}
!16844 = !DILocalVariable(name: "to", arg: 1, scope: !16836, file: !2501, line: 88, type: !2474)
!16845 = !DILocalVariable(name: "fn", arg: 2, scope: !16836, file: !2501, line: 88, type: !2493)
!16846 = !DILocalVariable(name: "timeout", arg: 3, scope: !16836, file: !2501, line: 89, type: !16839)
!16847 = !DILocalVariable(name: "__i", scope: !16848, file: !2501, line: 102, type: !16849)
!16848 = distinct !DILexicalBlock(scope: !16836, file: !2501, line: 102, column: 2)
!16849 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !16850)
!16850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !16851)
!16851 = !{!16852}
!16852 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16850, file: !420, line: 33, baseType: !107, size: 32)
!16853 = !DILocalVariable(name: "__key", scope: !16848, file: !2501, line: 102, type: !16849)
!16854 = !DILocalVariable(name: "t", scope: !16855, file: !2501, line: 103, type: !2474)
!16855 = distinct !DILexicalBlock(scope: !16856, file: !2501, line: 102, column: 24)
!16856 = distinct !DILexicalBlock(scope: !16848, file: !2501, line: 102, column: 2)
!16857 = !DILocalVariable(name: "ticks", scope: !16858, file: !2501, line: 107, type: !564)
!16858 = distinct !DILexicalBlock(scope: !16859, file: !2501, line: 106, column: 39)
!16859 = distinct !DILexicalBlock(scope: !16855, file: !2501, line: 105, column: 7)
!16860 = !DILocalVariable(name: "next_time", scope: !16861, file: !2501, line: 137, type: !896)
!16861 = distinct !DILexicalBlock(scope: !16862, file: !2501, line: 127, column: 22)
!16862 = distinct !DILexicalBlock(scope: !16855, file: !2501, line: 127, column: 7)
!16863 = !DILocation(line: 0, scope: !16836)
!16864 = !DILocation(line: 91, column: 6, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !16836, file: !2501, line: 91, column: 6)
!16866 = !DILocation(line: 91, column: 6, scope: !16836)
!16867 = !DILocation(line: 99, column: 2, scope: !16868)
!16868 = distinct !DILexicalBlock(scope: !16869, file: !2501, line: 99, column: 2)
!16869 = distinct !DILexicalBlock(scope: !16836, file: !2501, line: 99, column: 2)
!16870 = !DILocation(line: 99, column: 2, scope: !16869)
!16871 = !DILocation(line: 99, column: 2, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16868, file: !2501, line: 99, column: 2)
!16873 = !DILocation(line: 100, column: 6, scope: !16836)
!16874 = !DILocation(line: 100, column: 9, scope: !16836)
!16875 = !DILocation(line: 0, scope: !16848)
!16876 = !DILocalVariable(name: "l", arg: 1, scope: !16877, file: !420, line: 136, type: !16880)
!16877 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !16878, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16881)
!16878 = !DISubroutineType(types: !16879)
!16879 = !{!16849, !16880}
!16880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!16881 = !{!16876, !16882}
!16882 = !DILocalVariable(name: "k", scope: !16877, file: !420, line: 139, type: !16849)
!16883 = !DILocation(line: 0, scope: !16877, inlinedAt: !16884)
!16884 = distinct !DILocation(line: 102, column: 2, scope: !16848)
!16885 = !DILocation(line: 55, column: 2, scope: !16886, inlinedAt: !16890)
!16886 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5934, file: !5934, line: 42, type: !5935, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16887)
!16887 = !{!16888, !16889}
!16888 = !DILocalVariable(name: "key", scope: !16886, file: !5934, line: 44, type: !32)
!16889 = !DILocalVariable(name: "tmp", scope: !16886, file: !5934, line: 53, type: !32)
!16890 = distinct !DILocation(line: 145, column: 10, scope: !16877, inlinedAt: !16884)
!16891 = !{i64 2232410}
!16892 = !DILocation(line: 0, scope: !16886, inlinedAt: !16890)
!16893 = !DILocation(line: 148, column: 2, scope: !16894, inlinedAt: !16884)
!16894 = distinct !DILexicalBlock(scope: !16895, file: !420, line: 148, column: 2)
!16895 = distinct !DILexicalBlock(scope: !16877, file: !420, line: 148, column: 2)
!16896 = !DILocation(line: 148, column: 2, scope: !16895, inlinedAt: !16884)
!16897 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !16884)
!16898 = distinct !DILexicalBlock(scope: !16894, file: !420, line: 148, column: 2)
!16899 = !DILocation(line: 160, column: 2, scope: !16877, inlinedAt: !16884)
!16900 = !DILocation(line: 106, column: 33, scope: !16859)
!16901 = !DILocation(line: 105, column: 7, scope: !16855)
!16902 = !DILocation(line: 107, column: 50, scope: !16858)
!16903 = !DILocation(line: 107, column: 48, scope: !16858)
!16904 = !DILocation(line: 0, scope: !16858)
!16905 = !DILocation(line: 109, column: 17, scope: !16858)
!16906 = !DILocation(line: 110, column: 3, scope: !16858)
!16907 = !DILocation(line: 111, column: 31, scope: !16908)
!16908 = distinct !DILexicalBlock(scope: !16859, file: !2501, line: 110, column: 10)
!16909 = !DILocation(line: 111, column: 37, scope: !16908)
!16910 = !DILocation(line: 111, column: 35, scope: !16908)
!16911 = !DILocation(line: 0, scope: !16859)
!16912 = !DILocation(line: 109, column: 8, scope: !16858)
!16913 = !DILocation(line: 109, column: 15, scope: !16858)
!16914 = !DILocation(line: 114, column: 12, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16855, file: !2501, line: 114, column: 3)
!16916 = !DILocation(line: 0, scope: !16855)
!16917 = !DILocation(line: 114, column: 3, scope: !16915)
!16918 = !DILocation(line: 115, column: 24, scope: !16919)
!16919 = distinct !DILexicalBlock(scope: !16920, file: !2501, line: 115, column: 8)
!16920 = distinct !DILexicalBlock(scope: !16921, file: !2501, line: 114, column: 45)
!16921 = distinct !DILexicalBlock(scope: !16915, file: !2501, line: 114, column: 3)
!16922 = !DILocation(line: 115, column: 11, scope: !16919)
!16923 = !DILocation(line: 115, column: 18, scope: !16919)
!16924 = !DILocation(line: 115, column: 8, scope: !16920)
!16925 = !DILocation(line: 116, column: 15, scope: !16926)
!16926 = distinct !DILexicalBlock(scope: !16919, file: !2501, line: 115, column: 32)
!16927 = !DILocation(line: 117, column: 26, scope: !16926)
!16928 = !DILocation(line: 117, column: 5, scope: !16926)
!16929 = !DILocation(line: 123, column: 7, scope: !16855)
!16930 = !DILocation(line: 120, column: 15, scope: !16920)
!16931 = !DILocation(line: 114, column: 36, scope: !16921)
!16932 = distinct !{!16932, !16917, !16933}
!16933 = !DILocation(line: 121, column: 3, scope: !16915)
!16934 = !DILocation(line: 124, column: 4, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16936, file: !2501, line: 123, column: 18)
!16936 = distinct !DILexicalBlock(scope: !16855, file: !2501, line: 123, column: 7)
!16937 = !DILocation(line: 125, column: 3, scope: !16935)
!16938 = !DILocation(line: 127, column: 13, scope: !16862)
!16939 = !DILocation(line: 127, column: 10, scope: !16862)
!16940 = !DILocation(line: 127, column: 7, scope: !16855)
!16941 = !DILocation(line: 137, column: 24, scope: !16861)
!16942 = !DILocation(line: 0, scope: !16861)
!16943 = !DILocation(line: 139, column: 18, scope: !16944)
!16944 = distinct !DILexicalBlock(scope: !16861, file: !2501, line: 139, column: 8)
!16945 = !DILocation(line: 139, column: 23, scope: !16944)
!16946 = !DILocation(line: 141, column: 5, scope: !16947)
!16947 = distinct !DILexicalBlock(scope: !16944, file: !2501, line: 140, column: 48)
!16948 = !DILocation(line: 142, column: 4, scope: !16947)
!16949 = !DILocalVariable(name: "key", arg: 2, scope: !16950, file: !420, line: 190, type: !16849)
!16950 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !16951, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16953)
!16951 = !DISubroutineType(types: !16952)
!16952 = !{null, !16880, !16849}
!16953 = !{!16954, !16949}
!16954 = !DILocalVariable(name: "l", arg: 1, scope: !16950, file: !420, line: 189, type: !16880)
!16955 = !DILocation(line: 0, scope: !16950, inlinedAt: !16956)
!16956 = distinct !DILocation(line: 102, column: 2, scope: !16856)
!16957 = !DILocation(line: 194, column: 2, scope: !16958, inlinedAt: !16956)
!16958 = distinct !DILexicalBlock(scope: !16959, file: !420, line: 194, column: 2)
!16959 = distinct !DILexicalBlock(scope: !16950, file: !420, line: 194, column: 2)
!16960 = !DILocation(line: 194, column: 2, scope: !16959, inlinedAt: !16956)
!16961 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !16956)
!16962 = distinct !DILexicalBlock(scope: !16958, file: !420, line: 194, column: 2)
!16963 = !DILocalVariable(name: "key", arg: 1, scope: !16964, file: !5934, line: 84, type: !32)
!16964 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5934, file: !5934, line: 84, type: !5945, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16965)
!16965 = !{!16963}
!16966 = !DILocation(line: 0, scope: !16964, inlinedAt: !16967)
!16967 = distinct !DILocation(line: 215, column: 2, scope: !16950, inlinedAt: !16956)
!16968 = !DILocation(line: 95, column: 2, scope: !16964, inlinedAt: !16967)
!16969 = !{i64 2233227}
!16970 = !DILocation(line: 148, column: 1, scope: !16836)
!16971 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !16972, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16976)
!16972 = !DISubroutineType(types: !16973)
!16973 = !{!145, !16974}
!16974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16975, size: 32)
!16975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2478)
!16976 = !{!16977}
!16977 = !DILocalVariable(name: "node", arg: 1, scope: !16971, file: !319, line: 225, type: !16974)
!16978 = !DILocation(line: 0, scope: !16971)
!16979 = !DILocation(line: 227, column: 15, scope: !16971)
!16980 = !DILocation(line: 227, column: 20, scope: !16971)
!16981 = !DILocation(line: 227, column: 2, scope: !16971)
!16982 = distinct !DISubprogram(name: "elapsed", scope: !2501, file: !2501, line: 62, type: !16983, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2166)
!16983 = !DISubroutineType(types: !16984)
!16984 = !{!896}
!16985 = !DILocation(line: 64, column: 9, scope: !16982)
!16986 = !DILocation(line: 64, column: 28, scope: !16982)
!16987 = !DILocation(line: 64, column: 35, scope: !16982)
!16988 = !DILocation(line: 64, column: 2, scope: !16982)
!16989 = distinct !DISubprogram(name: "first", scope: !2501, file: !2501, line: 39, type: !16990, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16992)
!16990 = !DISubroutineType(types: !16991)
!16991 = !{!2474}
!16992 = !{!16993}
!16993 = !DILocalVariable(name: "t", scope: !16989, file: !2501, line: 41, type: !16994)
!16994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 32)
!16995 = !DILocation(line: 41, column: 19, scope: !16989)
!16996 = !DILocation(line: 0, scope: !16989)
!16997 = !DILocation(line: 43, column: 9, scope: !16989)
!16998 = !DILocation(line: 43, column: 2, scope: !16989)
!16999 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !17000, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17002)
!17000 = !DISubroutineType(types: !17001)
!17001 = !{null, !16994, !16994}
!17002 = !{!17003, !17004, !17005}
!17003 = !DILocalVariable(name: "successor", arg: 1, scope: !16999, file: !319, line: 443, type: !16994)
!17004 = !DILocalVariable(name: "node", arg: 2, scope: !16999, file: !319, line: 443, type: !16994)
!17005 = !DILocalVariable(name: "prev", scope: !16999, file: !319, line: 445, type: !17006)
!17006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16994)
!17007 = !DILocation(line: 0, scope: !16999)
!17008 = !DILocation(line: 445, column: 39, scope: !16999)
!17009 = !DILocation(line: 447, column: 8, scope: !16999)
!17010 = !DILocation(line: 447, column: 13, scope: !16999)
!17011 = !DILocation(line: 448, column: 8, scope: !16999)
!17012 = !DILocation(line: 448, column: 13, scope: !16999)
!17013 = !DILocation(line: 449, column: 8, scope: !16999)
!17014 = !DILocation(line: 449, column: 13, scope: !16999)
!17015 = !DILocation(line: 450, column: 18, scope: !16999)
!17016 = !DILocation(line: 451, column: 1, scope: !16999)
!17017 = distinct !DISubprogram(name: "next", scope: !2501, file: !2501, line: 46, type: !17018, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17020)
!17018 = !DISubroutineType(types: !17019)
!17019 = !{!2474, !2474}
!17020 = !{!17021, !17022}
!17021 = !DILocalVariable(name: "t", arg: 1, scope: !17017, file: !2501, line: 46, type: !2474)
!17022 = !DILocalVariable(name: "n", scope: !17017, file: !2501, line: 48, type: !16994)
!17023 = !DILocation(line: 0, scope: !17017)
!17024 = !DILocation(line: 48, column: 58, scope: !17017)
!17025 = !DILocation(line: 48, column: 19, scope: !17017)
!17026 = !DILocation(line: 50, column: 9, scope: !17017)
!17027 = !DILocation(line: 50, column: 2, scope: !17017)
!17028 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !17029, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17032)
!17029 = !DISubroutineType(types: !17030)
!17030 = !{null, !17031, !16994}
!17031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 32)
!17032 = !{!17033, !17034, !17035}
!17033 = !DILocalVariable(name: "list", arg: 1, scope: !17028, file: !319, line: 404, type: !17031)
!17034 = !DILocalVariable(name: "node", arg: 2, scope: !17028, file: !319, line: 404, type: !16994)
!17035 = !DILocalVariable(name: "tail", scope: !17028, file: !319, line: 406, type: !17006)
!17036 = !DILocation(line: 0, scope: !17028)
!17037 = !DILocation(line: 406, column: 34, scope: !17028)
!17038 = !DILocation(line: 408, column: 8, scope: !17028)
!17039 = !DILocation(line: 408, column: 13, scope: !17028)
!17040 = !DILocation(line: 409, column: 8, scope: !17028)
!17041 = !DILocation(line: 409, column: 13, scope: !17028)
!17042 = !DILocation(line: 411, column: 8, scope: !17028)
!17043 = !DILocation(line: 411, column: 13, scope: !17028)
!17044 = !DILocation(line: 412, column: 13, scope: !17028)
!17045 = !DILocation(line: 413, column: 1, scope: !17028)
!17046 = distinct !DISubprogram(name: "next_timeout", scope: !2501, file: !2501, line: 67, type: !16983, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17047)
!17047 = !{!17048, !17049, !17050}
!17048 = !DILocalVariable(name: "to", scope: !17046, file: !2501, line: 69, type: !2474)
!17049 = !DILocalVariable(name: "ticks_elapsed", scope: !17046, file: !2501, line: 70, type: !896)
!17050 = !DILocalVariable(name: "ret", scope: !17046, file: !2501, line: 71, type: !896)
!17051 = !DILocation(line: 69, column: 24, scope: !17046)
!17052 = !DILocation(line: 0, scope: !17046)
!17053 = !DILocation(line: 70, column: 26, scope: !17046)
!17054 = !DILocation(line: 73, column: 10, scope: !17055)
!17055 = distinct !DILexicalBlock(scope: !17046, file: !2501, line: 73, column: 6)
!17056 = !DILocation(line: 73, column: 19, scope: !17055)
!17057 = !DILocation(line: 74, column: 21, scope: !17055)
!17058 = !DILocation(line: 74, column: 30, scope: !17055)
!17059 = !DILocation(line: 74, column: 28, scope: !17055)
!17060 = !DILocation(line: 74, column: 45, scope: !17055)
!17061 = !DILocation(line: 73, column: 6, scope: !17046)
!17062 = !DILocation(line: 77, column: 9, scope: !17063)
!17063 = distinct !DILexicalBlock(scope: !17055, file: !2501, line: 76, column: 9)
!17064 = !DILocation(line: 0, scope: !17055)
!17065 = !DILocation(line: 81, column: 20, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17046, file: !2501, line: 81, column: 6)
!17067 = !DILocation(line: 81, column: 6, scope: !17066)
!17068 = !DILocation(line: 81, column: 32, scope: !17066)
!17069 = !DILocation(line: 85, column: 2, scope: !17046)
!17070 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !17071, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17073)
!17071 = !DISubroutineType(types: !17072)
!17072 = !{!16994, !17031, !16994}
!17073 = !{!17074, !17075}
!17074 = !DILocalVariable(name: "list", arg: 1, scope: !17070, file: !319, line: 341, type: !17031)
!17075 = !DILocalVariable(name: "node", arg: 2, scope: !17070, file: !319, line: 342, type: !16994)
!17076 = !DILocation(line: 0, scope: !17070)
!17077 = !DILocation(line: 344, column: 15, scope: !17070)
!17078 = !DILocation(line: 344, column: 9, scope: !17070)
!17079 = !DILocation(line: 344, column: 26, scope: !17070)
!17080 = !DILocation(line: 344, column: 2, scope: !17070)
!17081 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !17071, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17082)
!17082 = !{!17083, !17084}
!17083 = !DILocalVariable(name: "list", arg: 1, scope: !17081, file: !319, line: 325, type: !17031)
!17084 = !DILocalVariable(name: "node", arg: 2, scope: !17081, file: !319, line: 326, type: !16994)
!17085 = !DILocation(line: 0, scope: !17081)
!17086 = !DILocation(line: 328, column: 24, scope: !17081)
!17087 = !DILocation(line: 328, column: 15, scope: !17081)
!17088 = !DILocation(line: 328, column: 9, scope: !17081)
!17089 = !DILocation(line: 328, column: 45, scope: !17081)
!17090 = !DILocation(line: 328, column: 2, scope: !17081)
!17091 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !17092, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17094)
!17092 = !DISubroutineType(types: !17093)
!17093 = !{!16994, !17031}
!17094 = !{!17095}
!17095 = !DILocalVariable(name: "list", arg: 1, scope: !17091, file: !319, line: 294, type: !17031)
!17096 = !DILocation(line: 0, scope: !17091)
!17097 = !DILocation(line: 296, column: 9, scope: !17091)
!17098 = !DILocation(line: 296, column: 2, scope: !17091)
!17099 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !17100, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17102)
!17100 = !DISubroutineType(types: !17101)
!17101 = !{!145, !17031}
!17102 = !{!17103}
!17103 = !DILocalVariable(name: "list", arg: 1, scope: !17099, file: !319, line: 266, type: !17031)
!17104 = !DILocation(line: 0, scope: !17099)
!17105 = !DILocation(line: 268, column: 15, scope: !17099)
!17106 = !DILocation(line: 268, column: 20, scope: !17099)
!17107 = !DILocation(line: 268, column: 2, scope: !17099)
!17108 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2501, file: !2501, line: 150, type: !17109, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17111)
!17109 = !DISubroutineType(types: !17110)
!17110 = !{!107, !2474}
!17111 = !{!17112, !17113, !17114, !17116}
!17112 = !DILocalVariable(name: "to", arg: 1, scope: !17108, file: !2501, line: 150, type: !2474)
!17113 = !DILocalVariable(name: "ret", scope: !17108, file: !2501, line: 152, type: !107)
!17114 = !DILocalVariable(name: "__i", scope: !17115, file: !2501, line: 154, type: !16849)
!17115 = distinct !DILexicalBlock(scope: !17108, file: !2501, line: 154, column: 2)
!17116 = !DILocalVariable(name: "__key", scope: !17115, file: !2501, line: 154, type: !16849)
!17117 = !DILocation(line: 0, scope: !17108)
!17118 = !DILocation(line: 0, scope: !17115)
!17119 = !DILocation(line: 0, scope: !16877, inlinedAt: !17120)
!17120 = distinct !DILocation(line: 154, column: 2, scope: !17115)
!17121 = !DILocation(line: 55, column: 2, scope: !16886, inlinedAt: !17122)
!17122 = distinct !DILocation(line: 145, column: 10, scope: !16877, inlinedAt: !17120)
!17123 = !DILocation(line: 0, scope: !16886, inlinedAt: !17122)
!17124 = !DILocation(line: 148, column: 2, scope: !16894, inlinedAt: !17120)
!17125 = !DILocation(line: 148, column: 2, scope: !16895, inlinedAt: !17120)
!17126 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17120)
!17127 = !DILocation(line: 160, column: 2, scope: !16877, inlinedAt: !17120)
!17128 = !DILocation(line: 155, column: 7, scope: !17129)
!17129 = distinct !DILexicalBlock(scope: !17130, file: !2501, line: 155, column: 7)
!17130 = distinct !DILexicalBlock(scope: !17131, file: !2501, line: 154, column: 24)
!17131 = distinct !DILexicalBlock(scope: !17115, file: !2501, line: 154, column: 2)
!17132 = !DILocation(line: 155, column: 7, scope: !17130)
!17133 = !DILocation(line: 156, column: 4, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17129, file: !2501, line: 155, column: 39)
!17135 = !DILocation(line: 158, column: 3, scope: !17134)
!17136 = !DILocation(line: 0, scope: !16950, inlinedAt: !17137)
!17137 = distinct !DILocation(line: 154, column: 2, scope: !17131)
!17138 = !DILocation(line: 194, column: 2, scope: !16958, inlinedAt: !17137)
!17139 = !DILocation(line: 194, column: 2, scope: !16959, inlinedAt: !17137)
!17140 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17137)
!17141 = !DILocation(line: 0, scope: !16964, inlinedAt: !17142)
!17142 = distinct !DILocation(line: 215, column: 2, scope: !16950, inlinedAt: !17137)
!17143 = !DILocation(line: 95, column: 2, scope: !16964, inlinedAt: !17142)
!17144 = !DILocation(line: 161, column: 2, scope: !17108)
!17145 = distinct !DISubprogram(name: "remove_timeout", scope: !2501, file: !2501, line: 53, type: !2495, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17146)
!17146 = !{!17147}
!17147 = !DILocalVariable(name: "t", arg: 1, scope: !17145, file: !2501, line: 53, type: !2474)
!17148 = !DILocation(line: 0, scope: !17145)
!17149 = !DILocation(line: 55, column: 6, scope: !17150)
!17150 = distinct !DILexicalBlock(scope: !17145, file: !2501, line: 55, column: 6)
!17151 = !DILocation(line: 55, column: 14, scope: !17150)
!17152 = !DILocation(line: 55, column: 6, scope: !17145)
!17153 = !DILocation(line: 56, column: 25, scope: !17154)
!17154 = distinct !DILexicalBlock(scope: !17150, file: !2501, line: 55, column: 23)
!17155 = !DILocation(line: 56, column: 12, scope: !17154)
!17156 = !DILocation(line: 56, column: 19, scope: !17154)
!17157 = !DILocation(line: 57, column: 2, scope: !17154)
!17158 = !DILocation(line: 59, column: 23, scope: !17145)
!17159 = !DILocation(line: 59, column: 2, scope: !17145)
!17160 = !DILocation(line: 60, column: 1, scope: !17145)
!17161 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !17162, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17164)
!17162 = !DISubroutineType(types: !17163)
!17163 = !{null, !16994}
!17164 = !{!17165, !17166, !17167}
!17165 = !DILocalVariable(name: "node", arg: 1, scope: !17161, file: !319, line: 496, type: !16994)
!17166 = !DILocalVariable(name: "prev", scope: !17161, file: !319, line: 498, type: !17006)
!17167 = !DILocalVariable(name: "next", scope: !17161, file: !319, line: 499, type: !17006)
!17168 = !DILocation(line: 0, scope: !17161)
!17169 = !DILocation(line: 498, column: 34, scope: !17161)
!17170 = !DILocation(line: 499, column: 34, scope: !17161)
!17171 = !DILocation(line: 501, column: 8, scope: !17161)
!17172 = !DILocation(line: 501, column: 13, scope: !17161)
!17173 = !DILocation(line: 502, column: 8, scope: !17161)
!17174 = !DILocation(line: 502, column: 13, scope: !17161)
!17175 = !DILocation(line: 503, column: 2, scope: !17161)
!17176 = !DILocation(line: 504, column: 1, scope: !17161)
!17177 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !17162, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17178)
!17178 = !{!17179}
!17179 = !DILocalVariable(name: "node", arg: 1, scope: !17177, file: !319, line: 211, type: !16994)
!17180 = !DILocation(line: 0, scope: !17177)
!17181 = !DILocation(line: 213, column: 8, scope: !17177)
!17182 = !DILocation(line: 213, column: 13, scope: !17177)
!17183 = !DILocation(line: 214, column: 8, scope: !17177)
!17184 = !DILocation(line: 214, column: 13, scope: !17177)
!17185 = !DILocation(line: 215, column: 1, scope: !17177)
!17186 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2501, file: !2501, line: 183, type: !17187, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17191)
!17187 = !DISubroutineType(types: !17188)
!17188 = !{!564, !17189}
!17189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17190, size: 32)
!17190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2475)
!17191 = !{!17192, !17193, !17194, !17196}
!17192 = !DILocalVariable(name: "timeout", arg: 1, scope: !17186, file: !2501, line: 183, type: !17189)
!17193 = !DILocalVariable(name: "ticks", scope: !17186, file: !2501, line: 185, type: !564)
!17194 = !DILocalVariable(name: "__i", scope: !17195, file: !2501, line: 187, type: !16849)
!17195 = distinct !DILexicalBlock(scope: !17186, file: !2501, line: 187, column: 2)
!17196 = !DILocalVariable(name: "__key", scope: !17195, file: !2501, line: 187, type: !16849)
!17197 = !DILocation(line: 0, scope: !17186)
!17198 = !DILocation(line: 0, scope: !17195)
!17199 = !DILocation(line: 0, scope: !16877, inlinedAt: !17200)
!17200 = distinct !DILocation(line: 187, column: 2, scope: !17195)
!17201 = !DILocation(line: 55, column: 2, scope: !16886, inlinedAt: !17202)
!17202 = distinct !DILocation(line: 145, column: 10, scope: !16877, inlinedAt: !17200)
!17203 = !DILocation(line: 0, scope: !16886, inlinedAt: !17202)
!17204 = !DILocation(line: 148, column: 2, scope: !16894, inlinedAt: !17200)
!17205 = !DILocation(line: 148, column: 2, scope: !16895, inlinedAt: !17200)
!17206 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17200)
!17207 = !DILocation(line: 160, column: 2, scope: !16877, inlinedAt: !17200)
!17208 = !DILocation(line: 188, column: 11, scope: !17209)
!17209 = distinct !DILexicalBlock(scope: !17210, file: !2501, line: 187, column: 24)
!17210 = distinct !DILexicalBlock(scope: !17195, file: !2501, line: 187, column: 2)
!17211 = !DILocation(line: 0, scope: !16950, inlinedAt: !17212)
!17212 = distinct !DILocation(line: 187, column: 2, scope: !17210)
!17213 = !DILocation(line: 194, column: 2, scope: !16958, inlinedAt: !17212)
!17214 = !DILocation(line: 194, column: 2, scope: !16959, inlinedAt: !17212)
!17215 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17212)
!17216 = !DILocation(line: 0, scope: !16964, inlinedAt: !17217)
!17217 = distinct !DILocation(line: 215, column: 2, scope: !16950, inlinedAt: !17212)
!17218 = !DILocation(line: 95, column: 2, scope: !16964, inlinedAt: !17217)
!17219 = !DILocation(line: 191, column: 2, scope: !17186)
!17220 = distinct !DISubprogram(name: "timeout_rem", scope: !2501, file: !2501, line: 165, type: !17187, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17221)
!17221 = !{!17222, !17223, !17224}
!17222 = !DILocalVariable(name: "timeout", arg: 1, scope: !17220, file: !2501, line: 165, type: !17189)
!17223 = !DILocalVariable(name: "ticks", scope: !17220, file: !2501, line: 167, type: !564)
!17224 = !DILocalVariable(name: "t", scope: !17225, file: !2501, line: 173, type: !2474)
!17225 = distinct !DILexicalBlock(scope: !17220, file: !2501, line: 173, column: 2)
!17226 = !DILocation(line: 0, scope: !17220)
!17227 = !DILocation(line: 169, column: 6, scope: !17228)
!17228 = distinct !DILexicalBlock(scope: !17220, file: !2501, line: 169, column: 6)
!17229 = !DILocation(line: 169, column: 6, scope: !17220)
!17230 = !DILocation(line: 173, column: 28, scope: !17225)
!17231 = !DILocation(line: 0, scope: !17225)
!17232 = !DILocation(line: 173, column: 39, scope: !17233)
!17233 = distinct !DILexicalBlock(scope: !17225, file: !2501, line: 173, column: 2)
!17234 = !DILocation(line: 173, column: 2, scope: !17225)
!17235 = !DILocation(line: 174, column: 15, scope: !17236)
!17236 = distinct !DILexicalBlock(scope: !17233, file: !2501, line: 173, column: 61)
!17237 = !DILocation(line: 174, column: 9, scope: !17236)
!17238 = !DILocation(line: 175, column: 15, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17236, file: !2501, line: 175, column: 7)
!17240 = !DILocation(line: 175, column: 7, scope: !17236)
!17241 = !DILocation(line: 173, column: 52, scope: !17233)
!17242 = distinct !{!17242, !17234, !17243}
!17243 = !DILocation(line: 178, column: 2, scope: !17225)
!17244 = !DILocation(line: 180, column: 17, scope: !17220)
!17245 = !DILocation(line: 180, column: 15, scope: !17220)
!17246 = !DILocation(line: 180, column: 2, scope: !17220)
!17247 = !DILocation(line: 181, column: 1, scope: !17220)
!17248 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14064, file: !14064, line: 35, type: !17249, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17251)
!17249 = !DISubroutineType(types: !17250)
!17250 = !{!145, !17189}
!17251 = !{!17252}
!17252 = !DILocalVariable(name: "to", arg: 1, scope: !17248, file: !14064, line: 35, type: !17189)
!17253 = !DILocation(line: 0, scope: !17248)
!17254 = !DILocation(line: 37, column: 35, scope: !17248)
!17255 = !DILocation(line: 37, column: 10, scope: !17248)
!17256 = !DILocation(line: 37, column: 9, scope: !17248)
!17257 = !DILocation(line: 37, column: 2, scope: !17248)
!17258 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2501, file: !2501, line: 194, type: !17187, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17259)
!17259 = !{!17260, !17261, !17262, !17264}
!17260 = !DILocalVariable(name: "timeout", arg: 1, scope: !17258, file: !2501, line: 194, type: !17189)
!17261 = !DILocalVariable(name: "ticks", scope: !17258, file: !2501, line: 196, type: !564)
!17262 = !DILocalVariable(name: "__i", scope: !17263, file: !2501, line: 198, type: !16849)
!17263 = distinct !DILexicalBlock(scope: !17258, file: !2501, line: 198, column: 2)
!17264 = !DILocalVariable(name: "__key", scope: !17263, file: !2501, line: 198, type: !16849)
!17265 = !DILocation(line: 0, scope: !17258)
!17266 = !DILocation(line: 0, scope: !17263)
!17267 = !DILocation(line: 0, scope: !16877, inlinedAt: !17268)
!17268 = distinct !DILocation(line: 198, column: 2, scope: !17263)
!17269 = !DILocation(line: 55, column: 2, scope: !16886, inlinedAt: !17270)
!17270 = distinct !DILocation(line: 145, column: 10, scope: !16877, inlinedAt: !17268)
!17271 = !DILocation(line: 0, scope: !16886, inlinedAt: !17270)
!17272 = !DILocation(line: 148, column: 2, scope: !16894, inlinedAt: !17268)
!17273 = !DILocation(line: 148, column: 2, scope: !16895, inlinedAt: !17268)
!17274 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17268)
!17275 = !DILocation(line: 160, column: 2, scope: !16877, inlinedAt: !17268)
!17276 = !DILocation(line: 199, column: 11, scope: !17277)
!17277 = distinct !DILexicalBlock(scope: !17278, file: !2501, line: 198, column: 24)
!17278 = distinct !DILexicalBlock(scope: !17263, file: !2501, line: 198, column: 2)
!17279 = !DILocation(line: 199, column: 23, scope: !17277)
!17280 = !DILocation(line: 0, scope: !16950, inlinedAt: !17281)
!17281 = distinct !DILocation(line: 198, column: 2, scope: !17278)
!17282 = !DILocation(line: 194, column: 2, scope: !16958, inlinedAt: !17281)
!17283 = !DILocation(line: 194, column: 2, scope: !16959, inlinedAt: !17281)
!17284 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17281)
!17285 = !DILocation(line: 0, scope: !16964, inlinedAt: !17286)
!17286 = distinct !DILocation(line: 215, column: 2, scope: !16950, inlinedAt: !17281)
!17287 = !DILocation(line: 95, column: 2, scope: !16964, inlinedAt: !17286)
!17288 = !DILocation(line: 199, column: 21, scope: !17277)
!17289 = !DILocation(line: 202, column: 2, scope: !17258)
!17290 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2501, file: !2501, line: 205, type: !16983, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17291)
!17291 = !{!17292, !17293, !17295}
!17292 = !DILocalVariable(name: "ret", scope: !17290, file: !2501, line: 207, type: !896)
!17293 = !DILocalVariable(name: "__i", scope: !17294, file: !2501, line: 209, type: !16849)
!17294 = distinct !DILexicalBlock(scope: !17290, file: !2501, line: 209, column: 2)
!17295 = !DILocalVariable(name: "__key", scope: !17294, file: !2501, line: 209, type: !16849)
!17296 = !DILocation(line: 0, scope: !17290)
!17297 = !DILocation(line: 0, scope: !17294)
!17298 = !DILocation(line: 0, scope: !16877, inlinedAt: !17299)
!17299 = distinct !DILocation(line: 209, column: 2, scope: !17294)
!17300 = !DILocation(line: 55, column: 2, scope: !16886, inlinedAt: !17301)
!17301 = distinct !DILocation(line: 145, column: 10, scope: !16877, inlinedAt: !17299)
!17302 = !DILocation(line: 0, scope: !16886, inlinedAt: !17301)
!17303 = !DILocation(line: 148, column: 2, scope: !16894, inlinedAt: !17299)
!17304 = !DILocation(line: 148, column: 2, scope: !16895, inlinedAt: !17299)
!17305 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17299)
!17306 = !DILocation(line: 160, column: 2, scope: !16877, inlinedAt: !17299)
!17307 = !DILocation(line: 210, column: 9, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !17309, file: !2501, line: 209, column: 24)
!17309 = distinct !DILexicalBlock(scope: !17294, file: !2501, line: 209, column: 2)
!17310 = !DILocation(line: 0, scope: !16950, inlinedAt: !17311)
!17311 = distinct !DILocation(line: 209, column: 2, scope: !17309)
!17312 = !DILocation(line: 194, column: 2, scope: !16958, inlinedAt: !17311)
!17313 = !DILocation(line: 194, column: 2, scope: !16959, inlinedAt: !17311)
!17314 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17311)
!17315 = !DILocation(line: 0, scope: !16964, inlinedAt: !17316)
!17316 = distinct !DILocation(line: 215, column: 2, scope: !16950, inlinedAt: !17311)
!17317 = !DILocation(line: 95, column: 2, scope: !16964, inlinedAt: !17316)
!17318 = !DILocation(line: 212, column: 2, scope: !17290)
!17319 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2501, file: !2501, line: 215, type: !11541, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17320)
!17320 = !{!17321, !17322, !17323, !17325, !17326, !17329, !17330}
!17321 = !DILocalVariable(name: "ticks", arg: 1, scope: !17319, file: !2501, line: 215, type: !896)
!17322 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17319, file: !2501, line: 215, type: !145)
!17323 = !DILocalVariable(name: "__i", scope: !17324, file: !2501, line: 217, type: !16849)
!17324 = distinct !DILexicalBlock(scope: !17319, file: !2501, line: 217, column: 2)
!17325 = !DILocalVariable(name: "__key", scope: !17324, file: !2501, line: 217, type: !16849)
!17326 = !DILocalVariable(name: "next_to", scope: !17327, file: !2501, line: 218, type: !107)
!17327 = distinct !DILexicalBlock(scope: !17328, file: !2501, line: 217, column: 24)
!17328 = distinct !DILexicalBlock(scope: !17324, file: !2501, line: 217, column: 2)
!17329 = !DILocalVariable(name: "sooner", scope: !17327, file: !2501, line: 219, type: !145)
!17330 = !DILocalVariable(name: "imminent", scope: !17327, file: !2501, line: 221, type: !145)
!17331 = !DILocation(line: 0, scope: !17319)
!17332 = !DILocation(line: 0, scope: !17324)
!17333 = !DILocation(line: 0, scope: !16877, inlinedAt: !17334)
!17334 = distinct !DILocation(line: 217, column: 2, scope: !17324)
!17335 = !DILocation(line: 55, column: 2, scope: !16886, inlinedAt: !17336)
!17336 = distinct !DILocation(line: 145, column: 10, scope: !16877, inlinedAt: !17334)
!17337 = !DILocation(line: 0, scope: !16886, inlinedAt: !17336)
!17338 = !DILocation(line: 148, column: 2, scope: !16894, inlinedAt: !17334)
!17339 = !DILocation(line: 148, column: 2, scope: !16895, inlinedAt: !17334)
!17340 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17334)
!17341 = !DILocation(line: 160, column: 2, scope: !16877, inlinedAt: !17334)
!17342 = !DILocation(line: 218, column: 17, scope: !17327)
!17343 = !DILocation(line: 0, scope: !17327)
!17344 = !DILocation(line: 221, column: 27, scope: !17327)
!17345 = !DILocation(line: 233, column: 17, scope: !17346)
!17346 = distinct !DILexicalBlock(scope: !17327, file: !2501, line: 233, column: 7)
!17347 = !DILocation(line: 234, column: 26, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17346, file: !2501, line: 233, column: 56)
!17349 = !DILocation(line: 234, column: 4, scope: !17348)
!17350 = !DILocation(line: 235, column: 3, scope: !17348)
!17351 = !DILocation(line: 0, scope: !16950, inlinedAt: !17352)
!17352 = distinct !DILocation(line: 217, column: 2, scope: !17328)
!17353 = !DILocation(line: 194, column: 2, scope: !16958, inlinedAt: !17352)
!17354 = !DILocation(line: 194, column: 2, scope: !16959, inlinedAt: !17352)
!17355 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17352)
!17356 = !DILocation(line: 0, scope: !16964, inlinedAt: !17357)
!17357 = distinct !DILocation(line: 215, column: 2, scope: !16950, inlinedAt: !17352)
!17358 = !DILocation(line: 95, column: 2, scope: !16964, inlinedAt: !17357)
!17359 = !DILocation(line: 237, column: 1, scope: !17319)
!17360 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2501, file: !2501, line: 239, type: !17361, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17363)
!17361 = !DISubroutineType(types: !17362)
!17362 = !{null, !896}
!17363 = !{!17364, !17365, !17366, !17368}
!17364 = !DILocalVariable(name: "ticks", arg: 1, scope: !17360, file: !2501, line: 239, type: !896)
!17365 = !DILocalVariable(name: "key", scope: !17360, file: !2501, line: 245, type: !16849)
!17366 = !DILocalVariable(name: "t", scope: !17367, file: !2501, line: 262, type: !2474)
!17367 = distinct !DILexicalBlock(scope: !17360, file: !2501, line: 261, column: 67)
!17368 = !DILocalVariable(name: "dt", scope: !17367, file: !2501, line: 263, type: !107)
!17369 = !DILocation(line: 0, scope: !17360)
!17370 = !DILocation(line: 242, column: 2, scope: !17360)
!17371 = !DILocation(line: 0, scope: !16877, inlinedAt: !17372)
!17372 = distinct !DILocation(line: 245, column: 25, scope: !17360)
!17373 = !DILocation(line: 55, column: 2, scope: !16886, inlinedAt: !17374)
!17374 = distinct !DILocation(line: 145, column: 10, scope: !16877, inlinedAt: !17372)
!17375 = !DILocation(line: 0, scope: !16886, inlinedAt: !17374)
!17376 = !DILocation(line: 148, column: 2, scope: !16894, inlinedAt: !17372)
!17377 = !DILocation(line: 148, column: 2, scope: !16895, inlinedAt: !17372)
!17378 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17372)
!17379 = !DILocation(line: 160, column: 2, scope: !16877, inlinedAt: !17372)
!17380 = !DILocation(line: 261, column: 9, scope: !17360)
!17381 = !DILocation(line: 261, column: 17, scope: !17360)
!17382 = !DILocation(line: 261, column: 25, scope: !17360)
!17383 = !DILocation(line: 261, column: 37, scope: !17360)
!17384 = !DILocation(line: 261, column: 47, scope: !17360)
!17385 = !DILocation(line: 261, column: 44, scope: !17360)
!17386 = !DILocation(line: 261, column: 2, scope: !17360)
!17387 = !DILocation(line: 0, scope: !17367)
!17388 = !DILocation(line: 263, column: 12, scope: !17367)
!17389 = !DILocation(line: 265, column: 16, scope: !17367)
!17390 = !DILocation(line: 265, column: 13, scope: !17367)
!17391 = !DILocation(line: 266, column: 13, scope: !17367)
!17392 = !DILocation(line: 267, column: 3, scope: !17367)
!17393 = !DILocation(line: 0, scope: !16950, inlinedAt: !17394)
!17394 = distinct !DILocation(line: 269, column: 3, scope: !17367)
!17395 = !DILocation(line: 194, column: 2, scope: !16958, inlinedAt: !17394)
!17396 = !DILocation(line: 194, column: 2, scope: !16959, inlinedAt: !17394)
!17397 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17394)
!17398 = !DILocation(line: 0, scope: !16964, inlinedAt: !17399)
!17399 = distinct !DILocation(line: 215, column: 2, scope: !16950, inlinedAt: !17394)
!17400 = !DILocation(line: 95, column: 2, scope: !16964, inlinedAt: !17399)
!17401 = !DILocation(line: 270, column: 6, scope: !17367)
!17402 = !DILocation(line: 270, column: 3, scope: !17367)
!17403 = !DILocation(line: 0, scope: !16877, inlinedAt: !17404)
!17404 = distinct !DILocation(line: 271, column: 9, scope: !17367)
!17405 = !DILocation(line: 55, column: 2, scope: !16886, inlinedAt: !17406)
!17406 = distinct !DILocation(line: 145, column: 10, scope: !16877, inlinedAt: !17404)
!17407 = !DILocation(line: 0, scope: !16886, inlinedAt: !17406)
!17408 = !DILocation(line: 148, column: 2, scope: !16894, inlinedAt: !17404)
!17409 = !DILocation(line: 148, column: 2, scope: !16895, inlinedAt: !17404)
!17410 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17404)
!17411 = !DILocation(line: 160, column: 2, scope: !16877, inlinedAt: !17404)
!17412 = !DILocation(line: 272, column: 22, scope: !17367)
!17413 = distinct !{!17413, !17386, !17414}
!17414 = !DILocation(line: 273, column: 2, scope: !17360)
!17415 = !DILocation(line: 276, column: 19, scope: !17416)
!17416 = distinct !DILexicalBlock(scope: !17417, file: !2501, line: 275, column: 23)
!17417 = distinct !DILexicalBlock(scope: !17360, file: !2501, line: 275, column: 6)
!17418 = !DILocation(line: 277, column: 2, scope: !17416)
!17419 = !DILocation(line: 279, column: 15, scope: !17360)
!17420 = !DILocation(line: 279, column: 12, scope: !17360)
!17421 = !DILocation(line: 280, column: 21, scope: !17360)
!17422 = !DILocation(line: 282, column: 24, scope: !17360)
!17423 = !DILocation(line: 282, column: 2, scope: !17360)
!17424 = !DILocation(line: 0, scope: !16950, inlinedAt: !17425)
!17425 = distinct !DILocation(line: 284, column: 2, scope: !17360)
!17426 = !DILocation(line: 194, column: 2, scope: !16958, inlinedAt: !17425)
!17427 = !DILocation(line: 194, column: 2, scope: !16959, inlinedAt: !17425)
!17428 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17425)
!17429 = !DILocation(line: 0, scope: !16964, inlinedAt: !17430)
!17430 = distinct !DILocation(line: 215, column: 2, scope: !16950, inlinedAt: !17425)
!17431 = !DILocation(line: 95, column: 2, scope: !16964, inlinedAt: !17430)
!17432 = !DILocation(line: 285, column: 1, scope: !17360)
!17433 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2501, file: !2501, line: 287, type: !17434, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17436)
!17434 = !DISubroutineType(types: !17435)
!17435 = !{!376}
!17436 = !{!17437, !17438, !17440}
!17437 = !DILocalVariable(name: "t", scope: !17433, file: !2501, line: 289, type: !566)
!17438 = !DILocalVariable(name: "__i", scope: !17439, file: !2501, line: 291, type: !16849)
!17439 = distinct !DILexicalBlock(scope: !17433, file: !2501, line: 291, column: 2)
!17440 = !DILocalVariable(name: "__key", scope: !17439, file: !2501, line: 291, type: !16849)
!17441 = !DILocation(line: 0, scope: !17433)
!17442 = !DILocation(line: 0, scope: !17439)
!17443 = !DILocation(line: 0, scope: !16877, inlinedAt: !17444)
!17444 = distinct !DILocation(line: 291, column: 2, scope: !17439)
!17445 = !DILocation(line: 55, column: 2, scope: !16886, inlinedAt: !17446)
!17446 = distinct !DILocation(line: 145, column: 10, scope: !16877, inlinedAt: !17444)
!17447 = !DILocation(line: 0, scope: !16886, inlinedAt: !17446)
!17448 = !DILocation(line: 148, column: 2, scope: !16894, inlinedAt: !17444)
!17449 = !DILocation(line: 148, column: 2, scope: !16895, inlinedAt: !17444)
!17450 = !DILocation(line: 148, column: 2, scope: !16898, inlinedAt: !17444)
!17451 = !DILocation(line: 160, column: 2, scope: !16877, inlinedAt: !17444)
!17452 = !DILocation(line: 292, column: 7, scope: !17453)
!17453 = distinct !DILexicalBlock(scope: !17454, file: !2501, line: 291, column: 24)
!17454 = distinct !DILexicalBlock(scope: !17439, file: !2501, line: 291, column: 2)
!17455 = !DILocation(line: 292, column: 19, scope: !17453)
!17456 = !DILocation(line: 0, scope: !16950, inlinedAt: !17457)
!17457 = distinct !DILocation(line: 291, column: 2, scope: !17454)
!17458 = !DILocation(line: 194, column: 2, scope: !16958, inlinedAt: !17457)
!17459 = !DILocation(line: 194, column: 2, scope: !16959, inlinedAt: !17457)
!17460 = !DILocation(line: 194, column: 2, scope: !16962, inlinedAt: !17457)
!17461 = !DILocation(line: 0, scope: !16964, inlinedAt: !17462)
!17462 = distinct !DILocation(line: 215, column: 2, scope: !16950, inlinedAt: !17457)
!17463 = !DILocation(line: 95, column: 2, scope: !16964, inlinedAt: !17462)
!17464 = !DILocation(line: 292, column: 17, scope: !17453)
!17465 = !DILocation(line: 294, column: 2, scope: !17433)
!17466 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2501, file: !2501, line: 297, type: !6340, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2166)
!17467 = !DILocation(line: 300, column: 19, scope: !17466)
!17468 = !DILocation(line: 300, column: 9, scope: !17466)
!17469 = !DILocation(line: 300, column: 2, scope: !17466)
!17470 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2501, file: !2501, line: 306, type: !17434, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2166)
!17471 = !DILocation(line: 308, column: 9, scope: !17470)
!17472 = !DILocation(line: 308, column: 2, scope: !17470)
!17473 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2501, file: !2501, line: 319, type: !6350, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17474)
!17474 = !{!17475, !17476, !17477, !17478}
!17475 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17473, file: !2501, line: 319, type: !152)
!17476 = !DILocalVariable(name: "start_cycles", scope: !17473, file: !2501, line: 328, type: !152)
!17477 = !DILocalVariable(name: "cycles_to_wait", scope: !17473, file: !2501, line: 331, type: !152)
!17478 = !DILocalVariable(name: "current_cycles", scope: !17479, file: !2501, line: 338, type: !152)
!17479 = distinct !DILexicalBlock(scope: !17480, file: !2501, line: 337, column: 11)
!17480 = distinct !DILexicalBlock(scope: !17481, file: !2501, line: 337, column: 2)
!17481 = distinct !DILexicalBlock(scope: !17473, file: !2501, line: 337, column: 2)
!17482 = !DILocation(line: 0, scope: !17473)
!17483 = !DILocation(line: 322, column: 19, scope: !17484)
!17484 = distinct !DILexicalBlock(scope: !17473, file: !2501, line: 322, column: 6)
!17485 = !DILocation(line: 322, column: 6, scope: !17473)
!17486 = !DILocation(line: 328, column: 26, scope: !17473)
!17487 = !DILocation(line: 333, column: 43, scope: !17473)
!17488 = !DILocation(line: 337, column: 2, scope: !17473)
!17489 = !DILocation(line: 338, column: 29, scope: !17479)
!17490 = !DILocation(line: 0, scope: !17479)
!17491 = !DILocation(line: 341, column: 23, scope: !17492)
!17492 = distinct !DILexicalBlock(scope: !17479, file: !2501, line: 341, column: 7)
!17493 = !DILocation(line: 341, column: 39, scope: !17492)
!17494 = !DILocation(line: 349, column: 1, scope: !17473)
!17495 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6340, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2166)
!17496 = !DILocation(line: 1677, column: 9, scope: !17495)
!17497 = !DILocation(line: 1677, column: 2, scope: !17495)
!17498 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8753, file: !8753, line: 24, type: !6340, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2166)
!17499 = !DILocation(line: 26, column: 9, scope: !17498)
!17500 = !DILocation(line: 26, column: 2, scope: !17498)
!17501 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2501, file: !2501, line: 364, type: !17502, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17504)
!17502 = !DISubroutineType(types: !17503)
!17503 = !{!566, !16839}
!17504 = !{!17505, !17506}
!17505 = !DILocalVariable(name: "timeout", arg: 1, scope: !17501, file: !2501, line: 364, type: !16839)
!17506 = !DILocalVariable(name: "dt", scope: !17501, file: !2501, line: 366, type: !564)
!17507 = !DILocation(line: 0, scope: !17501)
!17508 = !DILocation(line: 368, column: 6, scope: !17501)
!17509 = !DILocation(line: 371, column: 10, scope: !17510)
!17510 = distinct !DILexicalBlock(scope: !17511, file: !2501, line: 370, column: 47)
!17511 = distinct !DILexicalBlock(scope: !17512, file: !2501, line: 370, column: 13)
!17512 = distinct !DILexicalBlock(scope: !17501, file: !2501, line: 368, column: 6)
!17513 = !DILocation(line: 371, column: 3, scope: !17510)
!17514 = !DILocation(line: 376, column: 58, scope: !17515)
!17515 = distinct !DILexicalBlock(scope: !17516, file: !2501, line: 376, column: 7)
!17516 = distinct !DILexicalBlock(scope: !17511, file: !2501, line: 372, column: 9)
!17517 = !DILocation(line: 376, column: 7, scope: !17516)
!17518 = !DILocation(line: 376, column: 43, scope: !17515)
!17519 = !DILocation(line: 377, column: 4, scope: !17520)
!17520 = distinct !DILexicalBlock(scope: !17515, file: !2501, line: 376, column: 64)
!17521 = !DILocation(line: 379, column: 10, scope: !17516)
!17522 = !DILocation(line: 379, column: 33, scope: !17516)
!17523 = !DILocation(line: 379, column: 31, scope: !17516)
!17524 = !DILocation(line: 379, column: 3, scope: !17516)
!17525 = !DILocation(line: 0, scope: !17512)
!17526 = !DILocation(line: 381, column: 1, scope: !17501)
!17527 = distinct !DISubprogram(name: "boot_banner", scope: !17528, file: !17528, line: 26, type: !3089, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !2166)
!17528 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17529 = !DILocation(line: 34, column: 2, scope: !17527)
!17530 = !DILocation(line: 36, column: 1, scope: !17527)
